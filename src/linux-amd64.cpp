// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 26/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <pthread.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _1c7ec7cde_acceptRange;
struct _20a2dca72_LittleEndian;
struct _20a2e302d_u128;
struct _1b4d1aeca_group;
struct _1b4d6681c_group;
struct _1b4d18b87__Map;
struct _1b4d646d8__Map;
struct _1b4d25413_mapIterator;
struct _1b4d6dcb9_mapIterator;
struct _1b0921398_foldPair;
struct _1b0921893_CaseRange;
struct _1b0921d49_Range16;
struct _1b0922377_Range32;
struct _1b09227ea_RangeTable;
struct _1b097ade7_StrBuilder;
struct _1b09878c6_lazyBuff;
struct _1ae66a753_DirEntry;
struct _1ae66a9d9_Directory;
struct _1ae66c623_File;
struct _1ae66e713_Status;
struct _1b03959cc_cmdAttrs;
struct _1b08b6838_Log;
struct _1a9d36dd0_floatInfo;
struct _1a9d37a5c_decimalSlice;
struct _1aa1161ae_leftCheat;
struct _1aa116bc6_decimal;
struct _1aa1293c0_Const;
struct _1ac4912c3_Token;
struct _1ac496a59_File;
struct _1ac498bb0_kindPair;
struct _1ac49eb94_lex;
struct _1ac4a4869_AST;
struct _1ac4a577c_Node;
struct _1ac4a5b9a_Directive;
struct _1ac4a677d_TypeDecl;
struct _1ac4a6d88_IdentTypeDecl;
struct _1ac4a7152_SubIdentTypeDecl;
struct _1ac4a752b_NamespaceTypeDecl;
struct _1ac4a7828_SptrTypeDecl;
struct _1ac4a7bad_SlcTypeDecl;
struct _1ac4a7eaa_TupleTypeDecl;
struct _1ac4a82a7_PtrTypeDecl;
struct _1ac4a8a49_ArrTypeDecl;
struct _1ac4a9297_MapTypeDecl;
struct _1ac4a9671_RetTypeDecl;
struct _1ac4aaab2_Expr;
struct _1ac4aad7b_RangeExpr;
struct _1ac4ab486_UseExpr;
struct _1ac4ab6a6_TupleExpr;
struct _1ac4aba4c_LitExpr;
struct _1ac4abe26_UnsafeExpr;
struct _1ac4ac3cc_IdentExpr;
struct _1ac4acb6e_UnaryExpr;
struct _1ac4ad048_VariadicExpr;
struct _1ac4ad422_CastExpr;
struct _1ac4ad7eb_NsSelectionExpr;
struct _1ac4adbc5_SubIdentExpr;
struct _1ac4ae17b_BinaryExpr;
struct _1ac4ae7db_FnCallExpr;
struct _1ac4b02d1_FieldExprPair;
struct _1ac4b0b0b_StructLit;
struct _1ac4b10b2_BraceLit;
struct _1ac4b18dc_KeyValPair;
struct _1ac4b2118_SliceExpr;
struct _1ac4b2a75_IndexingExpr;
struct _1ac4b31d5_SlicingExpr;
struct _1ac4b34d2_Constraint;
struct _1ac4b3988_GenericDecl;
struct _1ac4b3d62_LabelSt;
struct _1ac4b423b_GotoSt;
struct _1ac4b4538_FallSt;
struct _1ac4b4b98_AssignLeft;
struct _1ac4b522b_AssignSt;
struct _1ac4b613e_Stmt;
struct _1ac4b679e_ScopeTree;
struct _1ac4b6edb_ParamDecl;
struct _1ac4b843d_FnDecl;
struct _1ac4b95e8_VarDecl;
struct _1ac4b99c2_RetSt;
struct _1ac4ba242_Iter;
struct _1ac4baa6c_WhileKind;
struct _1ac4bb474_RangeKind;
struct _1ac4bb84d_BreakSt;
struct _1ac4bbc27_ContSt;
struct _1ac4bc1cd_If;
struct _1ac4bc5a7_Else;
struct _1ac4bca5d_Conditional;
struct _1ac4bd29a_TypeAliasDecl;
struct _1ac4bd751_Case;
struct _1ac4be06a_MatchCase;
struct _1ac4be884_UseDecl;
struct _1ac4bed3a_EnumItemDecl;
struct _1ac4c08eb_EnumDecl;
struct _1ac4c1226_TypeEnumItemDecl;
struct _1ac4c1886_TypeEnumDecl;
struct _1ac4c1b50_FieldDecl;
struct _1ac4c2546_StructDecl;
struct _1ac4c2c83_TraitDecl;
struct _1ac4c33e3_Impl;
struct _1ac4c4757_Field;
struct _1ac4c676a_Operators;
struct _1ac4c767d_Struct;
struct _1ac4c9938_FieldIns;
struct _1ac4ca4d8_StructIns;
struct _1ac4ce300_OperandExprModel;
struct _1ac4ce7ea_BinaryExprModel;
struct _1ac4cebc4_UnaryExprModel;
struct _1ac4d0202_StructArgExprModel;
struct _1ac4d0598_StructLitExprModel;
struct _1ac4d0895_AllocStructLitExprModel;
struct _1ac4d0e28_CastingExprModel;
struct _1ac4d17ca_FnCallExprModel;
struct _1ac4d1ba4_SliceExprModel;
struct _1ac4d215a_IndexingExprModel;
struct _1ac4d2611_AnonFnExprModel;
struct _1ac4d29da_KeyValPairExprModel;
struct _1ac4d2db4_MapExprModel;
struct _1ac4d3447_SlicingExprModel;
struct _1ac4d39ca_TraitSubIdentExprModel;
struct _1ac4d436b_StructSubIdentExprModel;
struct _1ac4d4712_StructStaticIdentExprModel;
struct _1ac4d4adb_ArrayExprModel;
struct _1ac4d4dd8_TupleExprModel;
struct _1ac4d52b2_BuiltinOutCallExprModel;
struct _1ac4d568b_BuiltinOutlnCallExprModel;
struct _1ac4d5a65_BuiltinNewCallExprModel;
struct _1ac4d5e3e_BuiltinPanicCallExprModel;
struct _1ac4d63e5_BuiltinMakeCallExprModel;
struct _1ac4d67be_BuiltinAppendCallExprModel;
struct _1ac4d6abb_BuiltinLenCallExprModel;
struct _1ac4d6db8_BuiltinCapCallExprModel;
struct _1ac4d7292_BuiltinDeleteCallExprModel;
struct _1ac4d766b_BuiltinCopyCallExprModel;
struct _1ac4d7a45_BuiltinErrorCallExprModel;
struct _1ac4d7d42_SizeofExprModel;
struct _1ac4d84e6_AlignofExprModel;
struct _1ac4d86d3_RuneExprModel;
struct _1ac4d8a57_BackendEmitExprModel;
struct _1ac4d8d54_FreeExprModel;
struct _1ac4d9b57_RetType;
struct _1ac4da372_Param;
struct _1ac4dbd46_Fn;
struct _1ac4ddc9e_ParamIns;
struct _1ac4dee04_FnIns;
struct _1ac4e308e_ReferenceStack;
struct _1ac4e459b_Pass;
struct _1ac4e9051_symbolBuilder;
struct _1ac5008a4_Trait;
struct _1ac502543_EnumItem;
struct _1ac5030b0_Enum;
struct _1ac5041e3_TypeEnumItem;
struct _1ac5047ba_TypeEnum;
struct _1ac5071e6_comptimeRange;
struct _1ac507c52_comptimeStructField;
struct _1ac5094e5_comptimeStructFields;
struct _1ac50ae75_comptimeStatic;
struct _1ac50c729_comptimeStatics;
struct _1ac50e198_comptimeEnumField;
struct _1ac5104a7_comptimeEnumFields;
struct _1ac511eae_comptimeParam;
struct _1ac513d18_comptimeParams;
struct _1ac515677_comptimeTypeInfos;
struct _1ac5170e6_comptimeTypeInfo;
struct _1ac51d1eb_comptimeValue;
struct _1ac520e57_comptimeFiles;
struct _1ac5228c6_comptimeFile;
struct _1ac5244ee_comptimeDecls;
struct _1ac5267dc_comptimeDecl;
struct _1ac52d393_constraintChecker;
struct _1ac5306e7_Impl;
struct _1ac534ec1_Scope;
struct _1ac5353de_If;
struct _1ac5356db_Else;
struct _1ac535b09_Conditional;
struct _1ac535e06_InfIter;
struct _1ac5363ac_WhileIter;
struct _1ac536d08_RangeIter;
struct _1ac53718d_ContSt;
struct _1ac537567_BreakSt;
struct _1ac537a1d_Label;
struct _1ac53817d_GotoSt;
struct _1ac538557_Postfix;
struct _1ac538a0d_Assign;
struct _1ac538eb4_MultiAssign;
struct _1ac539701_Match;
struct _1ac53a229_Case;
struct _1ac53a922_FallSt;
struct _1ac53acb8_RetSt;
struct _1ac53b26e_scopeLabel;
struct _1ac53c25e_scopeChecker;
struct _1ac5511eb_directiveChecker;
struct _1ac557cd5_ImportInfo;
struct _1ac55ac0b_Package;
struct _1ac57762e_commonSemaMeta;
struct _1ac578256_sema;
struct _1ac59dd70_missingRetChecker;
struct _1ac5a2527_Var;
struct _1ac5a35b1_FuncPattern;
struct _1ac5e1ce7_typeCompatibilityChecker;
struct _1ac5e3b73_assignTypeChecker;
struct _1ac5e5548_dynamicTypeAnnotation;
struct _1ac5ea3a5_fnCallArgChecker;
struct _1ac5ed2dc_structLitChecker;
struct _1ac6000be_rangeChecker;
struct _1ac602830_retTypeChecker;
struct _1ac604d93_SymbolTable;
struct _1ac60a55d_Data;
struct _1ac60b6d5_Value;
struct _1ac60c285_eval;
struct _1ac62b57e_unaryEval;
struct _1ac62d51a_binaryEval;
struct _1ac63b902_InsGeneric;
struct _1ac63c4e6_TypeAlias;
struct _1ac63d2d8_TypeKind;
struct _1ac6459e9_TypeSymbol;
struct _1ac646401_Prim;
struct _1ac649e2c_Sptr;
struct _1ac64a900_Slc;
struct _1ac64b4e4_Tuple;
struct _1ac64c094_Map;
struct _1ac64cc21_Arr;
struct _1ac64d6e4_Ptr;
struct _1ac64e6e5_referencer;
struct _1ac6506d5_typeChecker;
struct _1ac658798_identTypeLookup;
struct _1ad20bd0c_FileInfo;
struct _1ad2578b3_stmt;
struct _1ad258254_scopeParser;
struct _1ad265bbd_exprBuilder;
struct _1ad2733d4_assignInfo;
struct _1ad2767d3_parser;
struct _1ad288905_typeBuilder;
struct _1ac97ac41_CompileInfo;
struct _1ac97c21a_directiveEval;
struct _1ad28c8e8_JuleImporter;
struct _1ad2941d5_ExprInspector;
struct _1ad29a708_OrderedDefines;
struct _1ad3d480e_specialCaseDefines;
struct _1ad3d5227_liveTable;
struct _1ad3d56cd_ObjectDeadCode;
struct _1ad3d9803_scopeDeadCode;
struct _1ad3dde9a_exprDeadCode;
struct _1ac738559_ExceptionalForwardingExprModel;
struct _1ac7388de_SwapExprModel;
struct _1ac738cb8_EmptyCompareExprModel;
struct _1ac73913c_RefExprModel;
struct _1ac7395b0_StrCompExprModel;
struct _1ac739b43_MutSlicingExprModel;
struct _1ac739e40_UnsafeBinaryExprModel;
struct _1ac73a2c5_UnsafeIndexingExprModel;
struct _1ac73a69e_PushToSliceExprModel;
struct _1ac73aa78_AppendToSliceExprModel;
struct _1ac73ae52_StrRuneIter;
struct _1ac73b24e_UnsafeDerefExprModel;
struct _1ac73b54b_UnsafeCastingExprModel;
struct _1ac73c22d_nilVar;
struct _1ac73c56e_nils;
struct _1ad29beac_scopeOptimizer;
struct _1ad2a39a8_exprOptimizer;
struct _1ad2a8d98_dynamicVar;
struct _1ad2a91d9_dynamic;
struct _1ad2abd68_data;
struct _1ad2ad4a7_boundaryVar;
struct _1ad2ad7e8_boundary;
struct _1ad3e00bc_Optimizer;
struct _1ad416577_AnsiEscape;
struct _1ad417b2d_Logger;
struct _1ae082ab6_AbsTime;
struct _1ae08328c_Time;
struct _1adea99ee_scopeCoder;
struct _1adeb62d0_exprCoder;
struct _1adec8a84_TestCoder;
struct _1adecba10_identCoder;
struct _1ae08cb9d_SerializationInfo;
struct _1ae08d0bb_traitCast;
struct _1ae08d495_anonHash;
struct _1ae08d819_metadata;
struct _1ae08ee9c_ObjectCoder;
struct _1ae09e396_customType;
struct _1ae09eece_typeCoder;
struct _1ae0a7ab9_resultCoder;
struct _1b55eb8cb_Flag;
struct _1b560056c_Flag;
struct _1b5603c79_Flag;
struct _1b56074ca_Flag;
struct _1b560abd7_Flag;
struct _1add23aee_FlagSet;
struct _1add265b3_argParser;
struct _1ad2ab86d_dataCheckpoint;
struct _1b0ad3ea6_Cmd;
struct _1ad29028b_IR;
struct _1c7ec7cde_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
	

};
inline jule::Bool _1c7ec7cde_acceptRange_eq(_1c7ec7cde_acceptRange *_self_, _1c7ec7cde_acceptRange _other_);


struct _20a2dca72_LittleEndian {
	

};
inline jule::Bool _20a2dca72_LittleEndian_eq(_20a2dca72_LittleEndian *_self_, _20a2dca72_LittleEndian _other_);


struct _20a2e302d_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
	

};
inline jule::Bool _20a2e302d_u128_eq(_20a2e302d_u128 *_self_, _20a2e302d_u128 _other_);


struct _1b4d1aeca_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
	

};
inline jule::Bool _1b4d1aeca_group_eq(_1b4d1aeca_group *_self_, _1b4d1aeca_group _other_);

struct _1b4d6681c_group {
	jule::Array<jule::Ptr<_1ac4dee04_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
	

};
struct _1b4d18b87__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1b4d1aeca_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};struct _1b4d646d8__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1b4d6681c_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};
struct _1b4d25413_mapIterator {
	jule::Ptr<_1b4d18b87__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1b4d1aeca_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};struct _1b4d6dcb9_mapIterator {
	jule::Ptr<_1b4d646d8__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1b4d6681c_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};
struct _1b0921398_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
	

};
inline jule::Bool _1b0921398_foldPair_eq(_1b0921398_foldPair *_self_, _1b0921398_foldPair _other_);


struct _1b0921893_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
	

};
inline jule::Bool _1b0921893_CaseRange_eq(_1b0921893_CaseRange *_self_, _1b0921893_CaseRange _other_);


struct _1b0921d49_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
	

};
inline jule::Bool _1b0921d49_Range16_eq(_1b0921d49_Range16 *_self_, _1b0921d49_Range16 _other_);


struct _1b0922377_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
	

};
inline jule::Bool _1b0922377_Range32_eq(_1b0922377_Range32 *_self_, _1b0922377_Range32 _other_);


struct _1b09227ea_RangeTable {
	jule::Slice<_1b0921d49_Range16> _field_R16;
	jule::Slice<_1b0922377_Range32> _field_R32;
	jule::I64 _field_LatinOffset;
	

};
struct _1b097ade7_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	

};
struct _1b09878c6_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen;
	

};
struct _1ae66a753_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_1ae66e713_Status> _field_Stat;
	

};
inline jule::Bool _1ae66a753_DirEntry_eq(_1ae66a753_DirEntry *_self_, _1ae66a753_DirEntry _other_);


struct _1ae66a9d9_Directory {
	

};
inline jule::Bool _1ae66a9d9_Directory_eq(_1ae66a9d9_Directory *_self_, _1ae66a9d9_Directory _other_);


struct _1ae66c623_File {
	jule::Uintptr _field_handle;
	

};
inline jule::Bool _1ae66c623_File_eq(_1ae66c623_File *_self_, _1ae66c623_File _other_);


struct _1ae66e713_Status {
	jule::I64 _field_mode;
	jule::U64 _field_size;
	

};
inline jule::Bool _1ae66e713_Status_eq(_1ae66e713_Status *_self_, _1ae66e713_Status _other_);


struct _1b03959cc_cmdAttrs {
	jule::I64 _field_pid;
	

};
inline jule::Bool _1b03959cc_cmdAttrs_eq(_1b03959cc_cmdAttrs *_self_, _1b03959cc_cmdAttrs _other_);


struct _1b08b6838_Log {
	jule::I64 _field_Kind;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

};
inline jule::Bool _1b08b6838_Log_eq(_1b08b6838_Log *_self_, _1b08b6838_Log _other_);


struct _1a9d36dd0_floatInfo {
	jule::U64 _field_mantbits;
	jule::U64 _field_expbits;
	jule::I64 _field_bias;
	

};
inline jule::Bool _1a9d36dd0_floatInfo_eq(_1a9d36dd0_floatInfo *_self_, _1a9d36dd0_floatInfo _other_);


struct _1a9d37a5c_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	

};
struct _1aa1161ae_leftCheat {
	jule::I64 _field_delta;
	jule::Str _field_cutoff;
	

};
inline jule::Bool _1aa1161ae_leftCheat_eq(_1aa1161ae_leftCheat *_self_, _1aa1161ae_leftCheat _other_);


struct _1aa116bc6_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
	

};
inline jule::Bool _1aa116bc6_decimal_eq(_1aa116bc6_decimal *_self_, _1aa116bc6_decimal _other_);


inline jule::Bool _1aa12eea8_Eq(_1aa1293c0_Const* _self_, _1aa1293c0_Const _26014_x);
inline jule::Bool _1aa1302e9_Lt(_1aa1293c0_Const* _self_, _1aa1293c0_Const _28714_x);
inline jule::Bool _1aa13063a_LtEq(_1aa1293c0_Const* _self_, _1aa1293c0_Const _31016_x);
inline jule::Bool _1aa13097b_Gt(_1aa1293c0_Const* _self_, _1aa1293c0_Const _33314_x);
inline jule::Bool _1aa130cbc_GtEq(_1aa1293c0_Const* _self_, _1aa1293c0_Const _35616_x);
struct _1aa1293c0_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

};
struct _1ac4912c3_Token {
	jule::Ptr<_1ac496a59_File> _field_File;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Kind;
	jule::U64 _field_Id;
	

};
inline jule::Bool _1ac4912c3_Token_eq(_1ac4912c3_Token *_self_, _1ac4912c3_Token _other_);


struct _1ac496a59_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_Tokens;
	

};
struct _1ac498bb0_kindPair {
	jule::Str _field_kind;
	jule::U64 _field_id;
	

};
inline jule::Bool _1ac498bb0_kindPair_eq(_1ac498bb0_kindPair *_self_, _1ac498bb0_kindPair _other_);


struct _1ac49eb94_lex {
	jule::I64 _field_mode;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_tokens;
	jule::Ptr<_1ac496a59_File> _field_file;
	jule::I64 _field_pos;
	jule::I64 _field_column;
	jule::I64 _field_row;
	jule::Slice<_1b08b6838_Log> _field_errors;
	

};
struct _1ac4a4869_AST {
	jule::Ptr<_1ac496a59_File> _field_File;
	jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1ac4be884_UseDecl>> _field_UseDecls;
	jule::Slice<_1ac4a577c_Node> _field_Nodes;
	

};
struct _1ac4a577c_Node {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1ac4a577c_Node_eq(_1ac4a577c_Node *_self_, _1ac4a577c_Node _other_);


struct _1ac4a5b9a_Directive {
	jule::Ptr<_1ac4912c3_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_Args;
	

};
struct _1ac4a677d_TypeDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1ac4a677d_TypeDecl_eq(_1ac4a677d_TypeDecl *_self_, _1ac4a677d_TypeDecl _other_);


struct _1ac4a6d88_IdentTypeDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _field_Generics;
	

};
struct _1ac4a7152_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1ac4a6d88_IdentTypeDecl>> _field_Idents;
	

};
struct _1ac4a752b_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_Idents;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Kind;
	

};
struct _1ac4a7828_SptrTypeDecl {
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1ac4a7828_SptrTypeDecl_eq(_1ac4a7828_SptrTypeDecl *_self_, _1ac4a7828_SptrTypeDecl _other_);


struct _1ac4a7bad_SlcTypeDecl {
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1ac4a7bad_SlcTypeDecl_eq(_1ac4a7bad_SlcTypeDecl *_self_, _1ac4a7bad_SlcTypeDecl _other_);


struct _1ac4a7eaa_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _field_Types;
	

};
struct _1ac4a82a7_PtrTypeDecl {
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1ac4a82a7_PtrTypeDecl_eq(_1ac4a82a7_PtrTypeDecl *_self_, _1ac4a82a7_PtrTypeDecl _other_);


struct _1ac4a8a49_ArrTypeDecl {
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Elem;
	jule::Ptr<_1ac4aaab2_Expr> _field_Size;
	

};
inline jule::Bool _1ac4a8a49_ArrTypeDecl_eq(_1ac4a8a49_ArrTypeDecl *_self_, _1ac4a8a49_ArrTypeDecl _other_);


struct _1ac4a9297_MapTypeDecl {
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Key;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Val;
	

};
inline jule::Bool _1ac4a9297_MapTypeDecl_eq(_1ac4a9297_MapTypeDecl *_self_, _1ac4a9297_MapTypeDecl _other_);


struct _1ac4a9671_RetTypeDecl {
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_Idents;
	

};
struct _1ac4aaab2_Expr {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1ac4aaab2_Expr_eq(_1ac4aaab2_Expr *_self_, _1ac4aaab2_Expr _other_);


struct _1ac4aad7b_RangeExpr {
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
inline jule::Bool _1ac4aad7b_RangeExpr_eq(_1ac4aad7b_RangeExpr *_self_, _1ac4aad7b_RangeExpr _other_);


struct _1ac4ab486_UseExpr {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
inline jule::Bool _1ac4ab486_UseExpr_eq(_1ac4ab486_UseExpr *_self_, _1ac4ab486_UseExpr _other_);


struct _1ac4ab6a6_TupleExpr {
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _field_Expr;
	

};
struct _1ac4aba4c_LitExpr {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Value;
	

};
inline jule::Bool _1ac4aba4c_LitExpr_eq(_1ac4aba4c_LitExpr *_self_, _1ac4aba4c_LitExpr _other_);


struct _1ac4abe26_UnsafeExpr {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
inline jule::Bool _1ac4abe26_UnsafeExpr_eq(_1ac4abe26_UnsafeExpr *_self_, _1ac4abe26_UnsafeExpr _other_);


struct _1ac4ac3cc_IdentExpr {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	

};
inline jule::Bool _1ac4ac3cc_IdentExpr_eq(_1ac4ac3cc_IdentExpr *_self_, _1ac4ac3cc_IdentExpr _other_);


struct _1ac4acb6e_UnaryExpr {
	jule::Ptr<_1ac4912c3_Token> _field_Op;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
inline jule::Bool _1ac4acb6e_UnaryExpr_eq(_1ac4acb6e_UnaryExpr *_self_, _1ac4acb6e_UnaryExpr _other_);


struct _1ac4ad048_VariadicExpr {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
inline jule::Bool _1ac4ad048_VariadicExpr_eq(_1ac4ad048_VariadicExpr *_self_, _1ac4ad048_VariadicExpr _other_);


struct _1ac4ad422_CastExpr {
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Kind;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
inline jule::Bool _1ac4ad422_CastExpr_eq(_1ac4ad422_CastExpr *_self_, _1ac4ad422_CastExpr _other_);


struct _1ac4ad7eb_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_Ns;
	jule::Ptr<_1ac4912c3_Token> _field_Ident;
	

};
struct _1ac4adbc5_SubIdentExpr {
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	jule::Ptr<_1ac4912c3_Token> _field_Ident;
	

};
inline jule::Bool _1ac4adbc5_SubIdentExpr_eq(_1ac4adbc5_SubIdentExpr *_self_, _1ac4adbc5_SubIdentExpr _other_);


struct _1ac4ae17b_BinaryExpr {
	jule::Ptr<_1ac4aaab2_Expr> _field_Left;
	jule::Ptr<_1ac4aaab2_Expr> _field_Right;
	jule::Ptr<_1ac4912c3_Token> _field_Op;
	

};
inline jule::Bool _1ac4ae17b_BinaryExpr_eq(_1ac4ae17b_BinaryExpr *_self_, _1ac4ae17b_BinaryExpr _other_);


struct _1ac4ae7db_FnCallExpr {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _field_Args;
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
	

};
struct _1ac4b02d1_FieldExprPair {
	jule::Ptr<_1ac4912c3_Token> _field_Field;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
inline jule::Bool _1ac4b02d1_FieldExprPair_eq(_1ac4b02d1_FieldExprPair *_self_, _1ac4b02d1_FieldExprPair _other_);


struct _1ac4b0b0b_StructLit {
	jule::Ptr<_1ac4912c3_Token> _field_End;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _field_Exprs;
	

};
struct _1ac4b10b2_BraceLit {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _field_Exprs;
	

};
struct _1ac4b18dc_KeyValPair {
	jule::Ptr<_1ac4aaab2_Expr> _field_Key;
	jule::Ptr<_1ac4aaab2_Expr> _field_Val;
	jule::Ptr<_1ac4912c3_Token> _field_Colon;
	

};
inline jule::Bool _1ac4b18dc_KeyValPair_eq(_1ac4b18dc_KeyValPair *_self_, _1ac4b18dc_KeyValPair _other_);


struct _1ac4b2118_SliceExpr {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _field_Exprs;
	

};
struct _1ac4b2a75_IndexingExpr {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	jule::Ptr<_1ac4aaab2_Expr> _field_Index;
	

};
inline jule::Bool _1ac4b2a75_IndexingExpr_eq(_1ac4b2a75_IndexingExpr *_self_, _1ac4b2a75_IndexingExpr _other_);


struct _1ac4b31d5_SlicingExpr {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	jule::Ptr<_1ac4aaab2_Expr> _field_Start;
	jule::Ptr<_1ac4aaab2_Expr> _field_To;
	

};
inline jule::Bool _1ac4b31d5_SlicingExpr_eq(_1ac4b31d5_SlicingExpr *_self_, _1ac4b31d5_SlicingExpr _other_);


struct _1ac4b34d2_Constraint {
	jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _field_Mask;
	

};
struct _1ac4b3988_GenericDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac4b34d2_Constraint> _field_Constraint;
	

};
inline jule::Bool _1ac4b3988_GenericDecl_eq(_1ac4b3988_GenericDecl *_self_, _1ac4b3988_GenericDecl _other_);


struct _1ac4b3d62_LabelSt {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1ac4b3d62_LabelSt_eq(_1ac4b3d62_LabelSt *_self_, _1ac4b3d62_LabelSt _other_);


struct _1ac4b423b_GotoSt {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_Label;
	

};
inline jule::Bool _1ac4b423b_GotoSt_eq(_1ac4b423b_GotoSt *_self_, _1ac4b423b_GotoSt _other_);


struct _1ac4b4538_FallSt {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	

};
inline jule::Bool _1ac4b4538_FallSt_eq(_1ac4b4538_FallSt *_self_, _1ac4b4538_FallSt _other_);


struct _1ac4b4b98_AssignLeft {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
inline jule::Bool _1ac4b4b98_AssignLeft_eq(_1ac4b4b98_AssignLeft *_self_, _1ac4b4b98_AssignLeft _other_);


struct _1ac4b522b_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1ac4912c3_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1ac4b4b98_AssignLeft>> _field_Left;
	jule::Ptr<_1ac4aaab2_Expr> _field_Right;
	

};
struct _1ac4b613e_Stmt {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1ac4b613e_Stmt_eq(_1ac4b613e_Stmt *_self_, _1ac4b613e_Stmt _other_);


struct _1ac4b679e_ScopeTree {
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1ac4b613e_Stmt> _field_Stmts;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	

};
struct _1ac4b6edb_ParamDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1ac4b6edb_ParamDecl_eq(_1ac4b6edb_ParamDecl *_self_, _1ac4b6edb_ParamDecl _other_);


struct _1ac4b843d_FnDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>> _field_Directives;
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _field_Generics;
	jule::Ptr<_1ac4a9671_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>> _field_Params;
	

};
struct _1ac4b95e8_VarDecl {
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Scope;
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>> _field_Directives;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Kind;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
struct _1ac4b99c2_RetSt {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
inline jule::Bool _1ac4b99c2_RetSt_eq(_1ac4b99c2_RetSt *_self_, _1ac4b99c2_RetSt _other_);


struct _1ac4ba242_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1ac4ba242_Iter_eq(_1ac4ba242_Iter *_self_, _1ac4ba242_Iter _other_);


struct _1ac4baa6c_WhileKind {
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1ac4912c3_Token> _field_NextToken;
	

};
inline jule::Bool _1ac4baa6c_WhileKind_eq(_1ac4baa6c_WhileKind *_self_, _1ac4baa6c_WhileKind _other_);


struct _1ac4bb474_RangeKind {
	jule::Ptr<_1ac4912c3_Token> _field_InToken;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	jule::Ptr<_1ac4b95e8_VarDecl> _field_KeyA;
	jule::Ptr<_1ac4b95e8_VarDecl> _field_KeyB;
	

};
inline jule::Bool _1ac4bb474_RangeKind_eq(_1ac4bb474_RangeKind *_self_, _1ac4bb474_RangeKind _other_);


struct _1ac4bb84d_BreakSt {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_Label;
	

};
inline jule::Bool _1ac4bb84d_BreakSt_eq(_1ac4bb84d_BreakSt *_self_, _1ac4bb84d_BreakSt _other_);


struct _1ac4bbc27_ContSt {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_Label;
	

};
inline jule::Bool _1ac4bbc27_ContSt_eq(_1ac4bbc27_ContSt *_self_, _1ac4bbc27_ContSt _other_);


struct _1ac4bc1cd_If {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1ac4bc1cd_If_eq(_1ac4bc1cd_If *_self_, _1ac4bc1cd_If _other_);


struct _1ac4bc5a7_Else {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1ac4bc5a7_Else_eq(_1ac4bc5a7_Else *_self_, _1ac4bc5a7_Else _other_);


struct _1ac4bca5d_Conditional {
	jule::Ptr<_1ac4bc1cd_If> _field_Head;
	jule::Slice<jule::Ptr<_1ac4bc1cd_If>> _field_Tail;
	jule::Ptr<_1ac4bc5a7_Else> _field_Default;
	

};
struct _1ac4bd29a_TypeAliasDecl {
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1ac4bd29a_TypeAliasDecl_eq(_1ac4bd29a_TypeAliasDecl *_self_, _1ac4bd29a_TypeAliasDecl _other_);


struct _1ac4bd751_Case {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _field_Exprs;
	

};
struct _1ac4be06a_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ac4bd751_Case>> _field_Cases;
	jule::Ptr<_1ac4bc5a7_Else> _field_Default;
	

};
struct _1ac4be884_UseDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_Selected;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	

};
struct _1ac4bed3a_EnumItemDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	

};
inline jule::Bool _1ac4bed3a_EnumItemDecl_eq(_1ac4bed3a_EnumItemDecl *_self_, _1ac4bed3a_EnumItemDecl _other_);


struct _1ac4c08eb_EnumDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ac4bed3a_EnumItemDecl>> _field_Items;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	

};
struct _1ac4c1226_TypeEnumItemDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1ac4c1226_TypeEnumItemDecl_eq(_1ac4c1226_TypeEnumItemDecl *_self_, _1ac4c1226_TypeEnumItemDecl _other_);


struct _1ac4c1886_TypeEnumDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac4c1226_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	

};
struct _1ac4c1b50_FieldDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Kind;
	jule::Ptr<_1ac4aaab2_Expr> _field_Default;
	

};
inline jule::Bool _1ac4c1b50_FieldDecl_eq(_1ac4c1b50_FieldDecl *_self_, _1ac4c1b50_FieldDecl _other_);


struct _1ac4c2546_StructDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac4c1b50_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _field_Generics;
	

};
struct _1ac4c2c83_TraitDecl {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4912c3_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ac4b843d_FnDecl>> _field_Methods;
	

};
struct _1ac4c33e3_Impl {
	jule::Ptr<_1ac4912c3_Token> _field_End;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Base;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ac4b843d_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1ac4b95e8_VarDecl>> _field_Statics;
	

};
struct _1ac4c4757_Field {
	jule::Ptr<_1ac4c767d_Struct> _field_Owner;
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6459e9_TypeSymbol> _field_Kind;
	jule::Ptr<_1ac4aaab2_Expr> _field_Default;
	

};
inline jule::Bool _1ac4c4757_Field_eq(_1ac4c4757_Field *_self_, _1ac4c4757_Field _other_);


struct _1ac4c676a_Operators {
	jule::Ptr<_1ac4dee04_FnIns> _field_Eq;
	jule::Ptr<_1ac4dee04_FnIns> _field_Gt;
	jule::Ptr<_1ac4dee04_FnIns> _field_GtEq;
	jule::Ptr<_1ac4dee04_FnIns> _field_Lt;
	jule::Ptr<_1ac4dee04_FnIns> _field_LtEq;
	jule::Ptr<_1ac4dee04_FnIns> _field_Shl;
	jule::Ptr<_1ac4dee04_FnIns> _field_Shr;
	jule::Ptr<_1ac4dee04_FnIns> _field_Add;
	jule::Ptr<_1ac4dee04_FnIns> _field_Sub;
	jule::Ptr<_1ac4dee04_FnIns> _field_Div;
	jule::Ptr<_1ac4dee04_FnIns> _field_Mul;
	jule::Ptr<_1ac4dee04_FnIns> _field_Mod;
	jule::Ptr<_1ac4dee04_FnIns> _field_BitAnd;
	jule::Ptr<_1ac4dee04_FnIns> _field_BitOr;
	jule::Ptr<_1ac4dee04_FnIns> _field_BitXor;
	jule::Ptr<_1ac4dee04_FnIns> _field_Neg;
	jule::Ptr<_1ac4dee04_FnIns> _field_Pos;
	jule::Ptr<_1ac4dee04_FnIns> _field_BitNot;
	jule::Ptr<_1ac4dee04_FnIns> _field_AddAssign;
	jule::Ptr<_1ac4dee04_FnIns> _field_SubAssign;
	jule::Ptr<_1ac4dee04_FnIns> _field_DivAssign;
	jule::Ptr<_1ac4dee04_FnIns> _field_MulAssign;
	jule::Ptr<_1ac4dee04_FnIns> _field_ModAssign;
	jule::Ptr<_1ac4dee04_FnIns> _field_ShlAssign;
	jule::Ptr<_1ac4dee04_FnIns> _field_ShrAssign;
	jule::Ptr<_1ac4dee04_FnIns> _field_BitOrAssign;
	jule::Ptr<_1ac4dee04_FnIns> _field_BitAndAssign;
	jule::Ptr<_1ac4dee04_FnIns> _field_BitXorAssign;
	

};
inline jule::Bool _1ac4c676a_Operators_eq(_1ac4c676a_Operators *_self_, _1ac4c676a_Operators _other_);


struct _1ac4c767d_Struct {
	jule::Ptr<_1ac578256_sema> _field_sema;
	jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _field_Uses;
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac4c4757_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1ac4dbd46_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1ac5008a4_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1ac4ca4d8_StructIns>> _field_Instances;
	

};
struct _1ac4c9938_FieldIns {
	jule::Ptr<_1ac4ca4d8_StructIns> _field_Owner;
	jule::Ptr<_1ac4c4757_Field> _field_Decl;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Kind;
	jule::Ptr<_1ac60a55d_Data> _field_Default;
	

};
inline jule::Bool _1ac4c9938_FieldIns_eq(_1ac4c9938_FieldIns *_self_, _1ac4c9938_FieldIns _other_);


struct _1ac4ca4d8_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1ac4c767d_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ac4c9938_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1ac4dbd46_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1ac4e308e_ReferenceStack> _field_Refers;
	_1ac4c676a_Operators _field_Operators;
	

};
struct _1ac4ce300_OperandExprModel {
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Kind;
	jule::Any _field_Model;
	

};
inline jule::Bool _1ac4ce300_OperandExprModel_eq(_1ac4ce300_OperandExprModel *_self_, _1ac4ce300_OperandExprModel _other_);


struct _1ac4ce7ea_BinaryExprModel {
	jule::Ptr<_1ac4ce300_OperandExprModel> _field_Left;
	jule::Ptr<_1ac4ce300_OperandExprModel> _field_Right;
	jule::Ptr<_1ac4912c3_Token> _field_Op;
	

};
inline jule::Bool _1ac4ce7ea_BinaryExprModel_eq(_1ac4ce7ea_BinaryExprModel *_self_, _1ac4ce7ea_BinaryExprModel _other_);


struct _1ac4cebc4_UnaryExprModel {
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	jule::Ptr<_1ac4912c3_Token> _field_Op;
	

};
inline jule::Bool _1ac4cebc4_UnaryExprModel_eq(_1ac4cebc4_UnaryExprModel *_self_, _1ac4cebc4_UnaryExprModel _other_);


struct _1ac4d0202_StructArgExprModel {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4c9938_FieldIns> _field_Field;
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	

};
inline jule::Bool _1ac4d0202_StructArgExprModel_eq(_1ac4d0202_StructArgExprModel *_self_, _1ac4d0202_StructArgExprModel _other_);


struct _1ac4d0598_StructLitExprModel {
	jule::Ptr<_1ac4ca4d8_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1ac4d0202_StructArgExprModel>> _field_Args;
	

};
struct _1ac4d0895_AllocStructLitExprModel {
	jule::Ptr<_1ac4d0598_StructLitExprModel> _field_Lit;
	

};
inline jule::Bool _1ac4d0895_AllocStructLitExprModel_eq(_1ac4d0895_AllocStructLitExprModel *_self_, _1ac4d0895_AllocStructLitExprModel _other_);


struct _1ac4d0e28_CastingExprModel {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Kind;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_ExprKind;
	

};
inline jule::Bool _1ac4d0e28_CastingExprModel_eq(_1ac4d0e28_CastingExprModel *_self_, _1ac4d0e28_CastingExprModel _other_);


struct _1ac4d17ca_FnCallExprModel {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac4dee04_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1ac534ec1_Scope> _field_Except;
	jule::Bool _field_Assigned;
	

};
struct _1ac4d1ba4_SliceExprModel {
	jule::Ptr<_1ac63d2d8_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1ac4d215a_IndexingExprModel {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	jule::Ptr<_1ac60a55d_Data> _field_Index;
	

};
inline jule::Bool _1ac4d215a_IndexingExprModel_eq(_1ac4d215a_IndexingExprModel *_self_, _1ac4d215a_IndexingExprModel _other_);


struct _1ac4d2611_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _field_Captured;
	jule::Ptr<_1ac4dee04_FnIns> _field_Func;
	jule::Bool _field_Global;
	

};
struct _1ac4d29da_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
	

};
inline jule::Bool _1ac4d29da_KeyValPairExprModel_eq(_1ac4d29da_KeyValPairExprModel *_self_, _1ac4d29da_KeyValPairExprModel _other_);


struct _1ac4d2db4_MapExprModel {
	jule::Ptr<_1ac64c094_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1ac4d29da_KeyValPairExprModel>> _field_Entries;
	

};
struct _1ac4d3447_SlicingExprModel {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1ac4d3447_SlicingExprModel_eq(_1ac4d3447_SlicingExprModel *_self_, _1ac4d3447_SlicingExprModel _other_);


struct _1ac4d39ca_TraitSubIdentExprModel {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1ac4dbd46_Fn> _field_Method;
	jule::Ptr<_1ac5008a4_Trait> _field_Trt;
	

};
inline jule::Bool _1ac4d39ca_TraitSubIdentExprModel_eq(_1ac4d39ca_TraitSubIdentExprModel *_self_, _1ac4d39ca_TraitSubIdentExprModel _other_);


struct _1ac4d436b_StructSubIdentExprModel {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	jule::Ptr<_1ac4dee04_FnIns> _field_Method;
	jule::Ptr<_1ac4c9938_FieldIns> _field_Field;
	jule::Ptr<_1ac4ca4d8_StructIns> _field_Owner;
	

};
inline jule::Bool _1ac4d436b_StructSubIdentExprModel_eq(_1ac4d436b_StructSubIdentExprModel *_self_, _1ac4d436b_StructSubIdentExprModel _other_);


struct _1ac4d4712_StructStaticIdentExprModel {
	jule::Ptr<_1ac4ca4d8_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1ac4dee04_FnIns> _field_Method;
	

};
inline jule::Bool _1ac4d4712_StructStaticIdentExprModel_eq(_1ac4d4712_StructStaticIdentExprModel *_self_, _1ac4d4712_StructStaticIdentExprModel _other_);


struct _1ac4d4adb_ArrayExprModel {
	jule::Ptr<_1ac64cc21_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1ac4d4dd8_TupleExprModel {
	jule::Slice<jule::Ptr<_1ac60a55d_Data>> _field_Datas;
	

};
struct _1ac4d52b2_BuiltinOutCallExprModel {
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1ac4d52b2_BuiltinOutCallExprModel_eq(_1ac4d52b2_BuiltinOutCallExprModel *_self_, _1ac4d52b2_BuiltinOutCallExprModel _other_);


struct _1ac4d568b_BuiltinOutlnCallExprModel {
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1ac4d568b_BuiltinOutlnCallExprModel_eq(_1ac4d568b_BuiltinOutlnCallExprModel *_self_, _1ac4d568b_BuiltinOutlnCallExprModel _other_);


struct _1ac4d5a65_BuiltinNewCallExprModel {
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Kind;
	jule::Any _field_Init;
	

};
inline jule::Bool _1ac4d5a65_BuiltinNewCallExprModel_eq(_1ac4d5a65_BuiltinNewCallExprModel *_self_, _1ac4d5a65_BuiltinNewCallExprModel _other_);


struct _1ac4d5e3e_BuiltinPanicCallExprModel {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1ac4d5e3e_BuiltinPanicCallExprModel_eq(_1ac4d5e3e_BuiltinPanicCallExprModel *_self_, _1ac4d5e3e_BuiltinPanicCallExprModel _other_);


struct _1ac4d63e5_BuiltinMakeCallExprModel {
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Kind;
	jule::Any _field_Len;
	jule::Any _field_Cap;
	

};
inline jule::Bool _1ac4d63e5_BuiltinMakeCallExprModel_eq(_1ac4d63e5_BuiltinMakeCallExprModel *_self_, _1ac4d63e5_BuiltinMakeCallExprModel _other_);


struct _1ac4d67be_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
	

};
inline jule::Bool _1ac4d67be_BuiltinAppendCallExprModel_eq(_1ac4d67be_BuiltinAppendCallExprModel *_self_, _1ac4d67be_BuiltinAppendCallExprModel _other_);


struct _1ac4d6abb_BuiltinLenCallExprModel {
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	

};
inline jule::Bool _1ac4d6abb_BuiltinLenCallExprModel_eq(_1ac4d6abb_BuiltinLenCallExprModel *_self_, _1ac4d6abb_BuiltinLenCallExprModel _other_);


struct _1ac4d6db8_BuiltinCapCallExprModel {
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	

};
inline jule::Bool _1ac4d6db8_BuiltinCapCallExprModel_eq(_1ac4d6db8_BuiltinCapCallExprModel *_self_, _1ac4d6db8_BuiltinCapCallExprModel _other_);


struct _1ac4d7292_BuiltinDeleteCallExprModel {
	jule::Ptr<_1ac60a55d_Data> _field_Dest;
	jule::Ptr<_1ac60a55d_Data> _field_Key;
	

};
inline jule::Bool _1ac4d7292_BuiltinDeleteCallExprModel_eq(_1ac4d7292_BuiltinDeleteCallExprModel *_self_, _1ac4d7292_BuiltinDeleteCallExprModel _other_);


struct _1ac4d766b_BuiltinCopyCallExprModel {
	jule::Ptr<_1ac60a55d_Data> _field_Dest;
	jule::Ptr<_1ac60a55d_Data> _field_Src;
	

};
inline jule::Bool _1ac4d766b_BuiltinCopyCallExprModel_eq(_1ac4d766b_BuiltinCopyCallExprModel *_self_, _1ac4d766b_BuiltinCopyCallExprModel _other_);


struct _1ac4d7a45_BuiltinErrorCallExprModel {
	jule::Ptr<_1ac4dee04_FnIns> _field_Func;
	jule::Ptr<_1ac60a55d_Data> _field_Err;
	

};
inline jule::Bool _1ac4d7a45_BuiltinErrorCallExprModel_eq(_1ac4d7a45_BuiltinErrorCallExprModel *_self_, _1ac4d7a45_BuiltinErrorCallExprModel _other_);


struct _1ac4d7d42_SizeofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1ac4d7d42_SizeofExprModel_eq(_1ac4d7d42_SizeofExprModel *_self_, _1ac4d7d42_SizeofExprModel _other_);


struct _1ac4d84e6_AlignofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1ac4d84e6_AlignofExprModel_eq(_1ac4d84e6_AlignofExprModel *_self_, _1ac4d84e6_AlignofExprModel _other_);


struct _1ac4d86d3_RuneExprModel {
	jule::I32 _field_Code;
	

};
inline jule::Bool _1ac4d86d3_RuneExprModel_eq(_1ac4d86d3_RuneExprModel *_self_, _1ac4d86d3_RuneExprModel _other_);


struct _1ac4d8a57_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

};
struct _1ac4d8d54_FreeExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1ac4d8d54_FreeExprModel_eq(_1ac4d8d54_FreeExprModel *_self_, _1ac4d8d54_FreeExprModel _other_);


struct _1ac4d9b57_RetType {
	jule::Ptr<_1ac6459e9_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_Idents;
	

};
struct _1ac4da372_Param {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1ac6459e9_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1ac4da372_Param_eq(_1ac4da372_Param *_self_, _1ac4da372_Param _other_);


struct _1ac4dbd46_Fn {
	jule::Ptr<_1ac578256_sema> _field_sema;
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>> _field_Directives;
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _field_Generics;
	jule::Ptr<_1ac4d9b57_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1ac4da372_Param>> _field_Params;
	jule::Ptr<_1ac4c767d_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1ac4dee04_FnIns>> _field_Instances;
	

};
struct _1ac4ddc9e_ParamIns {
	jule::Ptr<_1ac4da372_Param> _field_Decl;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Kind;
	

};
inline jule::Bool _1ac4ddc9e_ParamIns_eq(_1ac4ddc9e_ParamIns *_self_, _1ac4ddc9e_ParamIns _other_);


struct _1ac4dee04_FnIns {
	jule::Ptr<_1ac4ca4d8_StructIns> _field_Owner;
	jule::Ptr<_1ac4dbd46_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>> _field_Params;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Result;
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	jule::Ptr<_1ac4e308e_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*> _field_caller;
	jule::Bool _field_reloaded;
	

};
struct _1ac4e308e_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

};
struct _1ac4e459b_Pass {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Text;
	

};
inline jule::Bool _1ac4e459b_Pass_eq(_1ac4e459b_Pass *_self_, _1ac4e459b_Pass _other_);


struct _1ac4e9051_symbolBuilder {
	jule::Ptr<_1ac4e9051_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1b08b6838_Log> _field_errors;
	jule::Ptr<_1ac4a4869_AST> _field_ast;
	jule::Ptr<_1ac604d93_SymbolTable> _field_table;
	

};
struct _1ac5008a4_Trait {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1ac6459e9_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ac4dbd46_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _field_Implemented;
	

};
struct _1ac502543_EnumItem {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac60b6d5_Value> _field_Value;
	

};
inline jule::Bool _1ac502543_EnumItem_eq(_1ac502543_EnumItem *_self_, _1ac502543_EnumItem _other_);


struct _1ac5030b0_Enum {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6459e9_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ac502543_EnumItem>> _field_Items;
	

};
struct _1ac5041e3_TypeEnumItem {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6459e9_TypeSymbol> _field_Kind;
	

};
inline jule::Bool _1ac5041e3_TypeEnumItem_eq(_1ac5041e3_TypeEnumItem *_self_, _1ac5041e3_TypeEnumItem _other_);


struct _1ac5047ba_TypeEnum {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac5041e3_TypeEnumItem>> _field_Items;
	

};
struct _1ac5071e6_comptimeRange {
	jule::Trait _field_kind;
	

};
inline jule::Bool _1ac5071e6_comptimeRange_eq(_1ac5071e6_comptimeRange *_self_, _1ac5071e6_comptimeRange _other_);


struct _1ac507c52_comptimeStructField {
	jule::Ptr<_1ac4c9938_FieldIns> _field_field;
	

};
inline jule::Bool _1ac507c52_comptimeStructField_eq(_1ac507c52_comptimeStructField *_self_, _1ac507c52_comptimeStructField _other_);


struct _1ac5094e5_comptimeStructFields {
	jule::Slice<jule::Ptr<_1ac4c9938_FieldIns>> _field_fields;
	

};
struct _1ac50ae75_comptimeStatic {
	jule::Ptr<_1ac5a2527_Var> _field_field;
	

};
inline jule::Bool _1ac50ae75_comptimeStatic_eq(_1ac50ae75_comptimeStatic *_self_, _1ac50ae75_comptimeStatic _other_);


struct _1ac50c729_comptimeStatics {
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _field_fields;
	

};
struct _1ac50e198_comptimeEnumField {
	jule::Ptr<_1ac502543_EnumItem> _field_field;
	

};
inline jule::Bool _1ac50e198_comptimeEnumField_eq(_1ac50e198_comptimeEnumField *_self_, _1ac50e198_comptimeEnumField _other_);


struct _1ac5104a7_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1ac502543_EnumItem>> _field_fields;
	

};
struct _1ac511eae_comptimeParam {
	jule::Ptr<_1ac4ddc9e_ParamIns> _field_param;
	

};
inline jule::Bool _1ac511eae_comptimeParam_eq(_1ac511eae_comptimeParam *_self_, _1ac511eae_comptimeParam _other_);


struct _1ac513d18_comptimeParams {
	jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>> _field_params;
	

};
struct _1ac515677_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1ac5170e6_comptimeTypeInfo>> _field_types;
	

};
struct _1ac5170e6_comptimeTypeInfo {
	jule::Ptr<_1ac63d2d8_TypeKind> _field_base;
	

};
inline jule::Bool _1ac5170e6_comptimeTypeInfo_eq(_1ac5170e6_comptimeTypeInfo *_self_, _1ac5170e6_comptimeTypeInfo _other_);


struct _1ac51d1eb_comptimeValue {
	jule::Ptr<_1ac60a55d_Data> _field_data;
	

};
inline jule::Bool _1ac51d1eb_comptimeValue_eq(_1ac51d1eb_comptimeValue *_self_, _1ac51d1eb_comptimeValue _other_);


struct _1ac520e57_comptimeFiles {
	jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>> _field_files;
	

};
struct _1ac5228c6_comptimeFile {
	jule::Ptr<_1ac604d93_SymbolTable> _field_file;
	

};
inline jule::Bool _1ac5228c6_comptimeFile_eq(_1ac5228c6_comptimeFile *_self_, _1ac5228c6_comptimeFile _other_);


struct _1ac5244ee_comptimeDecls {
	jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>> _field_decls;
	

};
struct _1ac5267dc_comptimeDecl {
	jule::Any _field_decl;
	

};
inline jule::Bool _1ac5267dc_comptimeDecl_eq(_1ac5267dc_comptimeDecl *_self_, _1ac5267dc_comptimeDecl _other_);


struct _1ac52d393_constraintChecker {
	jule::Ptr<_1ac578256_sema> _field_s;
	jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _field_genericsA;
	jule::Ptr<_1ac4dee04_FnIns> _field_fi;
	jule::Ptr<_1ac4ca4d8_StructIns> _field_si;
	jule::Ptr<_1ac4912c3_Token> _field_et;
	jule::Bool _field_uniq;
	

};
struct _1ac5306e7_Impl {
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Base;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ac4dbd46_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _field_Statics;
	

};
struct _1ac534ec1_Scope {
	jule::Ptr<_1ac534ec1_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I64 _field_ChildIndex;
	jule::I64 _field_StmtIndex;
	

};
struct _1ac5353de_If {
	jule::Any _field_Expr;
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	

};
inline jule::Bool _1ac5353de_If_eq(_1ac5353de_If *_self_, _1ac5353de_If _other_);


struct _1ac5356db_Else {
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	

};
inline jule::Bool _1ac5356db_Else_eq(_1ac5356db_Else *_self_, _1ac5356db_Else _other_);


struct _1ac535b09_Conditional {
	jule::Slice<jule::Ptr<_1ac5353de_If>> _field_Elifs;
	jule::Ptr<_1ac5356db_Else> _field_Default;
	

};
struct _1ac535e06_InfIter {
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	

};
inline jule::Bool _1ac535e06_InfIter_eq(_1ac535e06_InfIter *_self_, _1ac535e06_InfIter _other_);


struct _1ac5363ac_WhileIter {
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
	

};
inline jule::Bool _1ac5363ac_WhileIter_eq(_1ac5363ac_WhileIter *_self_, _1ac5363ac_WhileIter _other_);


struct _1ac536d08_RangeIter {
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	jule::Ptr<_1ac5a2527_Var> _field_KeyA;
	jule::Ptr<_1ac5a2527_Var> _field_KeyB;
	

};
inline jule::Bool _1ac536d08_RangeIter_eq(_1ac536d08_RangeIter *_self_, _1ac536d08_RangeIter _other_);


struct _1ac53718d_ContSt {
	jule::Uintptr _field_It;
	

};
inline jule::Bool _1ac53718d_ContSt_eq(_1ac53718d_ContSt *_self_, _1ac53718d_ContSt _other_);


struct _1ac537567_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
	

};
inline jule::Bool _1ac537567_BreakSt_eq(_1ac537567_BreakSt *_self_, _1ac537567_BreakSt _other_);


struct _1ac537a1d_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1ac537a1d_Label_eq(_1ac537a1d_Label *_self_, _1ac537a1d_Label _other_);


struct _1ac53817d_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Ptr<_1ac537a1d_Label> _field_Label;
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1ac53817d_GotoSt_eq(_1ac53817d_GotoSt *_self_, _1ac53817d_GotoSt _other_);


struct _1ac538557_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
	

};
inline jule::Bool _1ac538557_Postfix_eq(_1ac538557_Postfix *_self_, _1ac538557_Postfix _other_);


struct _1ac538a0d_Assign {
	jule::Ptr<_1ac4ce300_OperandExprModel> _field_Left;
	jule::Ptr<_1ac4ce300_OperandExprModel> _field_Right;
	jule::Ptr<_1ac4912c3_Token> _field_Op;
	

};
inline jule::Bool _1ac538a0d_Assign_eq(_1ac538a0d_Assign *_self_, _1ac538a0d_Assign _other_);


struct _1ac538eb4_MultiAssign {
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1ac60a55d_Data>> _field_Left;
	jule::Any _field_Right;
	

};
struct _1ac539701_Match {
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1ac53a229_Case>> _field_Cases;
	jule::Ptr<_1ac53a229_Case> _field_Default;
	

};
struct _1ac53a229_Case {
	jule::Ptr<_1ac539701_Match> _field_Owner;
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1ac60a55d_Data>> _field_Exprs;
	jule::Ptr<_1ac53a229_Case> _field_Next;
	

};
struct _1ac53a922_FallSt {
	jule::Uintptr _field_DestCase;
	

};
inline jule::Bool _1ac53a922_FallSt_eq(_1ac53a922_FallSt *_self_, _1ac53a922_FallSt _other_);


struct _1ac53acb8_RetSt {
	jule::Ptr<_1ac4dee04_FnIns> _field_Func;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1ac53acb8_RetSt_eq(_1ac53acb8_RetSt *_self_, _1ac53acb8_RetSt _other_);


struct _1ac53b26e_scopeLabel {
	jule::Ptr<_1ac4912c3_Token> _field_token;
	jule::Ptr<_1ac537a1d_Label> _field_node;
	jule::Bool _field_used;
	

};
inline jule::Bool _1ac53b26e_scopeLabel_eq(_1ac53b26e_scopeLabel *_self_, _1ac53b26e_scopeLabel _other_);


struct _1ac53c25e_scopeChecker {
	jule::Ptr<_1ac4912c3_Token> _field_calledFrom;
	jule::Ptr<_1ac578256_sema> _field_s;
	jule::Ptr<_1ac4dee04_FnIns> _field_owner;
	jule::Ptr<_1ac53c25e_scopeChecker> _field_parent;
	jule::I64 _field_childIndex;
	jule::Ptr<_1ac604d93_SymbolTable> _field_table;
	jule::Ptr<_1ac534ec1_Scope> _field_scope;
	jule::Ptr<_1ac4b679e_ScopeTree> _field_tree;
	jule::Ptr<_1ac4dee04_FnIns> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac5a2527_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac53b26e_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac53817d_GotoSt>>> _field_gotos;
	jule::I64 _field_i;
	

};
inline jule::Bool _1ac53c25e_scopeChecker_eq(_1ac53c25e_scopeChecker *_self_, _1ac53c25e_scopeChecker _other_);


struct _1ac5511eb_directiveChecker {
	jule::Ptr<_1ac578256_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>> _field_d;
	jule::Any _field_o;
	

};
inline jule::Bool _1ac5511eb_directiveChecker_eq(_1ac5511eb_directiveChecker *_self_, _1ac5511eb_directiveChecker _other_);


struct _1ac557cd5_ImportInfo {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Bool _field_ImportAll;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_Selected;
	jule::Ptr<_1ac55ac0b_Package> _field_Package;
	jule::I64 _field_ModId;
	

};
struct _1ac55ac0b_Package {
	jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>> _field_Files;
	

};
struct _1ac57762e_commonSemaMeta {
	jule::Slice<jule::Ptr<_1ac5170e6_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1ac557cd5_ImportInfo> _field_runtime;
	

};
struct _1ac578256_sema {
	jule::Slice<_1b08b6838_Log> _field_errors;
	jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>> _field_files;
	jule::Ptr<_1ac604d93_SymbolTable> _field_file;
	jule::I64 _field_flags;
	jule::Ptr<_1ac57762e_commonSemaMeta> _field_meta;
	

};
struct _1ac59dd70_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
	

};
struct _1ac5a2527_Var {
	jule::Ptr<_1ac534ec1_Scope> _field_Scope;
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1ac6459e9_TypeSymbol> _field_Kind;
	jule::Ptr<_1ac60b6d5_Value> _field_Value;
	jule::Ptr<_1ac4e308e_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>> _field_Directives;
	jule::I64 _field_RetOrder;
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _field_Depends;
	

};
struct _1ac5a35b1_FuncPattern {
	

};
struct _1ac5e1ce7_typeCompatibilityChecker {
	jule::Ptr<_1ac578256_sema> _field_s;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_dest;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_src;
	jule::Ptr<_1ac4912c3_Token> _field_errorToken;
	

};
inline jule::Bool _1ac5e1ce7_typeCompatibilityChecker_eq(_1ac5e1ce7_typeCompatibilityChecker *_self_, _1ac5e1ce7_typeCompatibilityChecker _other_);


struct _1ac5e3b73_assignTypeChecker {
	jule::Ptr<_1ac578256_sema> _field_s;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_dest;
	jule::Ptr<_1ac60a55d_Data> _field_d;
	jule::Ptr<_1ac4912c3_Token> _field_errorToken;
	jule::Ptr<_1ac4e308e_ReferenceStack> _field_refers;
	

};
inline jule::Bool _1ac5e3b73_assignTypeChecker_eq(_1ac5e3b73_assignTypeChecker *_self_, _1ac5e3b73_assignTypeChecker _other_);


struct _1ac5e5548_dynamicTypeAnnotation {
	jule::Ptr<_1ac60c285_eval> _field_e;
	jule::Ptr<_1ac4dee04_FnIns> _field_f;
	jule::Ptr<_1ac4ddc9e_ParamIns> _field_p;
	jule::Ptr<_1ac60a55d_Data> _field_a;
	jule::Ptr<_1ac4912c3_Token> _field_errorToken;
	jule::Ptr<_1ac63d2d8_TypeKind>* _field_k;
	jule::Ptr<_1ac4a677d_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _field_ignored;
	

};
struct _1ac5ea3a5_fnCallArgChecker {
	jule::Ptr<_1ac60c285_eval> _field_e;
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _field_args;
	jule::Ptr<_1ac4912c3_Token> _field_errorToken;
	jule::Ptr<_1ac4dee04_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _field_ignored;
	

};
struct _1ac5ed2dc_structLitChecker {
	jule::Ptr<_1ac60c285_eval> _field_e;
	jule::Ptr<_1ac4912c3_Token> _field_errorToken;
	jule::Ptr<_1ac4ca4d8_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1ac4d0202_StructArgExprModel>> _field_args;
	

};
struct _1ac6000be_rangeChecker {
	jule::Ptr<_1ac53c25e_scopeChecker> _field_sc;
	jule::Ptr<_1ac4bb474_RangeKind> _field_rang;
	jule::Ptr<_1ac536d08_RangeIter> _field_Kind;
	jule::Ptr<_1ac60a55d_Data> _field_d;
	

};
inline jule::Bool _1ac6000be_rangeChecker_eq(_1ac6000be_rangeChecker *_self_, _1ac6000be_rangeChecker _other_);


struct _1ac602830_retTypeChecker {
	jule::Ptr<_1ac53c25e_scopeChecker> _field_sc;
	jule::Ptr<_1ac4dee04_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _field_exprs;
	jule::Ptr<_1ac4912c3_Token> _field_errorToken;
	jule::Any _field_model;
	

};
struct _1ac604d93_SymbolTable {
	jule::Ptr<_1ac496a59_File> _field_File;
	jule::Slice<_1ac4e459b_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ac4dbd46_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1ac5008a4_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1ac5030b0_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1ac5047ba_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1ac5306e7_Impl>> _field_Impls;
	

};
struct _1ac60a55d_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Kind;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1aa1293c0_Const> _field_Constant;
	

};
inline jule::Bool _1ac60a55d_Data_eq(_1ac60a55d_Data *_self_, _1ac60a55d_Data _other_);


struct _1ac60b6d5_Value {
	jule::Ptr<_1ac4aaab2_Expr> _field_Expr;
	jule::Ptr<_1ac60a55d_Data> _field_Data;
	

};
inline jule::Bool _1ac60b6d5_Value_eq(_1ac60b6d5_Value *_self_, _1ac60b6d5_Value _other_);


struct _1ac60c285_eval {
	jule::Ptr<_1ac578256_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_immutable;
	jule::Bool _field_ignored;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1ac5a2527_Var> _field_owner;
	jule::Ptr<_1ac4c9938_FieldIns> _field_field;
	jule::Bool _field_arg;
	

};
inline jule::Bool _1ac60c285_eval_eq(_1ac60c285_eval *_self_, _1ac60c285_eval _other_);


struct _1ac62b57e_unaryEval {
	jule::Ptr<_1ac60c285_eval> _field_e;
	jule::Ptr<_1ac60a55d_Data> _field_d;
	jule::Ptr<_1ac4acb6e_UnaryExpr> _field_u;
	

};
inline jule::Bool _1ac62b57e_unaryEval_eq(_1ac62b57e_unaryEval *_self_, _1ac62b57e_unaryEval _other_);


struct _1ac62d51a_binaryEval {
	jule::Ptr<_1ac60c285_eval> _field_e;
	jule::Ptr<_1ac60a55d_Data> _field_l;
	jule::Ptr<_1ac60a55d_Data> _field_r;
	jule::Ptr<_1ac4912c3_Token> _field_op;
	

};
inline jule::Bool _1ac62d51a_binaryEval_eq(_1ac62d51a_binaryEval *_self_, _1ac62d51a_binaryEval _other_);


struct _1ac63b902_InsGeneric {
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _field_Constraint;
	

};
struct _1ac63c4e6_TypeAlias {
	jule::Ptr<_1ac4b679e_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac6459e9_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _field_Generics;
	

};
struct _1ac63d2d8_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
	

};
inline jule::Bool _1ac63d2d8_TypeKind_eq(_1ac63d2d8_TypeKind *_self_, _1ac63d2d8_TypeKind _other_);


struct _1ac6459e9_TypeSymbol {
	jule::Ptr<_1ac4a677d_TypeDecl> _field_Decl;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Kind;
	

};
inline jule::Bool _1ac6459e9_TypeSymbol_eq(_1ac6459e9_TypeSymbol *_self_, _1ac6459e9_TypeSymbol _other_);


struct _1ac646401_Prim {
	jule::Str _field_Kind;
	

};
inline jule::Bool _1ac646401_Prim_eq(_1ac646401_Prim *_self_, _1ac646401_Prim _other_);


struct _1ac649e2c_Sptr {
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Elem;
	

};
inline jule::Bool _1ac649e2c_Sptr_eq(_1ac649e2c_Sptr *_self_, _1ac649e2c_Sptr _other_);


struct _1ac64a900_Slc {
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Elem;
	

};
inline jule::Bool _1ac64a900_Slc_eq(_1ac64a900_Slc *_self_, _1ac64a900_Slc _other_);


struct _1ac64b4e4_Tuple {
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _field_Types;
	

};
struct _1ac64c094_Map {
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Key;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Val;
	

};
inline jule::Bool _1ac64c094_Map_eq(_1ac64c094_Map *_self_, _1ac64c094_Map _other_);


struct _1ac64cc21_Arr {
	jule::Bool _field_Auto;
	jule::I64 _field_N;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Elem;
	

};
inline jule::Bool _1ac64cc21_Arr_eq(_1ac64cc21_Arr *_self_, _1ac64cc21_Arr _other_);


struct _1ac64d6e4_Ptr {
	jule::Ptr<_1ac63d2d8_TypeKind> _field_Elem;
	

};
inline jule::Bool _1ac64d6e4_Ptr_eq(_1ac64d6e4_Ptr *_self_, _1ac64d6e4_Ptr _other_);


struct _1ac64e6e5_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
	

};
inline jule::Bool _1ac64e6e5_referencer_eq(_1ac64e6e5_referencer *_self_, _1ac64e6e5_referencer _other_);


struct _1ac6506d5_typeChecker {
	jule::Ptr<_1ac578256_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1ac64e6e5_referencer> _field_referencer;
	jule::Ptr<_1ac4e308e_ReferenceStack> _field_refers;
	jule::Ptr<_1ac4912c3_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1ac63c4e6_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
	

};
struct _1ac658798_identTypeLookup {
	

};
inline jule::Bool _1ac658798_identTypeLookup_eq(_1ac658798_identTypeLookup *_self_, _1ac658798_identTypeLookup _other_);


struct _1ad20bd0c_FileInfo {
	jule::Ptr<_1ac4a4869_AST> _field_Ast;
	jule::Slice<_1b08b6838_Log> _field_Errors;
	

};
struct _1ad2578b3_stmt {
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_tokens;
	jule::Bool _field_terminated;
	

};
struct _1ad258254_scopeParser {
	jule::Ptr<_1ad2767d3_parser> _field_p;
	jule::Ptr<_1ac4b679e_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1ad2578b3_stmt>> _field_stmts;
	jule::I64 _field_pos;
	

};
struct _1ad265bbd_exprBuilder {
	jule::Ptr<_1ad2767d3_parser> _field_p;
	

};
inline jule::Bool _1ad265bbd_exprBuilder_eq(_1ad265bbd_exprBuilder *_self_, _1ad265bbd_exprBuilder _other_);


struct _1ad2733d4_assignInfo {
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_l;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_r;
	jule::Ptr<_1ac4912c3_Token> _field_setter;
	jule::Bool _field_ok;
	

};
struct _1ad2767d3_parser {
	jule::Ptr<_1ac4a4869_AST> _field_ast;
	jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>> _field_directives;
	jule::Slice<_1b08b6838_Log> _field_errors;
	jule::Ptr<_1ad265bbd_exprBuilder> _field_ep;
	

};
struct _1ad288905_typeBuilder {
	jule::Ptr<_1ad2767d3_parser> _field_p;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _field_tokens;
	jule::I64* _field_i;
	jule::Bool _field_err;
	

};
struct _1ac97ac41_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
	

};
inline jule::Bool _1ac97ac41_CompileInfo_eq(_1ac97ac41_CompileInfo *_self_, _1ac97ac41_CompileInfo _other_);


struct _1ac97c21a_directiveEval {
	jule::Slice<_1b08b6838_Log> _field_logs;
	jule::Ptr<_1ac4a5b9a_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1ad28c8e8_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1ad2941d5_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
	

};
struct _1ad29a708_OrderedDefines {
	jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _field_Globals;
	

};
struct _1ad3d480e_specialCaseDefines {
	jule::Ptr<_1ac4c767d_Struct> _field_runtime_Map;
	jule::Ptr<_1ac4c767d_Struct> _field_runtime_mapIterator;
	

};
inline jule::Bool _1ad3d480e_specialCaseDefines_eq(_1ad3d480e_specialCaseDefines *_self_, _1ad3d480e_specialCaseDefines _other_);


struct _1ad3d5227_liveTable {
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1ac4dee04_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1ac4ca4d8_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1ac5008a4_Trait>> _field_traits;
	

};
struct _1ad3d56cd_ObjectDeadCode {
	_1ad3d5227_liveTable _field_live;
	jule::Ptr<_1ad29028b_IR> _field_ir;
	_1ad3d480e_specialCaseDefines _field_scd;
	

};
struct _1ad3d9803_scopeDeadCode {
	jule::Ptr<_1ad3d9803_scopeDeadCode> _field_parent;
	jule::Ptr<_1ac534ec1_Scope> _field_s;
	jule::I64 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac537a1d_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac53817d_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
	

};
inline jule::Bool _1ad3d9803_scopeDeadCode_eq(_1ad3d9803_scopeDeadCode *_self_, _1ad3d9803_scopeDeadCode _other_);


struct _1ad3dde9a_exprDeadCode {
	jule::Ptr<_1ad3d9803_scopeDeadCode> _field_s;
	

};
inline jule::Bool _1ad3dde9a_exprDeadCode_eq(_1ad3dde9a_exprDeadCode *_self_, _1ad3dde9a_exprDeadCode _other_);


struct _1ac738559_ExceptionalForwardingExprModel {
	jule::Ptr<_1ac4d17ca_FnCallExprModel> _field_Expr;
	

};
inline jule::Bool _1ac738559_ExceptionalForwardingExprModel_eq(_1ac738559_ExceptionalForwardingExprModel *_self_, _1ac738559_ExceptionalForwardingExprModel _other_);


struct _1ac7388de_SwapExprModel {
	jule::Ptr<_1ac60a55d_Data> _field_Left;
	jule::Ptr<_1ac60a55d_Data> _field_Right;
	

};
inline jule::Bool _1ac7388de_SwapExprModel_eq(_1ac7388de_SwapExprModel *_self_, _1ac7388de_SwapExprModel _other_);


struct _1ac738cb8_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
	

};
inline jule::Bool _1ac738cb8_EmptyCompareExprModel_eq(_1ac738cb8_EmptyCompareExprModel *_self_, _1ac738cb8_EmptyCompareExprModel _other_);


struct _1ac73913c_RefExprModel {
	jule::Ptr<_1ac5a2527_Var> _field_Var;
	

};
inline jule::Bool _1ac73913c_RefExprModel_eq(_1ac73913c_RefExprModel *_self_, _1ac73913c_RefExprModel _other_);


struct _1ac7395b0_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1aa1293c0_Const> _field_Right;
	jule::Bool _field_NotEq;
	

};
inline jule::Bool _1ac7395b0_StrCompExprModel_eq(_1ac7395b0_StrCompExprModel *_self_, _1ac7395b0_StrCompExprModel _other_);


struct _1ac739b43_MutSlicingExprModel {
	jule::Ptr<_1ac4912c3_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1ac739b43_MutSlicingExprModel_eq(_1ac739b43_MutSlicingExprModel *_self_, _1ac739b43_MutSlicingExprModel _other_);


struct _1ac739e40_UnsafeBinaryExprModel {
	jule::Ptr<_1ac4ce7ea_BinaryExprModel> _field_Node;
	

};
inline jule::Bool _1ac739e40_UnsafeBinaryExprModel_eq(_1ac739e40_UnsafeBinaryExprModel *_self_, _1ac739e40_UnsafeBinaryExprModel _other_);


struct _1ac73a2c5_UnsafeIndexingExprModel {
	jule::Ptr<_1ac4d215a_IndexingExprModel> _field_Node;
	

};
inline jule::Bool _1ac73a2c5_UnsafeIndexingExprModel_eq(_1ac73a2c5_UnsafeIndexingExprModel *_self_, _1ac73a2c5_UnsafeIndexingExprModel _other_);


struct _1ac73a69e_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1ac4d1ba4_SliceExprModel> _field_Elems;
	

};
inline jule::Bool _1ac73a69e_PushToSliceExprModel_eq(_1ac73a69e_PushToSliceExprModel *_self_, _1ac73a69e_PushToSliceExprModel _other_);


struct _1ac73aa78_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
	

};
inline jule::Bool _1ac73aa78_AppendToSliceExprModel_eq(_1ac73aa78_AppendToSliceExprModel *_self_, _1ac73aa78_AppendToSliceExprModel _other_);


struct _1ac73ae52_StrRuneIter {
	jule::Ptr<_1ac60a55d_Data> _field_Expr;
	jule::Ptr<_1ac536d08_RangeIter> _field_Base;
	

};
inline jule::Bool _1ac73ae52_StrRuneIter_eq(_1ac73ae52_StrRuneIter *_self_, _1ac73ae52_StrRuneIter _other_);


struct _1ac73b24e_UnsafeDerefExprModel {
	jule::Ptr<_1ac4cebc4_UnaryExprModel> _field_Base;
	

};
inline jule::Bool _1ac73b24e_UnsafeDerefExprModel_eq(_1ac73b24e_UnsafeDerefExprModel *_self_, _1ac73b24e_UnsafeDerefExprModel _other_);


struct _1ac73b54b_UnsafeCastingExprModel {
	jule::Ptr<_1ac4d0e28_CastingExprModel> _field_Base;
	

};
inline jule::Bool _1ac73b54b_UnsafeCastingExprModel_eq(_1ac73b54b_UnsafeCastingExprModel *_self_, _1ac73b54b_UnsafeCastingExprModel _other_);


struct _1ac73c22d_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
	

};
inline jule::Bool _1ac73c22d_nilVar_eq(_1ac73c22d_nilVar *_self_, _1ac73c22d_nilVar _other_);


struct _1ac73c56e_nils {
	jule::Slice<_1ac73c22d_nilVar> _field_vars;
	

};
struct _1ad29beac_scopeOptimizer {
	jule::Ptr<_1ad29beac_scopeOptimizer> _field_parent;
	jule::I64 _field_i;
	jule::Ptr<_1ac534ec1_Scope> _field_scope;
	jule::Ptr<_1ad2abd68_data> _field_data;
	

};
inline jule::Bool _1ad29beac_scopeOptimizer_eq(_1ad29beac_scopeOptimizer *_self_, _1ad29beac_scopeOptimizer _other_);


struct _1ad2a39a8_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1ad2abd68_data> _field_data;
	jule::Ptr<_1ad2941d5_ExprInspector> _field_inspector;
	

};
inline jule::Bool _1ad2a39a8_exprOptimizer_eq(_1ad2a39a8_exprOptimizer *_self_, _1ad2a39a8_exprOptimizer _other_);


struct _1ad2a8d98_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1ac63d2d8_TypeKind> _field_kind;
	

};
inline jule::Bool _1ad2a8d98_dynamicVar_eq(_1ad2a8d98_dynamicVar *_self_, _1ad2a8d98_dynamicVar _other_);


struct _1ad2a91d9_dynamic {
	jule::Slice<_1ad2a8d98_dynamicVar> _field_vars;
	

};
struct _1ad2abd68_data {
	jule::Ptr<_1ad2ad7e8_boundary> _field_boundary;
	jule::Ptr<_1ac73c56e_nils> _field_nils;
	jule::Ptr<_1ad2a91d9_dynamic> _field_dynamic;
	

};
inline jule::Bool _1ad2abd68_data_eq(_1ad2abd68_data *_self_, _1ad2abd68_data _other_);


struct _1ad2ad4a7_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
	

};
struct _1ad2ad7e8_boundary {
	jule::Slice<_1ad2ad4a7_boundaryVar> _field_vars;
	

};
struct _1ad3e00bc_Optimizer {
	jule::Ptr<_1ad29028b_IR> _field_ir;
	

};
inline jule::Bool _1ad3e00bc_Optimizer_eq(_1ad3e00bc_Optimizer *_self_, _1ad3e00bc_Optimizer _other_);


struct _1ad416577_AnsiEscape {
	

};
inline jule::Bool _1ad416577_AnsiEscape_eq(_1ad416577_AnsiEscape *_self_, _1ad416577_AnsiEscape _other_);


struct _1ad417b2d_Logger {
	

};
inline jule::Bool _1ad417b2d_Logger_eq(_1ad417b2d_Logger *_self_, _1ad417b2d_Logger _other_);


struct _1ae082ab6_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
	

};
inline jule::Bool _1ae082ab6_AbsTime_eq(_1ae082ab6_AbsTime *_self_, _1ae082ab6_AbsTime _other_);


struct _1ae08328c_Time {
	jule::U64 _field_sec;
	

};
inline jule::Bool _1ae08328c_Time_eq(_1ae08328c_Time *_self_, _1ae08328c_Time _other_);


struct _1adea99ee_scopeCoder {
	jule::Ptr<_1ae08ee9c_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1adea99ee_scopeCoder_eq(_1adea99ee_scopeCoder *_self_, _1adea99ee_scopeCoder _other_);


struct _1adeb62d0_exprCoder {
	jule::Ptr<_1ae08ee9c_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1ac5a2527_Var>>> _field_varPrefixes;
	

};
struct _1adec8a84_TestCoder {
	jule::Ptr<_1ac4ca4d8_StructIns> _field_t;
	jule::Ptr<_1ac4dbd46_Fn> _field_tmReset;
	jule::Ptr<_1ac4dbd46_Fn> _field_tmFailed;
	jule::Ptr<_1ac4dbd46_Fn> _field_tmSkipped;
	jule::Ptr<_1ae08ee9c_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1adec8a84_TestCoder_eq(_1adec8a84_TestCoder *_self_, _1adec8a84_TestCoder _other_);


struct _1adecba10_identCoder {
	

};
inline jule::Bool _1adecba10_identCoder_eq(_1adecba10_identCoder *_self_, _1adecba10_identCoder _other_);


struct _1ae08cb9d_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

};
inline jule::Bool _1ae08cb9d_SerializationInfo_eq(_1ae08cb9d_SerializationInfo *_self_, _1ae08cb9d_SerializationInfo _other_);


struct _1ae08d0bb_traitCast {
	jule::Ptr<_1ac5008a4_Trait> _field_t1;
	jule::Ptr<_1ac5008a4_Trait> _field_t2;
	

};
inline jule::Bool _1ae08d0bb_traitCast_eq(_1ae08d0bb_traitCast *_self_, _1ae08d0bb_traitCast _other_);


struct _1ae08d495_anonHash {
	jule::Ptr<_1ac4d2611_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

};
inline jule::Bool _1ae08d495_anonHash_eq(_1ae08d495_anonHash *_self_, _1ae08d495_anonHash _other_);


struct _1ae08d819_metadata {
	jule::Bool _field_concurrent;
	

};
inline jule::Bool _1ae08d819_metadata_eq(_1ae08d819_metadata *_self_, _1ae08d819_metadata _other_);


struct _1ae08ee9c_ObjectCoder {
	_1b097ade7_StrBuilder _field_Buf;
	_1b097ade7_StrBuilder _field_resultDecls;
	_1b097ade7_StrBuilder _field_anyObj;
	_1b097ade7_StrBuilder _field_anonObj;
	_1b097ade7_StrBuilder _field_deallocObj;
	_1b097ade7_StrBuilder _field_coSpawnObj;
	jule::Ptr<_1ad29028b_IR> _field_ir;
	_1ae08cb9d_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1ae08d495_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1b4d18b87__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1ae08d0bb_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1ac4dee04_FnIns>> _field_coSpawnMap;
	jule::Ptr<_1b4d646d8__Map> _field_traitMetMap;
	jule::Ptr<_1adeb62d0_exprCoder> _field_ec;
	jule::Ptr<_1adea99ee_scopeCoder> _field_sc;
	jule::Ptr<_1ae09eece_typeCoder> _field_tc;
	jule::I64 _field_headPos;
	jule::I64 _field_declPos;
	jule::I64 _field_wrapPos;
	_1ae08d819_metadata _field_meta;
	

};
struct _1ae09e396_customType {
	jule::Str _field_kind;
	

};
inline jule::Bool _1ae09e396_customType_eq(_1ae09e396_customType *_self_, _1ae09e396_customType _other_);


struct _1ae09eece_typeCoder {
	jule::Ptr<_1ae08ee9c_ObjectCoder> _field_oc;
	jule::Ptr<_1ae0a7ab9_resultCoder> _field_rc;
	

};
inline jule::Bool _1ae09eece_typeCoder_eq(_1ae09eece_typeCoder *_self_, _1ae09eece_typeCoder _other_);


struct _1ae0a7ab9_resultCoder {
	jule::Ptr<_1ae09eece_typeCoder> _field_tc;
	

};
inline jule::Bool _1ae0a7ab9_resultCoder_eq(_1ae0a7ab9_resultCoder *_self_, _1ae0a7ab9_resultCoder _other_);


struct _1b55eb8cb_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

};
inline jule::Bool _1b55eb8cb_Flag_eq(_1b55eb8cb_Flag *_self_, _1b55eb8cb_Flag _other_);

struct _1b560056c_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

};
inline jule::Bool _1b560056c_Flag_eq(_1b560056c_Flag *_self_, _1b560056c_Flag _other_);

struct _1b5603c79_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

};
inline jule::Bool _1b5603c79_Flag_eq(_1b5603c79_Flag *_self_, _1b5603c79_Flag _other_);

struct _1b56074ca_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

};
inline jule::Bool _1b56074ca_Flag_eq(_1b56074ca_Flag *_self_, _1b56074ca_Flag _other_);

struct _1b560abd7_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

};
inline jule::Bool _1b560abd7_Flag_eq(_1b560abd7_Flag *_self_, _1b560abd7_Flag _other_);


struct _1add23aee_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	

};
struct _1add265b3_argParser {
	_1add23aee_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i;
	

};
struct _1ad2ab86d_dataCheckpoint {
	_1ad2ad7e8_boundary _field_boundary;
	_1ac73c56e_nils _field_nils;
	_1ad2a91d9_dynamic _field_dynamic;
	

};
struct _1b0ad3ea6_Cmd {
	_1b03959cc_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

};
struct _1ad29028b_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1ac55ac0b_Package> _field_Main;
	jule::Ptr<_1ac557cd5_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>> _field_Used;
	_1ad29a708_OrderedDefines _field_Ordered;
	

};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1ac4dee04_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1ac4dee04_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac60a55d_Data__jule_tuple_x_1ac60a55d_Data {
	jule::Ptr<_1ac60a55d_Data> __jule_result_arg0;
	jule::Ptr<_1ac60a55d_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1ac60a55d_Data__jule_tuple_bool {
	jule::Ptr<_1ac60a55d_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac4aaab2_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac4bd751_Case__jule_tuple_bool {
	jule::Ptr<_1ac4bd751_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac4bd751_Case__jule_tuple_x_1ac4bc5a7_Else {
	jule::Slice<jule::Ptr<_1ac4bd751_Case>> __jule_result_arg0;
	jule::Ptr<_1ac4bc5a7_Else> __jule_result_arg1;
};
struct __jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac4b522b_AssignSt__jule_tuple_bool {
	jule::Ptr<_1ac4b522b_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1ac4a677d_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac4a9671_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1ac4a9671_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log {
	jule::Slice<jule::Ptr<_1ac4a4869_AST>> __jule_result_arg0;
	jule::Slice<_1b08b6838_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1b08b6838_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1b08b6838_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ac4dee04_FnIns__jule_tuple_bool {
	jule::Ptr<_1ac4dee04_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ad29028b_IR__jule_tuple_s_1b08b6838_Log {
	jule::Ptr<_1ad29028b_IR> __jule_result_arg0;
	jule::Slice<_1b08b6838_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a970dbe7_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a970dbe7_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a970dbe7_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a970dbe7_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac604d93_SymbolTable__jule_tuple_s_1b08b6838_Log {
	jule::Ptr<_1ac604d93_SymbolTable> __jule_result_arg0;
	jule::Slice<_1b08b6838_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ac55ac0b_Package__jule_tuple_s_1b08b6838_Log {
	jule::Ptr<_1ac55ac0b_Package> __jule_result_arg0;
	jule::Slice<_1b08b6838_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log {
	jule::Ptr<_1ac4a4869_AST> __jule_result_arg0;
	jule::Slice<_1b08b6838_Log> __jule_result_arg1;
};
struct __jule_tuple_sx_1ac4912c3_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token {
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1ac4912c3_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> __jule_result_arg0;
	jule::Slice<_1b08b6838_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__20a2dde5d_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__20a2de887_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1b4d18b87__Map> static__1b4d1924d_make(void);
inline void _1b4d193a2_initData(_1b4d18b87__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1b4d19506_hash(_1b4d18b87__Map* _self_, jule::Str _14616_k);
inline void _1b4d1965a_rehash(_1b4d18b87__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1b4d197ae_nextSize(_1b4d18b87__Map* _self_);
inline void _1b4d19913_lookup(jule::Ptr<_1b4d18b87__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1b4d19a67_get(jule::Ptr<_1b4d18b87__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1b4d19bbb_set(_1b4d18b87__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1b4d19d20_del(jule::Ptr<_1b4d18b87__Map> _self_, jule::Str _27624_k);
inline void _1b4d19e74_clear(jule::Ptr<_1b4d18b87__Map> _self_);
inline jule::I64 _1b4d1a0c8_len(jule::Ptr<_1b4d18b87__Map> _self_);
inline jule::I64 _1b4d1a22c_cap(_1b4d18b87__Map* _self_);
inline _1b4d25413_mapIterator _1b4d1a381_iterator(jule::Ptr<_1b4d18b87__Map> _self_);
inline jule::Ptr<_1b4d646d8__Map> static__1b4d64c05_make(void);
inline void _1b4d64d59_initData(_1b4d646d8__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1b4d64ead_hash(_1b4d646d8__Map* _self_, jule::Ptr<_1ac4dee04_FnIns> _14616_k);
inline void _1b4d65112_rehash(_1b4d646d8__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1b4d65266_nextSize(_1b4d646d8__Map* _self_);
inline void _1b4d653ba_lookup(jule::Ptr<_1b4d646d8__Map> _self_, jule::Ptr<_1ac4dee04_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1b4d6551e_get(jule::Ptr<_1b4d646d8__Map> _self_, jule::Ptr<_1ac4dee04_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1b4d65673_set(_1b4d646d8__Map* _self_, jule::Ptr<_1ac4dee04_FnIns> _24123_k);
inline jule::Bool _1b4d657c7_del(jule::Ptr<_1b4d646d8__Map> _self_, jule::Ptr<_1ac4dee04_FnIns> _27624_k);
inline void _1b4d6592b_clear(jule::Ptr<_1b4d646d8__Map> _self_);
inline jule::I64 _1b4d65a80_len(jule::Ptr<_1b4d646d8__Map> _self_);
inline jule::I64 _1b4d65bd4_cap(_1b4d646d8__Map* _self_);
inline _1b4d6dcb9_mapIterator _1b4d65d38_iterator(jule::Ptr<_1b4d646d8__Map> _self_);
inline void _1b4d25996_init(_1b4d25413_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1b4d25aea_next(_1b4d25413_mapIterator* _self_);
inline void _1b4d6e34c_init(_1b4d6dcb9_mapIterator* _self_);
inline __jule_tuple_px_1ac4dee04_FnIns__jule_tuple_psuintptr _1b4d6e4a1_next(_1b4d6dcb9_mapIterator* _self_);
inline _1b097ade7_StrBuilder static__1b097b1e4_New(jule::I64 _1516_cap);
inline void _1b0984939_Write(_1b097ade7_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _1b0984be2_WriteStr(_1b097ade7_StrBuilder* _self_, jule::Str _3024_s);
inline void _1b0984e9a_WriteByte(_1b097ade7_StrBuilder* _self_, jule::U8 _3525_b);
inline jule::Str _1b09854d9_Str(_1b097ade7_StrBuilder* _self_);
inline void _1b09856d7_Clear(_1b097ade7_StrBuilder* _self_);
inline jule::I64 _1b098596d_Len(_1b097ade7_StrBuilder* _self_);
inline jule::Slice<jule::U8> _1b0985e8a_Buf(_1b097ade7_StrBuilder* _self_);
inline void _1b0986243_SetBuf(_1b097ade7_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _1b0987d8d_index(_1b09878c6_lazyBuff* _self_, jule::I64 _5521_i);
inline void _1b0988146_append(_1b09878c6_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1b09883cc_string(_1b09878c6_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_1ae66a753_DirEntry>>> static__1b098c2e3_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__1b098c524_Create(jule::Str _4019_path);
inline jule::VoidExceptional static__1b098c755_Remove(jule::Str _5319_path);
inline jule::Exceptional<jule::Ptr<_1ae66c623_File>> static__1ae6696a8_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode);
inline jule::VoidExceptional static__1ae6698d9_Remove(jule::Str _3319_path);
inline jule::Exceptional<jule::I64> _1ae669d6d_Write(_1ae66c623_File* _self_, jule::Slice<jule::U8> _4821_buf);
inline jule::Exceptional<jule::I64> _1ae66a1ae_Read(_1ae66c623_File* _self_, jule::Slice<jule::U8> _6924_buf);
inline jule::Ptr<_1ae66c623_File> static__1ae66ca74_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_1ae66c623_File>> static__1ae66cd3d_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1ae66d107_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__1ae66d49d_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm);
inline jule::VoidExceptional _1ae66dbda_Close(_1ae66c623_File* _self_);
inline jule::Exceptional<jule::Ptr<_1ae66e713_Status>> static__1ae66b3d0_Of(jule::Str _1215_path);
inline jule::Bool _1ae66eb20_IsDir(_1ae66e713_Status* _self_);
inline jule::Bool _1ae66eda6_IsReg(_1ae66e713_Status* _self_);
inline jule::U64 _1ae67013c_Size(_1ae66e713_Status* _self_);
inline jule::Bool _1a9d4222b_set(_1aa116bc6_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1a9d4256c_floatBits(_1aa116bc6_decimal* _self_, _1a9d36dd0_floatInfo* _33226_flt);
inline void _1aa1170b1_assign(_1aa116bc6_decimal* _self_, jule::U64 _15126_v);
inline void _1aa117369_shift(_1aa116bc6_decimal* _self_, jule::I64 _17625_k);
inline void _1aa117622_roundDown(_1aa116bc6_decimal* _self_, jule::I64 _19625_nd);
inline void _1aa1178ca_roundUp(_1aa116bc6_decimal* _self_, jule::I64 _20523_nd);
inline void _1aa117b83_round(_1aa116bc6_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1aa117e19_roundedInteger(_1aa116bc6_decimal* _self_);
inline jule::Ptr<_1aa1293c0_Const> static__1aa129843_NewI64(jule::I64 _1619_x);
inline jule::Ptr<_1aa1293c0_Const> static__1aa129b0c_NewU64(jule::U64 _1919_x);
inline jule::Ptr<_1aa1293c0_Const> static__1aa129dc6_NewBool(jule::Bool _2220_x);
inline jule::Ptr<_1aa1293c0_Const> static__1aa12a190_NewStr(jule::Str _2519_x);
inline jule::Ptr<_1aa1293c0_Const> static__1aa12a459_NewF64(jule::F64 _2819_x);
inline jule::Ptr<_1aa1293c0_Const> static__1aa12a668_NewNil(void);
inline jule::I64 _1aa12acc8_ReadI64(_1aa1293c0_Const* _self_);
inline jule::U64 _1aa12b05e_ReadU64(_1aa1293c0_Const* _self_);
inline jule::Bool _1aa12b2e5_ReadBool(_1aa1293c0_Const* _self_);
inline jule::Str _1aa12b57b_ReadStr(_1aa1293c0_Const* _self_);
inline jule::F64 _1aa12b812_ReadF64(_1aa1293c0_Const* _self_);
inline jule::I64 _1aa12ba98_AsI64(_1aa1293c0_Const* _self_);
inline jule::U64 _1aa12bd2e_AsU64(_1aa1293c0_Const* _self_);
inline jule::F64 _1aa12c0b5_AsF64(_1aa1293c0_Const* _self_);
inline void _1aa12c36d_SetI64(_1aa1293c0_Const* _self_, jule::I64 _13822_x);
inline void _1aa12c626_SetU64(_1aa1293c0_Const* _self_, jule::U64 _14122_x);
inline void _1aa12c8ce_SetBool(_1aa1293c0_Const* _self_, jule::Bool _14423_x);
inline void _1aa12cb87_SetStr(_1aa1293c0_Const* _self_, jule::Str _14722_x);
inline void _1aa12ce40_SetF64(_1aa1293c0_Const* _self_, jule::F64 _15022_x);
inline jule::Bool _1aa12d3c4_IsI64(_1aa1293c0_Const* _self_);
inline jule::Bool _1aa12d65a_IsU64(_1aa1293c0_Const* _self_);
inline jule::Bool _1aa12d8e1_IsBool(_1aa1293c0_Const* _self_);
inline jule::Bool _1aa12db77_IsStr(_1aa1293c0_Const* _self_);
inline jule::Bool _1aa12de0d_IsF64(_1aa1293c0_Const* _self_);
inline jule::Bool _1aa12e194_IsNil(_1aa1293c0_Const* _self_);
inline jule::Bool _1aa12e826_And(_1aa1293c0_Const* _self_, _1aa1293c0_Const _23815_x);
inline jule::Bool _1aa12eb67_Or(_1aa1293c0_Const* _self_, _1aa1293c0_Const _24914_x);
inline jule::Bool _1aa13110d_Add(_1aa1293c0_Const* _self_, _1aa1293c0_Const _37719_x);
inline jule::Bool _1aa13144e_Sub(_1aa1293c0_Const* _self_, _1aa1293c0_Const _40619_x);
inline jule::Bool _1aa131790_Mul(_1aa1293c0_Const* _self_, _1aa1293c0_Const _43019_x);
inline jule::Bool _1aa131ad1_Div(_1aa1293c0_Const* _self_, _1aa1293c0_Const _45819_x);
inline jule::Bool _1aa131e22_Mod(_1aa1293c0_Const* _self_, _1aa1293c0_Const _48719_x);
inline jule::Bool _1aa132263_BitwiseAnd(_1aa1293c0_Const* _self_, _1aa1293c0_Const _50926_x);
inline jule::Bool _1aa1325a4_BitwiseOr(_1aa1293c0_Const* _self_, _1aa1293c0_Const _52325_x);
inline jule::Bool _1aa1328e5_Xor(_1aa1293c0_Const* _self_, _1aa1293c0_Const _53719_x);
inline jule::Bool _1aa132c36_Lshift(_1aa1293c0_Const* _self_, _1aa1293c0_Const _55122_x);
inline jule::Bool _1aa133077_Rshift(_1aa1293c0_Const* _self_, _1aa1293c0_Const _57122_x);
inline jule::U8 _1ac49167a_Prec(_1ac4912c3_Token* _self_);
inline void _1ac496eaa_Fill(_1ac496a59_File* _self_, jule::Slice<jule::U8> _1724_data);
inline jule::Str _1ac497241_Dir(_1ac496a59_File* _self_);
inline jule::Str _1ac4974c7_Name(_1ac496a59_File* _self_);
inline jule::Str _1ac497a9e_GetRow(_1ac496a59_File* _self_, jule::I64 _3818_row);
inline void _1ac4a025a_pushErr(_1ac49eb94_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args);
inline void _1ac4a07bb_lex(_1ac49eb94_lex* _self_);
inline jule::Str _1ac4a0b0c_id(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1ac4a0d93_resume(_1ac49eb94_lex* _self_);
inline void _1ac4a114b_lexLineComment(_1ac49eb94_lex* _self_, jule::Ptr<_1ac4912c3_Token>* _52135_token);
inline void _1ac4a1404_lexRangeComment(_1ac49eb94_lex* _self_, jule::Ptr<_1ac4912c3_Token>* _53636_token);
inline jule::Str _1ac4a1745_num(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1ac4a1a86_escapeSeq(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1ac4a1e82_getRune(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1ac4a22c3_lexRune(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1ac4a2559_lexStr(_1ac49eb94_lex* _self_);
inline void _1ac4a29dd_newLine(_1ac49eb94_lex* _self_);
inline jule::Bool _1ac4a304e_isOp(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1ac4912c3_Token>* _70763_t);
inline jule::Bool _1ac4a344a_lexBasicOps(_1ac49eb94_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1ac4912c3_Token>* _71745_tok);
inline jule::Bool _1ac4a3846_lexId(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1ac4912c3_Token>* _72640_t);
inline jule::Bool _1ac4a3c42_lexNum(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1ac4912c3_Token>* _73641_t);
inline jule::Ptr<_1ac4912c3_Token> _1ac4a3ec8_token(_1ac49eb94_lex* _self_);
inline jule::Bool _1ac4a864d_IsUnsafe(_1ac4a82a7_PtrTypeDecl* _self_);
inline jule::Bool _1ac4a8de0_AutoSized(_1ac4a8a49_ArrTypeDecl* _self_);
inline jule::Bool _1ac4aeb93_Unhandled(_1ac4ae7db_FnCallExpr* _self_);
inline jule::Bool _1ac4aee29_Ignored(_1ac4ae7db_FnCallExpr* _self_);
inline jule::Bool _1ac4b7393_IsSelf(_1ac4b6edb_ParamDecl* _self_);
inline jule::Bool _1ac4b87d4_IsAnon(_1ac4b843d_FnDecl* _self_);
inline jule::Bool _1ac4ba5d8_IsInf(_1ac4ba242_Iter* _self_);
inline jule::Bool _1ac4bae13_IsWhileNext(_1ac4baa6c_WhileKind* _self_);
inline jule::Ptr<_1ac4c9938_FieldIns> _1ac4c4b42_instance(jule::Ptr<_1ac4c4757_Field> _self_);
inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac4c7b23_instance(jule::Ptr<_1ac4c767d_Struct> _self_);
inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac4c7e31_appendInstance(_1ac4c767d_Struct* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _13635_ins);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac4c832c_FindMethod(_1ac4c767d_Struct* _self_, jule::Str _15426_ident, jule::Bool _15438_statically);
inline jule::Ptr<_1ac5a2527_Var> _1ac4c866d_FindStatic(_1ac4c767d_Struct* _self_, jule::Str _16526_ident);
inline jule::Ptr<_1ac4c4757_Field> _1ac4c89ae_FindField(_1ac4c767d_Struct* _self_, jule::Str _17625_ident);
inline jule::Bool _1ac4c8d00_IsImplements(_1ac4c767d_Struct* _self_, jule::Ptr<_1ac5008a4_Trait> _18624_t);
inline jule::Bool _1ac4c9141_IsUses(_1ac4c767d_Struct* _self_, jule::Ptr<_1ac4c767d_Struct> _19618_s);
inline jule::Str _1ac4ca890_Str(_1ac4ca4d8_StructIns* _self_);
inline jule::Bool _1ac4cabd1_Equal(jule::Ptr<_1ac4ca4d8_StructIns> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _25818_other);
inline jule::Bool _1ac4cb187_Same(_1ac4ca4d8_StructIns* _self_, jule::Ptr<_1ac4ca4d8_StructIns> _28616_s);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac4cb583_FindMethod(_1ac4ca4d8_StructIns* _self_, jule::Str _30126_ident, jule::Bool _30138_statically);
inline jule::Ptr<_1ac4c9938_FieldIns> _1ac4cb8c4_FindField(_1ac4ca4d8_StructIns* _self_, jule::Str _31225_ident);
inline jule::Ptr<_1ac5a2527_Var> _1ac4cbc15_FindStatic(_1ac4ca4d8_StructIns* _self_, jule::Str _32326_ident);
inline jule::Ptr<_1ac4ddc9e_ParamIns> _1ac4da73a_instance(jule::Ptr<_1ac4da372_Param> _self_);
inline jule::Bool _1ac4da9c1_IsSelf(_1ac4da372_Param* _self_);
inline jule::Bool _1ac4dac57_IsRef(_1ac4da372_Param* _self_);
inline jule::Bool _1ac4dc2ec_IsVoid(_1ac4dbd46_Fn* _self_);
inline jule::Bool _1ac4dc583_IsMethod(_1ac4dbd46_Fn* _self_);
inline jule::Bool _1ac4dc819_IsEntryPoint(_1ac4dbd46_Fn* _self_);
inline jule::Bool _1ac4dcaa0_IsInit(_1ac4dbd46_Fn* _self_);
inline jule::Bool _1ac4dcd36_IsAnon(_1ac4dbd46_Fn* _self_);
inline jule::Bool _1ac4dd0bc_AnyVar(_1ac4dbd46_Fn* _self_);
inline jule::Ptr<_1ac4dee04_FnIns> _1ac4dd353_instanceForce(jule::Ptr<_1ac4dbd46_Fn> _self_);
inline jule::Ptr<_1ac4dee04_FnIns> _1ac4dd5d9_instance(jule::Ptr<_1ac4dbd46_Fn> _self_);
inline jule::Ptr<_1ac4dee04_FnIns> _1ac4dd8e7_appendInstance(_1ac4dbd46_Fn* _self_, jule::Ptr<_1ac4dee04_FnIns>* _13835_ins);
inline jule::Str _1ac4de145_Str(_1ac4ddc9e_ParamIns* _self_);
inline jule::Str _1ac4e0278_Str(_1ac4dee04_FnIns* _self_);
inline jule::Bool _1ac4e05b9_Equal(jule::Ptr<_1ac4dee04_FnIns> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _22918_other);
inline jule::Bool _1ac4e0a5e_EqualFn(jule::Ptr<_1ac4dee04_FnIns> _self_, jule::Ptr<_1ac4dee04_FnIns>* _24021_f);
inline jule::Bool _1ac4e0da0_equalTrait(jule::Ptr<_1ac4dee04_FnIns> _self_, jule::Ptr<_1ac4dee04_FnIns>* _29924_other);
inline jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _1ac4e1136_Types(_1ac4dee04_FnIns* _self_);
inline jule::Bool _1ac4e13bc_IsBuiltin(_1ac4dee04_FnIns* _self_);
inline jule::Bool _1ac4e1653_IsAnon(_1ac4dee04_FnIns* _self_);
inline jule::Bool _1ac4e1994_Same(_1ac4dee04_FnIns* _self_, jule::Ptr<_1ac4dee04_FnIns> _34216_f);
inline jule::Str _1ac4e1cd5_GetKindStr(_1ac4dee04_FnIns* _self_, jule::Bool _35922_ident);
inline jule::Ptr<_1ac4e308e_ReferenceStack> static__1ac4e33ad_new(void);
inline jule::I64 _1ac4e37a9_Len(_1ac4e308e_ReferenceStack* _self_);
inline jule::Any _1ac4e3aea_At(_1ac4e308e_ReferenceStack* _self_, jule::I64 _6818_i);
inline void _1ac4e3da3_Push(_1ac4e308e_ReferenceStack* _self_, jule::Any _7324_ref);
inline jule::Bool _1b3dcc4aa_Exist(_1ac4e308e_ReferenceStack* _self_, jule::Ptr<_1ac4dee04_FnIns> _7820_t);
inline jule::Bool _1b3de3e0b_Exist(_1ac4e308e_ReferenceStack* _self_, jule::Ptr<_1ac5a2527_Var> _7820_t);
inline jule::Bool _1b366aebe_Exist(_1ac4e308e_ReferenceStack* _self_, jule::Ptr<_1ac4ca4d8_StructIns> _7820_t);
inline jule::Bool _1b422106d_Exist(_1ac4e308e_ReferenceStack* _self_, jule::Ptr<_1ac5008a4_Trait> _7820_t);
inline void _1ac4e9a46_pushErr(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4912c3_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args);
inline void _1ac4ea2c7_pushSuggestion(_1ac4e9051_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args);
inline jule::Bool _1ac4ea6c3_checkCppUseDeclPath(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4be884_UseDecl>* _34536_decl, jule::Str* _34553_path);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4ea9d1_buildCppHeaderImport(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4be884_UseDecl>* _36541_decl);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4ead22_buildStdImport(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4be884_UseDecl>* _39335_decl);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4eb163_buildIdentImport(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac4be884_UseDecl>* _43338_decl);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4eb4a4_buildImport(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac4be884_UseDecl>* _48733_decl);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4eb7e5_findUseDecl(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _49828_pkg);
inline jule::Bool _1ac4ebb36_checkDuplicateUseDecl(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _50642_pkg);
inline void _1ac4ebe99_implImportSelections(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _51641_imp, jule::Ptr<_1ac4be884_UseDecl>* _51664_decl);
inline jule::Str _1ac4ec2da_getAsLinkPath(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Str _53134_path);
inline void _1ac4ec708_pushCycleError(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac4e9051_symbolBuilder>* _54532_sb, jule::Str _54552_path, _1b097ade7_StrBuilder* _54568_message);
inline void _1ac4ecb26_pushCrossCycleError(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac4e9051_symbolBuilder>* _55837_target, jule::Ptr<_1ac557cd5_ImportInfo>* _55862_imp, jule::Ptr<_1ac4912c3_Token>* _55881_errorToken);
inline jule::Bool _1ac4ed022_checkImportCycles(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac557cd5_ImportInfo> _58134_imp, jule::Ptr<_1ac4be884_UseDecl>* _58153_decl);
inline void _1ac4ed440_checkPackageAccessibility(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4be884_UseDecl>* _61242_decl, jule::Str* _61259_mod, jule::Str* _61270_path);
inline jule::Bool _1ac4ed83b_importPackage(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _61835_imp, jule::Ptr<_1ac4be884_UseDecl>* _61858_decl);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4edb7c_importUseDecl(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac4be884_UseDecl>* _66535_decl);
inline void _1ac4edd7a_importUseDecls(jule::Ptr<_1ac4e9051_symbolBuilder> _self_);
inline void _1ac4ee133_appendNode(_1ac4e9051_symbolBuilder* _self_, _1ac4a577c_Node* _69431_node);
inline void _1ac4ee331_appendNodes(_1ac4e9051_symbolBuilder* _self_);
inline void _1ac4ee5d9_pushDirectivePass(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _73038_d);
inline void _1ac4ee7d7_appendTopDirectives(_1ac4e9051_symbolBuilder* _self_);
inline void _1ac4ee9d5_build(jule::Ptr<_1ac4e9051_symbolBuilder> _self_);
inline jule::Str _1ac500ca0_Str(_1ac5008a4_Trait* _self_);
inline jule::Bool _1ac5010e1_Equal(jule::Ptr<_1ac5008a4_Trait> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _2518_other);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac501586_FindMethod(_1ac5008a4_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac501c18_findMethodInherit(_1ac5008a4_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1ac50292d_AutoExpr(_1ac502543_EnumItem* _self_);
inline jule::Str _1ac503467_Str(_1ac5030b0_Enum* _self_);
inline jule::Bool _1ac5037a8_Equal(jule::Ptr<_1ac5030b0_Enum> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _3818_other);
inline jule::Ptr<_1ac502543_EnumItem> _1ac503bd7_FindItem(_1ac5030b0_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1ac504b3e_Str(_1ac5047ba_TypeEnum* _self_);
inline jule::Bool _1ac504e80_Equal(jule::Ptr<_1ac5047ba_TypeEnum> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _8018_other);
inline jule::Ptr<_1ac5041e3_TypeEnumItem> _1ac5053ae_FindItem(_1ac5047ba_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1ac5075e2_Str(_1ac5071e6_comptimeRange* _self_);
inline jule::Bool _1ac507933_Equal(jule::Ptr<_1ac5071e6_comptimeRange> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _2718_other);
inline jule::Str _1ac508109_Str(_1ac507c52_comptimeStructField* _self_);
inline jule::Bool _1ac50844a_Equal(jule::Ptr<_1ac507c52_comptimeStructField> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _3718_other);
inline jule::Ptr<_1ac60a55d_Data> _1ac508956__Decl(jule::Ptr<_1ac507c52_comptimeStructField> _self_, jule::Ptr<_1ac60c285_eval>* _4127_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac508d52__Type(jule::Ptr<_1ac507c52_comptimeStructField> _self_, jule::Ptr<_1ac60c285_eval>* _5327_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac509193_subIdent(jule::Ptr<_1ac507c52_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1ac5098ad_Str(_1ac5094e5_comptimeStructFields* _self_);
inline jule::Bool _1ac509bee_Equal(jule::Ptr<_1ac5094e5_comptimeStructFields> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _9018_other);
inline void _1ac50a183_ready(_1ac5094e5_comptimeStructFields* _self_, jule::Ptr<_1ac5a2527_Var>* _9426_keyA, jule::Ptr<_1ac5a2527_Var>* _9443_keyB);
inline void _1ac50a4e6_index(_1ac5094e5_comptimeStructFields* _self_, jule::Ptr<_1ac60a55d_Data>* _11526_d, jule::I64 _11536_i);
inline void _1ac50a914_step(_1ac5094e5_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1ac5a2527_Var>* _12633_keyA, jule::Ptr<_1ac5a2527_Var>* _12650_keyB);
inline jule::I64 _1ac50ab9a_len(_1ac5094e5_comptimeStructFields* _self_);
inline jule::Str _1ac50b32c_Str(_1ac50ae75_comptimeStatic* _self_);
inline jule::Bool _1ac50b66d_Equal(jule::Ptr<_1ac50ae75_comptimeStatic> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _15018_other);
inline jule::Ptr<_1ac60a55d_Data> _1ac50bb79__Decl(jule::Ptr<_1ac50ae75_comptimeStatic> _self_, jule::Ptr<_1ac60c285_eval>* _15427_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac50c075__Type(jule::Ptr<_1ac50ae75_comptimeStatic> _self_, jule::Ptr<_1ac60c285_eval>* _16627_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac50c3b6_subIdent(jule::Ptr<_1ac50ae75_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1ac50cad1_Str(_1ac50c729_comptimeStatics* _self_);
inline jule::Bool _1ac50ce22_Equal(jule::Ptr<_1ac50c729_comptimeStatics> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _20318_other);
inline void _1ac50d3a6_ready(_1ac50c729_comptimeStatics* _self_, jule::Ptr<_1ac5a2527_Var>* _20726_keyA, jule::Ptr<_1ac5a2527_Var>* _20743_keyB);
inline void _1ac50d719_index(_1ac50c729_comptimeStatics* _self_, jule::Ptr<_1ac60a55d_Data>* _22826_d, jule::I64 _22836_i);
inline void _1ac50db37_step(_1ac50c729_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1ac5a2527_Var>* _23933_keyA, jule::Ptr<_1ac5a2527_Var>* _23950_keyB);
inline jule::I64 _1ac50ddbd_len(_1ac50c729_comptimeStatics* _self_);
inline jule::Str _1ac50e550_Str(_1ac50e198_comptimeEnumField* _self_);
inline jule::Bool _1ac50e891_Equal(jule::Ptr<_1ac50e198_comptimeEnumField> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _26318_other);
inline jule::Ptr<_1ac60a55d_Data> _1ac50ed8b__Decl(jule::Ptr<_1ac50e198_comptimeEnumField> _self_, jule::Ptr<_1ac60c285_eval>* _26727_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac5101cc_subIdent(jule::Ptr<_1ac50e198_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1ac51096e_Str(_1ac5104a7_comptimeEnumFields* _self_);
inline jule::Bool _1ac510cb0_Equal(jule::Ptr<_1ac5104a7_comptimeEnumFields> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _30118_other);
inline void _1ac5111bc_ready(_1ac5104a7_comptimeEnumFields* _self_, jule::Ptr<_1ac5a2527_Var>* _30526_keyA, jule::Ptr<_1ac5a2527_Var>* _30543_keyB);
inline void _1ac511530_index(_1ac5104a7_comptimeEnumFields* _self_, jule::Ptr<_1ac60a55d_Data>* _32626_d, jule::I64 _32636_i);
inline void _1ac51194d_step(_1ac5104a7_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1ac5a2527_Var>* _33733_keyA, jule::Ptr<_1ac5a2527_Var>* _33750_keyB);
inline jule::I64 _1ac511bd4_len(_1ac5104a7_comptimeEnumFields* _self_);
inline jule::Str _1ac512366_Str(_1ac511eae_comptimeParam* _self_);
inline jule::Bool _1ac5126a7_Equal(jule::Ptr<_1ac511eae_comptimeParam> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _36118_other);
inline jule::Ptr<_1ac60a55d_Data> _1ac512bc4__Decl(jule::Ptr<_1ac511eae_comptimeParam> _self_, jule::Ptr<_1ac60c285_eval>* _36527_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac5130c0__Type(jule::Ptr<_1ac511eae_comptimeParam> _self_, jule::Ptr<_1ac60c285_eval>* _37727_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac5134bb__Recv(jule::Ptr<_1ac511eae_comptimeParam> _self_, jule::Ptr<_1ac60c285_eval>* _38527_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51380c_subIdent(jule::Ptr<_1ac511eae_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1ac5140b0_Str(_1ac513d18_comptimeParams* _self_);
inline jule::Bool _1ac514401_Equal(jule::Ptr<_1ac513d18_comptimeParams> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _43418_other);
inline void _1ac514885_ready(_1ac513d18_comptimeParams* _self_, jule::Ptr<_1ac5a2527_Var>* _43826_keyA, jule::Ptr<_1ac5a2527_Var>* _43843_keyB);
inline void _1ac514be8_index(_1ac513d18_comptimeParams* _self_, jule::Ptr<_1ac60a55d_Data>* _45926_d, jule::I64 _45936_i);
inline void _1ac515116_step(_1ac513d18_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1ac5a2527_Var>* _47033_keyA, jule::Ptr<_1ac5a2527_Var>* _47050_keyB);
inline jule::I64 _1ac51539c_len(_1ac513d18_comptimeParams* _self_);
inline jule::Str _1ac515a2e_Str(_1ac515677_comptimeTypeInfos* _self_);
inline jule::Bool _1ac515d70_Equal(jule::Ptr<_1ac515677_comptimeTypeInfos> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _49418_other);
inline void _1ac516304_ready(_1ac515677_comptimeTypeInfos* _self_, jule::Ptr<_1ac5a2527_Var>* _49826_keyA, jule::Ptr<_1ac5a2527_Var>* _49843_keyB);
inline void _1ac516667_index(_1ac515677_comptimeTypeInfos* _self_, jule::Ptr<_1ac60a55d_Data>* _51926_d, jule::I64 _51936_i);
inline void _1ac516a85_step(_1ac515677_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1ac5a2527_Var>* _52833_keyA, jule::Ptr<_1ac5a2527_Var>* _52850_keyB);
inline jule::I64 _1ac516d1b_len(_1ac515677_comptimeTypeInfos* _self_);
inline jule::Str _1ac51749d_Str(_1ac5170e6_comptimeTypeInfo* _self_);
inline jule::Bool _1ac5177de_Equal(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _55218_other);
inline jule::Ptr<_1ac60a55d_Data> _1ac517e2c__Decl(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _55627_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac518328__Str(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _59322_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac518724__Kind(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _60627_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac518b20__Bits(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _68627_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51901b__Elem(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _71027_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac519417__Size(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _74327_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac519813__Key(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _76226_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac519c0e__Value(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _77528_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51a10a__Fields(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _78829_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51a506__Statics(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _81730_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51a902__Binded(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _83629_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51aced__Ordered(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _84926_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51b1e9__Comparable(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _86229_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51b5e5__Mutable(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _87526_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51b9e1__Types(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _88828_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51bddc__CanNil(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _91129_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51c2d8__GC(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _92425_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51c6d4__Result(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _93729_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51cad0__Params(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _95329_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51ce21_subIdent(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1ac51d5a3_Str(_1ac51d1eb_comptimeValue* _self_);
inline jule::Bool _1ac51d8e4_Equal(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _111818_other);
inline jule::Ptr<_1ac60a55d_Data> _1ac51de55__Unwrap(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _112229_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51e351__Type(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _113027_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51e74c__Lvalue(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _113829_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac51eb48__Mutable(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _115130_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac520044__Const(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _116428_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac520440__Field(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _117728_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac52083b__Method(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _121229_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac520b7c_subIdent(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1ac52130e_Str(_1ac520e57_comptimeFiles* _self_);
inline jule::Bool _1ac521650_Equal(jule::Ptr<_1ac520e57_comptimeFiles> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _132218_other);
inline void _1ac521ad4_ready(_1ac520e57_comptimeFiles* _self_, jule::Ptr<_1ac5a2527_Var>* _132626_keyA, jule::Ptr<_1ac5a2527_Var>* _132643_keyB);
inline void _1ac521e47_index(_1ac520e57_comptimeFiles* _self_, jule::Ptr<_1ac60a55d_Data>* _134726_d, jule::I64 _134736_i);
inline void _1ac522365_step(_1ac520e57_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1ac5a2527_Var>* _135833_keyA, jule::Ptr<_1ac5a2527_Var>* _135850_keyB);
inline jule::I64 _1ac5225eb_len(_1ac520e57_comptimeFiles* _self_);
inline jule::Str _1ac522c7d_Str(_1ac5228c6_comptimeFile* _self_);
inline jule::Bool _1ac5230be_Equal(jule::Ptr<_1ac5228c6_comptimeFile> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _138218_other);
inline jule::Ptr<_1ac60a55d_Data> _1ac5235db__Path(jule::Ptr<_1ac5228c6_comptimeFile> _self_, jule::Ptr<_1ac60c285_eval>* _138627_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac5239d7__Name(jule::Ptr<_1ac5228c6_comptimeFile> _self_, jule::Ptr<_1ac60c285_eval>* _139927_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac523dd3__Dir(jule::Ptr<_1ac5228c6_comptimeFile> _self_, jule::Ptr<_1ac60c285_eval>* _141226_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac524224_subIdent(jule::Ptr<_1ac5228c6_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1ac524ad7_Str(_1ac5244ee_comptimeDecls* _self_);
inline jule::Bool _1ac524e28_Equal(jule::Ptr<_1ac5244ee_comptimeDecls> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _146118_other);
inline void _1ac52529c_ready(_1ac5244ee_comptimeDecls* _self_, jule::Ptr<_1ac5a2527_Var>* _146526_keyA, jule::Ptr<_1ac5a2527_Var>* _146543_keyB);
inline void _1ac525610_index(_1ac5244ee_comptimeDecls* _self_, jule::Ptr<_1ac60a55d_Data>* _148626_d, jule::I64 _148636_i);
inline void _1ac525a2d_step(_1ac5244ee_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1ac5a2527_Var>* _149533_keyA, jule::Ptr<_1ac5a2527_Var>* _149550_keyB);
inline jule::I64 _1ac525cb4_len(_1ac5244ee_comptimeDecls* _self_);
inline jule::Str _1ac526b94_Str(_1ac5267dc_comptimeDecl* _self_);
inline jule::Bool _1ac526ed5_Equal(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _153418_other);
inline jule::Str _1ac527436_declAsStr(_1ac5267dc_comptimeDecl* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac527832__Name(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _156527_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac527c2d__Public(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _160329_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac528129__Binded(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _164129_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac528525__Exceptional(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _167534_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac528921__Mutable(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _169630_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac528d1c__Variadic(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _172931_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac529218__Reference(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _176032_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac529614__Params(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _179229_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac529a10__Fields(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _182729_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac529e0b__Statics(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _186830_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac52a307__Methods(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _190430_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac52a648_subIdent(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1ac578256_sema>*,jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>*> _1ac52d7c2_readyFn(jule::Ptr<_1ac52d393_constraintChecker> _self_);
inline jule::Bool _1ac52da58_readyFi(jule::Ptr<_1ac52d393_constraintChecker> _self_);
inline jule::Bool _1ac52dcde_readySi(jule::Ptr<_1ac52d393_constraintChecker> _self_);
inline jule::Bool _1ac52e075_ready(jule::Ptr<_1ac52d393_constraintChecker> _self_);
inline jule::Bool _1ac52e30b_check(jule::Ptr<_1ac52d393_constraintChecker> _self_);
inline jule::Bool _1ac530ae3_IsTraitImpl(_1ac5306e7_Impl* _self_);
inline jule::Bool _1ac530d79_IsStructImpl(_1ac5306e7_Impl* _self_);
inline jule::Bool _1ac536753_IsWhileNext(_1ac5363ac_WhileIter* _self_);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac53c737_SelectPackage(_1ac53c25e_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _37429_selector);
inline jule::Ptr<_1ac5a2527_Var> _1ac53cb33_FindVar(_1ac53c25e_scopeChecker* _self_, jule::Str _38523_ident, jule::Bool _38535_binded);
inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac53d02e_FindTypeAlias(_1ac53c25e_scopeChecker* _self_, jule::Str _40229_ident, jule::Bool _40241_binded);
inline jule::Ptr<_1ac4c767d_Struct> _1ac53d42a_FindStruct(_1ac53c25e_scopeChecker* _self_, jule::Str _42726_ident, jule::Bool _42738_binded);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac53d826_FindFn(_1ac53c25e_scopeChecker* _self_, jule::Str _43622_ident, jule::Bool _43634_binded);
inline jule::Ptr<_1ac5008a4_Trait> _1ac53db67_FindTrait(_1ac53c25e_scopeChecker* _self_, jule::Str _44525_ident);
inline jule::Ptr<_1ac5030b0_Enum> _1ac53dea8_FindEnum(_1ac53c25e_scopeChecker* _self_, jule::Str _45424_ident);
inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac53e2e9_FindTypeEnum(_1ac53c25e_scopeChecker* _self_, jule::Str _46328_ident);
inline jule::Bool _1ac53e64b_isUnsafe(jule::Ptr<_1ac53c25e_scopeChecker> _self_);
inline jule::Bool _1ac53e8d2_isRoot(_1ac53c25e_scopeChecker* _self_);
inline void _1ac53ead0_stop(_1ac53c25e_scopeChecker* _self_);
inline jule::Bool _1ac53ed66_stopped(_1ac53c25e_scopeChecker* _self_);
inline jule::Bool _1ac5400ec_isDeferred(jule::Ptr<_1ac53c25e_scopeChecker> _self_);
inline void _1ac5403a5_pushCaptured(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac5a2527_Var>* _52534_v);
inline jule::Ptr<_1ac53c25e_scopeChecker> _1ac54063b_getRoot(jule::Ptr<_1ac53c25e_scopeChecker> _self_);
inline jule::Ptr<_1ac53c25e_scopeChecker> _1ac5408c2_getHardRoot(jule::Ptr<_1ac53c25e_scopeChecker> _self_);
inline jule::Ptr<_1ac4e308e_ReferenceStack> _1ac540b58_getOwnerRefers(jule::Ptr<_1ac53c25e_scopeChecker> _self_);
inline jule::Ptr<_1ac5a2527_Var> _1ac540e99_findVar(_1ac53c25e_scopeChecker* _self_, jule::Str _57223_ident);
inline jule::Ptr<_1ac537a1d_Label> _1ac5412da_findLabel(_1ac53c25e_scopeChecker* _self_, jule::Str* _59326_ident);
inline jule::Ptr<_1ac53b26e_scopeLabel> _1ac54162b_findLabelScope(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Str* _60932_ident);
inline jule::Ptr<_1ac53b26e_scopeLabel> _1ac54196c_findLabelAll(_1ac53c25e_scopeChecker* _self_, jule::Str* _62029_ident);
inline jule::Bool _1ac541d68_isDuplicatedIdent(_1ac53c25e_scopeChecker* _self_, jule::Uintptr _63233_itself, jule::Str* _63251_ident);
inline void _1ac542121_checkVarDecl(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b95e8_VarDecl> _65233_decl);
inline void _1ac5423c9_checkTypeAlias(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac63c4e6_TypeAlias>* _68336_ta);
inline void _1ac542682_checkTypeAliasDecl(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bd29a_TypeAliasDecl> _69939_decl);
inline jule::Ptr<_1ac534ec1_Scope> _1ac542918_getChild(_1ac53c25e_scopeChecker* _self_);
inline void _1ac542d36_checkChildSsc(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b679e_ScopeTree>* _71035_tree, jule::Ptr<_1ac534ec1_Scope>* _71058_s, jule::Ptr<_1ac53c25e_scopeChecker>* _71074_ssc);
inline jule::Ptr<_1ac534ec1_Scope> _1ac543232_checkChildSc(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b679e_ScopeTree>* _71734_tree, jule::Ptr<_1ac53c25e_scopeChecker>* _71757_ssc);
inline jule::Ptr<_1ac534ec1_Scope> _1ac543573_checkChild(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b679e_ScopeTree>* _72332_tree);
inline void _1ac54382b_checkAnonScope(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b679e_ScopeTree> _72835_tree);
inline void _1ac543b8e_processErrorCall(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4d7a45_BuiltinErrorCallExprModel>* _73338_m, jule::Ptr<_1ac4912c3_Token> _73369_err);
inline void _1ac543e47_checkExpr(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4aaab2_Expr> _74630_expr);
inline jule::Ptr<_1ac5353de_If> _1ac544288_checkIf(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bc1cd_If> _77628_i);
inline jule::Ptr<_1ac5356db_Else> _1ac5445c9_checkElse(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bc5a7_Else> _79630_e);
inline void _1ac544882_checkConditional(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bca5d_Conditional> _80237_conditional);
inline void _1ac544d5a_checkIterScopeSsc(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Uintptr _81834_it, jule::Ptr<_1ac4b679e_ScopeTree> _81851_tree, jule::Ptr<_1ac534ec1_Scope>* _81874_s, jule::Ptr<_1ac53c25e_scopeChecker> _81889_ssc);
inline jule::Ptr<_1ac534ec1_Scope> _1ac545311_checkIterScopeSc(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Uintptr _82333_it, jule::Ptr<_1ac4b679e_ScopeTree> _82350_tree, jule::Ptr<_1ac53c25e_scopeChecker> _82372_ssc);
inline jule::Ptr<_1ac534ec1_Scope> _1ac54570c_checkIterScope(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Uintptr _82931_it, jule::Ptr<_1ac4b679e_ScopeTree>* _82949_tree);
inline void _1ac5459b5_checkInfIter(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ba242_Iter>* _83434_it);
inline void _1ac545c6d_checkWhileIter(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ba242_Iter>* _84036_it);
inline void _1ac54618b_checkComptimeRangeIter(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ba242_Iter>* _89044_it, jule::Ptr<_1ac536d08_RangeIter>* _89060_kind, jule::Ptr<_1ac60a55d_Data>* _89083_d);
inline void _1ac546444_checkRangeIter(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ba242_Iter>* _94736_it);
inline void _1ac5466ec_checkIter(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ba242_Iter> _100730_it);
inline jule::Bool _1ac546a3d_checkValidContLabel(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Uintptr _103136_it);
inline jule::Bool _1ac546d7e_checkValidBreakLabel(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Uintptr _104737_ptr);
inline jule::Ptr<_1ac53718d_ContSt> _1ac5471c0_checkContValidScope(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bbc27_ContSt> _107036_c);
inline void _1ac547478_checkCont(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bbc27_ContSt> _109426_c);
inline void _1ac547731_checkLabel(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b3d62_LabelSt> _114131_l);
inline void _1ac5479d9_pushGoto(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b423b_GotoSt> _116029_gt);
inline void _1ac547c92_checkPostfix(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b522b_AssignSt> _117133_a);
inline jule::Bool _1ac5480d3_isNewAssignIdent(_1ac53c25e_scopeChecker* _self_, jule::Str _120432_ident);
inline void _1ac54838b_removeInteriorMutRisk(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac60a55d_Data>* _121743_d);
inline jule::Bool _1ac548842_checkStructureAssignOp(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _123144_s, jule::Ptr<_1ac4b522b_AssignSt>* _123164_a, jule::Ptr<_1ac60a55d_Data>* _123183_r);
inline void _1ac548aea_checkSingleAssign(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b522b_AssignSt>* _127039_a);
inline void _1ac549238_processEndPartOfMultiAssign(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac538eb4_MultiAssign>* _135249_st, jule::Ptr<_1ac4b522b_AssignSt>* _135272_a, jule::Ptr<_1ac4b4b98_AssignLeft>* _13538_lexpr, jule::Ptr<_1ac60a55d_Data>* _135333_l, jule::Ptr<_1ac60a55d_Data>* _135348_r, jule::Bool _135358_strict);
inline void _1ac5494e1_checkMultiAssign(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b522b_AssignSt>* _142838_a);
inline void _1ac549799_checkAssignSt(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b522b_AssignSt> _149534_a);
inline jule::Ptr<_1ac534ec1_Scope> _1ac549b95_checkCaseScope(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac53a229_Case>* _150632_c, jule::Ptr<_1ac4b679e_ScopeTree>* _150647_tree);
inline jule::Ptr<_1ac53a229_Case> _1ac54a206_checkCase(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac539701_Match> _151230_m, jule::I64 _151241_i, jule::Ptr<_1ac4bd751_Case> _151253_c, jule::Ptr<_1ac60a55d_Data> _151272_expr);
inline void _1ac54a624_checkCases(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4be06a_MatchCase>* _158932_m, jule::Ptr<_1ac539701_Match> _158951_rm, jule::Ptr<_1ac60a55d_Data> _158967_expr);
inline jule::Ptr<_1ac53a229_Case> _1ac54aa20_checkDefault(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac539701_Match> _161033_m, jule::Ptr<_1ac4bc5a7_Else> _161048_d);
inline void _1ac54ad83_checkComptimePanic(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4912c3_Token> _161839_callToken, jule::Ptr<_1ac534ec1_Scope>* _161859_s);
inline void _1ac54b1e6_processConstMatch(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac539701_Match>* _165039_tm, jule::Ptr<_1ac4be06a_MatchCase>* _165056_m);
inline void _1ac54b49e_checkTypeMatch(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4be06a_MatchCase>* _167936_m);
inline void _1ac54b757_checkCommonMatch(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4be06a_MatchCase>* _172238_m);
inline void _1ac54ba10_checkMatch(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4be06a_MatchCase> _177331_m);
inline void _1ac54bcb8_checkFall(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b4538_FallSt> _178126_f);
inline jule::Ptr<_1ac537567_BreakSt> _1ac54c109_checkBreakWithLabel(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bb84d_BreakSt> _180436_b);
inline jule::Ptr<_1ac537567_BreakSt> _1ac54c44a_checkPlainBreak(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bb84d_BreakSt> _186232_b);
inline void _1ac54c703_checkBreak(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bb84d_BreakSt> _188427_b);
inline void _1ac54c9ab_checkRet(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b99c2_RetSt> _189529_r);
inline void _1ac54cc64_checkUseExpr(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ab486_UseExpr> _192029_ue);
inline void _1ac54d01c_checkNode(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Any* _193631_node);
inline void _1ac54d21a_checkResult(jule::Ptr<_1ac53c25e_scopeChecker> _self_);
inline void _1ac54d418_checkTree(jule::Ptr<_1ac53c25e_scopeChecker> _self_);
inline void _1ac54d77b_checkGoto(_1ac53c25e_scopeChecker* _self_, jule::Ptr<_1ac53817d_GotoSt>* _203830_gt, jule::Ptr<_1ac53b26e_scopeLabel>* _203848_label);
inline void _1ac54d979_checkGotos(_1ac53c25e_scopeChecker* _self_);
inline void _1ac54db77_checkLabels(_1ac53c25e_scopeChecker* _self_);
inline void _1ac54dd75_checkVars(_1ac53c25e_scopeChecker* _self_);
inline void _1ac54e073_checkAliases(_1ac53c25e_scopeChecker* _self_);
inline void _1ac54e3d6_check(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b679e_ScopeTree>* _213327_tree, jule::Ptr<_1ac534ec1_Scope>* _213350_s);
inline jule::Ptr<_1ac53c25e_scopeChecker> _1ac54e66c_newChildChecker(jule::Ptr<_1ac53c25e_scopeChecker> _self_);
inline void _1ac55164c_checkCdef(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _1626_d);
inline void _1ac551905_checkTypedef(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _3229_d);
inline void _1ac551bad_checkNamespace(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _4835_d);
inline void _1ac551e66_checkDeprecated(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _10036_d);
inline void _1ac55221e_checkTest(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _14126_d);
inline void _1ac5524c7_checkExport(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _16232_d);
inline void _1ac552780_checkDirective(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _20035_d);
inline void _1ac55297d_check(_1ac5511eb_directiveChecker* _self_);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac558302_SelectPackage(_1ac557cd5_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> );
inline jule::Ptr<_1ac5a2527_Var> _1ac5586ed_FindVar(_1ac557cd5_ImportInfo* _self_, jule::Str _19823_ident, jule::Bool );
inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac558ae9_FindTypeAlias(_1ac557cd5_ImportInfo* _self_, jule::Str _21029_ident, jule::Bool );
inline jule::Ptr<_1ac4c767d_Struct> _1ac558ee5_FindStruct(_1ac557cd5_ImportInfo* _self_, jule::Str _22226_ident, jule::Bool );
inline jule::Ptr<_1ac4dbd46_Fn> _1ac5593e1_FindFn(_1ac557cd5_ImportInfo* _self_, jule::Str _23422_ident, jule::Bool );
inline jule::Ptr<_1ac5008a4_Trait> _1ac559732_FindTrait(_1ac557cd5_ImportInfo* _self_, jule::Str _24525_ident);
inline jule::Ptr<_1ac5030b0_Enum> _1ac559a73_FindEnum(_1ac557cd5_ImportInfo* _self_, jule::Str _25624_ident);
inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac559db4_FindTypeEnum(_1ac557cd5_ImportInfo* _self_, jule::Str _26728_ident);
inline jule::Bool _1ac55a359_isLookupable(_1ac557cd5_ImportInfo* _self_, jule::Str* _27625_ident);
inline jule::Bool _1ac55a69a_existIdent(_1ac557cd5_ImportInfo* _self_, jule::Str _29622_ident);
inline jule::Bool _1ac55a931_isAccessibleViaSelection(_1ac557cd5_ImportInfo* _self_);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac55b1d4_SelectPackage(_1ac55ac0b_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> );
inline jule::Ptr<_1ac5a2527_Var> _1ac55b5d0_FindVar(_1ac55ac0b_Package* _self_, jule::Str _32323_ident, jule::Bool _32335_binded);
inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac55b9cb_FindTypeAlias(_1ac55ac0b_Package* _self_, jule::Str _32929_ident, jule::Bool _32941_binded);
inline jule::Ptr<_1ac4c767d_Struct> _1ac55bdc7_FindStruct(_1ac55ac0b_Package* _self_, jule::Str _33526_ident, jule::Bool _33538_binded);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac55c2c3_FindFn(_1ac55ac0b_Package* _self_, jule::Str _34122_ident, jule::Bool _34134_binded);
inline jule::Ptr<_1ac5008a4_Trait> _1ac55c614_FindTrait(_1ac55ac0b_Package* _self_, jule::Str _34725_ident);
inline jule::Ptr<_1ac5030b0_Enum> _1ac55c955_FindEnum(_1ac55ac0b_Package* _self_, jule::Str _35324_ident);
inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac55cc96_FindTypeEnum(_1ac55ac0b_Package* _self_, jule::Str _35928_ident);
inline jule::Ptr<_1ac5170e6_comptimeTypeInfo> _1ac577ac4_pushComptimeTypeInfo(_1ac57762e_commonSemaMeta* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _22341_t);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac57872e_SelectPackage(_1ac578256_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _25229_selector);
inline jule::Ptr<_1ac5a2527_Var> _1ac578b2a_FindVar(_1ac578256_sema* _self_, jule::Str _26223_ident, jule::Bool _26235_binded);
inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac579026_FindTypeAlias(_1ac578256_sema* _self_, jule::Str _29429_ident, jule::Bool _29441_binded);
inline jule::Ptr<_1ac4c767d_Struct> _1ac579422_FindStruct(_1ac578256_sema* _self_, jule::Str _32626_ident, jule::Bool _32638_binded);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac57981d_FindFn(_1ac578256_sema* _self_, jule::Str _35722_ident, jule::Bool _35734_binded);
inline jule::Ptr<_1ac5008a4_Trait> _1ac579b5e_FindTrait(_1ac578256_sema* _self_, jule::Str _38925_ident);
inline jule::Ptr<_1ac5030b0_Enum> _1ac579ea0_FindEnum(_1ac578256_sema* _self_, jule::Str _42124_ident);
inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac57a2e1_FindTypeEnum(_1ac578256_sema* _self_, jule::Str _45328_ident);
inline jule::Bool _1ac57a6ed_isFlag(_1ac578256_sema* _self_, jule::I64 _48218_flags);
inline jule::Ptr<_1ac604d93_SymbolTable> _1ac57a984_getCurrentFile(_1ac578256_sema* _self_);
inline void _1ac57ac3c_setCurrentFile(_1ac578256_sema* _self_, jule::Ptr<_1ac604d93_SymbolTable> _48534_f);
inline void _1ac57b15a_pushErr(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token> _48723_token, jule::Str _48738_fmt, jule::Slice<jule::Any> _48751_args);
inline void _1ac57b4bd_pushSuggestion(_1ac578256_sema* _self_, jule::Str _49230_fmt, jule::Slice<jule::Any> _49243_args);
inline jule::Bool _1ac57b8b9_isAccessibleDefine(_1ac578256_sema* _self_, jule::Bool _49830_public, jule::Ptr<_1ac4912c3_Token> _49844_token);
inline jule::Bool _1ac57bd70_isDuplicatedIdent(_1ac578256_sema* _self_, jule::Uintptr _52129_itself, jule::Str* _52147_ident, jule::Bool _52159_binded);
inline void _1ac57c1d3_checkDirectives(jule::Ptr<_1ac578256_sema> _self_, jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _53837_d, jule::Any _53863_o);
inline jule::Bool _1ac57c689_checkGenericQuantity(_1ac578256_sema* _self_, jule::I64 _54736_required, jule::I64 _54751_given, jule::Ptr<_1ac4912c3_Token> _54763_token);
inline jule::Bool _1ac57ca85_isDuplicatedImportSelection(_1ac578256_sema* _self_, jule::Uintptr _56639_itself, jule::Str* _56657_ident);
inline jule::Any _1ac57ce81_getImportDef(_1ac578256_sema* _self_, jule::Str* _57925_ident, jule::Ptr<_1ac557cd5_ImportInfo>* _57942_imp);
inline jule::Bool _1b3a53054_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac5a2527_Var>* _59456_s);
inline jule::Bool _1b3a57982_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac63c4e6_TypeAlias>* _59456_s);
inline jule::Bool _1b382eb66_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac4c767d_Struct>* _59456_s);
inline jule::Bool _1b38343a7_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac5008a4_Trait>* _59456_s);
inline jule::Bool _1b3838a4e_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac5030b0_Enum>* _59456_s);
inline jule::Bool _1b383d1d5_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac5047ba_TypeEnum>* _59456_s);
inline jule::Bool _1b384286b_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac4dbd46_Fn>* _59456_s);
inline jule::Bool _1ac57d6bd_checkImportSelectedSelections(_1ac578256_sema* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _60850_imp);
inline jule::Bool _1b3847cb1_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac5a2527_Var>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et);
inline jule::Bool _1b3848e49_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et);
inline jule::Bool _1b384aee5_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac4c767d_Struct>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et);
inline jule::Bool _1b384ddd8_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et);
inline jule::Bool _1b3851abc_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac5008a4_Trait>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et);
inline jule::Bool _1b38542d9_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac5030b0_Enum>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et);
inline jule::Bool _1b38569b2_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac5047ba_TypeEnum>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et);
inline jule::Bool _1ac57de0a_checkImportAllSelections(_1ac578256_sema* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _66741_imp);
inline jule::Bool _1ac57e24b_checkImportSelections(_1ac578256_sema* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _68142_imp);
inline jule::Bool _1ac57e58c_isUseAliasDuplication(_1ac578256_sema* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _69038_imp);
inline jule::Bool _1ac57e8cd_checkImport(_1ac578256_sema* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _70632_imp);
inline void _1ac57eacb_checkImports(_1ac578256_sema* _self_);
inline void _1ac57ecc9_implFileImpls(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac57eec7_implImpls(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac5801c5_checkEnums(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac5803c3_checkFileInherits(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac5805c1_checkInherits(jule::Ptr<_1ac578256_sema> _self_);
inline _1ac6506d5_typeChecker _1ac580a77_typeChecker(jule::Ptr<_1ac578256_sema> _self_, jule::Trait _79532_l, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _79547_generics, jule::Ptr<_1ac64e6e5_referencer> _7967_referencer);
inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac5810d8_buildTypeWithRefers(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _82241_t, jule::Trait _82264_l, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _8237_generics, jule::Ptr<_1ac64e6e5_referencer> _82335_referencer);
inline jule::Bool _1ac581649_checkTypeWithRefers(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac6459e9_TypeSymbol>* _82941_t, jule::Trait _82961_l, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _8307_generics, jule::Ptr<_1ac64e6e5_referencer> _83035_referencer);
inline jule::Ptr<_1ac52d393_constraintChecker> _1ac5818d0_constraintChecker(jule::Ptr<_1ac578256_sema> _self_);
inline jule::Bool _1ac581ccb_checkType(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac6459e9_TypeSymbol>* _84431_t, jule::Trait _84451_l);
inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac582282_checkTypeRefers(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _84937_t, jule::Trait _84960_l, jule::Ptr<_1ac4e308e_ReferenceStack> _84975_refers);
inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac582738_buildTypeWithGenerics(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _86143_t, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _8627_generics, jule::Ptr<_1ac4e308e_ReferenceStack> _86235_refers);
inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac582dba_selectType(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _87932_t);
inline jule::Ptr<_1ac60c285_eval> _1ac583371_evalpd(jule::Ptr<_1ac578256_sema> _self_, jule::Trait _89127_l, jule::Ptr<_1ac63d2d8_TypeKind> _89142_p, jule::Ptr<_1ac5a2527_Var> _89160_owner);
inline jule::Ptr<_1ac60c285_eval> _1ac58376c_evalp(jule::Ptr<_1ac578256_sema> _self_, jule::Trait _90626_l, jule::Ptr<_1ac63d2d8_TypeKind> _90641_p);
inline jule::Ptr<_1ac60c285_eval> _1ac583aad_eval(jule::Ptr<_1ac578256_sema> _self_, jule::Trait _91125_l);
inline jule::Bool _1ac5841c9_checkAssignType(jule::Ptr<_1ac578256_sema> _self_, jule::Bool _91532_destIsRef, jule::Ptr<_1ac63d2d8_TypeKind>* _91554_dest, jule::Ptr<_1ac60a55d_Data>* _9168_d, jule::Ptr<_1ac4912c3_Token> _91622_errorToken, jule::Ptr<_1ac4e308e_ReferenceStack> _91646_refers);
inline jule::Bool _1ac584680__checkTypeCompatibility(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _95845_dest, jule::Ptr<_1ac63d2d8_TypeKind>* _95867_src, jule::Ptr<_1ac4912c3_Token> _9597_errorToken);
inline jule::Bool _1ac584b36_checkTypeCompatibility(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _97644_dest, jule::Ptr<_1ac63d2d8_TypeKind>* _9778_src, jule::Ptr<_1ac4912c3_Token>* _97729_errorToken);
inline void _1ac585054_pushCompatiblityError(_1ac578256_sema* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _98542_dest, jule::Ptr<_1ac60a55d_Data>* _98564_src, jule::Ptr<_1ac4912c3_Token>* _9868_errorToken);
inline jule::Bool _1ac58550a_checkTypeCompatibility1(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _100345_dest, jule::Ptr<_1ac60a55d_Data>* _100367_src, jule::Ptr<_1ac4912c3_Token>* _10048_errorToken);
inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac5859b1_buildNonGenericTypeKind(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _101845_ast, jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>* _10198_generics, jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>* _101944_ignored);
inline jule::Bool _1ac585dac_buildFnNonGenericTypeKinds(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns> _103047_f, jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>* _103063_ignored);
inline jule::Ptr<_1ac4dee04_FnIns> _1ac5861ed_getTraitCheckFnKind(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _105341_f);
inline jule::Bool _1ac5866a4_checkConstraintsFn(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _108240_f, jule::Ptr<_1ac4912c3_Token>* _108256_et, jule::Ptr<_1ac4dee04_FnIns> _108272_exist);
inline jule::Bool _1ac586b5a_checkConstraintsStruct(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _109644_s, jule::Ptr<_1ac4912c3_Token>* _109664_et, jule::Ptr<_1ac4ca4d8_StructIns> _109680_exist);
inline jule::Bool _1ac587056_basicFnEnvironment(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _111340_f, jule::Fn<jule::Bool,jule::Ptr<_1ac578256_sema>*> _111351_algo);
inline jule::Bool _1ac587452_fnEnvironment(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _113335_f, jule::Fn<jule::Bool,jule::Ptr<_1ac578256_sema>*,jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>*> _113346_algo);
inline void _1ac58770a_checkFnParamKind(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ddc9e_ParamIns>* _114538_p);
inline jule::Bool _1ac587a4b_reloadFnInsTypes(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns> _115237_f);
inline jule::Bool _1ac588002_checkRefValidityForInitExpr(jule::Ptr<_1ac578256_sema> _self_, jule::Bool _119244_leftMut, jule::Ptr<_1ac60a55d_Data>* _119264_d, jule::Ptr<_1ac4912c3_Token>* _119279_errorToken);
inline jule::Bool _1ac588343_isMutRiskyStruct(_1ac578256_sema* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _120929_s);
inline jule::Bool _1ac58895e_checkValidityForInitExpr(jule::Ptr<_1ac578256_sema> _self_, jule::Bool _123641_leftMut, jule::Bool _123656_leftRef, jule::Ptr<_1ac63d2d8_TypeKind>* _12374_leftKind, jule::Ptr<_1ac60a55d_Data>* _123730_d, jule::Ptr<_1ac4912c3_Token>* _123745_errorToken);
inline jule::Bool _1ac588d5a_checkTypeAliasDeclKind(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63c4e6_TypeAlias>* _126444_ta, jule::Trait _126464_l);
inline void _1ac5891bd_checkTypeAliasDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63c4e6_TypeAlias>* _128740_ta, jule::Trait _128760_l);
inline void _1ac589476_checkTypeAliasDeclDup(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63c4e6_TypeAlias>* _129543_ta);
inline jule::Bool _1ac58970c_checkTypeAliasDecls(jule::Ptr<_1ac578256_sema> _self_);
inline void _1b332820e_checkEnumItemsDup(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac502543_EnumItem>> _131936_items);
inline void _1b3336250_checkEnumItemsDup(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac5041e3_TypeEnumItem>> _131936_items);
inline void _1ac589c6d_checkEnumItemsStr(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5030b0_Enum>* _133939_e);
inline void _1b3307199_checkEnumItemInt(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac60c285_eval>* _136643_eval, jule::Ptr<_1ac5030b0_Enum>* _136661_e, jule::Ptr<_1ac646401_Prim>* _136672_prim, jule::Ptr<_1ac502543_EnumItem>* _136690_item, jule::U64* _1366112_n);
inline void _1b3317c48_checkEnumItemInt(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac60c285_eval>* _136643_eval, jule::Ptr<_1ac5030b0_Enum>* _136661_e, jule::Ptr<_1ac646401_Prim>* _136672_prim, jule::Ptr<_1ac502543_EnumItem>* _136690_item, jule::I64* _1366112_n);
inline void _1b33032d8_checkEnumItemsInt1(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac646401_Prim>* _140241_prim, jule::Ptr<_1ac5030b0_Enum>* _140259_e);
inline void _1b33035b3_checkEnumItemsInt1(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac646401_Prim>* _140241_prim, jule::Ptr<_1ac5030b0_Enum>* _140259_e);
inline void _1ac590779_checkEnumItemsInt(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5030b0_Enum>* _143739_e);
inline void _1ac590a32_checkEnumDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5030b0_Enum>* _144735_e);
inline void _1ac590cda_checkTypeEnumDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5047ba_TypeEnum>* _148839_e);
inline jule::Bool _1ac591071_checkEnumDecls(jule::Ptr<_1ac578256_sema> _self_);
inline jule::Bool _1ac591307_checkTypeEnumDecls(jule::Ptr<_1ac578256_sema> _self_);
inline jule::Bool _1ac591648_checkDeclGenerics(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>* _155134_generics);
inline jule::Bool _1ac591989_checkFnDeclParamsDup(_1ac578256_sema* _self_, jule::Ptr<_1ac4dbd46_Fn>* _157837_f);
inline jule::Bool _1ac591cca_checkFnDeclResultDup(_1ac578256_sema* _self_, jule::Ptr<_1ac4dbd46_Fn>* _161537_f);
inline jule::Bool _1ac59211b_checkFnVariadicParam(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _166042_f);
inline void _1ac5923c4_checkFnDeclPrototype(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _167342_f);
inline jule::Bool _1ac59287a_catchTraitInheritCycle(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5008a4_Trait> _169539_t1, jule::Ptr<_1ac5008a4_Trait> _169555_t2, _1b097ade7_StrBuilder* _169572_message);
inline jule::Bool _1ac592bbb__checkTraitDeclInherits(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5008a4_Trait>* _171445_t);
inline void _1ac592e74_checkTraitDeclInherits(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5008a4_Trait>* _175544_t);
inline void _1ac59322c_checkTraitDeclMethod(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _178042_f);
inline void _1ac5934d5_checkTraitDeclMethods(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5008a4_Trait>* _179443_t);
inline void _1ac59378d_checkTraitDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5008a4_Trait>* _183036_t);
inline jule::Bool _1ac593a24_checkTraitDecls(jule::Ptr<_1ac578256_sema> _self_);
inline jule::Bool _1ac593e20_checkTraitImplMethods(_1ac578256_sema* _self_, jule::Ptr<_1ac5008a4_Trait>* _185442_base, jule::Ptr<_1ac5306e7_Impl>* _185457_ipl);
inline jule::Bool _1ac59431b_implToStruct(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _186534_dest, jule::Ptr<_1ac5306e7_Impl>* _186554_ipl);
inline void _1ac5945c4_implTrait(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5306e7_Impl>* _190731_decl);
inline void _1ac59487c_implStruct(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5306e7_Impl>* _195032_decl);
inline void _1ac594b35_implImpl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5306e7_Impl>* _197430_decl);
inline void _1ac594e98_checkVarDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5a2527_Var>* _198534_decl, jule::Trait _198550_l);
inline void _1ac595251_checkGlobalVarDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5a2527_Var>* _203140_decl);
inline jule::Bool _1ac5954d7_checkGlobalDecls(jule::Ptr<_1ac578256_sema> _self_);
inline jule::Bool _1ac5958d3_checkStructTraitImpl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _205942_strct, jule::Ptr<_1ac5008a4_Trait>* _205963_trt);
inline jule::Bool _1ac595c24_checkStructImpls(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _208538_s);
inline jule::Bool _1ac596065_checkStructFields(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _209339_st);
inline void _1ac59631d_checkStructDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _211037_s);
inline jule::Bool _1ac5965a4_checkStructDecls(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac59685c_checkAnonFuncDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _214039_f);
inline void _1ac596b15_checkFuncDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _214535_f);
inline jule::Bool _1ac596e56_checkFuncDeclsBy(jule::Ptr<_1ac578256_sema> _self_, jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>* _216738_funcs);
inline jule::Bool _1ac5971dc_checkFuncDecls(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac59760a_pushCycleError(_1ac578256_sema* _self_, jule::Str* _218327_st1, jule::Str* _218338_st2, _1b097ade7_StrBuilder* _218353_message);
inline void _1ac597cae_checkPackageDecls(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac598122_checkDataForTypeInference(_1ac578256_sema* _self_, jule::Ptr<_1ac60a55d_Data>* _224342_d, jule::Ptr<_1ac4912c3_Token>* _224353_err_token);
inline void _1ac5983ca_checkVarValue(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5a2527_Var>* _225535_v);
inline void _1ac59873d_evalVarValue(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5a2527_Var>* _230834_decl, jule::Trait _230850_l);
inline void _1ac598aa1_checkVar(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5a2527_Var>* _232530_decl, jule::Trait _232546_l);
inline void _1ac598c9e_checkGlobals(jule::Ptr<_1ac578256_sema> _self_);
inline jule::Ptr<_1ac4dee04_FnIns> _1ac59919a_readyToCheckFn(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _234936_s, jule::Ptr<_1ac4dbd46_Fn>* _234956_f);
inline __jule_tuple_bool__jule_tuple_bool _1ac599596_checkGenericFn(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _236536_f, jule::Ptr<_1ac4912c3_Token>* _236552_et);
inline void _1ac599909_checkTypeMethod(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _238837_s, jule::Ptr<_1ac4dbd46_Fn>* _238857_f);
inline jule::Ptr<_1ac4dee04_FnIns> _1ac599db0_checkStructInsOp(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _240138_s, jule::Ptr<_1ac4dbd46_Fn>* _240158_f, jule::Fn<jule::Bool,jule::Ptr<_1ac4dbd46_Fn>> _240166_p);
inline jule::Bool _1ac59a2ab_checkStructEnv(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _241136_s, jule::Ptr<_1ac4912c3_Token> _241155_errorToken);
inline jule::Bool _1ac59a6a7_precheckStructIns(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _250839_s, jule::Ptr<_1ac4912c3_Token> _250858_errorToken);
inline void _1ac59a960_checkStructIns(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _254536_s);
inline void _1ac59ac18_checkTypeStruct(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _255137_s);
inline void _1ac59ae16_checkStructTypes(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac59b1be_checkStructInsOperators(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns> _257544_s);
inline void _1ac59b477_precheckStructType(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _263940_s);
inline void _1ac59b675_precheckStructTypes(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac59b92d_checkRets(_1ac578256_sema* _self_, jule::Ptr<_1ac4dee04_FnIns>* _266530_f);
inline void _1ac59bc91_checkFnInsSc(_1ac578256_sema* _self_, jule::Ptr<_1ac4dee04_FnIns>* _267633_f, jule::Ptr<_1ac53c25e_scopeChecker>* _267649_sc);
inline void _1ac59c104_checkFnInsCaller(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _268938_f, jule::Ptr<_1ac4912c3_Token> _268953_caller);
inline void _1ac59c3ac_checkFnIns(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _271132_f);
inline void _1ac59c665_checkFunc(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _271531_f);
inline void _1ac59c91d_checkTestFn(_1ac578256_sema* _self_, jule::Ptr<_1ac4dee04_FnIns>* _273032_f);
inline void _1ac59cbc6_precheckFunc(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _276334_f);
inline void _1ac59cdc4_precheckFuncs(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac59d0c2_checkFuncs(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac59d2c0_checkPackageTypes(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac59d4bd_setFileSemaFields(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac59d6bb_setSemaFields(jule::Ptr<_1ac578256_sema> _self_);
inline void _1ac59d974_check(jule::Ptr<_1ac578256_sema> _self_, jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _284127_files);
inline _1ac59dd70_missingRetChecker static__1ac59e26b_new(void);
inline jule::Bool _1ac59e579_checkConditional(_1ac59dd70_missingRetChecker* _self_, jule::Ptr<_1ac535b09_Conditional> _288932_c);
inline jule::Bool _1ac59e8ba_checkMatch(_1ac59dd70_missingRetChecker* _self_, jule::Ptr<_1ac539701_Match> _290126_m);
inline jule::Bool _1ac59ecb6_checkInfIter(_1ac59dd70_missingRetChecker* _self_, jule::Uintptr _292724_it, jule::Ptr<_1ac534ec1_Scope>* _292742_s);
inline jule::Bool _1ac5a0107_checkScope(_1ac59dd70_missingRetChecker* _self_, jule::Ptr<_1ac534ec1_Scope> _294526_s);
inline jule::Bool _1ac5a0448_check(_1ac59dd70_missingRetChecker* _self_, jule::Ptr<_1ac534ec1_Scope> _300021_s);
inline jule::Bool _1ac5a2934_IsInitialized(_1ac5a2527_Var* _self_);
inline jule::Bool _1ac5a2bba_IsTypeInferred(_1ac5a2527_Var* _self_);
inline jule::Bool _1ac5a2e51_untypedConstant(_1ac5a2527_Var* _self_);
inline jule::Bool static__1ac5a3b22_Dispose(jule::Ptr<_1ac4dbd46_Fn> _1020_f);
inline jule::Bool static__1ac5a3ddb_Str(jule::Ptr<_1ac4dbd46_Fn> _2416_f);
inline jule::Bool static__1ac5a4260_logical(jule::Ptr<_1ac4dbd46_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1ac5a4529_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _7215_f);
inline jule::Bool static__1ac5a47e3_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _7715_f);
inline jule::Bool static__1ac5a4aac_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _8217_f);
inline jule::Bool static__1ac5a4d76_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _8715_f);
inline jule::Bool static__1ac5a5140_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _9217_f);
inline jule::Bool static__1ac5a54b4_result(jule::Ptr<_1ac4dbd46_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1ac5a577d_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _11816_f);
inline jule::Bool static__1ac5a5a47_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _12316_f);
inline jule::Bool static__1ac5a5d11_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _12816_f);
inline jule::Bool static__1ac5a60ca_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _13316_f);
inline jule::Bool static__1ac5a6394_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _13816_f);
inline jule::Bool static__1ac5a665d_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _14316_f);
inline jule::Bool static__1ac5a6927_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _14816_f);
inline jule::Bool static__1ac5a6be1_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _15319_f);
inline jule::Bool static__1ac5a6eaa_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _15818_f);
inline jule::Bool static__1ac5a7274_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _16319_f);
inline jule::Bool static__1ac5a75e8_unary(jule::Ptr<_1ac4dbd46_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1ac5a78b2_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _18716_f);
inline jule::Bool static__1ac5a7b7b_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _19216_f);
inline jule::Bool static__1ac5a7e45_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _19719_f);
inline jule::Bool static__1ac5a82b9_assign(jule::Ptr<_1ac4dbd46_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1ac5a8583_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _22122_f);
inline jule::Bool static__1ac5a884c_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _22622_f);
inline jule::Bool static__1ac5a8b16_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _23122_f);
inline jule::Bool static__1ac5a8dd0_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _23622_f);
inline jule::Bool static__1ac5a9199_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _24122_f);
inline jule::Bool static__1ac5a9463_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _24622_f);
inline jule::Bool static__1ac5a972c_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _25122_f);
inline jule::Bool static__1ac5a99e6_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _25624_f);
inline jule::Bool static__1ac5a9cb0_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _26125_f);
inline jule::Bool static__1ac5aa079_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _26625_f);
inline void _1ac5e2325_pushErr(_1ac5e1ce7_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args);
inline jule::Bool _1ac5e25ab_checkTrait(_1ac5e1ce7_typeCompatibilityChecker* _self_);
inline jule::Bool _1ac5e2842_checkPtr(_1ac5e1ce7_typeCompatibilityChecker* _self_);
inline jule::Bool _1ac5e2ac8_checkPrim(_1ac5e1ce7_typeCompatibilityChecker* _self_);
inline jule::Bool _1ac5e2ec4_typeEnum(_1ac5e1ce7_typeCompatibilityChecker* _self_, jule::Ptr<_1ac5047ba_TypeEnum>* _19925_e, jule::Ptr<_1ac63d2d8_TypeKind>* _19944_t2);
inline jule::Bool _1ac5e325a_checkTypeEnum(_1ac5e1ce7_typeCompatibilityChecker* _self_);
inline jule::Bool _1ac5e34e1_check(_1ac5e1ce7_typeCompatibilityChecker* _self_);
inline void _1ac5e413a_pushErr(_1ac5e3b73_assignTypeChecker* _self_, jule::Str _25623_fmt, jule::Slice<jule::Any> _25636_args);
inline jule::Bool _1ac5e43c1_checkValidity(_1ac5e3b73_assignTypeChecker* _self_);
inline jule::Bool _1ac5e4657_checkConst(_1ac5e3b73_assignTypeChecker* _self_);
inline jule::Bool _1ac5e48dd_checkCompatibility(_1ac5e3b73_assignTypeChecker* _self_);
inline jule::Bool _1ac5e4b74_check(_1ac5e3b73_assignTypeChecker* _self_);
inline jule::Bool _1b3c0a0eb_annotateConstraintElem(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _35846_k);
inline jule::Bool _1b3c09859_annotateConstraintElem(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _35846_k);
inline jule::Bool _1b3c121e1_annotateConstraintElem(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _35846_k);
inline jule::Bool _1b3c17d62_annotateConstraintElem(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _35846_k);
inline jule::Bool _1ac5e5e72_annotateConstraintMap(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _37842_k);
inline jule::Bool _1ac5e62b3_annotateConstraintTup(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _39342_k);
inline jule::Bool _1ac5e6604_annotateConstraintFn(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _41041_k);
inline jule::Bool _1ac5e6945_annotateConstraintIdent(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _43144_k);
inline jule::Bool _1ac5e6c86_annotateConstraint(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _46039_k);
inline void _1ac5e70e9_pushGeneric(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _48532_k, jule::I64 _48546_i);
inline jule::Bool _1ac5e743a_annotatePrim(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _50040_k);
inline jule::Bool _1ac5e777b_annotateArr(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _50439_k);
inline jule::Bool _1ac5e7abc_annotateSlc(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _51439_k);
inline jule::Bool _1ac5e7eb8_checkMapKey(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _52438_k, jule::Ptr<_1ac63d2d8_TypeKind>* _52458_ck);
inline jule::Bool _1ac5e8309_annotateMap(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _53239_k);
inline jule::Bool _1ac5e864a_annotateFn(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _54238_k);
inline jule::Bool _1ac5e898b_annotatePtr(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _57139_k);
inline jule::Bool _1ac5e8ccc_annotateSptr(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _58140_k);
inline jule::Bool _1ac5e911d_annotateStruct(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _59142_k);
inline jule::Bool _1ac5e945e_annotateAny(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _61339_k);
inline jule::Bool _1ac5e97a0_annotateKind(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _63440_k);
inline jule::Bool _1ac5e9a36_annotate(_1ac5e5548_dynamicTypeAnnotation* _self_);
inline void _1ac5ea949_pushErrToken(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Ptr<_1ac4912c3_Token> _67928_token, jule::Str _67943_fmt, jule::Slice<jule::Any> _67956_args);
inline void _1ac5eacac_pushErr(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Str _68323_fmt, jule::Slice<jule::Any> _68336_args);
inline jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>> _1ac5eb043_getParams(_1ac5ea3a5_fnCallArgChecker* _self_);
inline jule::Bool _1ac5eb384_checkCounts(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>* _69628_params);
inline jule::Bool _1ac5eb83a_checkArg(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Ptr<_1ac4ddc9e_ParamIns>* _72829_p, jule::Ptr<_1ac60a55d_Data>* _72848_arg, jule::Ptr<_1ac4912c3_Token>* _72865_errorToken);
inline jule::Bool _1ac5ebc36_push(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Ptr<_1ac4ddc9e_ParamIns>* _75725_p, jule::Ptr<_1ac4aaab2_Expr> _75743_arg);
inline jule::Bool _1ac5ec132_pushVariadic(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Ptr<_1ac4ddc9e_ParamIns>* _78133_p, jule::I64 _78151_i);
inline jule::Bool _1ac5ec473_checkArgs(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>* _86230_params);
inline jule::Bool _1ac5ec709_checkDynamicTypeAnnotation(_1ac5ea3a5_fnCallArgChecker* _self_);
inline jule::Bool _1ac5ec990_check(_1ac5ea3a5_fnCallArgChecker* _self_);
inline void _1ac5ed870_pushErr(_1ac5ed2dc_structLitChecker* _self_, jule::Ptr<_1ac4912c3_Token> _94223_token, jule::Str _94238_fmt, jule::Slice<jule::Any> _94251_args);
inline void _1ac5edbd3_pushSuggestion(_1ac5ed2dc_structLitChecker* _self_, jule::Str _94730_fmt, jule::Slice<jule::Any> _94743_args);
inline void _1ac5ee101_pushMatch(_1ac5ed2dc_structLitChecker* _self_, jule::Ptr<_1ac4c9938_FieldIns>* _95130_f, jule::Ptr<_1ac60a55d_Data>* _95149_d, jule::Ptr<_1ac4912c3_Token>* _95164_errorToken);
inline void _1ac5ee464_checkPair(_1ac5ed2dc_structLitChecker* _self_, jule::Ptr<_1ac4b02d1_FieldExprPair>* _97030_pair, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>* _97057_exprs);
inline jule::Bool _1ac5ee7a5_readyExprs(_1ac5ed2dc_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>* _100931_exprs);
inline void _1ac5eea5d_check(_1ac5ed2dc_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>* _103326_exprs);
inline jule::Ptr<_1ac5a2527_Var> _1ac6005db_buildVar(_1ac6000be_rangeChecker* _self_, jule::Ptr<_1ac4b95e8_VarDecl>* _110925_decl);
inline void _1ac6007d9_setSizeKey(_1ac6000be_rangeChecker* _self_);
inline void _1ac600c07_checkRangeExprValidity(_1ac6000be_rangeChecker* _self_, jule::Ptr<_1ac60a55d_Data>* _112843_d, jule::Ptr<_1ac5a2527_Var>* _112854_key, jule::Ptr<_1ac63d2d8_TypeKind>* _112870_k);
inline void _1ac600e05_checkSlice(_1ac6000be_rangeChecker* _self_);
inline void _1ac601103_checkArray(_1ac6000be_rangeChecker* _self_);
inline void _1ac601301_checkMapKeyA(_1ac6000be_rangeChecker* _self_);
inline void _1ac6014ee_checkMapKeyB(_1ac6000be_rangeChecker* _self_);
inline void _1ac6016ec_checkMap(_1ac6000be_rangeChecker* _self_);
inline void _1ac6018ea_checkStr(_1ac6000be_rangeChecker* _self_);
inline void _1ac601ae8_checkComptime(_1ac6000be_rangeChecker* _self_);
inline jule::Bool _1ac601d7e_checkComptimeRange(_1ac6000be_rangeChecker* _self_);
inline jule::Bool _1ac602115_check(_1ac6000be_rangeChecker* _self_);
inline void _1ac602c92_prepareTypes(_1ac602830_retTypeChecker* _self_);
inline void _1ac60304a_prepareExprs(_1ac602830_retTypeChecker* _self_, jule::Ptr<_1ac4aaab2_Expr>* _128733_e);
inline void _1ac603248_checkExprs(_1ac602830_retTypeChecker* _self_);
inline jule::Bool _1ac6034ce_tryFuncMultiRetForward(_1ac602830_retTypeChecker* _self_);
inline jule::Bool _1ac603820_check(_1ac602830_retTypeChecker* _self_, jule::Ptr<_1ac4aaab2_Expr>* _138926_e);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac6053b0_SelectPackage(_1ac604d93_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _2729_selector);
inline jule::Ptr<_1ac5a2527_Var> _1ac6057ab_FindVar(_1ac604d93_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac605ba7_FindTypeAlias(_1ac604d93_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1ac4c767d_Struct> _1ac6060a3_FindStruct(_1ac604d93_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac60649e_FindFn(_1ac604d93_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1ac5008a4_Trait> _1ac6067e0_FindTrait(_1ac604d93_SymbolTable* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1ac5030b0_Enum> _1ac606b31_FindEnum(_1ac604d93_SymbolTable* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac606e72_FindTypeEnum(_1ac604d93_SymbolTable* _self_, jule::Str _9728_ident);
inline jule::I64 _1ac607439_findVar1(_1ac604d93_SymbolTable* _self_, jule::Ptr<_1ac5a2527_Var>* _10825_v);
inline jule::Ptr<_1ac5a2527_Var> _1ac6078e0_findVar(_1ac604d93_SymbolTable* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac607d96_findTypeAlias(_1ac604d93_SymbolTable* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1ac608292_defByIdent(_1ac604d93_SymbolTable* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1ac608748_isDuplicatedIdent(_1ac604d93_SymbolTable* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Bool _1ac60a97b_IsNil(_1ac60a55d_Data* _self_);
inline jule::Bool _1ac60ac12_IsVoid(_1ac60a55d_Data* _self_);
inline jule::Bool _1ac60ae98_IsConst(_1ac60a55d_Data* _self_);
inline jule::Bool _1ac60b2d9_GoodOperand(_1ac60a55d_Data* _self_, jule::Ptr<_1ac60a55d_Data>* _10628_other);
inline void _1ac60c818_pushErr(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _13723_token, jule::Str _13738_fmt, jule::Slice<jule::Any> _13751_args);
inline void _1ac60cb7b_pushSuggestion(_1ac60c285_eval* _self_, jule::Str _14230_fmt, jule::Slice<jule::Any> _14243_args);
inline void _1ac60cd79_allowBuiltin(_1ac60c285_eval* _self_);
inline void _1ac60d077_disallowBuiltin(_1ac60c285_eval* _self_);
inline jule::Bool _1ac60d30d_isUnsafe(_1ac60c285_eval* _self_);
inline jule::Bool _1ac60d594_isGlobal(_1ac60c285_eval* _self_);
inline jule::Bool _1ac60d8a2_applyNumericPrefix(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _16939_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac60dbe3_litStr(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr>* _20419_l);
inline jule::Ptr<_1ac60a55d_Data> _1ac60e034_litRune(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr>* _22120_l);
inline jule::Ptr<_1ac60a55d_Data> _1ac60e375_litFloat(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr>* _24021_l);
inline jule::Ptr<_1ac60a55d_Data> _1ac60e6b6_litInt(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr>* _25223_l);
inline jule::Ptr<_1ac60a55d_Data> _1ac60ea07_litNum(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr>* _30723_l);
inline jule::Ptr<_1ac60a55d_Data> _1ac60ed48_evalLit(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr> _31623_lit);
inline jule::Any _1ac610189_findBuiltins(_1ac60c285_eval* _self_, jule::Str* _32929_ident);
inline jule::Any _1ac610585_getDef(_1ac60c285_eval* _self_, jule::Str* _35623_ident, jule::Bool _35635_binded);
inline jule::Ptr<_1ac4e308e_ReferenceStack> _1ac61081b_getOwnerRefers(_1ac60c285_eval* _self_);
inline void _1b3dca013_pushReference(_1ac60c285_eval* _self_, jule::Ptr<_1ac4dee04_FnIns>* _41437_ref);
inline void _1b3de1ab8_pushReference(_1ac60c285_eval* _self_, jule::Ptr<_1ac5a2527_Var>* _41437_ref);
inline void _1b366885c_pushReference(_1ac60c285_eval* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _41437_ref);
inline jule::Ptr<_1ac60a55d_Data> _1ac610e15__evalEnum(_1ac60c285_eval* _self_, jule::Ptr<_1ac5030b0_Enum> _42125_enm);
inline jule::Ptr<_1ac60a55d_Data> _1ac611311_evalEnum(_1ac60c285_eval* _self_, jule::Ptr<_1ac5030b0_Enum> _43028_enm, jule::Ptr<_1ac4912c3_Token> _43040_errorToken);
inline jule::Ptr<_1ac60a55d_Data> _1ac611652__evalTypeEnum(_1ac60c285_eval* _self_, jule::Ptr<_1ac5047ba_TypeEnum> _43929_enm);
inline jule::Ptr<_1ac60a55d_Data> _1ac611a4d_evalTypeEnum(_1ac60c285_eval* _self_, jule::Ptr<_1ac5047ba_TypeEnum> _44832_enm, jule::Ptr<_1ac4912c3_Token> _44848_errorToken);
inline jule::Ptr<_1ac60a55d_Data> _1ac611d8e__evalStruct(_1ac60c285_eval* _self_, jule::Ptr<_1ac4ca4d8_StructIns> _45727_s);
inline jule::Ptr<_1ac60a55d_Data> _1ac61228a_evalStruct(_1ac60c285_eval* _self_, jule::Ptr<_1ac4c767d_Struct> _47130_s, jule::Ptr<_1ac4912c3_Token> _47146_errorToken);
inline jule::Ptr<_1ac60a55d_Data> _1ac6125cb_evalFnIns(_1ac60c285_eval* _self_, jule::Ptr<_1ac4dee04_FnIns> _50025_f);
inline void _1ac61293e_checkDeprecated(_1ac60c285_eval* _self_, jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _50936_directives, jule::Ptr<_1ac4912c3_Token> _50967_tok);
inline jule::Ptr<_1ac60a55d_Data> _1ac612d3a_evalFn(_1ac60c285_eval* _self_, jule::Ptr<_1ac4dbd46_Fn> _52526_f, jule::Ptr<_1ac4912c3_Token> _52534_errorToken);
inline void _1ac613258_pushIllegalCycleError(_1ac60c285_eval* _self_, jule::Ptr<_1ac5a2527_Var>* _55038_v1, jule::Ptr<_1ac5a2527_Var>* _55049_v2, _1b097ade7_StrBuilder* _55064_message);
inline jule::Bool _1ac613654_checkCrossCycle(_1ac60c285_eval* _self_, jule::Ptr<_1ac5a2527_Var>* _56032_v, _1b097ade7_StrBuilder* _56046_message);
inline jule::Bool _1ac613a50_checkIllegalCycles(_1ac60c285_eval* _self_, jule::Ptr<_1ac5a2527_Var>* _57739_v, jule::Ptr<_1ac4912c3_Token> _57748_declToken);
inline jule::Ptr<_1ac60a55d_Data> _1ac613e4b_evalVar(_1ac60c285_eval* _self_, jule::Ptr<_1ac5a2527_Var> _60527_v, jule::Ptr<_1ac4912c3_Token> _60536_errorToken);
inline jule::Ptr<_1ac60a55d_Data> _1ac614347_evalTypeAlias(_1ac60c285_eval* _self_, jule::Ptr<_1ac63c4e6_TypeAlias> _72833_ta, jule::Ptr<_1ac4912c3_Token> _72849_errorToken);
inline jule::Ptr<_1ac60a55d_Data> _1ac614743_evalDef(_1ac60c285_eval* _self_, jule::Any* _76728_def, jule::Ptr<_1ac4912c3_Token> _76742_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac614a84_evalIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac4ac3cc_IdentExpr> _79129_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac614dc5_evalUnary(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4acb6e_UnaryExpr> _79630_u);
inline jule::Ptr<_1ac60a55d_Data> _1ac615216_evalVariadic(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ad048_VariadicExpr> _80133_v);
inline jule::Ptr<_1ac60a55d_Data> _1ac615557_evalUnsafe(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4abe26_UnsafeExpr> _82331_u);
inline jule::Ptr<_1ac60a55d_Data> _1ac615898_evalArr(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b2118_SliceExpr> _83128_s);
inline jule::Ptr<_1ac60a55d_Data> _1ac615d4e_evalExpSlc(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b2118_SliceExpr> _90831_s, jule::Ptr<_1ac63d2d8_TypeKind> _90850_t, jule::Any _90868_first);
inline jule::Ptr<_1ac60a55d_Data> _1ac616190_evalSliceExpr(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b2118_SliceExpr> _94634_s);
inline jule::Bool _1ac61658b_checkIntegerIndexingByData(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _98247_d, jule::Ptr<_1ac4912c3_Token> _98261_token);
inline void _1ac6169a9_indexingPtr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _99532_d, jule::Ptr<_1ac60a55d_Data>* _99547_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _99566_i);
inline void _1ac616dc7_indexingArr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _101132_d, jule::Ptr<_1ac60a55d_Data>* _101147_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _101166_i);
inline void _1ac6172e5_indexingSlc(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _102132_d, jule::Ptr<_1ac60a55d_Data>* _102147_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _102166_i);
inline void _1ac617713_indexingMap(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _104432_d, jule::Ptr<_1ac60a55d_Data>* _104447_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _104466_i);
inline void _1ac617b31_indexingStr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _106132_d, jule::Ptr<_1ac60a55d_Data>* _106147_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _106166_i);
inline void _1ac61804e_comptimeRange(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _108934_d, jule::Ptr<_1ac60a55d_Data>* _108949_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _108968_i);
inline void _1ac61846c_toIndexing(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _111431_d, jule::Ptr<_1ac60a55d_Data>* _111446_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _111465_i);
inline jule::Bool _1ac618923_pushGenericsFromExprSubIdent(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _114250_sexpr, jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>* _11438_generics, jule::Ptr<_1ac4aaab2_Expr>* _114336_expr);
inline jule::Bool _1ac618d1e_pushGenericsFromData(jule::Ptr<_1ac60c285_eval> _self_, jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>* _115342_generics, jule::Ptr<_1ac4aaab2_Expr>* _115370_expr);
inline void _1ac619182_evalIdentDeclFromIndexing(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac60a55d_Data>* _122347_d, jule::Ptr<_1ac4b2a75_IndexingExpr>* _122362_i);
inline __jule_tuple_bool__jule_tuple_bool _1ac619638_checkGenericFn(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4dee04_FnIns>* _126636_f, jule::Ptr<_1ac4912c3_Token>* _126652_et, jule::Any* _126669_model);
inline void _1ac61999b_evalFnGenericFromIndexing(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac60a55d_Data>* _128247_d, jule::Ptr<_1ac4b2a75_IndexingExpr>* _128262_i);
inline jule::Ptr<_1ac60a55d_Data> _1ac619cdc_evalIndexing(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b2a75_IndexingExpr> _132233_i);
inline __jule_tuple_x_1ac60a55d_Data__jule_tuple_x_1ac60a55d_Data _1ac61a12d_evalSlicingExprs(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b31d5_SlicingExpr>* _138238_s);
inline void _1ac61a3d6_slicingArr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _141827_d);
inline void _1ac61a804_slicingStr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _143327_d, jule::Ptr<_1ac60a55d_Data>* _143338_l, jule::Ptr<_1ac60a55d_Data>* _143349_r);
inline void _1ac61accc_checkSlicing(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _147133_d, jule::Ptr<_1ac60a55d_Data>* _147144_l, jule::Ptr<_1ac60a55d_Data>* _147155_r, jule::Ptr<_1ac4b31d5_SlicingExpr>* _147166_s);
inline jule::Ptr<_1ac60a55d_Data> _1ac61b11d_evalSlicing(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b31d5_SlicingExpr> _149032_s);
inline void _1ac61b53b_castPtr(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _152727_t, jule::Ptr<_1ac60a55d_Data> _152745_d, jule::Ptr<_1ac4912c3_Token> _152755_errorToken);
inline void _1ac61b959_castStruct(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _154930_t, jule::Ptr<_1ac60a55d_Data> _154948_d, jule::Ptr<_1ac4912c3_Token> _154958_errorToken);
inline void _1ac61bd77_castRef(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _156627_t, jule::Ptr<_1ac60a55d_Data> _156645_d, jule::Ptr<_1ac4912c3_Token> _156655_errorToken);
inline void _1ac61c295_castSlc(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _158927_t, jule::Ptr<_1ac60a55d_Data> _158945_d, jule::Ptr<_1ac4912c3_Token> _158955_errorToken);
inline void _1ac61c608_castStr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data> _164427_d, jule::Ptr<_1ac4912c3_Token> _164437_errorToken);
inline void _1ac61ca26_castInt(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _169127_t, jule::Ptr<_1ac60a55d_Data> _169145_d, jule::Ptr<_1ac4912c3_Token> _169155_errorToken);
inline void _1ac61ce44_castNum(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _173727_t, jule::Ptr<_1ac60a55d_Data> _173745_d, jule::Ptr<_1ac4912c3_Token> _173755_errorToken);
inline void _1ac61d362_castPrim(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _176828_t, jule::Ptr<_1ac60a55d_Data> _176846_d, jule::Ptr<_1ac4912c3_Token> _176856_errorToken);
inline void _1ac61d6c5_castConstant(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _178433_t, jule::Ptr<_1ac60a55d_Data>* _178452_d);
inline void _1ac61dae3_castTypeEnum(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _179333_t, jule::Ptr<_1ac60a55d_Data>* _179352_d, jule::Ptr<_1ac4912c3_Token>* _179367_errorToken);
inline void _1ac61e011_castTypeEnumT(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _180334_t, jule::Ptr<_1ac60a55d_Data>* _180353_d, jule::Ptr<_1ac4912c3_Token>* _180368_errorToken);
inline jule::Ptr<_1ac60a55d_Data> _1ac61e4b7_evalCastByTypeNData(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _181339_t, jule::Ptr<_1ac60a55d_Data> _181357_d, jule::Ptr<_1ac4912c3_Token> _181371_errorToken);
inline jule::Ptr<_1ac60a55d_Data> _1ac61e96d_evalCastT(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _189031_t, jule::Ptr<_1ac4aaab2_Expr>* _189050_e, jule::Ptr<_1ac4912c3_Token>* _189065_et);
inline jule::Ptr<_1ac60a55d_Data> _1ac61ecae_evalCast(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ad422_CastExpr> _190729_c);
inline jule::Ptr<_1ac60a55d_Data> _1ac620100_evalNsSelection(_1ac60c285_eval* _self_, jule::Ptr<_1ac4ad7eb_NsSelectionExpr> _191635_s);
inline jule::Ptr<_1ac60a55d_Data> _1ac6205a6_evalStructLitExplicit(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ca4d8_StructIns> _194242_s, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _19437_exprs, jule::Ptr<_1ac4912c3_Token> _194327_errorToken);
inline jule::Ptr<_1ac60a55d_Data> _1ac6208e7_evalStructLit(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b0b0b_StructLit> _198034_lit);
inline _1ac6506d5_typeChecker _1ac620b7d_typeChecker(_1ac60c285_eval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac620ebe_evalType(_1ac60c285_eval* _self_, jule::Ptr<_1ac4a677d_TypeDecl> _201228_t);
inline void _1ac621332_callTypeFn(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ae7db_FnCallExpr>* _202532_fc, jule::Ptr<_1ac60a55d_Data>* _202554_d);
inline void _1ac621695_callBuiltinFn(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ae7db_FnCallExpr>* _205135_fc, jule::Ptr<_1ac60a55d_Data>* _205157_d);
inline void _1ac621a08_checkFnOfConcurrentCall(_1ac60c285_eval* _self_, jule::Ptr<_1ac4dee04_FnIns>* _206340_f, jule::Ptr<_1ac4912c3_Token> _206351_errorToken);
inline void _1ac621e26_processExceptionalHandler(_1ac60c285_eval* _self_, jule::Ptr<_1ac4dee04_FnIns>* _208246_f, jule::Ptr<_1ac4ae7db_FnCallExpr>* _208262_fc, jule::Ptr<_1ac60a55d_Data>* _208284_d);
inline void _1ac622289_callFn(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ae7db_FnCallExpr>* _210928_fc, jule::Ptr<_1ac60a55d_Data>* _210950_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac6225ca_evalFnCall(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ae7db_FnCallExpr> _225831_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac6229c6_evalEnumStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac5030b0_Enum> _229134_enm, jule::Ptr<_1ac4912c3_Token> _229150_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac622dc2_evalTypeEnumStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac5047ba_TypeEnum> _229938_enm, jule::Ptr<_1ac4912c3_Token> _229954_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac6232bd_evalStructStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4ca4d8_StructIns> _232236_s, jule::Ptr<_1ac4912c3_Token> _232251_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac623774_evalTraitSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data> _235737_d, jule::Ptr<_1ac5008a4_Trait> _235751_trt, jule::Ptr<_1ac4912c3_Token> _235768_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac623cd5_evalStructSubIdentField(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _237944_d, jule::Ptr<_1ac4ca4d8_StructIns>* _237959_s, jule::Ptr<_1ac4912c3_Token>* _237979_tok, jule::Ptr<_1ac4c9938_FieldIns>* _237997_f);
inline jule::Ptr<_1ac60a55d_Data> _1ac624401_evalStructSubIdentMethod(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _240445_d, jule::Ptr<_1ac4ca4d8_StructIns>* _240460_s, jule::Ptr<_1ac4912c3_Token>* _240480_tok, jule::Ptr<_1ac4dbd46_Fn>* _240498_m, jule::Bool _2404106_ref);
inline jule::Ptr<_1ac60a55d_Data> _1ac624962_evalStructSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data> _242538_d, jule::Ptr<_1ac4ca4d8_StructIns> _242552_s, jule::Ptr<_1ac4adbc5_SubIdentExpr> _242571_si, jule::Bool _242590_ref);
inline jule::Ptr<_1ac60a55d_Data> _1ac624ca3_evalIntTypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _244933_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac6250e4_evalUintTypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _247634_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac625435_evalI8TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _249432_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac625776_evalI16TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _252333_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac625ab7_evalI32TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _255233_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac625e08_evalI64TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _258133_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac626249_evalU8TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _261032_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac62658a_evalU16TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _262933_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac6268cb_evalU32TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _264833_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac626c1c_evalU64TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _266733_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac62705d_evalF32TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _268633_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac62739e_evalF64TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _272533_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac62779a_evalPrimStatic(_1ac60c285_eval* _self_, jule::Str _276430_kind, jule::Ptr<_1ac4912c3_Token> _276441_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac627b96_evalTypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data> _279634_d, jule::Ptr<_1ac4adbc5_SubIdentExpr> _279648_si);
inline jule::Ptr<_1ac60a55d_Data> _1b3a7b19d_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac5170e6_comptimeTypeInfo>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1ac60a55d_Data> _1b3a80988_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac507c52_comptimeStructField>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1ac60a55d_Data> _1b3a8520c_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac50e198_comptimeEnumField>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1ac60a55d_Data> _1b3a899c5_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac511eae_comptimeParam>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1ac60a55d_Data> _1b3a8e4be_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac50ae75_comptimeStatic>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1ac60a55d_Data> _1b3a93c43_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac51d1eb_comptimeValue>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1ac60a55d_Data> _1b3a984b7_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac5228c6_comptimeFile>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si);
inline jule::Ptr<_1ac60a55d_Data> _1b3a9ccc4_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac5267dc_comptimeDecl>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si);
inline __jule_tuple_x_1ac60a55d_Data__jule_tuple_bool _1ac628548_tryComptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _282043_d, jule::Ptr<_1ac4adbc5_SubIdentExpr> _282057_si);
inline jule::Ptr<_1ac60a55d_Data> _1ac628944_evalObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data> _285135_d, jule::Ptr<_1ac4adbc5_SubIdentExpr> _285149_si);
inline jule::Ptr<_1ac60a55d_Data> _1ac628c85_evalSubIdent(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4adbc5_SubIdentExpr> _289533_si);
inline jule::Ptr<_1ac60a55d_Data> _1ac6290c6_evalTuple(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ab6a6_TupleExpr> _290930_tup);
inline jule::Ptr<_1ac60a55d_Data> _1ac6294c2_evalMap(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac64c094_Map> _293828_m, jule::Ptr<_1ac4b10b2_BraceLit> _293841_lit);
inline jule::Ptr<_1ac60a55d_Data> _1ac629813_evalBraceLit(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b10b2_BraceLit> _298633_lit);
inline jule::Ptr<_1ac60a55d_Data> _1ac629b54_evalAnonFunc(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b843d_FnDecl> _300133_decl);
inline jule::Ptr<_1ac60a55d_Data> _1ac629e95_evalBinary(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ae17b_BinaryExpr> _303931_op);
inline jule::Ptr<_1ac60a55d_Data> _1ac62a2d6_evalExprKind(jule::Ptr<_1ac60c285_eval> _self_, jule::Any _305433_kind);
inline jule::Ptr<_1ac60a55d_Data> _1ac62a627_eval1(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4aaab2_Expr> _310226_expr);
inline jule::Ptr<_1ac60a55d_Data> _1ac62a968_eval(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4aaab2_Expr> _314725_expr);
inline jule::Ptr<_1ac60a55d_Data> _1ac62aca9_evalExpr1(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4aaab2_Expr> _316230_expr);
inline jule::Ptr<_1ac60a55d_Data> _1ac62b0ea_evalExpr(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4aaab2_Expr> _317829_expr);
inline _1ac62b57e_unaryEval static__1ac62ba02_new(jule::Ptr<_1ac60c285_eval> _319920_e);
inline void _1ac62bc00_minus(_1ac62b57e_unaryEval* _self_);
inline void _1ac62bded_plus(_1ac62b57e_unaryEval* _self_);
inline void _1ac62c0eb_caret(_1ac62b57e_unaryEval* _self_);
inline void _1ac62c2e9_excl(_1ac62b57e_unaryEval* _self_);
inline void _1ac62c4e7_star(_1ac62b57e_unaryEval* _self_);
inline void _1ac62c6e5_amper(_1ac62b57e_unaryEval* _self_);
inline void _1ac62c8e3_typeDecl(_1ac62b57e_unaryEval* _self_);
inline void _1ac62cae1_evalData(_1ac62b57e_unaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac62ce32_eval(_1ac62b57e_unaryEval* _self_, jule::Ptr<_1ac4acb6e_UnaryExpr> _345924_u);
inline _1ac62d51a_binaryEval static__1ac62db03_newPlain(jule::Ptr<_1ac60c285_eval> _350725_e);
inline _1ac62d51a_binaryEval static__1ac62de77_new(jule::Ptr<_1ac60c285_eval> _351320_e, jule::Ptr<_1ac4912c3_Token> _351334_op);
inline jule::Bool _1ac62e20d_checkTypeCompatibility(_1ac62d51a_binaryEval* _self_);
inline jule::Bool _1ac62e494_checkStructCommonOperatorCompatibility(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac62e72a_evalComptimeTypeInfo(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac62e9b1_evalNil(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac62ec47_evalEnum(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac62eecd_evalTypeEnum(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac630264_evalSptr(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac6304ea_evalPtr(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac630781_evalArr(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac630a17_evalStruct(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac630c9d_evalTrait(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac631034_evalAny(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac6312ba_evalBool(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac631551_evalStr(_1ac62d51a_binaryEval* _self_);
inline void _1ac63174e_setTypeToGreater(_1ac62d51a_binaryEval* _self_);
inline void _1ac631a07_checkModData(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _391233_d);
inline void _1ac631c05_mod(_1ac62d51a_binaryEval* _self_);
inline jule::Bool _1ac632101_numbersAreCompatibile(_1ac62d51a_binaryEval* _self_, jule::Str* _393434_lk, jule::Str* _393444_rk);
inline jule::Ptr<_1ac60a55d_Data> _1ac632387_shift(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac63261d_evalFloat(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac6328a4_evalInt(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac632b3a_evalPrim(_1ac62d51a_binaryEval* _self_);
inline jule::Bool _1ac632dc1_checkSpecialCases(_1ac62d51a_binaryEval* _self_);
inline jule::Ptr<_1ac60a55d_Data> _1ac633157_evalOp(_1ac62d51a_binaryEval* _self_);
inline void _1ac633410_evalConst(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _422430_d);
inline void _1ac6336b8_checkData(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _430230_d);
inline void _1ac6338b6_checkDatas(_1ac62d51a_binaryEval* _self_);
inline void _1ac633b6e_setModel(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _431429_d);
inline void _1ac633e27_postEval(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _434329_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac634323_solveExplicit(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _434834_l, jule::Ptr<_1ac60a55d_Data>* _434849_r);
inline jule::Ptr<_1ac60a55d_Data> _1ac634664_eval(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac4ae17b_BinaryExpr>* _436825_op);
inline jule::Str _1ac63d6d4_Str(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac63da25_Equal(jule::Ptr<_1ac63d2d8_TypeKind> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _9018_other);
inline jule::Bool _1ac63e185_Binded(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac63e41b_IsNil(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac63e6a2_Void(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac63e938_Comparable(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac63ebbe_Mutable(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac63ee55_Ordered(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac6401db_NilCompatible(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac640472_GC(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac640708_Variadicable(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac646401_Prim> _1ac64098e_Prim(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac649e2c_Sptr> _1ac640c25_Sptr(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac64d6e4_Ptr> _1ac640eab_Ptr(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac5030b0_Enum> _1ac641242_Enum(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac6414c8_TypeEnum(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac64cc21_Arr> _1ac64175e_Arr(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac64a900_Slc> _1ac6419e5_Slc(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac4dee04_FnIns> _1ac641c7b_Fn(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac642012_Struct(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac5008a4_Trait> _1ac642298_Trait(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac64c094_Map> _1ac64252e_Map(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac64b4e4_Tuple> _1ac6427b5_Tup(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac642a4b_comptime(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac5094e5_comptimeStructFields> _1ac642cd2_comptimeStructFields(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac507c52_comptimeStructField> _1ac643068_comptimeStructField(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac5104a7_comptimeEnumFields> _1ac6432ee_comptimeEnumFields(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac50e198_comptimeEnumField> _1ac643585_comptimeEnumField(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac513d18_comptimeParams> _1ac64381b_comptimeParams(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac511eae_comptimeParam> _1ac643aa2_comptimeParam(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac5071e6_comptimeRange> _1ac643d38_comptimeRange(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac515677_comptimeTypeInfos> _1ac6440be_comptimeTypeInfos(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac5170e6_comptimeTypeInfo> _1ac644355_comptimeTypeInfo(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac50c729_comptimeStatics> _1ac6445db_comptimeStatics(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac50ae75_comptimeStatic> _1ac644872_comptimeStatic(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac51d1eb_comptimeValue> _1ac644b08_comptimeValue(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac5267dc_comptimeDecl> _1ac644d8e_comptimeDecl(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac5244ee_comptimeDecls> _1ac645125_comptimeDecls(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac5228c6_comptimeFile> _1ac6453ab_comptimeFile(_1ac63d2d8_TypeKind* _self_);
inline jule::Ptr<_1ac520e57_comptimeFiles> _1ac645642_comptimeFiles(_1ac63d2d8_TypeKind* _self_);
inline jule::Bool _1ac645da1_checked(_1ac6459e9_TypeSymbol* _self_);
inline jule::Str _1ac646775_Str(_1ac646401_Prim* _self_);
inline jule::Bool _1ac646ab6_Equal(jule::Ptr<_1ac646401_Prim> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _53218_other);
inline jule::Bool _1ac64705b_IsConstraint(_1ac646401_Prim* _self_);
inline jule::Bool _1ac6472e2_IsI8(_1ac646401_Prim* _self_);
inline jule::Bool _1ac647578_IsI16(_1ac646401_Prim* _self_);
inline jule::Bool _1ac64780e_IsI32(_1ac646401_Prim* _self_);
inline jule::Bool _1ac647a95_IsI64(_1ac646401_Prim* _self_);
inline jule::Bool _1ac647d2b_IsU8(_1ac646401_Prim* _self_);
inline jule::Bool _1ac6480b2_IsU16(_1ac646401_Prim* _self_);
inline jule::Bool _1ac648348_IsU32(_1ac646401_Prim* _self_);
inline jule::Bool _1ac6485ce_IsU64(_1ac646401_Prim* _self_);
inline jule::Bool _1ac648865_IsF32(_1ac646401_Prim* _self_);
inline jule::Bool _1ac648aeb_IsF64(_1ac646401_Prim* _self_);
inline jule::Bool _1ac648d82_IsInt(_1ac646401_Prim* _self_);
inline jule::Bool _1ac649118_IsUint(_1ac646401_Prim* _self_);
inline jule::Bool _1ac64939e_IsUintptr(_1ac646401_Prim* _self_);
inline jule::Bool _1ac649635_IsBool(_1ac646401_Prim* _self_);
inline jule::Bool _1ac6498bb_IsStr(_1ac646401_Prim* _self_);
inline jule::Bool _1ac649b52_IsAny(_1ac646401_Prim* _self_);
inline jule::Str _1ac64a2d4_Str(_1ac649e2c_Sptr* _self_);
inline jule::Bool _1ac64a625_Equal(jule::Ptr<_1ac649e2c_Sptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _60918_other);
inline jule::Str _1ac64adb7_Str(_1ac64a900_Slc* _self_);
inline jule::Bool _1ac64b208_Equal(jule::Ptr<_1ac64a900_Slc> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _62818_other);
inline jule::Str _1ac64b89b_Str(_1ac64b4e4_Tuple* _self_);
inline jule::Bool _1ac64bbdc_Equal(jule::Ptr<_1ac64b4e4_Tuple> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _65718_other);
inline jule::Str _1ac64c44b_Str(_1ac64c094_Map* _self_);
inline jule::Bool _1ac64c78c_Equal(jule::Ptr<_1ac64c094_Map> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _69418_other);
inline jule::Str _1ac64d0c8_Str(_1ac64cc21_Arr* _self_);
inline jule::Bool _1ac64d419_Equal(jule::Ptr<_1ac64cc21_Arr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _72218_other);
inline jule::Str _1ac64da9b_Str(_1ac64d6e4_Ptr* _self_);
inline jule::Bool _1ac64dddc_Equal(jule::Ptr<_1ac64d6e4_Ptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _74618_other);
inline jule::Bool _1ac64e261_IsUnsafe(_1ac64d6e4_Ptr* _self_);
inline void _1ac650e66_pushErr(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4912c3_Token> _83823_token, jule::Str _83838_fmt, jule::Slice<jule::Any> _83851_args);
inline void _1ac651164_allowBuiltin(_1ac6506d5_typeChecker* _self_);
inline void _1ac651362_disallowBuiltin(_1ac6506d5_typeChecker* _self_);
inline void _1b421b893_pushReference(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _85037_t);
inline void _1b421e368_pushReference(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac5008a4_Trait>* _85037_t);
inline void _1ac6518c3_pushReferenceByKind(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _86040_k);
inline void _1ac651ce1_pushCycleError(_1ac6506d5_typeChecker* _self_, jule::Any _87126_def1, jule::Any _87137_def2, _1b097ade7_StrBuilder* _87153_message);
inline jule::Bool _1ac6521dc_checkCrossCycle(_1ac6506d5_typeChecker* _self_, jule::Any _89327_decl, _1b097ade7_StrBuilder* _89343_message);
inline jule::Bool _1ac6525d8_checkIllegalCycles(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _92735_ident, jule::Any _92762_decl);
inline jule::Trait _1ac6529d4_fromTypeAlias(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _97730_decl, jule::Ptr<_1ac63c4e6_TypeAlias>* _97757_ta);
inline jule::Ptr<_1ac5030b0_Enum> _1ac652dd0_fromEnum(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _105425_decl, jule::Ptr<_1ac5030b0_Enum>* _105452_e);
inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac6532cb_fromTypeEnum(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _106629_decl, jule::Ptr<_1ac5047ba_TypeEnum>* _106656_e);
inline jule::Ptr<_1ac5008a4_Trait> _1ac6536c7_fromTrait(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _107826_decl, jule::Ptr<_1ac5008a4_Trait>* _107853_t);
inline jule::Bool _1ac653ac3_checkStructIns(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _109135_ins, jule::Ptr<_1ac4912c3_Token>* _109157_errorToken);
inline void _1ac653d7b_appendUsedStructReference(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4c767d_Struct>* _111246_s);
inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac654277_buildStructInstance(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _112540_decl, jule::Ptr<_1ac4c767d_Struct>* _112567_s);
inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac654673_fromStructIns(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _117334_ins, jule::Ptr<_1ac4912c3_Token> _117355_token);
inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac654a6e_fromStruct(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _119131_decl, jule::Ptr<_1ac4c767d_Struct>* _119158_s);
inline jule::Trait _1ac654db0_getDef(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _123527_decl);
inline jule::Trait _1ac655201_buildIdent(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl> _129630_decl);
inline jule::Trait _1ac655542_buildSubIdent(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a7152_SubIdentTypeDecl> _130033_decl);
inline jule::Ptr<_1ac649e2c_Sptr> _1ac655883_buildSptrFromType(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _133438_elem);
inline jule::Ptr<_1ac649e2c_Sptr> _1ac655bc4_buildSptr(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a7828_SptrTypeDecl> _135429_decl);
inline jule::Ptr<_1ac64d6e4_Ptr> _1ac656015_buildPtrFromType(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _136337_elem);
inline jule::Ptr<_1ac64d6e4_Ptr> _1ac656356_buildPtr(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a82a7_PtrTypeDecl> _137828_decl);
inline jule::Ptr<_1ac64a900_Slc> _1ac656697_buildSlc(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a7bad_SlcTypeDecl> _139528_decl);
inline jule::Ptr<_1ac64cc21_Arr> _1ac6569d8_buildArr(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a8a49_ArrTypeDecl> _141628_decl);
inline jule::Ptr<_1ac64c094_Map> _1ac656d29_buildMap(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a9297_MapTypeDecl> _146528_decl);
inline jule::Ptr<_1ac64b4e4_Tuple> _1ac65716a_buildTuple(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a7eaa_TupleTypeDecl> _149730_decl);
inline jule::Bool _1ac6574ab_checkFuncTypes(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4dee04_FnIns>* _151035_f);
inline jule::Ptr<_1ac4dee04_FnIns> _1ac6577ec_buildFunc(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4b843d_FnDecl> _152829_decl);
inline jule::Trait _1ac657b3d_buildByNamespace(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a752b_NamespaceTypeDecl> _155836_decl);
inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac657e7e_build(_1ac6506d5_typeChecker* _self_, jule::Any* _158226_declKind);
inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac6582c0_checkDecl(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _167030_decl);
inline jule::Bool static__1ac658c1b_prim(jule::Str* _169718_ident, jule::Ptr<_1ac646401_Prim> _169730_t);
inline jule::Bool static__1ac659090_exist(jule::Str* _170119_ident, jule::Ptr<_1ac63d2d8_TypeKind>* _170136_k);
inline void _1ad258908_stop(_1ad258254_scopeParser* _self_);
inline jule::Bool _1ad258b8e_stopped(_1ad258254_scopeParser* _self_);
inline jule::Bool _1ad258e25_finished(_1ad258254_scopeParser* _self_);
inline jule::Bool _1ad2591ab_isLastSt(_1ad258254_scopeParser* _self_);
inline void _1ad25951e_pushErr(_1ad258254_scopeParser* _self_, jule::Ptr<_1ac4912c3_Token> _18823_token, jule::Str _18838_fmt);
inline void _1ad259882_pushSuggestion(_1ad258254_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args);
inline void _1ad259b3a_insertAsNext(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _19733_tokens);
inline jule::Ptr<_1ad2578b3_stmt> _1ad259dc1_next(_1ad258254_scopeParser* _self_);
inline jule::Ptr<_1ac4b679e_ScopeTree> _1ad25a2bc_buildScope(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _20731_tokens, jule::Ptr<_1ac4912c3_Token> _20753_end);
inline jule::Ptr<_1ac4b95e8_VarDecl> _1ad25a60d_buildVarSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _21831_tokens);
inline jule::Ptr<_1ac4b99c2_RetSt> _1ad25a94e_buildRetSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _22630_tokens);
inline jule::Ptr<_1ac4ba242_Iter> _1ad25ac90_buildWhileNextIter(_1ad258254_scopeParser* _self_, jule::Ptr<_1ad2578b3_stmt>* _23739_s);
inline jule::Ptr<_1ac4baa6c_WhileKind> _1ad25b0d1_buildWhileIterKind(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _28239_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1ad25b422_getRangeKindKeysTokens(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _28843_toks);
inline jule::Ptr<_1ac4b95e8_VarDecl> _1ad25b763_buildRangeKindKey(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _29438_tokens);
inline jule::Slice<jule::Ptr<_1ac4b95e8_VarDecl>> _1ad25baa4_buildRangeKindKeys(_1ad258254_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>>* _32039_parts);
inline void _1ad25be17_setupRangeKindKeysPlain(_1ad258254_scopeParser* _self_, jule::Ptr<_1ac4bb474_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _32866_tokens);
inline void _1ad25c27a_setupRangeKindKeysExplicit(_1ad258254_scopeParser* _self_, jule::Ptr<_1ac4bb474_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _34369_tokens);
inline void _1ad25c5dd_setupRangeKindKeys(_1ad258254_scopeParser* _self_, jule::Ptr<_1ac4bb474_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _35261_tokens);
inline jule::Ptr<_1ac4bb474_RangeKind> _1ad25ca94_buildRangeIterKind(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _3618_exprTokens, jule::Ptr<_1ac4912c3_Token>* _36135_inToken);
inline jule::Any _1ad25ce90_buildCommonIterKind(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _37640_tokens, jule::Ptr<_1ac4912c3_Token>* _37659_err_tok);
inline jule::Ptr<_1ac4ba242_Iter> _1ad25d2d1_buildCommonIter(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _40335_tokens);
inline jule::Ptr<_1ac4ba242_Iter> _1ad25d622_buildIterSt(_1ad258254_scopeParser* _self_, jule::Ptr<_1ad2578b3_stmt>* _43332_st);
inline jule::Ptr<_1ac4bb84d_BreakSt> _1ad25d963_buildBreakSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _44033_tokens);
inline jule::Ptr<_1ac4bbc27_ContSt> _1ad25dca4_buildContSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _45832_tokens);
inline jule::Ptr<_1ac4bc1cd_If> _1ad25e0e5_buildIf(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _47628_tokens);
inline jule::Ptr<_1ac4bc5a7_Else> _1ad25e436_buildElse(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _50930_tokens);
inline jule::Ptr<_1ac4bca5d_Conditional> _1ad25e777_buildIfElseChain(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _53336_tokens);
inline jule::Ptr<_1ac4aaab2_Expr> _1ad25eab8_buildCoCallSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _55633_tokens);
inline jule::Ptr<_1ac4b423b_GotoSt> _1ad25ee09_buildGotoSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _57232_tokens);
inline jule::Ptr<_1ac4b4538_FallSt> _1ad26024a_buildFallSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _59232_tokens);
inline jule::Ptr<_1ac4bd29a_TypeAliasDecl> _1ad26058b_buildTypeAliasSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _60237_tokens);
inline void _1ad260a64_pushCaseExpr(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _60832_tokens, jule::Ptr<_1ac4912c3_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>* _60925_exprs);
inline __jule_tuple_sx_1ac4aaab2_Expr__jule_tuple_bool _1ad26101a_buildCaseExprs(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _63135_tokens, jule::Ptr<_1ac4912c3_Token>* _63158_colon, jule::Bool _63173_typeMatch);
inline jule::Ptr<_1ac4b679e_ScopeTree> _1ad26135b_buildCaseScope(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _67335_tokens);
inline __jule_tuple_x_1ac4bd751_Case__jule_tuple_bool _1ad261757_buildCase(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _70030_tokens, jule::Bool _70048_typeMatch);
inline __jule_tuple_sx_1ac4bd751_Case__jule_tuple_x_1ac4bc5a7_Else _1ad261b53_buildCases(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _71930_tokens, jule::Bool _71948_typeMatch);
inline jule::Ptr<_1ac4be06a_MatchCase> _1ad261e94_buildMatchCase(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _75334_tokens);
inline jule::Ptr<_1ac4b679e_ScopeTree> _1ad2622d5_buildScopeSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _78632_tokens);
inline jule::Ptr<_1ac4b3d62_LabelSt> _1ad262626_buildLabelSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _82933_tokens);
inline __jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool _1ad262967_buildIdSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _84430_tokens);
inline jule::Ptr<_1ad2733d4_assignInfo> _1ad262ca8_buildAssignInfo(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _85836_tokens);
inline jule::Ptr<_1ac4b4b98_AssignLeft> _1ad2630e9_buildAssignL(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _90333_tokens);
inline jule::Slice<jule::Ptr<_1ac4b4b98_AssignLeft>> _1ad26343a_buildAssignLs(_1ad258254_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>>* _91434_parts);
inline __jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool _1ad26377b_buildPlainAssign(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _92337_tokens);
inline jule::Bool _1ad263b77_buildDeclAssign1(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _97737_lefts, jule::Ptr<_1ac4b522b_AssignSt>* _97759_assign);
inline __jule_tuple_x_1ac4b522b_AssignSt__jule_tuple_bool _1ad263eb8_buildDeclAssign(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _102535_tokens);
inline __jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool _1ad264309_buildAssignSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _105934_tokens);
inline jule::Ptr<_1ac4ab486_UseExpr> _1ad26464a_buildUseExpr(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _107233_tokens);
inline jule::Any _1ad26498b_buildConstSt(_1ad258254_scopeParser* _self_, jule::Ptr<_1ad2578b3_stmt>* _108533_st);
inline jule::Any _1ad264ccc_buildSt(_1ad258254_scopeParser* _self_, jule::Ptr<_1ad2578b3_stmt>* _111028_st);
inline void _1ad265140_build(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _117426_tokens, jule::Ptr<_1ac4b679e_ScopeTree>* _117449_s);
inline void _1ad266493_pushErr(_1ad265bbd_exprBuilder* _self_, jule::Ptr<_1ac4912c3_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args);
inline void _1ad266806_pushSuggestion(_1ad265bbd_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args);
inline jule::Ptr<_1ac4ab6a6_TupleExpr> _1ad266b47_buildTuple(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>>* _5431_parts);
inline jule::Ptr<_1ac4aba4c_LitExpr> _1ad266e88_buildLit(_1ad265bbd_exprBuilder* _self_, jule::Ptr<_1ac4912c3_Token> _6424_token);
inline jule::Any _1ad26761a_buildSingle(_1ad265bbd_exprBuilder* _self_, jule::Ptr<_1ac4912c3_Token> _7531_token);
inline jule::Ptr<_1ac4ac3cc_IdentExpr> _1ad26795b_buildBindIdent(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _9235_tokens);
inline jule::Ptr<_1ac4acb6e_UnaryExpr> _1ad267c9c_buildUnary(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _11130_tokens);
inline jule::Ptr<_1ac4adbc5_SubIdentExpr> _1ad2680dd_buildObjSubIdent(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _13236_tokens);
inline jule::Ptr<_1ac4ad7eb_NsSelectionExpr> _1ad26842e_buildNsSubIdent(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _14736_tokens);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad268770_buildType(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _17230_tokens);
inline jule::Any _1ad268ab1_buildSubIdent(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _18634_tokens);
inline jule::Ptr<_1ac4ad048_VariadicExpr> _1ad268e02_buildVariadic(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _20833_tokens);
inline jule::Ptr<_1ac4aad7b_RangeExpr> _1ad269243_buildBetweenParentheses(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _21743_tokens);
inline jule::Ptr<_1ac4ad422_CastExpr> _1ad269584_tryBuildCast(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _22933_tokens);
inline void _1ad2699a2_pushArg(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _30347_tokens, jule::Ptr<_1ac4912c3_Token> _30365_err_token);
inline jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _1ad269ce3_buildArgs(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _31229_tokens);
inline jule::Ptr<_1ac4ae7db_FnCallExpr> _1ad26a5da_buildFnCall(_1ad265bbd_exprBuilder* _self_, jule::Ptr<_1ac4912c3_Token>* _37832_token, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _37873_args);
inline jule::Any _1ad26a92b_buildParenthesesRange(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _38642_tokens);
inline jule::Ptr<_1ac4abe26_UnsafeExpr> _1ad26ac6c_buildUnsafeExpr(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _40835_tokens);
inline jule::Ptr<_1ac4b843d_FnDecl> _1ad26b0ad_buildAnonFn(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _42332_tokens);
inline jule::Any _1ad26b3ee_buildUnsafe(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _43232_tokens);
inline void _1ad26b81c_pushRangeLitPart(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _44236_part, jule::Ptr<_1ac4912c3_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>>* _44328_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1ad26bb5d_getBraceRangeLitExprParts(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _45345_tokens);
inline jule::Ptr<_1ac4b02d1_FieldExprPair> _1ad26be9e_buildFieldExprPair(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _49538_tokens);
inline jule::Ptr<_1ac4aaab2_Expr> _1ad26c2e0_buildStructLitExpr(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _50839_tokens);
inline jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _1ad26c631_buildStructLitExprs(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _52340_tokens);
inline jule::Ptr<_1ac4b0b0b_StructLit> _1ad26c972_buildTypedStructLiteral(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _53643_tokens);
inline jule::Ptr<_1ac4aaab2_Expr> _1ad26ccb3_buildBraceLitPart(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _56038_tokens);
inline jule::Ptr<_1ac4b10b2_BraceLit> _1ad26d104_buildBraceLit(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _57734_tokens);
inline jule::Any _1ad26d445_buildBraceRange(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _59636_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1ad26d786_getEnumerableParts(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _64838_tokens);
inline jule::Ptr<_1ac4b2118_SliceExpr> _1ad26dac7_buildSlice(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _65530_tokens);
inline jule::Ptr<_1ac4b2a75_IndexingExpr> _1ad26e07d_buildIndexing(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _6787_tokens, jule::Ptr<_1ac4912c3_Token> _67829_errorToken);
inline jule::Ptr<_1ac4b31d5_SlicingExpr> _1ad26e699_buildSlicing(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _70160_start, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _7028_to, jule::Ptr<_1ac4912c3_Token>* _70227_errorToken, jule::Ptr<_1ac4912c3_Token> _70251_end);
inline jule::Any _1ad26e9da_buildBracketRange(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _71737_tokens);
inline jule::Any _1ad26ed2b_buildExclRight(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _74235_tokens);
inline jule::Any _1ad27016c_buildData(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _76030_tokens);
inline jule::Any _1ad270568_buildBinary(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _82932_tokens, jule::I64 _82950_i);
inline jule::Any _1ad2708a9_build(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _85426_tokens);
inline jule::Any _1ad270bea_buildKind(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _86530_tokens);
inline jule::Ptr<_1ac4aaab2_Expr> _1ad27103b_buildFromTokens(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _87635_tokens);
inline void _1ad276b13_stop(_1ad2767d3_parser* _self_);
inline jule::Bool _1ad276d99_stopped(_1ad2767d3_parser* _self_);
inline void _1ad2772b7_pushErr(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4912c3_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args);
inline void _1ad27762a_pushSuggestion(_1ad2767d3_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args);
inline jule::Ptr<_1ac4aaab2_Expr> _1ad27796b_buildExpr(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _21731_tokens);
inline jule::Ptr<_1ac4a5b9a_Directive> _1ad277cac_buildDirective(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _22134_tokens);
inline void _1ad278065_pushDirective(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4a5b9a_Directive> _23633_d);
inline jule::Ptr<_1ac4b679e_ScopeTree> _1ad278461_buildScope(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _24932_tokens, jule::Ptr<_1ac4912c3_Token> _24954_end);
inline __jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool _1ad278917__buildType(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err);
inline __jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool _1ad278dbd_buildType(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err);
inline jule::Ptr<_1ac4bd29a_TypeAliasDecl> _1ad27920e_buildTypeAliasDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _28140_tokens);
inline void _1ad279572_buildVarTypeAndExpr(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4b95e8_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _32159_tokens);
inline void _1ad2798d5_buildVarCommon(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4b95e8_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _35453_tokens);
inline void _1ad279c48_buildVarBegin(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4b95e8_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _37052_tokens);
inline jule::Ptr<_1ac4b95e8_VarDecl> _1ad27a089_buildVar(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _39829_tokens);
inline jule::Ptr<_1ac4b3988_GenericDecl> _1ad27a3ca_buildGeneric(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _41734_tokens);
inline jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _1ad27a7c6_buildGenerics(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _45435_tokens, jule::Ptr<_1ac4912c3_Token>* _45454_errorToken);
inline jule::Ptr<_1ac4b6edb_ParamDecl> _1ad27ab17_buildSelfParam(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _47434_tokens);
inline void _1ad27b035_paramTypeBegin(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4b6edb_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _51468_tokens);
inline void _1ad27b398_buildParamType(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4b6edb_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _52960_tokens);
inline void _1ad27b70b_buildParamBody(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4b6edb_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _54259_tokens);
inline jule::Ptr<_1ac4b6edb_ParamDecl> _1ad27ba4c_buildParam(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _56231_tokens);
inline void _1ad27bd05_checkParams(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>>* _60532_params);
inline jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>> _1ad27c201_buildParams(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _62533_tokens, jule::Bool _62551_method);
inline __jule_tuple_x_1ac4a9671_RetTypeDecl__jule_tuple_bool _1ad27c5ec_buildMultiRetType(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _65539_tokens, jule::I64* _65562_i);
inline __jule_tuple_x_1ac4a9671_RetTypeDecl__jule_tuple_bool _1ad27c9e8_buildRetType(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _72634_tokens, jule::I64* _72657_i);
inline jule::Ptr<_1ac4b843d_FnDecl> _1ad27ce9e_buildFnPrototype(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method);
inline jule::Ptr<_1ac4b843d_FnDecl> _1ad27d455_buildFn(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype);
inline jule::Slice<jule::Ptr<_1ac4912c3_Token>> _1ad27d796_getUseDeclSelectors(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _87639_tokens);
inline void _1ad27db09_buildBindUseDecl(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4be884_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _90154_tokens);
inline jule::Str _1ad27de4a_useDeclTokstoa(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _91431_tokens);
inline void _1ad27e2ad_buildStdUseDecl(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4be884_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _92956_tokens);
inline void _1ad27e621_buildIdentUseDecl(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4be884_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _98758_tokens);
inline void _1ad27e984_parseUseDecl(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4be884_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _103553_tokens);
inline jule::Ptr<_1ac4be884_UseDecl> _1ad27ed80_buildUseDecl(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _106932_tokens, jule::Bool _106950_binded);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28027b_buildTypeEnumItemKind(jule::Ptr<_1ad2767d3_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _108356_tokens);
inline jule::Slice<jule::Ptr<_1ac4c1226_TypeEnumItemDecl>> _1ad2805bc_buildTypeEnumItems(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _112040_tokens);
inline jule::Ptr<_1ac4c1886_TypeEnumDecl> _1ad28090d_buildTypeEnumDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _114439_tokens);
inline jule::Ptr<_1ac4aaab2_Expr> _1ad280d09_buildEnumItemExpr(jule::Ptr<_1ad2767d3_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _117152_tokens);
inline jule::Slice<jule::Ptr<_1ac4bed3a_EnumItemDecl>> _1ad28114a_buildEnumItems(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _120336_tokens);
inline jule::Ptr<_1ac4c08eb_EnumDecl> _1ad28148b_buildEnumDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _124035_tokens);
inline jule::Any _1ad2817cc_buildNodeEnumDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _128539_tokens);
inline jule::Ptr<_1ac4c1b50_FieldDecl> _1ad281b1d_buildField(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _129431_tokens);
inline jule::Slice<jule::Ptr<_1ac4c1b50_FieldDecl>> _1ad281e5e_buildStructDeclFields(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _134342_tokens);
inline jule::Ptr<_1ac4c2546_StructDecl> _1ad2822a0_buildStructDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _135437_tokens);
inline void _1ad282558_checkMethodReceiver(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4b843d_FnDecl>* _140236_f);
inline void _1ad2828bb_buildTraitBody(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4c2c83_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _142155_tokens);
inline jule::Ptr<_1ac4c2c83_TraitDecl> _1ad282c0c_buildTraitDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _145336_tokens);
inline jule::Ptr<_1ac4b843d_FnDecl> _1ad28304d_buildBindFn(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _148332_tokens);
inline jule::Ptr<_1ac4b95e8_VarDecl> _1ad28338e_buildBindVar(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _149333_tokens);
inline jule::Ptr<_1ac4c2546_StructDecl> _1ad2836d0_buildBindStruct(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _150636_tokens);
inline jule::Ptr<_1ac4bd29a_TypeAliasDecl> _1ad283a21_buildBindTypeAlias(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _152039_tokens);
inline jule::Ptr<_1ac4be884_UseDecl> _1ad283d62_buildBindUse(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _153033_tokens);
inline jule::Any _1ad2841a3_buildBind(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _154131_tokens);
inline jule::Ptr<_1ac4b843d_FnDecl> _1ad2844e4_getMethod(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _156531_tokens);
inline void _1ad284857_parseImplBody(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4c33e3_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _159452_tokens);
inline jule::Ptr<_1ac4c33e3_Impl> _1ad284b98_buildImpl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _162730_tokens);
inline jule::Any _1ad284ed9_buildNodeData(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _169835_tokens);
inline void _1ad285292_applyFnMeta(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4b843d_FnDecl>* _173132_f);
inline void _1ad28554a_applyMeta(_1ad2767d3_parser* _self_, _1ac4a577c_Node* _173630_node);
inline void _1ad285803_pushUseDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4be884_UseDecl>* _176133_decl);
inline jule::Bool _1ad285b44_pushMetaNodes(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _176935_tokens);
inline _1ac4a577c_Node _1ad285e85_parseNode(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _178931_st);
inline void _1ad28623d_appendNode(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _181332_st);
inline void _1ad286716_removeRange(_1ad2767d3_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges);
inline void _1ad286b34_pushWrongOrderCloseErr(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4912c3_Token>* _183539_t, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges);
inline void _1ad28710c_pushRangeClose(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4912c3_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges);
inline void _1ad2873b5_checkRanges(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _186428_tokens);
inline void _1ad28766d_parse(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac496a59_File>* _189527_f);
inline void _1ad288ecc_pushErr(_1ad288905_typeBuilder* _self_, jule::Ptr<_1ac4912c3_Token> _4123_token, jule::Str _4138_fmt);
inline void _1ad289340_pushSuggestion(_1ad288905_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad2895c6_buildNamespace(_1ad288905_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _1ad28985c_buildGenerics(_1ad288905_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1ad289ae3_identGenerics(_1ad288905_typeBuilder* _self_);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad289d79_buildIdent(_1ad288905_typeBuilder* _self_);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28a110_buildCppLink(_1ad288905_typeBuilder* _self_);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28a396_buildFn(_1ad288905_typeBuilder* _self_);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28a62c_buildPtr(_1ad288905_typeBuilder* _self_);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28a8b3_buildSptr(_1ad288905_typeBuilder* _self_);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28ab49_buildSlc(_1ad288905_typeBuilder* _self_);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28add0_buildArr(_1ad288905_typeBuilder* _self_);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28b166_buildMap(_1ad288905_typeBuilder* _self_);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28b3ec_buildEnumerable(_1ad288905_typeBuilder* _self_);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28b683_step(_1ad288905_typeBuilder* _self_);
inline __jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool _1ad28b919_build(_1ad288905_typeBuilder* _self_);
inline void _1ac97c79d_pushErr(_1ac97c21a_directiveEval* _self_, jule::Ptr<_1ac4912c3_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1ac97cb99_splitOperans(_1ac97c21a_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _3346_tokens);
inline jule::Bool _1ac97ceda_evalDirectiveIdent(_1ac97c21a_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1ac97d32b_evalDirectivePart(_1ac97c21a_directiveEval* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _7837_part);
inline jule::Bool _1ac97d5b2_eval(_1ac97c21a_directiveEval* _self_);
inline jule::Ptr<_1ad28c8e8_JuleImporter> static__1ad28cd27_New(_1ac97ac41_CompileInfo _5816_info);
inline jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>> _1ad28d0ad_AllPackages(_1ad28c8e8_JuleImporter* _self_);
inline void _1ad28d4ed_SetModPath(_1ad28c8e8_JuleImporter* _self_, jule::Str _7526_path);
inline jule::Str _1ad28d784_GetModPath(_1ad28c8e8_JuleImporter* _self_);
inline jule::Str _1ad28dac5_ModById(_1ad28c8e8_JuleImporter* _self_, jule::I64 _8319_id);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ad28de16_GetImport(_1ad28c8e8_JuleImporter* _self_, jule::Str _8725_path);
inline __jule_tuple_sx_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log _1ad28e312_ImportPackage(_1ad28c8e8_JuleImporter* _self_, jule::Str _9729_path, jule::Bool _9740_updateMod);
inline void _1ad28e5ba_Imported(_1ad28c8e8_JuleImporter* _self_, jule::Ptr<_1ac557cd5_ImportInfo> _15428_imp);
inline __jule_tuple_bool__jule_tuple_s_1b08b6838_Log _1ad28e9e9_isPassBuildDirectives(_1ad28c8e8_JuleImporter* _self_, jule::Ptr<_1ac4a4869_AST>* _18142_file);
inline jule::Ptr<_1ad2941d5_ExprInspector> static__1ad29457b_New(void);
inline void _1ad294834_args(_1ad2941d5_ExprInspector* _self_, jule::Slice<jule::Any> _5524_args);
inline void _1ad294adc_inspect(_1ad2941d5_ExprInspector* _self_, jule::Any* _6128_m);
inline void _1ad294e50_Inspect(_1ad2941d5_ExprInspector* _self_, jule::Any* _18528_m, jule::Fn<void,jule::Any*> _18542_f);
inline jule::Bool _1ad3d4b72_isAllMethodsLive(_1ad3d480e_specialCaseDefines* _self_, jule::Ptr<_1ac4c767d_Struct> _3028_s);
inline jule::Ptr<_1ad3d56cd_ObjectDeadCode> static__1ad3d5c50_new(jule::Ptr<_1ad29028b_IR>* _5021_ir);
inline jule::Bool _1b4a6001b_isLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _5627_t);
inline jule::Bool _1b4a66e13_isLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4dee04_FnIns>* _5627_t);
inline jule::Bool _1b4a8da3e_isLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac5008a4_Trait>* _5627_t);
inline jule::Bool _1b4a98c69_isLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac5a2527_Var>* _5627_t);
inline void _1b4a60923_pushLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4ca4d8_StructIns> _7632_t);
inline void _1b4a67320_pushLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4dee04_FnIns> _7632_t);
inline void _1b4a8e446_pushLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac5008a4_Trait> _7632_t);
inline void _1b4a99121_pushLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac5a2527_Var> _7632_t);
inline void _1ad3d65be_pushStructAsLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _8938_s);
inline void _1ad3d6877_setReferencesAsLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4e308e_ReferenceStack>* _15241_rs);
inline void _1ad3d6b30_inits(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac55ac0b_Package>* _20227_pkg);
inline void _1ad3d6dd8_collectLivePackage(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac55ac0b_Package>* _21640_pkg);
inline void _1ad3d70d6_collectLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_);
inline void _1ad3d738e_removeDeadGlobals(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac5a2527_Var>>* _29239_vars);
inline void _1ad3d7647_removeDeadFns(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>* _30435_funcs);
inline void _1ad3d7900_removeDeadStructs(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac4c767d_Struct>>* _32539_structs);
inline void _1ad3d7ba8_removeDeadTraits(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac5008a4_Trait>>* _34738_traits);
inline void _1ad3d7e61_removeDeadsFile(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac604d93_SymbolTable>* _36837_file);
inline void _1ad3d8219_removeDeadsPackage(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac55ac0b_Package>* _37540_pkg);
inline void _1ad3d8417_removeDeads(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_);
inline void _1ad3d8615_collectSpecialCaseDefines(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_);
inline void _1ad3d8813_elimanate(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_);
inline void _1ad3d9d20_optimizeChild(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac534ec1_Scope>* _3935_s);
inline void _1ad3da0c8_optimizeBodyChildExceptional(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac534ec1_Scope>* _4950_s);
inline void _1ad3da381_optimizeBodyChild(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac534ec1_Scope>* _5939_s);
inline void _1ad3da639_optimizeExprModel(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Any* _6839_model);
inline void _1ad3da837_eliminateFollowed(_1ad3d9803_scopeDeadCode* _self_);
inline void _1ad3daae0_pushGoto(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac53817d_GotoSt> _8929_gt);
inline void _1ad3dad98_pushLabel(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac537a1d_Label> _9930_l);
inline void _1ad3db151_optimizeRangeIter(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac536d08_RangeIter> _11238_it);
inline void _1ad3db409_optimizeWhileIter(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac5363ac_WhileIter> _11738_it);
inline void _1ad3db6b2_optimizeInfIter(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac535e06_InfIter> _12536_it);
inline void _1ad3db96a_optimizeConditional(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac535b09_Conditional> _12940_c);
inline void _1ad3dbc23_optimizeMatch(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac539701_Match> _14734_m);
inline void _1ad3dbecb_optimizeAssign(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac538a0d_Assign> _16535_assign);
inline void _1ad3dc284_optimizeMultiAssign(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac538eb4_MultiAssign> _17040_assign);
inline void _1ad3dc53c_optimizeStmt(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Any _17933_st);
inline void _1ad3dc73a_optimizeStmts(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_);
inline _1ad3dde9a_exprDeadCode static__1ad3de363_new(jule::Ptr<_1ad3d9803_scopeDeadCode>* _1821_s);
inline void _1ad3de61b_optimize(_1ad3dde9a_exprDeadCode* _self_, jule::Any* _2425_model);
inline void _1ac73ca14_pushVar(_1ac73c56e_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe);
inline jule::Bool _1ac73cd55_removeVar(_1ac73c56e_nils* _self_, jule::Uintptr _5225_var);
inline jule::Bool _1ac73d196_isSafe(_1ac73c56e_nils* _self_, jule::Uintptr _6622_var);
inline jule::Ptr<_1ad29beac_scopeOptimizer> static__1ad29c562_new(jule::Ptr<_1ac534ec1_Scope> _5120_scope);
inline void _1ad29c81a_setCurrentStmt(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Any _6335_stmt);
inline void _1ad29ca18_removeCurrent(jule::Ptr<_1ad29beac_scopeOptimizer> _self_);
inline jule::Bool _1ad29cc9e_isLastStmt(jule::Ptr<_1ad29beac_scopeOptimizer> _self_);
inline jule::Bool _1ad29d035_isIter(jule::Ptr<_1ad29beac_scopeOptimizer> _self_);
inline void _1ad29d2dd_optimizeData(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac60a55d_Data> _9533_d);
inline void _1ad29d596_optimizeVar(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac5a2527_Var> _12132_v);
inline void _1ad29d84e_optimizeConditional(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac535b09_Conditional> _14240_c);
inline void _1ad29dc6c_buildDefaultConstantTrueCase(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac53a229_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1ac539701_Match>* _21680_m);
inline void _1ad29e025_optimizeMatch(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac539701_Match> _24234_m);
inline void _1ad29e2cd_optimizeRangeIter(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac536d08_RangeIter> _32438_it);
inline void _1ad29e586_optimizeWhileIter(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac5363ac_WhileIter> _36938_it);
inline jule::Bool _1ad29e8c7_substr(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538a0d_Assign> _37527_a);
inline jule::Bool _1ad29ec18_strAssign(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538a0d_Assign> _39530_a);
inline jule::Bool _1ad2a0059_sliceAssign(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538a0d_Assign> _40632_a);
inline void _1ad2a0312_optimizePostfix(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538557_Postfix> _41436_postfix);
inline void _1ad2a05ba_optimizeAssign(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538a0d_Assign> _42135_assign);
inline jule::Bool _1ad2a090b_tryOptimizeSwap(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538eb4_MultiAssign>* _53537_assign);
inline void _1ad2a0bb4_optimizeMultiAssign(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538eb4_MultiAssign> _57240_assign);
inline void _1ad2a0e6c_optimizeRet(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac53acb8_RetSt> _61832_r);
inline void _1ad2a1225_optimizeStmt(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Any _64233_stmt);
inline void _1ad2a14cd_optimizeChild(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac534ec1_Scope> _67134_child);
inline void _1ad2a16cb_optimize(jule::Ptr<_1ad29beac_scopeOptimizer> _self_);
inline void static__1ad2a3e81_optimize(jule::Any* _3626_model);
inline void static__1ad2a426c_optimizeData(jule::Any* _4030_model, jule::Ptr<_1ad2abd68_data>* _4053_d);
inline jule::Bool _1ad2a45ad_selfCmpCond(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _5228_m);
inline jule::Bool _1ad2a48ee_boolCond(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _7625_m);
inline jule::Bool _1ad2a4c40_strCond(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel> _12923_m);
inline jule::Bool _1ad2a51e6_tryNeutralElement1(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _18635_m, jule::Ptr<_1aa1293c0_Const> _18660_c, jule::Ptr<_1ac4ce300_OperandExprModel>* _18672_nc);
inline jule::Bool _1ad2a5537_tryNeutralElement(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _23034_m);
inline void _1ad2a57e0_checkBinaryForBoundary(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _24539_m);
inline void _1ad2a5a98_checkBinaryForNil(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _29734_m);
inline void _1ad2a5d51_binary(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel> _32922_m);
inline void _1ad2a6109_unary(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4cebc4_UnaryExprModel> _42721_m);
inline void _1ad2a63b2_structureLit(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4d0598_StructLitExprModel> _47028_m);
inline void _1ad2a666a_casting(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4d0e28_CastingExprModel> _48623_m);
inline void _1ad2a69cd_args(_1ad2a39a8_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>> _50020_params, jule::Slice<jule::Any>* _50046_args);
inline void _1ad2a6c86_scope(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac534ec1_Scope>* _52222_s);
inline void _1ad2a703e_funcCall(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel> _52824_m);
inline void _1ad2a72e7_indexing(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4d215a_IndexingExprModel> _53524_m);
inline void _1ad2a75a0_anonFunc(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel> _55924_m);
inline void _1ad2a779d_do(_1ad2a39a8_exprOptimizer* _self_);
inline void _1ad2a967e_pushVar(jule::Ptr<_1ad2a91d9_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1ac63d2d8_TypeKind> _3242_kind);
inline jule::Bool _1ad2a99c0_removeVar(_1ad2a91d9_dynamic* _self_, jule::Uintptr _5525_var);
inline jule::Bool _1ad2a9dbb_isFits(_1ad2a91d9_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1ac63d2d8_TypeKind> _6936_kind);
inline _1ad2ab86d_dataCheckpoint _1ad2ac220_getCheckpoint(_1ad2abd68_data* _self_);
inline void _1ad2ac4c8_loadCheckpoint(_1ad2abd68_data* _self_, _1ad2ab86d_dataCheckpoint* _3535_c);
inline void _1ad2adc8d_pushVar(_1ad2ad7e8_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1ad2ae4ca_fitsMaxSize(_1ad2ad7e8_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1ad3e00bc_Optimizer> static__1ad3e0573_New(jule::Ptr<_1ad29028b_IR>* _2621_ir);
inline void _1ad3e082b_optimizeGlobal(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac5a2527_Var>* _3235_v);
inline void _1ad3e0ad4_optimizeFunction(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac4dbd46_Fn>* _3837_func);
inline void _1ad3e0d8c_optimizeStruct(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac4c767d_Struct>* _4835_s);
inline void _1ad3e1145_optimizeGlobals(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac55ac0b_Package>* _6436_p);
inline void _1ad3e13ed_optimizeFunctions(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac55ac0b_Package>* _7238_p);
inline void _1ad3e16a6_optimizeStructs(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac55ac0b_Package>* _8036_p);
inline void _1ad3e195e_optimizePackage(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac55ac0b_Package>* _8836_p);
inline void _1ad3e1b5c_Optimize(_1ad3e00bc_Optimizer* _self_);
inline void static__1ad3e2377_Reset(void);
inline void static__1ad415400_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1ad417e08_LogFlat(_1b08b6838_Log* _1421_l);
inline void static__1ad418139_LogError(_1b08b6838_Log* _1922_l);
inline void static__1ad41836a_Log(_1b08b6838_Log* _6417_l);
inline void static__1ad41859b_PrintLogs(jule::Slice<_1b08b6838_Log>* _7423_logs);
inline _1ae08328c_Time static__1ae083677_Unix(jule::U64 _9117_sec);
inline _1ae08328c_Time static__1ae083886_Now(void);
inline _1ae082ab6_AbsTime _1ae08506e_Abs(_1ae08328c_Time* _self_);
inline jule::Ptr<_1adea99ee_scopeCoder> static__1adeaa1e7_new(jule::Ptr<_1ae08ee9c_ObjectCoder>* _7321_oc);
inline void _1b4e4053e_iterHead(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac536d08_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin);
inline void _1adeaa8bd_rangeIndexIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac536d08_RangeIter>* _12936_it);
inline void _1adeaab76_rangeHashmapIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac536d08_RangeIter>* _19638_it);
inline void _1adeaae2e_strRuneIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac73ae52_StrRuneIter> _27932_it);
inline void _1adeab1d7_ifCase(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac5353de_If> _39127_i);
inline void _1adeab490_conditional(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac535b09_Conditional> _40032_c);
inline void _1adeab748_infIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac535e06_InfIter> _42028_it);
inline void _1adeaba01_whileIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac5363ac_WhileIter> _43730_it);
inline void _1adeabca9_rangeIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac536d08_RangeIter> _47630_it);
inline void _1adeac062_cont(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac53718d_ContSt> _48921_c);
inline void _1adeac31a_label(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac537a1d_Label> _49422_l);
inline void _1adeac5c3_gotoSt(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac53817d_GotoSt> _49923_gt);
inline void _1adeac87b_postfix(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538557_Postfix> _50428_p);
inline void _1adeacb34_assignLeft(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Any* _51132_model);
inline void _1adeacddc_shl(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538a0d_Assign> _54324_a);
inline void _1adead195_shr(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538a0d_Assign> _54924_a);
inline void _1adead44d_divByZeroAssign(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538a0d_Assign> _55536_a);
inline void _1adead926_operatorOverloadingAssign(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _56147_s, jule::Ptr<_1ac4ce300_OperandExprModel>* _56173_l, jule::Ptr<_1ac4ce300_OperandExprModel>* _5628_r, jule::U64 _56236_op);
inline void _1adeadbce_assign(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538a0d_Assign> _57627_a);
inline void _1adeade87_mapLookupAssign(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538eb4_MultiAssign>* _60937_a);
inline void _1adeae240_multiAssignTup(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538eb4_MultiAssign>* _64236_a);
inline void _1adeae4e8_multiAssignFn(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538eb4_MultiAssign>* _69135_a);
inline void _1adeae7a1_multiAssign(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538eb4_MultiAssign> _75032_a);
inline jule::Fn<void> _1adeaeae2_matchExpr(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac539701_Match> _77630_m);
inline void _1adeaee55_case(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac539701_Match> _78625_m, jule::Ptr<_1ac53a229_Case> _78640_c);
inline void _1adeb020d_matchSt(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac539701_Match> _85628_m);
inline void _1adeb04b6_fallSt(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac53a922_FallSt> _91123_f);
inline void _1adeb076e_breakSt(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac537567_BreakSt> _91624_b);
inline void _1adeb0a27_setResult(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac53acb8_RetSt> _92530_r);
inline void _1adeb0cd0_retSt(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac53acb8_RetSt> _95326_r);
inline void _1adeb1088_var(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac5a2527_Var> _98924_v);
inline void _1adeb1341_mutSlicing(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac739b43_MutSlicingExprModel> _99531_m);
inline void _1adeb15e9_swap(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac7388de_SwapExprModel> _101225_m);
inline void _1adeb18a2_exceptionalForwarding(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac738559_ExceptionalForwardingExprModel> _102042_m);
inline void _1adeb1b5a_st(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Any _102623_st);
inline void _1adeb1e13_scopeStmts(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac534ec1_Scope>* _108232_s);
inline void _1adeb21bb_scope(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac534ec1_Scope> _109126_s);
inline void _1adeb2474_commonFuncScope(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac4dee04_FnIns>* _110637_f);
inline void _1adeb27d7_anonFuncScope(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel> _114634_m, jule::Str _114655_ident);
inline void _1adeb2a90_funcScope(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _117830_f);
inline jule::Ptr<_1adeb62d0_exprCoder> static__1adeb66cb_new(jule::Ptr<_1ae08ee9c_ObjectCoder>* _11221_oc);
inline void _1adeb6984_string(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1aa1293c0_Const>* _11824_c);
inline void _1adeb6c3c_boolean(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Bool _13324_b);
inline void _1adeb6e3a_nilLit(jule::Ptr<_1adeb62d0_exprCoder> _self_);
inline jule::Bool _1adeb727b_ftoaSpecialCases(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::F64* _14534_x);
inline void _1adeb7534_float32(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1aa1293c0_Const>* _15925_c);
inline void _1adeb77dc_float64(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1aa1293c0_Const>* _17825_c);
inline void _1adeb7a95_constant(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1aa1293c0_Const> _19629_c);
inline void _1adeb7eb3_operatorOverloadingUnary(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _22046_s, jule::U64 _22061_op, jule::Any _22078_e);
inline void _1adeb83d1_divByZeroBinary(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4912c3_Token>* _23233_op, jule::Ptr<_1ac4ce300_OperandExprModel>* _23250_l, jule::Ptr<_1ac4ce300_OperandExprModel>* _23277_r);
inline void _1adeb8ac9__unsafeBinary(jule::Ptr<_1adeb62d0_exprCoder> _self_, _1b097ade7_StrBuilder* _27135_buf, jule::Str* _27153_l, jule::Str* _27162_r, jule::Ptr<_1ac63d2d8_TypeKind>* _2728_lk, jule::Ptr<_1ac63d2d8_TypeKind>* _27228_rk, jule::U64 _27243_op, jule::Str _27256_kind);
inline void _1adeb8d82_unsafeBinary(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel> _34233_m);
inline void _1adeb91e5_shl(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ce300_OperandExprModel>* _35425_l, jule::Ptr<_1ac4ce300_OperandExprModel>* _35452_r);
inline void _1adeb9558_shr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ce300_OperandExprModel>* _38225_l, jule::Ptr<_1ac4ce300_OperandExprModel>* _38252_r);
inline void _1adeb9811_binary(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel> _41027_m);
inline void _1adeb9ab9_var(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac5a2527_Var> _43424_m);
inline void _1adeb9d72_structureIns(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns> _45033_m);
inline void _1adeba12a_unary(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4cebc4_UnaryExprModel> _45426_m);
inline void _1adeba3d3_structureLit(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d0598_StructLitExprModel> _48533_m);
inline void _1adeba68b_allocStructure(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d0895_AllocStructLitExprModel> _52835_m);
inline void _1adeba944_possibleRefExpr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Any _53632_expr);
inline void _1adebad62_castTraitFromTrait(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d0e28_CastingExprModel>* _55040_m, jule::Ptr<_1ac5008a4_Trait> _55066_t1, jule::Ptr<_1ac5008a4_Trait> _55082_t2);
inline void _1adebb11a_casting(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d0e28_CastingExprModel> _56328_m);
inline void _1adebb3c3_args(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel>* _71026_m);
inline void _1adebb67b_modelForCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Any _74133_expr);
inline void _1adebb934_pushCallInf(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel>* _75629_m);
inline jule::Bool _1adebbc75_isWrapped(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel>* _77931_m);
inline jule::Bool _1adebc0b6_writeReceiver(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Any _80334_m);
inline void _1adebc36e_pureFuncCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel>* _81634_m);
inline void _1adebc627_coFuncCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel>* _90632_m);
inline void _1adebc98a_writeUseExpr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4dee04_FnIns>* _98434_f, jule::Ptr<_1ac60a55d_Data> _98449_d);
inline void _1adebcc43_funcCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel> _100529_m);
inline void _1adebceeb_slice(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d1ba4_SliceExprModel> _107826_m);
inline void _1adebd2a4_indexing(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d215a_IndexingExprModel> _110729_m);
inline void _1adebd55c_unsafeIndexing(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac73a2c5_UnsafeIndexingExprModel> _115935_m);
inline void _1adebd815_anonFunc(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel> _117629_m);
inline void _1adebdabd_mapExpr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d2db4_MapExprModel> _120728_m);
inline void _1adebdd76_slicing(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d3447_SlicingExprModel> _124328_m);
inline void _1adebe12e_traitSub(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d39ca_TraitSubIdentExprModel> _125929_m);
inline void _1adebe3d7_structureSub(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _127533_m);
inline void _1adebe690_array(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d4adb_ArrayExprModel> _128426_m);
inline void _1adebe948_funcInsCommon(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _133434_m);
inline void _1adebec01_funcIns(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _134128_m);
inline void _1adebeea9_tuple(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d4dd8_TupleExprModel> _135226_m);
inline void _1adec0262_newCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d5a65_BuiltinNewCallExprModel> _136328_m);
inline void _1adec051a_outCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d52b2_BuiltinOutCallExprModel> _137528_m);
inline void _1adec07c3_outlnCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d568b_BuiltinOutlnCallExprModel> _138830_m);
inline void _1adec0a7b_panicCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d5e3e_BuiltinPanicCallExprModel> _140130_m);
inline void _1adec0d34_errorCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d7a45_BuiltinErrorCallExprModel> _140930_m);
inline void _1adec10dc_copyCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d766b_BuiltinCopyCallExprModel> _144129_m);
inline void _1adec1395_lenCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d6abb_BuiltinLenCallExprModel> _144928_m);
inline void _1adec164d_capCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d6db8_BuiltinCapCallExprModel> _146628_m);
inline void _1adec1906_deleteCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d7292_BuiltinDeleteCallExprModel> _147131_m);
inline void _1adec1bae_makeCallSlice(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel>* _149635_m);
inline void _1adec1e67_makeCallStr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel>* _152033_m);
inline void _1adec2220_makeCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel> _153129_m);
inline void _1adec24c8_pushToSlice(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac73a69e_PushToSliceExprModel> _153932_m);
inline void _1adec2781_appendToSlice(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac73aa78_AppendToSliceExprModel> _159934_m);
inline void _1adec2a39_appendCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d67be_BuiltinAppendCallExprModel> _160731_m);
inline void _1adec2ce2_sizeof(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d7d42_SizeofExprModel> _161527_m);
inline void _1adec309a_alignof(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d84e6_AlignofExprModel> _162128_m);
inline void _1adec3353_runeLit(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d86d3_RuneExprModel> _162724_m);
inline void _1adec360b_structureStatic(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d4712_StructStaticIdentExprModel> _164136_m);
inline void _1adec38b4_backendEmit(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d8a57_BackendEmitExprModel> _164532_m);
inline void _1adec3b6c_free(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d8d54_FreeExprModel> _166125_m);
inline void _1adec3e25_strComp(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac7395b0_StrCompExprModel> _167028_m);
inline void _1adec41cd_emptyCompare(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac738cb8_EmptyCompareExprModel> _168633_m);
inline void _1adec4486_unsafeDeref(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac73b24e_UnsafeDerefExprModel> _169532_m);
inline void _1adec473e_unsafeCasting(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac73b54b_UnsafeCastingExprModel> _170634_m);
inline void _1adec49e7_model(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Any _172326_m);
inline jule::Bool _1adec4d38_handleFieldByDefault(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4c9938_FieldIns>* _182342_f);
inline void _1adec50e1_initStructLit(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _184435_s);
inline void _1adec5399_fillCollectionByDefault(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _186645_elem);
inline void _1adec5652_initCollection(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _188136_elem);
inline void _1adec590a_initArray(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac64cc21_Arr>* _189531_arr);
inline void _1adec5bb3_initExpr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _190929_t);
inline jule::Ptr<_1adec8a84_TestCoder> static__1adec903a_New(jule::Ptr<_1ae08ee9c_ObjectCoder>* _2921_oc);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1adec92c1_findTestingPackage(jule::Ptr<_1adec8a84_TestCoder> _self_);
inline void _1adec9579_appendTest(jule::Ptr<_1adec8a84_TestCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _4431_f);
inline void _1adec9832_appendPackageTests(jule::Ptr<_1adec8a84_TestCoder> _self_, jule::Ptr<_1ac55ac0b_Package>* _5940_p);
inline jule::Bool _1adec9ab8_readyTestingPackage(jule::Ptr<_1adec8a84_TestCoder> _self_);
inline void _1adec9cb6_callTmReset(jule::Ptr<_1adec8a84_TestCoder> _self_);
inline void _1adec9eb4_callTmFailed(jule::Ptr<_1adec8a84_TestCoder> _self_);
inline void _1adeca1b2_callTmSkipped(jule::Ptr<_1adec8a84_TestCoder> _self_);
inline void _1adeca3b0_Serialize(jule::Ptr<_1adec8a84_TestCoder> _self_);
inline void static__1adecc04e_writeIdentTo(_1b097ade7_StrBuilder* _3530_buf, jule::Str* _3548_ident);
inline void static__1adecc3e5_toOut(_1b097ade7_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr);
inline void static__1adecc846_toLocal(_1b097ade7_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident);
inline void static__1adeccb32_func(_1b097ade7_StrBuilder* _8622_buf, jule::Ptr<_1ac4dbd46_Fn>* _8644_f);
inline void static__1adecce1d_funcIns(_1b097ade7_StrBuilder* _10725_buf, jule::Ptr<_1ac4dee04_FnIns>* _10747_f);
inline void static__1adecd209_traitDecl(_1b097ade7_StrBuilder* _12227_buf, jule::Ptr<_1ac5008a4_Trait> _12244_t);
inline void static__1adecd4e5_param(_1b097ade7_StrBuilder* _12623_buf, jule::Ptr<_1ac4da372_Param>* _12641_p);
inline void static__1adecd7d1_structure(_1b097ade7_StrBuilder* _14127_buf, jule::Ptr<_1ac4c767d_Struct>* _14145_s);
inline void static__1adecdabc_structureIns(_1b097ade7_StrBuilder* _15230_buf, jule::Ptr<_1ac4ca4d8_StructIns>* _15248_s);
inline void static__1adecdda8_field(_1b097ade7_StrBuilder* _16023_buf, jule::Ptr<_1ac4c4757_Field>* _16041_f);
inline void static__1adece194_var(_1b097ade7_StrBuilder* _17021_buf, jule::Ptr<_1ac5a2527_Var> _17042_v);
inline void static__1adece480_iterBegin(_1b097ade7_StrBuilder* _19727_buf, jule::Uintptr _19744_it);
inline void static__1adece76b_iterEnd(_1b097ade7_StrBuilder* _20225_buf, jule::Uintptr _20242_it);
inline void static__1adecea57_iterNext(_1b097ade7_StrBuilder* _20726_buf, jule::Uintptr _20743_it);
inline void static__1adeced43_label(_1b097ade7_StrBuilder* _21223_buf, jule::Uintptr _21240_u);
inline void static__1aded012e_matchEnd(_1b097ade7_StrBuilder* _21726_buf, jule::Uintptr _21743_m);
inline void static__1aded041a_caseBegin(_1b097ade7_StrBuilder* _22227_buf, jule::Uintptr _22244_c);
inline jule::Ptr<_1ae08ee9c_ObjectCoder> static__1ae09040e_New(jule::Ptr<_1ad29028b_IR>* _14021_ir, _1ae08cb9d_SerializationInfo _14030_info);
inline void _1ae0906b7_write(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Str _15322_s);
inline void _1ae090970_writeBytes(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Slice<jule::U8> _15727_b);
inline void _1ae090b6d_addIndent(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae090d6b_doneIndent(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae091069_indent(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline jule::I64 _1ae0913aa_findAnyType(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _17633_t);
inline jule::I64 _1ae0916eb_pushCoSpawn(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _18532_f);
inline jule::I64 _1ae091a3c_pushDealloc(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _28832_t);
inline jule::Str _1ae091d7d_pushAnonFn(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel>* _30432_m);
inline jule::I64 _1ae0921be_pushAnyType(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _34632_t);
inline void _1ae092477_pushResultIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dee04_FnIns>* _45735_f);
inline void _1ae092730_pushResult(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dbd46_Fn>* _47832_f);
inline void _1ae092a93_pushAndWriteMaskMapper(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5008a4_Trait> _49143_t1, jule::Ptr<_1ac5008a4_Trait> _49159_t2);
inline void _1ae092d4b_locInfo(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4912c3_Token>* _54225_t);
inline void _1ae093049_head(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae093302_links(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Bool _60922_std);
inline void _1ae0935aa_prepareStructure(_1ae08ee9c_ObjectCoder* _self_, jule::Ptr<_1ac4c767d_Struct>* _63237_s);
inline void _1ae0937a8_prepareStructures(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae093a61_structurePlainDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4c767d_Struct>* _66340_s);
inline void _1ae093c5e_structurePlainDecls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae094017_fieldDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4c9938_FieldIns>* _67931_f);
inline void _1ae0942c0_structureDestructor(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _68641_s);
inline void _1ae0946dd_structureOperatorEq(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Str _70236_ident, jule::Ptr<_1ac4ca4d8_StructIns>* _70253_s, jule::Bool _70268_decl);
inline void _1ae094a51_structureOperators(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _77040_s, jule::Bool _77055_decl);
inline void _1ae094d09_structureInsDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _77938_s);
inline void _1ae0950b2_structureDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4c767d_Struct>* _80935_s);
inline void _1ae0952b0_structureDecls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae0954ad_structureMethodDecls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae095986_funcHead(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, _1b097ade7_StrBuilder* _84330_buf, jule::Ptr<_1ac4dee04_FnIns>* _84352_f, jule::Bool _84363_ptr, jule::Str _84374_ident);
inline void _1ae095ce9_funcDeclIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dee04_FnIns>* _86233_f, jule::Bool _86244_ptr);
inline void _1ae09615c_funcDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dbd46_Fn>* _87030_f, jule::Bool _87038_ptr);
inline void _1ae096415_funcDeclTrait(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dbd46_Fn>* _87635_f);
inline void _1ae096613_funcDecls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae0968bb_traitDataTypeMethods(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5008a4_Trait>* _89842_t);
inline void _1ae096ab9_traitDataTypes(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae096e2c_paramIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, _1b097ade7_StrBuilder* _93430_buf, jule::Ptr<_1ac4ddc9e_ParamIns>* _93452_p);
inline void _1ae097290_paramsIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, _1b097ade7_StrBuilder* _94031_buf, jule::Ptr<_1ac4dee04_FnIns>* _94053_f);
inline void _1ae097603_varInitExpr(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5a2527_Var>* _96133_v, jule::Fn<void> _96142_init);
inline void _1ae0978ab_var(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5a2527_Var> _97924_v);
inline void _1ae097c1e_anonFuncInsDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel>* _101037_m, jule::Str _101058_ident);
inline void _1ae098082_anonFuncIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel>* _101633_m, jule::Str _101654_ident);
inline void _1ae0983e5_funcIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _102628_f, jule::Str _102639_ident);
inline void _1ae09869d_func(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dbd46_Fn>* _103626_f);
inline void _1ae098a11_funcTrait(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _104227_s, jule::Ptr<_1ac4dee04_FnIns>* _104247_f);
inline __jule_tuple_x_1ac4dee04_FnIns__jule_tuple_bool _1ae098d52_findTraitMetMap(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dbd46_Fn>* _105737_m);
inline void _1ae0991b5_traitWrapper(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5008a4_Trait>* _106934_t, jule::Ptr<_1ac4dbd46_Fn>* _106950_m);
inline void _1ae0993b3_traitWrappers(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae099726_traitDataMethods(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5008a4_Trait>* _113638_t, jule::Ptr<_1ac4ca4d8_StructIns> _113649_s);
inline void _1ae099b44_traitData(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5008a4_Trait>* _115331_t, jule::I64 _115342_i, jule::Ptr<_1ac4ca4d8_StructIns>* _115355_s);
inline void _1ae099d42_traitDatas(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09a040_globalDecls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09a23d_decls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09a4e6_structureMethods(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _121638_s);
inline void _1ae09a79e_structureIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _122334_s);
inline void _1ae09aa57_structure(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4c767d_Struct>* _122931_s);
inline void _1ae09ac55_structures(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09ae53_funcs(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09b20b_pushInit(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac55ac0b_Package>* _126830_pkg);
inline void _1ae09b409_anonHashes(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09b607_initGlobals(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09b805_initCaller(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09ba03_end(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09bd66_insertBuf(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, _1b097ade7_StrBuilder* _133931_buf, jule::I64 _133948_pos);
inline void _1ae09c064_implementRC(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09c262_serializeHead(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline void _1ae09c460_Serialize(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_);
inline jule::Str _1ae09e792_Str(_1ae09e396_customType* _self_);
inline jule::Bool _1ae09ead3_Equal(jule::Ptr<_1ae09e396_customType> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _4418_k);
inline jule::Ptr<_1ae09eece_typeCoder> static__1ae0a052e_new(jule::Ptr<_1ae08ee9c_ObjectCoder>* _6921_oc);
inline void _1ae0a0892_toType(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _7627_buf, jule::Str _7648_id);
inline void _1ae0a0c05_prim(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _9025_buf, jule::Ptr<_1ac646401_Prim> _9042_p);
inline void _1ae0a1068_tuple(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _9526_buf, jule::Ptr<_1ac64b4e4_Tuple> _9547_t);
inline void _1ae0a13cb_asSptr(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem);
inline void _1ae0a173e_sptr(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _11425_buf, jule::Ptr<_1ac649e2c_Sptr> _11446_sptr);
inline void _1ae0a1aa2_ptr(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _12124_buf, jule::Ptr<_1ac64d6e4_Ptr> _12145_p);
inline void _1ae0a1e15_enumDecl(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _13229_buf, jule::Ptr<_1ac5030b0_Enum> _13250_e);
inline void _1ae0a2278_typeEnumDecl(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _13733_buf, jule::Ptr<_1ac5047ba_TypeEnum> _13754_e);
inline void _1ae0a25db_asSlice(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _14128_buf, jule::Ptr<_1ac63d2d8_TypeKind> _14149_elem);
inline void _1ae0a294e_slice(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _14826_buf, jule::Ptr<_1ac64a900_Slc> _14847_s);
inline void _1ae0a2cb2_mapType(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _15328_buf, jule::Ptr<_1ac64c094_Map> _15349_m);
inline void _1ae0a3488_structureIns(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _16733_buf, jule::Ptr<_1ac4ca4d8_StructIns> _16754_s);
inline void _1ae0a37eb_array(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _19126_buf, jule::Ptr<_1ac64cc21_Arr> _19147_a);
inline void _1ae0a3ec2_paramIns(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _21429_buf, jule::Ptr<_1ac4ddc9e_ParamIns>* _21451_p);
inline void _1ae0a4698_funcInsResult(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _24634_s, jule::Ptr<_1ac4dee04_FnIns>* _24654_f);
inline void _1ae0a4a0b_anonFunc(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _26429_buf, jule::Ptr<_1ac4dee04_FnIns> _26450_f);
inline void _1ae0a4d6e_func(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _28525_buf, jule::Ptr<_1ac4dee04_FnIns> _28546_f);
inline void _1ae0a51d2_kind(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _29225_buf, jule::Ptr<_1ac63d2d8_TypeKind> _29246_k);
inline jule::Ptr<_1ae0a7ab9_resultCoder> static__1ae0a80c5_new(jule::Ptr<_1ae09eece_typeCoder>* _36021_tc);
inline void _1ae0a8438_ptr(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _36424_s, jule::Ptr<_1ac64d6e4_Ptr> _36443_p);
inline void _1ae0a879b_sptr(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _36925_s, jule::Ptr<_1ac649e2c_Sptr> _36944_p);
inline void _1ae0a8b0e_mapType(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _37428_s, jule::Ptr<_1ac64c094_Map> _37447_p);
inline void _1ae0a8e72_slice(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _38026_s, jule::Ptr<_1ac64a900_Slc> _38045_slc);
inline void _1ae0a92d5_arr(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _38524_s, jule::Ptr<_1ac64cc21_Arr> _38543_arr);
inline void _1ae0a9648_func(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _39125_s, jule::Ptr<_1ac4dee04_FnIns> _39144_f);
inline void _1ae0a99ab_tup(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _40424_s, jule::Ptr<_1ac64b4e4_Tuple> _40443_tup);
inline void _1ae0a9d1e_codeMut(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _41128_s, jule::Ptr<_1ac63d2d8_TypeKind>* _41148_t);
inline void _1ae0aa182_codeMut1(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _45129_s, jule::Ptr<_1ac63d2d8_TypeKind>* _45149_t);
inline jule::Slice<jule::U8> _1ae0aa490_code(_1ae0a7ab9_resultCoder* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _46025_t);
inline jule::Str _1b55ebd93_Name(_1b55eb8cb_Flag* _self_);
inline jule::Str _1b55ebee7_What(_1b55eb8cb_Flag* _self_);
inline void _1b55ec14b_Reset(_1b55eb8cb_Flag* _self_);
inline jule::I32 _1b55ec2a0_Short(_1b55eb8cb_Flag* _self_);
inline jule::Str _1b56001e8_Name(_1b560056c_Flag* _self_);
inline jule::Str _1b5600858_What(_1b560056c_Flag* _self_);
inline void _1b560099b_Reset(_1b560056c_Flag* _self_);
inline jule::I32 _1b5600ade_Short(_1b560056c_Flag* _self_);
inline jule::Str _1b5603905_Name(_1b5603c79_Flag* _self_);
inline jule::Str _1b5604065_What(_1b5603c79_Flag* _self_);
inline void _1b56041a8_Reset(_1b5603c79_Flag* _self_);
inline jule::I32 _1b56042eb_Short(_1b5603c79_Flag* _self_);
inline jule::Str _1b5607156_Name(_1b56074ca_Flag* _self_);
inline jule::Str _1b56077b6_What(_1b56074ca_Flag* _self_);
inline void _1b5607909_Reset(_1b56074ca_Flag* _self_);
inline jule::I32 _1b5607a4c_Short(_1b56074ca_Flag* _self_);
inline jule::Str _1b560a863_Name(_1b560abd7_Flag* _self_);
inline jule::Str _1b560aec3_What(_1b560abd7_Flag* _self_);
inline void _1b560b116_Reset(_1b560abd7_Flag* _self_);
inline jule::I32 _1b560b259_Short(_1b560abd7_Flag* _self_);
inline jule::Ptr<_1add23aee_FlagSet> static__1add23e1d_New(void);
inline jule::Trait _1add243c4_FindFlag(_1add23aee_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1add24715_FindFlagShort(_1add23aee_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1add24cdc_Parse(_1add23aee_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1b560abd7_Flag> _1b4544c65_addFlagCommon(_1add23aee_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1b56074ca_Flag> _1b454dd3a_addFlagCommon(_1add23aee_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1b4542537_AddVar(_1add23aee_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1b454b651_AddVar(_1add23aee_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1b561d9a8_parseInteger(_1add265b3_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1b5626582_parseInteger(_1add265b3_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1add26e10_getData(_1add265b3_argParser* _self_);
inline jule::VoidExceptional _1add27185_processFlag(_1add265b3_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1add2743d_singleDash(_1add265b3_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1add276e6_doubleDash(_1add265b3_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1add278e4_tryArg(_1add265b3_argParser* _self_);
inline jule::VoidExceptional _1add27ae2_parse(_1add265b3_argParser* _self_);
inline jule::Ptr<_1b0ad3ea6_Cmd> static__1b0ad43e6_New(jule::Str _2616_path);
inline jule::VoidExceptional _1b0ad45e4_Spawn(_1b0ad3ea6_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1b0ad4a78_Wait(_1b0ad3ea6_Cmd* _self_);
inline jule::VoidExceptional _1b039677a_spawn(_1b0ad3ea6_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1b0396c0e_wait(_1b0ad3ea6_Cmd* _self_);
inline __jule_tuple_x_1ad29028b_IR__jule_tuple_s_1b08b6838_Log static__1ad290764_Build(jule::Str _2918_path, jule::I64 _2929_flags);
inline void _1ad290c4d_appendStructs(_1ad29028b_IR* _self_, jule::Ptr<_1ac55ac0b_Package>* _6730_p, jule::Slice<jule::Ptr<_1ac4c767d_Struct>>* _6754_buffer);
inline jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _1ad290ed4_GetAllStructures(_1ad29028b_IR* _self_);
inline void _1ad291347_appendGlobals(_1ad29028b_IR* _self_, jule::Ptr<_1ac55ac0b_Package>* _9030_p, jule::Slice<jule::Ptr<_1ac5a2527_Var>>* _9054_buffer);
inline jule::Slice<jule::Ptr<_1ac5a2527_Var>> _1ad2915cd_GetAllGlobals(_1ad29028b_IR* _self_);
inline void _1ad2917cb_Order(_1ad29028b_IR* _self_);
inline void _1e26c7bbc_Free(void* _4520_ptr);
inline jule::Str _1e2708505_BytePtrToStr(jule::U8* _6524_s);
inline jule::Slice<jule::U8> _1e270878b_StrToBytes(jule::Str _8915_s);
inline jule::I64 _1e1a5ce10_GetLastErrno(void);
inline jule::I64 _1e271802b_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg);
inline jule::I64 _1e27183a0_Stat(jule::U8* _5916_path, struct stat* _5933_stat);
inline jule::I64 _1e27187ce_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode);
inline jule::U8* _1e2718b53_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen);
inline DIR* _1e271914d_Opendir(jule::U8* _7519_path);
inline struct dirent* _1e2719329_Readdir(DIR* _7823_dir);
inline jule::I64 _1e27195c1_Closedir(DIR* _8124_dir);
inline jule::I64 _1e2719ec8_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode);
inline jule::I64 _1e271a292_Rmdir(jule::U8* _9517_path);
inline jule::I64 _1e271a55b_Unlink(jule::U8* _9818_path);
inline jule::I64 _1e2744497_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _1e2744871_Close(jule::I64 _2510_handle);
inline jule::I64 _1e2744c28_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _1e2744e59_Exit(jule::I64 _339_code);
inline jule::Str _1e2756ed2_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1adda7aea_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap);
inline jule::Slice<jule::U8> _1e2763384_StrBytes(jule::Str _4013_s);
inline jule::Str _1e276361a_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1e27638d4_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline __jule_tuple_i32__jule_tuple_int _1c7ec89c1_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1c7ec8d12_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1c7ec9362_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _1c7ec9dac_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1c7eca231_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _1c7eca7b4_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1c7ecaa7d_RuneStart(jule::U8 _51714_b);
inline jule::I64 _20a3cac92_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _20a3cbbd8_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _20a3cc5bd_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _20a3cc887_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _20a3d3360_Len32(jule::U32 _35214_x);
inline jule::I64 _20a3d3629_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _20a3d43b6_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _20a3d5bc0_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::I64 _20b30d09c_randInt(jule::U64 _716_seed, jule::I64 _727_max);
inline jule::Bool _1ae340a33_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1ae38e0e2_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1b2935d06_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1b4d1b717_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void _1e2749458__handleRW(jule::Slice<jule::U8>* _1615_b);
inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2520_buf);
inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3620_buf);
inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf);
inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n);
inline jule::U64 _1ae172623_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo);
inline jule::U64 _1ae1727dd_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo);
inline jule::Str _1e276a820_executable(void);
inline jule::U64* __jule_RCNew(void);
inline jule::U64 __jule_RCLoad(jule::U64* _4019_p);
inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p);
inline void __jule_RCAdd(jule::U64* _5722_p);
inline void __jule_RCAddAtomic(jule::U64* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U64* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p);
inline void __jule_RCFree(jule::U64* _9219_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I64 _1e2774a8d_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1b5656edb_arrToStr(jule::Slice<jule::U8> _12316_x);
inline jule::Str _1b564bd7c_structToStr(_1b097ade7_StrBuilder _15619_x);
inline jule::Str _1ac29eaa4_toStr(jule::Any _19713_x);
inline jule::Str _1ac2a1c82_toStr(jule::Str _19713_x);
inline jule::Str _1ac2a24d0_toStr(jule::I64 _19713_x);
inline jule::Str _1ac2a7282_toStr(jule::I8 _19713_x);
inline jule::Str _1ac2a4eb6_toStr(jule::I16 _19713_x);
inline jule::Str _1ac2ac694_toStr(jule::I32 _19713_x);
inline jule::Str _1ac2b017a_toStr(jule::I64 _19713_x);
inline jule::Str _1ac2b2bc7_toStr(jule::U64 _19713_x);
inline jule::Str _1ac2b06db_toStr(jule::Uintptr _19713_x);
inline jule::Str _1ac2b58ab_toStr(jule::U8 _19713_x);
inline jule::Str _1ac2b7ced_toStr(jule::U16 _19713_x);
inline jule::Str _1ac2ba240_toStr(jule::U32 _19713_x);
inline jule::Str _1ac2bc682_toStr(jule::U64 _19713_x);
inline jule::Str _1ac2c0a5e_toStr(jule::F32 _19713_x);
inline jule::Str _1ac2c0dd3_toStr(jule::F64 _19713_x);
inline jule::Str _1ac2aca6d_toStr(jule::Bool _19713_x);
inline jule::Str _1ae336dc0_toStr(jule::I64 _19713_x);
inline jule::Str _1ae23ec0c_toStr(jule::I64 _19713_x);
inline jule::Str _1ae278460_toStr(jule::I64 _19713_x);
inline jule::Str _1b2c1449c_toStr(jule::I64 _19713_x);
inline jule::Str _1b34aae96_toStr(jule::Ptr<_1ac4c33e3_Impl> _19713_x);
inline jule::Str _1b34ab24e_toStr(jule::Ptr<_1ac4bd29a_TypeAliasDecl> _19713_x);
inline jule::Str _1b34ada7b_toStr(jule::Ptr<_1ac4c2546_StructDecl> _19713_x);
inline jule::Str _1b34b5e07_toStr(jule::Ptr<_1ac4b843d_FnDecl> _19713_x);
inline jule::Str _1b34b99ee_toStr(jule::Ptr<_1ac4c2c83_TraitDecl> _19713_x);
inline jule::Str _1b34bd5e6_toStr(jule::Ptr<_1ac4b95e8_VarDecl> _19713_x);
inline jule::Str _1ae285093_toStr(jule::Ptr<_1ac4c08eb_EnumDecl> _19713_x);
inline jule::Str _1b2959bc6_toStr(jule::Ptr<_1ac4c1886_TypeEnumDecl> _19713_x);
inline jule::Str _1b297c19e_toStr(jule::Ptr<_1ac4c4757_Field> _19713_x);
inline jule::Str _1b298e36a_toStr(jule::Ptr<_1aa1293c0_Const> _19713_x);
inline jule::Str _1b29954c5_toStr(jule::Ptr<_1ac5a2527_Var> _19713_x);
inline jule::Str _1b29ab8e8_toStr(jule::Ptr<_1ac502543_EnumItem> _19713_x);
inline jule::Str _1b29bd014_toStr(jule::Ptr<_1ac4da372_Param> _19713_x);
inline jule::Str _1b29e4aeb_toStr(jule::Ptr<_1ac4c767d_Struct> _19713_x);
inline jule::Str _1b29e7318_toStr(jule::Ptr<_1ac5008a4_Trait> _19713_x);
inline jule::Str _1b29eaa8b_toStr(jule::Ptr<_1ac5030b0_Enum> _19713_x);
inline jule::Str _1b29ee30e_toStr(jule::Ptr<_1ac5047ba_TypeEnum> _19713_x);
inline jule::Str _1b2a06e60_toStr(jule::Ptr<_1ac4dbd46_Fn> _19713_x);
inline jule::Str _1b3563eb6_toStr(jule::Str _19713_x);
inline jule::Str _1b35abc89_toStr(jule::Ptr<_1ac63c4e6_TypeAlias> _19713_x);
inline jule::Str _1b2a54dd1_toStr(jule::Ptr<_1ac4a6d88_IdentTypeDecl> _19713_x);
inline jule::Str _1b2a6c24a_toStr(jule::Ptr<_1ac4d4dd8_TupleExprModel> _19713_x);
inline jule::Str _1b2a6e6d1_toStr(jule::Ptr<_1ac4ab6a6_TupleExpr> _19713_x);
inline jule::Str _1b2a7e5d1_toStr(jule::Ptr<_1ac4b522b_AssignSt> _19713_x);
inline jule::Str _1b2a82727_toStr(jule::Ptr<_1ac4aaab2_Expr> _19713_x);
inline jule::Str _1b2a84905_toStr(jule::Ptr<_1ac538557_Postfix> _19713_x);
inline jule::Str _1b2a87595_toStr(jule::Ptr<_1ac538a0d_Assign> _19713_x);
inline jule::Str _1b2a850cb_toStr(jule::Ptr<_1ac538eb4_MultiAssign> _19713_x);
inline jule::Str _1b2a8b7db_toStr(jule::Ptr<_1ac60a55d_Data> _19713_x);
inline jule::Str _1b2a913e5_toStr(jule::Ptr<_1ac4d17ca_FnCallExprModel> _19713_x);
inline jule::Str _1b36d35a8_toStr(jule::Ptr<_1ac537a1d_Label> _19713_x);
inline jule::Str _1b3701ecd_toStr(jule::Ptr<_1ac534ec1_Scope> _19713_x);
inline jule::Str _1b370b449_toStr(jule::Ptr<_1ac4d7a45_BuiltinErrorCallExprModel> _19713_x);
inline jule::Str _1b3710ad0_toStr(jule::Ptr<_1ac4d8a57_BackendEmitExprModel> _19713_x);
inline jule::Str _1b37112b7_toStr(jule::Ptr<_1ac4d67be_BuiltinAppendCallExprModel> _19713_x);
inline jule::Str _1b3716751_toStr(jule::Ptr<_1ac4d52b2_BuiltinOutCallExprModel> _19713_x);
inline jule::Str _1b3717dd4_toStr(jule::Ptr<_1ac4d568b_BuiltinOutlnCallExprModel> _19713_x);
inline jule::Str _1b371a9a8_toStr(jule::Ptr<_1ac4d5e3e_BuiltinPanicCallExprModel> _19713_x);
inline jule::Str _1b371d57c_toStr(jule::Ptr<_1ac4d766b_BuiltinCopyCallExprModel> _19713_x);
inline jule::Str _1b3721151_toStr(jule::Ptr<_1ac4d7292_BuiltinDeleteCallExprModel> _19713_x);
inline jule::Str _1b3723c25_toStr(jule::Ptr<_1ac4d8d54_FreeExprModel> _19713_x);
inline jule::Str _1b372e626_toStr(jule::Ptr<_1ac535b09_Conditional> _19713_x);
inline jule::Str _1b373a005_toStr(jule::Ptr<_1ac535e06_InfIter> _19713_x);
inline jule::Str _1b374046c_toStr(jule::Ptr<_1ac5363ac_WhileIter> _19713_x);
inline jule::Str _1b275279e_toStr(jule::Ptr<_1ac536d08_RangeIter> _19713_x);
inline jule::Str _1b27624d4_toStr(jule::Ptr<_1ac4baa6c_WhileKind> _19713_x);
inline jule::Str _1b2765163_toStr(jule::Ptr<_1ac4bb474_RangeKind> _19713_x);
inline jule::Str _1b27819cb_toStr(jule::Ptr<_1ac53718d_ContSt> _19713_x);
inline jule::Str _1b278a8a3_toStr(jule::Ptr<_1ac53817d_GotoSt> _19713_x);
inline jule::Str _1b27c19b6_toStr(jule::Ptr<_1ac4ac3cc_IdentExpr> _19713_x);
inline jule::Str _1b27d6624_toStr(jule::Ptr<_1ac4d215a_IndexingExprModel> _19713_x);
inline jule::Str _1b3781d3d_toStr(jule::Ptr<_1ac539701_Match> _19713_x);
inline jule::Str _1b3796171_toStr(jule::Ptr<_1ac53a922_FallSt> _19713_x);
inline jule::Str _1b37b2247_toStr(jule::Ptr<_1ac537567_BreakSt> _19713_x);
inline jule::Str _1b37b88e1_toStr(jule::Ptr<_1ac53acb8_RetSt> _19713_x);
inline jule::Str _1b37c3368_toStr(jule::Ptr<_1ac4b679e_ScopeTree> _19713_x);
inline jule::Str _1b37c8109_toStr(jule::Ptr<_1ac4bca5d_Conditional> _19713_x);
inline jule::Str _1b37c835c_toStr(jule::Ptr<_1ac4ba242_Iter> _19713_x);
inline jule::Str _1b37ca5a1_toStr(jule::Ptr<_1ac4bbc27_ContSt> _19713_x);
inline jule::Str _1b37cd791_toStr(jule::Ptr<_1ac4b3d62_LabelSt> _19713_x);
inline jule::Str _1b37d5655_toStr(jule::Ptr<_1ac4b423b_GotoSt> _19713_x);
inline jule::Str _1b37d7d3e_toStr(jule::Ptr<_1ac4be06a_MatchCase> _19713_x);
inline jule::Str _1b37d80c5_toStr(jule::Ptr<_1ac4b4538_FallSt> _19713_x);
inline jule::Str _1b37db56d_toStr(jule::Ptr<_1ac4bb84d_BreakSt> _19713_x);
inline jule::Str _1b37de75d_toStr(jule::Ptr<_1ac4b99c2_RetSt> _19713_x);
inline jule::Str _1b37e294d_toStr(jule::Ptr<_1ac4ab486_UseExpr> _19713_x);
inline jule::Str _1b39d9b9a_toStr(jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _19713_x);
inline jule::Str _1b39da42b_toStr(jule::Ptr<_1ac4cebc4_UnaryExprModel> _19713_x);
inline jule::Str _1b3a1ed34_toStr(jule::Ptr<_1ac4dee04_FnIns> _19713_x);
inline jule::Str _1b3be347a_toStr(jule::Ptr<_1ac4a9297_MapTypeDecl> _19713_x);
inline jule::Str _1b3be8cdd_toStr(jule::Ptr<_1ac4a7eaa_TupleTypeDecl> _19713_x);
inline jule::Str _1b3c0bc13_toStr(jule::Ptr<_1ac4a8a49_ArrTypeDecl> _19713_x);
inline jule::Str _1b3c13137_toStr(jule::Ptr<_1ac4a7bad_SlcTypeDecl> _19713_x);
inline jule::Str _1b3c1968d_toStr(jule::Ptr<_1ac4a82a7_PtrTypeDecl> _19713_x);
inline jule::Str _1b3c20793_toStr(jule::Ptr<_1ac4a7828_SptrTypeDecl> _19713_x);
inline jule::Str _1b3c70c33_toStr(jule::Ptr<_1ac4ad048_VariadicExpr> _19713_x);
inline jule::Str _1b3c76992_toStr(jule::Ptr<_1ac4d1ba4_SliceExprModel> _19713_x);
inline jule::Str _1b3c91814_toStr(jule::Ptr<_1ac4b02d1_FieldExprPair> _19713_x);
inline jule::Str _1b3c9a312_toStr(jule::Ptr<_1ac4b18dc_KeyValPair> _19713_x);
inline jule::Str _1b3d019ea_toStr(jule::Ptr<_1ac4ae7db_FnCallExpr> _19713_x);
inline jule::Str _1b3d34786_toStr(jule::Ptr<_1ac4d0895_AllocStructLitExprModel> _19713_x);
inline jule::Str _1b3d4915d_toStr(jule::Ptr<_1ac4d0e28_CastingExprModel> _19713_x);
inline jule::Str _1b3d61a27_toStr(jule::Ptr<_1ac4d4712_StructStaticIdentExprModel> _19713_x);
inline jule::Str _1b3d641de_toStr(jule::Ptr<_1ac4adbc5_SubIdentExpr> _19713_x);
inline jule::Str _1b3d70e10_toStr(jule::Ptr<_1ac4d0598_StructLitExprModel> _19713_x);
inline jule::Str _1b3d9145d_toStr(jule::Ptr<_1ac4d86d3_RuneExprModel> _19713_x);
inline jule::Str _1b3db9079_toStr(jule::Ptr<_1ac4ca4d8_StructIns> _19713_x);
inline jule::Str _1b3e09240_toStr(jule::Ptr<_1ac63d2d8_TypeKind> _19713_x);
inline jule::Str _1b3e2b361_toStr(jule::Ptr<_1ac4d4adb_ArrayExprModel> _19713_x);
inline jule::Str _1b3e65301_toStr(jule::Ptr<_1ac4a7152_SubIdentTypeDecl> _19713_x);
inline jule::Str _1b360a755_toStr(jule::Ptr<_1ac4acb6e_UnaryExpr> _19713_x);
inline jule::Str _1b3614495_toStr(jule::Ptr<_1ac4a677d_TypeDecl> _19713_x);
inline jule::Str _1b36190b0_toStr(jule::Ptr<_1ac4ad7eb_NsSelectionExpr> _19713_x);
inline jule::Str _1b3620ade_toStr(jule::Ptr<_1ac4a752b_NamespaceTypeDecl> _19713_x);
inline jule::Str _1b365b641_toStr(jule::Ptr<_1ac4d3447_SlicingExprModel> _19713_x);
inline jule::Str _1b402405d_toStr(jule::Ptr<_1ac4b2118_SliceExpr> _19713_x);
inline jule::Str _1b40920a9_toStr(jule::Ptr<_1ac4d39ca_TraitSubIdentExprModel> _19713_x);
inline jule::Str _1b3abdd7d_toStr(jule::Ptr<_1ac4d2db4_MapExprModel> _19713_x);
inline jule::Str _1b4161dd2_toStr(jule::Ptr<_1ac4d2611_AnonFnExprModel> _19713_x);
inline jule::Str _1b4168e94_toStr(jule::Ptr<_1ac4aad7b_RangeExpr> _19713_x);
inline jule::Str _1b416924c_toStr(jule::Ptr<_1ac4aba4c_LitExpr> _19713_x);
inline jule::Str _1b4170561_toStr(jule::Ptr<_1ac4abe26_UnsafeExpr> _19713_x);
inline jule::Str _1b4172b6d_toStr(jule::Ptr<_1ac4b2a75_IndexingExpr> _19713_x);
inline jule::Str _1b417041d_toStr(jule::Ptr<_1ac4b31d5_SlicingExpr> _19713_x);
inline jule::Str _1b417b14e_toStr(jule::Ptr<_1ac4ad422_CastExpr> _19713_x);
inline jule::Str _1b417e31c_toStr(jule::Ptr<_1ac4b0b0b_StructLit> _19713_x);
inline jule::Str _1b41857b8_toStr(jule::Ptr<_1ac4b10b2_BraceLit> _19713_x);
inline jule::Str _1b4186049_toStr(jule::Ptr<_1ac4ae17b_BinaryExpr> _19713_x);
inline jule::Str _1b43160a8_toStr(jule::Ptr<_1ac4ce7ea_BinaryExprModel> _19713_x);
inline jule::Str _1b4127628_toStr(jule::Ptr<_1ac4d5a65_BuiltinNewCallExprModel> _19713_x);
inline jule::Str _1b413d023_toStr(jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel> _19713_x);
inline jule::Str _1b4599a12_toStr(jule::Ptr<_1ac4d6abb_BuiltinLenCallExprModel> _19713_x);
inline jule::Str _1b45b4631_toStr(jule::Ptr<_1ac4d6db8_BuiltinCapCallExprModel> _19713_x);
inline jule::Str _1b3e9eb76_toStr(jule::Ptr<_1ac4d7d42_SizeofExprModel> _19713_x);
inline jule::Str _1b3ea8b80_toStr(jule::Ptr<_1ac4d84e6_AlignofExprModel> _19713_x);
inline jule::Str _1b44b1e9b_toStr(jule::Str _19713_x);
inline jule::Str _1b491a0a2_toStr(jule::Ptr<_1ac738559_ExceptionalForwardingExprModel> _19713_x);
inline jule::Str _1b49526e4_toStr(jule::Ptr<_1ac73ae52_StrRuneIter> _19713_x);
inline jule::Str _1b495a158_toStr(jule::Ptr<_1ac739b43_MutSlicingExprModel> _19713_x);
inline jule::Str _1b498037b_toStr(jule::Ptr<_1ac73aa78_AppendToSliceExprModel> _19713_x);
inline jule::Str _1b4982bca_toStr(jule::Ptr<_1ac73a69e_PushToSliceExprModel> _19713_x);
inline jule::Str _1b49907cb_toStr(jule::Ptr<_1ac7388de_SwapExprModel> _19713_x);
inline jule::Str _1b4c99b5c_toStr(jule::Ptr<_1ac738cb8_EmptyCompareExprModel> _19713_x);
inline jule::Str _1b4c9c8da_toStr(jule::Ptr<_1ac7395b0_StrCompExprModel> _19713_x);
inline jule::Str _1b4cd5ec8_toStr(jule::Ptr<_1ac739e40_UnsafeBinaryExprModel> _19713_x);
inline jule::Str _1b4cde377_toStr(jule::Ptr<_1ac73b24e_UnsafeDerefExprModel> _19713_x);
inline jule::Str _1b4ce5d1d_toStr(jule::Ptr<_1ac73913c_RefExprModel> _19713_x);
inline jule::Str _1b4cea3b6_toStr(jule::Ptr<_1ac4d0202_StructArgExprModel> _19713_x);
inline jule::Str _1b4d01b81_toStr(jule::Ptr<_1ac73b54b_UnsafeCastingExprModel> _19713_x);
inline jule::Str _1b4d109e7_toStr(jule::Ptr<_1ac73a2c5_UnsafeIndexingExprModel> _19713_x);
inline jule::Str _1b5285048_toStr(jule::Ptr<jule::Str> _19713_x);
inline jule::Str _1b5646dbb_toStr(_1b097ade7_StrBuilder _19713_x);
inline jule::Str _1b5653713_toStr(jule::Slice<jule::U8> _19713_x);
inline jule::Str _1b564da3d_toStr(jule::Str _19713_x);
inline jule::Str _1b5655b55_toStr(jule::Str _19713_x);
inline void _1e2775c37_rev(jule::Slice<jule::U8> _25012_b);
inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen);
inline void _1c7ecd3ee_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Slice<jule::Str> _1c7ecd9c6_args(void);
inline jule::I64 _1c7ecdee3_strlen(jule::U8* _3122_p);
inline jule::Bool _1c7ed03bd__coSpawn(void* _1520_func, void* _1535_args);
inline jule::U64 _20a2e33d5_hash128to64(_20a2e302d_u128 _4316_sum);
inline jule::U64 _20a2e36e3_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _20a2e39ac_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _20a2e3ced_shiftMix(jule::U64 _5513_z);
inline jule::U64 _20a2e413e_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _20a2e44b3_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _20a2e48e2_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _20a2e4d76_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n);
inline _20a2e302d_u128 _20a2e522d_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _20a2e302d_u128 _10342_seed);
inline _20a2e302d_u128 _20a2e587c_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _20a2e302d_u128 _20a2e5cab_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _20a2e302d_u128 _20a2e61da_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _20a2e302d_u128 _16048_seed);
inline jule::U64 _20a2e64a4_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _20a3da202_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _20a3da510_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _20a3da7c9_nextMatch(jule::U64* _6419_b);
inline jule::U64 _20a3dab1a_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _20a3dada1_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I64 _20a3db16a_numGroups(jule::I64 _7914_n);
inline jule::Array<jule::I8,8> _20a3db379_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _20a3db753_splitHash(jule::U64 _9414_h);
inline jule::U32 _20a3dba50_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups);
inline jule::U32 _20a3dbdc4_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline jule::I64 _1ae70ae42_getLastOsError(void);
inline jule::Slice<jule::Str> _1ae739080_Args(void);
inline jule::Exceptional<jule::Str> _1ae7394e2_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1ae73a4b0_getwd(void);
inline jule::Bool _1c80963c9_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1b0923ad7_is16(jule::Slice<_1b0921d49_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1b0923e5b_is32(jule::Slice<_1b0922377_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1b0924764_isExcludingLatin(jule::Ptr<_1b09227ea_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1b09249a6_IsUpper(jule::I32 _29512_r);
inline jule::I32 _1b092519e_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_1b0921893_CaseRange> _31336_cr);
inline jule::Ptr<_1b0921893_CaseRange> _1b0925523_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1b0921893_CaseRange> _33329_caseRange);
inline jule::I32 _1b09257dc_SimpleFold(jule::I32 _37015_r);
inline jule::I64 _1b0965d5a_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _1b0966487_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _1b096680b_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1b0966b08_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _1b0966ec1_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1b0967345_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _1b09677eb_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _1b0967b3c_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _1b096806b_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _1b09683e0_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _1b0969bc7_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _1b096a04b_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _1b096a975_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1b096b118_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _1b096b48c_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _1b096c009_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _1b096c37d_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _1b096c867_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _1b096d5e3_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _1b096d967_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _1b096dcdb_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Str _1b096e160_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep);
inline jule::Bool _1b09872cc_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Str _1b0988762_Clean(jule::Str _10914_path);
inline jule::Str _1b0988d39_FromSlash(jule::Str _21214_path);
inline jule::Str _1b098917a_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1b0989411_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1b09896ca_Abs(jule::Str _2468_path);
inline jule::Str _1b0989994_Base(jule::Str _25213_path);
inline jule::Str _1b0989d6d_Dir(jule::Str _2838_path);
inline jule::Str _1b098a0b0_VolumeName(jule::Str _30115_path);
inline jule::Bool _1b098b006_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _1b098b314_IsAbs(jule::Str _5310_path);
inline jule::I64 _1b098b5cd_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _1b098b91e_abs(jule::Str _638_path);
inline jule::Str _1b098bba5_join(jule::Slice<jule::Str> _739_elem);
inline jule::I64 _1ae6689c6_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1b0388140_AtoiBp(jule::U8* _722_b, jule::I64 _736_n);
inline jule::Str _1b0391c81_Itoa(jule::I64 _89_x);
inline jule::Str _1b039208e_Utoa(jule::U64 _1613_x);
inline void _1b03922c0_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::Slice<char*> _1b0395e3e_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs);
inline jule::I64 _1b03962b3_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv);
inline jule::VoidExceptional _1b03964e4_setenv(jule::Slice<jule::Str>* _5612_envv);
inline jule::I64 _1b039755b_processErrorFromCode(jule::I64 _1125_code);
inline jule::I64 _1b03977ae_getLastProcessError(void);
inline void _1b0397eeb_Exit(jule::I64 _109_code);
inline jule::Str _1b039822c_Executable(void);
inline jule::Bool _1b08a92a9_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1b08a9584_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1b08a984d_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1b08b6c9a_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args);
inline jule::Str _1b08b70a8_argToStr(jule::Any _32613_arg);
inline jule::I64 _1b08b7372_findNextFmt(jule::Str _33916_fmt);
inline jule::Str _1b08b773a_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args);
inline jule::Bool _1b08b863c_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _1b08b9a5b_IsWindows(jule::Str _3714_os);
inline jule::Bool _1b08b9d69_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1b08ba133_IsLinux(jule::Str _4312_os);
inline jule::Bool _1b08ba474_IsI386(jule::Str _4611_arch);
inline jule::Bool _1b08ba70a_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1b08ba9c4_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1b08bac8d_IsUnix(jule::Str _5511_os);
inline jule::Bool _1b08bb167_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1b08bb3a9_Is64Bit(jule::Str _6112_arch);
inline void _1b0399580_init(void);
inline jule::U32 _1a9ceac0c_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1a9ceb01a_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1a9ceb2d4_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1a9ceb625_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1a9cedb88_Frexp(jule::F64 _4714_f);
inline jule::F64 _1a9d04155_NaN(void);
inline jule::Bool _1a9d04463_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1a9d0472c_Inf(jule::I64 _618_sign);
inline jule::Bool _1a9d04ae5_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1a9d04dae_normalize(jule::F64 _8214_x);
inline jule::F64 _1a9d06883_Log(jule::F64 _1118_x);
inline jule::F64 _1a9d07268_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1a9d0dd41_Modf(jule::F64 _449_f);
inline jule::F64 _1a9d0e649_Log2(jule::F64 _449_x);
inline jule::Str _1a9d380e0_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1a9d386c8_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1a9d38dd2_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1a9d36dd0_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1a9d395a8_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1a9d37a5c_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1a9d399c6_roundShortest(_1aa116bc6_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1a9d36dd0_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1a9d3a06a_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1a9d37a5c_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1a9d3a554_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1a9d37a5c_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1a9d3ac08_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1a9d36dd0_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1a9d3b38a_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1a9d36dd0_floatInfo* _51232_flt);
inline jule::I64 _1a9d3b70e_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1a9d3ba83_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1a9d3c721_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1a970dbe7_ConvError _1a9d3cb94_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1a9d3d0c3_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1a9d3d579_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1a9d3e239_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1a9d3e6ac_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1a9d4148e_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a9d4179c_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a9d41a66_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1a9d435b2_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1a9d439e1_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1a970dbe7_ConvError _1a9d44085_atofHex(_1a9d36dd0_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a970dbe7_ConvError _1a9d4445e_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a970dbe7_ConvError _1a9d446a1_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a970dbe7_ConvError _1a9d44a25_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1a9d44d99_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1a9d45729_ryuFtoaFixed32(_1a9d37a5c_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1a9d45bbe_ryuFtoaFixed64(_1a9d37a5c_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1a9d4650a_formatDecimal(_1a9d37a5c_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1aa112de2_ryuFtoaShortest(_1a9d37a5c_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1a9d36dd0_floatInfo* _26168_flt);
inline jule::I64 _1aa113178_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1aa113442_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1aa113871_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1a9d36dd0_floatInfo* _3963_flt);
inline void _1aa113ec0_ryuDigits(_1a9d37a5c_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1aa114641_ryuDigits32(_1a9d37a5c_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1aa114a70_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1aa114e9e_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1aa115323_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1aa1155dc_divmod1e9(jule::U64 _60214_x);
inline void _1aa118524_trim(_1aa116bc6_decimal* _27414_a);
inline void _1aa118810_rightShift(_1aa116bc6_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1aa118cb6_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1aa11906e_leftShift(_1aa116bc6_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1aa1193e3_shouldRoundUp(_1aa116bc6_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1aa11ab75_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1aa11b03d_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1aa11b307_Itoa(jule::I64 _819_i);
inline jule::Str _1aa11b648_small(jule::I64 _8610_i);
inline jule::Bool _1aa11b8ce_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1aa11be73_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1aa11d46e_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1aa11d738_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1aa11da79_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1aa11dd10_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1aa11e0c9_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1aa11ebce_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1aa11ee98_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1aa120262_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1aa12052b_BitsizeOfUint(jule::U64 _19718_x);
inline void _1aa1206c4_UpdateTarget(void);
inline void _1aa12084a_init(void);
inline jule::I64 _1aa1244a8_MinI(jule::Str _6113_k);
inline jule::I64 _1aa1247b6_MaxI(jule::Str _7913_k);
inline jule::U64 _1aa124a80_MaxU(jule::Str _9713_k);
inline jule::F64 _1aa124dc1_Min(jule::Str _11512_k);
inline jule::F64 _1aa125157_Max(jule::Str _13312_k);
inline jule::Bool _1aa12817c_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1aa12848a_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1aa128754_IsInt(jule::Str _4610_k);
inline jule::Bool _1aa128a95_IsFloat(jule::Str _5112_k);
inline jule::Bool _1aa128d2b_IsNum(jule::Str _5610_k);
inline jule::Bool _1aa1290e5_IsSigNum(jule::Str _6113_k);
inline void _1aa1333da_lshiftUnsig(_1aa1293c0_Const* _59021_c, _1aa1293c0_Const* _59032_x);
inline void _1aa13371a_rshiftUnsig(_1aa1293c0_Const* _59621_c, _1aa1293c0_Const* _59632_x);
inline jule::Bool _1ac491a10_IsUnaryOp(jule::U64 _33414_id);
inline jule::Bool _1ac491d1d_IsBinOp(jule::U64 _34412_id);
inline jule::Bool _1ac492428_IsStr(jule::Str _36410_k);
inline jule::Bool _1ac4926ae_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1ac492978_IsRune(jule::Str _37111_k);
inline jule::Bool _1ac49335d_IsFloat(jule::Str _38012_k);
inline jule::Bool _1ac493627_IsNum(jule::Str _38810_k);
inline jule::Bool _1ac493baa_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1ac493e74_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1ac494507_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1ac494a02_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1ac494e75_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1ac49523e_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1ac495508_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1ac4957c2_IsHex(jule::U8 _45810_b);
inline jule::Bool _1ac495a8b_IsAssign(jule::U64 _47313_id);
inline jule::Bool _1ac495d55_IsPostfixOp(jule::U64 _48516_id);
inline jule::Bool _1ac49611e_IsAssignOp(jule::U64 _49515_id);
inline jule::Ptr<_1ac496a59_File> _1ac497e34_NewFileSet(jule::Str _5715_path);
inline _1b08b6838_Log _1ac49995d_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1ac496a59_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1ac499d26_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1ac49a19a_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1ac49a563_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1ac49a8d7_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1ac49ac5b_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1ac49b0d0_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1ac49b564_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1ac49b7a6_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1ac49ba70_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1ac49bde4_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1ac49c268_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1ac49c5dc_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1ac49c961_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1ac49ccd5_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1ac49d2d0_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1ac49d4ab_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1ac49d80d_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1ac49dac7_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1ac49dd91_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1ac49e15a_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1ac49e424_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_1b08b6838_Log> _1ac4a4418_Lex(jule::Ptr<_1ac496a59_File> _80612_f, jule::I64 _80622_mode);
inline jule::Bool _1ac574373_FindModuleFile(jule::Slice<jule::Ptr<_1ae66a753_DirEntry>>* _1320_dirents);
inline jule::Str _1ac57462b_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1b08b6838_Log> _1ac5748e5_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1ac575242_IsPub(jule::Str _910_ident);
inline jule::Bool _1ac5c3ed8_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1ac5de113_ToRune(jule::Str _2015_lit);
inline jule::Str _1ac5de322_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1ac5de663_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1ac5de8e9_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1ac5dec6d_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1ac5e0114_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1ac723434_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i);
inline jule::Slice<jule::U8> _1ac7237ec_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1ac723ad8_FmtByDefault(_1b097ade7_StrBuilder* _4822_buf, jule::Any* _4840_arg);
inline void _1ac724006_applyFmtByDefault(_1b097ade7_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args);
inline void _1ac724424_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1b097ade7_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args);
inline jule::Slice<jule::U8> _1ac724798_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1ac7267bc_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac15ae05_runtimeFindFn(jule::Ptr<_1ac557cd5_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1ac4c767d_Struct> _1ac15b455_runtimeFindStruct(jule::Ptr<_1ac557cd5_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1ac4e21d1_parameterUsesGenerics(jule::Ptr<_1ac4ddc9e_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>* _39546_generics);
inline jule::Ptr<_1ac6459e9_TypeSymbol> _1ac4e490e_buildType(jule::Ptr<_1ac4a677d_TypeDecl> _9418_t);
inline jule::Ptr<_1ac60b6d5_Value> _1ac4e4c1c_buildExpr(jule::Ptr<_1ac4aaab2_Expr> _10318_expr);
inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac4e4ed6_buildTypeAlias(jule::Ptr<_1ac4bd29a_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1ac4c4757_Field> _1ac4e5327_buildField(jule::Ptr<_1ac4c1b50_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1ac4c4757_Field>> _1ac4e55ad_buildFields(jule::Slice<jule::Ptr<_1ac4c1b50_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1ac4c767d_Struct> _1ac4e5877_buildStruct(jule::Ptr<_1ac4c2546_StructDecl> _14220_decl);
inline jule::Ptr<_1ac4da372_Param> _1ac4e5b41_buildParam(jule::Ptr<_1ac4b6edb_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1ac4da372_Param>> _1ac4e601a_buildParams(jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1ac4d9b57_RetType> _1ac4e625c_buildRetType(jule::Ptr<_1ac4a9671_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac4e6526_buildFunc(jule::Ptr<_1ac4b843d_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1ac4dbd46_Fn>> _1ac4e67e0_buildMethods(jule::Slice<jule::Ptr<_1ac4b843d_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1ac6459e9_TypeSymbol>> _1ac4e6aa9_buildTraitInherits(jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1ac5008a4_Trait> _1ac4e6d73_buildTrait(jule::Ptr<_1ac4c2c83_TraitDecl> _21719_decl);
inline jule::Ptr<_1ac502543_EnumItem> _1ac4e713c_buildEnumItem(jule::Ptr<_1ac4bed3a_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1ac502543_EnumItem>> _1ac4e7406_buildEnumItems(jule::Slice<jule::Ptr<_1ac4bed3a_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1ac5030b0_Enum> _1ac4e7901_buildEnum(jule::Ptr<_1ac4c08eb_EnumDecl> _24318_decl);
inline jule::Ptr<_1ac5041e3_TypeEnumItem> _1ac4e7acc_buildTypeEnumItem(jule::Ptr<_1ac4c1226_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1ac5041e3_TypeEnumItem>> _1ac4e7d74_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ac4c1226_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac4e813d_buildTypeEnum(jule::Ptr<_1ac4c1886_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1ac5a2527_Var> _1ac4e8407_buildVar(jule::Ptr<_1ac4b95e8_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1ac5a2527_Var>> _1ac4e86c1_buildVars(jule::Slice<jule::Ptr<_1ac4b95e8_VarDecl>> _29518_decls);
inline jule::Ptr<_1ac5306e7_Impl> _1ac4e898a_buildImpl(jule::Ptr<_1ac4c33e3_Impl> _30318_decl);
inline jule::Bool _1ac4eed9d_isImplicitImport(jule::Ptr<_1ac557cd5_ImportInfo> _78821_imp);
inline jule::Ptr<_1ac60a55d_Data> _1ac52acca_buildAsComptimeMethodData(jule::Ptr<_1ac4dee04_FnIns>* _203035_f);
inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac52aed9_findComptimePackage(jule::Ptr<_1ac578256_sema>* _203829_s);
inline jule::Ptr<_1ac60a55d_Data> _1ac52b35d_buildComptimeTypeInfoData(jule::Ptr<_1ac578256_sema>* _204435_s, jule::Ptr<_1ac63d2d8_TypeKind>* _204450_t);
inline jule::Ptr<_1ac60a55d_Data> _1ac52b69e_buildComptimeValue(jule::Ptr<_1ac60a55d_Data>* _205228_d);
inline jule::Str _1ac52e691_toStrConstraints(jule::Ptr<_1ac63b902_InsGeneric> _14321_g);
inline jule::Bool _1ac52ea59_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1ac63d2d8_TypeKind>* _15434_g);
inline jule::Bool _1ac52ed23_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1ac53c25e_scopeChecker> _1ac53292a_newScopeCheckerBase(jule::Ptr<_1ac578256_sema>* _5829_s, jule::Ptr<_1ac4dee04_FnIns> _5843_owner);
inline jule::Ptr<_1ac53c25e_scopeChecker> _1ac532ce3_newScopeChecker(jule::Ptr<_1ac578256_sema>* _6625_s, jule::Ptr<_1ac4dee04_FnIns> _6639_owner);
inline jule::Ptr<_1ac53b26e_scopeLabel> _1ac533167_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1ac53c25e_scopeChecker> _7637_scope);
inline jule::Slice<jule::Ptr<_1ac60a55d_Data>> _1ac5334a8_getDatasFromTupleData(jule::Ptr<_1ac60a55d_Data>* _8831_d);
inline jule::Bool _1ac533c28_checkMut(jule::Ptr<_1ac578256_sema>* _12318_s, jule::Ptr<_1ac60a55d_Data>* _12329_left, jule::Ptr<_1ac60a55d_Data> _12346_right, jule::Ptr<_1ac4912c3_Token> _12360_op);
inline jule::Bool _1ac534212_checkAssign(jule::Ptr<_1ac578256_sema>* _14221_s, jule::Ptr<_1ac60a55d_Data>* _14236_left, jule::Ptr<_1ac60a55d_Data> _14253_right, jule::Ptr<_1ac4912c3_Token> _14267_op);
inline jule::Bool _1ac5345db_isValidAstStForNextSt(jule::Any* _16431_n);
inline jule::Bool _1ac53482d_isValidStForNextSt(jule::Any* _17524_st);
inline jule::U64 _1ac54e9ad_removeEqFromOp(jule::U64 _216619_op);
inline void _1ac54ebde_makeComptimeRange(jule::Ptr<_1ac60a55d_Data>* _219527_d);
inline jule::Bool _1ac54eea8_canComptimeMatch(jule::Ptr<_1ac60a55d_Data>* _221826_d);
inline jule::Bool _1ac550272_stmtIsDef(jule::Any* _222615_stmt);
inline jule::I64 _1ac5505e6_countMatchType(jule::Ptr<_1ac539701_Match>* _223820_m, jule::Ptr<_1ac63d2d8_TypeKind>* _223832_t);
inline jule::Ptr<_1ac604d93_SymbolTable> _1ac554d8c_findVarFileInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _4430_files, jule::Ptr<_1ac5a2527_Var>* _4454_v);
inline jule::Ptr<_1ac5a2527_Var> _1ac555310_findVarInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _5526_files, jule::Str* _5550_ident, jule::Bool _5562_binded);
inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac55573e_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _6732_files, jule::Str* _6756_ident, jule::Bool _6768_binded);
inline jule::Ptr<_1ac4c767d_Struct> _1ac555be5_findStructInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _7929_files, jule::Str* _7953_ident, jule::Bool _7965_binded);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac5560e1_findFnInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _9125_files, jule::Str* _9149_ident, jule::Bool _9161_binded);
inline jule::Ptr<_1ac5008a4_Trait> _1ac556465_findTraitInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _10328_files, jule::Str* _10352_ident);
inline jule::Ptr<_1ac5030b0_Enum> _1ac5567d9_findEnumInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _11527_files, jule::Str* _11551_ident);
inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac556c6d_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _12731_files, jule::Str* _12755_ident);
inline jule::Any _1ac557125_defByIdentPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _13827_files, jule::Str* _13851_ident, jule::Bool _13863_binded);
inline jule::Bool _1ac55d1d6_isStdPackage(jule::Str* _36918_f, jule::Str _36926_p);
inline jule::Bool _1ac575819_isValidModelForRef(jule::Any* _1328_m);
inline _1b08b6838_Log _1ac575cc0_compilerErr(jule::Ptr<_1ac4912c3_Token>* _4717_token, jule::Bool _4732_line, jule::Str _4744_fmt, jule::Slice<jule::Any> _4757_args);
inline jule::Bool _1ac576144_impIsLookupable(jule::Ptr<_1ac557cd5_ImportInfo>* _6121_i, jule::Str* _6138_ident);
inline void _1ac576474_appendRetVars(jule::Slice<jule::Ptr<_1ac5a2527_Var>>* _7323_dest, jule::Ptr<_1ac4dee04_FnIns>* _7342_f);
inline void _1ac576760_appendParamVars(jule::Slice<jule::Ptr<_1ac5a2527_Var>>* _10325_dest, jule::Ptr<_1ac4dee04_FnIns>* _10344_f);
inline void _1ac576a4b_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>* _16334_dest, jule::Ptr<_1ac4dee04_FnIns>* _16359_f);
inline jule::Ptr<_1ac604d93_SymbolTable> _1ac576dc0_findFile(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _20418_files, jule::Ptr<_1ac496a59_File>* _20442_handler);
inline void _1ac577376_pushSuggestion(_1b08b6838_Log* _21330_log, jule::Str _21341_fmt, jule::Slice<jule::Any> _21354_args);
inline void _1ac5a07ab_pushImplemented(jule::Ptr<_1ac5008a4_Trait> _300524_t, jule::Ptr<_1ac4c767d_Struct>* _300540_d);
inline void _1ac5a0a97_pushImplements(jule::Ptr<_1ac4c767d_Struct>* _302324_s, jule::Ptr<_1ac5008a4_Trait> _302340_t);
inline void _1ac5a0ee8_pushRuntimeToStr(jule::Ptr<_1ac578256_sema>* _304126_s, jule::Ptr<_1ac63d2d8_TypeKind>* _304141_t, jule::Ptr<_1ac4912c3_Token>* _304160_token, jule::Ptr<_1ac4e308e_ReferenceStack> _30426_refers);
inline jule::Bool _1ac5e08b7_traitHasReferenceReceiver(jule::Ptr<_1ac5008a4_Trait>* _2831_t);
inline jule::Bool _1ac5e0c4c_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1ac60a55d_Data>* _4333_d);
inline jule::Bool _1ac5e10c1_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1ac60a55d_Data>* _4830_d);
inline jule::Bool _1ac5e1489_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1ac60a55d_Data>* _7132_d);
inline jule::Bool _1ac5e180d_intAssignable(jule::Str _10018_kind, jule::Ptr<_1ac60a55d_Data>* _10030_d);
inline void _1ac5ecd03_checkMutRiskOfStructLit(jule::Ptr<_1ac578256_sema>* _92133_s, jule::Ptr<_1ac4d0598_StructLitExprModel>* _92144_m);
inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac603b3e_lenKind(void);
inline jule::Bool _1ac603e91_isGoodValueToInfer(jule::Ptr<_1ac60a55d_Data>* _142624_d);
inline jule::Ptr<_1ac4a5b9a_Directive> _1ac634a60_findDirective(jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _440223_directives, jule::Str _440254_d);
inline jule::Any _1ac634e28_findBuiltinsImport(jule::Str* _441124_ident, jule::Ptr<_1ac557cd5_ImportInfo> _441136_imp);
inline void _1ac635159_fitBitsize(jule::Ptr<_1ac60a55d_Data>* _442020_d);
inline void _1ac635489_makeStructLitAlloc(jule::Ptr<_1ac60a55d_Data>* _444928_d, jule::Ptr<_1ac4d0598_StructLitExprModel>* _444943_lit);
inline jule::Ptr<_1ac5a2527_Var> _1ac63580d_buildErrorVar(jule::Ptr<_1ac534ec1_Scope>* _446023_s, jule::Ptr<_1ac4ae7db_FnCallExpr>* _446039_fc);
inline jule::Any _1ac635b82_findBuiltinsSema(jule::Str* _447522_ident, jule::Ptr<_1ac578256_sema> _447538_s);
inline jule::Bool _1ac635e4b_isOkForShifting(jule::Ptr<_1ac60a55d_Data>* _450025_d);
inline jule::Bool _1ac636325_isInstancedStruct(jule::Ptr<_1ac4ca4d8_StructIns> _451722_s);
inline jule::Bool _1ac636622_isPtrArithmeticCompatible(jule::Ptr<_1ac60a55d_Data>* _452135_l, jule::Ptr<_1ac60a55d_Data>* _452150_r);
inline void _1ac636b2d_applyRuntimeToStr(jule::Ptr<_1ac578256_sema>* _454227_s, jule::Ptr<_1ac63d2d8_TypeKind>* _454242_from, jule::Ptr<_1ac63d2d8_TypeKind>* _454264_to, jule::Ptr<_1ac4912c3_Token>* _45437_token, jule::Ptr<_1ac4e308e_ReferenceStack> _454326_refers);
inline void _1ac637139_applyCastKindModel(jule::Ptr<_1ac578256_sema>* _455728_s, jule::Ptr<_1ac60a55d_Data>* _455743_d, jule::Ptr<_1ac63d2d8_TypeKind>* _455758_t, jule::Ptr<_1ac4912c3_Token>* _45587_token, jule::Ptr<_1ac4e308e_ReferenceStack> _455826_refers);
inline void _1ac637645_applyCastKind(jule::Ptr<_1ac578256_sema>* _456823_s, jule::Ptr<_1ac60a55d_Data>* _456838_d, jule::Ptr<_1ac63d2d8_TypeKind>* _456853_t, jule::Ptr<_1ac4912c3_Token>* _45697_token, jule::Ptr<_1ac4e308e_ReferenceStack> _456926_refers);
inline jule::Ptr<_1ac60a55d_Data> _1ac637854_buildVoidData(void);
inline jule::Str _1ac637d3d_checkDataForIntegerIndexing(jule::Ptr<_1ac578256_sema>* _458037_s, jule::Ptr<_1ac60a55d_Data>* _458052_d, jule::Ptr<_1ac4912c3_Token>* _45817_token, jule::Ptr<_1ac4e308e_ReferenceStack> _458126_refers);
inline void _1ac638349_applyCastModelByEnum(jule::Ptr<_1ac578256_sema>* _460630_s, jule::Ptr<_1ac60a55d_Data>* _460645_d, jule::Ptr<_1ac5030b0_Enum> _460659_e, jule::Ptr<_1ac4912c3_Token>* _46077_token, jule::Ptr<_1ac4e308e_ReferenceStack> _460726_refers);
inline void _1ac638866_castConstByType(jule::Str* _461421_t, jule::Ptr<_1ac60a55d_Data>* _461434_d);
inline void _1ac638a42_updateModelToGenericIns(jule::Any* _464833_m, jule::Ptr<_1ac4dee04_FnIns>* _464852_f);
inline jule::Bool _1ac638db6_pushSubIdentFromExpr(jule::Any _465929_expr, jule::Ptr<_1ac4a7152_SubIdentTypeDecl>* _465950_t);
inline jule::Str _1ac639180_constoa(jule::Ptr<_1aa1293c0_Const>* _468213_c);
inline jule::Ptr<_1ac60a55d_Data> _1ac639724_evalEnumStatic(jule::Ptr<_1ac578256_sema>* _469324_s, jule::Ptr<_1ac5030b0_Enum>* _469339_enm, jule::Ptr<_1ac502543_EnumItem>* _469356_item, jule::Ptr<_1ac4912c3_Token>* _46947_token, jule::Ptr<_1ac4e308e_ReferenceStack> _469426_refers);
inline jule::Ptr<_1ac4d0598_StructLitExprModel> _1ac6399dd_isLitBased(jule::Any* _471120_m);
inline void _1ac639cc9_makeImplicitDeref(jule::Ptr<_1ac60a55d_Data>* _472827_d, jule::Ptr<_1ac4912c3_Token> _472841_baseToken);
inline void _1b362e04d_updateRefer(jule::Ptr<_1ac4e308e_ReferenceStack> _473923_ref, jule::Ptr<_1ac4dee04_FnIns>* _473946_old, jule::Ptr<_1ac4dee04_FnIns>* _473959_new);
inline void _1ac63a45b_makeVariadic(jule::Ptr<_1ac60a55d_Data>* _474722_d, jule::Ptr<_1ac63d2d8_TypeKind> _474736_elem);
inline jule::Bool _1ac63a88a_isVarCaptured(jule::Ptr<_1ac53c25e_scopeChecker> _476118_r, jule::Ptr<_1ac53c25e_scopeChecker> _476140_s, jule::Ptr<_1ac5a2527_Var> _476158_v);
inline jule::Bool _1ac65948b_kindUsesGenerics(jule::Ptr<_1ac63d2d8_TypeKind>* _175726_k, jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>* _175741_generics);
inline jule::Bool _1ac659854_hasDirective(jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _176722_directives, jule::Str _176753_tag);
inline jule::Bool _1ac659b1d_canGetPtr(jule::Ptr<_1ac60a55d_Data>* _177619_d);
inline jule::Bool _1ac659e5e_isValidForSptrType(jule::Ptr<_1ac63d2d8_TypeKind>* _177928_t);
inline jule::Bool _1ac65a1e5_isValidForRef(jule::Ptr<_1ac63d2d8_TypeKind>* _178823_t);
inline jule::Bool _1ac65a4ae_isBuiltinStrConvertable(jule::Ptr<_1ac63d2d8_TypeKind>* _179133_t);
inline jule::Str _1ac65a778_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _179527_tokens);
inline jule::Ptr<_1ac646401_Prim> _1ac65ab52_buildPrimType(jule::Str _181418_kind);
inline void _1ac65b3a0_applyImplicitCast(jule::Ptr<_1ac578256_sema>* _184227_s, jule::Ptr<_1ac63d2d8_TypeKind>* _184242_dest, jule::Ptr<_1ac60a55d_Data>* _184264_d, jule::Ptr<_1ac4912c3_Token>* _18437_token, jule::Ptr<_1ac4e308e_ReferenceStack> _184326_refers);
inline jule::Bool _1ac65b669_validTypeForXof(jule::Ptr<_1ac63d2d8_TypeKind>* _187125_t);
inline __jule_tuple_x_1ac604d93_SymbolTable__jule_tuple_s_1b08b6838_Log _1ac65e77c_buildSymbols(jule::Ptr<_1ac4a4869_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1ac4e9051_symbolBuilder> _1662_owner);
inline void _1ac65eaac_collectImplicitImports(jule::Ptr<_1ac578256_sema>* _3132_s, jule::Ptr<_1ac604d93_SymbolTable>* _3147_file);
inline __jule_tuple_x_1ac55ac0b_Package__jule_tuple_s_1b08b6838_Log _1ac65eedb_analyzePackage(jule::Slice<jule::Ptr<_1ac4a4869_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags);
inline __jule_tuple_x_1ac55ac0b_Package__jule_tuple_s_1b08b6838_Log _1ac660492_AnalyzePackage(jule::Slice<jule::Ptr<_1ac4a4869_AST>> _9523_files, jule::Trait _9542_importer, jule::I64 _9562_flags);
inline jule::Ptr<_1ac4dee04_FnIns> _1ac72725c_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac72756a_primTypeAlias(jule::Ptr<_1ac63d2d8_TypeKind>* _6323_k);
inline jule::Ptr<_1ac5a2527_Var> _1ac72ae20_findBuiltinVar(jule::Str* _9120_ident);
inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac72b261_findBuiltinTypeAlias(jule::Str _13925_ident);
inline jule::Any _1ac72b4e7_findBuiltinDef(jule::Str* _19420_ident);
inline jule::Any _1ac72b7b1_findBuiltinDefStdDebug(jule::Str* _21028_ident);
inline jule::Any _1ac72ba7a_findBuiltinDefStdMem(jule::Str* _22326_ident);
inline jule::Any _1ac72be54_findBuiltinDefStdComptime(jule::Str* _23931_ident);
inline jule::Any _1ac72c196_findBuiltinDefStdJuleIntegrated(jule::Str* _26437_ident);
inline jule::Any _1ac72c51a_findPackageBuiltinDef(jule::Str* _27927_linkPath, jule::Str* _27943_ident);
inline jule::Ptr<_1ac60a55d_Data> _1ac72c88e_builtinCallerError(jule::Ptr<_1ac60c285_eval>* _29428_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _29443_fc);
inline jule::Ptr<_1ac60a55d_Data> _1ac72ccbd_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _32526_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _32541_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac72d1ec_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _35228_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _35243_fc, jule::Ptr<_1ac60a55d_Data>* _35265_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac72d62b_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _36426_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _36441_fc, jule::Ptr<_1ac60a55d_Data>* _36463_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac72da5a_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _42628_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _42643_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac72e1ba_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _45227_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _45242_fc, jule::Ptr<_1ac60a55d_Data>* _45264_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac72e4d9_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _50329_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _50344_fc, jule::Ptr<_1ac60a55d_Data>* _50366_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac72e9c3_callerCopySlice(jule::Ptr<_1ac60a55d_Data>* _62325_dest, jule::Ptr<_1ac60c285_eval>* _62343_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _62358_fc, jule::Ptr<_1ac60a55d_Data>* _62380_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac72ee02_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _65727_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _65742_fc, jule::Ptr<_1ac60a55d_Data>* _65764_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac730276_callerLenSlice(jule::Ptr<_1ac60a55d_Data>* _68224_expr, jule::Ptr<_1ac60a55d_Data>* _68242_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac7305ea_callerLenMap(jule::Ptr<_1ac60a55d_Data>* _69022_expr, jule::Ptr<_1ac60a55d_Data>* _69040_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac73096e_callerLenArr(jule::Ptr<_1ac60a55d_Data>* _69822_expr, jule::Ptr<_1ac60a55d_Data>* _69840_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac730ce3_callerLenStr(jule::Ptr<_1ac60a55d_Data>* _70522_expr, jule::Ptr<_1ac60a55d_Data>* _70540_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac731167_callerLenComptime(jule::Ptr<_1ac60a55d_Data>* _71827_d, jule::I64 _71837_n);
inline jule::Ptr<_1ac60a55d_Data> _1ac731596_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _72526_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _72541_fc, jule::Ptr<_1ac60a55d_Data>* _72563_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac73191a_callerCapSlice(jule::Ptr<_1ac60a55d_Data>* _76524_expr, jule::Ptr<_1ac60a55d_Data>* _76542_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac731d49_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _77326_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _77341_fc, jule::Ptr<_1ac60a55d_Data>* _77363_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac732333_callerDeleteMap(jule::Ptr<_1ac60c285_eval>* _79625_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _79640_fc, jule::Ptr<_1ac60a55d_Data>* _79662_expr, jule::Ptr<_1ac60a55d_Data>* _79680_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac732762_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _82529_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _82544_fc, jule::Ptr<_1ac60a55d_Data>* _82566_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac732b91_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _84840_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _84855_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac7330c0_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _88441_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _88456_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac733741_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _90438_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _90453_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac733b70_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _91638_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _91653_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac73409e_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _92939_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _92954_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac7344cd_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _94243_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _94258_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac73490c_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _100235_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _100250_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac734d3b_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _102736_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _102751_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac73526a_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _105233_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _105248_fc, jule::Ptr<_1ac60a55d_Data>* );
inline jule::Ptr<_1ac60a55d_Data> _1ac735699_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _107544_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _107559_fc, jule::Ptr<_1ac60a55d_Data>* _107581_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac735ac8_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _112634_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _112649_fc, jule::Ptr<_1ac60a55d_Data>* _112671_d);
inline jule::Ptr<_1ac60a55d_Data> _1ac736007_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _113536_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _113551_fc, jule::Ptr<_1ac60a55d_Data>* _113573_d);
inline jule::Ptr<_1ad20bd0c_FileInfo> _1ad20eace_ParseFile(jule::Ptr<_1ac496a59_File> _2318_f);
inline __jule_tuple_x_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log _1ad255b9c_parseFileset(jule::Ptr<_1ac496a59_File> _5521_f);
inline jule::Ptr<_1ac4b679e_ScopeTree> _1ad256670_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1ad2569c2_isSt(jule::Ptr<_1ac4912c3_Token> _499_current, jule::Ptr<_1ac4912c3_Token> _4926_prev);
inline jule::Bool _1ad256d46_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _5526_tokens, jule::I64* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1ad25720e_nextStPos(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _6815_tokens, jule::I64 _6833_start);
inline __jule_tuple_sx_1ac4912c3_Token__jule_tuple_bool _1ad257583_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1ad2578b3_stmt>> _1ad257c6a_splitStmts(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _15120_tokens);
inline jule::Bool _1ad2713c1_isTypeOp(jule::U64* _89314_id);
inline jule::Bool _1ad2716ce_isTypeRange(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1ac4912c3_Token>> _1ad271998_getBlockExpr(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _93322_tokens);
inline __jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token _1ad271d61_splitDelim(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _96520_tokens, jule::U64 _96538_delim);
inline jule::I64 _1ad27212a_findLowestPrecOp(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _100422_tokens);
inline jule::Ptr<_1ac4ac3cc_IdentExpr> _1ad2723e4_buildIdentExpr(jule::Ptr<_1ac4912c3_Token>* _106924_token);
inline __jule_tuple_sx_1ac4912c3_Token__jule_tuple_int _1ad2726ad_getRangeExprTokens(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _107728_tokens);
inline jule::Bool _1ad272a87_isAnonFnHead(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _110018_tokens);
inline jule::Bool _1ad27378b_checkAssignTokens(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _1623_tokens);
inline _1b08b6838_Log _1ad274957_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1ac496a59_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1ac4912c3_Token>> _1ad274e85_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _6959_tokens);
inline __jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token _1ad27524e_rangeLast(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log _1ad275705_parts(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust);
inline jule::U64 _1ad27598b_getCloseOfBrace(jule::U64 _16720_left);
inline _1b08b6838_Log _1ad275dba_compilerErr(jule::Ptr<_1ac4912c3_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1ad276261_pushSuggestion(_1b08b6838_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad288174_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1ac9600dd_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1ac960231_checkArch(jule::Str _2814_arg);
inline jule::Bool _1ac9603c9_isPassFileAnnotation(jule::Str _5029_p);
inline void _1ac97b060_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1ac97b2d5_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1ac97b5c1_initVars(jule::Slice<jule::Str>* _5518_vars, _1ac97ac41_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1ad28c101_readBuff(jule::Str _3013_path);
inline _1b08b6838_Log _1ad28c40e_flatCompilerErr(jule::Str _4120_text);
inline jule::Ptr<_1ac4dbd46_Fn> _1ac8cc38a_RuntimeFindFn(jule::Ptr<_1ac557cd5_ImportInfo>* _1823_runtime, jule::Str _1845_ident);
inline jule::Ptr<_1ac4c767d_Struct> _1ac8cc984_RuntimeFindStruct(jule::Ptr<_1ac557cd5_ImportInfo>* _3327_runtime, jule::Str _3349_ident);
inline void _1ad291b3e_pushPasses(jule::Ptr<_1ac55ac0b_Package>* _12220_p, jule::Slice<jule::Str>* _12244_passes);
inline jule::Slice<jule::Str> _1ad292007_getAllUniquePasses(jule::Ptr<_1ac55ac0b_Package>* _13928_pkg, jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>> _13953_uses);
inline _1ac97ac41_CompileInfo _1ad292216_buildCompileInfo(void);
inline void _1ad2924be_pushRuntimeToAST(jule::Ptr<_1ac4a4869_AST>* _17826_f);
inline void _1ad292b1d_IterPackages(jule::Ptr<_1ad29028b_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1ac55ac0b_Package>*> _731_f);
inline void _1ad292e4d_IterFiles(jule::Ptr<_1ac55ac0b_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1ac604d93_SymbolTable>*> _1634_f);
inline void _1ad2932e4_iterTraitInheritMethods(jule::Ptr<_1ac5008a4_Trait>* _2233_base, jule::Ptr<_1ac5008a4_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1ac4dbd46_Fn>*> _2263_f);
inline void _1ad293712_iterTraitInheritMethods1(jule::Ptr<_1ac5008a4_Trait>* _3134_base, jule::Ptr<_1ac5008a4_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1ac4dbd46_Fn>*> _3164_f);
inline void _1ad2939ba_IterTraitMethods(jule::Ptr<_1ac5008a4_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1ac4dbd46_Fn>*> _3937_f);
inline jule::Bool _1ad295c53_IsForwarded(jule::Ptr<_1ac534ec1_Scope>* _2417_s);
inline jule::Bool _1ad296061_IsExprComesFromBind(jule::Ptr<_1ac60a55d_Data>* _4025_d);
inline jule::Bool _1ad29632a_IsAny(jule::Ptr<_1ac63d2d8_TypeKind>* _5215_t);
inline jule::Bool _1ad29666b_IsClosure(jule::Ptr<_1ac4d2611_AnonFnExprModel>* _6115_m);
inline jule::Bool _1ad296902_IsOpMethod(jule::Ptr<_1ac4dbd46_Fn>* _6416_m);
inline jule::Bool _1ad296c76_IsTraitMethod(jule::Ptr<_1ac4ca4d8_StructIns>* _8023_owner, jule::Ptr<_1ac4dee04_FnIns>* _8043_f);
inline jule::Bool _1ad2970ea_IsStdPackage(jule::Str _9417_f, jule::Str _9425_p);
inline jule::Ptr<_1ac4a5b9a_Directive> _1ad2980eb_FindDirective(jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1ad2984b4_HasDirective(jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::Bool _1ad298838_ContainsTraitMethod(jule::Ptr<_1ac5008a4_Trait>* _2629_t, jule::Str* _2641_ident);
inline jule::I64 _1ad298eed_FindTraitTypeOffsetS(jule::Ptr<_1ac5008a4_Trait> _3925_t, jule::Ptr<_1ac4ca4d8_StructIns> _3940_s);
inline jule::I64 _1ad299372_FindTraitTypeOffset(jule::Ptr<_1ac5008a4_Trait> _6224_t, jule::Ptr<_1ac63d2d8_TypeKind> _6239_k);
inline jule::Ptr<_1ac4dee04_FnIns> _1ad2997a1_FindOperator(jule::Ptr<_1ac4ca4d8_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary);
inline jule::Ptr<_1ac4dee04_FnIns> _1ad299b25_FindFnGenericInstance(jule::Ptr<_1ac4dbd46_Fn>* _14731_f, jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _14739_generics);
inline jule::Ptr<_1ac4ca4d8_StructIns> _1ad29a0a9_FindStructGenericInstance(jule::Ptr<_1ac4c767d_Struct>* _16335_s, jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _16347_generics);
inline jule::Bool _1b44d02e9_isOrdered(jule::Ptr<_1ac5a2527_Var>* _1418_t, jule::Slice<jule::Ptr<_1ac5a2527_Var>> _1425_s);
inline jule::Bool _1b44d6069_isOrdered(jule::Ptr<_1ac4c767d_Struct>* _1418_t, jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _1425_s);
inline void _1b44cc923_order(jule::Slice<jule::Ptr<_1ac5a2527_Var>> _3717_s);
inline void _1b44cd506_order(jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _3717_s);
inline void _1ad3d8abb_EliminateDefines(jule::Ptr<_1ad29028b_IR>* _40226_ir);
inline void _1ad3dca37_eliminateDeadCodeOfScope(jule::Ptr<_1ac534ec1_Scope> _23833_s);
inline void _1ad3dccac_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>* _25033_funcs);
inline void _1ad3dcedd_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1ac4c767d_Struct>>* _25937_structs);
inline void _1ad3dd296_eliminateFunctionsScopePackage(jule::Ptr<_1ac55ac0b_Package>* _26740_pkg);
inline void _1ad3dd494_eliminateScopePackage(jule::Ptr<_1ac55ac0b_Package>* _27431_pkg);
inline void _1ad3dd6c5_EliminateScopes(jule::Ptr<_1ad29028b_IR>* _27925_ir);
inline jule::Uintptr _1ac7362b0_typeData(jule::Any* _1714_m);
inline jule::Bool _1ac736678_equalConst(jule::Ptr<_1aa1293c0_Const> _2115_l, jule::Ptr<_1aa1293c0_Const> _2126_r);
inline jule::Bool _1ac7369ec_equalCasting(jule::Ptr<_1ac4d0e28_CastingExprModel> _4017_l, jule::Ptr<_1ac4d0e28_CastingExprModel> _4039_r);
inline jule::Bool _1ac736db5_equalUnary(jule::Ptr<_1ac4cebc4_UnaryExprModel> _4715_l, jule::Ptr<_1ac4cebc4_UnaryExprModel> _4735_r);
inline jule::Bool _1ac737239_equalIndexing(jule::Ptr<_1ac4d215a_IndexingExprModel> _5418_l, jule::Ptr<_1ac4d215a_IndexingExprModel> _5441_r);
inline jule::Bool _1ac7375ad_equalBinary(jule::Ptr<_1ac4ce7ea_BinaryExprModel> _5916_l, jule::Ptr<_1ac4ce7ea_BinaryExprModel> _5937_r);
inline jule::Bool _1ac737932_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1ac73d54d_possibleNilRemove(jule::Ptr<_1ac73c56e_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1ac73d916_isGuaranteedNonNilExpr(jule::Ptr<_1ac73c56e_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1ac73dbd0_isNilValidType(jule::Ptr<_1ac63d2d8_TypeKind> _9223_t);
inline jule::Uintptr _1ac73e021_getNilVar(jule::Any _9414_m);
inline jule::Bool _1ad2a1a61_isConstantValidConditionalCase(jule::Ptr<_1ac5353de_If>* _68736_i);
inline jule::Bool _1ad2a1d6e_isUnreachableExpr(jule::Any* _69623_expr);
inline jule::Bool _1ad2a2138_isConstantValidMatchCase(jule::Ptr<_1ac53a229_Case>* _71130_case);
inline jule::Bool _1ad2a2479_isUnreachableConditionalCase(jule::Ptr<_1ac5353de_If>* _72034_i);
inline jule::Bool _1ad2a2710_isUnreachableMatchCase(jule::Ptr<_1ac53a229_Case>* _72428_case);
inline __jule_tuple_bool__jule_tuple_u64 _1ad2a7bdd_checkForBitShiftOpt(jule::Ptr<_1ac4ce300_OperandExprModel>* _59625_l, jule::Ptr<_1ac4ce300_OperandExprModel>* _59648_r);
inline jule::Bool _1ad2a80a6_areSameLvalueExprModel(jule::Any* _61328_l, jule::Any* _61343_r);
inline void _1ad2aa273_possibleDynamicRemove(jule::Ptr<_1ad2a91d9_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1ad2aa581_isDynamicValidType(jule::Ptr<_1ac63d2d8_TypeKind> _8727_t);
inline jule::Ptr<_1ac63d2d8_TypeKind> _1ad2aa9b0_isTypeGuaranteedDynamicData(jule::Ptr<_1ad2a91d9_dynamic>* _8937_dy, jule::Ptr<_1ac63d2d8_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1ad2aad01_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1ad2ae860_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1ad2aec28_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1ad2b009c_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1ad2b03cc_possibleBoundaryRemove(jule::Ptr<_1ad2ad7e8_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1ad2b0696_isBoundaryRiskyType(jule::Ptr<_1ac63d2d8_TypeKind> _13628_t);
inline jule::Bool _1ad2b0960_isBoundaryValidType(jule::Ptr<_1ac63d2d8_TypeKind> _14128_t);
inline jule::Uintptr _1ad2b0c29_getBoundaryVar(jule::Any _14319_m);
inline void _1ad2b3ca4_PushOptLevel(jule::I64 _3217_level);
inline void _1ad3e1dc1_detectEnabled(void);
inline void _1ad41902a_Throw(jule::Str _910_msg);
inline jule::U64 _1ae08537c_unix(void);
inline jule::Bool _1adeb2e25_isCopyOptimizable(jule::Ptr<_1ac60a55d_Data>* _119123_expr);
inline jule::Bool _1adeb32dd_isIterCopyOptimizable(jule::Ptr<_1ac60a55d_Data>* _120227_expr, jule::Ptr<_1ac5a2527_Var>* _120241_v);
inline jule::Bool _1adeb371c_captureVarHandling(jule::Ptr<_1ae08ee9c_ObjectCoder>* _120928_oc, jule::Ptr<_1ac4d2611_AnonFnExprModel>* _120951_m, jule::Ptr<_1ac5a2527_Var>* _120977_v);
inline jule::Str _1adec6048_decomposeCommonEsq(jule::U8 _197423_b);
inline jule::Str _1adec6356_sbtoa(jule::U8 _200110_b);
inline void _1adec6642_cstrBytes(_1b097ade7_StrBuilder* _202119_s, jule::Str _202134_ctx);
inline void _1adec6972_cstrLit(_1b097ade7_StrBuilder* _202717_s, jule::Str _202732_ctx);
inline void _1adec6d18_ftoa(_1b097ade7_StrBuilder* _203314_s, jule::F64 _203329_f, jule::I64 _203337_bitsize);
inline void _1adec7104_itoa(_1b097ade7_StrBuilder* _205114_s, jule::I64 _205129_x);
inline void _1adec73e0_utoa(_1b097ade7_StrBuilder* _206814_s, jule::U64 _206829_x);
inline void _1adec7a3e_operatorOverloadingBinary(_1b097ade7_StrBuilder* _208235_buf, jule::Ptr<_1ac4ca4d8_StructIns>* _208257_s, jule::Str* _208273_l, jule::Str* _20833_r, jule::U64 _208311_op, jule::Str _208324_kind);
inline jule::Slice<jule::U8> _1ae09c7e5_concatAllParts(jule::Slice<jule::Ptr<_1ac4912c3_Token>> _140919_parts);
inline jule::Bool _1ae09cb03_isHeadDecl(jule::Ptr<_1ac4dbd46_Fn>* _142520_m);
inline jule::Bool _1ae09cdbc_defaultEq(jule::Ptr<_1ac4ca4d8_StructIns>* _143815_s);
inline jule::Bool _1ae0ac085_ableToInit(jule::Ptr<_1ac63d2d8_TypeKind>* _46820_t);
inline jule::Bool _1ae0ac360_shouldInitialized(jule::Ptr<_1ac63d2d8_TypeKind>* _47527_t);
inline void _1b03a2b60_printErrorMessage(jule::Str _3022_msg);
inline void _1b03a2dd5_help(jule::Slice<jule::Str>* _3510_args);
inline void _1b03a3116_version(jule::Slice<jule::Str>* _6313_args);
inline void _1b03a3325_toolDistos(void);
inline void _1b03a348a_toolDistarch(void);
inline void _1b03a3688_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1b03a38b9_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1b03a3c0a_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1b03a3e4c_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1b03a40e5_showInfo(void);
void entry_point(void);
inline void _1add293b8_init(void);
inline jule::Ptr<_1ae66c623_File> _1add29682_openOutput(jule::Str* _4316_path);
inline void _1add2982a_clearObjects(void);
inline void _1add29b38_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1add29e02_isCppSourceFile(jule::Str _9920_path);
inline void _1add2a133_pushCompCmdClang(_1b097ade7_StrBuilder* _10726_cmd);
inline void _1add2a364_pushCompCmdGcc(_1b097ade7_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1add2a7e8_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1ad29028b_IR>* _15936_ir);
inline jule::Str _1add2a980_getCompilePath(void);
inline void _1add2abb1_applyTargetIndependentOptimizations(jule::Ptr<_1ad29028b_IR>* _20545_ir);
inline void _1add2ad59_checkCompilerFlag(void);
inline void _1add2b068_checkTargetArch(jule::Str _22720_arch);
inline void _1add2b299_checkTargetOs(jule::Str _23518_os);
inline void _1add2b4ca_checkTargetFlag(jule::Str* _24321_target);
inline void _1add2b70b_checkOptFlag(jule::Str* _26618_opt);
inline void _1add2bac4_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1add2bc8e_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1add2be9d_setupSemaFlags(jule::I64* _33724_flags);
inline jule::Ptr<_1ad29028b_IR> _1add2c267_buildIr(jule::Slice<jule::Str>* _34313_args);
inline void _1add2c498_compileCommand(jule::Slice<jule::Str>* _38324_args);


struct _1ac506ec6_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1ac50635a_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac60a55d_Data>* _1426_d, jule::I64 _1436_i);
	void(*_1ac5066bd_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac5a2527_Var>* _1526_keyA, jule::Ptr<_1ac5a2527_Var>* _1543_keyB);
	void(*_1ac506adb_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ac5a2527_Var>* _1633_keyA, jule::Ptr<_1ac5a2527_Var>* _1650_keyB);
	jule::I64(*_1ac506d72_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1ac554a4b_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1ac55382a_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1ac553ab1_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1ac553e02_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1ac557cd5_ImportInfo>(*_1ac554243_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log(*_1ac55463e_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod);
	void(*_1ac5548e7_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac557cd5_ImportInfo> _4128__0);
};

struct _1ac63cd32_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1ac63c88c_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1ac63cbcd_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other);
};

struct _1ac65d98a_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1ac557cd5_ImportInfo>(*_1ac65bc74_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _929_selector);
	jule::Ptr<_1ac5a2527_Var>(*_1ac65c170_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1ac63c4e6_TypeAlias>(*_1ac65c56b_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1ac4c767d_Struct>(*_1ac65c967_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1ac4dbd46_Fn>(*_1ac65cd63_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1ac5008a4_Trait>(*_1ac65d1a4_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1ac5030b0_Enum>(*_1ac65d4e5_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1ac5047ba_TypeEnum>(*_1ac65d836_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1add2202b_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1adce0b98_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1adce0dc9_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1add21bc9_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1add21dc7_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5094e5_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac50c729_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5104a7_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac513d18_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac515677_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac520e57_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5244ee_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad28c8e8_JuleImporter>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ca4d8_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4dee04_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5008a4_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5030b0_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5047ba_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5071e6_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac507c52_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac50ae75_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac50e198_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac511eae_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5170e6_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac51d1eb_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5228c6_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5267dc_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac63d2d8_TypeKind>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac646401_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac649e2c_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac64a900_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac64b4e4_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac64c094_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac64cc21_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac64d6e4_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ae09e396_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac53c25e_scopeChecker>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac557cd5_ImportInfo>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac55ac0b_Package>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac578256_sema>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac604d93_SymbolTable>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b55eb8cb_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b560056c_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b5603c79_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b56074ca_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b560abd7_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5a2527_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4c33e3_Impl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4bd29a_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4c2546_StructDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b843d_FnDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4c2c83_TraitDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b95e8_VarDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4c08eb_EnumDecl>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4c1886_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4c4757_Field>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa1293c0_Const>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac502543_EnumItem>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4da372_Param>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4c767d_Struct>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4dbd46_Fn>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac63c4e6_TypeAlias>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac537a1d_Label>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac534ec1_Scope>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d7a45_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac60a55d_Data>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d8a57_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d67be_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d52b2_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d568b_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d5e3e_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d766b_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d7292_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d8d54_FreeExprModel>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d17ca_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac535b09_Conditional>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac535e06_InfIter>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4baa6c_WhileKind>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac5363ac_WhileIter>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4bb474_RangeKind>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac536d08_RangeIter>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac53718d_ContSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac53817d_GotoSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac538557_Postfix>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac538a0d_Assign>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ac3cc_IdentExpr>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d215a_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac538eb4_MultiAssign>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac539701_Match>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac53a922_FallSt>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac537567_BreakSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac53acb8_RetSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b679e_ScopeTree>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4aaab2_Expr>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4bca5d_Conditional>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ba242_Iter>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4bbc27_ContSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b3d62_LabelSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b423b_GotoSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b522b_AssignSt>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4be06a_MatchCase>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b4538_FallSt>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4bb84d_BreakSt>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b99c2_RetSt>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ab486_UseExpr>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4a8a49_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4a7bad_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4a82a7_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4a7828_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4a9297_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4a7eaa_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4a6d88_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ad048_VariadicExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d1ba4_SliceExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b02d1_FieldExprPair>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b18dc_KeyValPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ab6a6_TupleExpr>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d4dd8_TupleExprModel>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ae7db_FnCallExpr>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d86d3_RuneExprModel>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d4adb_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4adbc5_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4a7152_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4acb6e_UnaryExpr>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4a677d_TypeDecl>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ad7eb_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4a752b_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d3447_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d0e28_CastingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b2118_SliceExpr>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d0598_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d4712_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d39ca_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d436b_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d2db4_MapExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d2611_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4aad7b_RangeExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4aba4c_LitExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4abe26_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b2a75_IndexingExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b31d5_SlicingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ad422_CastExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b0b0b_StructLit>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4b10b2_BraceLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ae17b_BinaryExpr>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4cebc4_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4ce7ea_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d0895_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d5a65_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d63e5_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d6abb_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d6db8_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d7d42_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d84e6_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac738559_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac73ae52_StrRuneIter>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac739b43_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac73a69e_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac73aa78_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7388de_SwapExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac738cb8_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac7395b0_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac739e40_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac73b24e_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac73913c_RefExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac4d0202_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac73b54b_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac73a2c5_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1b2b424c9_1b3278747(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac60a55d_Data>* _1426_d, jule::I64 _1436_i) {
	_1ac50a4e6_index(_self_.as<_1ac5094e5_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b2b424c9_1b3297018(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac60a55d_Data>* _1426_d, jule::I64 _1436_i) {
	_1ac50d719_index(_self_.as<_1ac50c729_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b2b424c9_1b327ea7d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac60a55d_Data>* _1426_d, jule::I64 _1436_i) {
	_1ac511530_index(_self_.as<_1ac5104a7_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b2b424c9_1b3285589(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac60a55d_Data>* _1426_d, jule::I64 _1436_i) {
	_1ac514be8_index(_self_.as<_1ac513d18_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b2b424c9_1b3293740(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac60a55d_Data>* _1426_d, jule::I64 _1436_i) {
	_1ac516667_index(_self_.as<_1ac515677_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b2b424c9_1b2b20e69(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac60a55d_Data>* _1426_d, jule::I64 _1436_i) {
	_1ac521e47_index(_self_.as<_1ac520e57_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b2b424c9_1b2b192b4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac60a55d_Data>* _1426_d, jule::I64 _1436_i) {
	_1ac525610_index(_self_.as<_1ac5244ee_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1b2b429e6_1b3278747(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac5a2527_Var>* _1526_keyA, jule::Ptr<_1ac5a2527_Var>* _1543_keyB) {
	_1ac50a183_ready(_self_.as<_1ac5094e5_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b2b429e6_1b3297018(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac5a2527_Var>* _1526_keyA, jule::Ptr<_1ac5a2527_Var>* _1543_keyB) {
	_1ac50d3a6_ready(_self_.as<_1ac50c729_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b2b429e6_1b327ea7d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac5a2527_Var>* _1526_keyA, jule::Ptr<_1ac5a2527_Var>* _1543_keyB) {
	_1ac5111bc_ready(_self_.as<_1ac5104a7_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b2b429e6_1b3285589(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac5a2527_Var>* _1526_keyA, jule::Ptr<_1ac5a2527_Var>* _1543_keyB) {
	_1ac514885_ready(_self_.as<_1ac513d18_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b2b429e6_1b3293740(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac5a2527_Var>* _1526_keyA, jule::Ptr<_1ac5a2527_Var>* _1543_keyB) {
	_1ac516304_ready(_self_.as<_1ac515677_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b2b429e6_1b2b20e69(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac5a2527_Var>* _1526_keyA, jule::Ptr<_1ac5a2527_Var>* _1543_keyB) {
	_1ac521ad4_ready(_self_.as<_1ac520e57_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b2b429e6_1b2b192b4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac5a2527_Var>* _1526_keyA, jule::Ptr<_1ac5a2527_Var>* _1543_keyB) {
	_1ac52529c_ready(_self_.as<_1ac5244ee_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1b2b431bc_1b3278747(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ac5a2527_Var>* _1633_keyA, jule::Ptr<_1ac5a2527_Var>* _1650_keyB) {
	_1ac50a914_step(_self_.as<_1ac5094e5_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b2b431bc_1b3297018(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ac5a2527_Var>* _1633_keyA, jule::Ptr<_1ac5a2527_Var>* _1650_keyB) {
	_1ac50db37_step(_self_.as<_1ac50c729_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b2b431bc_1b327ea7d(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ac5a2527_Var>* _1633_keyA, jule::Ptr<_1ac5a2527_Var>* _1650_keyB) {
	_1ac51194d_step(_self_.as<_1ac5104a7_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b2b431bc_1b3285589(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ac5a2527_Var>* _1633_keyA, jule::Ptr<_1ac5a2527_Var>* _1650_keyB) {
	_1ac515116_step(_self_.as<_1ac513d18_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b2b431bc_1b3293740(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ac5a2527_Var>* _1633_keyA, jule::Ptr<_1ac5a2527_Var>* _1650_keyB) {
	_1ac516a85_step(_self_.as<_1ac515677_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b2b431bc_1b2b20e69(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ac5a2527_Var>* _1633_keyA, jule::Ptr<_1ac5a2527_Var>* _1650_keyB) {
	_1ac522365_step(_self_.as<_1ac520e57_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1b2b431bc_1b2b192b4(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ac5a2527_Var>* _1633_keyA, jule::Ptr<_1ac5a2527_Var>* _1650_keyB) {
	_1ac525a2d_step(_self_.as<_1ac5244ee_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I64 __jule_trait_method_1b2b438a4_1b3278747(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac50ab9a_len(_self_.as<_1ac5094e5_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1b2b438a4_1b3297018(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac50ddbd_len(_self_.as<_1ac50c729_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1b2b438a4_1b327ea7d(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac511bd4_len(_self_.as<_1ac5104a7_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1b2b438a4_1b3285589(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac51539c_len(_self_.as<_1ac513d18_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1b2b438a4_1b3293740(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac516d1b_len(_self_.as<_1ac515677_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1b2b438a4_1b2b20e69(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac5225eb_len(_self_.as<_1ac520e57_comptimeFiles>().alloc);
}
inline jule::I64 __jule_trait_method_1b2b438a4_1b2b192b4(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac525cb4_len(_self_.as<_1ac5244ee_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1b2b43be5_1b445be02(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1ad28d4ed_SetModPath(_self_.as<_1ad28c8e8_JuleImporter>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1b2b44146_1b445be02(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad28d784_GetModPath(_self_.as<_1ad28c8e8_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1b2b44553_1b445be02(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1ad28dac5_ModById(_self_.as<_1ad28c8e8_JuleImporter>().alloc, _2519_id);
}
inline jule::Ptr<_1ac557cd5_ImportInfo> __jule_trait_method_1b2b44a1a_1b445be02(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1ad28de16_GetImport(_self_.as<_1ad28c8e8_JuleImporter>().alloc, _3125_path);
}
inline __jule_tuple_sx_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log __jule_trait_method_1b2b45125_1b445be02(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod) {
	return _1ad28e312_ImportPackage(_self_.as<_1ad28c8e8_JuleImporter>().alloc, _3729_path, _3740_update_mod);
}
inline void __jule_trait_method_1b2b45972_1b445be02(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac557cd5_ImportInfo> _4128__0) {
	_1ad28e5ba_Imported(_self_.as<_1ad28c8e8_JuleImporter>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b315935e(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac4ca890_Str(_self_.as<_1ac4ca4d8_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b31586d2(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac4e0278_Str(_self_.as<_1ac4dee04_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3171ca0(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac500ca0_Str(_self_.as<_1ac5008a4_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b314a680(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac503467_Str(_self_.as<_1ac5030b0_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b31527a8(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac504b3e_Str(_self_.as<_1ac5047ba_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3292057(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac5075e2_Str(_self_.as<_1ac5071e6_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b327ba14(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac508109_Str(_self_.as<_1ac507c52_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3278747(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac5098ad_Str(_self_.as<_1ac5094e5_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b329a2d5(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac50b32c_Str(_self_.as<_1ac50ae75_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3297018(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac50cad1_Str(_self_.as<_1ac50c729_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3282d4a(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac50e550_Str(_self_.as<_1ac50e198_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b327ea7d(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac51096e_Str(_self_.as<_1ac5104a7_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b328d729(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac512366_Str(_self_.as<_1ac511eae_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3285589(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac5140b0_Str(_self_.as<_1ac513d18_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3293740(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac515a2e_Str(_self_.as<_1ac515677_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3184433(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac51749d_Str(_self_.as<_1ac5170e6_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b329d34e(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac51d5a3_Str(_self_.as<_1ac51d1eb_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b2b20e69(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac52130e_Str(_self_.as<_1ac520e57_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b2b1c5a3(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac522c7d_Str(_self_.as<_1ac5228c6_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b2b192b4(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac524ad7_Str(_self_.as<_1ac5244ee_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b2b10ee2(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac526b94_Str(_self_.as<_1ac5267dc_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b313b50b(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac63d6d4_Str(_self_.as<_1ac63d2d8_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b314082e(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac646775_Str(_self_.as<_1ac646401_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b314713d(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac64a2d4_Str(_self_.as<_1ac649e2c_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3156d51(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac64adb7_Str(_self_.as<_1ac64a900_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b31beda8(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac64b89b_Str(_self_.as<_1ac64b4e4_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b31bd33a(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac64c44b_Str(_self_.as<_1ac64c094_Map>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3155404(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac64d0c8_Str(_self_.as<_1ac64cc21_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b3148903(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac64da9b_Str(_self_.as<_1ac64d6e4_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1b2b45ee4_1b4e37602(jule::Ptr<jule::Uintptr> _self_) {
	return _1ae09e792_Str(_self_.as<_1ae09e396_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b315935e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac4cabd1_Equal(_self_.as<_1ac4ca4d8_StructIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b31586d2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac4e05b9_Equal(_self_.as<_1ac4dee04_FnIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3171ca0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac5010e1_Equal(_self_.as<_1ac5008a4_Trait>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b314a680(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac5037a8_Equal(_self_.as<_1ac5030b0_Enum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b31527a8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac504e80_Equal(_self_.as<_1ac5047ba_TypeEnum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3292057(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac507933_Equal(_self_.as<_1ac5071e6_comptimeRange>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b327ba14(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac50844a_Equal(_self_.as<_1ac507c52_comptimeStructField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3278747(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac509bee_Equal(_self_.as<_1ac5094e5_comptimeStructFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b329a2d5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac50b66d_Equal(_self_.as<_1ac50ae75_comptimeStatic>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3297018(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac50ce22_Equal(_self_.as<_1ac50c729_comptimeStatics>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3282d4a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac50e891_Equal(_self_.as<_1ac50e198_comptimeEnumField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b327ea7d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac510cb0_Equal(_self_.as<_1ac5104a7_comptimeEnumFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b328d729(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac5126a7_Equal(_self_.as<_1ac511eae_comptimeParam>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3285589(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac514401_Equal(_self_.as<_1ac513d18_comptimeParams>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3293740(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac515d70_Equal(_self_.as<_1ac515677_comptimeTypeInfos>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3184433(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac5177de_Equal(_self_.as<_1ac5170e6_comptimeTypeInfo>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b329d34e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac51d8e4_Equal(_self_.as<_1ac51d1eb_comptimeValue>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b2b20e69(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac521650_Equal(_self_.as<_1ac520e57_comptimeFiles>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b2b1c5a3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac5230be_Equal(_self_.as<_1ac5228c6_comptimeFile>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b2b192b4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac524e28_Equal(_self_.as<_1ac5244ee_comptimeDecls>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b2b10ee2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac526ed5_Equal(_self_.as<_1ac5267dc_comptimeDecl>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b313b50b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac63da25_Equal(_self_.as<_1ac63d2d8_TypeKind>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b314082e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac646ab6_Equal(_self_.as<_1ac646401_Prim>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b314713d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac64a625_Equal(_self_.as<_1ac649e2c_Sptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3156d51(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac64b208_Equal(_self_.as<_1ac64a900_Slc>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b31beda8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac64bbdc_Equal(_self_.as<_1ac64b4e4_Tuple>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b31bd33a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac64c78c_Equal(_self_.as<_1ac64c094_Map>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3155404(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac64d419_Equal(_self_.as<_1ac64cc21_Arr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b3148903(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ac64dddc_Equal(_self_.as<_1ac64d6e4_Ptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1b2b46368_1b4e37602(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _5618_other) {
	return _1ae09ead3_Equal(_self_.as<_1ae09e396_customType>(), _5618_other);
}
inline jule::Ptr<_1ac557cd5_ImportInfo> __jule_trait_method_1b2b468da_1b3232e3d(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _929_selector) {
	return _1ac53c737_SelectPackage(_self_.as<_1ac53c25e_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1ac557cd5_ImportInfo> __jule_trait_method_1b2b468da_1b315ccd0(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _929_selector) {
	return _1ac558302_SelectPackage(_self_.as<_1ac557cd5_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1ac557cd5_ImportInfo> __jule_trait_method_1b2b468da_1b315de79(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _929_selector) {
	return _1ac55b1d4_SelectPackage(_self_.as<_1ac55ac0b_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1ac557cd5_ImportInfo> __jule_trait_method_1b2b468da_1b315ab79(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _929_selector) {
	return _1ac57872e_SelectPackage(_self_.as<_1ac578256_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1ac557cd5_ImportInfo> __jule_trait_method_1b2b468da_1b315b66e(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _929_selector) {
	return _1ac6053b0_SelectPackage(_self_.as<_1ac604d93_SymbolTable>().alloc, _929_selector);
}
inline jule::Ptr<_1ac5a2527_Var> __jule_trait_method_1b2b47765_1b3232e3d(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ac53cb33_FindVar(_self_.as<_1ac53c25e_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ac5a2527_Var> __jule_trait_method_1b2b47765_1b315ccd0(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ac5586ed_FindVar(_self_.as<_1ac557cd5_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ac5a2527_Var> __jule_trait_method_1b2b47765_1b315de79(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ac55b5d0_FindVar(_self_.as<_1ac55ac0b_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ac5a2527_Var> __jule_trait_method_1b2b47765_1b315ab79(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ac578b2a_FindVar(_self_.as<_1ac578256_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ac5a2527_Var> __jule_trait_method_1b2b47765_1b315b66e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ac6057ab_FindVar(_self_.as<_1ac604d93_SymbolTable>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ac63c4e6_TypeAlias> __jule_trait_method_1b2b47d3c_1b3232e3d(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ac53d02e_FindTypeAlias(_self_.as<_1ac53c25e_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ac63c4e6_TypeAlias> __jule_trait_method_1b2b47d3c_1b315ccd0(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ac558ae9_FindTypeAlias(_self_.as<_1ac557cd5_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ac63c4e6_TypeAlias> __jule_trait_method_1b2b47d3c_1b315de79(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ac55b9cb_FindTypeAlias(_self_.as<_1ac55ac0b_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ac63c4e6_TypeAlias> __jule_trait_method_1b2b47d3c_1b315ab79(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ac579026_FindTypeAlias(_self_.as<_1ac578256_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ac63c4e6_TypeAlias> __jule_trait_method_1b2b47d3c_1b315b66e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ac605ba7_FindTypeAlias(_self_.as<_1ac604d93_SymbolTable>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ac4c767d_Struct> __jule_trait_method_1b2b48447_1b3232e3d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ac53d42a_FindStruct(_self_.as<_1ac53c25e_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ac4c767d_Struct> __jule_trait_method_1b2b48447_1b315ccd0(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ac558ee5_FindStruct(_self_.as<_1ac557cd5_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ac4c767d_Struct> __jule_trait_method_1b2b48447_1b315de79(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ac55bdc7_FindStruct(_self_.as<_1ac55ac0b_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ac4c767d_Struct> __jule_trait_method_1b2b48447_1b315ab79(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ac579422_FindStruct(_self_.as<_1ac578256_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ac4c767d_Struct> __jule_trait_method_1b2b48447_1b315b66e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ac6060a3_FindStruct(_self_.as<_1ac604d93_SymbolTable>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ac4dbd46_Fn> __jule_trait_method_1b2b48a52_1b3232e3d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ac53d826_FindFn(_self_.as<_1ac53c25e_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ac4dbd46_Fn> __jule_trait_method_1b2b48a52_1b315ccd0(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ac5593e1_FindFn(_self_.as<_1ac557cd5_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ac4dbd46_Fn> __jule_trait_method_1b2b48a52_1b315de79(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ac55c2c3_FindFn(_self_.as<_1ac55ac0b_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ac4dbd46_Fn> __jule_trait_method_1b2b48a52_1b315ab79(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ac57981d_FindFn(_self_.as<_1ac578256_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ac4dbd46_Fn> __jule_trait_method_1b2b48a52_1b315b66e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ac60649e_FindFn(_self_.as<_1ac604d93_SymbolTable>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ac5008a4_Trait> __jule_trait_method_1b2b4915c_1b3232e3d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ac53db67_FindTrait(_self_.as<_1ac53c25e_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1ac5008a4_Trait> __jule_trait_method_1b2b4915c_1b315ccd0(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ac559732_FindTrait(_self_.as<_1ac557cd5_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1ac5008a4_Trait> __jule_trait_method_1b2b4915c_1b315de79(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ac55c614_FindTrait(_self_.as<_1ac55ac0b_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1ac5008a4_Trait> __jule_trait_method_1b2b4915c_1b315ab79(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ac579b5e_FindTrait(_self_.as<_1ac578256_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1ac5008a4_Trait> __jule_trait_method_1b2b4915c_1b315b66e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ac6067e0_FindTrait(_self_.as<_1ac604d93_SymbolTable>().alloc, _2925_ident);
}
inline jule::Ptr<_1ac5030b0_Enum> __jule_trait_method_1b2b496ac_1b3232e3d(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ac53dea8_FindEnum(_self_.as<_1ac53c25e_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1ac5030b0_Enum> __jule_trait_method_1b2b496ac_1b315ccd0(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ac559a73_FindEnum(_self_.as<_1ac557cd5_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1ac5030b0_Enum> __jule_trait_method_1b2b496ac_1b315de79(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ac55c955_FindEnum(_self_.as<_1ac55ac0b_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1ac5030b0_Enum> __jule_trait_method_1b2b496ac_1b315ab79(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ac579ea0_FindEnum(_self_.as<_1ac578256_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1ac5030b0_Enum> __jule_trait_method_1b2b496ac_1b315b66e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ac606b31_FindEnum(_self_.as<_1ac604d93_SymbolTable>().alloc, _3324_ident);
}
inline jule::Ptr<_1ac5047ba_TypeEnum> __jule_trait_method_1b2b49c0c_1b3232e3d(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ac53e2e9_FindTypeEnum(_self_.as<_1ac53c25e_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1ac5047ba_TypeEnum> __jule_trait_method_1b2b49c0c_1b315ccd0(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ac559db4_FindTypeEnum(_self_.as<_1ac557cd5_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1ac5047ba_TypeEnum> __jule_trait_method_1b2b49c0c_1b315de79(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ac55cc96_FindTypeEnum(_self_.as<_1ac55ac0b_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1ac5047ba_TypeEnum> __jule_trait_method_1b2b49c0c_1b315ab79(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ac57a2e1_FindTypeEnum(_self_.as<_1ac578256_sema>().alloc, _3728_ident);
}
inline jule::Ptr<_1ac5047ba_TypeEnum> __jule_trait_method_1b2b49c0c_1b315b66e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ac606e72_FindTypeEnum(_self_.as<_1ac604d93_SymbolTable>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1b560cc0b_1b55eb8cb(jule::Ptr<jule::Uintptr> _self_) {
	return _1b55ebd93_Name(_self_.as<_1b55eb8cb_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b560cc0b_1b560056c(jule::Ptr<jule::Uintptr> _self_) {
	return _1b56001e8_Name(_self_.as<_1b560056c_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b560cc0b_1b5603c79(jule::Ptr<jule::Uintptr> _self_) {
	return _1b5603905_Name(_self_.as<_1b5603c79_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b560cc0b_1b56074ca(jule::Ptr<jule::Uintptr> _self_) {
	return _1b5607156_Name(_self_.as<_1b56074ca_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b560cc0b_1b560abd7(jule::Ptr<jule::Uintptr> _self_) {
	return _1b560a863_Name(_self_.as<_1b560abd7_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b560cce9_1b55eb8cb(jule::Ptr<jule::Uintptr> _self_) {
	return _1b55ec2a0_Short(_self_.as<_1b55eb8cb_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b560cce9_1b560056c(jule::Ptr<jule::Uintptr> _self_) {
	return _1b5600ade_Short(_self_.as<_1b560056c_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b560cce9_1b5603c79(jule::Ptr<jule::Uintptr> _self_) {
	return _1b56042eb_Short(_self_.as<_1b5603c79_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b560cce9_1b56074ca(jule::Ptr<jule::Uintptr> _self_) {
	return _1b5607a4c_Short(_self_.as<_1b56074ca_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b560cce9_1b560abd7(jule::Ptr<jule::Uintptr> _self_) {
	return _1b560b259_Short(_self_.as<_1b560abd7_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b560e6be_1b55eb8cb(jule::Ptr<jule::Uintptr> _self_) {
	return _1b55ebee7_What(_self_.as<_1b55eb8cb_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b560e6be_1b560056c(jule::Ptr<jule::Uintptr> _self_) {
	return _1b5600858_What(_self_.as<_1b560056c_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b560e6be_1b5603c79(jule::Ptr<jule::Uintptr> _self_) {
	return _1b5604065_What(_self_.as<_1b5603c79_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b560e6be_1b56074ca(jule::Ptr<jule::Uintptr> _self_) {
	return _1b56077b6_What(_self_.as<_1b56074ca_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b560e6be_1b560abd7(jule::Ptr<jule::Uintptr> _self_) {
	return _1b560aec3_What(_self_.as<_1b560abd7_Flag>().alloc);
}
inline void __jule_trait_method_1b560eacb_1b55eb8cb(jule::Ptr<jule::Uintptr> _self_) {
	_1b55ec14b_Reset(_self_.as<_1b55eb8cb_Flag>().alloc);
}
inline void __jule_trait_method_1b560eacb_1b560056c(jule::Ptr<jule::Uintptr> _self_) {
	_1b560099b_Reset(_self_.as<_1b560056c_Flag>().alloc);
}
inline void __jule_trait_method_1b560eacb_1b5603c79(jule::Ptr<jule::Uintptr> _self_) {
	_1b56041a8_Reset(_self_.as<_1b5603c79_Flag>().alloc);
}
inline void __jule_trait_method_1b560eacb_1b56074ca(jule::Ptr<jule::Uintptr> _self_) {
	_1b5607909_Reset(_self_.as<_1b56074ca_Flag>().alloc);
}
inline void __jule_trait_method_1b560eacb_1b560abd7(jule::Ptr<jule::Uintptr> _self_) {
	_1b560b116_Reset(_self_.as<_1b560abd7_Flag>().alloc);
}


static _1ac506ec6_comptimeRangeKindMptrData _1ac506ec6_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1ac50635a_index=__jule_trait_method_1b2b424c9_1b3278747,
	._1ac5066bd_ready=__jule_trait_method_1b2b429e6_1b3278747,
	._1ac506adb_step=__jule_trait_method_1b2b431bc_1b3278747,
	._1ac506d72_len=__jule_trait_method_1b2b438a4_1b3278747,
};
static _1ac506ec6_comptimeRangeKindMptrData _1ac506ec6_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1ac50635a_index=__jule_trait_method_1b2b424c9_1b3297018,
	._1ac5066bd_ready=__jule_trait_method_1b2b429e6_1b3297018,
	._1ac506adb_step=__jule_trait_method_1b2b431bc_1b3297018,
	._1ac506d72_len=__jule_trait_method_1b2b438a4_1b3297018,
};
static _1ac506ec6_comptimeRangeKindMptrData _1ac506ec6_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1ac50635a_index=__jule_trait_method_1b2b424c9_1b327ea7d,
	._1ac5066bd_ready=__jule_trait_method_1b2b429e6_1b327ea7d,
	._1ac506adb_step=__jule_trait_method_1b2b431bc_1b327ea7d,
	._1ac506d72_len=__jule_trait_method_1b2b438a4_1b327ea7d,
};
static _1ac506ec6_comptimeRangeKindMptrData _1ac506ec6_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1ac50635a_index=__jule_trait_method_1b2b424c9_1b3285589,
	._1ac5066bd_ready=__jule_trait_method_1b2b429e6_1b3285589,
	._1ac506adb_step=__jule_trait_method_1b2b431bc_1b3285589,
	._1ac506d72_len=__jule_trait_method_1b2b438a4_1b3285589,
};
static _1ac506ec6_comptimeRangeKindMptrData _1ac506ec6_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1ac50635a_index=__jule_trait_method_1b2b424c9_1b3293740,
	._1ac5066bd_ready=__jule_trait_method_1b2b429e6_1b3293740,
	._1ac506adb_step=__jule_trait_method_1b2b431bc_1b3293740,
	._1ac506d72_len=__jule_trait_method_1b2b438a4_1b3293740,
};
static _1ac506ec6_comptimeRangeKindMptrData _1ac506ec6_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1ac50635a_index=__jule_trait_method_1b2b424c9_1b2b20e69,
	._1ac5066bd_ready=__jule_trait_method_1b2b429e6_1b2b20e69,
	._1ac506adb_step=__jule_trait_method_1b2b431bc_1b2b20e69,
	._1ac506d72_len=__jule_trait_method_1b2b438a4_1b2b20e69,
};
static _1ac506ec6_comptimeRangeKindMptrData _1ac506ec6_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1ac50635a_index=__jule_trait_method_1b2b424c9_1b2b192b4,
	._1ac5066bd_ready=__jule_trait_method_1b2b429e6_1b2b192b4,
	._1ac506adb_step=__jule_trait_method_1b2b431bc_1b2b192b4,
	._1ac506d72_len=__jule_trait_method_1b2b438a4_1b2b192b4,
};
static _1ac554a4b_ImporterMptrData _1ac554a4b_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1ac55382a_SetModPath=__jule_trait_method_1b2b43be5_1b445be02,
	._1ac553ab1_GetModPath=__jule_trait_method_1b2b44146_1b445be02,
	._1ac553e02_ModById=__jule_trait_method_1b2b44553_1b445be02,
	._1ac554243_GetImport=__jule_trait_method_1b2b44a1a_1b445be02,
	._1ac55463e_ImportPackage=__jule_trait_method_1b2b45125_1b445be02,
	._1ac5548e7_Imported=__jule_trait_method_1b2b45972_1b445be02,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b315935e,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b315935e,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b31586d2,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b31586d2,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3171ca0,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3171ca0,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b314a680,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b314a680,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b31527a8,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b31527a8,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3292057,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3292057,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b327ba14,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b327ba14,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3278747,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3278747,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b329a2d5,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b329a2d5,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3297018,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3297018,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3282d4a,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3282d4a,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b327ea7d,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b327ea7d,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b328d729,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b328d729,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3285589,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3285589,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3293740,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3293740,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3184433,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3184433,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b329d34e,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b329d34e,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b2b20e69,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b2b20e69,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b2b1c5a3,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b2b1c5a3,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b2b192b4,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b2b192b4,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b2b10ee2,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b2b10ee2,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b313b50b,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b313b50b,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b314082e,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b314082e,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b314713d,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b314713d,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3156d51,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3156d51,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b31beda8,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b31beda8,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b31bd33a,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b31bd33a,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3155404,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3155404,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b3148903,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b3148903,
};
static _1ac63cd32_KindMptrData _1ac63cd32_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1ac63c88c_Str=__jule_trait_method_1b2b45ee4_1b4e37602,
	._1ac63cbcd_Equal=__jule_trait_method_1b2b46368_1b4e37602,
};
static _1ac65d98a_LookupMptrData _1ac65d98a_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1ac65bc74_SelectPackage=__jule_trait_method_1b2b468da_1b3232e3d,
	._1ac65c170_FindVar=__jule_trait_method_1b2b47765_1b3232e3d,
	._1ac65c56b_FindTypeAlias=__jule_trait_method_1b2b47d3c_1b3232e3d,
	._1ac65c967_FindStruct=__jule_trait_method_1b2b48447_1b3232e3d,
	._1ac65cd63_FindFn=__jule_trait_method_1b2b48a52_1b3232e3d,
	._1ac65d1a4_FindTrait=__jule_trait_method_1b2b4915c_1b3232e3d,
	._1ac65d4e5_FindEnum=__jule_trait_method_1b2b496ac_1b3232e3d,
	._1ac65d836_FindTypeEnum=__jule_trait_method_1b2b49c0c_1b3232e3d,
};
static _1ac65d98a_LookupMptrData _1ac65d98a_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1ac65bc74_SelectPackage=__jule_trait_method_1b2b468da_1b315ccd0,
	._1ac65c170_FindVar=__jule_trait_method_1b2b47765_1b315ccd0,
	._1ac65c56b_FindTypeAlias=__jule_trait_method_1b2b47d3c_1b315ccd0,
	._1ac65c967_FindStruct=__jule_trait_method_1b2b48447_1b315ccd0,
	._1ac65cd63_FindFn=__jule_trait_method_1b2b48a52_1b315ccd0,
	._1ac65d1a4_FindTrait=__jule_trait_method_1b2b4915c_1b315ccd0,
	._1ac65d4e5_FindEnum=__jule_trait_method_1b2b496ac_1b315ccd0,
	._1ac65d836_FindTypeEnum=__jule_trait_method_1b2b49c0c_1b315ccd0,
};
static _1ac65d98a_LookupMptrData _1ac65d98a_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1ac65bc74_SelectPackage=__jule_trait_method_1b2b468da_1b315de79,
	._1ac65c170_FindVar=__jule_trait_method_1b2b47765_1b315de79,
	._1ac65c56b_FindTypeAlias=__jule_trait_method_1b2b47d3c_1b315de79,
	._1ac65c967_FindStruct=__jule_trait_method_1b2b48447_1b315de79,
	._1ac65cd63_FindFn=__jule_trait_method_1b2b48a52_1b315de79,
	._1ac65d1a4_FindTrait=__jule_trait_method_1b2b4915c_1b315de79,
	._1ac65d4e5_FindEnum=__jule_trait_method_1b2b496ac_1b315de79,
	._1ac65d836_FindTypeEnum=__jule_trait_method_1b2b49c0c_1b315de79,
};
static _1ac65d98a_LookupMptrData _1ac65d98a_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1ac65bc74_SelectPackage=__jule_trait_method_1b2b468da_1b315ab79,
	._1ac65c170_FindVar=__jule_trait_method_1b2b47765_1b315ab79,
	._1ac65c56b_FindTypeAlias=__jule_trait_method_1b2b47d3c_1b315ab79,
	._1ac65c967_FindStruct=__jule_trait_method_1b2b48447_1b315ab79,
	._1ac65cd63_FindFn=__jule_trait_method_1b2b48a52_1b315ab79,
	._1ac65d1a4_FindTrait=__jule_trait_method_1b2b4915c_1b315ab79,
	._1ac65d4e5_FindEnum=__jule_trait_method_1b2b496ac_1b315ab79,
	._1ac65d836_FindTypeEnum=__jule_trait_method_1b2b49c0c_1b315ab79,
};
static _1ac65d98a_LookupMptrData _1ac65d98a_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1ac65bc74_SelectPackage=__jule_trait_method_1b2b468da_1b315b66e,
	._1ac65c170_FindVar=__jule_trait_method_1b2b47765_1b315b66e,
	._1ac65c56b_FindTypeAlias=__jule_trait_method_1b2b47d3c_1b315b66e,
	._1ac65c967_FindStruct=__jule_trait_method_1b2b48447_1b315b66e,
	._1ac65cd63_FindFn=__jule_trait_method_1b2b48a52_1b315b66e,
	._1ac65d1a4_FindTrait=__jule_trait_method_1b2b4915c_1b315b66e,
	._1ac65d4e5_FindEnum=__jule_trait_method_1b2b496ac_1b315b66e,
	._1ac65d836_FindTypeEnum=__jule_trait_method_1b2b49c0c_1b315b66e,
};
static _1add2202b_CommonFlagMptrData _1add2202b_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1adce0b98_Name=__jule_trait_method_1b560cc0b_1b55eb8cb,
	._1adce0dc9_Short=__jule_trait_method_1b560cce9_1b55eb8cb,
	._1add21bc9_What=__jule_trait_method_1b560e6be_1b55eb8cb,
	._1add21dc7_Reset=__jule_trait_method_1b560eacb_1b55eb8cb,
};
static _1add2202b_CommonFlagMptrData _1add2202b_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1adce0b98_Name=__jule_trait_method_1b560cc0b_1b560056c,
	._1adce0dc9_Short=__jule_trait_method_1b560cce9_1b560056c,
	._1add21bc9_What=__jule_trait_method_1b560e6be_1b560056c,
	._1add21dc7_Reset=__jule_trait_method_1b560eacb_1b560056c,
};
static _1add2202b_CommonFlagMptrData _1add2202b_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1adce0b98_Name=__jule_trait_method_1b560cc0b_1b5603c79,
	._1adce0dc9_Short=__jule_trait_method_1b560cce9_1b5603c79,
	._1add21bc9_What=__jule_trait_method_1b560e6be_1b5603c79,
	._1add21dc7_Reset=__jule_trait_method_1b560eacb_1b5603c79,
};
static _1add2202b_CommonFlagMptrData _1add2202b_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1adce0b98_Name=__jule_trait_method_1b560cc0b_1b56074ca,
	._1adce0dc9_Short=__jule_trait_method_1b560cce9_1b56074ca,
	._1add21bc9_What=__jule_trait_method_1b560e6be_1b56074ca,
	._1add21dc7_Reset=__jule_trait_method_1b560eacb_1b56074ca,
};
static _1add2202b_CommonFlagMptrData _1add2202b_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1adce0b98_Name=__jule_trait_method_1b560cc0b_1b560abd7,
	._1adce0dc9_Short=__jule_trait_method_1b560cce9_1b560abd7,
	._1add21bc9_What=__jule_trait_method_1b560e6be_1b560abd7,
	._1add21dc7_Reset=__jule_trait_method_1b560eacb_1b560abd7,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1ae23ec0c_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1ac2b017a_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1ac2bc682_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1ac2aca6d_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1ac2a1c82_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1ac2c0dd3_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1ac2ac694_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1ac4dee04_FnIns> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1ac5a2527_Var> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1ac4ca4d8_StructIns> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1ac5008a4_Trait> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1ac4c33e3_Impl> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1ac4bd29a_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1ac4c2546_StructDecl> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1ac4b843d_FnDecl> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1ac4c2c83_TraitDecl> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1ac4b95e8_VarDecl> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1ac4c08eb_EnumDecl> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1ac4c1886_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1ac4c4757_Field> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1aa1293c0_Const> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1ac502543_EnumItem> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1ac4da372_Param> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1ac4c767d_Struct> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1ac5030b0_Enum> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1ac5047ba_TypeEnum> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1ac4dbd46_Fn> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1ac63c4e6_TypeAlias> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1ac537a1d_Label> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1ac534ec1_Scope> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1ac4d7a45_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1ac60a55d_Data> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1ac4d8a57_BackendEmitExprModel> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1ac4d67be_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1ac4d52b2_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1ac4d568b_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1ac4d5e3e_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1ac4d766b_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1ac4d7292_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1ac4d8d54_FreeExprModel> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1ac4d17ca_FnCallExprModel> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ac535b09_Conditional> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1ac535e06_InfIter> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1ac4baa6c_WhileKind> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1ac5363ac_WhileIter> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1ac4bb474_RangeKind> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1ac536d08_RangeIter> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1ac53718d_ContSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1ac53817d_GotoSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1ac538557_Postfix> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1ac538a0d_Assign> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1ac4ac3cc_IdentExpr> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1ac4d215a_IndexingExprModel> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1ac538eb4_MultiAssign> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1ac539701_Match> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1ac53a922_FallSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1ac537567_BreakSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1ac53acb8_RetSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1ac4b679e_ScopeTree> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1ac4aaab2_Expr> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1ac4bca5d_Conditional> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1ac4ba242_Iter> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1ac4bbc27_ContSt> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1ac4b3d62_LabelSt> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1ac4b423b_GotoSt> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1ac4b522b_AssignSt> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1ac4be06a_MatchCase> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1ac4b4538_FallSt> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1ac4bb84d_BreakSt> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1ac4b99c2_RetSt> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1ac4ab486_UseExpr> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1ac4a8a49_ArrTypeDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1ac4a7bad_SlcTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1ac4a82a7_PtrTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1ac4a7828_SptrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1ac4a9297_MapTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1ac4a7eaa_TupleTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1ac4a6d88_IdentTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1ac4ad048_VariadicExpr> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1ac4d1ba4_SliceExprModel> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1ac4b02d1_FieldExprPair> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1ac4b18dc_KeyValPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1ac4ab6a6_TupleExpr> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1ac4d4dd8_TupleExprModel> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1ac4ae7db_FnCallExpr> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1ac4d86d3_RuneExprModel> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1ac63d2d8_TypeKind> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1ac4d4adb_ArrayExprModel> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1ac4adbc5_SubIdentExpr> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1ac4a7152_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1ac4acb6e_UnaryExpr> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1ac4a677d_TypeDecl> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1ac4ad7eb_NsSelectionExpr> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1ac4a752b_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1ac4d3447_SlicingExprModel> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1ac4d0e28_CastingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1ac4b2118_SliceExpr> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1ac4d0598_StructLitExprModel> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1ac4d4712_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1ac4d39ca_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1ac4d436b_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1ac4d2db4_MapExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1ac4d2611_AnonFnExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1ac4aad7b_RangeExpr> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1ac4aba4c_LitExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1ac4abe26_UnsafeExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1ac4b2a75_IndexingExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1ac4b31d5_SlicingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1ac4ad422_CastExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1ac4b0b0b_StructLit> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1ac4b10b2_BraceLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1ac4ae17b_BinaryExpr> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1ac4cebc4_UnaryExprModel> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1ac4ce7ea_BinaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1ac4d0895_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1ac4d5a65_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1ac4d6abb_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1ac4d6db8_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1ac4d7d42_SizeofExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1ac4d84e6_AlignofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1ac738559_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1ac73ae52_StrRuneIter> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1ac739b43_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1ac73a69e_PushToSliceExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1ac73aa78_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1ac7388de_SwapExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1ac738cb8_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1ac7395b0_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1ac739e40_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1ac73b24e_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1ac73913c_RefExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1ac4d0202_StructArgExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1ac73b54b_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1ac73a2c5_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator45, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type136_to_str(void *alloc) noexcept { return _1ac2b58ab_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type137_to_str(void *alloc) noexcept { return _1ac2c0a5e_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type138_to_str(void *alloc) noexcept { return _1ac2a7282_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1ac2a4eb6_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1ac2b7ced_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1ac2ba240_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type141_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type141 && __jule_any_type141_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1b34285ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4ddc9e_ParamIns> _25021_p1, jule::Ptr<_1ac4ddc9e_ParamIns> _25036_p2);
struct __jule_anon_1b3482b2c_ctx{
	jule::Ptr<_1ac557cd5_ImportInfo> *_49828_pkg;
};
static void __jule_anon_1b3482b2c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3482b2c_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b3482b2c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac557cd5_ImportInfo> _49935_spkg);
struct __jule_anon_1b2983a24_ctx{
	jule::Ptr<_1ac507c52_comptimeStructField> _self_;
};
static void __jule_anon_1b2983a24_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2983a24_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2983a24(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _6521_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _6536_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b29859e3_ctx{
	jule::Ptr<_1ac507c52_comptimeStructField> _self_;
};
static void __jule_anon_1b29859e3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b29859e3_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b29859e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _7221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _7236_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b299c91c_ctx{
	jule::Ptr<_1ac50ae75_comptimeStatic> _self_;
};
static void __jule_anon_1b299c91c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b299c91c_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b299c91c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _17821_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _17836_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b299e897_ctx{
	jule::Ptr<_1ac50ae75_comptimeStatic> _self_;
};
static void __jule_anon_1b299e897_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b299e897_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b299e897(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _18521_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _18536_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b29b0d2b_ctx{
	jule::Ptr<_1ac50e198_comptimeEnumField> _self_;
};
static void __jule_anon_1b29b0d2b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b29b0d2b_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b29b0d2b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _28321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _28336_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b29c767d_ctx{
	jule::Ptr<_1ac511eae_comptimeParam> _self_;
};
static void __jule_anon_1b29c767d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b29c767d_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b29c767d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _40221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _40236_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b29c9608_ctx{
	jule::Ptr<_1ac511eae_comptimeParam> _self_;
};
static void __jule_anon_1b29c9608_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b29c9608_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b29c9608(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _40921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _40936_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b29cb583_ctx{
	jule::Ptr<_1ac511eae_comptimeParam> _self_;
};
static void __jule_anon_1b29cb583_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b29cb583_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b29cb583(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _41621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _41636_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3522848_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b3522848_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3522848_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3522848(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _97421_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _97436_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3524817_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b3524817_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3524817_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3524817(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _98121_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _98136_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3526792_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b3526792_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3526792_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3526792(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _98821_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _98836_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b352871c_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b352871c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b352871c_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b352871c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _99521_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _99536_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b352a697_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b352a697_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b352a697_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b352a697(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _100221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _100236_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b352c622_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b352c622_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b352c622_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b352c622(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _100921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _100936_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b352e59c_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b352e59c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b352e59c_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b352e59c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _101621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _101636_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3531527_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b3531527_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3531527_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3531527(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _102321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _102336_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3533727_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b3533727_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3533727_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3533727(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _103021_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _103036_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b35356a2_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b35356a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b35356a2_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b35356a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _103721_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _103736_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b353762c_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b353762c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b353762c_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b353762c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _104421_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _104436_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b35395a7_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b35395a7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b35395a7_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b35395a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _105121_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _105136_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b353b532_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b353b532_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b353b532_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b353b532(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _105821_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _105836_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b353d4ac_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b353d4ac_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b353d4ac_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b353d4ac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _106521_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _106536_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3540437_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b3540437_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3540437_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3540437(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _107221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _107236_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b35423b2_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b35423b2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b35423b2_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b35423b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _107921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _107936_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b354433c_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b354433c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b354433c_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b354433c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _108621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _108636_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b35462b7_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b35462b7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b35462b7_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b35462b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _109321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _109336_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3548242_ctx{
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b3548242_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3548242_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3548242(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _110021_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _110036_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3579383_ctx{
	jule::Ptr<_1ac51d1eb_comptimeValue> _self_;
};
static void __jule_anon_1b3579383_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3579383_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3579383(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _126221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _126236_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b357b30d_ctx{
	jule::Ptr<_1ac51d1eb_comptimeValue> _self_;
};
static void __jule_anon_1b357b30d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b357b30d_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b357b30d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _126921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _126936_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b357d288_ctx{
	jule::Ptr<_1ac51d1eb_comptimeValue> _self_;
};
static void __jule_anon_1b357d288_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b357d288_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b357d288(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _127621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _127636_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3580213_ctx{
	jule::Ptr<_1ac51d1eb_comptimeValue> _self_;
};
static void __jule_anon_1b3580213_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3580213_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3580213(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _128321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _128336_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b358218d_ctx{
	jule::Ptr<_1ac51d1eb_comptimeValue> _self_;
};
static void __jule_anon_1b358218d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b358218d_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b358218d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _129021_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _129036_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3584118_ctx{
	jule::Ptr<_1ac51d1eb_comptimeValue> _self_;
};
static void __jule_anon_1b3584118_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3584118_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3584118(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _129721_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _129736_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b3586093_ctx{
	jule::Ptr<_1ac51d1eb_comptimeValue> _self_;
};
static void __jule_anon_1b3586093_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b3586093_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3586093(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _130421_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _130436_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b359ad00_ctx{
	jule::Ptr<_1ac5228c6_comptimeFile> _self_;
};
static void __jule_anon_1b359ad00_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b359ad00_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b359ad00(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _142921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _142936_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b359cc7a_ctx{
	jule::Ptr<_1ac5228c6_comptimeFile> _self_;
};
static void __jule_anon_1b359cc7a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b359cc7a_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b359cc7a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _143621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _143636_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b359ec05_ctx{
	jule::Ptr<_1ac5228c6_comptimeFile> _self_;
};
static void __jule_anon_1b359ec05_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b359ec05_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b359ec05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _144321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _144336_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a2cbab_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a2cbab_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a2cbab_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a2cbab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _194921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _194936_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a2eb7a_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a2eb7a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a2eb7a_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a2eb7a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _195621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _195636_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a31b05_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a31b05_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a31b05_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a31b05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _196321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _196336_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a33a80_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a33a80_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a33a80_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a33a80(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _197021_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _197036_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a35a0a_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a35a0a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a35a0a_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a35a0a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _197721_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _197736_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a37985_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a37985_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a37985_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a37985(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _198421_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _198436_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a39910_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a39910_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a39910_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a39910(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _199121_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _199136_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a3b88a_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a3b88a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a3b88a_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a3b88a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _199821_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _199836_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a3da8a_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a3da8a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a3da8a_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a3da8a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _200521_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _200536_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a40a15_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a40a15_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a40a15_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a40a15(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _201221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _201236_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a42990_ctx{
	jule::Ptr<_1ac5267dc_comptimeDecl> _self_;
};
static void __jule_anon_1b2a42990_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a42990_ctx>().dealloc(); }
inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a42990(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _201921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _201936_fc, jule::Ptr<_1ac60a55d_Data>* );
struct __jule_anon_1b2a4dc65_ctx{
	jule::Ptr<_1ac52d393_constraintChecker> _self_;
};
static void __jule_anon_1b2a4dc65_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2a4dc65_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b2a4dc65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac578256_sema>* _6415_sema, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>* _6433_generics);
struct __jule_anon_1b32acd53_ctx{
	jule::Ptr<_1ac4dee04_FnIns> _103047_f;
	jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _103111_generics;
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> *_103063_ignored;
};
static void __jule_anon_1b32acd53_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b32acd53_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b32acd53(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac578256_sema>* _103742_sema);
struct __jule_anon_1b32c5d6b_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1ac578256_sema>*,jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>*> _113346_algo;
	jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _11387_generics;
};
static void __jule_anon_1b32c5d6b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b32c5d6b_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b32c5d6b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac578256_sema>* _114042_sema);
struct __jule_anon_1b32ca656_ctx{
	jule::Ptr<_1ac4dee04_FnIns> _115237_f;
	jule::Ptr<_1ac578256_sema> _self_;
};
static void __jule_anon_1b32ca656_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b32ca656_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b32ca656(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac578256_sema>* _115637_sema, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>* _115655_generics);
struct __jule_anon_1b402bb7b_ctx{
	jule::Ptr<_1ac4ad7eb_NsSelectionExpr> _191635_s;
	jule::Str _19173_path;
};
static void __jule_anon_1b402bb7b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b402bb7b_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b402bb7b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac557cd5_ImportInfo> _191843_imp);
inline jule::Str __jule_anon1b4223438(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _87319_def);
struct __jule_anon_1b42a81d2_ctx{
	jule::Ptr<_1ac4a752b_NamespaceTypeDecl> _155836_decl;
	jule::Str _15593_path;
};
static void __jule_anon_1b42a81d2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b42a81d2_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b42a81d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac557cd5_ImportInfo> _156043_imp);
struct __jule_anon_1b4aa30c5_ctx{
	jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_;
};
static void __jule_anon_1b4aa30c5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b4aa30c5_ctx>().dealloc(); }
inline void __jule_anon_1b4aa30c5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _22131_file);
struct __jule_anon_1b4b11067_ctx{
	_1ad3dde9a_exprDeadCode *_self_;
};
static void __jule_anon_1b4b11067_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b4b11067_ctx>().dealloc(); }
inline void __jule_anon_1b4b11067(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr);
struct __jule_anon_1b4b6275b_ctx{
	_1ad2a39a8_exprOptimizer *_self_;
};
static void __jule_anon_1b4b6275b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b4b6275b_ctx>().dealloc(); }
inline void __jule_anon_1b4b6275b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _56447_m);
struct __jule_anon_1b4e51055_ctx{
	jule::Ptr<_1adea99ee_scopeCoder> _self_;
	jule::Bool _1377_ref;
};
static void __jule_anon_1b4e51055_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b4e51055_ctx>().dealloc(); }
inline void __jule_anon_1b4e51055(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b4e54a5e_ctx{
	jule::Ptr<_1adea99ee_scopeCoder> _self_;
	jule::Ptr<_1ac536d08_RangeIter> *_12936_it;
};
static void __jule_anon_1b4e54a5e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b4e54a5e_ctx>().dealloc(); }
inline void __jule_anon_1b4e54a5e(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b4e75145_ctx{
	jule::Ptr<_1adea99ee_scopeCoder> _self_;
};
static void __jule_anon_1b4e75145_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b4e75145_ctx>().dealloc(); }
inline void __jule_anon_1b4e75145(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b4e77631_ctx{
	jule::Ptr<_1adea99ee_scopeCoder> _self_;
};
static void __jule_anon_1b4e77631_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b4e77631_ctx>().dealloc(); }
inline void __jule_anon_1b4e77631(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b4e915e5_ctx{
	jule::Ptr<_1adea99ee_scopeCoder> _self_;
};
static void __jule_anon_1b4e915e5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b4e915e5_ctx>().dealloc(); }
inline void __jule_anon_1b4e915e5(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b502b2a6_ctx{
	jule::Ptr<_1adea99ee_scopeCoder> _self_;
};
static void __jule_anon_1b502b2a6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b502b2a6_ctx>().dealloc(); }
inline void __jule_anon_1b502b2a6(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b5032444_ctx{
	jule::Ptr<_1adea99ee_scopeCoder> _self_;
	jule::Ptr<_1ac539701_Match> _77630_m;
};
static void __jule_anon_1b5032444_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b5032444_ctx>().dealloc(); }
inline void __jule_anon_1b5032444(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b4c4a404_ctx{
	jule::Ptr<_1adea99ee_scopeCoder> _self_;
	jule::Ptr<_1ac4d2611_AnonFnExprModel> _114634_m;
};
static void __jule_anon_1b4c4a404_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b4c4a404_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b4c4a404(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac5a2527_Var> _115267_v);
struct __jule_anon_1b5516582_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b5516582_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b5516582_ctx>().dealloc(); }
inline void __jule_anon_1b5516582(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _88638_pkg);
struct __jule_anon_1b5517a7d_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b5517a7d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b5517a7d_ctx>().dealloc(); }
inline void __jule_anon_1b5517a7d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn>* _89936_m);
struct __jule_anon_1b551d215_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b551d215_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b551d215_ctx>().dealloc(); }
inline void __jule_anon_1b551d215(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _91238_pkg);
struct __jule_anon_1b552d8b8_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
	jule::Ptr<_1ac5a2527_Var> _97924_v;
};
static void __jule_anon_1b552d8b8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b552d8b8_ctx>().dealloc(); }
inline void __jule_anon_1b552d8b8(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b55309a8_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
	jule::Ptr<_1ac5a2527_Var> _97924_v;
};
static void __jule_anon_1b55309a8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b55309a8_ctx>().dealloc(); }
inline void __jule_anon_1b55309a8(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b55331b4_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b55331b4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b55331b4_ctx>().dealloc(); }
inline void __jule_anon_1b55331b4(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b553435d_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
	jule::Ptr<_1ac5a2527_Var> _97924_v;
};
static void __jule_anon_1b553435d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b553435d_ctx>().dealloc(); }
inline void __jule_anon_1b553435d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b5552656_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b5552656_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b5552656_ctx>().dealloc(); }
inline void __jule_anon_1b5552656(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _112238_pkg);
struct __jule_anon_1b55539cb_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
	jule::Ptr<_1ac4ca4d8_StructIns> _113649_s;
};
static void __jule_anon_1b55539cb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b55539cb_ctx>().dealloc(); }
inline void __jule_anon_1b55539cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn>* _113736_m);
struct __jule_anon_1b5561489_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b5561489_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b5561489_ctx>().dealloc(); }
inline void __jule_anon_1b5561489(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _117438_pkg);
struct __jule_anon_1b5571ab5_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b5571ab5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b5571ab5_ctx>().dealloc(); }
inline void __jule_anon_1b5571ab5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _124638_pkg);
struct __jule_anon_1b557308e_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b557308e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b557308e_ctx>().dealloc(); }
inline void __jule_anon_1b557308e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _126931_file);
struct __jule_anon_1b557e430_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b557e430_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b557e430_ctx>().dealloc(); }
inline void __jule_anon_1b557e430(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _130838_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1b56224b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1b562a124(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1b29772ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac557cd5_ImportInfo> _203925_pkg);
struct __jule_anon_1b55174b7_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b55174b7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b55174b7_ctx>().dealloc(); }
inline void __jule_anon_1b55174b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _88732_file);
struct __jule_anon_1b551e128_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b551e128_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b551e128_ctx>().dealloc(); }
inline void __jule_anon_1b551e128(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _91332_file);
struct __jule_anon_1b5553558_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b5553558_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b5553558_ctx>().dealloc(); }
inline void __jule_anon_1b5553558(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _112332_file);
struct __jule_anon_1b556239c_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b556239c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b556239c_ctx>().dealloc(); }
inline void __jule_anon_1b556239c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _117532_file);
struct __jule_anon_1b55729c8_ctx{
	jule::Ptr<_1ac55ac0b_Package> *_124638_pkg;
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
};
static void __jule_anon_1b55729c8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b55729c8_ctx>().dealloc(); }
inline void __jule_anon_1b55729c8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _124732_file);
struct __jule_anon_1b5555549_ctx{
	jule::Ptr<_1ae08ee9c_ObjectCoder> _self_;
	jule::Ptr<_1ac5008a4_Trait> _112417_t;
};
static void __jule_anon_1b5555549_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b5555549_ctx>().dealloc(); }
inline void __jule_anon_1b5555549(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn>* _112839_m);
jule::Array<jule::Array<jule::Str,2>,5> _1b03a2984_HelpMap;
jule::Str _1add28b7b_OutDir;
jule::Str _1add28e56_OutName;
jule::Str _1add2920e_Out;
jule::Uintptr _1e2716e81_STDIN;
jule::Uintptr _1e27172b1_STDOUT;
jule::Uintptr _1e271759c_STDERR;
jule::Array<jule::U8,256> _1c7ec7739_first;
jule::Array<_1c7ec7cde_acceptRange,16> _1c7ec8185_acceptRanges;
jule::Array<jule::U8,32> _20a3cb3d0__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _20a3cb974__DE_BRUIJN64_TAB;
jule::I64 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_1b09227ea_RangeTable> _1c80984a8__L;
jule::Ptr<_1b09227ea_RangeTable> _1c80993bb__LU;
jule::Ptr<_1b09227ea_RangeTable> _1c80a03a0_Letter;
jule::Ptr<_1b09227ea_RangeTable> _1c80a6670_Upper;
jule::Slice<_1b0921893_CaseRange> _1b091a958__CaseRanges;
jule::Array<jule::U8,256> _1b091ac44__PROPERTIES;
jule::Array<jule::U16,128> _1b091ca26_asciiFold;
jule::Slice<_1b0921398_foldPair> _1b091cd12_caseOrbit;
jule::Array<jule::Str,4> _1b08a7010_CppHeaderExts;
jule::Array<jule::Str,3> _1b08a8cc0_CppExts;
jule::Array<jule::Str,1> _1b08a8ece_ObjectiveCppExts;
jule::Str _1b0398529_PathStdlib;
jule::Str _1b0398826_PathExec;
jule::Str _1b0398ace_PathWd;
jule::Str _1b0398dcb_PathApi;
jule::Str _1b0399184_Os;
jule::Str _1b039943c_Arch;
jule::Str _1b039debe_Compiler;
jule::Str _1b03a03bb_CompilerPath;
jule::Str _1b03a05ca_CppStd;
jule::Bool _1b03a080b_Shadowing;
jule::Bool _1b03a0ab4_Transpilation;
jule::Bool _1b03a0d6c_Test;
jule::Bool _1b03a1125_RC;
jule::Bool _1b03a14dd_Safety;
jule::Bool _1b03a1730_Production;
_1a9d36dd0_floatInfo _1a9d372cb_f32info;
_1a9d36dd0_floatInfo _1a9d375c8_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1a9d400a3_detailedPowsOfTen;
jule::Slice<jule::I64> _1a9d41db8_powtab;
jule::Slice<jule::F64> _1a9d42979_f64pow10;
jule::Slice<jule::F32> _1a9d42ca9_f32pow10;
jule::Array<jule::U64,20> _1a9d46010_u64pow10;
jule::Slice<_1aa1161ae_leftCheat> _1aa1165dd_leftCheats;
jule::I64 _1aa11c68d_BitSize;
jule::Str _1aa11c98a_SysInt;
jule::Str _1aa11cc43_SysUint;
jule::Array<jule::I32,5> _1ac3e239a_Spaces;
jule::Array<jule::U64,6> _1ac3e2686_UnaryOps;
jule::Array<jule::U64,18> _1ac3e29b6_BinOps;
jule::Array<jule::U64,2> _1ac48a7a6_PostfixOps;
jule::Array<jule::U64,11> _1ac48aa92_AssignOps;
jule::Array<_1ac498bb0_kindPair,28> _1ac4990de_keywords;
jule::Array<_1ac498bb0_kindPair,46> _1ac49941e_basicOps;
jule::Slice<jule::Str> _1ac52ca57_builtinConstraints;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac727878_primNil;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac727b75_primVoid;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac727e2d_primAny;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac72822a_primStr;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac7284d3_primBool;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac72878b_primUintptr;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac728a44_primUint;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac728e0c_primInt;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac72914e_primI8;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac7293e6_primI16;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac72969e_primI32;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac729957_primI64;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac729c10_primU8;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac729eb8_primU16;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac72a271_primU32;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac72a75a_primU64;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac72a99c_primF32;
jule::Ptr<_1ac63d2d8_TypeKind> _1ac72abab_primF64;
jule::Ptr<_1ad2abd68_data> _1ad2ab472_emptyData;
jule::Bool _1ad2b1488_Copy;
jule::Bool _1ad2b1785_Deadcode;
jule::Bool _1ad2b1a3d_Append;
jule::Bool _1ad2b1d3a_Math;
jule::Bool _1ad2b20e3_Access;
jule::Bool _1ad2b239b_Inline;
jule::Bool _1ad2b2654_Ptr;
jule::Bool _1ad2b2a1c_Cond;
jule::Bool _1ad2b2c5e_Str;
jule::Bool _1ad2b3006_Slice;
jule::Bool _1ad2b32ae_Assign;
jule::Bool _1ad2b3567_Exceptional;
jule::Bool _1ad2b3820_Iter;
jule::Bool _1ad2b3ac8_Dynamic;
jule::Bool _1ad3deb8d_exprEnabled;
jule::Bool _1ad3dedd0_scopeEnabled;
jule::Array<jule::U64,12> _1ae082027_mdays;
jule::Str _1adea9290_assignArgName;
jule::Ptr<_1ac63d2d8_TypeKind> _1ae08c8c3_generalGCPtr;
jule::Slice<_1b0921893_CaseRange> _1b091a66c_CaseRanges;


inline jule::Bool _1c7ec7cde_acceptRange_eq(_1c7ec7cde_acceptRange *_self_, _1c7ec7cde_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _20a2dca72_LittleEndian_eq(_20a2dca72_LittleEndian *_self_, _20a2dca72_LittleEndian _other_) { return true; }

inline jule::U32 static__20a2dde5d_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__20a2de887_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _20a2e302d_u128_eq(_20a2e302d_u128 *_self_, _20a2e302d_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1b4d1aeca_group_eq(_1b4d1aeca_group *_self_, _1b4d1aeca_group _other_) {
	return 
		_1ae340a33_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1b4d1b717_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1b4d18b87__Map> static__1b4d1924d_make(void) {
	return jule::new_ptr<_1b4d18b87__Map>(_1b4d18b87__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1b4d1aeca_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1b4d193a2_initData(_1b4d18b87__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _20a3db16a_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1b4d1aeca_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b4d1aeca_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4d384e2:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_20a3db379_newEmptyMetadata();
			}
			_iter_next_1b4d384e2:;
			++it;
			_1407_i++;
			goto _iter_begin_1b4d384e2;
		}
		_iter_end_1b4d384e2:;
	};
}



inline jule::U64 _1b4d19506_hash(_1b4d18b87__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1ac2a1c82_toStr(_14616_k);;
	return _20a2e64a4_hash(_1e2763384_StrBytes(_1473_bytes));;
}



inline void _1b4d1965a_rehash(_1b4d18b87__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1b4d193a2_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1b4d1aeca_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1b4d1aeca_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1b4d1aeca_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b4d1aeca_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4d3bade:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_20a3db379_newEmptyMetadata();
			}
			_iter_next_1b4d3bade:;
			++it;
			_1617_i++;
			goto _iter_begin_1b4d3bade;
		}
		_iter_end_1b4d3bade:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4d3b748:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4d3d5c4:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1b4d3d5c4;
							};
							{
								(*(_1b4d19bbb_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1b4d3d5c4:;
						++it;
						_1678_s++;
						goto _iter_begin_1b4d3d5c4;
					}
					_iter_end_1b4d3d5c4:;
				};
			}
			_iter_next_1b4d3b748:;
			++it;
			_1667_g++;
			goto _iter_begin_1b4d3b748;
		}
		_iter_end_1b4d3b748:;
	};
}



inline jule::I64 _1b4d197ae_nextSize(_1b4d18b87__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1b4d19913_lookup(jule::Ptr<_1b4d18b87__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20a3db753_splitHash(_1b4d19506_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _20a3dba50_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _20a3da202_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _20a3da7c9_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1b4d44cb2:;
			}
			_iter_end_1b4d44cb2:;;
			_2018_matches=_20a3da510_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1b4d419b2:;
	}
	_iter_end_1b4d419b2:;;
}



inline jule::Bool _1b4d19a67_get(jule::Ptr<_1b4d18b87__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1b4d19913_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1b4d19bbb_set(_1b4d18b87__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1b4d1965a_rehash(_self_, _1b4d197ae_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20a3db753_splitHash(_1b4d19506_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _20a3dba50_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _20a3da202_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _20a3da7c9_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1b4d4cb00:;
			}
			_iter_end_1b4d4cb00:;;
			_2488_matches=_20a3da510_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _20a3da7c9_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1b4d4ba99:;
	}
	_iter_end_1b4d4ba99:;;
}



inline jule::Bool _1b4d19d20_del(jule::Ptr<_1b4d18b87__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20a3db753_splitHash(_1b4d19506_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _20a3dba50_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _20a3da202_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _20a3da7c9_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_20a3da510_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1b4d557d9:;
			}
			_iter_end_1b4d557d9:;;
			_2838_matches=_20a3da510_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1b4d54563:;
	}
	_iter_end_1b4d54563:;;
}



inline void _1b4d19e74_clear(jule::Ptr<_1b4d18b87__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4d5c082:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4d5ca00:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1b4d5ca00:;
						++it;
						_3298_j++;
						goto _iter_begin_1b4d5ca00;
					}
					_iter_end_1b4d5ca00:;
				};
			}
			_iter_next_1b4d5c082:;
			++it;
			_3287_i++;
			goto _iter_begin_1b4d5c082;
		}
		_iter_end_1b4d5c082:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4d54b18:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1b4d1aeca_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b4d60151:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1b4d60151:;
							++it;
							_3389_j++;
							goto _iter_begin_1b4d60151;
						}
						_iter_end_1b4d60151:;
					};
				};
			}
			_iter_next_1b4d54b18:;
			++it;
			_3357_i++;
			goto _iter_begin_1b4d54b18;
		}
		_iter_end_1b4d54b18:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1b4d1a0c8_len(jule::Ptr<_1b4d18b87__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1b4d1a22c_cap(_1b4d18b87__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1b4d25413_mapIterator _1b4d1a381_iterator(jule::Ptr<_1b4d18b87__Map> _self_) {
	_1b4d25413_mapIterator _3607_iterator = _1b4d25413_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1b4d1aeca_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1b4d25996_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1b4d646d8__Map> static__1b4d64c05_make(void) {
	return jule::new_ptr<_1b4d646d8__Map>(_1b4d646d8__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1b4d6681c_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1b4d64d59_initData(_1b4d646d8__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _20a3db16a_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1b4d6681c_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b4d6681c_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1ac4dee04_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4dee04_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4d81e31:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_20a3db379_newEmptyMetadata();
			}
			_iter_next_1b4d81e31:;
			++it;
			_1407_i++;
			goto _iter_begin_1b4d81e31;
		}
		_iter_end_1b4d81e31:;
	};
}



inline jule::U64 _1b4d64ead_hash(_1b4d646d8__Map* _self_, jule::Ptr<_1ac4dee04_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1b3a1ed34_toStr(_14616_k);;
	return _20a2e64a4_hash(_1e2763384_StrBytes(_1473_bytes));;
}



inline void _1b4d65112_rehash(_1b4d646d8__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1b4d64d59_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1b4d6681c_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1b4d6681c_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1b4d6681c_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1b4d6681c_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1ac4dee04_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4dee04_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4d8552d:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_20a3db379_newEmptyMetadata();
			}
			_iter_next_1b4d8552d:;
			++it;
			_1617_i++;
			goto _iter_begin_1b4d8552d;
		}
		_iter_end_1b4d8552d:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4d85187:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4d87013:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1b4d87013;
							};
							{
								(*(_1b4d65673_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1b4d87013:;
						++it;
						_1678_s++;
						goto _iter_begin_1b4d87013;
					}
					_iter_end_1b4d87013:;
				};
			}
			_iter_next_1b4d85187:;
			++it;
			_1667_g++;
			goto _iter_begin_1b4d85187;
		}
		_iter_end_1b4d85187:;
	};
}



inline jule::I64 _1b4d65266_nextSize(_1b4d646d8__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1b4d653ba_lookup(jule::Ptr<_1b4d646d8__Map> _self_, jule::Ptr<_1ac4dee04_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20a3db753_splitHash(_1b4d64ead_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _20a3dba50_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _20a3da202_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _20a3da7c9_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1b4d8d701:;
			}
			_iter_end_1b4d8d701:;;
			_2018_matches=_20a3da510_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1b4d8a401:;
	}
	_iter_end_1b4d8a401:;;
}



inline jule::Slice<jule::Uintptr> _1b4d6551e_get(jule::Ptr<_1b4d646d8__Map> _self_, jule::Ptr<_1ac4dee04_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1b4d653ba_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1b4d65673_set(_1b4d646d8__Map* _self_, jule::Ptr<_1ac4dee04_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1b4d65112_rehash(_self_, _1b4d65266_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20a3db753_splitHash(_1b4d64ead_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _20a3dba50_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _20a3da202_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _20a3da7c9_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1b4d9653e:;
			}
			_iter_end_1b4d9653e:;;
			_2488_matches=_20a3da510_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _20a3da7c9_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1b4d954d8:;
	}
	_iter_end_1b4d954d8:;;
}



inline jule::Bool _1b4d657c7_del(jule::Ptr<_1b4d646d8__Map> _self_, jule::Ptr<_1ac4dee04_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _20a3db753_splitHash(_1b4d64ead_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _20a3dba50_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _20a3da202_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _20a3da7c9_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_20a3da510_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Ptr<_1ac4dee04_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1b4d9e228:;
			}
			_iter_end_1b4d9e228:;;
			_2838_matches=_20a3da510_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1b4d9cea2:;
	}
	_iter_end_1b4d9cea2:;;
}



inline void _1b4d6592b_clear(jule::Ptr<_1b4d646d8__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4da59c1:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4da643e:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1b4da643e:;
						++it;
						_3298_j++;
						goto _iter_begin_1b4da643e;
					}
					_iter_end_1b4da643e:;
				};
			}
			_iter_next_1b4da59c1:;
			++it;
			_3287_i++;
			goto _iter_begin_1b4da59c1;
		}
		_iter_end_1b4da59c1:;
	};
	jule::Ptr<_1ac4dee04_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4d9d557:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1b4d6681c_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b4da8a90:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1b4da8a90:;
							++it;
							_3389_j++;
							goto _iter_begin_1b4da8a90;
						}
						_iter_end_1b4da8a90:;
					};
				};
			}
			_iter_next_1b4d9d557:;
			++it;
			_3357_i++;
			goto _iter_begin_1b4d9d557;
		}
		_iter_end_1b4d9d557:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1b4d65a80_len(jule::Ptr<_1b4d646d8__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1b4d65bd4_cap(_1b4d646d8__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1b4d6dcb9_mapIterator _1b4d65d38_iterator(jule::Ptr<_1b4d646d8__Map> _self_) {
	_1b4d6dcb9_mapIterator _3607_iterator = _1b4d6dcb9_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1b4d6681c_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1b4d6e34c_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1b4d25996_init(_1b4d25413_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1b4d1aeca_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1b4d1a0c8_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_20b30d09c_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1b4d25aea_next(_1b4d25413_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1b4d2d581;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1b4d2d581:;
			}
			_iter_end_1b4d2d581:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1b4d2c816:;
	}
	_iter_end_1b4d2c816:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1b4d6e34c_init(_1b4d6dcb9_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1b4d6681c_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1b4d65a80_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_20b30d09c_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1ac4dee04_FnIns__jule_tuple_psuintptr _1b4d6e4a1_next(_1b4d6dcb9_mapIterator* _self_) {
	__jule_tuple_px_1ac4dee04_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1b4d76ec0;
					};
					jule::Ptr<_1ac4dee04_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1b4d76ec0:;
			}
			_iter_end_1b4d76ec0:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1b4d76255:;
	}
	_iter_end_1b4d76255:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}








inline jule::Bool _1b0921398_foldPair_eq(_1b0921398_foldPair *_self_, _1b0921398_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _1b0921893_CaseRange_eq(_1b0921893_CaseRange *_self_, _1b0921893_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1ae38e0e2_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _1b0921d49_Range16_eq(_1b0921d49_Range16 *_self_, _1b0921d49_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _1b0922377_Range32_eq(_1b0922377_Range32 *_self_, _1b0922377_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline _1b097ade7_StrBuilder static__1b097b1e4_New(jule::I64 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _1b097ade7_StrBuilder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1516_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline void _1b0984939_Write(_1b097ade7_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _1b0984be2_WriteStr(_1b097ade7_StrBuilder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _1b0984e9a_WriteByte(_1b097ade7_StrBuilder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _1b09854d9_Str(_1b097ade7_StrBuilder* _self_) {
	jule::Str _507_s = _1e27638d4_StrFromBytes((*(_self_))._field_buf);;
	_1b09856d7_Clear(_self_);
	return _507_s;;
}



inline void _1b09856d7_Clear(_1b097ade7_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1b098596d_Len(_1b097ade7_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1b0985e8a_Buf(_1b097ade7_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1b0986243_SetBuf(_1b097ade7_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}







inline jule::U8 _1b0987d8d_index(_1b09878c6_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1b0988146_append(_1b09878c6_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1b09883cc_string(_1b09878c6_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1e276361a_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _1ae66a753_DirEntry_eq(_1ae66a753_DirEntry *_self_, _1ae66a753_DirEntry _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		(_self_->_field_Stat == _self_->_field_Stat);
}






inline jule::Bool _1ae66a9d9_Directory_eq(_1ae66a9d9_Directory *_self_, _1ae66a9d9_Directory _other_) { return true; }

inline jule::Exceptional<jule::Slice<jule::Ptr<_1ae66a753_DirEntry>>> static__1b098c2e3_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_1ae66a753_DirEntry>> __jule_func_result;
	jule::Slice<jule::U8> _163_s = _1e270878b_StrToBytes(_1517_path);;
	DIR* _177_dir = _1e271914d_Opendir((&(_163_s[0LL])));;
	if ((_177_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1ae66a753_DirEntry>>>{.error=jule::Any(_1ae6689c6_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _224_dirent = _1e2719329_Readdir(_177_dir);;
			if ((_224_dirent == nullptr)) {
				goto _iter_end_1ae243a8a;
			};
			jule::Str _264_name = _1e2708505_BytePtrToStr(((jule::U8*)((*(_224_dirent)).d_name)));;
			jule::Ptr<_1ae66e713_Status> _278_stat = ({
				auto except = static__1ae66b3d0_Of(_1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = _264_name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_1ae66a753_DirEntry>>>{.error=except.error};
				} jule::Ptr<_1ae66e713_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_1ae66a753_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_1ae66a753_DirEntry>(_1ae66a753_DirEntry{._field_Name=_264_name, ._field_Stat=_278_stat})); };
		}
	_iter_next_1ae243a8a:;
	}
	_iter_end_1ae243a8a:;;
	_1e27195c1_Closedir(_177_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1ae66a753_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1b098c524_Create(jule::Str _4019_path) {
	jule::Slice<jule::U8> _443_s = _1e270878b_StrToBytes(_4019_path);;
	if ((_1e2719ec8_Mkdir((&(_443_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ae6689c6_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1b098c755_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U8> _543_s = _1e270878b_StrToBytes(_5319_path);;
	if ((_1e271a292_Rmdir((&(_543_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ae6689c6_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _1ae66c623_File_eq(_1ae66c623_File *_self_, _1ae66c623_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Exceptional<jule::Ptr<_1ae66c623_File>> static__1ae6696a8_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode) {
	jule::Slice<jule::U8> _213_s = _1e270878b_StrToBytes(_2017_path);;
	jule::I64 _223_handle = _1e27187ce_Open((&(_213_s[0LL])), _2028_flag, _2041_mode);;
	if ((_223_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1ae66c623_File>>{.error=jule::Any(_1ae6689c6_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1ae66c623_File>>{.result=static__1ae66ca74_New(static_cast<jule::Uintptr>(_223_handle))};;
}



inline jule::VoidExceptional static__1ae6698d9_Remove(jule::Str _3319_path) {
	jule::Slice<jule::U8> _343_s = _1e270878b_StrToBytes(_3319_path);;
	if ((_1e271a55b_Unlink((&(_343_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ae6689c6_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1ae669d6d_Write(_1ae66c623_File* _self_, jule::Slice<jule::U8> _4821_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4821_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_1c7ecd3ee_handleRW(&(_4821_buf));
	__jule_func_result=_1e2744c28_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_4821_buf[0LL])), static_cast<jule::U64>(_4821_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_1ae6689c6_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _1ae66a1ae_Read(_1ae66c623_File* _self_, jule::Slice<jule::U8> _6924_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_6924_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_1c7ecd3ee_handleRW(&(_6924_buf));
	__jule_func_result=_1e2744497_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_6924_buf[0LL])), static_cast<jule::U64>(_6924_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_1ae6689c6_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Ptr<_1ae66c623_File> static__1ae66ca74_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_1ae66c623_File>(_1ae66c623_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_1ae66c623_File>> static__1ae66cd3d_Create(jule::Str _5519_path) {
	return static__1ae6696a8_Open(_5519_path, static_cast<jule::I64>(578LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1ae66d107_Read(jule::Str _6717_path) {
	jule::Ptr<_1ae66e713_Status> _683_s = ({
		auto except = static__1ae66b3d0_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1ae66e713_Status>(nullptr);});
	});;
	if ((!(_1ae66eda6_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _737_sz = static_cast<jule::I64>(_1ae67013c_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I64>(_1ae67013c_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_1ae66c623_File> _867_f = ({
		auto except = static__1ae6696a8_Open(_6717_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1ae66c623_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I64 _904_rn = ({
				auto except = _1ae66a1ae_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1ae24e854;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1ae24e854:;
	}
	_iter_end_1ae24e854:;;
	({
		auto except = _1ae66dbda_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__1ae66d49d_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm) {
	jule::Ptr<_1ae66c623_File> _1067_f = ({
		auto except = static__1ae6696a8_Open(_10518_path, static_cast<jule::I64>(577LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1ae66c623_File>(nullptr);});
	});;
	jule::I64 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _1ae669d6d_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1ae254c66:;
	}
	_iter_end_1ae254c66:;;
	return _1ae66dbda_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ae66dbda_Close(_1ae66c623_File* _self_) {
	if ((_1e2744871_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ae6689c6_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _1ae66e713_Status_eq(_1ae66e713_Status *_self_, _1ae66e713_Status _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Exceptional<jule::Ptr<_1ae66e713_Status>> static__1ae66b3d0_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_1ae66e713_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	struct stat _167_handle = (struct stat){};;
	jule::Slice<jule::U8> _173_s = _1e270878b_StrToBytes(_1215_path);;
	jule::I64 _183_code = _1e27183a0_Stat((&(_173_s[0LL])), (&(_167_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1ae66e713_Status>>{.error=jule::Any(_1ae6689c6_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_1ae66e713_Status> _227_stat = jule::new_ptr<_1ae66e713_Status>(_1ae66e713_Status{._field_mode=0LL, ._field_size=0});;
	(*_227_stat.alloc)._field_size=_167_handle.st_size;
	if (((_167_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_167_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_1ae66e713_Status>>{.result=_227_stat};;
}



inline jule::Bool _1ae66eb20_IsDir(_1ae66e713_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _1ae66eda6_IsReg(_1ae66e713_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _1ae67013c_Size(_1ae66e713_Status* _self_) {
	return (*(_self_))._field_size;;
}








inline jule::Bool _1b03959cc_cmdAttrs_eq(_1b03959cc_cmdAttrs *_self_, _1b03959cc_cmdAttrs _other_) {
	return 
		(_self_->_field_pid == _other_._field_pid);
}






inline jule::Bool _1b08b6838_Log_eq(_1b08b6838_Log *_self_, _1b08b6838_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1a9d36dd0_floatInfo_eq(_1a9d36dd0_floatInfo *_self_, _1a9d36dd0_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1aa1161ae_leftCheat_eq(_1aa1161ae_leftCheat *_self_, _1aa1161ae_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1aa116bc6_decimal_eq(_1aa116bc6_decimal *_self_, _1aa116bc6_decimal _other_) {
	return 
		_1b2935d06_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1a9d4222b_set(_1aa116bc6_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1b2d604e9:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1b2d60681:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1b2d60483:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1b2d620cd:;
					{
						goto _iter_next_1b2d6185d;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1b2d62177:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1b2d6185d;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1b2d621dd:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1b2d6185d;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1b2d6185d;
					}
				}
				_match_end_1b2d61e9b:;
			};
			goto _iter_end_1b2d6185d;
		}
	_iter_next_1b2d6185d:;
	}
	_iter_end_1b2d6185d:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1a9d3c721_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1b2d6cd64;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1b2d6cd64:;
		}
		_iter_end_1b2d6cd64:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1a9d4256c_floatBits(_1aa116bc6_decimal* _self_, _1a9d36dd0_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1b2d7b8ab;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1b2d7a910;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1b2d7b8ab;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1a9d41db8_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1a9d41db8_powtab[(*(_self_))._field_dp];
			};
			_1aa117369_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1b2d73221:;
	}
	_iter_end_1b2d73221:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1a9d41db8_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1a9d41db8_powtab[(-((*(_self_))._field_dp))];
			};
			_1aa117369_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1b2d7176e:;
	}
	_iter_end_1b2d7176e:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1aa117369_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1b2d7a910;
	};
	_1aa117369_shift(_self_, static_cast<jule::I64>((jule::U64)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1aa117e19_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1b2d7a910;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1b2d7b8ab;
	_julec_label_1b2d7a910:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((jule::U64)((jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1b2d7b8ab:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1aa1170b1_assign(_1aa116bc6_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1b2d7e12d:;
	}
	_iter_end_1b2d7e12d:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1b2d7ea9b:;
	}
	_iter_end_1b2d7ea9b:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1aa118524_trim(_self_);
}



inline void _1aa117369_shift(_1aa116bc6_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1b2d81a26:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1b2d81ac0:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1aa11906e_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1b2d826c5:;
				}
				_iter_end_1b2d826c5:;;
				_1aa11906e_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1b2d81b36:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1aa118810_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1b2d825e8:;
				}
				_iter_end_1b2d825e8:;;
				_1aa118810_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1b2d818b1:;
	};
}



inline void _1aa117622_roundDown(_1aa116bc6_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1aa118524_trim(_self_);
}



inline void _1aa1178ca_roundUp(_1aa116bc6_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1b2d85a80:;
	}
	_iter_end_1b2d85a80:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1aa117b83_round(_1aa116bc6_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1aa1193e3_shouldRoundUp(_self_, _23221_nd)) {
		_1aa1178ca_roundUp(_self_, _23221_nd);
	} else {
		_1aa117622_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1aa117e19_roundedInteger(_1aa116bc6_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1b2d889d9:;
	}
	_iter_end_1b2d889d9:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1b2d8a9db:;
	}
	_iter_end_1b2d8a9db:;;
	if (_1aa1193e3_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}







inline jule::Ptr<_1aa1293c0_Const> static__1aa129843_NewI64(jule::I64 _1619_x) {
	return jule::new_ptr<_1aa1293c0_Const>(_1aa1293c0_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1619_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1aa1293c0_Const> static__1aa129b0c_NewU64(jule::U64 _1919_x) {
	return jule::new_ptr<_1aa1293c0_Const>(_1aa1293c0_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1919_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1aa1293c0_Const> static__1aa129dc6_NewBool(jule::Bool _2220_x) {
	return jule::new_ptr<_1aa1293c0_Const>(_1aa1293c0_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2220_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1aa1293c0_Const> static__1aa12a190_NewStr(jule::Str _2519_x) {
	return jule::new_ptr<_1aa1293c0_Const>(_1aa1293c0_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2519_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1aa1293c0_Const> static__1aa12a459_NewF64(jule::F64 _2819_x) {
	return jule::new_ptr<_1aa1293c0_Const>(_1aa1293c0_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2819_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1aa1293c0_Const> static__1aa12a668_NewNil(void) {
	return jule::new_ptr<_1aa1293c0_Const>(_1aa1293c0_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1aa12acc8_ReadI64(_1aa1293c0_Const* _self_) {
	if ((!(_1aa12d3c4_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1aa12b05e_ReadU64(_1aa1293c0_Const* _self_) {
	if ((!(_1aa12d65a_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1aa12b2e5_ReadBool(_1aa1293c0_Const* _self_) {
	if ((!(_1aa12d8e1_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1aa12b57b_ReadStr(_1aa1293c0_Const* _self_) {
	if ((!(_1aa12db77_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1aa12b812_ReadF64(_1aa1293c0_Const* _self_) {
	if ((!(_1aa12de0d_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1aa12ba98_AsI64(_1aa1293c0_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac7da045:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac7da991:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac7daa07:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ac7da4eb:;
			{
				return 0LL;;
			}
		}
		_match_end_1ac7da353:;
	};
}



inline jule::U64 _1aa12bd2e_AsU64(_1aa1293c0_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac7db5da:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac7dc311:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac7dc377:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ac7dbab3:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ac7dba4c:;
	};
}



inline jule::F64 _1aa12c0b5_AsF64(_1aa1293c0_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac7ddd6d:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac7dce49:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac7ddb5e:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1ac7dd411:;
			{
				return 0LL;;
			}
		}
		_match_end_1ac7dd39a:;
	};
}



inline void _1aa12c36d_SetI64(_1aa1293c0_Const* _self_, jule::I64 _13822_x) {
	(*(_self_))._field_data=jule::Any(_13822_x, &__jule_any_type1);
}



inline void _1aa12c626_SetU64(_1aa1293c0_Const* _self_, jule::U64 _14122_x) {
	(*(_self_))._field_data=jule::Any(_14122_x, &__jule_any_type2);
}



inline void _1aa12c8ce_SetBool(_1aa1293c0_Const* _self_, jule::Bool _14423_x) {
	(*(_self_))._field_data=jule::Any(_14423_x, &__jule_any_type3);
}



inline void _1aa12cb87_SetStr(_1aa1293c0_Const* _self_, jule::Str _14722_x) {
	(*(_self_))._field_data=jule::Any(_14722_x, &__jule_any_type4);
}



inline void _1aa12ce40_SetF64(_1aa1293c0_Const* _self_, jule::F64 _15022_x) {
	(*(_self_))._field_data=jule::Any(_15022_x, &__jule_any_type5);
}



inline jule::Bool _1aa12d3c4_IsI64(_1aa1293c0_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ac7e2767:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac7e2998:;
			{
				return false;;
			}
		}
		_match_end_1ac7e2932:;
	};
}



inline jule::Bool _1aa12d65a_IsU64(_1aa1293c0_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ac7e3306:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac7e2aca:;
			{
				return false;;
			}
		}
		_match_end_1ac7e2a64:;
	};
}



inline jule::Bool _1aa12d8e1_IsBool(_1aa1293c0_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ac7e3746:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac7e3c30:;
			{
				return false;;
			}
		}
		_match_end_1ac7e3bb9:;
	};
}



inline jule::Bool _1aa12db77_IsStr(_1aa1293c0_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ac7e41c5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac7e46ae:;
			{
				return false;;
			}
		}
		_match_end_1ac7e4648:;
	};
}



inline jule::Bool _1aa12de0d_IsF64(_1aa1293c0_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ac7e4b54:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ac7e513d:;
			{
				return false;;
			}
		}
		_match_end_1ac7e50c7:;
	};
}



inline jule::Bool _1aa12e194_IsNil(_1aa1293c0_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1aa12e826_And(_1aa1293c0_Const* _self_, _1aa1293c0_Const _23815_x) {
	{
		
		if ((_1aa12d8e1_IsBool(_self_) && _1aa12d8e1_IsBool(&_23815_x))) {
			_case_begin_1ac7e95d7:;
			{
				return (_1aa12b2e5_ReadBool(_self_) && _1aa12b2e5_ReadBool(&_23815_x));;
			}
		}
		else {
			_case_begin_1ac7e9571:;
			{
				return false;;
			}
		}
		_match_end_1ac7e9131:;
	};
}



inline jule::Bool _1aa12eb67_Or(_1aa1293c0_Const* _self_, _1aa1293c0_Const _24914_x) {
	{
		
		if ((_1aa12d8e1_IsBool(_self_) && _1aa12d8e1_IsBool(&_24914_x))) {
			_case_begin_1ac7ea8d5:;
			{
				return (_1aa12b2e5_ReadBool(_self_) || _1aa12b2e5_ReadBool(&_24914_x));;
			}
		}
		else {
			_case_begin_1ac7ea0bb:;
			{
				return false;;
			}
		}
		_match_end_1ac7e9ecd:;
	};
}



inline jule::Bool _1aa12eea8_Eq(_1aa1293c0_Const* _self_, _1aa1293c0_Const _26014_x) {
	{
		
		if (_1aa12e194_IsNil(_self_)) {
			_case_begin_1ac7ebc49:;
			{
				return _1aa12e194_IsNil(&_26014_x);;
			}
		}
		else if (_1aa12d8e1_IsBool(_self_)) {
			_case_begin_1ac7ebcb0:;
			{
				return (_1aa12d8e1_IsBool(&_26014_x) && (_1aa12b2e5_ReadBool(_self_) == _1aa12b2e5_ReadBool(&_26014_x)));;
			}
		}
		else if (_1aa12db77_IsStr(_self_)) {
			_case_begin_1ac7ebd26:;
			{
				return (_1aa12db77_IsStr(&_26014_x) && (_1aa12b57b_ReadStr(_self_) == _1aa12b57b_ReadStr(&_26014_x)));;
			}
		}
		else if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac7ebd9d:;
			{
				return (_1aa12acc8_ReadI64(_self_) == _1aa12ba98_AsI64(&_26014_x));;
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac7ebe25:;
			{
				return (_1aa12b05e_ReadU64(_self_) == _1aa12bd2e_AsU64(&_26014_x));;
			}
		}
		else if (_1aa12de0d_IsF64(_self_)) {
			_case_begin_1ac7ec0bd:;
			{
				return (_1aa12b812_ReadF64(_self_) == _1aa12c0b5_AsF64(&_26014_x));;
			}
		}
		else {
			_case_begin_1ac7eb3a8:;
			{
				return false;;
			}
		}
		_match_end_1ac7eb2ba:;
	};
}



inline jule::Bool _1aa1302e9_Lt(_1aa1293c0_Const* _self_, _1aa1293c0_Const _28714_x) {
	{
		
		if (_1aa12db77_IsStr(_self_)) {
			_case_begin_1ac800973:;
			{
				return (_1aa12db77_IsStr(&_28714_x) && (_1aa12b57b_ReadStr(_self_) < _1aa12b57b_ReadStr(&_28714_x)));;
			}
		}
		else if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac8009d9:;
			{
				return (_1aa12acc8_ReadI64(_self_) < _1aa12ba98_AsI64(&_28714_x));;
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac800a50:;
			{
				return (_1aa12b05e_ReadU64(_self_) < _1aa12bd2e_AsU64(&_28714_x));;
			}
		}
		else if (_1aa12de0d_IsF64(_self_)) {
			_case_begin_1ac800ac7:;
			{
				return (_1aa12b812_ReadF64(_self_) < _1aa12c0b5_AsF64(&_28714_x));;
			}
		}
		else {
			_case_begin_1ac7ec70b:;
			{
				return false;;
			}
		}
		_match_end_1ac7ec62e:;
	};
}



inline jule::Bool _1aa13063a_LtEq(_1aa1293c0_Const* _self_, _1aa1293c0_Const _31016_x) {
	{
		
		if (_1aa12db77_IsStr(_self_)) {
			_case_begin_1ac803679:;
			{
				return (_1aa12db77_IsStr(&_31016_x) && (_1aa12b57b_ReadStr(_self_) <= _1aa12b57b_ReadStr(&_31016_x)));;
			}
		}
		else if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac8036e0:;
			{
				return (_1aa12acc8_ReadI64(_self_) <= _1aa12ba98_AsI64(&_31016_x));;
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac803756:;
			{
				return (_1aa12b05e_ReadU64(_self_) <= _1aa12bd2e_AsU64(&_31016_x));;
			}
		}
		else if (_1aa12de0d_IsF64(_self_)) {
			_case_begin_1ac8037cd:;
			{
				return (_1aa12b812_ReadF64(_self_) <= _1aa12c0b5_AsF64(&_31016_x));;
			}
		}
		else {
			_case_begin_1ac801336:;
			{
				return false;;
			}
		}
		_match_end_1ac801259:;
	};
}



inline jule::Bool _1aa13097b_Gt(_1aa1293c0_Const* _self_, _1aa1293c0_Const _33314_x) {
	{
		
		if (_1aa12db77_IsStr(_self_)) {
			_case_begin_1ac806380:;
			{
				return (_1aa12db77_IsStr(&_33314_x) && (_1aa12b57b_ReadStr(_self_) > _1aa12b57b_ReadStr(&_33314_x)));;
			}
		}
		else if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac8063e6:;
			{
				return (_1aa12acc8_ReadI64(_self_) > _1aa12ba98_AsI64(&_33314_x));;
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac80645c:;
			{
				return (_1aa12b05e_ReadU64(_self_) > _1aa12bd2e_AsU64(&_33314_x));;
			}
		}
		else if (_1aa12de0d_IsF64(_self_)) {
			_case_begin_1ac8064d4:;
			{
				return (_1aa12b812_ReadF64(_self_) > _1aa12c0b5_AsF64(&_33314_x));;
			}
		}
		else {
			_case_begin_1ac80403c:;
			{
				return false;;
			}
		}
		_match_end_1ac803e60:;
	};
}



inline jule::Bool _1aa130cbc_GtEq(_1aa1293c0_Const* _self_, _1aa1293c0_Const _35616_x) {
	{
		
		if (_1aa12db77_IsStr(_self_)) {
			_case_begin_1ac809086:;
			{
				return (_1aa12db77_IsStr(&_35616_x) && (_1aa12b57b_ReadStr(_self_) >= _1aa12b57b_ReadStr(&_35616_x)));;
			}
		}
		else if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac8090ec:;
			{
				return (_1aa12acc8_ReadI64(_self_) >= _1aa12ba98_AsI64(&_35616_x));;
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac809163:;
			{
				return (_1aa12b05e_ReadU64(_self_) >= _1aa12bd2e_AsU64(&_35616_x));;
			}
		}
		else if (_1aa12de0d_IsF64(_self_)) {
			_case_begin_1ac8091da:;
			{
				return (_1aa12b812_ReadF64(_self_) >= _1aa12c0b5_AsF64(&_35616_x));;
			}
		}
		else {
			_case_begin_1ac806c43:;
			{
				return false;;
			}
		}
		_match_end_1ac806b66:;
	};
}



inline jule::Bool _1aa13110d_Add(_1aa1293c0_Const* _self_, _1aa1293c0_Const _37719_x) {
	{
		
		if (_1aa12db77_IsStr(_self_)) {
			_case_begin_1ac80bc8c:;
			{
				if ((!(_1aa12db77_IsStr(&_37719_x)))) {
					return false;;
				};
				_1aa12cb87_SetStr(_self_, (_1aa12b57b_ReadStr(_self_) + _1aa12b57b_ReadStr(&_37719_x)));
			}
		}
		else if (_1aa12de0d_IsF64(_self_)) {
			_case_begin_1ac80bd03:;
			{
				_1aa12ce40_SetF64(_self_, (_1aa12b812_ReadF64(_self_) + _1aa12c0b5_AsF64(&_37719_x)));
			}
		}
		else if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac80bd69:;
			{
				if (_1aa12de0d_IsF64(&_37719_x)) {
					_1aa12ce40_SetF64(_self_, (_1aa12c0b5_AsF64(_self_) + _1aa12b812_ReadF64(&_37719_x)));
				} else {
					_1aa12c36d_SetI64(_self_, (_1aa12acc8_ReadI64(_self_) + _1aa12ba98_AsI64(&_37719_x)));
				};
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac80bde1:;
			{
				if (_1aa12de0d_IsF64(&_37719_x)) {
					_1aa12ce40_SetF64(_self_, (_1aa12c0b5_AsF64(_self_) + _1aa12b812_ReadF64(&_37719_x)));
				} else {
					_1aa12c626_SetU64(_self_, (jule::U64)(_1aa12b05e_ReadU64(_self_) + _1aa12bd2e_AsU64(&_37719_x)));
				};
			}
		}
		else {
			_case_begin_1ac809949:;
			{
				return false;;
			}
		}
		_match_end_1ac80986c:;
	};
	return true;;
}



inline jule::Bool _1aa13144e_Sub(_1aa1293c0_Const* _self_, _1aa1293c0_Const _40619_x) {
	{
		
		if (_1aa12de0d_IsF64(_self_)) {
			_case_begin_1ac811ab6:;
			{
				_1aa12ce40_SetF64(_self_, (_1aa12b812_ReadF64(_self_) - _1aa12c0b5_AsF64(&_40619_x)));
			}
		}
		else if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac811b2c:;
			{
				if (_1aa12de0d_IsF64(&_40619_x)) {
					_1aa12ce40_SetF64(_self_, (_1aa12c0b5_AsF64(_self_) - _1aa12b812_ReadF64(&_40619_x)));
				} else {
					_1aa12c36d_SetI64(_self_, (_1aa12acc8_ReadI64(_self_) - _1aa12ba98_AsI64(&_40619_x)));
				};
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac811b93:;
			{
				if (_1aa12de0d_IsF64(&_40619_x)) {
					_1aa12ce40_SetF64(_self_, (_1aa12c0b5_AsF64(_self_) - _1aa12b812_ReadF64(&_40619_x)));
				} else {
					_1aa12c626_SetU64(_self_, (jule::U64)(_1aa12b05e_ReadU64(_self_) - _1aa12bd2e_AsU64(&_40619_x)));
				};
			}
		}
		else {
			_case_begin_1ac7d2867:;
			{
				return false;;
			}
		}
		_match_end_1ac7d2757:;
	};
	return true;;
}



inline jule::Bool _1aa131790_Mul(_1aa1293c0_Const* _self_, _1aa1293c0_Const _43019_x) {
	{
		
		if (_1aa12de0d_IsF64(_self_)) {
			_case_begin_1ac8159cc:;
			{
				_1aa12ce40_SetF64(_self_, (_1aa12b812_ReadF64(_self_) * _1aa12c0b5_AsF64(&_43019_x)));
			}
		}
		else if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac815a43:;
			{
				if (_1aa12de0d_IsF64(&_43019_x)) {
					_1aa12ce40_SetF64(_self_, (_1aa12c0b5_AsF64(_self_) * _1aa12b812_ReadF64(&_43019_x)));
				} else {
					_1aa12c36d_SetI64(_self_, (_1aa12acc8_ReadI64(_self_) * _1aa12ba98_AsI64(&_43019_x)));
				};
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac815aa9:;
			{
				if (_1aa12de0d_IsF64(&_43019_x)) {
					_1aa12ce40_SetF64(_self_, (_1aa12c0b5_AsF64(_self_) * _1aa12b812_ReadF64(&_43019_x)));
				} else {
					_1aa12c626_SetU64(_self_, (jule::U64)(_1aa12b05e_ReadU64(_self_) * _1aa12bd2e_AsU64(&_43019_x)));
				};
			}
		}
		else {
			_case_begin_1ac8150a3:;
			{
				return false;;
			}
		}
		_match_end_1ac814eb5:;
	};
	return true;;
}



inline jule::Bool _1aa131ad1_Div(_1aa1293c0_Const* _self_, _1aa1293c0_Const _45819_x) {
	{
		
		if (_1aa12de0d_IsF64(_self_)) {
			_case_begin_1ac8198d2:;
			{
				jule::F64 _4614_l = _1aa12c0b5_AsF64(&_45819_x);;
				if ((_4614_l == 0LL)) {
					return false;;
				};
				_1aa12ce40_SetF64(_self_, ({ jule::F64 __jule_x = _1aa12b812_ReadF64(_self_); jule::F64 __jule_y = _4614_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac819948:;
			{
				jule::F64 _4674_l = _1aa12c0b5_AsF64(&_45819_x);;
				if ((_4674_l == 0LL)) {
					return false;;
				};
				_1aa12ce40_SetF64(_self_, ({ jule::F64 __jule_x = _1aa12c0b5_AsF64(_self_); jule::F64 __jule_y = _4674_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac8199ae:;
			{
				jule::F64 _4734_l = _1aa12c0b5_AsF64(&_45819_x);;
				if ((_4734_l == 0LL)) {
					return false;;
				};
				_1aa12ce40_SetF64(_self_, ({ jule::F64 __jule_x = _1aa12c0b5_AsF64(_self_); jule::F64 __jule_y = _4734_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1ac818ea8:;
			{
				return false;;
			}
		}
		_match_end_1ac818dba:;
	};
	return true;;
}



inline jule::Bool _1aa131e22_Mod(_1aa1293c0_Const* _self_, _1aa1293c0_Const _48719_x) {
	{
		
		if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac81d7b5:;
			{
				jule::I64 _4904_l = _1aa12ba98_AsI64(&_48719_x);;
				if ((_4904_l == 0LL)) {
					return false;;
				};
				_1aa12c36d_SetI64(_self_, ({ jule::I64 __jule_x = _1aa12acc8_ReadI64(_self_); jule::I64 __jule_y = _4904_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac81dbc2:;
			{
				jule::U64 _4964_l = _1aa12bd2e_AsU64(&_48719_x);;
				if ((_4964_l == 0LLU)) {
					return false;;
				};
				_1aa12c626_SetU64(_self_, ({ jule::U64 __jule_x = _1aa12b05e_ReadU64(_self_); jule::U64 __jule_y = _4964_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1ac81d73d:;
			{
				return false;;
			}
		}
		_match_end_1ac81d62d:;
	};
	return true;;
}



inline jule::Bool _1aa132263_BitwiseAnd(_1aa1293c0_Const* _self_, _1aa1293c0_Const _50926_x) {
	{
		
		if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac821631:;
			{
				_1aa12c36d_SetI64(_self_, (_1aa12acc8_ReadI64(_self_) & _1aa12ba98_AsI64(&_50926_x)));
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac821a3d:;
			{
				_1aa12c626_SetU64(_self_, (_1aa12b05e_ReadU64(_self_) & _1aa12bd2e_AsU64(&_50926_x)));
			}
		}
		else {
			_case_begin_1ac8215a9:;
			{
				return false;;
			}
		}
		_match_end_1ac821499:;
	};
	return true;;
}



inline jule::Bool _1aa1325a4_BitwiseOr(_1aa1293c0_Const* _self_, _1aa1293c0_Const _52325_x) {
	{
		
		if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac823402:;
			{
				_1aa12c36d_SetI64(_self_, (_1aa12acc8_ReadI64(_self_) | _1aa12ba98_AsI64(&_52325_x)));
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac82380e:;
			{
				_1aa12c626_SetU64(_self_, (_1aa12b05e_ReadU64(_self_) | _1aa12bd2e_AsU64(&_52325_x)));
			}
		}
		else {
			_case_begin_1ac82337a:;
			{
				return false;;
			}
		}
		_match_end_1ac82326a:;
	};
	return true;;
}



inline jule::Bool _1aa1328e5_Xor(_1aa1293c0_Const* _self_, _1aa1293c0_Const _53719_x) {
	{
		
		if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac8251c3:;
			{
				_1aa12c36d_SetI64(_self_, (_1aa12acc8_ReadI64(_self_) ^ _1aa12ba98_AsI64(&_53719_x)));
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac8255d0:;
			{
				_1aa12c626_SetU64(_self_, (_1aa12b05e_ReadU64(_self_) ^ _1aa12bd2e_AsU64(&_53719_x)));
			}
		}
		else {
			_case_begin_1ac82514b:;
			{
				return false;;
			}
		}
		_match_end_1ac82503b:;
	};
	return true;;
}



inline jule::Bool _1aa132c36_Lshift(_1aa1293c0_Const* _self_, _1aa1293c0_Const _55122_x) {
	{
		
		if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac826e94:;
			{
				jule::I64 _5544_l = _1aa12ba98_AsI64(_self_);;
				if ((_5544_l < 0LL)) {
					jule::U64 _5565_r = _1aa12bd2e_AsU64(&_55122_x);;
					_1aa12c36d_SetI64(_self_, ({ jule::I64 __jule_x = _5544_l; jule::U64 __jule_y = _5565_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1aa1333da_lshiftUnsig(_self_, &(_55122_x));
				};
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac8273a1:;
			{
				_1aa1333da_lshiftUnsig(_self_, &(_55122_x));
			}
		}
		else {
			_case_begin_1ac826e1c:;
			{
				return false;;
			}
		}
		_match_end_1ac826d0c:;
	};
	return true;;
}



inline jule::Bool _1aa133077_Rshift(_1aa1293c0_Const* _self_, _1aa1293c0_Const _57122_x) {
	{
		
		if (_1aa12d3c4_IsI64(_self_)) {
			_case_begin_1ac829529:;
			{
				jule::I64 _5744_l = _1aa12ba98_AsI64(_self_);;
				if ((_5744_l < 0LL)) {
					jule::U64 _5765_r = _1aa12bd2e_AsU64(&_57122_x);;
					_1aa12c36d_SetI64(_self_, ({ jule::I64 __jule_x = _5744_l; jule::U64 __jule_y = _5765_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1aa13371a_rshiftUnsig(_self_, &(_57122_x));
				};
			}
		}
		else if (_1aa12d65a_IsU64(_self_)) {
			_case_begin_1ac829936:;
			{
				_1aa13371a_rshiftUnsig(_self_, &(_57122_x));
			}
		}
		else {
			_case_begin_1ac8294a2:;
			{
				return false;;
			}
		}
		_match_end_1ac8293a3:;
	};
	return true;;
}








inline jule::Bool _1ac4912c3_Token_eq(_1ac4912c3_Token *_self_, _1ac4912c3_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1ac49167a_Prec(_1ac4912c3_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b3010853:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b3010347:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b30103ad:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b30108b9:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b3010941:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1b300ed80:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b3010259:;
	};
}







inline void _1ac496eaa_Fill(_1ac496a59_File* _self_, jule::Slice<jule::U8> _1724_data) {
	(*(_self_))._field_Data=_1724_data;
}



inline jule::Str _1ac497241_Dir(_1ac496a59_File* _self_) {
	return _1b0989d6d_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1ac4974c7_Name(_1ac496a59_File* _self_) {
	return _1b0989994_Base((*(_self_))._field_Path);;
}



inline jule::Str _1ac497a9e_GetRow(_1ac496a59_File* _self_, jule::I64 _3818_row) {
	jule::I64 _397_n = 0LL;;
	jule::I64 _407_lineStart = 0LL;;
	jule::I64 _417_i = 0LL;;
	for (; (_417_i < (*(_self_))._field_Data.len()); (_417_i)++) {
		{
			if (((*(_self_))._field_Data[_417_i] != '\n')) {
				goto _iter_next_1b301610b;
			};
			(_397_n)++;
			if ((_397_n == _3818_row)) {
				return __jule_bytesToStr((*(_self_))._field_Data.slice(_407_lineStart, _417_i));;
			};
			_407_lineStart=(_417_i + 1LL);
		}
	_iter_next_1b301610b:;
	}
	_iter_end_1b301610b:;;
	return jule::Str();;
}








inline jule::Bool _1ac498bb0_kindPair_eq(_1ac498bb0_kindPair *_self_, _1ac498bb0_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1ac4a025a_pushErr(_1ac49eb94_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args) {
	{ jule::Slice<_1b08b6838_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ac49995d_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44736_args)); };
}



inline void _1ac4a07bb_lex(_1ac49eb94_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1ac4a29dd_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1ac4912c3_Token> _4628_token = _1ac4a3ec8_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1ac4912c3_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1b304414a:;
	}
	_iter_end_1b304414a:;;
}



inline jule::Str _1ac4a0b0c_id(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I64 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec89c1_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1ac494a02_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I64 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec89c1_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1ac494e75_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1ac494a02_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return __jule_bytesToStr((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1b30472c4:;
	}
	_iter_end_1b30472c4:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return __jule_bytesToStr((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1ac4a0d93_resume(_1ac49eb94_lex* _self_) {
	jule::I64 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4967_i]);;
			if (_1ac494507_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1b304b608:;
						{
							_1ac4a29dd_newLine(_self_);
						}
					}
					else {
						_case_begin_1b304adcc:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1b304b1a7:;
				};
				goto _iter_next_1b304700a;
			};
			jule::I64 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1b304a99d;
					};
				}
			_iter_next_1b304a99d:;
			}
			_iter_end_1b304a99d:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1b304700a:;
	}
	_iter_end_1b304700a:;;
	return nullptr;;
}



inline void _1ac4a114b_lexLineComment(_1ac49eb94_lex* _self_, jule::Ptr<_1ac4912c3_Token>* _52135_token) {
	jule::I64 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1b304dbd2;
			};
		}
	_iter_next_1b304dbd2:;
	}
	_iter_end_1b304dbd2:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52135_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1ac4a1404_lexRangeComment(_1ac49eb94_lex* _self_, jule::Ptr<_1ac4912c3_Token>* _53636_token) {
	jule::I64 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1b3052378;
			};
			if ((_5404_r == '\n')) {
				_1ac4a29dd_newLine(_self_);
				goto _iter_next_1b3052378;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53636_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1b3052378:;
	}
	_iter_end_1b3052378:;;
	_1ac4a025a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1ac4a1745_num(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1ac49d4ab_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1b305903e;
	};
	__jule_func_result=_1ac49d2d0_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1b305903e;
	};
	__jule_func_result=_1ac49ba70_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1b305903e;
	};
	__jule_func_result=_1ac49b7a6_commonNum(_56420_txt);
	_julec_label_1b305903e:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1ac4a1a86_escapeSeq(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1b305cd45;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1b305aaac:;
			{
				(*(_self_))._field_pos+=2LL;
				return __jule_bytesToStr((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b305ab23:;
			{
				_5877_seq=_1ac49dac7_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1b305a78d:;
			{
				_5877_seq=_1ac49dd91_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b305a804:;
			{
				_5877_seq=_1ac49e15a_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1b305a062:;
			{
				_5877_seq=_1ac49e424_byteEscape(_58626_txt);
			}
		}
		_match_end_1b305a617:;
	};
	_julec_label_1b305cd45:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1ac4a025a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1ac4a1e82_getRune(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1ac4a1a86_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I64 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec89c1_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return __jule_strFromRune(_6203_r);;
}



inline jule::Str _1ac4a22c3_lexRune(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_1b097ade7_StrBuilder _6267_run = static__1b097b1e4_New(8LL);;
	_1b0984e9a_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _6297_n = 0LL;;
	jule::I64 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1b3061b4b;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1ac4a025a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1ac4a29dd_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1ac4a1e82_getRune(_self_, &(_6424_part), false);;
			_1b0984be2_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_1c7eca7b4_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1b3061b4b;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1b3061b4b:;
	}
	_iter_end_1b3061b4b:;;
	if ((_6297_n == 0LL)) {
		_1ac4a025a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1ac4a025a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _1b09854d9_Str(&_6267_run);;
}



inline jule::Str _1ac4a2559_lexStr(_1ac49eb94_lex* _self_) {
	_1b097ade7_StrBuilder _6667_s = static__1b097b1e4_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_1b0984e9a_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1b3067998;
			};
			if ((_6744_ch == '\n')) {
				_1ac4a29dd_newLine(_self_);
				if ((!(_6693_raw))) {
					_1ac4a025a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1ac4a1e82_getRune(_self_, &(_6868_part), _6693_raw);;
			_1b0984be2_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_1c7eca7b4_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1b3067998;
			};
		}
	_iter_next_1b3067998:;
	}
	_iter_end_1b3067998:;;
	return _1b09854d9_Str(&_6667_s);;
}



inline void _1ac4a29dd_newLine(_1ac49eb94_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1ac4a304e_isOp(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1ac4912c3_Token>* _70763_t) {
	if ((!(_1ac499d26_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70763_t))))._field_Kind=_70734_kind;
	(*((*(_70763_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1ac4a344a_lexBasicOps(_1ac49eb94_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1ac4912c3_Token>* _71745_tok) {
	{
		auto expr = &(_1ac49941e_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b306e153:;
		if (it != expr_end) {
			_1ac498bb0_kindPair *_71810_pair = it;
			{
				if (_1ac4a304e_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1b306e153:;
			++it;
			goto _iter_begin_1b306e153;
		}
		_iter_end_1b306e153:;
	};
	return false;;
}



inline jule::Bool _1ac4a3846_lexId(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1ac4912c3_Token>* _72640_t) {
	jule::Str _7273_lex = _1ac4a0b0c_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1ac4a3c42_lexNum(_1ac49eb94_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1ac4912c3_Token>* _73641_t) {
	jule::Str _7373_lex = _1ac4a1745_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1ac4912c3_Token> _1ac4a3ec8_token(_1ac49eb94_lex* _self_) {
	jule::Ptr<_1ac4912c3_Token> _7487_t = jule::new_ptr<_1ac4912c3_Token>(_1ac4912c3_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1ac4a0d93_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1ac4a3c42_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1b3076314:;
			{
				goto _match_end_1b30741be;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1b3074d29:;
			{
				(*_7487_t.alloc)._field_Kind=_1ac4a22c3_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1b3074d90:;
			{
				(*_7487_t.alloc)._field_Kind=_1ac4a2559_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1ac499d26_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1b3074e06:;
			{
				_1ac4a114b_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1ac499d26_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1b3074e6c:;
			{
				_1ac4a1404_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1ac4a344a_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1b3074ed3:;
			{
				goto _match_end_1b30741be;
			}
		}
		else if (_1ac4a3846_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1b3075049:;
			{
				{
					auto expr = &(_1ac4990de_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b307a35c:;
					if (it != expr_end) {
						_1ac498bb0_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1b307a35c;
							};
						}
						_iter_next_1b307a35c:;
						++it;
						goto _iter_begin_1b307a35c;
					}
					_iter_end_1b307a35c:;
				};
			}
		}
		else {
			_case_begin_1b3074cb3:;
			{
				jule::I32 _7924_r;
				jule::I64 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec89c1_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1ac4a025a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7924_r, &__jule_any_type6); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1b30741be:;
	};
	(*(_self_))._field_column+=_1c7eca7b4_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}












inline jule::Bool _1ac4a577c_Node_eq(_1ac4a577c_Node *_self_, _1ac4a577c_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1ac4a677d_TypeDecl_eq(_1ac4a677d_TypeDecl *_self_, _1ac4a677d_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}


















inline jule::Bool _1ac4a7828_SptrTypeDecl_eq(_1ac4a7828_SptrTypeDecl *_self_, _1ac4a7828_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1ac4a7bad_SlcTypeDecl_eq(_1ac4a7bad_SlcTypeDecl *_self_, _1ac4a7bad_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1ac4a82a7_PtrTypeDecl_eq(_1ac4a82a7_PtrTypeDecl *_self_, _1ac4a82a7_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1ac4a864d_IsUnsafe(_1ac4a82a7_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1ac4a8a49_ArrTypeDecl_eq(_1ac4a8a49_ArrTypeDecl *_self_, _1ac4a8a49_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1ac4a8de0_AutoSized(_1ac4a8a49_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1ac4a9297_MapTypeDecl_eq(_1ac4a9297_MapTypeDecl *_self_, _1ac4a9297_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1ac4aaab2_Expr_eq(_1ac4aaab2_Expr *_self_, _1ac4aaab2_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1ac4aad7b_RangeExpr_eq(_1ac4aad7b_RangeExpr *_self_, _1ac4aad7b_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ac4ab486_UseExpr_eq(_1ac4ab486_UseExpr *_self_, _1ac4ab486_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ac4aba4c_LitExpr_eq(_1ac4aba4c_LitExpr *_self_, _1ac4aba4c_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1ac4abe26_UnsafeExpr_eq(_1ac4abe26_UnsafeExpr *_self_, _1ac4abe26_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac4ac3cc_IdentExpr_eq(_1ac4ac3cc_IdentExpr *_self_, _1ac4ac3cc_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1ac4acb6e_UnaryExpr_eq(_1ac4acb6e_UnaryExpr *_self_, _1ac4acb6e_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac4ad048_VariadicExpr_eq(_1ac4ad048_VariadicExpr *_self_, _1ac4ad048_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac4ad422_CastExpr_eq(_1ac4ad422_CastExpr *_self_, _1ac4ad422_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ac4adbc5_SubIdentExpr_eq(_1ac4adbc5_SubIdentExpr *_self_, _1ac4adbc5_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1ac4ae17b_BinaryExpr_eq(_1ac4ae17b_BinaryExpr *_self_, _1ac4ae17b_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1ac4aeb93_Unhandled(_1ac4ae7db_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1ac4aee29_Ignored(_1ac4ae7db_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1ac4b02d1_FieldExprPair_eq(_1ac4b02d1_FieldExprPair *_self_, _1ac4b02d1_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1ac4b18dc_KeyValPair_eq(_1ac4b18dc_KeyValPair *_self_, _1ac4b18dc_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1ac4b2a75_IndexingExpr_eq(_1ac4b2a75_IndexingExpr *_self_, _1ac4b2a75_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ac4b31d5_SlicingExpr_eq(_1ac4b31d5_SlicingExpr *_self_, _1ac4b31d5_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1ac4b3988_GenericDecl_eq(_1ac4b3988_GenericDecl *_self_, _1ac4b3988_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1ac4b3d62_LabelSt_eq(_1ac4b3d62_LabelSt *_self_, _1ac4b3d62_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1ac4b423b_GotoSt_eq(_1ac4b423b_GotoSt *_self_, _1ac4b423b_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1ac4b4538_FallSt_eq(_1ac4b4538_FallSt *_self_, _1ac4b4538_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1ac4b4b98_AssignLeft_eq(_1ac4b4b98_AssignLeft *_self_, _1ac4b4b98_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ac4b613e_Stmt_eq(_1ac4b613e_Stmt *_self_, _1ac4b613e_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1ac4b6edb_ParamDecl_eq(_1ac4b6edb_ParamDecl *_self_, _1ac4b6edb_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1ac4b7393_IsSelf(_1ac4b6edb_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1ac4b87d4_IsAnon(_1ac4b843d_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1ac4b99c2_RetSt_eq(_1ac4b99c2_RetSt *_self_, _1ac4b99c2_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac4ba242_Iter_eq(_1ac4ba242_Iter *_self_, _1ac4ba242_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1ac4ba5d8_IsInf(_1ac4ba242_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1ac4baa6c_WhileKind_eq(_1ac4baa6c_WhileKind *_self_, _1ac4baa6c_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1ac4bae13_IsWhileNext(_1ac4baa6c_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1ac4bb474_RangeKind_eq(_1ac4bb474_RangeKind *_self_, _1ac4bb474_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1ac4bb84d_BreakSt_eq(_1ac4bb84d_BreakSt *_self_, _1ac4bb84d_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1ac4bbc27_ContSt_eq(_1ac4bbc27_ContSt *_self_, _1ac4bbc27_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1ac4bc1cd_If_eq(_1ac4bc1cd_If *_self_, _1ac4bc1cd_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1ac4bc5a7_Else_eq(_1ac4bc5a7_Else *_self_, _1ac4bc5a7_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1ac4bd29a_TypeAliasDecl_eq(_1ac4bd29a_TypeAliasDecl *_self_, _1ac4bd29a_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}


















inline jule::Bool _1ac4bed3a_EnumItemDecl_eq(_1ac4bed3a_EnumItemDecl *_self_, _1ac4bed3a_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ac4c1226_TypeEnumItemDecl_eq(_1ac4c1226_TypeEnumItemDecl *_self_, _1ac4c1226_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1ac4c1b50_FieldDecl_eq(_1ac4c1b50_FieldDecl *_self_, _1ac4c1b50_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}


















inline jule::Bool _1ac4c4757_Field_eq(_1ac4c4757_Field *_self_, _1ac4c4757_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1ac4c9938_FieldIns> _1ac4c4b42_instance(jule::Ptr<_1ac4c4757_Field> _self_) {
	return jule::new_ptr<_1ac4c9938_FieldIns>(_1ac4c9938_FieldIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=_self_, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Default=jule::Ptr<_1ac60a55d_Data>(nullptr)});;
}








inline jule::Bool _1ac4c676a_Operators_eq(_1ac4c676a_Operators *_self_, _1ac4c676a_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac4c7b23_instance(jule::Ptr<_1ac4c767d_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _1007_ins = jule::new_ptr<_1ac4ca4d8_StructIns>(_1ac4ca4d8_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4c9938_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4c9938_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5a2527_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1ac4e33ad_new(), ._field_Operators=_1ac4c676a_Operators{._field_Eq=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Add=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Div=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2c03689:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _10715_s = *it;
			{
				(*(_1007_ins))._field_Statics=jule::append((*_1007_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac5a2527_Var>((*(_10715_s))); __jule_collection; }));
			}
			_iter_next_1b2c03689:;
			++it;
			goto _iter_begin_1b2c03689;
		}
		_iter_end_1b2c03689:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2c04547:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c4757_Field> _11115_f = *it;
			{
				jule::Ptr<_1ac4c9938_FieldIns> _1128_f2 = _1ac4c4b42_instance(_11115_f);;
				(*(_1128_f2))._field_Owner=_1007_ins;
				(*_1007_ins.alloc)._field_Fields=jule::append((*_1007_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4c9938_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1128_f2; __jule_collection; }));
				if ((((!((*_11115_f.alloc)._field_Mutable)) && ((*((*_11115_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1ac63ebbe_Mutable((*((*(_11115_f))._field_Kind))._field_Kind))) {
					(*_1007_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1b2c04547:;
			++it;
			goto _iter_begin_1b2c04547;
		}
		_iter_end_1b2c04547:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_1007_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_1007_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4dbd46_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b2c0889d:;
			if (it != expr_end) {
				jule::Ptr<_1ac4dbd46_Fn> _12416_f = *it;
				{
					jule::Ptr<_1ac4dbd46_Fn> _1259_fins = jule::new_ptr<_1ac4dbd46_Fn>((*(_12416_f)));;
					(*_1259_fins.alloc)._field_Instances=nullptr;
					(*_1007_ins.alloc)._field_Methods=jule::append((*_1007_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1259_fins; __jule_collection; }));
				}
				_iter_next_1b2c0889d:;
				++it;
				goto _iter_begin_1b2c0889d;
			}
			_iter_end_1b2c0889d:;
		};
	};
	return _1007_ins;;
}



inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac4c7e31_appendInstance(_1ac4c767d_Struct* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _13635_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2c08c55:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ca4d8_StructIns> _14215_ains = *it;
			{
				if (_1ac4cb187_Same(_14215_ains.ptr(), (*(_13635_ins)))) {
					return _14215_ains;;
				};
			}
			_iter_next_1b2c08c55:;
			++it;
			goto _iter_begin_1b2c08c55;
		}
		_iter_end_1b2c08c55:;
	};
	{ jule::Slice<jule::Ptr<_1ac4ca4d8_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13635_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac4c832c_FindMethod(_1ac4c767d_Struct* _self_, jule::Str _15426_ident, jule::Bool _15438_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33ea7a9:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _15515_f = *it;
			{
				if ((((*(_15515_f))._field_Statically == _15438_statically) && ((*_15515_f.alloc)._field_Ident == _15426_ident))) {
					return _15515_f;;
				};
			}
			_iter_next_1b33ea7a9:;
			++it;
			goto _iter_begin_1b33ea7a9;
		}
		_iter_end_1b33ea7a9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac4c866d_FindStatic(_1ac4c767d_Struct* _self_, jule::Str _16526_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33ebada:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _16615_v = *it;
			{
				if (((*(_16615_v))._field_Ident == _16526_ident)) {
					return _16615_v;;
				};
			}
			_iter_next_1b33ebada:;
			++it;
			goto _iter_begin_1b33ebada;
		}
		_iter_end_1b33ebada:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac4c4757_Field> _1ac4c89ae_FindField(_1ac4c767d_Struct* _self_, jule::Str _17625_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33ecadb:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c4757_Field> _17715_f = *it;
			{
				if (((*(_17715_f))._field_Ident == _17625_ident)) {
					return _17715_f;;
				};
			}
			_iter_next_1b33ecadb:;
			++it;
			goto _iter_begin_1b33ecadb;
		}
		_iter_end_1b33ecadb:;
	};
	return nullptr;;
}



inline jule::Bool _1ac4c8d00_IsImplements(_1ac4c767d_Struct* _self_, jule::Ptr<_1ac5008a4_Trait> _18624_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33edacb:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> *_18710_it = it;
			{
				if ((_18624_t == (*(_18710_it)))) {
					return true;;
				};
			}
			_iter_next_1b33edacb:;
			++it;
			goto _iter_begin_1b33edacb;
		}
		_iter_end_1b33edacb:;
	};
	return false;;
}



inline jule::Bool _1ac4c9141_IsUses(_1ac4c767d_Struct* _self_, jule::Ptr<_1ac4c767d_Struct> _19618_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33ee55a:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> *_19710_u = it;
			{
				while ((_19618_s == (*(_19710_u)))) {
					{
						return true;;
					}
				_iter_next_1b3400083:;
				}
				_iter_end_1b3400083:;;
			}
			_iter_next_1b33ee55a:;
			++it;
			goto _iter_begin_1b33ee55a;
		}
		_iter_end_1b33ee55a:;
	};
	return false;;
}








inline jule::Bool _1ac4c9938_FieldIns_eq(_1ac4c9938_FieldIns *_self_, _1ac4c9938_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1ac4ca890_Str(_1ac4ca4d8_StructIns* _self_) {
	_1b097ade7_StrBuilder _2427_kind = static__1b097b1e4_New(32LL);;
	_1b0984be2_WriteStr(&_2427_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1b0984e9a_WriteByte(&_2427_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3402c9a:;
			if (it != expr_end) {
				jule::I64 _2468_i = it - expr->begin();
				jule::Ptr<_1ac63b902_InsGeneric> *_24611_g = it;
				{
					_1b0984be2_WriteStr(&_2427_kind, _1ac63d6d4_Str((*((*(_24611_g))))._field_Kind.ptr()));
					if ((_2468_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1b0984e9a_WriteByte(&_2427_kind, ',');
					};
				}
				_iter_next_1b3402c9a:;
				++it;
				_2468_i++;
				goto _iter_begin_1b3402c9a;
			}
			_iter_end_1b3402c9a:;
		};
		_1b0984e9a_WriteByte(&_2427_kind, ']');
	};
	return _1b09854d9_Str(&_2427_kind);;
}



inline jule::Bool _1ac4cabd1_Equal(jule::Ptr<_1ac4ca4d8_StructIns> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _25818_other) {
	jule::Ptr<_1ac4ca4d8_StructIns> _2593_s = _1ac642012_Struct(_25818_other.ptr());;
	if ((_2593_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2593_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2593_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2727_i = 0LL;;
	for (; (_2727_i < (*_self_.alloc)._field_Generics.len()); (_2727_i)++) {
		{
			if ((!(_1ac63da25_Equal((*((*(_self_))._field_Generics[_2727_i]))._field_Kind, (*((*(_2593_s))._field_Generics[_2727_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1b3407145:;
	}
	_iter_end_1b3407145:;;
	return true;;
}



inline jule::Bool _1ac4cb187_Same(_1ac4ca4d8_StructIns* _self_, jule::Ptr<_1ac4ca4d8_StructIns> _28616_s) {
	if ((((*(_self_))._field_Decl != (*(_28616_s))._field_Decl) || ((*_28616_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3409367:;
		if (it != expr_end) {
			jule::I64 _2907_i = it - expr->begin();
			jule::Ptr<_1ac63b902_InsGeneric> *_29010_g = it;
			{
				jule::Ptr<_1ac63b902_InsGeneric> _2914_g2 = (*(_28616_s))._field_Generics[_2907_i];;
				if ((((*((*((*(_29010_g))))._field_Kind))._field_BindIdent != (*(*(_2914_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1ac63da25_Equal((*((*(_29010_g))))._field_Kind, (*(_2914_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b3409367:;
			++it;
			_2907_i++;
			goto _iter_begin_1b3409367;
		}
		_iter_end_1b3409367:;
	};
	return true;;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac4cb583_FindMethod(_1ac4ca4d8_StructIns* _self_, jule::Str _30126_ident, jule::Bool _30138_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b340c634:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _30215_f = *it;
			{
				if ((((*(_30215_f))._field_Statically == _30138_statically) && ((*_30215_f.alloc)._field_Ident == _30126_ident))) {
					return _30215_f;;
				};
			}
			_iter_next_1b340c634:;
			++it;
			goto _iter_begin_1b340c634;
		}
		_iter_end_1b340c634:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac4c9938_FieldIns> _1ac4cb8c4_FindField(_1ac4ca4d8_StructIns* _self_, jule::Str _31225_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b340d965:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c9938_FieldIns> _31315_f = *it;
			{
				if (((*((*(_31315_f))._field_Decl))._field_Ident == _31225_ident)) {
					return _31315_f;;
				};
			}
			_iter_next_1b340d965:;
			++it;
			goto _iter_begin_1b340d965;
		}
		_iter_end_1b340d965:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac4cbc15_FindStatic(_1ac4ca4d8_StructIns* _self_, jule::Str _32326_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b340e229:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _32415_v = *it;
			{
				if (((*(_32415_v))._field_Ident == _32326_ident)) {
					return _32415_v;;
				};
			}
			_iter_next_1b340e229:;
			++it;
			goto _iter_begin_1b340e229;
		}
		_iter_end_1b340e229:;
	};
	return nullptr;;
}








inline jule::Bool _1ac4ce300_OperandExprModel_eq(_1ac4ce300_OperandExprModel *_self_, _1ac4ce300_OperandExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1ac4ce7ea_BinaryExprModel_eq(_1ac4ce7ea_BinaryExprModel *_self_, _1ac4ce7ea_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1ac4cebc4_UnaryExprModel_eq(_1ac4cebc4_UnaryExprModel *_self_, _1ac4cebc4_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1ac4d0202_StructArgExprModel_eq(_1ac4d0202_StructArgExprModel *_self_, _1ac4d0202_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ac4d0895_AllocStructLitExprModel_eq(_1ac4d0895_AllocStructLitExprModel *_self_, _1ac4d0895_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1ac4d0e28_CastingExprModel_eq(_1ac4d0e28_CastingExprModel *_self_, _1ac4d0e28_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_ExprKind == _self_->_field_ExprKind);
}














inline jule::Bool _1ac4d215a_IndexingExprModel_eq(_1ac4d215a_IndexingExprModel *_self_, _1ac4d215a_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1ac4d29da_KeyValPairExprModel_eq(_1ac4d29da_KeyValPairExprModel *_self_, _1ac4d29da_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1ac4d3447_SlicingExprModel_eq(_1ac4d3447_SlicingExprModel *_self_, _1ac4d3447_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1ac4d39ca_TraitSubIdentExprModel_eq(_1ac4d39ca_TraitSubIdentExprModel *_self_, _1ac4d39ca_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1ac4d436b_StructSubIdentExprModel_eq(_1ac4d436b_StructSubIdentExprModel *_self_, _1ac4d436b_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1ac4d4712_StructStaticIdentExprModel_eq(_1ac4d4712_StructStaticIdentExprModel *_self_, _1ac4d4712_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1ac4d52b2_BuiltinOutCallExprModel_eq(_1ac4d52b2_BuiltinOutCallExprModel *_self_, _1ac4d52b2_BuiltinOutCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1ac4d568b_BuiltinOutlnCallExprModel_eq(_1ac4d568b_BuiltinOutlnCallExprModel *_self_, _1ac4d568b_BuiltinOutlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1ac4d5a65_BuiltinNewCallExprModel_eq(_1ac4d5a65_BuiltinNewCallExprModel *_self_, _1ac4d5a65_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1ac4d5e3e_BuiltinPanicCallExprModel_eq(_1ac4d5e3e_BuiltinPanicCallExprModel *_self_, _1ac4d5e3e_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac4d63e5_BuiltinMakeCallExprModel_eq(_1ac4d63e5_BuiltinMakeCallExprModel *_self_, _1ac4d63e5_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1ac4d67be_BuiltinAppendCallExprModel_eq(_1ac4d67be_BuiltinAppendCallExprModel *_self_, _1ac4d67be_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1ac4d6abb_BuiltinLenCallExprModel_eq(_1ac4d6abb_BuiltinLenCallExprModel *_self_, _1ac4d6abb_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ac4d6db8_BuiltinCapCallExprModel_eq(_1ac4d6db8_BuiltinCapCallExprModel *_self_, _1ac4d6db8_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ac4d7292_BuiltinDeleteCallExprModel_eq(_1ac4d7292_BuiltinDeleteCallExprModel *_self_, _1ac4d7292_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1ac4d766b_BuiltinCopyCallExprModel_eq(_1ac4d766b_BuiltinCopyCallExprModel *_self_, _1ac4d766b_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1ac4d7a45_BuiltinErrorCallExprModel_eq(_1ac4d7a45_BuiltinErrorCallExprModel *_self_, _1ac4d7a45_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1ac4d7d42_SizeofExprModel_eq(_1ac4d7d42_SizeofExprModel *_self_, _1ac4d7d42_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ac4d84e6_AlignofExprModel_eq(_1ac4d84e6_AlignofExprModel *_self_, _1ac4d84e6_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ac4d86d3_RuneExprModel_eq(_1ac4d86d3_RuneExprModel *_self_, _1ac4d86d3_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1ac4d8d54_FreeExprModel_eq(_1ac4d8d54_FreeExprModel *_self_, _1ac4d8d54_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1ac4da372_Param_eq(_1ac4da372_Param *_self_, _1ac4da372_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1ac4ddc9e_ParamIns> _1ac4da73a_instance(jule::Ptr<_1ac4da372_Param> _self_) {
	return jule::new_ptr<_1ac4ddc9e_ParamIns>(_1ac4ddc9e_ParamIns{._field_Decl=_self_, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr)});;
}



inline jule::Bool _1ac4da9c1_IsSelf(_1ac4da372_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1ac4dac57_IsRef(_1ac4da372_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1ac4dc2ec_IsVoid(_1ac4dbd46_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1ac4dc583_IsMethod(_1ac4dbd46_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1ac4da372_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1ac4da9c1_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1ac4dc819_IsEntryPoint(_1ac4dbd46_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1ac4dcaa0_IsInit(_1ac4dbd46_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1ac4dcd36_IsAnon(_1ac4dbd46_Fn* _self_) {
	return _1ac493e74_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1ac4dd0bc_AnyVar(_1ac4dbd46_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ac4dd353_instanceForce(jule::Ptr<_1ac4dbd46_Fn> _self_) {
	jule::Ptr<_1ac4dee04_FnIns> _1107_ins = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::new_ptr<_1ac534ec1_Scope>(_1ac534ec1_Scope{._field_Parent=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1ac4e33ad_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4ddc9e_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3417ee1:;
		if (it != expr_end) {
			jule::Ptr<_1ac4da372_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac4da73a_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1b3417ee1:;
			++it;
			goto _iter_begin_1b3417ee1;
		}
		_iter_end_1b3417ee1:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ac4dd5d9_instance(jule::Ptr<_1ac4dbd46_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1ac4dd353_instanceForce(_self_);;
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ac4dd8e7_appendInstance(_1ac4dbd46_Fn* _self_, jule::Ptr<_1ac4dee04_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1ac4dee04_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1ac4dee04_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b341cea2:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dee04_FnIns> _15415_ains = *it;
			{
				if (_1ac4e1994_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1b341cea2:;
			++it;
			goto _iter_begin_1b341cea2;
		}
		_iter_end_1b341cea2:;
	};
	{ jule::Slice<jule::Ptr<_1ac4dee04_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1ac4ddc9e_ParamIns_eq(_1ac4ddc9e_ParamIns *_self_, _1ac4ddc9e_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1ac4de145_Str(_1ac4ddc9e_ParamIns* _self_) {
	_1b097ade7_StrBuilder _1767_s = static__1b097b1e4_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1b0984be2_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_1b0984be2_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
	};
	if (_1ac4da9c1_IsSelf((*(_self_))._field_Decl)) {
		if (_1ac4dac57_IsRef((*(_self_))._field_Decl)) {
			_1b0984e9a_WriteByte(&_1767_s, '&');
		};
		_1b0984be2_WriteStr(&_1767_s, jule::Str::lit("self", 4));
		return _1b09854d9_Str(&_1767_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_1b0984be2_WriteStr(&_1767_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1b0984be2_WriteStr(&_1767_s, _1ac63d6d4_Str((*(_self_))._field_Kind));
	};
	return _1b09854d9_Str(&_1767_s);;
}







inline jule::Str _1ac4e0278_Str(_1ac4dee04_FnIns* _self_) {
	;
	return _1ac4e1cd5_GetKindStr(_self_, false);;
}



inline jule::Bool _1ac4e05b9_Equal(jule::Ptr<_1ac4dee04_FnIns> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _22918_other) {
	jule::Ptr<_1ac4dee04_FnIns> _2303_f = _1ac641c7b_Fn(_22918_other.ptr());;
	if ((_2303_f == nullptr)) {
		return false;;
	};
	return _1ac4e0a5e_EqualFn(_self_, &(_2303_f));;
}



inline jule::Bool _1ac4e0a5e_EqualFn(jule::Ptr<_1ac4dee04_FnIns> _self_, jule::Ptr<_1ac4dee04_FnIns>* _24021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1ac4dc2ec_IsVoid((*(_self_))._field_Decl) != _1ac4dc2ec_IsVoid((*((*(_24021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1ac4ddc9e_ParamIns>,jule::Ptr<_1ac4ddc9e_ParamIns>> _2503_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1ac4ddc9e_ParamIns>,jule::Ptr<_1ac4ddc9e_ParamIns>>((void*)__jule_anon1b34285ea, nullptr, nullptr);;
	if (((*((*(_24021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2827_i = 0LL;;
	for (; (_2827_i < (*_self_.alloc)._field_Params.len()); (_2827_i)++) {
		{
			if ((!(_2503_checkParams((*(_self_))._field_Params[_2827_i], (*((*(_24021_f))))._field_Params[_2827_i])))) {
				return false;;
			};
		}
	_iter_next_1b342e458:;
	}
	_iter_end_1b342e458:;;
	if ((!(_1ac4dc2ec_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1ac63da25_Equal((*_self_.alloc)._field_Result, (*((*(_24021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1ac4e0da0_equalTrait(jule::Ptr<_1ac4dee04_FnIns> _self_, jule::Ptr<_1ac4dee04_FnIns>* _29924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1ac4e0a5e_EqualFn(_self_, _29924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _1ac4e1136_Types(_1ac4dee04_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1b34350eb:;
			{
				return nullptr;;
			}
		}
		else if ((_1ac6427b5_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1b3435162:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1b3434b78:;
			{
				return (*(_1ac6427b5_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1b3434a68:;
	};
}



inline jule::Bool _1ac4e13bc_IsBuiltin(_1ac4dee04_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1ac4e1653_IsAnon(_1ac4dee04_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1ac4dcd36_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1ac4e1994_Same(_1ac4dee04_FnIns* _self_, jule::Ptr<_1ac4dee04_FnIns> _34216_f) {
	if ((((*(_self_))._field_Decl != (*(_34216_f))._field_Decl) || ((*_34216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3437d13:;
		if (it != expr_end) {
			jule::I64 _3477_i = it - expr->begin();
			jule::Ptr<_1ac63b902_InsGeneric> *_34710_g = it;
			{
				jule::Ptr<_1ac63b902_InsGeneric> _3484_g2 = (*(_34216_f))._field_Generics[_3477_i];;
				if ((((*((*((*(_34710_g))))._field_Kind))._field_BindIdent != (*(*(_3484_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1ac63da25_Equal((*((*(_34710_g))))._field_Kind, (*(_3484_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b3437d13:;
			++it;
			_3477_i++;
			goto _iter_begin_1b3437d13;
		}
		_iter_end_1b3437d13:;
	};
	return true;;
}



inline jule::Str _1ac4e1cd5_GetKindStr(_1ac4dee04_FnIns* _self_, jule::Bool _35922_ident) {
	_1b097ade7_StrBuilder _3607_s = static__1b097b1e4_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		_1b0984be2_WriteStr(&_3607_s, jule::Str::lit("unsafe ", 7));
	};
	_1b0984be2_WriteStr(&_3607_s, jule::Str::lit("fn", 2));
	if ((_35922_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1b0984e9a_WriteByte(&_3607_s, ' ');
		_1b0984be2_WriteStr(&_3607_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_1b0984e9a_WriteByte(&_3607_s, '(');
	jule::I64 _3743_n = (*(_self_))._field_Params.len();;
	if ((_3743_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b343dc2b:;
			if (it != expr_end) {
				jule::I64 _3768_i = it - expr->begin();
				jule::Ptr<_1ac4ddc9e_ParamIns> *_37611_p = it;
				{
					_1b0984be2_WriteStr(&_3607_s, _1ac4de145_Str((*(_37611_p)).ptr()));
					if ((_3768_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1b0984e9a_WriteByte(&_3607_s, ',');
					};
				}
				_iter_next_1b343dc2b:;
				++it;
				_3768_i++;
				goto _iter_begin_1b343dc2b;
			}
			_iter_end_1b343dc2b:;
		};
	};
	_1b0984e9a_WriteByte(&_3607_s, ')');
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		_1b0984e9a_WriteByte(&_3607_s, '!');
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1ac4dc2ec_IsVoid((*(_self_))._field_Decl))))) {
		_1b0984e9a_WriteByte(&_3607_s, ':');
		_1b0984be2_WriteStr(&_3607_s, _1ac63d6d4_Str((*(_self_))._field_Result.ptr()));
	};
	return _1b09854d9_Str(&_3607_s);;
}







inline jule::Ptr<_1ac4e308e_ReferenceStack> static__1ac4e33ad_new(void) {
	return jule::new_ptr<_1ac4e308e_ReferenceStack>(_1ac4e308e_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I64 _1ac4e37a9_Len(_1ac4e308e_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1ac4e3aea_At(_1ac4e308e_ReferenceStack* _self_, jule::I64 _6818_i) {
	return (*(_self_))._field_buffer[_6818_i];;
}



inline void _1ac4e3da3_Push(_1ac4e308e_ReferenceStack* _self_, jule::Any _7324_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7324_ref); };
}



inline jule::Bool _1b3dcc4aa_Exist(_1ac4e308e_ReferenceStack* _self_, jule::Ptr<_1ac4dee04_FnIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3dcd81e:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type7) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1b3dcd81e:;
			++it;
			goto _iter_begin_1b3dcd81e;
		}
		_iter_end_1b3dcd81e:;
	};
	return false;;
}

inline jule::Bool _1b3de3e0b_Exist(_1ac4e308e_ReferenceStack* _self_, jule::Ptr<_1ac5a2527_Var> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3de522b:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type8) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1b3de522b:;
			++it;
			goto _iter_begin_1b3de522b;
		}
		_iter_end_1b3de522b:;
	};
	return false;;
}

inline jule::Bool _1b366aebe_Exist(_1ac4e308e_ReferenceStack* _self_, jule::Ptr<_1ac4ca4d8_StructIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b366c377:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type9) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1b366c377:;
			++it;
			goto _iter_begin_1b366c377;
		}
		_iter_end_1b366c377:;
	};
	return false;;
}

inline jule::Bool _1b422106d_Exist(_1ac4e308e_ReferenceStack* _self_, jule::Ptr<_1ac5008a4_Trait> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b422237c:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type10) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1b422237c:;
			++it;
			goto _iter_begin_1b422237c;
		}
		_iter_end_1b422237c:;
	};
	return false;;
}








inline jule::Bool _1ac4e459b_Pass_eq(_1ac4e459b_Pass *_self_, _1ac4e459b_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1ac4e9a46_pushErr(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4912c3_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args) {
	{ jule::Slice<_1b08b6838_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ac575cc0_compilerErr(_33224_token, true, _33239_fmt, _33252_args)); };
}



inline void _1ac4ea2c7_pushSuggestion(_1ac4e9051_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args) {
	{
		_1ac577376_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34130_fmt, _34143_args);
	};
}



inline jule::Bool _1ac4ea6c3_checkCppUseDeclPath(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4be884_UseDecl>* _34536_decl, jule::Str* _34553_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3463_ext = _1b0989411_Ext((*(_34553_path)));;
	if (((!(_1b08a9584_IsValidHeaderExt(_3463_ext))) && (!(_1b08a984d_IsValidCppExt(_3463_ext))))) {
		_1ac4e9a46_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3463_ext, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ae66e713_Status> _3533_info = ({
		auto except = static__1ae66b3d0_Of((*(_34553_path)));
		(except.ok()) ? (except.result) : ({{
			_1ac4e9a46_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_1ae66e713_Status>(nullptr);});
	});;
	if (_1ae66eb20_IsDir(_3533_info.ptr())) {
		_1ac4e9a46_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4ea9d1_buildCppHeaderImport(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4be884_UseDecl>* _36541_decl) {
	jule::Str _3667_path = (*((*(_36541_decl))))._field_LinkPath;;
	if ((!(_1b08a92a9_IsStdHeaderPath((*((*(_36541_decl))))._field_LinkPath)))) {
		_3667_path=_1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1ac497241_Dir((*((*((*(_36541_decl))))._field_Token))._field_File.ptr()); (*it++) = (*((*(_36541_decl))))._field_LinkPath; __jule_collection; }));
		jule::Bool _3708_ok = _1ac4ea6c3_checkCppUseDeclPath(_self_, _36541_decl, &(_3667_path));;
		if ((!(_3708_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b09896ca_Abs(_3667_path);
			_3667_path = __jule_assign_result.__jule_result_arg0;
			_3708_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3708_ok))) {
			_1ac4e9a46_pushErr(_self_, &((*((*(_36541_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_36541_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1ac557cd5_ImportInfo>(_1ac557cd5_ImportInfo{._field_Token=(*((*(_36541_decl))))._field_Token, ._field_Path=_3667_path, ._field_LinkPath=(*((*(_36541_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_ImportAll=false, ._field_Selected=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr), ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4ead22_buildStdImport(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4be884_UseDecl>* _39335_decl) {
	jule::Str _3957_path = (*((*(_39335_decl))))._field_LinkPath.slice(5LL);;
	_3957_path=_1b096c867_Replace(_3957_path, static_cast<jule::Str>(jule::Str::lit("::", 2)), jule::Str::lit("/", 1), -1LL);
	_3957_path=_1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1b0398529_PathStdlib; (*it++) = _3957_path; __jule_collection; }));
	jule::Bool _3989_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b09896ca_Abs(_3957_path);
		_3957_path = __jule_assign_result.__jule_result_arg0;
		_3989_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_3989_ok))) {
		_1ac4e9a46_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ae66e713_Status> _4053_info = ({
		auto except = static__1ae66b3d0_Of(_3957_path);
		(except.ok()) ? (except.result) : ({{
			_1ac4e9a46_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_1ae66e713_Status>(nullptr);});
	});;
	if ((!(_1ae66eb20_IsDir(_4053_info.ptr())))) {
		_1ac4e9a46_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _4153_i = (_1b09683e0_FindLast((*((*(_39335_decl))))._field_LinkPath, static_cast<jule::Str>(jule::Str::lit("::", 2))) + 1LL);;
	jule::Str _4163_ident = (*((*(_39335_decl))))._field_LinkPath.slice(_4153_i);;
	return jule::new_ptr<_1ac557cd5_ImportInfo>(_1ac557cd5_ImportInfo{._field_Token=(*((*(_39335_decl))))._field_Token, ._field_Path=_3957_path, ._field_LinkPath=(*((*(_39335_decl))))._field_LinkPath, ._field_Ident=_4163_ident, ._field_Alias=(*((*(_39335_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39335_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr), ._field_Package=jule::new_ptr<_1ac55ac0b_Package>(_1ac55ac0b_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4eb163_buildIdentImport(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac4be884_UseDecl>* _43338_decl) {
	if ((((*((*(_43338_decl))))._field_LinkPath.equal("_", 1) || (_1b0967b3c_Find((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1b0967345_HasSuffix((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1ac4e9a46_pushErr(_self_.ptr(), &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration paths cannot contain blank identifier", 53)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4413_modPath = ((_1ac554a4b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac553ab1_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4413_modPath.len() == 0LL)) {
		_1ac4e9a46_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1ac4ea2c7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4487_path = (*((*(_43338_decl))))._field_LinkPath;;
	_4487_path=_1b096c867_Replace(_4487_path, static_cast<jule::Str>(jule::Str::lit("::", 2)), jule::Str::lit("/", 1), -1LL);
	_4487_path=_1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _4413_modPath; (*it++) = _4487_path; __jule_collection; }));
	jule::Bool _4529_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b09896ca_Abs(_4487_path);
		_4487_path = __jule_assign_result.__jule_result_arg0;
		_4529_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_4529_ok))) {
		_1ac4e9a46_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ae66e713_Status> _4593_info = ({
		auto except = static__1ae66b3d0_Of(_4487_path);
		(except.ok()) ? (except.result) : ({{
			_1ac4e9a46_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_1ae66e713_Status>(nullptr);});
	});;
	if ((!(_1ae66eb20_IsDir(_4593_info.ptr())))) {
		_1ac4e9a46_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _4693_i = (_1b09683e0_FindLast((*((*(_43338_decl))))._field_LinkPath, static_cast<jule::Str>(jule::Str::lit("::", 2))) + 1LL);;
	jule::Str _4703_ident = (*((*(_43338_decl))))._field_LinkPath.slice(_4693_i);;
	return jule::new_ptr<_1ac557cd5_ImportInfo>(_1ac557cd5_ImportInfo{._field_Token=(*((*(_43338_decl))))._field_Token, ._field_Path=_4487_path, ._field_LinkPath=(*((*(_43338_decl))))._field_LinkPath, ._field_Ident=_4703_ident, ._field_Alias=(*((*(_43338_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43338_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr), ._field_Package=jule::new_ptr<_1ac55ac0b_Package>(_1ac55ac0b_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4eb4a4_buildImport(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac4be884_UseDecl>* _48733_decl) {
	{
		
		if ((*((*(_48733_decl))))._field_Binded) {
			_case_begin_1b34807c8:;
			{
				return _1ac4ea9d1_buildCppHeaderImport(_self_.ptr(), _48733_decl);;
			}
		}
		else if ((*((*(_48733_decl))))._field_Std) {
			_case_begin_1b3480bd5:;
			{
				return _1ac4ead22_buildStdImport(_self_.ptr(), _48733_decl);;
			}
		}
		else {
			_case_begin_1b3480762:;
			{
				return _1ac4eb163_buildIdentImport(_self_, _48733_decl);;
			}
		}
		_match_end_1b3480652:;
	};
}



inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4eb7e5_findUseDecl(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _49828_pkg) {
	return _1ac6053b0_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>>((void*)__jule_anon_1b3482b2c, jule::Ptr<__jule_anon_1b3482b2c_ctx>::make(__jule_anon_1b3482b2c_ctx{._49828_pkg=_49828_pkg}).as<jule::Uintptr>(), __jule_anon_1b3482b2c_ctx_handler));;
}



inline jule::Bool _1ac4ebb36_checkDuplicateUseDecl(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _50642_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac557cd5_ImportInfo> _5077_lpkg = _1ac4eb7e5_findUseDecl(_self_, _50642_pkg);;
	if ((_5077_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1ac4e9a46_pushErr(_self_, &((*((*(_50642_pkg))))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50642_pkg))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
	_1ac4ea2c7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1ac4ebe99_implImportSelections(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _51641_imp, jule::Ptr<_1ac4be884_UseDecl>* _51664_decl) {
	(*((*(_51641_imp))))._field_Selected=(*((*(_51664_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51641_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3486537:;
		if (it != expr_end) {
			jule::Ptr<_1ac4912c3_Token> _51810_item = *it;
			{
				{
					auto expr = &((*((*(_51641_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3486e3e:;
					if (it != expr_end) {
						jule::Ptr<_1ac4912c3_Token> _51911_citem = *it;
						{
							if ((_51810_item == _51911_citem)) {
								goto _iter_end_1b3486e3e;
							} else if (((*(_51810_item))._field_Kind == (*(_51911_citem))._field_Kind)) {
								_1ac4e9a46_pushErr(_self_, &(_51810_item), static_cast<jule::Str>(jule::Str::lit("duplicated selection: @ is already selected", 43)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_51810_item.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
								_1ac4ea2c7_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use selection, already selected, it is safe", 55)), jule::Slice<jule::Any>());
								goto _iter_end_1b3486e3e;
							};
						}
						_iter_next_1b3486e3e:;
						++it;
						goto _iter_begin_1b3486e3e;
					}
					_iter_end_1b3486e3e:;
				};
			}
			_iter_next_1b3486537:;
			++it;
			goto _iter_begin_1b3486537;
		}
		_iter_end_1b3486537:;
	};
}



inline jule::Str _1ac4ec2da_getAsLinkPath(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Str _53134_path) {
	if (_1b0966ec1_HasPrefix(_53134_path, _1b0398529_PathStdlib)) {
		(_53134_path).mut_slice(_1b0398529_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1b096c867_Replace(_53134_path, jule::Str::lit("/", 1), static_cast<jule::Str>(jule::Str::lit("::", 2)), -1LL));;
	};
	jule::Str _5373_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b09896ca_Abs(((_1ac554a4b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ac553ab1_GetModPath((*(_self_))._field_importer.data));
		_5373_root = __jule_assign_result.__jule_result_arg0;
	});
	(_53134_path).mut_slice(_5373_root.len());;
	if ((_53134_path[0LL] == 47LLU)) {
		(_53134_path).mut_slice(1LL);;
	};
	return _1b096c867_Replace(_53134_path, jule::Str::lit("/", 1), static_cast<jule::Str>(jule::Str::lit("::", 2)), -1LL);;
}



inline void _1ac4ec708_pushCycleError(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac4e9051_symbolBuilder>* _54532_sb, jule::Str _54552_path, _1b097ade7_StrBuilder* _54568_message) {
	;
	jule::Str _5473_refersTo = _1b08b6c9a_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac4ec2da_getAsLinkPath(_self_, _1ac497241_Dir((*((*((*(_54532_sb))))._field_table))._field_File.ptr())), &__jule_any_type4); (*it++) = jule::Any(_1ac4ec2da_getAsLinkPath(_self_, _54552_path), &__jule_any_type4); __jule_collection; }));;
	jule::Str _5513_m = _1b09854d9_Str(_54568_message);;
	_1b0984be2_WriteStr(_54568_message, _1b0966b08_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1b0984be2_WriteStr(_54568_message, _5473_refersTo);
	_1b0984e9a_WriteByte(_54568_message, '\n');
	_1b0984be2_WriteStr(_54568_message, _5513_m);
}



inline void _1ac4ecb26_pushCrossCycleError(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac4e9051_symbolBuilder>* _55837_target, jule::Ptr<_1ac557cd5_ImportInfo>* _55862_imp, jule::Ptr<_1ac4912c3_Token>* _55881_errorToken) {
	_1b097ade7_StrBuilder _5597_message = static__1b097b1e4_New(32LL);;
	_1ac4ec708_pushCycleError(_self_, &(_self_), (*((*(_55862_imp))))._field_Path, &(_5597_message));
	jule::Ptr<_1ac4e9051_symbolBuilder> _5637_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1ac4e9051_symbolBuilder> _5647_old = _self_;;
	while (((*(_5637_owner))._field_owner != nullptr)) {
		{
			_1ac4ec708_pushCycleError(_self_, &((*_5647_old.alloc)._field_owner), _1ac497241_Dir((*((*_5647_old.alloc)._field_table))._field_File.ptr()), &(_5597_message));
			if (((*_5637_owner.alloc)._field_owner == (*(_55837_target)))) {
				_1ac4ec708_pushCycleError(_self_, _55837_target, _1ac497241_Dir((*((*(_5637_owner))._field_table))._field_File), &(_5597_message));
				goto _iter_end_1b349019a;
			};
			_5647_old=_5637_owner;
			_5637_owner=(*_5637_owner.alloc)._field_owner;
		}
	_iter_next_1b349019a:;
	}
	_iter_end_1b349019a:;;
	_1ac4e9a46_pushErr(_self_, _55881_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b09854d9_Str(&_5597_message), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1ac4ed022_checkImportCycles(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac557cd5_ImportInfo> _58134_imp, jule::Ptr<_1ac4be884_UseDecl>* _58153_decl) {
	if (((*(_58134_imp))._field_Path == _1ac497241_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1ac4e9a46_pushErr(_self_, &((*((*(_58153_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac4ec2da_getAsLinkPath(_self_, (*_58134_imp.alloc)._field_Path), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ac4e9051_symbolBuilder> _5917_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1b3494941:;
	if ((_1ac497241_Dir((*((*(_5917_owner))._field_table))._field_File) == (*_58134_imp.alloc)._field_Path)) {
		_1ac4ecb26_pushCrossCycleError(_self_, &(_5917_owner), &(_58134_imp), &((*((*(_58153_decl))))._field_Token));
		return false;;
	};
	if (((*(_5917_owner))._field_owner != nullptr)) {
		_5917_owner=(*_5917_owner.alloc)._field_owner;
		goto _julec_label_1b3494941;
	};
	return true;;
}



inline void _1ac4ed440_checkPackageAccessibility(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4be884_UseDecl>* _61242_decl, jule::Str* _61259_mod, jule::Str* _61270_path) {
	if (((((_1ac554a4b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ac553ab1_GetModPath((*(_self_))._field_importer.data) != (*(_61259_mod))) && _1b096b48c_Contains((*(_61270_path)), jule::Str::lit("internal", 8)))) {
		_1ac4e9a46_pushErr(_self_, &((*((*(_61242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ac4ed83b_importPackage(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _61835_imp, jule::Ptr<_1ac4be884_UseDecl>* _61858_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61835_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac557cd5_ImportInfo> _6237_port = ((_1ac554a4b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ac554243_GetImport((*(_self_))._field_importer.data, (*((*(_61835_imp))))._field_Path);;
	if ((_6237_port != nullptr)) {
		(*((*(_61835_imp))))._field_Package=(*_6237_port.alloc)._field_Package;
		(*((*(_61835_imp))))._field_Duplicate=true;
		jule::Str _6284_oldMod = ((_1ac554a4b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac553ab1_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1ac554a4b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac55382a_SetModPath((*_self_.alloc)._field_importer.data, ((_1ac554a4b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac553e02_ModById((*_self_.alloc)._field_importer.data, (*((*(_61835_imp))))._field_ModId));
		_1ac4ed440_checkPackageAccessibility(_self_, _61858_decl, &(_6284_oldMod), &((*_6237_port.alloc)._field_Path));
		((_1ac554a4b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac55382a_SetModPath((*_self_.alloc)._field_importer.data, _6284_oldMod);
	} else {
		if ((!(_1ac4ed022_checkImportCycles(_self_, (*(_61835_imp)), _61858_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6374_oldMod = ((_1ac554a4b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac553ab1_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1ac554a4b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac55382a_SetModPath((*_self_.alloc)._field_importer.data, _6374_oldMod);
		});;
		if ((*((*(_61835_imp))))._field_Std) {
			((_1ac554a4b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac55382a_SetModPath((*_self_.alloc)._field_importer.data, _1b0398529_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1ac4a4869_AST>> _6428_asts;
		jule::Slice<_1b08b6838_Log> _64218_errors;
		({
			__jule_tuple_sx_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log __jule_assign_result = ((_1ac554a4b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac55463e_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_61835_imp))))._field_Path, (!((*((*(_61835_imp))))._field_Std)));
			_6428_asts = __jule_assign_result.__jule_result_arg0;
			_64218_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64218_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64218_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1ac4ed440_checkPackageAccessibility(_self_, _61858_decl, &(_6374_oldMod), &((*((*(_61835_imp))))._field_Path));
		{
			auto expr = &(_6428_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b34a2d7d:;
			if (it != expr_end) {
				jule::Ptr<_1ac4a4869_AST> _65016_ast = *it;
				{
					jule::Ptr<_1ac604d93_SymbolTable> _65113_table = nullptr;;
					({
						__jule_tuple_x_1ac604d93_SymbolTable__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ac65e77c_buildSymbols(&(_65016_ast), &((*_self_.alloc)._field_importer), _self_);
						_65113_table = __jule_assign_result.__jule_result_arg0;
						_64218_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64218_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64218_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61835_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61835_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _65113_table; __jule_collection; }));
				}
				_iter_next_1b34a2d7d:;
				++it;
				goto _iter_begin_1b34a2d7d;
			}
			_iter_end_1b34a2d7d:;
		};
	};
	_1ac4ebe99_implImportSelections(_self_, _61835_imp, _61858_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac4edb7c_importUseDecl(jule::Ptr<_1ac4e9051_symbolBuilder> _self_, jule::Ptr<_1ac4be884_UseDecl>* _66535_decl) {
	jule::Ptr<_1ac557cd5_ImportInfo> _6667_imp = _1ac4eb4a4_buildImport(_self_, _66535_decl);;
	if ((_6667_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6717_ok = _1ac4ebb36_checkDuplicateUseDecl(_self_, &(_6667_imp));;
	if ((!(_6717_ok))) {
		return nullptr;;
	};
	_6717_ok=_1ac4ed83b_importPackage(_self_, &(_6667_imp), _66535_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6667_imp; __jule_collection; }));
	if (_6717_ok) {
		((_1ac554a4b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac5548e7_Imported((*_self_.alloc)._field_importer.data, _6667_imp);
		return _6667_imp;;
	};
	return nullptr;;
}



inline void _1ac4edd7a_importUseDecls(jule::Ptr<_1ac4e9051_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b34a8a10:;
		if (it != expr_end) {
			jule::Ptr<_1ac4be884_UseDecl> _68515_decl = *it;
			{
				_1ac4edb7c_importUseDecl(_self_, &(_68515_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1b34a8a10;
				};
			}
			_iter_next_1b34a8a10:;
			++it;
			goto _iter_begin_1b34a8a10;
		}
		_iter_end_1b34a8a10:;
	};
}



inline void _1ac4ee133_appendNode(_1ac4e9051_symbolBuilder* _self_, _1ac4a577c_Node* _69431_node) {
	{
		auto &_match_expr{ (*(_69431_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b34aa54a:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5306e7_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac4e898a_buildImpl((*(_69431_node))._field_Data.cast_ptr<_1ac4c33e3_Impl>(&__jule_any_type11)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b34a904e:;
			{
				jule::Ptr<_1ac63c4e6_TypeAlias> _6998_ta = _1ac4e4ed6_buildTypeAlias((*(_69431_node))._field_Data.cast_ptr<_1ac4bd29a_TypeAliasDecl>(&__jule_any_type12));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6998_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b34aa0a5:;
			{
				jule::Ptr<_1ac4c767d_Struct> _7028_srct = _1ac4e5877_buildStruct((*(_69431_node))._field_Data.cast_ptr<_1ac4c2546_StructDecl>(&__jule_any_type13));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4c767d_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7028_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b34aa11b:;
			{
				jule::Ptr<_1ac4dbd46_Fn> _7058_f = _1ac4e6526_buildFunc((*(_69431_node))._field_Data.cast_ptr<_1ac4b843d_FnDecl>(&__jule_any_type14));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7058_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b34aa182:;
			{
				jule::Ptr<_1ac5008a4_Trait> _7088_t = _1ac4e6d73_buildTrait((*(_69431_node))._field_Data.cast_ptr<_1ac4c2c83_TraitDecl>(&__jule_any_type15));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5008a4_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7088_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b34aa1e8:;
			{
				jule::Ptr<_1ac5a2527_Var> _7118_v = _1ac4e8407_buildVar((*(_69431_node))._field_Data.cast_ptr<_1ac4b95e8_VarDecl>(&__jule_any_type16));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7118_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b34aa25e:;
			{
				jule::Ptr<_1ac5030b0_Enum> _7148_e = _1ac4e7901_buildEnum((*(_69431_node))._field_Data.cast_ptr<_1ac4c08eb_EnumDecl>(&__jule_any_type17));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5030b0_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7148_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1b34aaa34:;
			{
				jule::Ptr<_1ac5047ba_TypeEnum> _7178_e = _1ac4e813d_buildTypeEnum((*(_69431_node))._field_Data.cast_ptr<_1ac4c1886_TypeEnumDecl>(&__jule_any_type18));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5047ba_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7178_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1b34a9e95:;
			{
				_1ac4e9a46_pushErr(_self_, &((*(_69431_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b34a9e2e:;
	};
}



inline void _1ac4ee331_appendNodes(_1ac4e9051_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b29600e9:;
		if (it != expr_end) {
			_1ac4a577c_Node _72515_node = *it;
			{
				_1ac4ee133_appendNode(_self_, &(_72515_node));
			}
			_iter_next_1b29600e9:;
			++it;
			goto _iter_begin_1b29600e9;
		}
		_iter_end_1b29600e9:;
	};
}



inline void _1ac4ee5d9_pushDirectivePass(_1ac4e9051_symbolBuilder* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _73038_d) {
	if (((*((*(_73038_d))))._field_Args.len() == 0LL)) {
		_1ac4e9a46_pushErr(_self_, &((*((*(_73038_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73038_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1ac4912c3_Token> _7354_arg = (*((*(_73038_d))))._field_Args[1LL];;
		_1ac4e9a46_pushErr(_self_, &(_7354_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73038_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac4912c3_Token> _7393_arg = (*((*(_73038_d))))._field_Args[0LL];;
	if (((*(_7393_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ac4e9a46_pushErr(_self_, &(_7393_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7393_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ac4e9a46_pushErr(_self_, &(_7393_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1ac4e459b_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac4e459b_Pass{._field_Token=(*((*(_73038_d))))._field_Tag, ._field_Text=(*_7393_arg.alloc)._field_Kind.slice(1LL, ((*_7393_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1ac4ee7d7_appendTopDirectives(_1ac4e9051_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b29664eb:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a5b9a_Directive> _75715_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75715_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1b296770b:;
						{
							_1ac4ee5d9_pushDirectivePass(_self_, &(_75715_d));
						}
					}
					_match_end_1b296762e:;
				};
			}
			_iter_next_1b29664eb:;
			++it;
			goto _iter_begin_1b29664eb;
		}
		_iter_end_1b29664eb:;
	};
}



inline void _1ac4ee9d5_build(jule::Ptr<_1ac4e9051_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1ac604d93_SymbolTable>(_1ac604d93_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1ac4e459b_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1ac4c767d_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1ac5008a4_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1ac5030b0_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1ac5047ba_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1ac5306e7_Impl>>(nullptr)});
	_1ac4ee7d7_appendTopDirectives(_self_);
	_1ac4edd7a_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1ac4ee331_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}







inline jule::Str _1ac500ca0_Str(_1ac5008a4_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ac5010e1_Equal(jule::Ptr<_1ac5008a4_Trait> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _2518_other) {
	jule::Ptr<_1ac5008a4_Trait> _263_trt = _1ac642298_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac501586_FindMethod(_1ac5008a4_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b296b204:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1b296b204:;
			++it;
			goto _iter_begin_1b296b204;
		}
		_iter_end_1b296b204:;
	};
	return _1ac501c18_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac501c18_findMethodInherit(_1ac5008a4_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b296e3c2:;
		if (it != expr_end) {
			jule::Ptr<_1ac6459e9_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1b296e3c2;
				};
				jule::Ptr<_1ac5008a4_Trait> _608_t = _1ac642298_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1ac4dbd46_Fn> _629_f2 = _1ac501586_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1b296e3c2:;
			++it;
			goto _iter_begin_1b296e3c2;
		}
		_iter_end_1b296e3c2:;
	};
	return nullptr;;
}








inline jule::Bool _1ac502543_EnumItem_eq(_1ac502543_EnumItem *_self_, _1ac502543_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1ac50292d_AutoExpr(_1ac502543_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1ac503467_Str(_1ac5030b0_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ac5037a8_Equal(jule::Ptr<_1ac5030b0_Enum> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _3818_other) {
	jule::Ptr<_1ac5030b0_Enum> _393_enm = _1ac641242_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1ac502543_EnumItem> _1ac503bd7_FindItem(_1ac5030b0_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2972bcd:;
		if (it != expr_end) {
			jule::Ptr<_1ac502543_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1b2972bcd:;
			++it;
			goto _iter_begin_1b2972bcd;
		}
		_iter_end_1b2972bcd:;
	};
	return nullptr;;
}








inline jule::Bool _1ac5041e3_TypeEnumItem_eq(_1ac5041e3_TypeEnumItem *_self_, _1ac5041e3_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}





inline jule::Str _1ac504b3e_Str(_1ac5047ba_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ac504e80_Equal(jule::Ptr<_1ac5047ba_TypeEnum> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _8018_other) {
	jule::Ptr<_1ac5047ba_TypeEnum> _813_tenm = _1ac6414c8_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1ac5041e3_TypeEnumItem> _1ac5053ae_FindItem(_1ac5047ba_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2974e77:;
		if (it != expr_end) {
			jule::Ptr<_1ac5041e3_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1b2974e77:;
			++it;
			goto _iter_begin_1b2974e77;
		}
		_iter_end_1b2974e77:;
	};
	return nullptr;;
}








inline jule::Bool _1ac5071e6_comptimeRange_eq(_1ac5071e6_comptimeRange *_self_, _1ac5071e6_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1ac5075e2_Str(_1ac5071e6_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1ac507933_Equal(jule::Ptr<_1ac5071e6_comptimeRange> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _2718_other) {
	return false;;
}








inline jule::Bool _1ac507c52_comptimeStructField_eq(_1ac507c52_comptimeStructField *_self_, _1ac507c52_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ac508109_Str(_1ac507c52_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1ac50844a_Equal(jule::Ptr<_1ac507c52_comptimeStructField> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _3718_other) {
	return false;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac508956__Decl(jule::Ptr<_1ac507c52_comptimeStructField> _self_, jule::Ptr<_1ac60c285_eval>* _4127_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type19)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac508d52__Type(jule::Ptr<_1ac507c52_comptimeStructField> _self_, jule::Ptr<_1ac60c285_eval>* _5327_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac509193_subIdent(jule::Ptr<_1ac507c52_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b298277b:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _648_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2983a24, jule::Ptr<__jule_anon_1b2983a24_ctx>::make(__jule_anon_1b2983a24_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2983a24_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b2982814:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _718_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b29859e3, jule::Ptr<__jule_anon_1b29859e3_ctx>::make(__jule_anon_1b29859e3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b29859e3_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1b29825b1:;
			{
				return nullptr;;
			}
		}
		_match_end_1b29826c1:;
	};
}







inline jule::Str _1ac5098ad_Str(_1ac5094e5_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1ac509bee_Equal(jule::Ptr<_1ac5094e5_comptimeStructFields> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _9018_other) {
	return false;;
}



inline void _1ac50a183_ready(_1ac5094e5_comptimeStructFields* _self_, jule::Ptr<_1ac5a2527_Var>* _9426_keyA, jule::Ptr<_1ac5a2527_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac507c52_comptimeStructField>(_1ac507c52_comptimeStructField{._field_field=jule::Ptr<_1ac4c9938_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data6)})});
	};
}



inline void _1ac50a4e6_index(_1ac5094e5_comptimeStructFields* _self_, jule::Ptr<_1ac60a55d_Data>* _11526_d, jule::I64 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac507c52_comptimeStructField>(_1ac507c52_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data6)});
}



inline void _1ac50a914_step(_1ac5094e5_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1ac5a2527_Var>* _12633_keyA, jule::Ptr<_1ac5a2527_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1ac643068_comptimeStructField((*((*((*(_12650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I64 _1ac50ab9a_len(_1ac5094e5_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ac50ae75_comptimeStatic_eq(_1ac50ae75_comptimeStatic *_self_, _1ac50ae75_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ac50b32c_Str(_1ac50ae75_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1ac50b66d_Equal(jule::Ptr<_1ac50ae75_comptimeStatic> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _15018_other) {
	return false;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac50bb79__Decl(jule::Ptr<_1ac50ae75_comptimeStatic> _self_, jule::Ptr<_1ac60c285_eval>* _15427_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type8)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac50c075__Type(jule::Ptr<_1ac50ae75_comptimeStatic> _self_, jule::Ptr<_1ac60c285_eval>* _16627_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac50c3b6_subIdent(jule::Ptr<_1ac50ae75_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b299b696:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _1778_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b299c91c, jule::Ptr<__jule_anon_1b299c91c_ctx>::make(__jule_anon_1b299c91c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b299c91c_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b299b72e:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _1848_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b299e897, jule::Ptr<__jule_anon_1b299e897_ctx>::make(__jule_anon_1b299e897_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b299e897_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1b299b4cb:;
			{
				return nullptr;;
			}
		}
		_match_end_1b299b5db:;
	};
}







inline jule::Str _1ac50cad1_Str(_1ac50c729_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1ac50ce22_Equal(jule::Ptr<_1ac50c729_comptimeStatics> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _20318_other) {
	return false;;
}



inline void _1ac50d3a6_ready(_1ac50c729_comptimeStatics* _self_, jule::Ptr<_1ac5a2527_Var>* _20726_keyA, jule::Ptr<_1ac5a2527_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac50ae75_comptimeStatic>(_1ac50ae75_comptimeStatic{._field_field=jule::Ptr<_1ac5a2527_Var>(nullptr)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data8)})});
	};
}



inline void _1ac50d719_index(_1ac50c729_comptimeStatics* _self_, jule::Ptr<_1ac60a55d_Data>* _22826_d, jule::I64 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac50ae75_comptimeStatic>(_1ac50ae75_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data8)});
}



inline void _1ac50db37_step(_1ac50c729_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1ac5a2527_Var>* _23933_keyA, jule::Ptr<_1ac5a2527_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1ac644872_comptimeStatic((*((*((*(_23950_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I64 _1ac50ddbd_len(_1ac50c729_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ac50e198_comptimeEnumField_eq(_1ac50e198_comptimeEnumField *_self_, _1ac50e198_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ac50e550_Str(_1ac50e198_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1ac50e891_Equal(jule::Ptr<_1ac50e198_comptimeEnumField> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _26318_other) {
	return false;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac50ed8b__Decl(jule::Ptr<_1ac50e198_comptimeEnumField> _self_, jule::Ptr<_1ac60c285_eval>* _26727_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type21)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac5101cc_subIdent(jule::Ptr<_1ac50e198_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b29abbc3:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _2828_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b29b0d2b, jule::Ptr<__jule_anon_1b29b0d2b_ctx>::make(__jule_anon_1b29b0d2b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b29b0d2b_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1b29ab211:;
			{
				return nullptr;;
			}
		}
		_match_end_1b29ab19a:;
	};
}







inline jule::Str _1ac51096e_Str(_1ac5104a7_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1ac510cb0_Equal(jule::Ptr<_1ac5104a7_comptimeEnumFields> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _30118_other) {
	return false;;
}



inline void _1ac5111bc_ready(_1ac5104a7_comptimeEnumFields* _self_, jule::Ptr<_1ac5a2527_Var>* _30526_keyA, jule::Ptr<_1ac5a2527_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac50e198_comptimeEnumField>(_1ac50e198_comptimeEnumField{._field_field=jule::Ptr<_1ac502543_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data10)})});
	};
}



inline void _1ac511530_index(_1ac5104a7_comptimeEnumFields* _self_, jule::Ptr<_1ac60a55d_Data>* _32626_d, jule::I64 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac50e198_comptimeEnumField>(_1ac50e198_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data10)});
}



inline void _1ac51194d_step(_1ac5104a7_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1ac5a2527_Var>* _33733_keyA, jule::Ptr<_1ac5a2527_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1ac643585_comptimeEnumField((*((*((*(_33750_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I64 _1ac511bd4_len(_1ac5104a7_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ac511eae_comptimeParam_eq(_1ac511eae_comptimeParam *_self_, _1ac511eae_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1ac512366_Str(_1ac511eae_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1ac5126a7_Equal(jule::Ptr<_1ac511eae_comptimeParam> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _36118_other) {
	return false;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac512bc4__Decl(jule::Ptr<_1ac511eae_comptimeParam> _self_, jule::Ptr<_1ac60c285_eval>* _36527_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type22)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac5130c0__Type(jule::Ptr<_1ac511eae_comptimeParam> _self_, jule::Ptr<_1ac60c285_eval>* _37727_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac5134bb__Recv(jule::Ptr<_1ac511eae_comptimeParam> _self_, jule::Ptr<_1ac60c285_eval>* _38527_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _3907_constant = static__1aa129dc6_NewBool(_1ac4da9c1_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51380c_subIdent(jule::Ptr<_1ac511eae_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b29c635d:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _4018_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b29c767d, jule::Ptr<__jule_anon_1b29c767d_ctx>::make(__jule_anon_1b29c767d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b29c767d_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1b29c6407:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _4088_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b29c9608, jule::Ptr<__jule_anon_1b29c9608_ctx>::make(__jule_anon_1b29c9608_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b29c9608_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b29c647e:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _4158_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b29cb583, jule::Ptr<__jule_anon_1b29cb583_ctx>::make(__jule_anon_1b29cb583_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b29cb583_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1b29c6050:;
			{
				return nullptr;;
			}
		}
		_match_end_1b29c6270:;
	};
}







inline jule::Str _1ac5140b0_Str(_1ac513d18_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1ac514401_Equal(jule::Ptr<_1ac513d18_comptimeParams> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _43418_other) {
	return false;;
}



inline void _1ac514885_ready(_1ac513d18_comptimeParams* _self_, jule::Ptr<_1ac5a2527_Var>* _43826_keyA, jule::Ptr<_1ac5a2527_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac511eae_comptimeParam>(_1ac511eae_comptimeParam{._field_param=jule::Ptr<_1ac4ddc9e_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data12)})});
	};
}



inline void _1ac514be8_index(_1ac513d18_comptimeParams* _self_, jule::Ptr<_1ac60a55d_Data>* _45926_d, jule::I64 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac511eae_comptimeParam>(_1ac511eae_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data12)});
}



inline void _1ac515116_step(_1ac513d18_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1ac5a2527_Var>* _47033_keyA, jule::Ptr<_1ac5a2527_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1ac643aa2_comptimeParam((*((*((*(_47050_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I64 _1ac51539c_len(_1ac513d18_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1ac515a2e_Str(_1ac515677_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1ac515d70_Equal(jule::Ptr<_1ac515677_comptimeTypeInfos> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _49418_other) {
	return false;;
}



inline void _1ac516304_ready(_1ac515677_comptimeTypeInfos* _self_, jule::Ptr<_1ac5a2527_Var>* _49826_keyA, jule::Ptr<_1ac5a2527_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5170e6_comptimeTypeInfo>(_1ac5170e6_comptimeTypeInfo{._field_base=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data15)})});
	};
}



inline void _1ac516667_index(_1ac515677_comptimeTypeInfos* _self_, jule::Ptr<_1ac60a55d_Data>* _51926_d, jule::I64 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data15)});
}



inline void _1ac516a85_step(_1ac515677_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1ac5a2527_Var>* _52833_keyA, jule::Ptr<_1ac5a2527_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data15);
	};
}



inline jule::I64 _1ac516d1b_len(_1ac515677_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1ac5170e6_comptimeTypeInfo_eq(_1ac5170e6_comptimeTypeInfo *_self_, _1ac5170e6_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1ac51749d_Str(_1ac5170e6_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1ac63d6d4_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1ac5177de_Equal(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _55218_other) {
	return false;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac517e2c__Decl(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _55627_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1ac642012_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b29e35ab:;
			{
				_5617_decl=jule::Any((*(_1ac642012_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type23);
			}
		}
		else if ((_1ac642298_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b29e3622:;
			{
				_5617_decl=jule::Any(_1ac642298_Trait((*(_self_))._field_base), &__jule_any_type10);
			}
		}
		else if ((_1ac641242_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b29e20e3:;
			{
				_5617_decl=jule::Any(_1ac641242_Enum((*(_self_))._field_base), &__jule_any_type24);
			}
		}
		else if ((_1ac6414c8_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b29e2159:;
			{
				_5617_decl=jule::Any(_1ac6414c8_TypeEnum((*(_self_))._field_base), &__jule_any_type25);
			}
		}
		else if ((_1ac641c7b_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b29e21c0:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _5728_f = _1ac641c7b_Fn((*(_self_))._field_base);;
				{
					
					if (_1ac4e13bc_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1b2a02ba3:;
						{
							_1ac60c818_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type4); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1ac4e1653_IsAnon(_5728_f.ptr())) {
						_case_begin_1b2a02c4c:;
						{
							_1ac60c818_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type4); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1b2a02b1a:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type26);
			}
		}
		else {
			_case_begin_1b29e207c:;
			{
				_1ac60c818_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b29e1e5b:;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac518328__Str(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _59322_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _5987_constant = static__1aa12a190_NewStr(_1ac63d6d4_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac72822a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac518724__Kind(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _60627_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac5030b0_Enum> _6117_enm = _1ac559a73_FindEnum(_1ac52aed9_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1ac502543_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1ac63e6a2_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1b2a10809:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1ac642012_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a1071b:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1ac642298_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a104b8:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1ac640eab_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a1052e:;
			{
				if (_1ac64e261_IsUnsafe(_1ac640eab_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1ac640c25_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a10595:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1ac641242_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a1060b:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1ac6414c8_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a11068:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1ac64252e_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a110ce:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1ac6419e5_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a11145:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1ac64175e_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a111ab:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1ac641c7b_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a11233:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1ac6427b5_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a112aa:;
			{
				_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1ac64098e_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b2a11332:;
			{
				jule::Ptr<_1ac646401_Prim> _6434_prim = _1ac64098e_Prim((*(_self_))._field_base);;
				{
					
					if (_1ac649b52_IsAny(_6434_prim.ptr())) {
						_case_begin_1b2a1cdbb:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1ac649635_IsBool(_6434_prim.ptr())) {
						_case_begin_1b2a1cccd:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1ac6498bb_IsStr(_6434_prim.ptr())) {
						_case_begin_1b2a1caad:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1ac648865_IsF32(_6434_prim.ptr())) {
						_case_begin_1b2a1cb24:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1ac648aeb_IsF64(_6434_prim.ptr())) {
						_case_begin_1b2a1cb8a:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1ac6472e2_IsI8(_6434_prim.ptr())) {
						_case_begin_1b2a1cc01:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1ac647578_IsI16(_6434_prim.ptr())) {
						_case_begin_1b2a1d62a:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1ac64780e_IsI32(_6434_prim.ptr())) {
						_case_begin_1b2a1d6a2:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1ac647a95_IsI64(_6434_prim.ptr())) {
						_case_begin_1b2a1d729:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1ac647d2b_IsU8(_6434_prim.ptr())) {
						_case_begin_1b2a1d7a1:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1ac6480b2_IsU16(_6434_prim.ptr())) {
						_case_begin_1b2a1d828:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1ac648348_IsU32(_6434_prim.ptr())) {
						_case_begin_1b2a1d8a0:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1ac6485ce_IsU64(_6434_prim.ptr())) {
						_case_begin_1b2a1d927:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1ac648d82_IsInt(_6434_prim.ptr())) {
						_case_begin_1b2a1d99e:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1ac649118_IsUint(_6434_prim.ptr())) {
						_case_begin_1b2a1da26:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1ac64939e_IsUintptr(_6434_prim.ptr())) {
						_case_begin_1b2a1da9d:;
						{
							_61211_item=_1ac503bd7_FindItem(_6117_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1b2a1c915:;
						{
							__jule_panic_s((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1ac63d6d4_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1b2a1c88d:;
				};
			}
		}
		else {
			_case_begin_1b2a10353:;
			{
				__jule_panic_s((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1ac63d6d4_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1b2a10298:;
	};
	return _1ac639724_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1ac61081b_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac518b20__Bits(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _68627_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac646401_Prim> _6913_prim = _1ac64098e_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1ac60c818_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _6963_n = _1aa11d738_BitsizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1ac60c818_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _7017_constant = static__1aa129843_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac728e0c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51901b__Elem(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _71027_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac64d6e4_Ptr> _7157_ptr = _1ac640eab_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1ac64e261_IsUnsafe(_7157_ptr)) {
			_1ac60c818_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1ac649e2c_Sptr> _7237_sptr = _1ac640c25_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1ac64a900_Slc> _7277_slice = _1ac6419e5_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1ac64cc21_Arr> _7317_array = _1ac64175e_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1ac5030b0_Enum> _7357_enm = _1ac641242_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1ac60c818_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac519417__Size(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _74327_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac64cc21_Arr> _7487_arr = _1ac64175e_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1ac60c818_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _7537_constant = static__1aa129843_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac728e0c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac519813__Key(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _76226_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac64c094_Map> _7677_m = _1ac64252e_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1ac60c818_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac519c0e__Value(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _77528_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac64c094_Map> _7807_m = _1ac64252e_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1ac60c818_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51a10a__Fields(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _78829_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _7937_s = _1ac642012_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5094e5_comptimeStructFields>(_1ac5094e5_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
	};
	jule::Ptr<_1ac5030b0_Enum> _8037_enm = _1ac641242_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5104a7_comptimeEnumFields>(_1ac5104a7_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
	};
	_1ac60c818_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51a506__Statics(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _81730_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _8227_s = _1ac642012_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1ac60c818_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac50c729_comptimeStatics>(_1ac50c729_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51a902__Binded(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _83629_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _8417_constant = static__1aa129dc6_NewBool(_1ac63e185_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51aced__Ordered(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _84926_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _8547_constant = static__1aa129dc6_NewBool(_1ac63ee55_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51b1e9__Comparable(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _86229_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _8677_constant = static__1aa129dc6_NewBool(_1ac63e938_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51b5e5__Mutable(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _87526_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _8807_constant = static__1aa129dc6_NewBool(_1ac63ebbe_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51b9e1__Types(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _88828_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac64b4e4_Tuple> _8937_tup = _1ac6427b5_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1ac60c818_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac515677_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1ac515677_comptimeTypeInfos>(_1ac515677_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5170e6_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5170e6_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8937_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b350e813:;
		if (it != expr_end) {
			jule::Ptr<_1ac63d2d8_TypeKind> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5170e6_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac577ac4_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1b350e813:;
			++it;
			goto _iter_begin_1b350e813;
		}
		_iter_end_1b350e813:;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51bddc__CanNil(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _91129_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _9167_constant = static__1aa129dc6_NewBool(_1ac6401db_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51c2d8__GC(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _92425_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _9297_constant = static__1aa129dc6_NewBool(_1ac640472_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51c6d4__Result(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _93729_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _9427_f = _1ac641c7b_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1ac60c818_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1ac727b75_primVoid));;
	};
	return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51cad0__Params(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Ptr<_1ac60c285_eval>* _95329_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _9587_f = _1ac641c7b_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1ac60c818_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac513d18_comptimeParams>(_1ac513d18_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51ce21_subIdent(jule::Ptr<_1ac5170e6_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1b3520c64:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _9738_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3522848, jule::Ptr<__jule_anon_1b3522848_ctx>::make(__jule_anon_1b3522848_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3522848_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1b3520cca:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _9808_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3524817, jule::Ptr<__jule_anon_1b3524817_ctx>::make(__jule_anon_1b3524817_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3524817_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1b3520d41:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _9878_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3526792, jule::Ptr<__jule_anon_1b3526792_ctx>::make(__jule_anon_1b3526792_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3526792_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1b3520ec8:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _9948_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b352871c, jule::Ptr<__jule_anon_1b352871c_ctx>::make(__jule_anon_1b352871c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b352871c_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1b3521050:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10018_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b352a697, jule::Ptr<__jule_anon_1b352a697_ctx>::make(__jule_anon_1b352a697_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b352a697_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1b35210c7:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10088_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b352c622, jule::Ptr<__jule_anon_1b352c622_ctx>::make(__jule_anon_1b352c622_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b352c622_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1b352114e:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10158_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b352e59c, jule::Ptr<__jule_anon_1b352e59c_ctx>::make(__jule_anon_1b352e59c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b352e59c_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1b352125e:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10228_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3531527, jule::Ptr<__jule_anon_1b3531527_ctx>::make(__jule_anon_1b3531527_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3531527_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1b35212c5:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10298_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3533727, jule::Ptr<__jule_anon_1b3533727_ctx>::make(__jule_anon_1b3533727_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3533727_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1b352133b:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10368_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b35356a2, jule::Ptr<__jule_anon_1b35356a2_ctx>::make(__jule_anon_1b35356a2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b35356a2_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1b35213a2:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10438_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b353762c, jule::Ptr<__jule_anon_1b353762c_ctx>::make(__jule_anon_1b353762c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b353762c_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1b3521429:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10508_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b35395a7, jule::Ptr<__jule_anon_1b35395a7_ctx>::make(__jule_anon_1b35395a7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b35395a7_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1b35214a1:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10578_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b353b532, jule::Ptr<__jule_anon_1b353b532_ctx>::make(__jule_anon_1b353b532_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b353b532_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1b3521528:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10648_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b353d4ac, jule::Ptr<__jule_anon_1b353d4ac_ctx>::make(__jule_anon_1b353d4ac_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b353d4ac_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b35215a0:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10718_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3540437, jule::Ptr<__jule_anon_1b3540437_ctx>::make(__jule_anon_1b3540437_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3540437_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1b3521627:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10788_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b35423b2, jule::Ptr<__jule_anon_1b35423b2_ctx>::make(__jule_anon_1b35423b2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b35423b2_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1b352169e:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10858_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b354433c, jule::Ptr<__jule_anon_1b354433c_ctx>::make(__jule_anon_1b354433c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b354433c_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1b3521726:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10928_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b35462b7, jule::Ptr<__jule_anon_1b35462b7_ctx>::make(__jule_anon_1b35462b7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b35462b7_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1b352179d:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10998_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3548242, jule::Ptr<__jule_anon_1b3548242_ctx>::make(__jule_anon_1b3548242_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3548242_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1b351d5be:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3520a44:;
	};
}








inline jule::Bool _1ac51d1eb_comptimeValue_eq(_1ac51d1eb_comptimeValue *_self_, _1ac51d1eb_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1ac51d5a3_Str(_1ac51d1eb_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1ac51d8e4_Equal(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _111818_other) {
	return false;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51de55__Unwrap(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _112229_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51e351__Type(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _113027_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51e74c__Lvalue(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _113829_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _11437_constant = static__1aa129dc6_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac51eb48__Mutable(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _115130_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _11567_constant = static__1aa129dc6_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac520044__Const(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _116428_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _11697_constant = static__1aa129dc6_NewBool(_1ac60ae98_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac520440__Field(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _117728_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _11827_s = _1ac642012_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_11827_s == nullptr)) {
		_1ac60c818_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_data))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac4aaab2_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1ac60a55d_Data> _11887_d = _1ac62b0ea_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac60ae98_IsConst(_11887_d.ptr())))) {
		_1ac60c818_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac646401_Prim> _11963_prim = _1ac64098e_Prim((*(_11887_d))._field_Kind);;
	if (((_11963_prim == nullptr) || (!(_1ac6498bb_IsStr(_11963_prim.ptr()))))) {
		_1ac60c818_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_11887_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1aa12b57b_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1ac4c9938_FieldIns> _12027_f = _1ac4cb8c4_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1ac60c818_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11827_s))._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_12013_ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1ac60a55d_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1ac623cd5_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*_11877_arg.alloc)._field_Token), &(_12027_f));
	return _1ac52b69e_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac52083b__Method(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Ptr<_1ac60c285_eval>* _121229_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1ac4ca4d8_StructIns> _12187_s = static_cast<jule::Ptr<_1ac4ca4d8_StructIns>>(nullptr);;
	if ((_1ac640c25_Sptr((*((*(_self_))._field_data))._field_Kind.ptr()) != nullptr)) {
		_12187_s=_1ac642012_Struct((*(_1ac640c25_Sptr((*((*(_self_))._field_data))._field_Kind)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1ac642012_Struct((*((*(_self_))._field_data))._field_Kind.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1ac60c818_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac4aaab2_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1ac60a55d_Data> _12307_d = _1ac62b0ea_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac60ae98_IsConst(_12307_d.ptr())))) {
		_1ac60c818_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac646401_Prim> _12383_prim = _1ac64098e_Prim((*(_12307_d))._field_Kind);;
	if (((_12383_prim == nullptr) || (!(_1ac6498bb_IsStr(_12383_prim.ptr()))))) {
		_1ac60c818_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_12307_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1aa12b57b_ReadStr((*(_12307_d))._field_Constant.ptr());;
	;
	jule::Ptr<_1ac4dbd46_Fn> _12457_m = _1ac4cb583_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1ac60c818_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12187_s))._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_12433_ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1ac60a55d_Data>((*(*(_self_))._field_data.alloc));
	if (_12177_ref) {
		_1ac639cc9_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1ac624401_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*_12297_arg.alloc)._field_Token), &(_12457_m), _12177_ref);
	return _1ac52b69e_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac520b7c_subIdent(jule::Ptr<_1ac51d1eb_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1b3577dba:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _12618_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3579383, jule::Ptr<__jule_anon_1b3579383_ctx>::make(__jule_anon_1b3579383_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3579383_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b3577e31:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _12688_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b357b30d, jule::Ptr<__jule_anon_1b357b30d_ctx>::make(__jule_anon_1b357b30d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b357b30d_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1b3577e97:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _12758_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b357d288, jule::Ptr<__jule_anon_1b357d288_ctx>::make(__jule_anon_1b357d288_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b357d288_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b357801e:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _12828_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3580213, jule::Ptr<__jule_anon_1b3580213_ctx>::make(__jule_anon_1b3580213_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3580213_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1b357820b:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _12898_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b358218d, jule::Ptr<__jule_anon_1b358218d_ctx>::make(__jule_anon_1b358218d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b358218d_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1b3578272:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _12968_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3584118, jule::Ptr<__jule_anon_1b3584118_ctx>::make(__jule_anon_1b3584118_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3584118_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1b35782d8:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _13038_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b3586093, jule::Ptr<__jule_anon_1b3586093_ctx>::make(__jule_anon_1b3586093_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b3586093_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1b357788c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3577c77:;
	};
}







inline jule::Str _1ac52130e_Str(_1ac520e57_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1ac521650_Equal(jule::Ptr<_1ac520e57_comptimeFiles> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _132218_other) {
	return false;;
}



inline void _1ac521ad4_ready(_1ac520e57_comptimeFiles* _self_, jule::Ptr<_1ac5a2527_Var>* _132626_keyA, jule::Ptr<_1ac5a2527_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5228c6_comptimeFile>(_1ac5228c6_comptimeFile{._field_file=jule::Ptr<_1ac604d93_SymbolTable>(nullptr)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data18)})});
	};
}



inline void _1ac521e47_index(_1ac520e57_comptimeFiles* _self_, jule::Ptr<_1ac60a55d_Data>* _134726_d, jule::I64 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5228c6_comptimeFile>(_1ac5228c6_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data18)});
}



inline void _1ac522365_step(_1ac520e57_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1ac5a2527_Var>* _135833_keyA, jule::Ptr<_1ac5a2527_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1ac5228c6_comptimeFile>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I64 _1ac5225eb_len(_1ac520e57_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1ac5228c6_comptimeFile_eq(_1ac5228c6_comptimeFile *_self_, _1ac5228c6_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1ac522c7d_Str(_1ac5228c6_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1ac5230be_Equal(jule::Ptr<_1ac5228c6_comptimeFile> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _138218_other) {
	return false;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac5235db__Path(jule::Ptr<_1ac5228c6_comptimeFile> _self_, jule::Ptr<_1ac60c285_eval>* _138627_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _13917_constant = static__1aa12a190_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac72822a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac5239d7__Name(jule::Ptr<_1ac5228c6_comptimeFile> _self_, jule::Ptr<_1ac60c285_eval>* _139927_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _14047_constant = static__1aa12a190_NewStr(_1ac4974c7_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac72822a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac523dd3__Dir(jule::Ptr<_1ac5228c6_comptimeFile> _self_, jule::Ptr<_1ac60c285_eval>* _141226_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa1293c0_Const> _14177_constant = static__1aa12a190_NewStr(_1ac497241_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac72822a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac524224_subIdent(jule::Ptr<_1ac5228c6_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1b35999d0:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _14288_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b359ad00, jule::Ptr<__jule_anon_1b359ad00_ctx>::make(__jule_anon_1b359ad00_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b359ad00_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b3599a79:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _14358_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b359cc7a, jule::Ptr<__jule_anon_1b359cc7a_ctx>::make(__jule_anon_1b359cc7a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b359cc7a_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1b3599b01:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _14428_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b359ec05, jule::Ptr<__jule_anon_1b359ec05_ctx>::make(__jule_anon_1b359ec05_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b359ec05_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1b35996c2:;
			{
				return nullptr;;
			}
		}
		_match_end_1b35998e2:;
	};
}







inline jule::Str _1ac524ad7_Str(_1ac5244ee_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1ac524e28_Equal(jule::Ptr<_1ac5244ee_comptimeDecls> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _146118_other) {
	return false;;
}



inline void _1ac52529c_ready(_1ac5244ee_comptimeDecls* _self_, jule::Ptr<_1ac5a2527_Var>* _146526_keyA, jule::Ptr<_1ac5a2527_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data20)})});
	};
}



inline void _1ac525610_index(_1ac5244ee_comptimeDecls* _self_, jule::Ptr<_1ac60a55d_Data>* _148626_d, jule::I64 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data20)});
}



inline void _1ac525a2d_step(_1ac5244ee_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1ac5a2527_Var>* _149533_keyA, jule::Ptr<_1ac5a2527_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1ac5267dc_comptimeDecl>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I64 _1ac525cb4_len(_1ac5244ee_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1ac5267dc_comptimeDecl_eq(_1ac5267dc_comptimeDecl *_self_, _1ac5267dc_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1ac526b94_Str(_1ac5267dc_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1ac526ed5_Equal(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _153418_other) {
	return false;;
}



inline jule::Str _1ac527436_declAsStr(_1ac5267dc_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b35a9d20:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b35a97c0:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b35a9bcc:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b35a9c54:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b35a9ec9:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b35aa051:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b35aa2c6:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b35aa33c:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b35aa3a3:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b35aa419:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1b35a9b66:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1b35a9902:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac527832__Name(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _156527_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b35b2465:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4c767d_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b35b281c:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4dbd46_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b35b2883:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5030b0_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b35b290a:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5047ba_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b35b2982:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5008a4_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b35b2a09:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4c4757_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b35b2db1:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac63c4e6_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b35b2e27:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5a2527_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b35b2e8d:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac502543_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b35b3004:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4da372_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1b35b27a6:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1b35b2740:;
	};
	jule::Ptr<_1aa1293c0_Const> _15957_constant = static__1aa12a190_NewStr(_15707_name);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac72822a_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac527c2d__Public(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _160329_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1b35bb848:;
			{
				_1ac60c818_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac527436_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b35bbbde:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4c767d_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b35bbc55:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4dbd46_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b35bbcbb:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5030b0_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b35bbd43:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5047ba_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b35bbdba:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5008a4_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b35bbe42:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4c4757_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b35bc294:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac63c4e6_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b35bc31b:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5a2527_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1b35bbb78:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1b35bbb12:;
	};
	jule::Ptr<_1aa1293c0_Const> _16337_constant = static__1aa129dc6_NewBool(_16087_public);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac528129__Binded(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _164129_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1b35c6325:;
			{
				_1ac60c818_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac527436_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b35c6006:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4c767d_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b35c606c:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4dbd46_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b35c60d3:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac63c4e6_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b35c6149:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5a2527_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1b35c5e90:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1b35c5e29:;
	};
	jule::Ptr<_1aa1293c0_Const> _16677_constant = static__1aa129dc6_NewBool(_16467_binded);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac528525__Exceptional(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _167534_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b35cb7e2:;
			{
				goto _match_end_1b35ccb78;
			}
		}
		else {
			_case_begin_1b35ccbde:;
			{
				_1ac60c818_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac527436_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b35ccb78:;
	};
	jule::Ptr<_1ac4dbd46_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1ac4dbd46_Fn>(&__jule_any_type26);;
	jule::Ptr<_1aa1293c0_Const> _16887_constant = static__1aa129dc6_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac528921__Mutable(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _169630_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21) {
			_case_begin_1b35d2bd3:;
			{
				_1ac60c818_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac527436_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b35d28b4:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4da372_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b35d292a:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4c4757_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b35d2991:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5a2527_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1b35d284d:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1b35d27d7:;
	};
	jule::Ptr<_1aa1293c0_Const> _17217_constant = static__1aa129dc6_NewBool(_17017_mutable);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac528d1c__Variadic(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _172931_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8) {
			_case_begin_1b35d9525:;
			{
				_1ac60c818_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac527436_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b35d9206:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4da372_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1b35d9190:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1b35d9129:;
	};
	jule::Ptr<_1aa1293c0_Const> _17527_constant = static__1aa129dc6_NewBool(_17347_variadic);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac529218__Reference(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _176032_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19) {
			_case_begin_1b35dec78:;
			{
				_1ac60c818_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac527436_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b35de959:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac5a2527_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b35de9c0:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac4da372_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1b35de8e3:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1b35de87c:;
	};
	jule::Ptr<_1aa1293c0_Const> _17847_constant = static__1aa129dc6_NewBool(_17657_ref);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac529614__Params(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _179229_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1b35e4156:;
			{
				_1ac60c818_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac527436_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b35e594e:;
			{
				jule::Ptr<_1ac4dbd46_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1ac4dbd46_Fn>();;
				jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5267dc_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b35e8e80:;
					if (it != expr_end) {
						jule::I64 _18129_i = it - expr->begin();
						jule::Ptr<_1ac4da372_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type22)});
						}
						_iter_next_1b35e8e80:;
						++it;
						_18129_i++;
						goto _iter_begin_1b35e8e80;
					}
					_iter_end_1b35e8e80:;
				};
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5244ee_comptimeDecls>(_1ac5244ee_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b35e5553:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1b35e54dc:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac529a10__Fields(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _182729_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26) {
			_case_begin_1b35ec99a:;
			{
				_1ac60c818_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac527436_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b35ec67b:;
			{
				jule::Ptr<_1ac5030b0_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1ac5030b0_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5267dc_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3600b9b:;
					if (it != expr_end) {
						jule::I64 _18479_i = it - expr->begin();
						jule::Ptr<_1ac502543_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type21)});
						}
						_iter_next_1b3600b9b:;
						++it;
						_18479_i++;
						goto _iter_begin_1b3600b9b;
					}
					_iter_end_1b3600b9b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b35ec6e2:;
			{
				jule::Ptr<_1ac4c767d_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1ac4c767d_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5267dc_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3602ab0:;
					if (it != expr_end) {
						jule::I64 _18539_i = it - expr->begin();
						jule::Ptr<_1ac4c4757_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type19)});
						}
						_iter_next_1b3602ab0:;
						++it;
						_18539_i++;
						goto _iter_begin_1b3602ab0;
					}
					_iter_end_1b3602ab0:;
				};
			}
		}
		else {
			_case_begin_1b35ec615:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1b35ec59e:;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5244ee_comptimeDecls>(_1ac5244ee_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac529e0b__Statics(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _186830_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24) {
			_case_begin_1b3606641:;
			{
				_1ac60c818_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac527436_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b3606322:;
			{
				jule::Ptr<_1ac4c767d_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1ac4c767d_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5267dc_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2de5804:;
					if (it != expr_end) {
						jule::I64 _18899_i = it - expr->begin();
						jule::Ptr<_1ac5a2527_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type8)});
						}
						_iter_next_1b2de5804:;
						++it;
						_18899_i++;
						goto _iter_begin_1b2de5804;
					}
					_iter_end_1b2de5804:;
				};
			}
		}
		else {
			_case_begin_1b36062ab:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1b3606245:;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5244ee_comptimeDecls>(_1ac5244ee_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac52a307__Methods(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Ptr<_1ac60c285_eval>* _190430_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24) {
			_case_begin_1b2de9c6a:;
			{
				_1ac60c818_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac527436_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1b2de994b:;
			{
				jule::Ptr<_1ac5008a4_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1ac5008a4_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5267dc_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2a277cc:;
					if (it != expr_end) {
						jule::I64 _19249_i = it - expr->begin();
						jule::Ptr<_1ac4dbd46_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type26)});
						}
						_iter_next_1b2a277cc:;
						++it;
						_19249_i++;
						goto _iter_begin_1b2a277cc;
					}
					_iter_end_1b2a277cc:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b2de99b2:;
			{
				jule::Ptr<_1ac4c767d_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1ac4c767d_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5267dc_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5267dc_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2a29713:;
					if (it != expr_end) {
						jule::I64 _19309_i = it - expr->begin();
						jule::Ptr<_1ac4dbd46_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1ac5267dc_comptimeDecl>(_1ac5267dc_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type26)});
						}
						_iter_next_1b2a29713:;
						++it;
						_19309_i++;
						goto _iter_begin_1b2a29713;
					}
					_iter_end_1b2a29713:;
				};
			}
		}
		else {
			_case_begin_1b2de98d5:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1b2de986e:;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5244ee_comptimeDecls>(_1ac5244ee_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac52a648_subIdent(jule::Ptr<_1ac5267dc_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b2a2b4c3:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _19488_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a2cbab, jule::Ptr<__jule_anon_1b2a2cbab_ctx>::make(__jule_anon_1b2a2cbab_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a2cbab_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1b2a2b539:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _19558_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a2eb7a, jule::Ptr<__jule_anon_1b2a2eb7a_ctx>::make(__jule_anon_1b2a2eb7a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a2eb7a_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1b2a2b5a0:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _19628_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a31b05, jule::Ptr<__jule_anon_1b2a31b05_ctx>::make(__jule_anon_1b2a31b05_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a31b05_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1b2a2b627:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _19698_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a33a80, jule::Ptr<__jule_anon_1b2a33a80_ctx>::make(__jule_anon_1b2a33a80_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a33a80_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b2a2b7c0:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _19768_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a35a0a, jule::Ptr<__jule_anon_1b2a35a0a_ctx>::make(__jule_anon_1b2a35a0a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a35a0a_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1b2a2b836:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _19838_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a37985, jule::Ptr<__jule_anon_1b2a37985_ctx>::make(__jule_anon_1b2a37985_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a37985_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1b2a2b8ad:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _19908_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a39910, jule::Ptr<__jule_anon_1b2a39910_ctx>::make(__jule_anon_1b2a39910_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a39910_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1b2a2b935:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _19978_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a3b88a, jule::Ptr<__jule_anon_1b2a3b88a_ctx>::make(__jule_anon_1b2a3b88a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a3b88a_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1b2a2ba56:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _20048_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a3da8a, jule::Ptr<__jule_anon_1b2a3da8a_ctx>::make(__jule_anon_1b2a3da8a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a3da8a_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1b2a2babc:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _20118_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a40a15, jule::Ptr<__jule_anon_1b2a40a15_ctx>::make(__jule_anon_1b2a40a15_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a40a15_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1b2a2bb33:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _20188_method = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>((void*)__jule_anon_1b2a42990, jule::Ptr<__jule_anon_1b2a42990_ctx>::make(__jule_anon_1b2a42990_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a42990_ctx_handler), ._field_reloaded=false});;
				return _1ac52acca_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1b2a2b1c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b2a2b33b:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1ac578256_sema>*,jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>*> _1ac52d7c2_readyFn(jule::Ptr<_1ac52d393_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1ac578256_sema>*,jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>*>((void*)__jule_anon_1b2a4dc65, jule::Ptr<__jule_anon_1b2a4dc65_ctx>::make(__jule_anon_1b2a4dc65_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2a4dc65_ctx_handler);;
}



inline jule::Bool _1ac52da58_readyFi(jule::Ptr<_1ac52d393_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ac587452_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1ac52d7c2_readyFn(_self_)));;
}



inline jule::Bool _1ac52dcde_readySi(jule::Ptr<_1ac52d393_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ac52d7c2_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1ac52e075_ready(jule::Ptr<_1ac52d393_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1ac52da58_readyFi(_self_);;
	};
	return _1ac52dcde_readySi(_self_);;
}



inline jule::Bool _1ac52e30b_check(jule::Ptr<_1ac52d393_constraintChecker> _self_) {
	if ((!(_1ac52e075_ready(_self_)))) {
		return false;;
	};
	_julec_label_1b2a5e8d0:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2a5ed86:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1ac63b902_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1b2a5ed86;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2a61096:;
					if (it != expr_end) {
						jule::Ptr<_1ac63d2d8_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1ac646401_Prim> _1259_prim = _1ac64098e_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1ac64705b_IsConstraint(_1259_prim))) {
								if (_1ac52ea59_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1b2a5ed86;
								};
								goto _iter_next_1b2a61096;
							};
							if (_1ac63da25_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1b2a5ed86;
							};
						}
						_iter_next_1b2a61096:;
						++it;
						goto _iter_begin_1b2a61096;
					}
					_iter_end_1b2a61096:;
				};
				_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1ac52e691_toStrConstraints(_12015_g), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
			_iter_next_1b2a5ed86:;
			++it;
			_1208_i++;
			goto _iter_begin_1b2a5ed86;
		}
		_iter_end_1b2a5ed86:;
	};
	return true;;
}







inline jule::Bool _1ac530ae3_IsTraitImpl(_1ac5306e7_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1ac530d79_IsStructImpl(_1ac5306e7_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1ac5353de_If_eq(_1ac5353de_If *_self_, _1ac5353de_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1ac5356db_Else_eq(_1ac5356db_Else *_self_, _1ac5356db_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1ac535e06_InfIter_eq(_1ac535e06_InfIter *_self_, _1ac535e06_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1ac5363ac_WhileIter_eq(_1ac5363ac_WhileIter *_self_, _1ac5363ac_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1ac536753_IsWhileNext(_1ac5363ac_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1ac536d08_RangeIter_eq(_1ac536d08_RangeIter *_self_, _1ac536d08_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1ac53718d_ContSt_eq(_1ac53718d_ContSt *_self_, _1ac53718d_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1ac537567_BreakSt_eq(_1ac537567_BreakSt *_self_, _1ac537567_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1ac537a1d_Label_eq(_1ac537a1d_Label *_self_, _1ac537a1d_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ac53817d_GotoSt_eq(_1ac53817d_GotoSt *_self_, _1ac53817d_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ac538557_Postfix_eq(_1ac538557_Postfix *_self_, _1ac538557_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1ac538a0d_Assign_eq(_1ac538a0d_Assign *_self_, _1ac538a0d_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1ac53a922_FallSt_eq(_1ac53a922_FallSt *_self_, _1ac53a922_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1ac53acb8_RetSt_eq(_1ac53acb8_RetSt *_self_, _1ac53acb8_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac53b26e_scopeLabel_eq(_1ac53b26e_scopeLabel *_self_, _1ac53b26e_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1ac53c25e_scopeChecker_eq(_1ac53c25e_scopeChecker *_self_, _1ac53c25e_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac53c737_SelectPackage(_1ac53c25e_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _37429_selector) {
	return _1ac57872e_SelectPackage((*(_self_))._field_s.ptr(), _37429_selector);;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac53cb33_FindVar(_1ac53c25e_scopeChecker* _self_, jule::Str _38523_ident, jule::Bool _38535_binded) {
	if ((!(_38535_binded))) {
		jule::Ptr<_1ac5a2527_Var> _3878_v = _1ac540e99_findVar(_self_, _38523_ident);;
		if ((_3878_v != nullptr)) {
			return _3878_v;;
		};
	};
	return _1ac578b2a_FindVar((*(_self_))._field_s.ptr(), _38523_ident, _38535_binded);;
}



inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac53d02e_FindTypeAlias(_1ac53c25e_scopeChecker* _self_, jule::Str _40229_ident, jule::Bool _40241_binded) {
	;
	jule::Ptr<_1ac63c4e6_TypeAlias> _4057_ta = _1ac607d96_findTypeAlias((*(_self_))._field_table.ptr(), &(_40229_ident), _40241_binded, true);;
	if ((_4057_ta != nullptr)) {
		return _4057_ta;;
	};
	jule::Ptr<_1ac53c25e_scopeChecker> _4107_parent = (*(_self_))._field_parent;;
	while ((_4107_parent != nullptr)) {
		{
			_4057_ta=_1ac607d96_findTypeAlias((*(_4107_parent))._field_table, &(_40229_ident), _40241_binded, true);
			if ((_4057_ta != nullptr)) {
				return _4057_ta;;
			};
			_4107_parent=(*_4107_parent.alloc)._field_parent;
		}
	_iter_next_1b36be4ea:;
	}
	_iter_end_1b36be4ea:;;
	return _1ac579026_FindTypeAlias((*(_self_))._field_s.ptr(), _40229_ident, _40241_binded);;
}



inline jule::Ptr<_1ac4c767d_Struct> _1ac53d42a_FindStruct(_1ac53c25e_scopeChecker* _self_, jule::Str _42726_ident, jule::Bool _42738_binded) {
	return _1ac579422_FindStruct((*(_self_))._field_s.ptr(), _42726_ident, _42738_binded);;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac53d826_FindFn(_1ac53c25e_scopeChecker* _self_, jule::Str _43622_ident, jule::Bool _43634_binded) {
	return _1ac57981d_FindFn((*(_self_))._field_s.ptr(), _43622_ident, _43634_binded);;
}



inline jule::Ptr<_1ac5008a4_Trait> _1ac53db67_FindTrait(_1ac53c25e_scopeChecker* _self_, jule::Str _44525_ident) {
	return _1ac579b5e_FindTrait((*(_self_))._field_s.ptr(), _44525_ident);;
}



inline jule::Ptr<_1ac5030b0_Enum> _1ac53dea8_FindEnum(_1ac53c25e_scopeChecker* _self_, jule::Str _45424_ident) {
	return _1ac579ea0_FindEnum((*(_self_))._field_s.ptr(), _45424_ident);;
}



inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac53e2e9_FindTypeEnum(_1ac53c25e_scopeChecker* _self_, jule::Str _46328_ident) {
	return _1ac57a2e1_FindTypeEnum((*(_self_))._field_s.ptr(), _46328_ident);;
}



inline jule::Bool _1ac53e64b_isUnsafe(jule::Ptr<_1ac53c25e_scopeChecker> _self_) {
	jule::Ptr<_1ac53c25e_scopeChecker> _4717_scope = _self_;;
	_julec_label_1b36c47b9:;
	if ((*((*(_4717_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_4717_scope.alloc)._field_parent != nullptr)) {
		_4717_scope=(*_4717_scope.alloc)._field_parent;
		goto _julec_label_1b36c47b9;
	};
	return false;;
}



inline jule::Bool _1ac53e8d2_isRoot(_1ac53c25e_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1ac53ead0_stop(_1ac53c25e_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1ac53ed66_stopped(_1ac53c25e_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1ac5400ec_isDeferred(jule::Ptr<_1ac53c25e_scopeChecker> _self_) {
	jule::Ptr<_1ac53c25e_scopeChecker> _5047_scope = _self_;;
	_julec_label_1b36c738d:;
	if ((*((*(_5047_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_5047_scope.alloc)._field_parent != nullptr)) {
		_5047_scope=(*_5047_scope.alloc)._field_parent;
		goto _julec_label_1b36c738d;
	};
	return false;;
}



inline void _1ac5403a5_pushCaptured(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac5a2527_Var>* _52534_v) {
	jule::Ptr<_1ac53c25e_scopeChecker> _5267_sc = _self_;;
	for (;;) {
		{
			if (((*(_5267_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5267_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b36c99bc:;
					if (it != expr_end) {
						jule::Ptr<_1ac5a2527_Var> _52912_cv = *it;
						{
							if ((_52912_cv == (*(_52534_v)))) {
								goto _julec_label_1b36ca913;
							};
						}
						_iter_next_1b36c99bc:;
						++it;
						goto _iter_begin_1b36c99bc;
					}
					_iter_end_1b36c99bc:;
				};
				(*(*(_5267_sc))._field_captured.alloc)=jule::append((*(*(_5267_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_52534_v)); __jule_collection; }));
				_julec_label_1b36ca913:;
			};
			if (((*_5267_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1b36c8c63;
			};
			_5267_sc=(*_5267_sc.alloc)._field_parent;
			if ((!(_1ac63a88a_isVarCaptured(_5267_sc, _5267_sc, (*(_52534_v)))))) {
				goto _iter_end_1b36c8c63;
			};
		}
	_iter_next_1b36c8c63:;
	}
	_iter_end_1b36c8c63:;;
}



inline jule::Ptr<_1ac53c25e_scopeChecker> _1ac54063b_getRoot(jule::Ptr<_1ac53c25e_scopeChecker> _self_) {
	jule::Ptr<_1ac53c25e_scopeChecker> _5507_root = _self_;;
	while ((((*(_5507_root))._field_parent != nullptr) && ((*_5507_root.alloc)._field_owner == nullptr))) {
		{
			_5507_root=(*_5507_root.alloc)._field_parent;
		}
	_iter_next_1b36cb9e1:;
	}
	_iter_end_1b36cb9e1:;;
	return _5507_root;;
}



inline jule::Ptr<_1ac53c25e_scopeChecker> _1ac5408c2_getHardRoot(jule::Ptr<_1ac53c25e_scopeChecker> _self_) {
	jule::Ptr<_1ac53c25e_scopeChecker> _5607_root = _self_;;
	while (((*(_5607_root))._field_parent != nullptr)) {
		{
			_5607_root=(*_5607_root.alloc)._field_parent;
		}
	_iter_next_1b36ccc78:;
	}
	_iter_end_1b36ccc78:;;
	return _5607_root;;
}



inline jule::Ptr<_1ac4e308e_ReferenceStack> _1ac540b58_getOwnerRefers(jule::Ptr<_1ac53c25e_scopeChecker> _self_) {
	return (*((*(_1ac5408c2_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac540e99_findVar(_1ac53c25e_scopeChecker* _self_, jule::Str _57223_ident) {
	;
	;
	jule::Ptr<_1ac5a2527_Var> _5757_v = _1ac6078e0_findVar((*(_self_))._field_table.ptr(), &(_57223_ident), false, true);;
	if ((_5757_v != nullptr)) {
		return _5757_v;;
	};
	jule::Ptr<_1ac53c25e_scopeChecker> _5797_parent = (*(_self_))._field_parent;;
	while ((_5797_parent != nullptr)) {
		{
			_5757_v=_1ac6078e0_findVar((*(_5797_parent))._field_table, &(_57223_ident), false, true);
			if ((_5757_v != nullptr)) {
				return _5757_v;;
			};
			_5797_parent=(*_5797_parent.alloc)._field_parent;
		}
	_iter_next_1b36d0808:;
	}
	_iter_end_1b36d0808:;;
	return nullptr;;
}



inline jule::Ptr<_1ac537a1d_Label> _1ac5412da_findLabel(_1ac53c25e_scopeChecker* _self_, jule::Str* _59326_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b36d283d:;
		if (it != expr_end) {
			jule::Any _59415_st = *it;
			{
				{
					auto &_match_expr{ _59415_st };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1b36d3135:;
						{
							jule::Ptr<_1ac537a1d_Label> _5979_label = _59415_st.unsafe_cast_ptr<_1ac537a1d_Label>();;
							if (((*(_5979_label))._field_Ident == (*(_59326_ident)))) {
								return _5979_label;;
							};
						}
					}
					_match_end_1b36d30be:;
				};
			}
			_iter_next_1b36d283d:;
			++it;
			goto _iter_begin_1b36d283d;
		}
		_iter_end_1b36d283d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac53b26e_scopeLabel> _1ac54162b_findLabelScope(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Str* _60932_ident) {
	jule::Ptr<_1ac53b26e_scopeLabel> _6107_label = _1ac54196c_findLabelAll(_self_.ptr(), _60932_ident);;
	if (((_6107_label != nullptr) && ((*((*_6107_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _6107_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac53b26e_scopeLabel> _1ac54196c_findLabelAll(_1ac53c25e_scopeChecker* _self_, jule::Str* _62029_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b36d8569:;
		if (it != expr_end) {
			jule::Ptr<_1ac53b26e_scopeLabel> _62115_lbl = *it;
			{
				if (((*((*(_62115_lbl))._field_node))._field_Ident == (*(_62029_ident)))) {
					return _62115_lbl;;
				};
			}
			_iter_next_1b36d8569:;
			++it;
			goto _iter_begin_1b36d8569;
		}
		_iter_end_1b36d8569:;
	};
	return nullptr;;
}



inline jule::Bool _1ac541d68_isDuplicatedIdent(_1ac53c25e_scopeChecker* _self_, jule::Uintptr _63233_itself, jule::Str* _63251_ident) {
	jule::Ptr<_1ac5a2527_Var> _6333_v = _1ac53cb33_FindVar(_self_, (*(_63251_ident)), false);;
	if (((_6333_v != nullptr) && (static_cast<jule::Uintptr>(_6333_v) != _63233_itself))) {
		if (((*_6333_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6333_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1ac57a6ed_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1ac63c4e6_TypeAlias> _6413_ta = _1ac53d02e_FindTypeAlias(_self_, (*(_63251_ident)), false);;
	if (((_6413_ta != nullptr) && (static_cast<jule::Uintptr>(_6413_ta) != _63233_itself))) {
		if (((*_6413_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6413_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1ac57a6ed_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1ac542121_checkVarDecl(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b95e8_VarDecl> _65233_decl) {
	jule::Ptr<_1ac5a2527_Var> _6537_v = _1ac4e8407_buildVar(_65233_decl);;
	(*(_6537_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6537_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6537_v, &__jule_any_type8); __jule_collection; }));
	});;
	if (_1ac541d68_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6537_v), &((*_6537_v.alloc)._field_Ident))) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*_6537_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6537_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1ac53ead0_stop(_self_);
		return;;
	};
	_1ac594e98_checkVarDecl((*(_self_))._field_s, &(_6537_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));
	if (((!(_1ac5a2bba_IsTypeInferred(_6537_v))) && (((*_6537_v.alloc)._field_Kind == nullptr) || ((*((*_6537_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1ac59873d_evalVarValue((*(_self_))._field_s, &(_6537_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));
	if (((!(_1ac5a2934_IsInitialized(_6537_v))) || ((*((*_6537_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1ac54838b_removeInteriorMutRisk(_self_, &((*(*(_6537_v))._field_Value.alloc)._field_Data));
	_1ac5983ca_checkVarValue((*(_self_))._field_s, &(_6537_v));
}



inline void _1ac5423c9_checkTypeAlias(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac63c4e6_TypeAlias>* _68336_ta) {
	if (_1ac541d68_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_68336_ta))), &((*((*(_68336_ta))))._field_Ident))) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_68336_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_68336_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1ac53ead0_stop(_self_);
		return;;
	};
	_1ac5891bd_checkTypeAliasDecl((*(_self_))._field_s, _68336_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_68336_ta)); __jule_collection; }));
	if (((*((*((*(_68336_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1ac53ead0_stop(_self_);
	};
}



inline void _1ac542682_checkTypeAliasDecl(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bd29a_TypeAliasDecl> _69939_decl) {
	jule::Ptr<_1ac63c4e6_TypeAlias> _7007_ta = _1ac4e4ed6_buildTypeAlias(_69939_decl);;
	_1ac5423c9_checkTypeAlias(_self_, &(_7007_ta));
}



inline jule::Ptr<_1ac534ec1_Scope> _1ac542918_getChild(_1ac53c25e_scopeChecker* _self_) {
	return jule::new_ptr<_1ac534ec1_Scope>(_1ac534ec1_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1ac542d36_checkChildSsc(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b679e_ScopeTree>* _71035_tree, jule::Ptr<_1ac534ec1_Scope>* _71058_s, jule::Ptr<_1ac53c25e_scopeChecker>* _71074_ssc) {
	(*((*(_71058_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_71058_s))))._field_ChildIndex=(*((*(_71074_ssc))))._field_childIndex;
	(*((*(_71074_ssc))))._field_parent=_self_;
	_1ac54e3d6_check((*(_71074_ssc)), _71035_tree, _71058_s);
}



inline jule::Ptr<_1ac534ec1_Scope> _1ac543232_checkChildSc(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b679e_ScopeTree>* _71734_tree, jule::Ptr<_1ac53c25e_scopeChecker>* _71757_ssc) {
	jule::Ptr<_1ac534ec1_Scope> _7187_s = _1ac542918_getChild(_self_.ptr());;
	_1ac542d36_checkChildSsc(_self_, _71734_tree, &(_7187_s), _71757_ssc);
	return _7187_s;;
}



inline jule::Ptr<_1ac534ec1_Scope> _1ac543573_checkChild(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b679e_ScopeTree>* _72332_tree) {
	jule::Ptr<_1ac53c25e_scopeChecker> _7247_ssc = _1ac54e66c_newChildChecker(_self_);;
	return _1ac543232_checkChildSc(_self_, _72332_tree, &(_7247_ssc));;
}



inline void _1ac54382b_checkAnonScope(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b679e_ScopeTree> _72835_tree) {
	jule::Ptr<_1ac534ec1_Scope> _7297_s = _1ac543573_checkChild(_self_, &(_72835_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7297_s, &__jule_any_type29); __jule_collection; }));
}



inline void _1ac543b8e_processErrorCall(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4d7a45_BuiltinErrorCallExprModel>* _73338_m, jule::Ptr<_1ac4912c3_Token> _73369_err) {
	if (_1ac5400ec_isDeferred(_self_)) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), _73369_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac53c25e_scopeChecker> _7387_root = _1ac54063b_getRoot(_self_);;
	if ((!((*((*((*(_7387_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1ac57b15a_pushErr((*(_self_))._field_s, _73369_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_73338_m))))._field_Func=(*_7387_root.alloc)._field_owner;
}



inline void _1ac543e47_checkExpr(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4aaab2_Expr> _74630_expr) {
	jule::Ptr<_1ac60c285_eval> _7477_eval = _1ac583aad_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));;
	(*(_7477_eval))._field_ignored=true;
	jule::Ptr<_1ac60a55d_Data> _7497_d = _1ac62b0ea_evalExpr(_7477_eval, _74630_expr);;
	if (((_7497_d == nullptr) || ((*(_7497_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7497_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b3709cb6:;
			{
				jule::Ptr<_1ac4d7a45_BuiltinErrorCallExprModel> _7588_m = (*(_7497_d))._field_Model.unsafe_cast_ptr<_1ac4d7a45_BuiltinErrorCallExprModel>();;
				_1ac543b8e_processErrorCall(_self_, &(_7588_m), (*(_74630_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7497_d, &__jule_any_type31); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type38 || _match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40) {
			_case_begin_1b370a3d2:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7497_d, &__jule_any_type31); __jule_collection; }));
			}
		}
		else {
			_case_begin_1b370a36b:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s, (*(_74630_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b370a305:;
	};
}



inline jule::Ptr<_1ac5353de_If> _1ac544288_checkIf(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bc1cd_If> _77628_i) {
	jule::Ptr<_1ac534ec1_Scope> _7777_s = _1ac543573_checkChild(_self_, &((*(_77628_i))._field_Scope));;
	jule::Ptr<_1ac60a55d_Data> _7797_d = _1ac62b0ea_evalExpr(_1ac583aad_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), (*_77628_i.alloc)._field_Expr);;
	if ((_7797_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac646401_Prim> _7847_prim = _1ac64098e_Prim((*(_7797_d))._field_Kind.ptr());;
	if (((_7847_prim == nullptr) || (!(_1ac649635_IsBool(_7847_prim.ptr()))))) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*((*_77628_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac5353de_If>(_1ac5353de_If{._field_Expr=(*(_7797_d))._field_Model, ._field_Scope=_7777_s});;
}



inline jule::Ptr<_1ac5356db_Else> _1ac5445c9_checkElse(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bc5a7_Else> _79630_e) {
	return jule::new_ptr<_1ac5356db_Else>(_1ac5356db_Else{._field_Scope=_1ac543573_checkChild(_self_, &((*(_79630_e))._field_Scope))});;
}



inline void _1ac544882_checkConditional(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bca5d_Conditional> _80237_conditional) {
	jule::Ptr<_1ac535b09_Conditional> _8037_c = jule::new_ptr<_1ac535b09_Conditional>(_1ac535b09_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1ac5353de_If>>(nullptr), ._field_Default=jule::Ptr<_1ac5356db_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8037_c, &__jule_any_type41); __jule_collection; }));
	(*_8037_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5353de_If>>::alloc(0LL, ((*(_80237_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5353de_If>(nullptr); __jule_collection; });
	(*_8037_c.alloc)._field_Elifs=jule::append((*_8037_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5353de_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac544288_checkIf(_self_, (*_80237_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_80237_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3732140:;
		if (it != expr_end) {
			jule::Ptr<_1ac4bc1cd_If> _80915_elif = *it;
			{
				(*_8037_c.alloc)._field_Elifs=jule::append((*_8037_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5353de_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac544288_checkIf(_self_, _80915_elif); __jule_collection; }));
			}
			_iter_next_1b3732140:;
			++it;
			goto _iter_begin_1b3732140;
		}
		_iter_end_1b3732140:;
	};
	if (((*_80237_conditional.alloc)._field_Default != nullptr)) {
		(*_8037_c.alloc)._field_Default=_1ac5445c9_checkElse(_self_, (*_80237_conditional.alloc)._field_Default);
	};
}



inline void _1ac544d5a_checkIterScopeSsc(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Uintptr _81834_it, jule::Ptr<_1ac4b679e_ScopeTree> _81851_tree, jule::Ptr<_1ac534ec1_Scope>* _81874_s, jule::Ptr<_1ac53c25e_scopeChecker> _81889_ssc) {
	(*(_81889_ssc))._field_it=_81834_it;
	_1ac542d36_checkChildSsc(_self_, &(_81851_tree), _81874_s, &(_81889_ssc));
}



inline jule::Ptr<_1ac534ec1_Scope> _1ac545311_checkIterScopeSc(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Uintptr _82333_it, jule::Ptr<_1ac4b679e_ScopeTree> _82350_tree, jule::Ptr<_1ac53c25e_scopeChecker> _82372_ssc) {
	jule::Ptr<_1ac534ec1_Scope> _8247_scope = _1ac542918_getChild(_self_.ptr());;
	_1ac544d5a_checkIterScopeSsc(_self_, _82333_it, _82350_tree, &(_8247_scope), _82372_ssc);
	return _8247_scope;;
}



inline jule::Ptr<_1ac534ec1_Scope> _1ac54570c_checkIterScope(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Uintptr _82931_it, jule::Ptr<_1ac4b679e_ScopeTree>* _82949_tree) {
	jule::Ptr<_1ac53c25e_scopeChecker> _8307_ssc = _1ac54e66c_newChildChecker(_self_);;
	return _1ac545311_checkIterScopeSc(_self_, _82931_it, (*(_82949_tree)), _8307_ssc);;
}



inline void _1ac5459b5_checkInfIter(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ba242_Iter>* _83434_it) {
	jule::Ptr<_1ac535e06_InfIter> _8357_kind = jule::new_ptr<_1ac535e06_InfIter>(_1ac535e06_InfIter{._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8357_kind, &__jule_any_type42); __jule_collection; }));
	(*_8357_kind.alloc)._field_Scope=_1ac54570c_checkIterScope(_self_, static_cast<jule::Uintptr>(_8357_kind), &((*((*(_83434_it))))._field_Scope));
}



inline void _1ac545c6d_checkWhileIter(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ba242_Iter>* _84036_it) {
	jule::Ptr<_1ac4baa6c_WhileKind> _8417_wh = (*((*(_84036_it))))._field_Kind.cast_ptr<_1ac4baa6c_WhileKind>(&__jule_any_type43);;
	if ((((*(_8417_wh))._field_Expr == nullptr) && ((*_8417_wh.alloc)._field_Next == nullptr))) {
		_1ac5459b5_checkInfIter(_self_, _84036_it);
		return;;
	};
	jule::Ptr<_1ac5363ac_WhileIter> _8477_kind = jule::new_ptr<_1ac5363ac_WhileIter>(_1ac5363ac_WhileIter{._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8477_kind, &__jule_any_type44); __jule_collection; }));
	(*_8477_kind.alloc)._field_Scope=_1ac54570c_checkIterScope(_self_, static_cast<jule::Uintptr>(_8477_kind), &((*((*(_84036_it))))._field_Scope));
	if (((*_8417_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1ac60a55d_Data> _8528_d = _1ac62b0ea_evalExpr(_1ac583aad_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), (*_8417_wh.alloc)._field_Expr);;
		if ((_8528_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1ac646401_Prim> _8574_prim = _1ac64098e_Prim((*(_8528_d))._field_Kind.ptr());;
		if ((_8574_prim == nullptr)) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_84036_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1ac649635_IsBool(_8574_prim.ptr())))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_84036_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8477_kind.alloc)._field_Expr=(*(_8528_d))._field_Model;
	};
	if (_1ac4bae13_IsWhileNext(_8417_wh)) {
		if ((!(_1ac5345db_isValidAstStForNextSt(&((*_8417_wh.alloc)._field_Next))))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*_8417_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _8774_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1ac54d01c_checkNode(_self_, &((*_8417_wh.alloc)._field_Next));
		if ((_8774_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8809_st = (*((*(_self_))._field_scope))._field_Stmts[_8774_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8774_n);;
			if ((!(_1ac53482d_isValidStForNextSt(&(_8809_st))))) {
				_1ac57b15a_pushErr((*(_self_))._field_s, (*_8417_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8477_kind.alloc)._field_Next=_8809_st;
		};
	};
}



inline void _1ac54618b_checkComptimeRangeIter(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ba242_Iter>* _89044_it, jule::Ptr<_1ac536d08_RangeIter>* _89060_kind, jule::Ptr<_1ac60a55d_Data>* _89083_d) {
	if (((*((*(_89060_kind))))._field_KeyA != nullptr)) {
		if (((!(_1ac57a6ed_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ac541d68_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_89060_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*(*((*(_89060_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_89060_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_89060_kind))))._field_KeyB != nullptr)) {
		if (((!(_1ac57a6ed_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1ac541d68_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_89060_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*(*((*(_89060_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_89060_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1ac4bb474_RangeKind> _9047_rang = (*((*(_89044_it))))._field_Kind.cast_ptr<_1ac4bb474_RangeKind>(&__jule_any_type45);;
	_1ac54ebde_makeComptimeRange(_89083_d);
	if ((*((*(_89083_d))))._field_Decl) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_9047_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_89083_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1ac6000be_rangeChecker _9117_rc = _1ac6000be_rangeChecker{._field_sc=_self_, ._field_rang=_9047_rang, ._field_Kind=(*(_89060_kind)), ._field_d=(*(_89083_d))};;
	jule::Bool _9173_ok = _1ac602115_check(&_9117_rc);;
	if ((!(_9173_ok))) {
		return;;
	};
	jule::Ptr<_1ac5071e6_comptimeRange> _9227_comptime = _1ac643d38_comptimeRange((*((*(_89083_d))))._field_Kind);;
	((_1ac506ec6_comptimeRangeKindMptrData*)(*(_9227_comptime))._field_kind.safe_type())->_1ac5066bd_ready((*(_9227_comptime))._field_kind.data, &((*((*(_89060_kind))))._field_KeyA), &((*((*(_89060_kind))))._field_KeyB));
	jule::I64 _9247_i = 0LL;;
	jule::I64 _9253_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_9247_i < ((_1ac506ec6_comptimeRangeKindMptrData*)(*_9227_comptime.alloc)._field_kind.safe_type())->_1ac506d72_len((*_9227_comptime.alloc)._field_kind.data)); (_9247_i)++) {
		{
			jule::Ptr<_1ac53c25e_scopeChecker> _9278_ssc = _1ac54e66c_newChildChecker(_self_);;
			jule::Ptr<_1ac534ec1_Scope> _9288_scope = _1ac542918_getChild(_self_);;
			if (((*((*(_89060_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_89060_kind))))._field_KeyA.alloc)._field_Scope=_9288_scope;
				(*((*(_9278_ssc))._field_table))._field_Vars=jule::append((*(*(_9278_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_89060_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_89060_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_89060_kind))))._field_KeyB.alloc)._field_Scope=_9288_scope;
				(*(*(_9278_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9278_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_89060_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1ac506ec6_comptimeRangeKindMptrData*)(*_9227_comptime.alloc)._field_kind.safe_type())->_1ac506adb_step((*_9227_comptime.alloc)._field_kind.data, _9247_i, &((*((*(_89060_kind))))._field_KeyA), &((*((*(_89060_kind))))._field_KeyB));
			_1ac542d36_checkChildSsc(_self_, &((*((*(_89044_it))))._field_Scope), &(_9288_scope), &(_9278_ssc));
			if ((_9253_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1b274473b;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9288_scope, &__jule_any_type29); __jule_collection; }));
		}
	_iter_next_1b274473b:;
	}
	_iter_end_1b274473b:;;
}



inline void _1ac546444_checkRangeIter(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ba242_Iter>* _94736_it) {
	jule::Ptr<_1ac4bb474_RangeKind> _9487_rang = (*((*(_94736_it))))._field_Kind.cast_ptr<_1ac4bb474_RangeKind>(&__jule_any_type45);;
	jule::Ptr<_1ac60a55d_Data> _9507_d = _1ac62aca9_evalExpr1(_1ac583aad_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), (*(_9487_rang))._field_Expr);;
	if ((_9507_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac536d08_RangeIter> _9557_kind = jule::new_ptr<_1ac536d08_RangeIter>(_1ac536d08_RangeIter{._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Expr=_9507_d, ._field_KeyA=jule::Ptr<_1ac5a2527_Var>(nullptr), ._field_KeyB=jule::Ptr<_1ac5a2527_Var>(nullptr)});;
	if ((*((*(_94736_it))))._field_Comptime) {
		_1ac54618b_checkComptimeRangeIter(_self_, _94736_it, &(_9557_kind), &(_9507_d));
		return;;
	};
	if (_1ac642a4b_comptime((*(_9507_d))._field_Kind.ptr())) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*((*_9487_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1ac6000be_rangeChecker _9697_rc = _1ac6000be_rangeChecker{._field_sc=_self_, ._field_rang=_9487_rang, ._field_Kind=_9557_kind, ._field_d=_9507_d};;
	jule::Bool _9753_ok = _1ac602115_check(&_9697_rc);;
	if ((!(_9753_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9557_kind, &__jule_any_type46); __jule_collection; }));
	jule::Ptr<_1ac53c25e_scopeChecker> _9827_ssc = _1ac54e66c_newChildChecker(_self_);;
	jule::Ptr<_1ac534ec1_Scope> _9837_scope = _1ac542918_getChild(_self_);;
	if (((*(_9557_kind))._field_KeyA != nullptr)) {
		if (((!(_1ac57a6ed_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1ac541d68_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9557_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*(*(_9557_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9557_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9557_kind))._field_KeyA.alloc)._field_Scope=_9837_scope;
		(*((*(_9827_ssc))._field_table))._field_Vars=jule::append((*(*(_9827_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9557_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_9557_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1ac57a6ed_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1ac541d68_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9557_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*(*(_9557_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9557_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9557_kind))._field_KeyB.alloc)._field_Scope=_9837_scope;
		(*(*(_9827_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9827_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9557_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1ac544d5a_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9557_kind), (*((*(_94736_it))))._field_Scope, &(_9837_scope), _9827_ssc);
	(*_9557_kind.alloc)._field_Scope=_9837_scope;
}



inline void _1ac5466ec_checkIter(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ba242_Iter> _100730_it) {
	if (_1ac4ba5d8_IsInf(_100730_it.ptr())) {
		if ((*_100730_it.alloc)._field_Comptime) {
			_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*_100730_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1ac5459b5_checkInfIter(_self_, &(_100730_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_100730_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b2760988:;
			{
				if ((*_100730_it.alloc)._field_Comptime) {
					_1ac57b15a_pushErr((*(_self_))._field_s, (*_100730_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1ac545c6d_checkWhileIter(_self_, &(_100730_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b2761b54:;
			{
				_1ac546444_checkRangeIter(_self_, &(_100730_it));
			}
		}
		else {
			_case_begin_1b2761add:;
			{
				jule::outln(_1ac2a1c82_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1b2761a77:;
	};
}



inline jule::Bool _1ac546a3d_checkValidContLabel(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Uintptr _103136_it) {
	jule::Ptr<_1ac53c25e_scopeChecker> _10327_scope = _self_;;
	_julec_label_1b27687a4:;
	if (((*(_10327_scope))._field_it == _103136_it)) {
		return true;;
	};
	if (((*_10327_scope.alloc)._field_parent != nullptr)) {
		_10327_scope=(*_10327_scope.alloc)._field_parent;
		goto _julec_label_1b27687a4;
	};
	return false;;
}



inline jule::Bool _1ac546d7e_checkValidBreakLabel(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Uintptr _104737_ptr) {
	jule::Ptr<_1ac53c25e_scopeChecker> _10487_scope = _self_;;
	_julec_label_1b276b378:;
	if (((*(_10487_scope))._field_it == _104737_ptr)) {
		return true;;
	};
	if (((*_10487_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _10564_mtch = static_cast<jule::Uintptr>((*(((_1ac53a229_Case*)((*_10487_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10564_mtch == _104737_ptr)) {
			return true;;
		};
	};
	if (((*_10487_scope.alloc)._field_parent != nullptr)) {
		_10487_scope=(*_10487_scope.alloc)._field_parent;
		goto _julec_label_1b276b378;
	};
	return false;;
}



inline jule::Ptr<_1ac53718d_ContSt> _1ac5471c0_checkContValidScope(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bbc27_ContSt> _107036_c) {
	if (_1ac5400ec_isDeferred(_self_)) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_107036_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_107036_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1ac53718d_ContSt>(_1ac53718d_ContSt{._field_It=0});;
	};
	jule::Ptr<_1ac53c25e_scopeChecker> _10807_scope = _self_;;
	_julec_label_1b276db3e:;
	{
		
		if (((((*_10807_scope.alloc)._field_it == 0LLU) && ((*_10807_scope.alloc)._field_parent != nullptr)) && ((*_10807_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1b27707de:;
			{
				_10807_scope=(*_10807_scope.alloc)._field_parent;
				goto _julec_label_1b276db3e;
			}
		}
		else if (((*_10807_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1b2770877:;
			{
				return jule::new_ptr<_1ac53718d_ContSt>(_1ac53718d_ContSt{._field_It=(*_10807_scope.alloc)._field_it});;
			}
		}
		_match_end_1b2770745:;
	};
	_1ac57b15a_pushErr((*(_self_))._field_s, (*_107036_c.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ac547478_checkCont(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bbc27_ContSt> _109426_c) {
	jule::Ptr<_1ac53718d_ContSt> _10957_cont = _1ac5471c0_checkContValidScope(_self_, _109426_c);;
	if ((_10957_cont == nullptr)) {
		return;;
	};
	if (((*(_109426_c))._field_Label != nullptr)) {
		jule::Ptr<_1ac53b26e_scopeLabel> _11018_label = _1ac533167_findLabelParent(&((*(*(_109426_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_11018_label == nullptr)) {
			_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*_109426_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109426_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		(*(_11018_label))._field_used=true;
		if ((((*((*(_11018_label))._field_node))._field_Index + 1LL) >= (*((*(*(_11018_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*_109426_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109426_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		jule::I64 _11144_i = ((*(*(_11018_label))._field_node.alloc)._field_Index + 1LL);;
		if ((_11144_i >= (*(*((*(_11018_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*_109426_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _11189_st = (*(*((*(_11018_label))._field_node))._field_Scope.alloc)._field_Stmts[_11144_i];;
			{
				auto &_match_expr{ _11189_st };
				
				if (_match_expr.type == &__jule_any_type42) {
					_case_begin_1b277c554:;
					{
						(*(_10957_cont))._field_It=static_cast<jule::Uintptr>(_11189_st.unsafe_cast_ptr<_1ac535e06_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type46) {
					_case_begin_1b277b1bd:;
					{
						(*(_10957_cont))._field_It=static_cast<jule::Uintptr>(_11189_st.unsafe_cast_ptr<_1ac536d08_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type44) {
					_case_begin_1b277b3aa:;
					{
						(*(_10957_cont))._field_It=static_cast<jule::Uintptr>(_11189_st.unsafe_cast_ptr<_1ac5363ac_WhileIter>());
					}
				}
				else {
					_case_begin_1b277b344:;
					{
						_1ac57b15a_pushErr((*(_self_))._field_s, (*_109426_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109426_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					}
				}
				_match_end_1b277b2cd:;
			};
		};
	};
	if (((*(_10957_cont))._field_It != 0LLU)) {
		if ((!(_1ac546a3d_checkValidContLabel(_self_, (*(_10957_cont))._field_It)))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*_109426_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109426_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10957_cont, &__jule_any_type47); __jule_collection; }));
}



inline void _1ac547731_checkLabel(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b3d62_LabelSt> _114131_l) {
	if ((_1ac5412da_findLabel(_self_.ptr(), &((*(_114131_l))._field_Ident)) != nullptr)) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*_114131_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_114131_l.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ac537a1d_Label> _11477_label = jule::new_ptr<_1ac537a1d_Label>(_1ac537a1d_Label{._field_Ident=(*_114131_l.alloc)._field_Ident, ._field_Scope=(*_self_.alloc)._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11477_label, &__jule_any_type28); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac53b26e_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac53b26e_scopeLabel>(_1ac53b26e_scopeLabel{._field_token=(*_114131_l.alloc)._field_Token, ._field_node=_11477_label, ._field_used=false}); __jule_collection; }));
}



inline void _1ac5479d9_pushGoto(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b423b_GotoSt> _116029_gt) {
	jule::Ptr<_1ac53817d_GotoSt> _11617_st = jule::new_ptr<_1ac53817d_GotoSt>(_1ac53817d_GotoSt{._field_Ident=(*((*_116029_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_116029_gt))._field_Label, ._field_Label=jule::Ptr<_1ac537a1d_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11617_st, &__jule_any_type48); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac53817d_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11617_st; __jule_collection; }));
}



inline void _1ac547c92_checkPostfix(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b522b_AssignSt> _117133_a) {
	if (((*(_117133_a))._field_Left.len() > 1LL)) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*_117133_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac4aaab2_Expr> _11777_expr = (*((*(_117133_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1ac60a55d_Data> _11787_d = _1ac62b0ea_evalExpr(_1ac583aad_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), _11777_expr);;
	if ((_11787_d == nullptr)) {
		return;;
	};
	_1ac534212_checkAssign(&((*_self_.alloc)._field_s), &(_11787_d), nullptr, (*_117133_a.alloc)._field_Setter);
	if ((_1ac640eab_Ptr((*(_11787_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac64d6e4_Ptr> _11868_ptr = _1ac640eab_Ptr((*(_11787_d))._field_Kind);;
		if (_1ac64e261_IsUnsafe(_11868_ptr.ptr())) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*_117133_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_117133_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_11787_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1ac64098e_Prim((*(_11787_d))._field_Kind.ptr()) == nullptr) || (!(_1aa128d2b_IsNum((*(_1ac64098e_Prim((*(_11787_d))._field_Kind)))._field_Kind))))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*_117133_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_117133_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_11787_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ac538557_Postfix>(_1ac538557_Postfix{._field_Expr=(*(_11787_d))._field_Model, ._field_Op=(*((*_117133_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type49); __jule_collection; }));
}



inline jule::Bool _1ac5480d3_isNewAssignIdent(_1ac53c25e_scopeChecker* _self_, jule::Str _120432_ident) {
	if ((_1ac493baa_IsIgnoreIdent(_120432_ident) || (_120432_ident).empty())) {
		return false;;
	};
	return (_1ac608292_defByIdent((*(_self_))._field_table.ptr(), &(_120432_ident), false) == nullptr);;
}



inline void _1ac54838b_removeInteriorMutRisk(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac60a55d_Data>* _121743_d) {
	jule::Ptr<_1ac4ca4d8_StructIns> _12183_s = _1ac642012_Struct((*((*(_121743_d))))._field_Kind.ptr());;
	if ((_12183_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac53c25e_scopeChecker> _12223_root = _1ac5408c2_getHardRoot(_self_);;
	if (((*((*(_12223_root))._field_owner))._field_Owner != _12183_s)) {
		return;;
	};
	(*((*(_121743_d))))._field_Mutable=true;
}



inline jule::Bool _1ac548842_checkStructureAssignOp(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _123144_s, jule::Ptr<_1ac4b522b_AssignSt>* _123164_a, jule::Ptr<_1ac60a55d_Data>* _123183_r) {
	jule::Ptr<_1ac4dee04_FnIns> _123411_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_123164_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b279d3cc:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b279d07a:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b279d0e1:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b279d157:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b279d1bd:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b279d234:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b279d29a:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b279ea4e:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b279eab5:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b279eb2b:;
			{
				_123411_overload=(*((*(_123144_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1b279c860:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_123164_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_123164_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac4ca890_Str((*(_123144_s)).ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1b279d003:;
	};
	if ((_123411_overload == nullptr)) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_123164_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_123164_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac4ca890_Str((*(_123144_s)).ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1ac4ddc9e_ParamIns> _12667_p = (*(_123411_overload))._field_Params[1LL];;
	return _1ac5841c9_checkAssignType((*(_self_))._field_s, (*((*(_12667_p))._field_Decl))._field_Reference, &((*_12667_p.alloc)._field_Kind), _123183_r, (*((*(_123164_a))))._field_Setter, _1ac540b58_getOwnerRefers(_self_));;
}



inline void _1ac548aea_checkSingleAssign(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b522b_AssignSt>* _127039_a) {
	jule::Ptr<_1ac60a55d_Data> _127111_l = nullptr;;
	if ((!(_1ac493baa_IsIgnoreIdent((*((*((*(_127039_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1ac4aaab2_Expr> _12748_expr = (*((*((*(_127039_a))))._field_Left[0LL]))._field_Expr;;
		_127111_l=_1ac62b0ea_evalExpr(_1ac583aad_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), _12748_expr);
		if ((_127111_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ac60c285_eval> _12817_eval = static_cast<jule::Ptr<_1ac60c285_eval>>(nullptr);;
	if ((_127111_l != nullptr)) {
		_12817_eval=_1ac58376c_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0), (*(_127111_l))._field_Kind);
	} else {
		_12817_eval=_1ac583aad_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));
	};
	(*(_12817_eval))._field_unsafety=_1ac53e64b_isUnsafe(_self_);
	jule::Ptr<_1ac60a55d_Data> _12887_r = _1ac62b0ea_evalExpr(_12817_eval, (*((*(_127039_a))))._field_Right);;
	if ((_12887_r == nullptr)) {
		return;;
	};
	_1ac54838b_removeInteriorMutRisk(_self_, &(_12887_r));
	if ((_127111_l == nullptr)) {
		if (_1ac63e6a2_Void((*(_12887_r))._field_Kind.ptr())) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*((*((*(_127039_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_127039_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_127039_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12887_r, &__jule_any_type31); __jule_collection; }));
		return;;
	};
	if ((!(_1ac534212_checkAssign(&((*_self_.alloc)._field_s), &(_127111_l), _12887_r, (*((*(_127039_a))))._field_Setter)))) {
		return;;
	};
	if ((_1ac6427b5_Tup((*(_12887_r))._field_Kind) != nullptr)) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_127039_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac4ce300_OperandExprModel> _13157_lm = jule::new_ptr<_1ac4ce300_OperandExprModel>(_1ac4ce300_OperandExprModel{._field_Kind=(*(_127111_l))._field_Kind, ._field_Model=(*(_127111_l))._field_Model});;
	jule::Ptr<_1ac4ce300_OperandExprModel> _13197_rm = jule::new_ptr<_1ac4ce300_OperandExprModel>(_1ac4ce300_OperandExprModel{._field_Kind=(*(_12887_r))._field_Kind, ._field_Model=(*(_12887_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ac538a0d_Assign>(_1ac538a0d_Assign{._field_Left=_13157_lm, ._field_Right=_13197_rm, ._field_Op=(*((*(_127039_a))))._field_Setter}), &__jule_any_type50); __jule_collection; }));
	if (((*(*((*(_127039_a))))._field_Setter.alloc)._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ac5e3b73_assignTypeChecker _13268_checker = _1ac5e3b73_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_127111_l))._field_Kind, ._field_d=_12887_r, ._field_errorToken=(*((*(_127039_a))))._field_Setter, ._field_refers=_1ac540b58_getOwnerRefers(_self_)};;
		if (_1ac5e4b74_check(&_13268_checker)) {
			(*(_13197_rm))._field_Model=(*(_12887_r))._field_Model;
			(*(_13157_lm))._field_Model=(*(_127111_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _13397_strct = _1ac642012_Struct((*(_127111_l))._field_Kind);;
	if ((_13397_strct != nullptr)) {
		_1ac548842_checkStructureAssignOp(_self_, &(_13397_strct), _127039_a, &(_12887_r));
		return;;
	};
	jule::U64 _13443_id = (*(*((*(_127039_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_127039_a))))._field_Setter.alloc)._field_Id=_1ac54e9ad_removeEqFromOp((*(*((*(_127039_a))))._field_Setter.alloc)._field_Id);
	_1ac62d51a_binaryEval _13467_solver = static__1ac62de77_new(_12817_eval, (*((*(_127039_a))))._field_Setter);;
	({
		jule::Ptr<_1ac60a55d_Data> ___jule_assign_arg = _127111_l;
		jule::Ptr<_1ac60a55d_Data> _1___jule_assign_arg = _12887_r;
		_13467_solver._field_l = ___jule_assign_arg;
		_13467_solver._field_r = _1___jule_assign_arg;
	});
	_1ac633157_evalOp(&_13467_solver);
	(*(*((*(_127039_a))))._field_Setter.alloc)._field_Id=_13443_id;
}



inline void _1ac549238_processEndPartOfMultiAssign(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac538eb4_MultiAssign>* _135249_st, jule::Ptr<_1ac4b522b_AssignSt>* _135272_a, jule::Ptr<_1ac4b4b98_AssignLeft>* _13538_lexpr, jule::Ptr<_1ac60a55d_Data>* _135333_l, jule::Ptr<_1ac60a55d_Data>* _135348_r, jule::Bool _135358_strict) {
	if (((!((*((*(_13538_lexpr))))._field_Reference)) && _1ac493baa_IsIgnoreIdent((*((*(_13538_lexpr))))._field_Ident))) {
		if (_1ac63e6a2_Void((*((*(_135348_r))))._field_Kind.ptr())) {
			_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_135272_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1ac60a55d_Data>> &__jule_push_dest = (*((*(_135249_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_135272_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13538_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type51) {
				_case_begin_1b27c0278:;
				{
					if ((!(_1ac5480d3_isNewAssignIdent(_self_, (*((*(_13538_lexpr))))._field_Ident)))) {
						goto _julec_label_1b27cac9a;
					};
				}
			}
			else {
				_case_begin_1b27c0212:;
				{
					if (((*((*(_13538_lexpr))))._field_Mutable || (*((*(_13538_lexpr))))._field_Reference)) {
						_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_13538_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1b27cac9a;
				}
			}
			_match_end_1b27c019b:;
		};
		if (_1ac541d68_isDuplicatedIdent(_self_, 0LLU, &((*((*(_13538_lexpr))))._field_Ident))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_13538_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13538_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1ac53ead0_stop(_self_);
			return;;
		};
		if (_1ac493baa_IsIgnoreIdent((*((*(_13538_lexpr))))._field_Ident)) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_13538_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ac5a2527_Var> _13858_v = jule::new_ptr<_1ac5a2527_Var>(_1ac5a2527_Var{._field_Scope=(*_self_.alloc)._field_scope, ._field_Token=(*((*(_13538_lexpr))))._field_Token, ._field_Ident=(*((*(_13538_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13538_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13538_lexpr))))._field_Reference, ._field_Kind=jule::Ptr<_1ac6459e9_TypeSymbol>(nullptr), ._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=(*((*(_135272_a))))._field_Right, ._field_Data=(*(_135348_r))}), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr)});;
		_1ac5983ca_checkVarValue((*(_self_))._field_s, &(_13858_v));
		{ jule::Slice<jule::Ptr<_1ac60a55d_Data>> &__jule_push_dest = (*((*(_135249_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=(*((*_13858_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_13858_v.alloc)._field_Mutable, ._field_Reference=(*_13858_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13858_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13858_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1ac5a2527_Var>> &__jule_push_dest = (*((*(_135249_st))))._field_Decls; __jule_push_dest.push(_13858_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13858_v; __jule_collection; }));
		return;;
	};
	_julec_label_1b27cac9a:;
	if (((*((*(_13538_lexpr))))._field_Mutable || (*((*(_13538_lexpr))))._field_Reference)) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_13538_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13538_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1ac534212_checkAssign(&((*_self_.alloc)._field_s), _135333_l, (*(_135348_r)), (*((*(_13538_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _14207_reference = false;;
	if (_1ac58895e_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_135333_l))))._field_Mutable, _14207_reference, &((*((*(_135333_l))))._field_Kind), _135348_r, &((*((*(_13538_lexpr))))._field_Token))) {
		_14207_reference=_135358_strict;
		_1ac5841c9_checkAssignType((*(_self_))._field_s, _14207_reference, &((*((*(_135333_l))))._field_Kind), _135348_r, (*((*(_13538_lexpr))))._field_Token, _1ac540b58_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1ac60a55d_Data>> &__jule_push_dest = (*((*(_135249_st))))._field_Left; __jule_push_dest.push((*(_135333_l))); };
}



inline void _1ac5494e1_checkMultiAssign(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b522b_AssignSt>* _142838_a) {
	if ((((*((*((*(_142838_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU)) && ((*(*((*(_142838_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_142838_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac60a55d_Data> _14337_rd = _1ac62b0ea_evalExpr(_1ac583aad_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), (*((*(_142838_a))))._field_Right);;
	if ((_14337_rd == nullptr)) {
		return;;
	};
	jule::Bool _14377_strict = false;;
	jule::Slice<jule::Ptr<_1ac60a55d_Data>> _14387_right = _1ac5334a8_getDatasFromTupleData(&(_14337_rd));;
	if ((_14387_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14387_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type52) {
				_case_begin_1b27d61a1:;
				{
					jule::Ptr<_1ac4d215a_IndexingExprModel> _14429_iem = (*(_14387_right[0LL]))._field_Model.unsafe_cast_ptr<_1ac4d215a_IndexingExprModel>();;
					if ((_1ac64252e_Map((*((*(_14429_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_14377_strict=true;
						_14387_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac60a55d_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=(*(_1ac64252e_Map((*((*(_14429_iem))._field_Expr))._field_Kind)))._field_Val, ._field_Mutable=(*(_14387_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)}); (*it++) = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1b27d60e6:;
		};
	};
	{
		
		if (((*((*(_142838_a))))._field_Left.len() > _14387_right.len())) {
			_case_begin_1b27d69cb:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_142838_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_142838_a))))._field_Left.len() < _14387_right.len())) {
			_case_begin_1b27d6a42:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_142838_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b27d6932:;
	};
	jule::Ptr<_1ac538eb4_MultiAssign> _14627_st = jule::new_ptr<_1ac538eb4_MultiAssign>(_1ac538eb4_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1ac60a55d_Data>>(nullptr), ._field_Right=(*(_14337_rd))._field_Model});;
	{
		auto expr = &((*((*(_142838_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3821e88:;
		if (it != expr_end) {
			jule::I64 _14657_i = it - expr->begin();
			{
				jule::Ptr<_1ac4b4b98_AssignLeft> _14668_lexpr = (*((*(_142838_a))))._field_Left[_14657_i];;
				jule::Ptr<_1ac60a55d_Data> _146712_l = nullptr;;
				if ((!(_1ac493baa_IsIgnoreIdent((*(_14668_lexpr))._field_Ident)))) {
					if ((!((*((*(_142838_a))))._field_Declarative))) {
						goto _julec_label_1b382372b;
					};
					if (((*_14668_lexpr.alloc)._field_Mutable && (*_14668_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1b3826531;
					};
					{
						auto &_match_expr{ (*((*(_14668_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type51) {
							_case_begin_1b382493b:;
							{
								if (_1ac5480d3_isNewAssignIdent(_self_, (*_14668_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1b3826531;
								};
							}
						}
						_match_end_1b38248b4:;
					};
					_julec_label_1b382372b:;
					_146712_l=_1ac62b0ea_evalExpr(_1ac583aad_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), (*_14668_lexpr.alloc)._field_Expr);
					if ((_146712_l == nullptr)) {
						goto _iter_next_1b3821e88;
					};
					_julec_label_1b3826531:;
				};
				jule::Ptr<_1ac60a55d_Data> _14888_r = _14387_right[_14657_i];;
				_1ac54838b_removeInteriorMutRisk(_self_, &(_14888_r));
				_1ac549238_processEndPartOfMultiAssign(_self_, &(_14627_st), _142838_a, &(_14668_lexpr), &(_146712_l), &(_14888_r), _14377_strict);
			}
			_iter_next_1b3821e88:;
			++it;
			_14657_i++;
			goto _iter_begin_1b3821e88;
		}
		_iter_end_1b3821e88:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14627_st, &__jule_any_type53); __jule_collection; }));
}



inline void _1ac549799_checkAssignSt(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b522b_AssignSt> _149534_a) {
	{
		
		if (_1ac495d55_IsPostfixOp((*((*(_149534_a))._field_Setter))._field_Id)) {
			_case_begin_1b38283ce:;
			{
				_1ac547c92_checkPostfix(_self_, _149534_a);
			}
		}
		else if (((*(_149534_a))._field_Left.len() == 1LL)) {
			_case_begin_1b382807c:;
			{
				_1ac548aea_checkSingleAssign(_self_, &(_149534_a));
			}
		}
		else {
			_case_begin_1b3828016:;
			{
				_1ac5494e1_checkMultiAssign(_self_, &(_149534_a));
			}
		}
		_match_end_1b3827e28:;
	};
}



inline jule::Ptr<_1ac534ec1_Scope> _1ac549b95_checkCaseScope(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac53a229_Case>* _150632_c, jule::Ptr<_1ac4b679e_ScopeTree>* _150647_tree) {
	jule::Ptr<_1ac53c25e_scopeChecker> _15077_ssc = _1ac54e66c_newChildChecker(_self_);;
	(*(_15077_ssc))._field_cse=static_cast<jule::Uintptr>((*(_150632_c)));
	return _1ac543232_checkChildSc(_self_, _150647_tree, &(_15077_ssc));;
}



inline jule::Ptr<_1ac53a229_Case> _1ac54a206_checkCase(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac539701_Match> _151230_m, jule::I64 _151241_i, jule::Ptr<_1ac4bd751_Case> _151253_c, jule::Ptr<_1ac60a55d_Data> _151272_expr) {
	jule::Ptr<_1ac53a229_Case> _15137_case = (*(_151230_m))._field_Cases[_151241_i];;
	(*(_15137_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac60a55d_Data>>::alloc(0LL, (*(_151253_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac60a55d_Data>(nullptr); __jule_collection; });
	jule::Bool _15157_constMatched = false;;
	jule::Ptr<_1ac60c285_eval> _15167_eval = _1ac583aad_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));;
	{
		auto expr = &((*_151253_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b374ce80:;
		if (it != expr_end) {
			jule::Ptr<_1ac4aaab2_Expr> _151715_e = *it;
			{
				jule::Ptr<_1ac60a55d_Data> _15188_d = _1ac62a2d6_evalExprKind(_15167_eval, (*(_151715_e))._field_Kind);;
				if ((_15188_d == nullptr)) {
					goto _iter_next_1b374ce80;
				};
				if ((*_151230_m.alloc)._field_TypeMatch) {
					(*_15137_case.alloc)._field_Exprs=jule::append((*_15137_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac60a55d_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15188_d; __jule_collection; }));
					if ((_1ac5505e6_countMatchType(&(_151230_m), &((*(_15188_d))._field_Kind)) > 1LL)) {
						_1ac57b15a_pushErr((*(_self_))._field_s, (*_151715_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_15188_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
					};
					if ((*_151230_m.alloc)._field_Comptime) {
						_15157_constMatched=(_15157_constMatched || _1ac63da25_Equal((*(_151272_expr))._field_Kind, (*(_15188_d))._field_Kind));
					} else {
						if ((_1ac6414c8_TypeEnum((*(_151272_expr))._field_Kind) != nullptr)) {
							_1ac584b36_checkTypeCompatibility((*(_self_))._field_s, &((*(_151272_expr))._field_Kind), &((*(_15188_d))._field_Kind), &((*_151715_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1ac5008a4_Trait> _15377_trt = _1ac642298_Trait((*(_151272_expr))._field_Kind);;
							if ((_15377_trt != nullptr)) {
								_1ac584b36_checkTypeCompatibility((*(_self_))._field_s, &((*(_151272_expr))._field_Kind), &((*(_15188_d))._field_Kind), &((*_151715_e.alloc)._field_Token));
							};
						};
					};
					_1ac636b2d_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_15188_d))._field_Kind), &((*((*_151230_m.alloc)._field_Expr))._field_Kind), &((*_151715_e.alloc)._field_Token), _1ac540b58_getOwnerRefers(_self_));
					goto _iter_next_1b374ce80;
				};
				if ((*(_15188_d))._field_Decl) {
					_1ac57b15a_pushErr((*(_self_))._field_s, (*_151715_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1b374ce80;
				};
				if ((*_151230_m.alloc)._field_Comptime) {
					if (((!(_1ac60ae98_IsConst(_15188_d.ptr()))) && (_1ac644355_comptimeTypeInfo((*(_15188_d))._field_Kind) == nullptr))) {
						_1ac57b15a_pushErr((*(_self_))._field_s, (*_151715_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1b374ce80;
					};
					if ((!(_15157_constMatched))) {
						if (_1ac60ae98_IsConst(_15188_d.ptr())) {
							_15157_constMatched=(_1ac60ae98_IsConst(_151272_expr.ptr()) && _1aa12eea8_Eq((*(_15188_d))._field_Constant.ptr(), (*((*(_151272_expr))._field_Constant))));
						} else {
							jule::Ptr<_1ac5170e6_comptimeTypeInfo> _15637_exprCti = _1ac644355_comptimeTypeInfo((*(_151272_expr))._field_Kind);;
							_15157_constMatched=((_15637_exprCti != nullptr) && _1ac63da25_Equal((*(_1ac644355_comptimeTypeInfo((*(_15188_d))._field_Kind)))._field_base, (*_15637_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15137_case.alloc)._field_Exprs=jule::append((*_15137_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac60a55d_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15188_d; __jule_collection; }));
				if ((((!((*_151230_m.alloc)._field_Comptime)) || (_1ac644355_comptimeTypeInfo((*(_151272_expr))._field_Kind) == nullptr)) || (_1ac644355_comptimeTypeInfo((*(_15188_d))._field_Kind) == nullptr))) {
					_1ac5e3b73_assignTypeChecker _15739_checker = _1ac5e3b73_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_151272_expr))._field_Kind, ._field_d=_15188_d, ._field_errorToken=(*_151715_e.alloc)._field_Token, ._field_refers=_1ac540b58_getOwnerRefers(_self_)};;
					_1ac5e4b74_check(&_15739_checker);
				};
			}
			_iter_next_1b374ce80:;
			++it;
			goto _iter_begin_1b374ce80;
		}
		_iter_end_1b374ce80:;
	};
	if (((!((*_151230_m.alloc)._field_Comptime)) || _15157_constMatched)) {
		(*_15137_case.alloc)._field_Scope=_1ac549b95_checkCaseScope(_self_, &(_15137_case), &((*_151253_c.alloc)._field_Scope));
	};
	return _15137_case;;
}



inline void _1ac54a624_checkCases(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4be06a_MatchCase>* _158932_m, jule::Ptr<_1ac539701_Match> _158951_rm, jule::Ptr<_1ac60a55d_Data> _158967_expr) {
	(*(_158951_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac53a229_Case>>::alloc(0LL, (*((*(_158932_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac53a229_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_158932_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b37623c3:;
		if (it != expr_end) {
			jule::I64 _15917_i = it - expr->begin();
			{
				jule::Ptr<_1ac53a229_Case> _15928_case = jule::new_ptr<_1ac53a229_Case>(_1ac53a229_Case{._field_Owner=_158951_rm, ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1ac60a55d_Data>>(nullptr), ._field_Next=jule::Ptr<_1ac53a229_Case>(nullptr)});;
				if ((_15917_i > 0LL)) {
					(*((*_158951_rm.alloc)._field_Cases[(_15917_i - 1LL)]))._field_Next=_15928_case;
				};
				(*_158951_rm.alloc)._field_Cases=jule::append((*_158951_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac53a229_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15928_case; __jule_collection; }));
			}
			_iter_next_1b37623c3:;
			++it;
			_15917_i++;
			goto _iter_begin_1b37623c3;
		}
		_iter_end_1b37623c3:;
	};
	if ((((*_158951_rm.alloc)._field_Default != nullptr) && ((*((*(_158932_m))))._field_Cases.len() > 0LL))) {
		(*((*_158951_rm.alloc)._field_Cases[((*_158951_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_158951_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_158932_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3765915:;
		if (it != expr_end) {
			jule::I64 _16058_i = it - expr->begin();
			jule::Ptr<_1ac4bd751_Case> _160515_c = *it;
			{
				_1ac54a206_checkCase(_self_, _158951_rm, _16058_i, _160515_c, _158967_expr);
			}
			_iter_next_1b3765915:;
			++it;
			_16058_i++;
			goto _iter_begin_1b3765915;
		}
		_iter_end_1b3765915:;
	};
}



inline jule::Ptr<_1ac53a229_Case> _1ac54aa20_checkDefault(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac539701_Match> _161033_m, jule::Ptr<_1ac4bc5a7_Else> _161048_d) {
	jule::Ptr<_1ac53a229_Case> _16117_def = jule::new_ptr<_1ac53a229_Case>(_1ac53a229_Case{._field_Owner=_161033_m, ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1ac60a55d_Data>>(nullptr), ._field_Next=jule::Ptr<_1ac53a229_Case>(nullptr)});;
	(*(_16117_def))._field_Scope=_1ac549b95_checkCaseScope(_self_, &(_16117_def), &((*(_161048_d))._field_Scope));
	return _16117_def;;
}



inline void _1ac54ad83_checkComptimePanic(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4912c3_Token> _161839_callToken, jule::Ptr<_1ac534ec1_Scope>* _161859_s) {
	if (((*((*(_161859_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16223_stmt = (*((*(_161859_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16223_stmt };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b3769111:;
			{
				jule::Ptr<_1ac60a55d_Data> _16254_d = _16223_stmt.unsafe_cast_ptr<_1ac60a55d_Data>();;
				{
					auto &_match_expr{ (*(_16254_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1b376a112:;
						{
							jule::Ptr<_1ac4d5e3e_BuiltinPanicCallExprModel> _16289_m = (*(_16254_d))._field_Model.unsafe_cast_ptr<_1ac4d5e3e_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16289_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type20) {
									_case_begin_1b376b2cd:;
									{
										jule::Ptr<_1aa1293c0_Const> _16316_c = (*(_16289_m))._field_Expr.unsafe_cast_ptr<_1aa1293c0_Const>();;
										if ((!(_1aa12db77_IsStr(_16316_c.ptr())))) {
											goto _match_end_1b376b256;
										};
										if ((_161839_callToken == nullptr)) {
											jule::Ptr<_1ac53c25e_scopeChecker> _163611_root = _1ac5408c2_getHardRoot(_self_);;
											if (((*(_163611_root))._field_calledFrom == nullptr)) {
												_161839_callToken=(*(_16289_m))._field_Token;
											} else {
												_161839_callToken=(*(_163611_root))._field_calledFrom;
											};
										};
										_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), _161839_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aa12b57b_ReadStr(_16316_c), &__jule_any_type4); __jule_collection; }));
										_1ac53ead0_stop(_self_);
									}
								}
								_match_end_1b376b256:;
							};
						}
					}
					_match_end_1b376a09b:;
				};
			}
		}
		_match_end_1b376864e:;
	};
}



inline void _1ac54b1e6_processConstMatch(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac539701_Match>* _165039_tm, jule::Ptr<_1ac4be06a_MatchCase>* _165056_m) {
	{
		auto expr = &((*((*(_165039_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b376b751:;
		if (it != expr_end) {
			jule::I64 _16518_i = it - expr->begin();
			jule::Ptr<_1ac53a229_Case> _165115_c = *it;
			{
				if (((*(_165115_c))._field_Scope != nullptr)) {
					jule::Ptr<_1ac4912c3_Token> _165313_token = nullptr;;
					if (((!((*((*(_165039_tm))))._field_TypeMatch)) && ((*(*(_165115_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_165313_token=(*((*((*((*(_165056_m))))._field_Cases[_16518_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1ac54ad83_checkComptimePanic(_self_, _165313_token, &((*_165115_c.alloc)._field_Scope));
					(*((*(_165039_tm))))._field_Default=_165115_c;
					(*((*(_165039_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1b376b751:;
			++it;
			_16518_i++;
			goto _iter_begin_1b376b751;
		}
		_iter_end_1b376b751:;
	};
	if (((*((*(_165056_m))))._field_Default != nullptr)) {
		(*((*(_165039_tm))))._field_Cases=nullptr;
		(*((*(_165039_tm))))._field_Default=_1ac54aa20_checkDefault(_self_, (*(_165039_tm)), (*((*(_165056_m))))._field_Default);
		if (((*((*(_165039_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1ac4912c3_Token> _166713_token = nullptr;;
			if ((!((*((*(_165039_tm))))._field_TypeMatch))) {
				_166713_token=(*((*((*((*(_165056_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1ac54ad83_checkComptimePanic(_self_, _166713_token, &((*(*((*(_165039_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_165039_tm))))._field_Cases=nullptr;
	};
}



inline void _1ac54b49e_checkTypeMatch(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4be06a_MatchCase>* _167936_m) {
	jule::Ptr<_1ac60a55d_Data> _16807_d = _1ac62a627_eval1(_1ac583aad_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), (*((*(_167936_m))))._field_Expr);;
	if ((_16807_d == nullptr)) {
		return;;
	};
	if ((*((*(_167936_m))))._field_Comptime) {
		jule::Ptr<_1ac5170e6_comptimeTypeInfo> _16868_cti = _1ac644355_comptimeTypeInfo((*(_16807_d))._field_Kind.ptr());;
		if ((_16868_cti == nullptr)) {
			if ((!((*(_16807_d))._field_Decl))) {
				_1ac57b15a_pushErr((*(_self_))._field_s, (*((*((*(_167936_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_16807_d))._field_Kind=(*(_16868_cti))._field_base;
		};
	} else if (((*(_16807_d))._field_Decl || (!(((((_1ac64098e_Prim((*(_16807_d))._field_Kind.ptr()) != nullptr) && _1ac649b52_IsAny(_1ac64098e_Prim((*(_16807_d))._field_Kind).ptr())) || (_1ac642298_Trait((*(_16807_d))._field_Kind) != nullptr)) || (_1ac6414c8_TypeEnum((*(_16807_d))._field_Kind) != nullptr)))))) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*((*((*(_167936_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac539701_Match> _17007_tm = jule::new_ptr<_1ac539701_Match>(_1ac539701_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16807_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_167936_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1ac53a229_Case>>(nullptr), ._field_Default=jule::Ptr<_1ac53a229_Case>(nullptr)});;
	if (((!((*(_17007_tm))._field_Comptime)) && ((*((*(_167936_m))))._field_Default != nullptr))) {
		(*_17007_tm.alloc)._field_Default=_1ac54aa20_checkDefault(_self_, _17007_tm, (*((*(_167936_m))))._field_Default);
	};
	_1ac54a624_checkCases(_self_, _167936_m, _17007_tm, _16807_d);
	if ((*_17007_tm.alloc)._field_Comptime) {
		_1ac54b1e6_processConstMatch(_self_, &(_17007_tm), _167936_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17007_tm, &__jule_any_type54); __jule_collection; }));
}



inline void _1ac54b757_checkCommonMatch(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4be06a_MatchCase>* _172238_m) {
	jule::Ptr<_1ac60a55d_Data> _172311_d = nullptr;;
	if (((*((*(_172238_m))))._field_Expr == nullptr)) {
		_172311_d=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aa129dc6_NewBool(true)});
		(*(_172311_d))._field_Model=jule::Any((*_172311_d.alloc)._field_Constant, &__jule_any_type20);
	} else {
		_172311_d=_1ac62aca9_evalExpr1(_1ac583aad_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), (*((*(_172238_m))))._field_Expr);
		if ((_172311_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_172238_m))))._field_Comptime) {
		if ((!(_1ac54eea8_canComptimeMatch(&(_172311_d))))) {
			_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_172238_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1ac642a4b_comptime((*(_172311_d))._field_Kind.ptr())) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_172238_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac539701_Match> _17497_mc = jule::new_ptr<_1ac539701_Match>(_1ac539701_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_172311_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_172238_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1ac53a229_Case>>(nullptr), ._field_Default=jule::Ptr<_1ac53a229_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17497_mc, &__jule_any_type54); __jule_collection; }));
	if (((!((*(_17497_mc))._field_Comptime)) && ((*((*(_172238_m))))._field_Default != nullptr))) {
		(*_17497_mc.alloc)._field_Default=_1ac54aa20_checkDefault(_self_, _17497_mc, (*((*(_172238_m))))._field_Default);
	};
	_1ac54a624_checkCases(_self_, _172238_m, _17497_mc, _172311_d);
	if ((*_17497_mc.alloc)._field_Comptime) {
		_1ac54b1e6_processConstMatch(_self_, &(_17497_mc), _172238_m);
	};
}



inline void _1ac54ba10_checkMatch(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4be06a_MatchCase> _177331_m) {
	if ((*(_177331_m))._field_TypeMatch) {
		_1ac54b49e_checkTypeMatch(_self_, &(_177331_m));
		return;;
	};
	_1ac54b757_checkCommonMatch(_self_, &(_177331_m));
}



inline void _1ac54bcb8_checkFall(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b4538_FallSt> _178126_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1ac5400ec_isDeferred(_self_))) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_178126_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1ac53a229_Case* _17897_case = ((_1ac53a229_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_17897_case))._field_Owner))._field_Comptime) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*_178126_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17897_case))._field_Next == nullptr)) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*_178126_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ac53a922_FallSt>(_1ac53a922_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17897_case))._field_Next)}), &__jule_any_type55); __jule_collection; }));
}



inline jule::Ptr<_1ac537567_BreakSt> _1ac54c109_checkBreakWithLabel(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bb84d_BreakSt> _180436_b) {
	jule::Ptr<_1ac537567_BreakSt> _18057_brk = _1ac54c44a_checkPlainBreak(_self_, _180436_b);;
	if ((_18057_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18057_brk))._field_It=0LLU;
	(*(_18057_brk))._field_Mtch=0LLU;
	jule::Ptr<_1ac53b26e_scopeLabel> _18157_label = _1ac533167_findLabelParent(&((*((*(_180436_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18157_label == nullptr)) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*(_18157_label))._field_used=true;
	if ((((*((*(_18157_label))._field_node))._field_Index + 1LL) >= (*((*(*(_18157_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _18283_i = ((*(*(_18157_label))._field_node.alloc)._field_Index + 1LL);;
	if ((_18283_i >= (*(*((*(_18157_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	} else {
		jule::Any _18328_st = (*(*((*(_18157_label))._field_node))._field_Scope.alloc)._field_Stmts[_18283_i];;
		{
			auto &_match_expr{ _18328_st };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1b37a3ed6:;
				{
					(*(_18057_brk))._field_It=static_cast<jule::Uintptr>(_18328_st.unsafe_cast_ptr<_1ac535e06_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1b37a2b50:;
				{
					(*(_18057_brk))._field_It=static_cast<jule::Uintptr>(_18328_st.unsafe_cast_ptr<_1ac536d08_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1b37a2d3c:;
				{
					(*(_18057_brk))._field_It=static_cast<jule::Uintptr>(_18328_st.unsafe_cast_ptr<_1ac5363ac_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type54) {
				_case_begin_1b37a2da3:;
				{
					(*(_18057_brk))._field_Mtch=static_cast<jule::Uintptr>(_18328_st.unsafe_cast_ptr<_1ac539701_Match>());
				}
			}
			else {
				_case_begin_1b37a2cc6:;
				{
					_1ac57b15a_pushErr((*(_self_))._field_s, (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				}
			}
			_match_end_1b37a2c60:;
		};
	};
	if (((*(_18057_brk))._field_It != 0LLU)) {
		if ((!(_1ac546d7e_checkValidBreakLabel(_self_, (*(_18057_brk))._field_It)))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	if (((*(_18057_brk))._field_Mtch != 0LLU)) {
		if ((!(_1ac546d7e_checkValidBreakLabel(_self_, (*(_18057_brk))._field_Mtch)))) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*_180436_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180436_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	return _18057_brk;;
}



inline jule::Ptr<_1ac537567_BreakSt> _1ac54c44a_checkPlainBreak(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bb84d_BreakSt> _186232_b) {
	if (_1ac5400ec_isDeferred(_self_)) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_186232_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac53c25e_scopeChecker> _18687_scope = _self_;;
	_julec_label_1b37aa74b:;
	{
		
		if ((((((*_18687_scope.alloc)._field_it == 0LLU) && ((*_18687_scope.alloc)._field_cse == 0LLU)) && ((*_18687_scope.alloc)._field_parent != nullptr)) && ((*_18687_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1b37ab928:;
			{
				_18687_scope=(*_18687_scope.alloc)._field_parent;
				goto _julec_label_1b37aa74b;
			}
		}
		else if (((*_18687_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1b37ab9b1:;
			{
				return jule::new_ptr<_1ac537567_BreakSt>(_1ac537567_BreakSt{._field_It=(*_18687_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18687_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1b37aba27:;
			{
				return jule::new_ptr<_1ac537567_BreakSt>(_1ac537567_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1ac53a229_Case*)((*_18687_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1b37ab829:;
	};
	_1ac57b15a_pushErr((*(_self_))._field_s, (*_186232_b.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ac54c703_checkBreak(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4bb84d_BreakSt> _188427_b) {
	if (((*(_188427_b))._field_Label != nullptr)) {
		jule::Ptr<_1ac537567_BreakSt> _18868_brk = _1ac54c109_checkBreakWithLabel(_self_, _188427_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18868_brk, &__jule_any_type56); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ac537567_BreakSt> _18917_brk = _1ac54c44a_checkPlainBreak(_self_, _188427_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18917_brk, &__jule_any_type56); __jule_collection; }));
}



inline void _1ac54c9ab_checkRet(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b99c2_RetSt> _189529_r) {
	if (_1ac5400ec_isDeferred(_self_)) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189529_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac53acb8_RetSt> _19007_rt = jule::new_ptr<_1ac53acb8_RetSt>(_1ac53acb8_RetSt{._field_Func=(*(_1ac54063b_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19007_rt, &__jule_any_type57); __jule_collection; }));
	jule::Ptr<_1ac602830_retTypeChecker> _19057_rtc = jule::new_ptr<_1ac602830_retTypeChecker>(_1ac602830_retTypeChecker{._field_sc=_self_, ._field_f=(*(_19007_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>(nullptr), ._field_errorToken=(*_189529_r.alloc)._field_Token, ._field_model=jule::Any(nullptr)});;
	jule::Bool _19103_ok = _1ac603820_check(_19057_rtc.ptr(), &((*_189529_r.alloc)._field_Expr));;
	if ((!(_19103_ok))) {
		return;;
	};
	if (((*_189529_r.alloc)._field_Expr != nullptr)) {
		(*_19007_rt.alloc)._field_Expr=(*_19057_rtc.alloc)._field_model;
	};
}



inline void _1ac54cc64_checkUseExpr(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4ab486_UseExpr> _192029_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_192029_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1ac5400ec_isDeferred(_self_)) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*_192029_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*_192029_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1ac54d01c_checkNode(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Any* _193631_node) {
	{
		auto &_match_expr{ (*(_193631_node)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1b37c2158:;
			{
				_1ac54382b_checkAnonScope(_self_, (*(_193631_node)).cast_ptr<_1ac4b679e_ScopeTree>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b37c24bb:;
			{
				_1ac542121_checkVarDecl(_self_, (*(_193631_node)).cast_ptr<_1ac4b95e8_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b37c2532:;
			{
				_1ac542682_checkTypeAliasDecl(_self_, (*(_193631_node)).cast_ptr<_1ac4bd29a_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b37c2598:;
			{
				_1ac543e47_checkExpr(_self_, (*(_193631_node)).cast_ptr<_1ac4aaab2_Expr>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1b37c28d9:;
			{
				_1ac544882_checkConditional(_self_, (*(_193631_node)).cast_ptr<_1ac4bca5d_Conditional>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1b37c2950:;
			{
				_1ac5466ec_checkIter(_self_, (*(_193631_node)).cast_ptr<_1ac4ba242_Iter>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b37c29b6:;
			{
				_1ac547478_checkCont(_self_, (*(_193631_node)).cast_ptr<_1ac4bbc27_ContSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b37c2a2c:;
			{
				_1ac547731_checkLabel(_self_, (*(_193631_node)).cast_ptr<_1ac4b3d62_LabelSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b37c2a93:;
			{
				_1ac5479d9_pushGoto(_self_, (*(_193631_node)).cast_ptr<_1ac4b423b_GotoSt>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b37c2b09:;
			{
				_1ac549799_checkAssignSt(_self_, (*(_193631_node)).cast_ptr<_1ac4b522b_AssignSt>(&__jule_any_type65));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b37c2b81:;
			{
				_1ac54ba10_checkMatch(_self_, (*(_193631_node)).cast_ptr<_1ac4be06a_MatchCase>(&__jule_any_type66));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b37c2c08:;
			{
				_1ac54bcb8_checkFall(_self_, (*(_193631_node)).cast_ptr<_1ac4b4538_FallSt>(&__jule_any_type67));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1b37c2c80:;
			{
				_1ac54c703_checkBreak(_self_, (*(_193631_node)).cast_ptr<_1ac4bb84d_BreakSt>(&__jule_any_type68));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b37c2d07:;
			{
				_1ac54c9ab_checkRet(_self_, (*(_193631_node)).cast_ptr<_1ac4b99c2_RetSt>(&__jule_any_type69));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b37c2d7e:;
			{
				_1ac54cc64_checkUseExpr(_self_, (*(_193631_node)).cast_ptr<_1ac4ab486_UseExpr>(&__jule_any_type70));
			}
		}
		else {
			_case_begin_1b37c2334:;
			{
				jule::outln(_1ac2a1c82_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1b37c22bd:;
	};
}



inline void _1ac54d21a_checkResult(jule::Ptr<_1ac53c25e_scopeChecker> _self_) {
	_1ac4b613e_Stmt _19747_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19747_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b37e95d1:;
			{
				jule::Ptr<_1ac4ab486_UseExpr> _19778_ue = _19747_stmt._field_Data.unsafe_cast_ptr<_1ac4ab486_UseExpr>();;
				jule::Ptr<_1ac60a55d_Data> _19788_d = _1ac62b0ea_evalExpr(_1ac583aad_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), (*(_19778_ue))._field_Expr);;
				if ((_19788_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19788_d, &__jule_any_type31); __jule_collection; }));
				jule::Ptr<_1ac602830_retTypeChecker> _19838_rtc = jule::new_ptr<_1ac602830_retTypeChecker>(_1ac602830_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_types=_1ac4e1136_Types((*_self_.alloc)._field_result.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>(nullptr), ._field_errorToken=(*((*_19778_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr)});;
				_1ac603820_check(_19838_rtc.ptr(), &((*_19778_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b37eb506:;
			{
				jule::Ptr<_1ac4aaab2_Expr> _19908_expr = _19747_stmt._field_Data.unsafe_cast_ptr<_1ac4aaab2_Expr>();;
				jule::Ptr<_1ac60a55d_Data> _19918_d = _1ac62b0ea_evalExpr(_1ac583aad_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)), _19908_expr);;
				if ((_19918_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19918_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1b38021aa:;
						{
							jule::Ptr<_1ac4d7a45_BuiltinErrorCallExprModel> _19979_m = (*(_19918_d))._field_Model.unsafe_cast_ptr<_1ac4d7a45_BuiltinErrorCallExprModel>();;
							_1ac543b8e_processErrorCall(_self_, &(_19979_m), (*(_19908_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19918_d, &__jule_any_type31); __jule_collection; }));
						}
					}
					else {
						_case_begin_1b3802386:;
						{
							return;;
						}
					}
					_match_end_1b3802320:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64 || _match_expr.type == &__jule_any_type68 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type69) {
			_case_begin_1b37eab65:;
			{
				_1ac54d01c_checkNode(_self_, &(_19747_stmt._field_Data));
			}
		}
		else {
			_case_begin_1b37eaaee:;
			{
				_1ac54d01c_checkNode(_self_, &(_19747_stmt._field_Data));
				return;;
			}
		}
		_match_end_1b37eaa88:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1ac54d418_checkTree(jule::Ptr<_1ac53c25e_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _20197_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20197_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20197_n); ((*_self_.alloc)._field_i)++) {
		{
			_1ac4b613e_Stmt _20278_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1ac54d01c_checkNode(_self_, &(_20278_stmt._field_Data));
			if (_1ac53ed66_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1b3806005:;
	}
	_iter_end_1b3806005:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1ac54d21a_checkResult(_self_);
	};
}



inline void _1ac54d77b_checkGoto(_1ac53c25e_scopeChecker* _self_, jule::Ptr<_1ac53817d_GotoSt>* _203830_gt, jule::Ptr<_1ac53b26e_scopeLabel>* _203848_label) {
	jule::I64 _20397_n = 0LL;;
	if (((*((*(_203830_gt))))._field_Scope == (*((*((*(_203848_label))))._field_node))._field_Scope)) {
		if (((*((*(_203830_gt))))._field_Index > (*(*((*(_203848_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20397_n=(*((*(_203830_gt))))._field_Index;
	} else if (((*((*((*(_203830_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_203848_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1ac534ec1_Scope> _20528_gtsc = (*((*(_203830_gt))))._field_Scope;;
		while ((((*_20528_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_203848_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20528_gtsc=(*_20528_gtsc.alloc)._field_Parent;
			}
		_iter_next_1b380b45b:;
		}
		_iter_end_1b380b45b:;;
		if (((*_20528_gtsc.alloc)._field_StmtIndex > (*(*((*(_203848_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20397_n=(*_20528_gtsc.alloc)._field_StmtIndex;
	} else {
		_20397_n=0LL;
	};
	jule::Ptr<_1ac534ec1_Scope> _20747_s = (*((*((*(_203848_label))))._field_node))._field_Scope;;
	jule::I64 _20757_i = ((*(*((*(_203848_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20757_i >= _20397_n); (_20757_i)--) {
				{
					jule::Any _20789_stmt = (*(_20747_s))._field_Stmts[_20757_i];;
					if (_1ac550272_stmtIsDef(&(_20789_stmt))) {
						_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_203830_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203830_gt))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1b380ee65:;
			}
			_iter_end_1b380ee65:;;
			if (((*_20747_s.alloc)._field_ChildIndex > (*((*((*(_203830_gt))))._field_Scope))._field_ChildIndex)) {
				_20747_s=(*_20747_s.alloc)._field_Parent;
				_20757_i=((*_20747_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1b380eae1;
			};
			goto _iter_end_1b380eae1;
		}
	_iter_next_1b380eae1:;
	}
	_iter_end_1b380eae1:;;
}



inline void _1ac54d979_checkGotos(_1ac53c25e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3812b27:;
		if (it != expr_end) {
			jule::Ptr<_1ac53817d_GotoSt> _209615_gt = *it;
			{
				jule::Ptr<_1ac53b26e_scopeLabel> _20978_label = _1ac54196c_findLabelAll(_self_, &((*(_209615_gt))._field_Ident));;
				if ((_20978_label == nullptr)) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*_209615_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209615_gt.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					goto _iter_next_1b3812b27;
				};
				(*_209615_gt.alloc)._field_Label=(*(_20978_label))._field_node;
				(*(_20978_label))._field_used=true;
				_1ac54d77b_checkGoto(_self_, &(_209615_gt), &(_20978_label));
			}
			_iter_next_1b3812b27:;
			++it;
			goto _iter_begin_1b3812b27;
		}
		_iter_end_1b3812b27:;
	};
}



inline void _1ac54db77_checkLabels(_1ac53c25e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b381570c:;
		if (it != expr_end) {
			jule::Ptr<_1ac53b26e_scopeLabel> _210910_l = *it;
			{
				if ((!((*(_210910_l))._field_used))) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*_210910_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_210910_l.alloc)._field_node))._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1b381570c:;
			++it;
			goto _iter_begin_1b381570c;
		}
		_iter_end_1b381570c:;
	};
}



inline void _1ac54dd75_checkVars(_1ac53c25e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3977d69:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _211710_v = *it;
			{
				if (((((!((*(_211710_v))._field_Used)) && (!((*_211710_v.alloc)._field_Constant))) && (!(_1ac493baa_IsIgnoreIdent((*_211710_v.alloc)._field_Ident)))) && (!(_1ac493e74_IsAnonIdent((*_211710_v.alloc)._field_Ident))))) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*_211710_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_211710_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1b3977d69:;
			++it;
			goto _iter_begin_1b3977d69;
		}
		_iter_end_1b3977d69:;
	};
}



inline void _1ac54e073_checkAliases(_1ac53c25e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b397a674:;
		if (it != expr_end) {
			jule::Ptr<_1ac63c4e6_TypeAlias> _212510_a = *it;
			{
				if ((((!((*(_212510_a))._field_Used)) && (!(_1ac493baa_IsIgnoreIdent((*_212510_a.alloc)._field_Ident)))) && (!(_1ac493e74_IsAnonIdent((*_212510_a.alloc)._field_Ident))))) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*_212510_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_212510_a.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1b397a674:;
			++it;
			goto _iter_begin_1b397a674;
		}
		_iter_end_1b397a674:;
	};
}



inline void _1ac54e3d6_check(jule::Ptr<_1ac53c25e_scopeChecker> _self_, jule::Ptr<_1ac4b679e_ScopeTree>* _213327_tree, jule::Ptr<_1ac534ec1_Scope>* _213350_s) {
	(*((*(_213350_s))))._field_Deferred=(*((*(_213327_tree))))._field_Deferred;
	(*((*(_213350_s))))._field_Unsafety=(*((*(_213327_tree))))._field_Unsafety;
	jule::I64 _21373_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_213327_tree));
	(*_self_.alloc)._field_scope=(*(_213350_s));
	_1ac54d418_checkTree(_self_);
	if ((_21373_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1ac54dd75_checkVars(_self_);
		_1ac54e073_checkAliases(_self_);
		if (_1ac53e8d2_isRoot(_self_)) {
			_1ac54d979_checkGotos(_self_);
			_1ac54db77_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1ac53c25e_scopeChecker> _1ac54e66c_newChildChecker(jule::Ptr<_1ac53c25e_scopeChecker> _self_) {
	jule::Ptr<_1ac53c25e_scopeChecker> _21577_base = _1ac53292a_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21577_base))._field_parent=_self_;
	(*_21577_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21577_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21577_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21577_base;;
}








inline jule::Bool _1ac5511eb_directiveChecker_eq(_1ac5511eb_directiveChecker *_self_, _1ac5511eb_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1ac55164c_checkCdef(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b39848e2:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ac4dbd46_Fn>()))._field_Binded) {
					goto _match_end_1b3983748;
				};
				goto _case_begin_1b39837ae;
			}
		}
		else {
			_case_begin_1b39837ae:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1b3983748:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ac551905_checkTypedef(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b3987ae3:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ac4c767d_Struct>()))._field_Binded) {
					goto _match_end_1b3986949;
				};
				goto _case_begin_1b39869b0;
			}
		}
		else {
			_case_begin_1b39869b0:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1b3986949:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ac551bad_checkNamespace(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b398ace4:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ac4c767d_Struct>()))._field_Binded))) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b3989919:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ac4dbd46_Fn>()))._field_Binded))) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b3989c27:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ac5a2527_Var>()))._field_Binded))) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1b3989bb1:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1b3989b4a:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac4912c3_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ac57b15a_pushErr((*(_self_))._field_s, _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b39964b4:;
			{
				if ((_1ac634a60_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1ac4a5b9a_Directive> _919_typedef = jule::new_ptr<_1ac4a5b9a_Directive>(_1ac4a5b9a_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr)});;
					(*((*(_919_typedef))._field_Tag))._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1b399644d:;
	};
}



inline void _1ac551e66_checkDeprecated(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b3999be3:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ac4c767d_Struct>()))._field_Binded) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b39988b2:;
			{
				jule::Ptr<_1ac4dbd46_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ac4dbd46_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1ac4dc819_IsEntryPoint(_1078_f)) || _1ac4dcaa0_IsInit(_1078_f))) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b3998b26:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ac5a2527_Var>()))._field_Binded) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1b3998ab0:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1b3998a49:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac4912c3_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ac57b15a_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1263_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ac57b15a_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*_1263_arg.alloc)._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1ac55221e_checkTest(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b39a69e1:;
			{
				jule::Ptr<_1ac4dbd46_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ac4dbd46_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1ac4dcaa0_IsInit(_1444_f)))) && (!(_1ac4dc819_IsEntryPoint(_1444_f))))) {
					goto _match_end_1b39a5847;
				};
				if (_1ac4dc583_IsMethod(_1444_f)) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1b39a5847;
				};
				goto _case_begin_1b39a58ad;
			}
		}
		else {
			_case_begin_1b39a58ad:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1b39a5847:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ac5524c7_checkExport(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b39ab73d:;
			{
				jule::Ptr<_1ac4dbd46_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ac4dbd46_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1ac4dcaa0_IsInit(_1654_f)) || _1ac4dc819_IsEntryPoint(_1654_f)) || _1ac4dc583_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b39aa363:;
			{
				jule::Ptr<_1ac5a2527_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1ac5a2527_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1b39aa60a:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return;;
			}
		}
		_match_end_1b39aa594:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac4912c3_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ac57b15a_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1873_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ac57b15a_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*_1873_arg.alloc)._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1ac552780_checkDirective(_1ac5511eb_directiveChecker* _self_, jule::Ptr<_1ac4a5b9a_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1b39b897b:;
			{
				_1ac55164c_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1b39b7826:;
			{
				_1ac551905_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1b39b788c:;
			{
				_1ac551bad_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1b39b7903:;
			{
				_1ac551e66_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1b39b7969:;
			{
				_1ac55221e_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1b39b79d0:;
			{
				_1ac5524c7_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1b39b7a46:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1b39b2d2c:;
			{
				_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1b39b7749:;
	};
}



inline void _1ac55297d_check(_1ac5511eb_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39bb73c:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a5b9a_Directive> _22315_d = *it;
			{
				_1ac552780_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1b39bb73c:;
			++it;
			goto _iter_begin_1b39bb73c;
		}
		_iter_end_1b39bb73c:;
	};
}







inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac558302_SelectPackage(_1ac557cd5_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac5586ed_FindVar(_1ac557cd5_ImportInfo* _self_, jule::Str _19823_ident, jule::Bool ) {
	if ((!(_1ac55a359_isLookupable(_self_, &(_19823_ident))))) {
		return nullptr;;
	};
	return _1ac555310_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_19823_ident), false);;
}



inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac558ae9_FindTypeAlias(_1ac557cd5_ImportInfo* _self_, jule::Str _21029_ident, jule::Bool ) {
	if ((!(_1ac55a359_isLookupable(_self_, &(_21029_ident))))) {
		return nullptr;;
	};
	return _1ac55573e_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21029_ident), false);;
}



inline jule::Ptr<_1ac4c767d_Struct> _1ac558ee5_FindStruct(_1ac557cd5_ImportInfo* _self_, jule::Str _22226_ident, jule::Bool ) {
	if ((!(_1ac55a359_isLookupable(_self_, &(_22226_ident))))) {
		return nullptr;;
	};
	return _1ac555be5_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22226_ident), false);;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac5593e1_FindFn(_1ac557cd5_ImportInfo* _self_, jule::Str _23422_ident, jule::Bool ) {
	if ((!(_1ac55a359_isLookupable(_self_, &(_23422_ident))))) {
		return nullptr;;
	};
	return _1ac5560e1_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23422_ident), false);;
}



inline jule::Ptr<_1ac5008a4_Trait> _1ac559732_FindTrait(_1ac557cd5_ImportInfo* _self_, jule::Str _24525_ident) {
	if ((!(_1ac55a359_isLookupable(_self_, &(_24525_ident))))) {
		return nullptr;;
	};
	return _1ac556465_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24525_ident));;
}



inline jule::Ptr<_1ac5030b0_Enum> _1ac559a73_FindEnum(_1ac557cd5_ImportInfo* _self_, jule::Str _25624_ident) {
	if ((!(_1ac55a359_isLookupable(_self_, &(_25624_ident))))) {
		return nullptr;;
	};
	return _1ac5567d9_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25624_ident));;
}



inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac559db4_FindTypeEnum(_1ac557cd5_ImportInfo* _self_, jule::Str _26728_ident) {
	if ((!(_1ac55a359_isLookupable(_self_, &(_26728_ident))))) {
		return nullptr;;
	};
	return _1ac556c6d_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_26728_ident));;
}



inline jule::Bool _1ac55a359_isLookupable(_1ac557cd5_ImportInfo* _self_, jule::Str* _27625_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1ac55a69a_existIdent(_self_, static_cast<jule::Str>(jule::Str::lit("self", 4))))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1ac55a69a_existIdent(_self_, (*(_27625_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1ac55a69a_existIdent(_1ac557cd5_ImportInfo* _self_, jule::Str _29622_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39d3b1c:;
		if (it != expr_end) {
			jule::Ptr<_1ac4912c3_Token> *_29710_sident = it;
			{
				if (((*((*(_29710_sident))))._field_Kind == _29622_ident)) {
					return true;;
				};
			}
			_iter_next_1b39d3b1c:;
			++it;
			goto _iter_begin_1b39d3b1c;
		}
		_iter_end_1b39d3b1c:;
	};
	return false;;
}



inline jule::Bool _1ac55a931_isAccessibleViaSelection(_1ac557cd5_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1ac55a69a_existIdent(_self_, static_cast<jule::Str>(jule::Str::lit("self", 4))));;
}







inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac55b1d4_SelectPackage(_1ac55ac0b_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac55b5d0_FindVar(_1ac55ac0b_Package* _self_, jule::Str _32323_ident, jule::Bool _32335_binded) {
	return _1ac555310_findVarInPackage(&((*(_self_))._field_Files), &(_32323_ident), _32335_binded);;
}



inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac55b9cb_FindTypeAlias(_1ac55ac0b_Package* _self_, jule::Str _32929_ident, jule::Bool _32941_binded) {
	return _1ac55573e_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32929_ident), _32941_binded);;
}



inline jule::Ptr<_1ac4c767d_Struct> _1ac55bdc7_FindStruct(_1ac55ac0b_Package* _self_, jule::Str _33526_ident, jule::Bool _33538_binded) {
	return _1ac555be5_findStructInPackage(&((*(_self_))._field_Files), &(_33526_ident), _33538_binded);;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac55c2c3_FindFn(_1ac55ac0b_Package* _self_, jule::Str _34122_ident, jule::Bool _34134_binded) {
	return _1ac5560e1_findFnInPackage(&((*(_self_))._field_Files), &(_34122_ident), _34134_binded);;
}



inline jule::Ptr<_1ac5008a4_Trait> _1ac55c614_FindTrait(_1ac55ac0b_Package* _self_, jule::Str _34725_ident) {
	return _1ac556465_findTraitInPackage(&((*(_self_))._field_Files), &(_34725_ident));;
}



inline jule::Ptr<_1ac5030b0_Enum> _1ac55c955_FindEnum(_1ac55ac0b_Package* _self_, jule::Str _35324_ident) {
	return _1ac5567d9_findEnumInPackage(&((*(_self_))._field_Files), &(_35324_ident));;
}



inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac55cc96_FindTypeEnum(_1ac55ac0b_Package* _self_, jule::Str _35928_ident) {
	return _1ac556c6d_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35928_ident));;
}







inline jule::Ptr<_1ac5170e6_comptimeTypeInfo> _1ac577ac4_pushComptimeTypeInfo(_1ac57762e_commonSemaMeta* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _22341_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a207a2:;
		if (it != expr_end) {
			jule::Ptr<_1ac5170e6_comptimeTypeInfo> _22415_t2 = *it;
			{
				if ((((*((*(_22415_t2))._field_base))._field_BindIdent == (*((*(_22341_t))))._field_BindIdent) && _1ac63da25_Equal((*(_22415_t2))._field_base, (*(_22341_t))))) {
					return _22415_t2;;
				};
			}
			_iter_next_1b3a207a2:;
			++it;
			goto _iter_begin_1b3a207a2;
		}
		_iter_end_1b3a207a2:;
	};
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _2297_t1 = jule::new_ptr<_1ac5170e6_comptimeTypeInfo>(_1ac5170e6_comptimeTypeInfo{._field_base=(*(_22341_t))});;
	{ jule::Slice<jule::Ptr<_1ac5170e6_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2297_t1); };
	return _2297_t1;;
}







inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac57872e_SelectPackage(_1ac578256_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _25229_selector) {
	return _1ac6053b0_SelectPackage((*(_self_))._field_file.ptr(), _25229_selector);;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac578b2a_FindVar(_1ac578256_sema* _self_, jule::Str _26223_ident, jule::Bool _26235_binded) {
	jule::Ptr<_1ac5a2527_Var> _2647_v = _1ac555310_findVarInPackage(&((*(_self_))._field_files), &(_26223_ident), _26235_binded);;
	if ((_2647_v != nullptr)) {
		return _2647_v;;
	};
	if ((!(_1ac575242_IsPub(_26223_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a26c92:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _27515_imp = *it;
			{
				if ((!(_1ac576144_impIsLookupable(&(_27515_imp), &(_26223_ident))))) {
					goto _iter_next_1b3a26c92;
				};
				_2647_v=_1ac5586ed_FindVar(_27515_imp.ptr(), _26223_ident, _26235_binded);
				if (((_2647_v != nullptr) && _1ac57b8b9_isAccessibleDefine(_self_, (*_2647_v.alloc)._field_Public, (*_2647_v.alloc)._field_Token))) {
					return _2647_v;;
				};
			}
			_iter_next_1b3a26c92:;
			++it;
			goto _iter_begin_1b3a26c92;
		}
		_iter_end_1b3a26c92:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac579026_FindTypeAlias(_1ac578256_sema* _self_, jule::Str _29429_ident, jule::Bool _29441_binded) {
	jule::Ptr<_1ac63c4e6_TypeAlias> _2967_ta = _1ac55573e_findTypeAliasInPackage(&((*(_self_))._field_files), &(_29429_ident), _29441_binded);;
	if ((_2967_ta != nullptr)) {
		return _2967_ta;;
	};
	if ((!(_1ac575242_IsPub(_29429_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a29beb:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _30715_imp = *it;
			{
				if ((!(_1ac576144_impIsLookupable(&(_30715_imp), &(_29429_ident))))) {
					goto _iter_next_1b3a29beb;
				};
				_2967_ta=_1ac558ae9_FindTypeAlias(_30715_imp.ptr(), _29429_ident, _29441_binded);
				if (((_2967_ta != nullptr) && _1ac57b8b9_isAccessibleDefine(_self_, (*_2967_ta.alloc)._field_Public, (*_2967_ta.alloc)._field_Token))) {
					return _2967_ta;;
				};
			}
			_iter_next_1b3a29beb:;
			++it;
			goto _iter_begin_1b3a29beb;
		}
		_iter_end_1b3a29beb:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac4c767d_Struct> _1ac579422_FindStruct(_1ac578256_sema* _self_, jule::Str _32626_ident, jule::Bool _32638_binded) {
	jule::Ptr<_1ac4c767d_Struct> _3287_s = _1ac555be5_findStructInPackage(&((*(_self_))._field_files), &(_32626_ident), _32638_binded);;
	if ((_3287_s != nullptr)) {
		return _3287_s;;
	};
	if ((!(_1ac575242_IsPub(_32626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a2cb55:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _33915_imp = *it;
			{
				if ((!(_1ac576144_impIsLookupable(&(_33915_imp), &(_32626_ident))))) {
					goto _iter_next_1b3a2cb55;
				};
				_3287_s=_1ac558ee5_FindStruct(_33915_imp.ptr(), _32626_ident, _32638_binded);
				if (((_3287_s != nullptr) && _1ac57b8b9_isAccessibleDefine(_self_, (*_3287_s.alloc)._field_Public, (*_3287_s.alloc)._field_Token))) {
					return _3287_s;;
				};
			}
			_iter_next_1b3a2cb55:;
			++it;
			goto _iter_begin_1b3a2cb55;
		}
		_iter_end_1b3a2cb55:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac57981d_FindFn(_1ac578256_sema* _self_, jule::Str _35722_ident, jule::Bool _35734_binded) {
	jule::Ptr<_1ac4dbd46_Fn> _3597_f = _1ac5560e1_findFnInPackage(&((*(_self_))._field_files), &(_35722_ident), _35734_binded);;
	if ((_3597_f != nullptr)) {
		return _3597_f;;
	};
	if ((!(_1ac575242_IsPub(_35722_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a30aae:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _37015_imp = *it;
			{
				if ((!(_1ac576144_impIsLookupable(&(_37015_imp), &(_35722_ident))))) {
					goto _iter_next_1b3a30aae;
				};
				_3597_f=_1ac5593e1_FindFn(_37015_imp.ptr(), _35722_ident, _35734_binded);
				if (((_3597_f != nullptr) && _1ac57b8b9_isAccessibleDefine(_self_, (*_3597_f.alloc)._field_Public, (*_3597_f.alloc)._field_Token))) {
					return _3597_f;;
				};
			}
			_iter_next_1b3a30aae:;
			++it;
			goto _iter_begin_1b3a30aae;
		}
		_iter_end_1b3a30aae:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5008a4_Trait> _1ac579b5e_FindTrait(_1ac578256_sema* _self_, jule::Str _38925_ident) {
	jule::Ptr<_1ac5008a4_Trait> _3917_t = _1ac556465_findTraitInPackage(&((*(_self_))._field_files), &(_38925_ident));;
	if ((_3917_t != nullptr)) {
		return _3917_t;;
	};
	if ((!(_1ac575242_IsPub(_38925_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a337c6:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _40215_imp = *it;
			{
				if ((!(_1ac576144_impIsLookupable(&(_40215_imp), &(_38925_ident))))) {
					goto _iter_next_1b3a337c6;
				};
				_3917_t=_1ac559732_FindTrait(_40215_imp.ptr(), _38925_ident);
				if (((_3917_t != nullptr) && _1ac57b8b9_isAccessibleDefine(_self_, (*_3917_t.alloc)._field_Public, (*_3917_t.alloc)._field_Token))) {
					return _3917_t;;
				};
			}
			_iter_next_1b3a337c6:;
			++it;
			goto _iter_begin_1b3a337c6;
		}
		_iter_end_1b3a337c6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5030b0_Enum> _1ac579ea0_FindEnum(_1ac578256_sema* _self_, jule::Str _42124_ident) {
	jule::Ptr<_1ac5030b0_Enum> _4237_e = _1ac5567d9_findEnumInPackage(&((*(_self_))._field_files), &(_42124_ident));;
	if ((_4237_e != nullptr)) {
		return _4237_e;;
	};
	if ((!(_1ac575242_IsPub(_42124_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a364dd:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _43415_imp = *it;
			{
				if ((!(_1ac576144_impIsLookupable(&(_43415_imp), &(_42124_ident))))) {
					goto _iter_next_1b3a364dd;
				};
				_4237_e=_1ac559a73_FindEnum(_43415_imp.ptr(), _42124_ident);
				if (((_4237_e != nullptr) && _1ac57b8b9_isAccessibleDefine(_self_, (*_4237_e.alloc)._field_Public, (*_4237_e.alloc)._field_Token))) {
					return _4237_e;;
				};
			}
			_iter_next_1b3a364dd:;
			++it;
			goto _iter_begin_1b3a364dd;
		}
		_iter_end_1b3a364dd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac57a2e1_FindTypeEnum(_1ac578256_sema* _self_, jule::Str _45328_ident) {
	jule::Ptr<_1ac5047ba_TypeEnum> _4557_e = _1ac556c6d_findTypeEnumInPackage(&((*(_self_))._field_files), &(_45328_ident));;
	if ((_4557_e != nullptr)) {
		return _4557_e;;
	};
	if ((!(_1ac575242_IsPub(_45328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a39205:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _46615_imp = *it;
			{
				if ((!(_1ac576144_impIsLookupable(&(_46615_imp), &(_45328_ident))))) {
					goto _iter_next_1b3a39205;
				};
				_4557_e=_1ac559db4_FindTypeEnum(_46615_imp.ptr(), _45328_ident);
				if (((_4557_e != nullptr) && _1ac57b8b9_isAccessibleDefine(_self_, (*_4557_e.alloc)._field_Public, (*_4557_e.alloc)._field_Token))) {
					return _4557_e;;
				};
			}
			_iter_next_1b3a39205:;
			++it;
			goto _iter_begin_1b3a39205;
		}
		_iter_end_1b3a39205:;
	};
	return nullptr;;
}



inline jule::Bool _1ac57a6ed_isFlag(_1ac578256_sema* _self_, jule::I64 _48218_flags) {
	return (((*(_self_))._field_flags & _48218_flags) == _48218_flags);;
}



inline jule::Ptr<_1ac604d93_SymbolTable> _1ac57a984_getCurrentFile(_1ac578256_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1ac57ac3c_setCurrentFile(_1ac578256_sema* _self_, jule::Ptr<_1ac604d93_SymbolTable> _48534_f) {
	(*(_self_))._field_file=_48534_f;
}



inline void _1ac57b15a_pushErr(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token> _48723_token, jule::Str _48738_fmt, jule::Slice<jule::Any> _48751_args) {
	{ jule::Slice<_1b08b6838_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ac575cc0_compilerErr(&(_48723_token), true, _48738_fmt, _48751_args)); };
}



inline void _1ac57b4bd_pushSuggestion(_1ac578256_sema* _self_, jule::Str _49230_fmt, jule::Slice<jule::Any> _49243_args) {
	{
		_1ac577376_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _49230_fmt, _49243_args);
	};
}



inline jule::Bool _1ac57b8b9_isAccessibleDefine(_1ac578256_sema* _self_, jule::Bool _49830_public, jule::Ptr<_1ac4912c3_Token> _49844_token) {
	if ((_49830_public || ((*(_49844_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _5033_selfDir = _1ac497241_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _5043_tokenDir = _1ac497241_Dir((*_49844_token.alloc)._field_File.ptr());;
	if ((_5033_selfDir == _5043_tokenDir)) {
		return true;;
	};
	if ((_1ac55d1d6_isStdPackage(&(_5043_tokenDir), jule::Str::lit("runtime", 7)) && _1ac55d1d6_isStdPackage(&(_5033_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1ac57bd70_isDuplicatedIdent(_1ac578256_sema* _self_, jule::Uintptr _52129_itself, jule::Str* _52147_ident, jule::Bool _52159_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a42032:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> *_52210_f = it;
			{
				if (_1ac608748_isDuplicatedIdent((*(_52210_f)).ptr(), _52129_itself, _52147_ident, _52159_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_52210_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a43055:;
					if (it != expr_end) {
						jule::Ptr<_1ac557cd5_ImportInfo> *_52711_imp = it;
						{
							{
								auto expr = &((*((*(_52711_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b3a4395c:;
								if (it != expr_end) {
									jule::Ptr<_1ac4912c3_Token> *_52812_selected = it;
									{
										if (((*((*(_52812_selected))))._field_Kind == (*(_52147_ident)))) {
											return true;;
										};
									}
									_iter_next_1b3a4395c:;
									++it;
									goto _iter_begin_1b3a4395c;
								}
								_iter_end_1b3a4395c:;
							};
						}
						_iter_next_1b3a43055:;
						++it;
						goto _iter_begin_1b3a43055;
					}
					_iter_end_1b3a43055:;
				};
			}
			_iter_next_1b3a42032:;
			++it;
			goto _iter_begin_1b3a42032;
		}
		_iter_end_1b3a42032:;
	};
	return false;;
}



inline void _1ac57c1d3_checkDirectives(jule::Ptr<_1ac578256_sema> _self_, jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _53837_d, jule::Any _53863_o) {
	_1ac5511eb_directiveChecker _5397_dc = _1ac5511eb_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>>)(_53837_d)), ._field_o=_53863_o};;
	_1ac55297d_check(&_5397_dc);
}



inline jule::Bool _1ac57c689_checkGenericQuantity(_1ac578256_sema* _self_, jule::I64 _54736_required, jule::I64 _54751_given, jule::Ptr<_1ac4912c3_Token> _54763_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_54736_required == 0LL) && (_54751_given > 0LL))) {
			_case_begin_1b3a45e7b:;
			{
				_1ac57b15a_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_54736_required > 0LL) && (_54751_given == 0LL))) {
			_case_begin_1b3a46003:;
			{
				_1ac57b15a_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_54736_required < _54751_given)) {
			_case_begin_1b3a4607a:;
			{
				_1ac57b15a_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_54736_required > _54751_given)) {
			_case_begin_1b3a46102:;
			{
				_1ac57b15a_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b3a45db0:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b3a45cd3:;
	};
}



inline jule::Bool _1ac57ca85_isDuplicatedImportSelection(_1ac578256_sema* _self_, jule::Uintptr _56639_itself, jule::Str* _56657_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a49325:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> *_56710_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_56710_imp))) == _56639_itself)) {
					goto _iter_end_1b3a49325;
				};
				if (_1ac55a69a_existIdent((*(_56710_imp)).ptr(), (*(_56657_ident)))) {
					return true;;
				};
			}
			_iter_next_1b3a49325:;
			++it;
			goto _iter_begin_1b3a49325;
		}
		_iter_end_1b3a49325:;
	};
	return false;;
}



inline jule::Any _1ac57ce81_getImportDef(_1ac578256_sema* _self_, jule::Str* _57925_ident, jule::Ptr<_1ac557cd5_ImportInfo>* _57942_imp) {
	if ((_1ac72c51a_findPackageBuiltinDef(&((*((*(_57942_imp))))._field_LinkPath), _57925_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_57942_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a4b4c0:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _58315_f = *it;
			{
				;
				jule::Any _5868_def = _1ac608292_defByIdent(_58315_f.ptr(), _57925_ident, false);;
				if ((_5868_def != nullptr)) {
					return _5868_def;;
				};
			}
			_iter_next_1b3a4b4c0:;
			++it;
			goto _iter_begin_1b3a4b4c0;
		}
		_iter_end_1b3a4b4c0:;
	};
	return nullptr;;
}



inline jule::Bool _1b3a53054_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac5a2527_Var>* _59456_s) {
	if ((!(_1ac57b8b9_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac557125_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b3a57982_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac63c4e6_TypeAlias>* _59456_s) {
	if ((!(_1ac57b8b9_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac557125_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b382eb66_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac4c767d_Struct>* _59456_s) {
	if ((!(_1ac57b8b9_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac557125_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b38343a7_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac5008a4_Trait>* _59456_s) {
	if ((!(_1ac57b8b9_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac557125_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b3838a4e_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac5030b0_Enum>* _59456_s) {
	if ((!(_1ac57b8b9_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac557125_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b383d1d5_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac5047ba_TypeEnum>* _59456_s) {
	if ((!(_1ac57b8b9_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac557125_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b384286b_checkImportSelection(_1ac578256_sema* _self_, jule::Ptr<_1ac4912c3_Token>* _59440_ident, jule::Ptr<_1ac4dbd46_Fn>* _59456_s) {
	if ((!(_1ac57b8b9_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ac557125_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1ac57b15a_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}



inline jule::Bool _1ac57d6bd_checkImportSelectedSelections(_1ac578256_sema* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _60850_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_60850_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a4d12b:;
		if (it != expr_end) {
			jule::Ptr<_1ac4912c3_Token> _61010_ident = *it;
			{
				if (((*(_61010_ident))._field_Kind == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
					goto _iter_next_1b3a4d12b;
				};
				if (_1ac57ca85_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_60850_imp))), &((*_61010_ident.alloc)._field_Kind))) {
					_1ac57b15a_pushErr(_self_, _61010_ident, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_61010_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b3a4d12b;
				};
				jule::Any _6228_def = _1ac57ce81_getImportDef(_self_, &((*_61010_ident.alloc)._field_Kind), _60850_imp);;
				{
					auto &_match_expr{ _6228_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1b3a4e319:;
						{
							goto _iter_next_1b3a4d12b;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b3a51030:;
						{
							jule::Ptr<_1ac5a2527_Var> _6289_v = _6228_def.unsafe_cast_ptr<_1ac5a2527_Var>();;
							__jule_func_result=(_1b3a53054_checkImportSelection(_self_, &(_61010_ident), &(_6289_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type27) {
						_case_begin_1b3a51096:;
						{
							jule::Ptr<_1ac63c4e6_TypeAlias> _6319_ta = _6228_def.unsafe_cast_ptr<_1ac63c4e6_TypeAlias>();;
							__jule_func_result=(_1b3a57982_checkImportSelection(_self_, &(_61010_ident), &(_6319_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b3a5110c:;
						{
							jule::Ptr<_1ac4c767d_Struct> _6349_s = _6228_def.unsafe_cast_ptr<_1ac4c767d_Struct>();;
							__jule_func_result=(_1b382eb66_checkImportSelection(_self_, &(_61010_ident), &(_6349_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1b3a51173:;
						{
							jule::Ptr<_1ac5008a4_Trait> _6379_t = _6228_def.unsafe_cast_ptr<_1ac5008a4_Trait>();;
							__jule_func_result=(_1b38343a7_checkImportSelection(_self_, &(_61010_ident), &(_6379_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1b3a511d9:;
						{
							jule::Ptr<_1ac5030b0_Enum> _6409_e = _6228_def.unsafe_cast_ptr<_1ac5030b0_Enum>();;
							__jule_func_result=(_1b3838a4e_checkImportSelection(_self_, &(_61010_ident), &(_6409_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type25) {
						_case_begin_1b3a51d99:;
						{
							jule::Ptr<_1ac5047ba_TypeEnum> _6439_e = _6228_def.unsafe_cast_ptr<_1ac5047ba_TypeEnum>();;
							__jule_func_result=(_1b383d1d5_checkImportSelection(_self_, &(_61010_ident), &(_6439_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1b3a51e10:;
						{
							jule::Ptr<_1ac4dbd46_Fn> _6469_f = _6228_def.unsafe_cast_ptr<_1ac4dbd46_Fn>();;
							__jule_func_result=(_1b384286b_checkImportSelection(_self_, &(_61010_ident), &(_6469_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1b3a50e20:;
						{
							_1ac57b15a_pushErr(_self_, _61010_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_61010_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
							__jule_func_result=false;
							goto _iter_next_1b3a4d12b;
						}
					}
					_match_end_1b3a50914:;
				};
			}
			_iter_next_1b3a4d12b:;
			++it;
			goto _iter_begin_1b3a4d12b;
		}
		_iter_end_1b3a4d12b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b3847cb1_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac5a2527_Var>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b38498a6:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1b3a53054_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1b38498a6:;
			++it;
			goto _iter_begin_1b38498a6;
		}
		_iter_end_1b38498a6:;
	};
	return _6587_ok;;
}

inline jule::Bool _1b3848e49_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b384c0d4:;
		if (it != expr_end) {
			jule::Ptr<_1ac63c4e6_TypeAlias> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1b3a57982_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1b384c0d4:;
			++it;
			goto _iter_begin_1b384c0d4;
		}
		_iter_end_1b384c0d4:;
	};
	return _6587_ok;;
}

inline jule::Bool _1b384aee5_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac4c767d_Struct>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b384e801:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1b382eb66_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1b384e801:;
			++it;
			goto _iter_begin_1b384e801;
		}
		_iter_end_1b384e801:;
	};
	return _6587_ok;;
}

inline jule::Bool _1b384ddd8_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3852040:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1b384286b_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1b3852040:;
			++it;
			goto _iter_begin_1b3852040;
		}
		_iter_end_1b3852040:;
	};
	return _6587_ok;;
}

inline jule::Bool _1b3851abc_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac5008a4_Trait>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3854718:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1b38343a7_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1b3854718:;
			++it;
			goto _iter_begin_1b3854718;
		}
		_iter_end_1b3854718:;
	};
	return _6587_ok;;
}

inline jule::Bool _1b38542d9_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac5030b0_Enum>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3856de1:;
		if (it != expr_end) {
			jule::Ptr<_1ac5030b0_Enum> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1b3838a4e_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1b3856de1:;
			++it;
			goto _iter_begin_1b3856de1;
		}
		_iter_end_1b3856de1:;
	};
	return _6587_ok;;
}

inline jule::Bool _1b38569b2_checkImportsAllSelectionsFromCollection(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac5047ba_TypeEnum>>* _65759_s, jule::Ptr<_1ac4912c3_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3859652:;
		if (it != expr_end) {
			jule::Ptr<_1ac5047ba_TypeEnum> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1b383d1d5_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1b3859652:;
			++it;
			goto _iter_begin_1b3859652;
		}
		_iter_end_1b3859652:;
	};
	return _6587_ok;;
}



inline jule::Bool _1ac57de0a_checkImportAllSelections(_1ac578256_sema* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _66741_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_66741_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3847354:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> *_66910_file = it;
			{
				__jule_func_result=(_1b3847cb1_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_66910_file))))._field_Vars), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b3848e49_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_TypeAliases), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b384aee5_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Structs), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b384ddd8_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Funcs), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b3851abc_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Traits), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b38542d9_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Enums), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b38569b2_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_TypeEnums), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1b3847354:;
			++it;
			goto _iter_begin_1b3847354;
		}
		_iter_end_1b3847354:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac57e24b_checkImportSelections(_1ac578256_sema* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _68142_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_68142_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1ac57d6bd_checkImportSelectedSelections(_self_, _68142_imp);
		return __jule_func_result;;
	} else if ((*((*(_68142_imp))))._field_ImportAll) {
		__jule_func_result = _1ac57de0a_checkImportAllSelections(_self_, _68142_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac57e58c_isUseAliasDuplication(_1ac578256_sema* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _69038_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b385b885:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _69115_imp2 = *it;
			{
				if ((_69115_imp2 == (*(_69038_imp)))) {
					goto _iter_end_1b385b885;
				};
				if (((*(_69115_imp2))._field_Alias == (*((*(_69038_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_69115_imp2.alloc)._field_Ident == (*_69115_imp2.alloc)._field_LinkPath) && ((*_69115_imp2.alloc)._field_Ident == (*((*(_69038_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1b385b885:;
			++it;
			goto _iter_begin_1b385b885;
		}
		_iter_end_1b385b885:;
	};
	return false;;
}



inline jule::Bool _1ac57e8cd_checkImport(_1ac578256_sema* _self_, jule::Ptr<_1ac557cd5_ImportInfo>* _70632_imp) {
	if (((*((*(_70632_imp))))._field_Binded || ((*((*((*(_70632_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_70632_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_70632_imp))))._field_ImportAll || !((*((*(_70632_imp))))._field_Alias).empty()) || ((*((*(_70632_imp))))._field_Selected.len() > 0LL))) {
			_1ac57b15a_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (((*((*(_70632_imp))))._field_Alias.len() != 0LL)) {
		if (_1ac493baa_IsIgnoreIdent((*((*(_70632_imp))))._field_Alias)) {
			_1ac57b15a_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1ac57e58c_isUseAliasDuplication(_self_, _70632_imp)) {
			_1ac57b15a_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_70632_imp))))._field_Alias, &__jule_any_type4); __jule_collection; }));
			_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_70632_imp))))._field_Duplicate))) {
		jule::Ptr<_1ac578256_sema> _7298_sema = jule::new_ptr<_1ac578256_sema>(_1ac578256_sema{._field_errors=jule::Slice<_1b08b6838_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1ac604d93_SymbolTable>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1ac59d974_check(_7298_sema, &((*(*((*(_70632_imp))))._field_Package.alloc)._field_Files));
		if (((*_7298_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_7298_sema.alloc)._field_errors);;
			(*_7298_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1ac57e24b_checkImportSelections(_self_, _70632_imp);;
}



inline void _1ac57eacb_checkImports(_1ac578256_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b386643e:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _74415_file = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_, _74415_file);
				{
					auto expr = &((*(_74415_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3867132:;
					if (it != expr_end) {
						jule::Ptr<_1ac557cd5_ImportInfo> _74616_imp = *it;
						{
							jule::Bool _7475_ok = _1ac57e8cd_checkImport(_self_, &(_74616_imp));;
							if ((!(_7475_ok))) {
								return;;
							};
						}
						_iter_next_1b3867132:;
						++it;
						goto _iter_begin_1b3867132;
					}
					_iter_end_1b3867132:;
				};
			}
			_iter_next_1b386643e:;
			++it;
			goto _iter_begin_1b386643e;
		}
		_iter_end_1b386643e:;
	};
}



inline void _1ac57ecc9_implFileImpls(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3867572:;
		if (it != expr_end) {
			jule::Ptr<_1ac5306e7_Impl> _75715_imp = *it;
			{
				_1ac594b35_implImpl(_self_, &(_75715_imp));
			}
			_iter_next_1b3867572:;
			++it;
			goto _iter_begin_1b3867572;
		}
		_iter_end_1b3867572:;
	};
}



inline void _1ac57eec7_implImpls(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3868e9c:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _76315_file = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_.ptr(), _76315_file);
				_1ac57ecc9_implFileImpls(_self_);
			}
			_iter_next_1b3868e9c:;
			++it;
			goto _iter_begin_1b3868e9c;
		}
		_iter_end_1b3868e9c:;
	};
}



inline void _1ac5801c5_checkEnums(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b386a058:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _77015_file = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_.ptr(), _77015_file);
				{
					
					if ((!(_1ac591071_checkEnumDecls(_self_)))) {
						_case_begin_1b386a6a7:;
					}
					else if ((!(_1ac591307_checkTypeEnumDecls(_self_)))) {
						_case_begin_1b386ac7e:;
					}
					_match_end_1b386aba2:;
				};
			}
			_iter_next_1b386a058:;
			++it;
			goto _iter_begin_1b386a058;
		}
		_iter_end_1b386a058:;
	};
}



inline void _1ac5803c3_checkFileInherits(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b386bb09:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> _78015_t = *it;
			{
				jule::Bool _7814_ok = _1ac592bbb__checkTraitDeclInherits(_self_, &(_78015_t));;
				if ((!(_7814_ok))) {
					return;;
				};
			}
			_iter_next_1b386bb09:;
			++it;
			goto _iter_begin_1b386bb09;
		}
		_iter_end_1b386bb09:;
	};
}



inline void _1ac5805c1_checkInherits(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b386c19d:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _78915_file = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_.ptr(), _78915_file);
				_1ac5803c3_checkFileInherits(_self_);
			}
			_iter_next_1b386c19d:;
			++it;
			goto _iter_begin_1b386c19d;
		}
		_iter_end_1b386c19d:;
	};
}



inline _1ac6506d5_typeChecker _1ac580a77_typeChecker(jule::Ptr<_1ac578256_sema> _self_, jule::Trait _79532_l, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _79547_generics, jule::Ptr<_1ac64e6e5_referencer> _7967_referencer) {
	_1ac6506d5_typeChecker _7977_tc = _1ac6506d5_typeChecker{._field_s=_self_, ._field_rootLookup=_79532_l, ._field_lookup=_79532_l, ._field_referencer=_7967_referencer, ._field_refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_79547_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _79532_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)) {
			_case_begin_1b386ed82:;
			{
				jule::Ptr<_1ac53c25e_scopeChecker> _8068_hard = _1ac5408c2_getHardRoot(_79532_l.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));;
				_7977_tc._field_refers=(*((*(_8068_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1b386ed1b:;
	};
	if (((_7967_referencer != nullptr) && ((*_7967_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_7967_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type27) {
				_case_begin_1b3871724:;
				{
					_7977_tc._field_ownerAlias=(*(_7967_referencer))._field_owner.unsafe_cast_ptr<_1ac63c4e6_TypeAlias>();
				}
			}
			_match_end_1b38716ad:;
		};
	};
	return _7977_tc;;
}



inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac5810d8_buildTypeWithRefers(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _82241_t, jule::Trait _82264_l, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _8237_generics, jule::Ptr<_1ac64e6e5_referencer> _82335_referencer) {
	return ({ auto _wrap_copy = _1ac580a77_typeChecker(_self_, _82264_l, _8237_generics, _82335_referencer); _1ac6582c0_checkDecl(&_wrap_copy, _82241_t); });;
}



inline jule::Bool _1ac581649_checkTypeWithRefers(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac6459e9_TypeSymbol>* _82941_t, jule::Trait _82961_l, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _8307_generics, jule::Ptr<_1ac64e6e5_referencer> _83035_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1ac645da1_checked((*(_82941_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_82941_t))))._field_Kind=_1ac5810d8_buildTypeWithRefers(_self_, &((*((*(_82941_t))))._field_Decl), _82961_l, _8307_generics, _83035_referencer);
	__jule_func_result = _1ac645da1_checked((*(_82941_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1ac52d393_constraintChecker> _1ac5818d0_constraintChecker(jule::Ptr<_1ac578256_sema> _self_) {
	return jule::new_ptr<_1ac52d393_constraintChecker>(_1ac52d393_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_si=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_et=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1ac581ccb_checkType(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac6459e9_TypeSymbol>* _84431_t, jule::Trait _84451_l) {
	return _1ac581649_checkTypeWithRefers(_self_, _84431_t, _84451_l, nullptr, nullptr);;
}



inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac582282_checkTypeRefers(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _84937_t, jule::Trait _84960_l, jule::Ptr<_1ac4e308e_ReferenceStack> _84975_refers) {
	jule::Ptr<_1ac6506d5_typeChecker> _8507_tc = jule::new_ptr<_1ac6506d5_typeChecker>(_1ac6506d5_typeChecker{._field_s=_self_, ._field_rootLookup=_84960_l, ._field_lookup=_84960_l, ._field_referencer=jule::Ptr<_1ac64e6e5_referencer>(nullptr), ._field_refers=_84975_refers, ._field_errorToken=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ac6582c0_checkDecl(_8507_tc.ptr(), _84937_t);;
}



inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac582738_buildTypeWithGenerics(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _86143_t, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _8627_generics, jule::Ptr<_1ac4e308e_ReferenceStack> _86235_refers) {
	jule::Ptr<_1ac6506d5_typeChecker> _8637_tc = jule::new_ptr<_1ac6506d5_typeChecker>(_1ac6506d5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1ac64e6e5_referencer>(nullptr), ._field_refers=_86235_refers, ._field_errorToken=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_8627_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ac6582c0_checkDecl(_8637_tc.ptr(), _86143_t);;
}



inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac582dba_selectType(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _87932_t) {
	jule::Ptr<_1ac6506d5_typeChecker> _8807_tc = jule::new_ptr<_1ac6506d5_typeChecker>(_1ac6506d5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1ac64e6e5_referencer>(nullptr), ._field_refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ac6582c0_checkDecl(_8807_tc.ptr(), _87932_t);;
}



inline jule::Ptr<_1ac60c285_eval> _1ac583371_evalpd(jule::Ptr<_1ac578256_sema> _self_, jule::Trait _89127_l, jule::Ptr<_1ac63d2d8_TypeKind> _89142_p, jule::Ptr<_1ac5a2527_Var> _89160_owner) {
	jule::Ptr<_1ac60c285_eval> _8927_e = jule::new_ptr<_1ac60c285_eval>(_1ac60c285_eval{._field_s=_self_, ._field_lookup=_89127_l, ._field_prefix=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_unsafety=false, ._field_immutable=false, ._field_ignored=false, ._field_disBuiltin=false, ._field_owner=_89160_owner, ._field_field=jule::Ptr<_1ac4c9938_FieldIns>(nullptr), ._field_arg=false});;
	{
		auto &_match_expr{ _89127_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)) {
			_case_begin_1b387c0d1:;
			{
				(*(_8927_e))._field_unsafety=_1ac53e64b_isUnsafe(_89127_l.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));
			}
		}
		_match_end_1b387c06a:;
	};
	(*_8927_e.alloc)._field_prefix=_89142_p;
	return _8927_e;;
}



inline jule::Ptr<_1ac60c285_eval> _1ac58376c_evalp(jule::Ptr<_1ac578256_sema> _self_, jule::Trait _90626_l, jule::Ptr<_1ac63d2d8_TypeKind> _90641_p) {
	return _1ac583371_evalpd(_self_, _90626_l, _90641_p, nullptr);;
}



inline jule::Ptr<_1ac60c285_eval> _1ac583aad_eval(jule::Ptr<_1ac578256_sema> _self_, jule::Trait _91125_l) {
	return _1ac58376c_evalp(_self_, _91125_l, nullptr);;
}



inline jule::Bool _1ac5841c9_checkAssignType(jule::Ptr<_1ac578256_sema> _self_, jule::Bool _91532_destIsRef, jule::Ptr<_1ac63d2d8_TypeKind>* _91554_dest, jule::Ptr<_1ac60a55d_Data>* _9168_d, jule::Ptr<_1ac4912c3_Token> _91622_errorToken, jule::Ptr<_1ac4e308e_ReferenceStack> _91646_refers) {
	if ((*((*(_9168_d))))._field_Decl) {
		_1ac57b15a_pushErr(_self_.ptr(), _91622_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_91532_destIsRef) {
		if ((!(_1ac63da25_Equal((*(_91554_dest)), (*((*(_9168_d))))._field_Kind)))) {
			_1ac57b15a_pushErr(_self_, _91622_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_91554_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_9168_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1ac5e3b73_assignTypeChecker> _9278_atc = jule::new_ptr<_1ac5e3b73_assignTypeChecker>(_1ac5e3b73_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_91554_dest)), ._field_d=(*(_9168_d)), ._field_errorToken=_91622_errorToken, ._field_refers=_91646_refers});;
		jule::Bool _9344_ok = _1ac5e4b74_check(_9278_atc.ptr());;
		if ((!(_9344_ok))) {
			return false;;
		};
	};
	if (((!(_1ac60ae98_IsConst((*(_9168_d)).ptr()))) || (_1ac64098e_Prim((*(_91554_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _9447_kind = (*(_1ac64098e_Prim((*(_91554_dest)).ptr())))._field_Kind;;
	{
		
		if (_1aa12817c_IsSigInt(_9447_kind)) {
			_case_begin_1b2e03119:;
			{
				_1aa12c36d_SetI64((*((*(_9168_d))))._field_Constant.ptr(), _1aa12ba98_AsI64((*((*(_9168_d))))._field_Constant));
			}
		}
		else if (_1aa12848a_IsUnsigInt(_9447_kind)) {
			_case_begin_1b2e031a2:;
			{
				_1aa12c626_SetU64((*((*(_9168_d))))._field_Constant.ptr(), _1aa12bd2e_AsU64((*((*(_9168_d))))._field_Constant));
			}
		}
		else if (_1aa128a95_IsFloat(_9447_kind)) {
			_case_begin_1b2e03218:;
			{
				_1aa12ce40_SetF64((*((*(_9168_d))))._field_Constant.ptr(), _1aa12c0b5_AsF64((*((*(_9168_d))))._field_Constant));
			}
		}
		_match_end_1b2e0305e:;
	};
	return true;;
}



inline jule::Bool _1ac584680__checkTypeCompatibility(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _95845_dest, jule::Ptr<_1ac63d2d8_TypeKind>* _95867_src, jule::Ptr<_1ac4912c3_Token> _9597_errorToken) {
	if (((*(_95867_src)) == nullptr)) {
		return false;;
	};
	if ((_1ac6427b5_Tup((*(_95867_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1ac5e1ce7_typeCompatibilityChecker _9677_tcc = _1ac5e1ce7_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_95845_dest)), ._field_src=(*(_95867_src)), ._field_errorToken=_9597_errorToken};;
	return _1ac5e34e1_check(&_9677_tcc);;
}



inline jule::Bool _1ac584b36_checkTypeCompatibility(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _97644_dest, jule::Ptr<_1ac63d2d8_TypeKind>* _9778_src, jule::Ptr<_1ac4912c3_Token>* _97729_errorToken) {
	if (_1ac584680__checkTypeCompatibility(_self_, _97644_dest, _9778_src, (*(_97729_errorToken)))) {
		return true;;
	};
	_1ac57b15a_pushErr(_self_, (*(_97729_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_97644_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_9778_src)).ptr()), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline void _1ac585054_pushCompatiblityError(_1ac578256_sema* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _98542_dest, jule::Ptr<_1ac60a55d_Data>* _98564_src, jule::Ptr<_1ac4912c3_Token>* _9868_errorToken) {
	if ((*((*(_98564_src))))._field_untyped) {
		{
			
			if (_1aa12d3c4_IsI64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1b32a270a:;
				{
					_1ac57b15a_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1aa12d65a_IsU64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1b32a2771:;
				{
					_1ac57b15a_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1aa12de0d_IsF64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1b32a27d7:;
				{
					_1ac57b15a_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			_match_end_1b32a260b:;
		};
	};
	_1ac57b15a_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_98564_src))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1ac58550a_checkTypeCompatibility1(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _100345_dest, jule::Ptr<_1ac60a55d_Data>* _100367_src, jule::Ptr<_1ac4912c3_Token>* _10048_errorToken) {
	if (_1ac584680__checkTypeCompatibility(_self_, _100345_dest, &((*((*(_100367_src))))._field_Kind), (*(_10048_errorToken)))) {
		return true;;
	};
	_1ac585054_pushCompatiblityError(_self_, _100345_dest, _100367_src, _10048_errorToken);
	return false;;
}



inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac5859b1_buildNonGenericTypeKind(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _101845_ast, jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>* _10198_generics, jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>* _101944_ignored) {
	jule::Ptr<_1ac6506d5_typeChecker> _10207_tc = jule::new_ptr<_1ac6506d5_typeChecker>(_1ac6506d5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1ac64e6e5_referencer>(nullptr), ._field_refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_ignoreGenerics=(*(_10198_generics)), ._field_ignoredGenerics=_101944_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ac6582c0_checkDecl(_10207_tc.ptr(), _101845_ast);;
}



inline jule::Bool _1ac585dac_buildFnNonGenericTypeKinds(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns> _103047_f, jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>* _103063_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _103111_generics = nullptr;;
	if (_1ac4dc583_IsMethod((*(_103047_f))._field_Decl.ptr())) {
		_103111_generics=jule::append((*(*(_103047_f))._field_Decl.alloc)._field_Generics,(*((*(*(_103047_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_103111_generics=(*((*(_103047_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1ac587056_basicFnEnvironment(_self_, &(_103047_f), jule::__new_closure<jule::Bool,jule::Ptr<_1ac578256_sema>*>((void*)__jule_anon_1b32acd53, jule::Ptr<__jule_anon_1b32acd53_ctx>::make(__jule_anon_1b32acd53_ctx{._103047_f=_103047_f,._103111_generics=_103111_generics,._103063_ignored=_103063_ignored}).as<jule::Uintptr>(), __jule_anon_1b32acd53_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ac5861ed_getTraitCheckFnKind(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _105341_f) {
	if (((*((*(_105341_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_105341_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1ac4dee04_FnIns> _10577_ins = _1ac4dd353_instanceForce((*(_105341_f)));;
	jule::Ptr<_1ac6506d5_typeChecker> _10597_tc = jule::new_ptr<_1ac6506d5_typeChecker>(_1ac6506d5_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1ac64e6e5_referencer>(nullptr), ._field_refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_10577_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b32b4277:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ddc9e_ParamIns> _106415_p = *it;
			{
				if ((!(_1ac4da9c1_IsSelf((*(_106415_p))._field_Decl.ptr())))) {
					(*_106415_p.alloc)._field_Kind=_1ac6582c0_checkDecl(_10597_tc.ptr(), &((*((*(*(_106415_p))._field_Decl.alloc)._field_Kind))._field_Decl));
					if (((*_106415_p.alloc)._field_Kind == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1b32b4277:;
			++it;
			goto _iter_begin_1b32b4277;
		}
		_iter_end_1b32b4277:;
	};
	if ((!(_1ac4dc2ec_IsVoid((*(_105341_f)).ptr())))) {
		(*_10577_ins.alloc)._field_Result=_1ac6582c0_checkDecl(_10597_tc, &((*((*((*((*(_105341_f))))._field_Result))._field_Kind))._field_Decl));
		if (((*_10577_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _10577_ins;;
}



inline jule::Bool _1ac5866a4_checkConstraintsFn(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _108240_f, jule::Ptr<_1ac4912c3_Token>* _108256_et, jule::Ptr<_1ac4dee04_FnIns> _108272_exist) {
	jule::Ptr<_1ac52d393_constraintChecker> _10837_cc = _1ac5818d0_constraintChecker(_self_);;
	(*(_10837_cc))._field_et=(*(_108256_et));
	(*_10837_cc.alloc)._field_fi=(*(_108240_f));
	if ((_108272_exist != nullptr)) {
		{
			auto expr = &((*_108272_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b32b93e2:;
			if (it != expr_end) {
				jule::I64 _10879_i = it - expr->begin();
				jule::Ptr<_1ac63b902_InsGeneric> _108716_g = *it;
				{
					(*((*((*(_108240_f))))._field_Generics[_10879_i]))._field_Constraint=(*(_108716_g))._field_Constraint;
				}
				_iter_next_1b32b93e2:;
				++it;
				_10879_i++;
				goto _iter_begin_1b32b93e2;
			}
			_iter_end_1b32b93e2:;
		};
	} else {
		(*_10837_cc.alloc)._field_uniq=true;
	};
	return _1ac52e30b_check(_10837_cc);;
}



inline jule::Bool _1ac586b5a_checkConstraintsStruct(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _109644_s, jule::Ptr<_1ac4912c3_Token>* _109664_et, jule::Ptr<_1ac4ca4d8_StructIns> _109680_exist) {
	jule::Ptr<_1ac52d393_constraintChecker> _10977_cc = _1ac5818d0_constraintChecker(_self_);;
	(*(_10977_cc))._field_et=(*(_109664_et));
	(*_10977_cc.alloc)._field_si=(*(_109644_s));
	if ((_109680_exist != nullptr)) {
		{
			auto expr = &((*_109680_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b32bc5b0:;
			if (it != expr_end) {
				jule::I64 _11019_i = it - expr->begin();
				jule::Ptr<_1ac63b902_InsGeneric> _110116_g = *it;
				{
					(*((*((*(_109644_s))))._field_Generics[_11019_i]))._field_Constraint=(*(_110116_g))._field_Constraint;
				}
				_iter_next_1b32bc5b0:;
				++it;
				_11019_i++;
				goto _iter_begin_1b32bc5b0;
			}
			_iter_end_1b32bc5b0:;
		};
	} else {
		(*_10977_cc.alloc)._field_uniq=true;
	};
	return _1ac52e30b_check(_10977_cc);;
}



inline jule::Bool _1ac587056_basicFnEnvironment(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _111340_f, jule::Fn<jule::Bool,jule::Ptr<_1ac578256_sema>*> _111351_algo) {
	jule::Ptr<_1ac578256_sema> _11147_sema = (*((*((*(_111340_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1ac604d93_SymbolTable> _11157_old = _1ac57a984_getCurrentFile(_11147_sema.ptr());;
	jule::Ptr<_1ac604d93_SymbolTable> _11167_file = _1ac576dc0_findFile(&((*_11147_sema.alloc)._field_files), &((*((*(*((*(_111340_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_11167_file != nullptr)) {
		_1ac57ac3c_setCurrentFile(_11147_sema, _11167_file);
	};
	jule::Bool _11213_ok = _111351_algo(&(_11147_sema));;
	if ((_11147_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_11147_sema.alloc)._field_errors);
		(*_11147_sema.alloc)._field_errors=nullptr;
	};
	_1ac57ac3c_setCurrentFile(_11147_sema, _11157_old);
	return _11213_ok;;
}



inline jule::Bool _1ac587452_fnEnvironment(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _113335_f, jule::Fn<jule::Bool,jule::Ptr<_1ac578256_sema>*,jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>*> _113346_algo) {
	jule::I64 _11347_size = (*((*(_113335_f))))._field_Generics.len();;
	if ((((*((*(_113335_f))))._field_Decl != nullptr) && ((*(*((*(_113335_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_11347_size+=(*(*((*((*(_113335_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _11387_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>::alloc(0LL, _11347_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr); __jule_collection; });;
	_1ac576a4b_appendGenericTypeAliases(&(_11387_generics), _113335_f);
	return _1ac587056_basicFnEnvironment(_self_, _113335_f, jule::__new_closure<jule::Bool,jule::Ptr<_1ac578256_sema>*>((void*)__jule_anon_1b32c5d6b, jule::Ptr<__jule_anon_1b32c5d6b_ctx>::make(__jule_anon_1b32c5d6b_ctx{._113346_algo=_113346_algo,._11387_generics=_11387_generics}).as<jule::Uintptr>(), __jule_anon_1b32c5d6b_ctx_handler));;
}



inline void _1ac58770a_checkFnParamKind(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ddc9e_ParamIns>* _114538_p) {
	(*((*((*(_114538_p))))._field_Kind))._field_Variadic=(*((*((*(_114538_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_114538_p))))._field_Decl.alloc)._field_Reference && (!(_1ac65a1e5_isValidForRef(&((*((*(_114538_p))))._field_Kind)))))) {
		_1ac57b15a_pushErr(_self_.ptr(), (*(*((*(_114538_p))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_114538_p))))._field_Kind), &__jule_any_type4); __jule_collection; }));
	};
}



inline jule::Bool _1ac587a4b_reloadFnInsTypes(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns> _115237_f) {
	if ((_1ac4e13bc_IsBuiltin(_115237_f.ptr()) || _1ac4e1653_IsAnon(_115237_f))) {
		return true;;
	};
	return _1ac587452_fnEnvironment(_self_, &(_115237_f), jule::__new_closure<jule::Bool,jule::Ptr<_1ac578256_sema>*,jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>*>((void*)__jule_anon_1b32ca656, jule::Ptr<__jule_anon_1b32ca656_ctx>::make(__jule_anon_1b32ca656_ctx{._115237_f=_115237_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b32ca656_ctx_handler));;
}



inline jule::Bool _1ac588002_checkRefValidityForInitExpr(jule::Ptr<_1ac578256_sema> _self_, jule::Bool _119244_leftMut, jule::Ptr<_1ac60a55d_Data>* _119264_d, jule::Ptr<_1ac4912c3_Token>* _119279_errorToken) {
	if ((!(_1ac575819_isValidModelForRef(&((*((*(_119264_d))))._field_Model))))) {
		_1ac57b15a_pushErr(_self_.ptr(), (*(_119279_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_119244_leftMut && (!((*((*(_119264_d))))._field_Mutable)))) {
		_1ac57b15a_pushErr(_self_, (*(_119279_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1ac588343_isMutRiskyStruct(_1ac578256_sema* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _120929_s) {
	{
		auto expr = &((*((*(_120929_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b32d5782:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c9938_FieldIns> *_121010_f = it;
			{
				if ((((*((*((*(_121010_f))))._field_Decl))._field_Mutable && _1ac63ebbe_Mutable((*(*(_121010_f)).alloc)._field_Kind.ptr())) && _1ac57b8b9_isAccessibleDefine(_self_, (*(*((*(_121010_f))))._field_Decl.alloc)._field_Public, (*(*((*(_121010_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1b32d5782:;
			++it;
			goto _iter_begin_1b32d5782;
		}
		_iter_end_1b32d5782:;
	};
	return false;;
}



inline jule::Bool _1ac58895e_checkValidityForInitExpr(jule::Ptr<_1ac578256_sema> _self_, jule::Bool _123641_leftMut, jule::Bool _123656_leftRef, jule::Ptr<_1ac63d2d8_TypeKind>* _12374_leftKind, jule::Ptr<_1ac60a55d_Data>* _123730_d, jule::Ptr<_1ac4912c3_Token>* _123745_errorToken) {
	if ((_123641_leftMut && (!((*((*(_123730_d))))._field_Mutable)))) {
		if ((_1ac63ebbe_Mutable((*((*(_123730_d))))._field_Kind.ptr()) || (*(*((*(_123730_d))))._field_Kind.alloc)._field_Variadic)) {
			_1ac57b15a_pushErr(_self_.ptr(), (*(_123745_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_123730_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1ac4ca4d8_StructIns> _12454_s = _1ac642012_Struct((*((*(_123730_d))))._field_Kind);;
		if (((_12454_s != nullptr) && _1ac588343_isMutRiskyStruct(_self_, &(_12454_s)))) {
			_1ac57b15a_pushErr(_self_, (*(_123745_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_123730_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (_123656_leftRef) {
		if ((!(_1ac588002_checkRefValidityForInitExpr(_self_, _123641_leftMut, _123730_d, _123745_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1ac5e3b73_assignTypeChecker> _12567_atc = jule::new_ptr<_1ac5e3b73_assignTypeChecker>(_1ac5e3b73_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_d=(*(_123730_d)), ._field_errorToken=(*(_123745_errorToken)), ._field_refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr)});;
	return _1ac5e43c1_checkValidity(_12567_atc.ptr());;
}



inline jule::Bool _1ac588d5a_checkTypeAliasDeclKind(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63c4e6_TypeAlias>* _126444_ta, jule::Trait _126464_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac604d93_SymbolTable> _12657_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ac57ac3c_setCurrentFile(_self_, _12657_old);
	});;
	if (((*((*(_126444_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1ac604d93_SymbolTable> _12708_file = _1ac576dc0_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_126444_ta))))._field_Token.alloc)._field_File));;
		if ((_12708_file != nullptr)) {
			_1ac57ac3c_setCurrentFile(_self_, _12708_file);
		};
	};
	__jule_func_result=_1ac581649_checkTypeWithRefers(_self_, &((*((*(_126444_ta))))._field_Kind), _126464_l, nullptr, jule::new_ptr<_1ac64e6e5_referencer>(_1ac64e6e5_referencer{._field_ident=(*((*(_126444_ta))))._field_Ident, ._field_owner=jule::Any((*(_126444_ta)), &__jule_any_type27), ._field_refs=(&((*((*(_126444_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1ac64175e_Arr((*((*((*(_126444_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1ac64175e_Arr((*((*((*(_126444_ta))))._field_Kind))._field_Kind)))._field_Auto)) {
		_1ac57b15a_pushErr(_self_, (*((*(*((*(_126444_ta))))._field_Kind.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1ac5891bd_checkTypeAliasDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63c4e6_TypeAlias>* _128740_ta, jule::Trait _128760_l) {
	if (_1ac493baa_IsIgnoreIdent((*((*(_128740_ta))))._field_Ident)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_128740_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1ac588d5a_checkTypeAliasDeclKind(_self_, _128740_ta, _128760_l);
}



inline void _1ac589476_checkTypeAliasDeclDup(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac63c4e6_TypeAlias>* _129543_ta) {
	if (_1ac493baa_IsIgnoreIdent((*((*(_129543_ta))))._field_Ident)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_129543_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1ac57bd70_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_129543_ta))), &((*((*(_129543_ta))))._field_Ident), (*((*(_129543_ta))))._field_Binded)) {
		_1ac57b15a_pushErr(_self_, (*((*(_129543_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_129543_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1ac588d5a_checkTypeAliasDeclKind(_self_, _129543_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));
}



inline jule::Bool _1ac58970c_checkTypeAliasDecls(jule::Ptr<_1ac578256_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b32e9235:;
		if (it != expr_end) {
			jule::Ptr<_1ac63c4e6_TypeAlias> _130815_ta = *it;
			{
				_1ac589476_checkTypeAliasDeclDup(_self_, &(_130815_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b32e9235:;
			++it;
			goto _iter_begin_1b32e9235;
		}
		_iter_end_1b32e9235:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b332820e_checkEnumItemsDup(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac502543_EnumItem>> _131936_items) {
	{
		auto expr = &(_131936_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b332961c:;
		if (it != expr_end) {
			jule::Ptr<_1ac502543_EnumItem> *_132010_item = it;
			{
				if (((*((*(_132010_item))))._field_Ident).empty()) {
					goto _iter_next_1b332961c;
				} else if (_1ac493baa_IsIgnoreIdent((*((*(_132010_item))))._field_Ident)) {
					_1ac57b15a_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_131936_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b332a83d:;
						if (it != expr_end) {
							jule::Ptr<_1ac502543_EnumItem> *_132612_citem = it;
							{
								if (((*(_132010_item)) == (*(_132612_citem)))) {
									goto _iter_end_1b332a83d;
								} else if (((*((*(_132010_item))))._field_Ident == (*((*(_132612_citem))))._field_Ident)) {
									_1ac57b15a_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_132010_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1b332a83d;
								};
							}
							_iter_next_1b332a83d:;
							++it;
							goto _iter_begin_1b332a83d;
						}
						_iter_end_1b332a83d:;
					};
				};
			}
			_iter_next_1b332961c:;
			++it;
			goto _iter_begin_1b332961c;
		}
		_iter_end_1b332961c:;
	};
}

inline void _1b3336250_checkEnumItemsDup(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac5041e3_TypeEnumItem>> _131936_items) {
	{
		auto expr = &(_131936_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b333763b:;
		if (it != expr_end) {
			jule::Ptr<_1ac5041e3_TypeEnumItem> *_132010_item = it;
			{
				if (((*((*(_132010_item))))._field_Ident).empty()) {
					goto _iter_next_1b333763b;
				} else if (_1ac493baa_IsIgnoreIdent((*((*(_132010_item))))._field_Ident)) {
					_1ac57b15a_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_131936_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b333885c:;
						if (it != expr_end) {
							jule::Ptr<_1ac5041e3_TypeEnumItem> *_132612_citem = it;
							{
								if (((*(_132010_item)) == (*(_132612_citem)))) {
									goto _iter_end_1b333885c;
								} else if (((*((*(_132010_item))))._field_Ident == (*((*(_132612_citem))))._field_Ident)) {
									_1ac57b15a_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_132010_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1b333885c;
								};
							}
							_iter_next_1b333885c:;
							++it;
							goto _iter_begin_1b333885c;
						}
						_iter_end_1b333885c:;
					};
				};
			}
			_iter_next_1b333763b:;
			++it;
			goto _iter_begin_1b333763b;
		}
		_iter_end_1b333763b:;
	};
}



inline void _1ac589c6d_checkEnumItemsStr(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5030b0_Enum>* _133939_e) {
	jule::Ptr<_1ac60c285_eval> _13407_eval = _1ac583aad_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_133939_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b32eaec3:;
		if (it != expr_end) {
			jule::Ptr<_1ac502543_EnumItem> _134115_item = *it;
			{
				if (_1ac50292d_AutoExpr(_134115_item.ptr())) {
					(*_134115_item.alloc)._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aa12a190_NewStr((*_134115_item.alloc)._field_Ident)})});
					(*((*((*_134115_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_134115_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
				} else {
					jule::Ptr<_1ac60a55d_Data> _13509_d = _1ac62b0ea_evalExpr(_13407_eval, (*((*(_134115_item))._field_Value))._field_Expr);;
					if ((_13509_d == nullptr)) {
						goto _iter_next_1b32eaec3;
					};
					if ((!(_1ac60ae98_IsConst(_13509_d.ptr())))) {
						_1ac57b15a_pushErr(_self_, (*((*(*(_134115_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1ac4e308e_ReferenceStack> _13599_refers = static_cast<jule::Ptr<_1ac4e308e_ReferenceStack>>(nullptr);;
					_1ac5841c9_checkAssignType(_self_, false, &((*((*((*(_133939_e))))._field_Kind))._field_Kind), &(_13509_d), (*_134115_item.alloc)._field_Token, _13599_refers);
					(*(*(_134115_item))._field_Value.alloc)._field_Data=_13509_d;
				};
			}
			_iter_next_1b32eaec3:;
			++it;
			goto _iter_begin_1b32eaec3;
		}
		_iter_end_1b32eaec3:;
	};
}



inline void _1b3307199_checkEnumItemInt(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac60c285_eval>* _136643_eval, jule::Ptr<_1ac5030b0_Enum>* _136661_e, jule::Ptr<_1ac646401_Prim>* _136672_prim, jule::Ptr<_1ac502543_EnumItem>* _136690_item, jule::U64* _1366112_n) {
	if (_1ac50292d_AutoExpr((*(_136690_item)).ptr())) {
		(*((*(_136690_item))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		{
			
{
				_case_begin_1b33095ca:;
				{
					(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Constant=static__1aa129b0c_NewU64((*(_1366112_n)));
				}
			}
			_match_end_1b3309e8d:;
		};
		(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_136690_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	} else {
		jule::Ptr<_1ac60a55d_Data> _13818_d = _1ac62b0ea_evalExpr((*(_136643_eval)), (*((*((*(_136690_item))))._field_Value))._field_Expr);;
		if ((_13818_d == nullptr)) {
			return;;
		};
		if ((!(_1ac60ae98_IsConst(_13818_d.ptr())))) {
			_1ac57b15a_pushErr(_self_.ptr(), (*((*(*((*(_136690_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ac4e308e_ReferenceStack> _13888_refers = static_cast<jule::Ptr<_1ac4e308e_ReferenceStack>>(nullptr);;
		_1ac5841c9_checkAssignType(_self_, false, &((*((*((*(_136661_e))))._field_Kind))._field_Kind), &(_13818_d), (*((*(_136690_item))))._field_Token, _13888_refers);
		(*(*((*(_136690_item))))._field_Value.alloc)._field_Data=_13818_d;
		{
			
{
				_case_begin_1b330e14b:;
				{
					(*(_1366112_n))=_1aa12b05e_ReadU64((*((*(*((*(_136690_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1b331046b:;
		};
	};
}

inline void _1b3317c48_checkEnumItemInt(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac60c285_eval>* _136643_eval, jule::Ptr<_1ac5030b0_Enum>* _136661_e, jule::Ptr<_1ac646401_Prim>* _136672_prim, jule::Ptr<_1ac502543_EnumItem>* _136690_item, jule::I64* _1366112_n) {
	if (_1ac50292d_AutoExpr((*(_136690_item)).ptr())) {
		(*((*(_136690_item))))._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})});
		{
			
{
				_case_begin_1b331aa1a:;
				{
					(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Constant=static__1aa129843_NewI64((*(_1366112_n)));
				}
			}
			_match_end_1b331a9a4:;
		};
		(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_136690_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	} else {
		jule::Ptr<_1ac60a55d_Data> _13818_d = _1ac62b0ea_evalExpr((*(_136643_eval)), (*((*((*(_136690_item))))._field_Value))._field_Expr);;
		if ((_13818_d == nullptr)) {
			return;;
		};
		if ((!(_1ac60ae98_IsConst(_13818_d.ptr())))) {
			_1ac57b15a_pushErr(_self_.ptr(), (*((*(*((*(_136690_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ac4e308e_ReferenceStack> _13888_refers = static_cast<jule::Ptr<_1ac4e308e_ReferenceStack>>(nullptr);;
		_1ac5841c9_checkAssignType(_self_, false, &((*((*((*(_136661_e))))._field_Kind))._field_Kind), &(_13818_d), (*((*(_136690_item))))._field_Token, _13888_refers);
		(*(*((*(_136690_item))))._field_Value.alloc)._field_Data=_13818_d;
		{
			
{
				_case_begin_1b3321191:;
				{
					(*(_1366112_n))=_1aa12acc8_ReadI64((*((*(*((*(_136690_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1b3321119:;
		};
	};
}



inline void _1b33032d8_checkEnumItemsInt1(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac646401_Prim>* _140241_prim, jule::Ptr<_1ac5030b0_Enum>* _140259_e) {
	jule::U64 _14037_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1b3305010:;
			{
				_14037_max=_1aa124a80_MaxU(_1ac646775_Str((*(_140241_prim)).ptr()));
			}
		}
		_match_end_1b3305175:;
	};
	jule::Ptr<_1ac60c285_eval> _14137_eval = _1ac583aad_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));;
	jule::U64 _14147_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1ac502543_EnumItem> _14157_first = (*((*(_140259_e))))._field_Items[0LL];;
	_1b3307199_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_14157_first), &(_14147_n));
	if (((*((*(_14157_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b3304839:;
				{
					_14147_n=_1aa12bd2e_AsU64((*(*((*(_14157_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1b3310c41:;
		};
	};
	{
		auto expr = (*((*(_140259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b330bbc6:;
		if (it != expr_end) {
			jule::Ptr<_1ac502543_EnumItem> _142715_item = *it;
			{
				if (((_1ac50292d_AutoExpr(_142715_item.ptr()) && (_14147_n > 0LLU)) && ((jule::U64)(_14037_max - _14147_n) <= 0LLU))) {
					_1ac57b15a_pushErr(_self_, (*_142715_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1b330bbc6;
				};
				(_14147_n)++;
				_1b3307199_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_142715_item), &(_14147_n));
			}
			_iter_next_1b330bbc6:;
			++it;
			goto _iter_begin_1b330bbc6;
		}
		_iter_end_1b330bbc6:;
	};
}

inline void _1b33035b3_checkEnumItemsInt1(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac646401_Prim>* _140241_prim, jule::Ptr<_1ac5030b0_Enum>* _140259_e) {
	jule::I64 _14037_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1b3315b03:;
			{
				_14037_max=_1aa1247b6_MaxI(_1ac646775_Str((*(_140241_prim)).ptr()));
			}
		}
		_match_end_1b3315a8c:;
	};
	jule::Ptr<_1ac60c285_eval> _14137_eval = _1ac583aad_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));;
	jule::I64 _14147_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1ac502543_EnumItem> _14157_first = (*((*(_140259_e))))._field_Items[0LL];;
	_1b3317c48_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_14157_first), &(_14147_n));
	if (((*((*(_14157_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b331860b:;
				{
					_14147_n=_1aa12ba98_AsI64((*(*((*(_14157_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1b331d644:;
		};
	};
	{
		auto expr = (*((*(_140259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b3322d85:;
		if (it != expr_end) {
			jule::Ptr<_1ac502543_EnumItem> _142715_item = *it;
			{
				if (((_1ac50292d_AutoExpr(_142715_item.ptr()) && (_14147_n > 0LL)) && ((_14037_max - _14147_n) <= 0LL))) {
					_1ac57b15a_pushErr(_self_, (*_142715_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1b3322d85;
				};
				(_14147_n)++;
				_1b3317c48_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_142715_item), &(_14147_n));
			}
			_iter_next_1b3322d85:;
			++it;
			goto _iter_begin_1b3322d85;
		}
		_iter_end_1b3322d85:;
	};
}



inline void _1ac590779_checkEnumItemsInt(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5030b0_Enum>* _143739_e) {
	jule::Ptr<_1ac646401_Prim> _14383_prim = _1ac64098e_Prim((*((*((*(_143739_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1aa12817c_IsSigInt((*(_14383_prim))._field_Kind)) {
			_case_begin_1b3312a45:;
			{
				_1b33035b3_checkEnumItemsInt1(_self_, &(_14383_prim), _143739_e);
			}
		}
		else {
			_case_begin_1b3302a35:;
			{
				_1b33032d8_checkEnumItemsInt1(_self_, &(_14383_prim), _143739_e);
			}
		}
		_match_end_1b33029ad:;
	};
}



inline void _1ac590a32_checkEnumDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5030b0_Enum>* _144735_e) {
	if (_1ac493baa_IsIgnoreIdent((*((*(_144735_e))))._field_Ident)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ac57bd70_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_144735_e))), &((*((*(_144735_e))))._field_Ident), false)) {
		_1ac57b15a_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_144735_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_144735_e))))._field_Items.len() == 0LL)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_144735_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1b332820e_checkEnumItemsDup(_self_, (*((*(_144735_e))))._field_Items);
	if (((*((*(_144735_e))))._field_Kind != nullptr)) {
		if ((!(_1ac581ccb_checkType(_self_, &((*((*(_144735_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_144735_e))))._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	jule::Ptr<_1ac646401_Prim> _14717_t = _1ac64098e_Prim((*((*((*(_144735_e))))._field_Kind))._field_Kind.ptr());;
	if ((_14717_t == nullptr)) {
		_1ac57b15a_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1ac6498bb_IsStr(_14717_t.ptr())) {
			_case_begin_1b333090e:;
			{
				_1ac589c6d_checkEnumItemsStr(_self_, _144735_e);
			}
		}
		else if (_1aa128754_IsInt(_1ac646775_Str(_14717_t.ptr()))) {
			_case_begin_1b33305e0:;
			{
				_1ac590779_checkEnumItemsInt(_self_, _144735_e);
			}
		}
		else {
			_case_begin_1b3330579:;
			{
				_1ac57b15a_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b332ea51:;
	};
}



inline void _1ac590cda_checkTypeEnumDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5047ba_TypeEnum>* _148839_e) {
	if (_1ac493baa_IsIgnoreIdent((*((*(_148839_e))))._field_Ident)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ac57bd70_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_148839_e))), &((*((*(_148839_e))))._field_Ident), false)) {
		_1ac57b15a_pushErr(_self_, (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_148839_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_148839_e))))._field_Items.len() == 0LL)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_148839_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1b3336250_checkEnumItemsDup(_self_, (*((*(_148839_e))))._field_Items);
	{
		auto expr = &((*((*(_148839_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3336bbd:;
		if (it != expr_end) {
			jule::Ptr<_1ac5041e3_TypeEnumItem> _150215_item = *it;
			{
				if (((*(_150215_item))._field_Kind == nullptr)) {
					_1ac57b15a_pushErr(_self_, (*_150215_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1b3336bbd;
				};
				jule::Bool _15074_ok = _1ac581ccb_checkType(_self_, &((*_150215_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));;
				if ((!(_15074_ok))) {
					goto _iter_next_1b3336bbd;
				};
				jule::Ptr<_1ac646401_Prim> _15114_p = _1ac64098e_Prim((*((*_150215_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_15114_p != nullptr) && _1ac649b52_IsAny(_15114_p))) {
					_1ac57b15a_pushErr(_self_, (*_150215_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b3336bbd:;
			++it;
			goto _iter_begin_1b3336bbd;
		}
		_iter_end_1b3336bbd:;
	};
	if (((*((*(_148839_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1ac5041e3_TypeEnumItem> _15178_item = (*((*(_148839_e))))._field_Items[0LL];;
		_1ac63d2d8_TypeKind _15184_tk = _1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_148839_e)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4)};;
		if ((((*((*(_15178_item))._field_Kind))._field_Kind != nullptr) && _1ac63da25_Equal((*((*(_15178_item))._field_Kind))._field_Kind, ((jule::Ptr<_1ac63d2d8_TypeKind>)((&(_15184_tk))))))) {
			_1ac57b15a_pushErr(_self_, (*_15178_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac504b3e_Str((*(_148839_e)).ptr()), &__jule_any_type4); __jule_collection; }));
		};
	};
}



inline jule::Bool _1ac591071_checkEnumDecls(jule::Ptr<_1ac578256_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3342bda:;
		if (it != expr_end) {
			jule::Ptr<_1ac5030b0_Enum> _152915_e = *it;
			{
				_1ac590a32_checkEnumDecl(_self_, &(_152915_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3342bda:;
			++it;
			goto _iter_begin_1b3342bda;
		}
		_iter_end_1b3342bda:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac591307_checkTypeEnumDecls(jule::Ptr<_1ac578256_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33443b2:;
		if (it != expr_end) {
			jule::Ptr<_1ac5047ba_TypeEnum> _154115_e = *it;
			{
				_1ac590cda_checkTypeEnumDecl(_self_, &(_154115_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b33443b2:;
			++it;
			goto _iter_begin_1b33443b2;
		}
		_iter_end_1b33443b2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac591648_checkDeclGenerics(_1ac578256_sema* _self_, jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>* _155134_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _155134_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3344967:;
		if (it != expr_end) {
			jule::I64 _15537_i = it - expr->begin();
			jule::Ptr<_1ac4b3988_GenericDecl> *_155310_g = it;
			{
				if (_1ac493baa_IsIgnoreIdent((*((*(_155310_g))))._field_Ident)) {
					_1ac57b15a_pushErr(_self_, (*(*(_155310_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b3344967;
				};
				_julec_label_1b33468d1:;
				{
					auto expr = _155134_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b33473c6:;
					if (it != expr_end) {
						jule::I64 _15628_j = it - expr->begin();
						jule::Ptr<_1ac4b3988_GenericDecl> *_156211_ct = it;
						{
							{
								
								if ((_15628_j >= _15537_i)) {
									_case_begin_1b3347e98:;
									{
										goto _iter_end_1b33473c6;
									}
								}
								else if (((*(*(_155310_g)).alloc)._field_Ident == (*((*(_156211_ct))))._field_Ident)) {
									_case_begin_1b3348031:;
									{
										_1ac57b15a_pushErr(_self_, (*(*(_155310_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_155310_g)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1b33473c6;
									}
								}
								_match_end_1b3347d99:;
							};
						}
						_iter_next_1b33473c6:;
						++it;
						_15628_j++;
						goto _iter_begin_1b33473c6;
					}
					_iter_end_1b33473c6:;
				};
			}
			_iter_next_1b3344967:;
			++it;
			_15537_i++;
			goto _iter_begin_1b3344967;
		}
		_iter_end_1b3344967:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac591989_checkFnDeclParamsDup(_1ac578256_sema* _self_, jule::Ptr<_1ac4dbd46_Fn>* _157837_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1b3347cab:;
	{
		auto expr = &((*((*(_157837_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3348c9b:;
		if (it != expr_end) {
			jule::I64 _15817_i = it - expr->begin();
			jule::Ptr<_1ac4da372_Param> *_158110_p = it;
			{
				{
					auto expr = &((*((*(_157837_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b334ac48:;
					if (it != expr_end) {
						jule::Ptr<_1ac4b3988_GenericDecl> *_158311_g = it;
						{
							if (((*((*(_158110_p))))._field_Ident == (*((*(_158311_g))))._field_Ident)) {
								__jule_func_result=false;
								_1ac57b15a_pushErr(_self_, (*(*(_158110_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_158110_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1b3348c9b;
							};
						}
						_iter_next_1b334ac48:;
						++it;
						goto _iter_begin_1b334ac48;
					}
					_iter_end_1b334ac48:;
				};
				_julec_label_1b334cc5b:;
				{
					auto expr = &((*((*(_157837_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b334b221:;
					if (it != expr_end) {
						jule::I64 _15938_j = it - expr->begin();
						jule::Ptr<_1ac4da372_Param> *_159311_jp = it;
						{
							{
								
								if ((_15938_j >= _15817_i)) {
									_case_begin_1b334d81c:;
									{
										goto _iter_end_1b334b221;
									}
								}
								else if (_1ac493baa_IsIgnoreIdent((*(*(_158110_p)).alloc)._field_Ident) || _1ac493baa_IsIgnoreIdent((*((*(_159311_jp))))._field_Ident) || _1ac493e74_IsAnonIdent((*(*(_158110_p)).alloc)._field_Ident) || _1ac493e74_IsAnonIdent((*(*(_159311_jp)).alloc)._field_Ident)) {
									_case_begin_1b334d8a5:;
									{
										goto _iter_end_1b334b221;
									}
								}
								else if (((*(*(_158110_p)).alloc)._field_Ident == (*((*(_159311_jp))))._field_Ident)) {
									_case_begin_1b334d91b:;
									{
										__jule_func_result=false;
										_1ac57b15a_pushErr(_self_, (*(*(_158110_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_158110_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1b3348c9b;
									}
								}
								_match_end_1b334d6c9:;
							};
						}
						_iter_next_1b334b221:;
						++it;
						_15938_j++;
						goto _iter_begin_1b334b221;
					}
					_iter_end_1b334b221:;
				};
			}
			_iter_next_1b3348c9b:;
			++it;
			_15817_i++;
			goto _iter_begin_1b3348c9b;
		}
		_iter_end_1b3348c9b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac591cca_checkFnDeclResultDup(_1ac578256_sema* _self_, jule::Ptr<_1ac4dbd46_Fn>* _161537_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1ac4dc2ec_IsVoid((*(_161537_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_161537_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3351d92:;
		if (it != expr_end) {
			jule::I64 _16227_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> *_162210_v = it;
			{
				if ((_1ac493baa_IsIgnoreIdent((*((*(_162210_v))))._field_Kind) || _1ac493e74_IsAnonIdent((*(*(_162210_v)).alloc)._field_Kind))) {
					goto _iter_next_1b3351d92;
				};
				{
					auto expr = &((*((*(_161537_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b335347b:;
					if (it != expr_end) {
						jule::Ptr<_1ac4b3988_GenericDecl> *_162711_g = it;
						{
							if (((*(*(_162210_v)).alloc)._field_Kind == (*((*(_162711_g))))._field_Ident)) {
								goto _julec_label_1b3354a21;
							};
						}
						_iter_next_1b335347b:;
						++it;
						goto _iter_begin_1b335347b;
					}
					_iter_end_1b335347b:;
				};
				{
					auto expr = &((*((*(_161537_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3353877:;
					if (it != expr_end) {
						jule::Ptr<_1ac4da372_Param> *_163311_p = it;
						{
							if (((*(*(_162210_v)).alloc)._field_Kind == (*((*(_163311_p))))._field_Ident)) {
								goto _julec_label_1b3354a21;
							};
						}
						_iter_next_1b3353877:;
						++it;
						goto _iter_begin_1b3353877;
					}
					_iter_end_1b3353877:;
				};
				_julec_label_1b3354ee9:;
				{
					auto expr = &((*((*((*(_161537_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b33553e5:;
					if (it != expr_end) {
						jule::I64 _16418_j = it - expr->begin();
						jule::Ptr<_1ac4912c3_Token> *_164111_jv = it;
						{
							{
								
								if ((_16418_j >= _16227_i)) {
									_case_begin_1b3355e84:;
									{
										goto _iter_end_1b33553e5;
									}
								}
								else if (((*((*(_164111_jv))))._field_Kind == (*(*(_162210_v)).alloc)._field_Kind)) {
									_case_begin_1b335601c:;
									{
										goto _julec_label_1b3354a21;
									}
								}
								_match_end_1b3355d74:;
							};
						}
						_iter_next_1b33553e5:;
						++it;
						_16418_j++;
						goto _iter_begin_1b33553e5;
					}
					_iter_end_1b33553e5:;
				};
				goto _iter_next_1b3351d92;
				_julec_label_1b3354a21:;
				_1ac57b15a_pushErr(_self_, (*(_162210_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_162210_v)).alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1b3351d92:;
			++it;
			_16227_i++;
			goto _iter_begin_1b3351d92;
		}
		_iter_end_1b3351d92:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac59211b_checkFnVariadicParam(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _166042_f) {
	if (((*((*(_166042_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1ac4da372_Param> _16647_param = (*((*(_166042_f))))._field_Params[((*((*(_166042_f))))._field_Params.len() - 1LL)];;
	if (((*(_16647_param))._field_Variadic && (*_16647_param.alloc)._field_Reference)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*_16647_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1ac5923c4_checkFnDeclPrototype(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _167342_f) {
	if (((*((*(_167342_f))))._field_Exceptional && (*((*(_167342_f))))._field_Binded)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_167342_f))))._field_Exceptional) {
		if (_1ac4dc819_IsEntryPoint((*(_167342_f)).ptr())) {
			_1ac57b15a_pushErr(_self_, (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1ac4dcaa0_IsInit((*(_167342_f)).ptr())) {
			_1ac57b15a_pushErr(_self_, (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1ac591648_checkDeclGenerics(_self_, &((*((*(_167342_f))))._field_Generics))))) {
			_case_begin_1b335ccc1:;
		}
		else if ((!(_1ac591989_checkFnDeclParamsDup(_self_, _167342_f)))) {
			_case_begin_1b335cd37:;
		}
		else if ((!(_1ac591cca_checkFnDeclResultDup(_self_, _167342_f)))) {
			_case_begin_1b335cd9d:;
		}
		else if ((!(_1ac59211b_checkFnVariadicParam(_self_, _167342_f)))) {
			_case_begin_1b335ce14:;
		}
		_match_end_1b335b066:;
	};
}



inline jule::Bool _1ac59287a_catchTraitInheritCycle(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5008a4_Trait> _169539_t1, jule::Ptr<_1ac5008a4_Trait> _169555_t2, _1b097ade7_StrBuilder* _169572_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_169555_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33604aa:;
		if (it != expr_end) {
			jule::Ptr<_1ac6459e9_TypeSymbol> _169715_i = *it;
			{
				if (((*(_169715_i))._field_Kind == nullptr)) {
					goto _iter_next_1b33604aa;
				};
				jule::Ptr<_1ac5008a4_Trait> _17018_t3 = _1ac642298_Trait((*_169715_i.alloc)._field_Kind.ptr());;
				if ((_169539_t1 == _17018_t3)) {
					_1ac59760a_pushCycleError(_self_.ptr(), &((*(_169555_t2))._field_Ident), &((*(_17018_t3))._field_Ident), _169572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1ac59287a_catchTraitInheritCycle(_self_, _169539_t1, _17018_t3, _169572_message)))) {
					_1ac59760a_pushCycleError(_self_, &((*_169555_t2.alloc)._field_Ident), &((*_17018_t3.alloc)._field_Ident), _169572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b33604aa:;
			++it;
			goto _iter_begin_1b33604aa;
		}
		_iter_end_1b33604aa:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac592bbb__checkTraitDeclInherits(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5008a4_Trait>* _171445_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_171445_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3363c72:;
		if (it != expr_end) {
			jule::I64 _17168_i = it - expr->begin();
			jule::Ptr<_1ac6459e9_TypeSymbol> _171615_it = *it;
			{
				if ((!(_1ac581ccb_checkType(_self_, &(_171615_it), jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1b3363c72;
				};
				jule::Ptr<_1ac5008a4_Trait> _17218_t2 = _1ac642298_Trait((*(_171615_it))._field_Kind.ptr());;
				if ((_17218_t2 == nullptr)) {
					_1ac57b15a_pushErr(_self_, (*((*_171615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_171445_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_171615_it))._field_Kind), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1b3363c72;
				};
				{
					auto expr = &((*((*(_171445_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3365aed:;
					if (it != expr_end) {
						jule::I64 _17278_j = it - expr->begin();
						jule::Ptr<_1ac6459e9_TypeSymbol> _172711_it2 = *it;
						{
							if ((_17278_j >= _17168_i)) {
								goto _iter_end_1b3365aed;
							};
							if ((((*(_172711_it2))._field_Kind != nullptr) && _1ac63da25_Equal((*(_171615_it))._field_Kind, (*_172711_it2.alloc)._field_Kind))) {
								_1ac57b15a_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_17218_t2))._field_Ident, &__jule_any_type4); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1b3365aed;
							};
						}
						_iter_next_1b3365aed:;
						++it;
						_17278_j++;
						goto _iter_begin_1b3365aed;
					}
					_iter_end_1b3365aed:;
				};
				if (((*(_171445_t)) == _17218_t2)) {
					_1ac57b15a_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_171445_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1b097ade7_StrBuilder _17419_message = static__1b097b1e4_New(64LL);;
					__jule_func_result=(__jule_func_result && _1ac59287a_catchTraitInheritCycle(_self_, (*(_171445_t)), _17218_t2, &(_17419_message)));
					if ((_1b098596d_Len(&_17419_message) > 0LL)) {
						jule::Str _174410_errMsg = _1b09854d9_Str(&_17419_message);;
						_1b09856d7_Clear(&_17419_message);
						_1ac59760a_pushCycleError(_self_, &((*((*(_171445_t))))._field_Ident), &((*(_17218_t2))._field_Ident), &(_17419_message));
						_174410_errMsg+=_1b09854d9_Str(&_17419_message);
						_1ac57b15a_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_174410_errMsg, &__jule_any_type4); __jule_collection; }));
					};
				};
			}
			_iter_next_1b3363c72:;
			++it;
			_17168_i++;
			goto _iter_begin_1b3363c72;
		}
		_iter_end_1b3363c72:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ac592e74_checkTraitDeclInherits(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5008a4_Trait>* _175544_t) {
	{
		auto expr = &((*((*(_175544_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b336457a:;
		if (it != expr_end) {
			jule::I64 _17568_i = it - expr->begin();
			jule::Ptr<_1ac6459e9_TypeSymbol> _175615_it = *it;
			{
				jule::Ptr<_1ac5008a4_Trait> _17578_t1 = _1ac642298_Trait((*(_175615_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_175544_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3370641:;
					if (it != expr_end) {
						jule::I64 _17589_j = it - expr->begin();
						jule::Ptr<_1ac6459e9_TypeSymbol> _175816_it2 = *it;
						{
							if ((_17589_j == _17568_i)) {
								goto _iter_next_1b3370641;
							};
							jule::Ptr<_1ac5008a4_Trait> _17629_t2 = _1ac642298_Trait((*(_175816_it2))._field_Kind);;
							{
								auto expr = &((*(_17578_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b3371dd4:;
								if (it != expr_end) {
									jule::Ptr<_1ac4dbd46_Fn> _176317_t1m = *it;
									{
										jule::Ptr<_1ac4dbd46_Fn> _176410_t2m = _1ac501586_FindMethod(_17629_t2.ptr(), (*(_176317_t1m))._field_Ident);;
										if ((_176410_t2m == nullptr)) {
											goto _iter_next_1b3371dd4;
										};
										jule::Ptr<_1ac4dee04_FnIns> _17686_t1f = _1ac5861ed_getTraitCheckFnKind(_self_, &(_176317_t1m));;
										jule::Ptr<_1ac4dee04_FnIns> _17696_t2f = _1ac5861ed_getTraitCheckFnKind(_self_, &(_176410_t2m));;
										if ((!(_1ac4e0da0_equalTrait(_17686_t1f, &(_17696_t2f))))) {
											_1ac57b15a_pushErr(_self_, (*((*_175615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_175544_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_17629_t2.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1ac4e1cd5_GetKindStr(_17686_t1f, true), &__jule_any_type4); (*it++) = jule::Any(_1ac4e1cd5_GetKindStr(_17696_t2f.ptr(), true), &__jule_any_type4); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1b3371dd4:;
									++it;
									goto _iter_begin_1b3371dd4;
								}
								_iter_end_1b3371dd4:;
							};
						}
						_iter_next_1b3370641:;
						++it;
						_17589_j++;
						goto _iter_begin_1b3370641;
					}
					_iter_end_1b3370641:;
				};
			}
			_iter_next_1b336457a:;
			++it;
			_17568_i++;
			goto _iter_begin_1b336457a;
		}
		_iter_end_1b336457a:;
	};
}



inline void _1ac59322c_checkTraitDeclMethod(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _178042_f) {
	if (_1ac493baa_IsIgnoreIdent((*((*(_178042_f))))._field_Ident)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_178042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ac493e74_IsAnonIdent((*((*(_178042_f))))._field_Ident)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_178042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_178042_f))))._field_sema=_self_;
	_1ac5923c4_checkFnDeclPrototype(_self_, _178042_f);
	jule::Ptr<_1ac4dee04_FnIns> _17887_ins = _1ac4dd5d9_instance((*(_178042_f)));;
	_1ac587a4b_reloadFnInsTypes(_self_, _17887_ins);
	(*(_17887_ins))._field_reloaded=true;
	_1ac4dd8e7_appendInstance((*(_178042_f)).ptr(), &(_17887_ins));
}



inline void _1ac5934d5_checkTraitDeclMethods(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5008a4_Trait>* _179443_t) {
	{
		auto expr = &((*((*(_179443_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b337954b:;
		if (it != expr_end) {
			jule::I64 _17958_i = it - expr->begin();
			jule::Ptr<_1ac4dbd46_Fn> _179515_f = *it;
			{
				_1ac59322c_checkTraitDeclMethod(_self_, &(_179515_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1ac501c18_findMethodInherit((*(_179443_t)).ptr(), &((*(_179515_f))._field_Ident)) != nullptr)) {
					_1ac57b15a_pushErr(_self_, (*_179515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_179515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1b337954b;
				};
				_julec_label_1b337c3c8:;
				{
					auto expr = &((*((*(_179443_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b337c807:;
					if (it != expr_end) {
						jule::I64 _18118_j = it - expr->begin();
						jule::Ptr<_1ac4dbd46_Fn> _181111_jf = *it;
						{
							{
								
								if ((_18118_j >= _17958_i)) {
									_case_begin_1b337d396:;
									{
										goto _iter_end_1b337c807;
									}
								}
								else if (((*_179515_f.alloc)._field_Ident == (*(_181111_jf))._field_Ident)) {
									_case_begin_1b337d42e:;
									{
										_1ac57b15a_pushErr(_self_, (*_179515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_179515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1b337c807;
									}
								}
								_match_end_1b337d286:;
							};
						}
						_iter_next_1b337c807:;
						++it;
						_18118_j++;
						goto _iter_begin_1b337c807;
					}
					_iter_end_1b337c807:;
				};
			}
			_iter_next_1b337954b:;
			++it;
			_17958_i++;
			goto _iter_begin_1b337954b;
		}
		_iter_end_1b337954b:;
	};
}



inline void _1ac59378d_checkTraitDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5008a4_Trait>* _183036_t) {
	if (_1ac493baa_IsIgnoreIdent((*((*(_183036_t))))._field_Ident)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_183036_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ac57bd70_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_183036_t))), &((*((*(_183036_t))))._field_Ident), false)) {
		_1ac57b15a_pushErr(_self_, (*((*(_183036_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_183036_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1ac592e74_checkTraitDeclInherits(_self_, _183036_t);
	_1ac5934d5_checkTraitDeclMethods(_self_, _183036_t);
}



inline jule::Bool _1ac593a24_checkTraitDecls(jule::Ptr<_1ac578256_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3383654:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> _184415_t = *it;
			{
				_1ac59378d_checkTraitDecl(_self_, &(_184415_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3383654:;
			++it;
			goto _iter_begin_1b3383654;
		}
		_iter_end_1b3383654:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac593e20_checkTraitImplMethods(_1ac578256_sema* _self_, jule::Ptr<_1ac5008a4_Trait>* _185442_base, jule::Ptr<_1ac5306e7_Impl>* _185457_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_185457_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3385139:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> *_185610_f = it;
			{
				if ((_1ac501586_FindMethod((*(_185442_base)).ptr(), (*((*(_185610_f))))._field_Ident) == nullptr)) {
					_1ac57b15a_pushErr(_self_, (*(*(_185610_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185442_base))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_185610_f)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1b3385139:;
			++it;
			goto _iter_begin_1b3385139;
		}
		_iter_end_1b3385139:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac59431b_implToStruct(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _186534_dest, jule::Ptr<_1ac5306e7_Impl>* _186554_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_186554_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33879aa:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _186915_f = *it;
			{
				if (((_1ac4c832c_FindMethod((*(_186534_dest)).ptr(), (*(_186915_f))._field_Ident, (*_186915_f.alloc)._field_Statically) != nullptr) || (_1ac4c89ae_FindField((*(_186534_dest)).ptr(), (*_186915_f.alloc)._field_Ident) != nullptr))) {
					_1ac57b15a_pushErr(_self_.ptr(), (*_186915_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186534_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_186915_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1b33879aa;
				};
				if ((((*((*(_186534_dest))))._field_Generics.len() > 0LL) && ((*_186915_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_186915_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b338aa46:;
						if (it != expr_end) {
							jule::Ptr<_1ac4b3988_GenericDecl> _187712_fg = *it;
							{
								{
									auto expr = &((*((*(_186534_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b338b4a3:;
									if (it != expr_end) {
										jule::Ptr<_1ac4b3988_GenericDecl> _187813_dg = *it;
										{
											if (((*(_187712_fg))._field_Ident == (*(_187813_dg))._field_Ident)) {
												_1ac57b15a_pushErr(_self_, (*_187712_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1b338b4a3:;
										++it;
										goto _iter_begin_1b338b4a3;
									}
									_iter_end_1b338b4a3:;
								};
							}
							_iter_next_1b338aa46:;
							++it;
							goto _iter_begin_1b338aa46;
						}
						_iter_end_1b338aa46:;
					};
				};
				_1ac57c1d3_checkDirectives(_self_, &((*_186915_f.alloc)._field_Directives), jule::Any(_186915_f, &__jule_any_type26));
				(*_186915_f.alloc)._field_sema=_self_;
				(*_186915_f.alloc)._field_Owner=(*(_186534_dest));
				{ jule::Slice<jule::Ptr<_1ac4dbd46_Fn>> &__jule_push_dest = (*((*(_186534_dest))))._field_Methods; __jule_push_dest.push(_186915_f); };
			}
			_iter_next_1b33879aa:;
			++it;
			goto _iter_begin_1b33879aa;
		}
		_iter_end_1b33879aa:;
	};
	{
		auto expr = &((*((*(_186554_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3387d95:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _189415_v = *it;
			{
				;
				if (((_1ac4c832c_FindMethod((*(_186534_dest)).ptr(), (*(_189415_v))._field_Ident, true) != nullptr) || (_1ac4c866d_FindStatic((*(_186534_dest)).ptr(), (*_189415_v.alloc)._field_Ident) != nullptr))) {
					_1ac57b15a_pushErr(_self_, (*_189415_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186534_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_189415_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1b3387d95;
				};
				{ jule::Slice<jule::Ptr<_1ac5a2527_Var>> &__jule_push_dest = (*((*(_186534_dest))))._field_Statics; __jule_push_dest.push(_189415_v); };
			}
			_iter_next_1b3387d95:;
			++it;
			goto _iter_begin_1b3387d95;
		}
		_iter_end_1b3387d95:;
	};
	return __jule_func_result;;
}



inline void _1ac5945c4_implTrait(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5306e7_Impl>* _190731_decl) {
	jule::Ptr<_1ac63d2d8_TypeKind> _19087_base_t = _1ac582dba_selectType(_self_, &((*((*(_190731_decl))))._field_Base));;
	if ((_19087_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac5008a4_Trait> _19127_base = _1ac642298_Trait(_19087_base_t.ptr());;
	if ((_19127_base == nullptr)) {
		_1ac57b15a_pushErr(_self_, (*((*((*(_190731_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str(_19087_base_t.ptr()), &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _19197_destT = _1ac582dba_selectType(_self_, &((*((*(_190731_decl))))._field_Dest));;
	if ((_19197_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _19237_destS = _1ac642012_Struct(_19197_destT.ptr());;
	if ((_19237_destS == nullptr)) {
		_1ac57b15a_pushErr(_self_, (*((*((*(_190731_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str(_19197_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac4c767d_Struct> _19307_dest = (*(_19237_destS))._field_Decl;;
	if ((_1ac497241_Dir((*((*(_19307_dest))._field_Token))._field_File.ptr()) != _1ac497241_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ac57b15a_pushErr(_self_, (*(*((*(_190731_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1ac5a07ab_pushImplemented(_19127_base, &(_19307_dest));
	_1ac5a0a97_pushImplements(&(_19307_dest), _19127_base);
	if (((*((*(_190731_decl))))._field_Statics.len() > 0LL)) {
		_1ac57b15a_pushErr(_self_, (*((*((*(_190731_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1ac593e20_checkTraitImplMethods(_self_, &(_19127_base), _190731_decl)))) {
			_case_begin_1b339b43b:;
		}
		else if ((!(_1ac59431b_implToStruct(_self_, &(_19307_dest), _190731_decl)))) {
			_case_begin_1b339b4a2:;
		}
		_match_end_1b339a47e:;
	};
}



inline void _1ac59487c_implStruct(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5306e7_Impl>* _195032_decl) {
	jule::Ptr<_1ac63d2d8_TypeKind> _19517_destT = _1ac582dba_selectType(_self_, &((*((*(_195032_decl))))._field_Dest));;
	if ((_19517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _19557_destS = _1ac642012_Struct(_19517_destT.ptr());;
	if ((_19557_destS == nullptr)) {
		_1ac57b15a_pushErr(_self_, (*((*((*(_195032_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str(_19517_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac4c767d_Struct> _19627_dest = (*(_19557_destS))._field_Decl;;
	if ((_1ac497241_Dir((*((*(_19627_dest))._field_Token))._field_File.ptr()) != _1ac497241_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ac57b15a_pushErr(_self_, (*(*((*(_195032_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1ac59431b_implToStruct(_self_, &(_19627_dest), _195032_decl)))) {
			_case_begin_1b33a22aa:;
		}
		_match_end_1b33a086e:;
	};
}



inline void _1ac594b35_implImpl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5306e7_Impl>* _197430_decl) {
	{
		
		if (_1ac530ae3_IsTraitImpl((*(_197430_decl)).ptr())) {
			_case_begin_1b33a2d49:;
			{
				_1ac5945c4_implTrait(_self_, _197430_decl);
			}
		}
		else if (_1ac530d79_IsStructImpl((*(_197430_decl)).ptr())) {
			_case_begin_1b33a2de3:;
			{
				_1ac59487c_implStruct(_self_, _197430_decl);
			}
		}
		_match_end_1b33a2c28:;
	};
}



inline void _1ac594e98_checkVarDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5a2527_Var>* _198534_decl, jule::Trait _198550_l) {
	if (_1ac493baa_IsIgnoreIdent((*((*(_198534_decl))))._field_Ident)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1ac5a2bba_IsTypeInferred((*(_198534_decl)).ptr())) {
		if ((!(_1ac5a2934_IsInitialized((*(_198534_decl)).ptr())))) {
			_1ac57b15a_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1ac4e308e_ReferenceStack> _19958_refers = static_cast<jule::Ptr<_1ac4e308e_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _198550_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3)) {
				_case_begin_1b33a7018:;
				{
					_19958_refers=(*((*(_198534_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)) {
				_case_begin_1b33a74e1:;
				{
					_19958_refers=_1ac540b58_getOwnerRefers(_198550_l.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));
				}
			}
			else {
				_case_begin_1b33a7106:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:2002:5"));;
				}
			}
			_match_end_1b33a7090:;
		};
		(*((*((*(_198534_decl))))._field_Kind))._field_Kind=_1ac582282_checkTypeRefers(_self_, &((*(*((*(_198534_decl))))._field_Kind.alloc)._field_Decl), _198550_l, _19958_refers);
	};
	if ((*((*(_198534_decl))))._field_Reference) {
		if ((*((*(_198534_decl))))._field_Constant) {
			_1ac57b15a_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Statically) {
			_1ac57b15a_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1ac5a2934_IsInitialized((*(_198534_decl)).ptr())))) {
		if ((*((*(_198534_decl))))._field_Constant) {
			_1ac57b15a_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Statically) {
			_1ac57b15a_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Reference) {
			_1ac57b15a_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1ac595251_checkGlobalVarDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5a2527_Var>* _203140_decl) {
	if (_1ac57bd70_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_203140_decl))), &((*((*(_203140_decl))))._field_Ident), (*((*(_203140_decl))))._field_Binded)) {
		_1ac57b15a_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203140_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_203140_decl))))._field_Binded && (*((*(_203140_decl))))._field_Constant)) {
		_1ac57b15a_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_203140_decl))))._field_Binded)) && (!((*((*(_203140_decl))))._field_Constant))) && (!((*((*(_203140_decl))))._field_Statically)))) {
		_1ac57b15a_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1ac57c1d3_checkDirectives(_self_, &((*((*(_203140_decl))))._field_Directives), jule::Any((*(_203140_decl)), &__jule_any_type8));
	_1ac594e98_checkVarDecl(_self_, _203140_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));
}



inline jule::Bool _1ac5954d7_checkGlobalDecls(jule::Ptr<_1ac578256_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33b41e0:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _204915_decl = *it;
			{
				_1ac595251_checkGlobalVarDecl(_self_, &(_204915_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b33b41e0:;
			++it;
			goto _iter_begin_1b33b41e0;
		}
		_iter_end_1b33b41e0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac5958d3_checkStructTraitImpl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _205942_strct, jule::Ptr<_1ac5008a4_Trait>* _205963_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_205963_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33b5ac6:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _206015_tf = *it;
			{
				jule::Bool _20618_exist = false;;
				jule::Ptr<_1ac4dbd46_Fn> _20628_sf = _1ac4c832c_FindMethod((*(_205942_strct)).ptr(), (*(_206015_tf))._field_Ident, (*_206015_tf.alloc)._field_Statically);;
				jule::Ptr<_1ac4dee04_FnIns> _20634_tfK = _1ac5861ed_getTraitCheckFnKind(_self_, &(_206015_tf));;
				if ((_20628_sf != nullptr)) {
					jule::Ptr<_1ac4dee04_FnIns> _20659_sfK = _1ac5861ed_getTraitCheckFnKind(_self_, &(_20628_sf));;
					if ((_20659_sfK != nullptr)) {
						_20618_exist=_1ac4e0da0_equalTrait(_20634_tfK, &(_20659_sfK));
					};
				};
				if (_20618_exist) {
					jule::Ptr<_1ac4a5b9a_Directive> _20715_d = _1ac634a60_findDirective(&((*_20628_sf.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_20715_d != nullptr)) {
						_1ac57b15a_pushErr(_self_, (*_20715_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1ac57b15a_pushErr(_self_, (*((*(_205942_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_205963_trt))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1ac4e1cd5_GetKindStr(_20634_tfK, true), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1b33b5ac6:;
			++it;
			goto _iter_begin_1b33b5ac6;
		}
		_iter_end_1b33b5ac6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac595c24_checkStructImpls(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _208538_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_208538_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33bbed9:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> _208715_trt = *it;
			{
				__jule_func_result=(_1ac5958d3_checkStructTraitImpl(_self_, _208538_s, &(_208715_trt)) && __jule_func_result);
			}
			_iter_next_1b33bbed9:;
			++it;
			goto _iter_begin_1b33bbed9;
		}
		_iter_end_1b33bbed9:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ac596065_checkStructFields(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _209339_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_209339_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33bd480:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c4757_Field> _209515_f = *it;
			{
				(*(_209515_f))._field_Owner=(*(_209339_st));
				{
					auto expr = &((*((*(_209339_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b33be1a6:;
					if (it != expr_end) {
						jule::Ptr<_1ac4c4757_Field> _209711_cf = *it;
						{
							if ((_209515_f == _209711_cf)) {
								goto _iter_end_1b33be1a6;
							} else if (((*_209515_f.alloc)._field_Ident == (*(_209711_cf))._field_Ident)) {
								_1ac57b15a_pushErr(_self_.ptr(), (*_209515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1b33be1a6:;
						++it;
						goto _iter_begin_1b33be1a6;
					}
					_iter_end_1b33be1a6:;
				};
			}
			_iter_next_1b33bd480:;
			++it;
			goto _iter_begin_1b33bd480;
		}
		_iter_end_1b33bd480:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ac59631d_checkStructDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _211037_s) {
	if (_1ac493baa_IsIgnoreIdent((*((*(_211037_s))))._field_Ident)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_211037_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ac57bd70_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_211037_s))), &((*((*(_211037_s))))._field_Ident), (*((*(_211037_s))))._field_Binded)) {
		_1ac57b15a_pushErr(_self_, (*((*(_211037_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_211037_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1ac57c1d3_checkDirectives(_self_, &((*((*(_211037_s))))._field_Directives), jule::Any((*(_211037_s)), &__jule_any_type23));
	{
		
		if ((!(_1ac591648_checkDeclGenerics(_self_, &((*((*(_211037_s))))._field_Generics))))) {
			_case_begin_1b33c4585:;
		}
		else if ((!(_1ac596065_checkStructFields(_self_, _211037_s)))) {
			_case_begin_1b33c45eb:;
		}
		else if ((!(_1ac595c24_checkStructImpls(_self_, _211037_s)))) {
			_case_begin_1b33c4662:;
		}
		else if ((!(_1ac596e56_checkFuncDeclsBy(_self_, &((*((*(_211037_s))))._field_Methods))))) {
			_case_begin_1b33c46c8:;
		}
		_match_end_1b33c4453:;
	};
}



inline jule::Bool _1ac5965a4_checkStructDecls(jule::Ptr<_1ac578256_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33c6a2c:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _213015_s = *it;
			{
				_1ac59631d_checkStructDecl(_self_, &(_213015_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b33c6a2c:;
			++it;
			goto _iter_begin_1b33c6a2c;
		}
		_iter_end_1b33c6a2c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac59685c_checkAnonFuncDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _214039_f) {
	(*((*(_214039_f))))._field_sema=_self_;
	_1ac5923c4_checkFnDeclPrototype(_self_, _214039_f);
}



inline void _1ac596b15_checkFuncDecl(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _214535_f) {
	if (_1ac493baa_IsIgnoreIdent((*((*(_214535_f))))._field_Ident)) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ac4dcd36_IsAnon((*(_214535_f)).ptr())) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1ac57c1d3_checkDirectives(_self_, &((*((*(_214535_f))))._field_Directives), jule::Any((*(_214535_f)), &__jule_any_type26));
	_1ac59685c_checkAnonFuncDecl(_self_, _214535_f);
	if ((((*((*(_214535_f))))._field_Owner == nullptr) && _1ac57bd70_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_214535_f))), &((*((*(_214535_f))))._field_Ident), (*((*(_214535_f))))._field_Binded))) {
		if ((*((*(_214535_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1ac4dbd46_Fn> _21575_init = _1ac57981d_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_21575_init != nullptr)) {
				return;;
			};
		};
		_1ac57b15a_pushErr(_self_, (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_214535_f))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ac596e56_checkFuncDeclsBy(jule::Ptr<_1ac578256_sema> _self_, jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>* _216738_funcs) {
	{
		auto expr = _216738_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33ce43b:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _216815_f = *it;
			{
				_1ac596b15_checkFuncDecl(_self_, &(_216815_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1b33ce43b:;
			++it;
			goto _iter_begin_1b33ce43b;
		}
		_iter_end_1b33ce43b:;
	};
	return true;;
}



inline jule::Bool _1ac5971dc_checkFuncDecls(jule::Ptr<_1ac578256_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ac596e56_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1ac59760a_pushCycleError(_1ac578256_sema* _self_, jule::Str* _218327_st1, jule::Str* _218338_st2, _1b097ade7_StrBuilder* _218353_message) {
	;
	jule::Str _21853_refersTo = _1b08b6c9a_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_218327_st1)), &__jule_any_type4); (*it++) = jule::Any((*(_218338_st2)), &__jule_any_type4); __jule_collection; }));;
	jule::Str _21863_m = _1b09854d9_Str(_218353_message);;
	_1b0984be2_WriteStr(_218353_message, _1b0966b08_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1b0984be2_WriteStr(_218353_message, _21853_refersTo);
	_1b0984e9a_WriteByte(_218353_message, '\n');
	_1b0984be2_WriteStr(_218353_message, _21863_m);
}



inline void _1ac597cae_checkPackageDecls(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33d6223:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _221015_f = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_.ptr(), _221015_f);
				if ((!(_1ac58970c_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b33d6223:;
			++it;
			goto _iter_begin_1b33d6223;
		}
		_iter_end_1b33d6223:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33d66a7:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _221715_f = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_, _221715_f);
				if ((!(_1ac593a24_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b33d66a7:;
			++it;
			goto _iter_begin_1b33d66a7;
		}
		_iter_end_1b33d66a7:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33d76b9:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _222415_f = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_, _222415_f);
				if ((!(_1ac5954d7_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b33d76b9:;
			++it;
			goto _iter_begin_1b33d76b9;
		}
		_iter_end_1b33d76b9:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b33d8720:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _223115_f = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_, _223115_f);
				{
					
					if ((!(_1ac5971dc_checkFuncDecls(_self_)))) {
						_case_begin_1b33d9d70:;
					}
					else if ((!(_1ac5965a4_checkStructDecls(_self_)))) {
						_case_begin_1b33d9e19:;
					}
					else {
						_case_begin_1b33d97ba:;
						{
							goto _iter_next_1b33d8720;
						}
					}
					_match_end_1b33d9cc6:;
				};
				return;;
			}
			_iter_next_1b33d8720:;
			++it;
			goto _iter_begin_1b33d8720;
		}
		_iter_end_1b33d8720:;
	};
}



inline void _1ac598122_checkDataForTypeInference(_1ac578256_sema* _self_, jule::Ptr<_1ac60a55d_Data>* _224342_d, jule::Ptr<_1ac4912c3_Token>* _224353_err_token) {
	{
		
		if (_1ac60a97b_IsNil((*(_224342_d)).ptr())) {
			_case_begin_1b33db019:;
			{
				_1ac57b15a_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1ac60ac12_IsVoid((*(_224342_d)).ptr())) {
			_case_begin_1b33db0b3:;
			{
				_1ac57b15a_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_224342_d))))._field_Kind))._field_Variadic) {
			_case_begin_1b33db129:;
			{
				_1ac57b15a_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b33dadd7:;
	};
}



inline void _1ac5983ca_checkVarValue(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5a2527_Var>* _225535_v) {
	if (_1ac5a2bba_IsTypeInferred((*(_225535_v)).ptr())) {
		(*((*(_225535_v))))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=(*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Kind});
		_1ac598122_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1ac58895e_checkValidityForInitExpr(_self_, (*((*(_225535_v))))._field_Mutable, (*((*(_225535_v))))._field_Reference, &((*((*((*(_225535_v))))._field_Kind))._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_225535_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1ac64cc21_Arr> _22688_arr = _1ac64175e_Arr((*((*((*(_225535_v))))._field_Kind))._field_Kind.ptr());;
		if ((_22688_arr != nullptr)) {
			if ((*_22688_arr.alloc)._field_Auto) {
				jule::Ptr<_1ac64cc21_Arr> _22716_dataArr = _1ac64175e_Arr((*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_22716_dataArr != nullptr)) {
					(*_22688_arr.alloc)._field_N=(*_22716_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1ac5841c9_checkAssignType(_self_, (*((*(_225535_v))))._field_Reference, &((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_225535_v))))._field_Refers)) {
			_1ac58895e_checkValidityForInitExpr(_self_, (*((*(_225535_v))))._field_Mutable, (*((*(_225535_v))))._field_Reference, &((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_225535_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_225535_v))))._field_Reference && (!(_1ac65a1e5_isValidForRef(&((*((*((*(_225535_v))))._field_Kind))._field_Kind)))))) {
		_1ac57b15a_pushErr(_self_.ptr(), (*((*(_225535_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	};
	if ((*((*(_225535_v))))._field_Constant) {
		if (((!(_1ac60ae98_IsConst((*((*((*(_225535_v))))._field_Value))._field_Data.ptr()))) && (!(_1ac642a4b_comptime((*(*((*((*(_225535_v))))._field_Value))._field_Data.alloc)._field_Kind.ptr()))))) {
			_1ac57b15a_pushErr(_self_, (*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_225535_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1ac6427b5_Tup((*((*((*(_225535_v))))._field_Kind))._field_Kind) != nullptr)) {
		(*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1ac59873d_evalVarValue(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5a2527_Var>* _230834_decl, jule::Trait _230850_l) {
	if ((!(_1ac5a2934_IsInitialized((*(_230834_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1ac60c285_eval> _23137_eval = static_cast<jule::Ptr<_1ac60c285_eval>>(nullptr);;
	if (((*((*(_230834_decl))))._field_Kind != nullptr)) {
		_23137_eval=_1ac583371_evalpd(_self_, _230850_l, (*(*((*(_230834_decl))))._field_Kind.alloc)._field_Kind, (*(_230834_decl)));
	} else {
		_23137_eval=_1ac583371_evalpd(_self_, _230850_l, nullptr, (*(_230834_decl)));
	};
	(*(_23137_eval))._field_immutable=(!((*((*(_230834_decl))))._field_Mutable));
	(*((*((*(_230834_decl))))._field_Value))._field_Data=_1ac62b0ea_evalExpr(_23137_eval, (*(*((*(_230834_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1ac598aa1_checkVar(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac5a2527_Var>* _232530_decl, jule::Trait _232546_l) {
	_1ac59873d_evalVarValue(_self_, _232530_decl, _232546_l);
	if (((*((*((*(_232530_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1ac5983ca_checkVarValue(_self_, _232530_decl);
}



inline void _1ac598c9e_checkGlobals(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ae19a5:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _233515_decl = *it;
			{
				if ((*(_233515_decl))._field_Binded) {
					goto _iter_next_1b3ae19a5;
				};
				if (((_1ac5a2934_IsInitialized(_233515_decl) && ((*((*_233515_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1ac5a2bba_IsTypeInferred(_233515_decl) && ((*((*_233515_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1ac598aa1_checkVar(_self_, &(_233515_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));
				};
			}
			_iter_next_1b3ae19a5:;
			++it;
			goto _iter_begin_1b3ae19a5;
		}
		_iter_end_1b3ae19a5:;
	};
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ac59919a_readyToCheckFn(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _234936_s, jule::Ptr<_1ac4dbd46_Fn>* _234956_f) {
	jule::Ptr<_1ac4dee04_FnIns> _23507_ins = _1ac4dd5d9_instance((*(_234956_f)));;
	if (((*((*(_234956_f))))._field_Instances.len() != 0LL)) {
		return _23507_ins;;
	};
	(*(_23507_ins))._field_Owner=(*(_234936_s));
	_1ac4dd8e7_appendInstance((*(_234956_f)).ptr(), &(_23507_ins));
	(*_23507_ins.alloc)._field_reloaded=true;
	if (_1ac587a4b_reloadFnInsTypes(_self_, _23507_ins)) {
		return _23507_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ac599596_checkGenericFn(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _236536_f, jule::Ptr<_1ac4912c3_Token>* _236552_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1ac587a4b_reloadFnInsTypes(_self_, (*(_236536_f)));
	(*((*(_236536_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _23717_existInstance = _1ac4dd8e7_appendInstance((*((*(_236536_f))))._field_Decl.ptr(), _236536_f);;
	if ((!(_1ac5866a4_checkConstraintsFn(_self_, _236536_f, _236552_et, _23717_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_23717_existInstance != nullptr)) {
		(*(_236536_f))=_23717_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1ac59c104_checkFnInsCaller(_self_, _236536_f, (*(_236552_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1ac599909_checkTypeMethod(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _238837_s, jule::Ptr<_1ac4dbd46_Fn>* _238857_f) {
	if (((*((*(_238857_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _23937_ins = (*((*(_238857_f))))._field_Instances[0LL];;
	if (((*((*(_23937_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1ac59c3ac_checkFnIns(_self_, &(_23937_ins));
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ac599db0_checkStructInsOp(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _240138_s, jule::Ptr<_1ac4dbd46_Fn>* _240158_f, jule::Fn<jule::Bool,jule::Ptr<_1ac4dbd46_Fn>> _240166_p) {
	if (((((*(_240158_f)) == nullptr) || ((*((*(_240158_f))))._field_Generics.len() > 0LL)) || (!(_240166_p((*(_240158_f))))))) {
		return nullptr;;
	};
	return (*((*(_240158_f))))._field_Instances[0LL];;
}



inline jule::Bool _1ac59a2ab_checkStructEnv(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _241136_s, jule::Ptr<_1ac4912c3_Token> _241155_errorToken) {
	jule::Bool __jule_func_result = false;
	_1ac6506d5_typeChecker _24127_tc = _1ac6506d5_typeChecker{._field_s=(*((*((*(_241136_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1ac64e6e5_referencer>(_1ac64e6e5_referencer{._field_ident=(*(*((*(_241136_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_241136_s))))._field_Decl, &__jule_any_type23), ._field_refs=nullptr}), ._field_refers=(*((*(_241136_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_241136_s))))._field_Generics.len() > 0LL)) {
		_24127_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>::alloc(0LL, (*((*(_241136_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_241136_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3b01652:;
			if (it != expr_end) {
				jule::I64 _24259_i = it - expr->begin();
				jule::Ptr<_1ac63b902_InsGeneric> _242516_g = *it;
				{
					jule::Ptr<_1ac4b3988_GenericDecl> _24269_decl = (*(*((*(_241136_s))))._field_Decl.alloc)._field_Generics[_24259_i];;
					{ jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> &__jule_push_dest = _24127_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1ac63c4e6_TypeAlias>(_1ac63c4e6_TypeAlias{._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_24269_decl.alloc)._field_Token, ._field_Ident=(*(_24269_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=(*(_242516_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1b3b01652:;
				++it;
				_24259_i++;
				goto _iter_begin_1b3b01652;
			}
			_iter_end_1b3b01652:;
		};
	};
	jule::Ptr<_1ac604d93_SymbolTable> _24357_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ac57ac3c_setCurrentFile(_self_, _24357_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_241136_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1ac604d93_SymbolTable> _24398_file = _1ac576dc0_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_241136_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_24398_file != nullptr)) {
			_1ac57ac3c_setCurrentFile(_self_, _24398_file);
		};
	};
	if (((*((*(_241136_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ac52d393_constraintChecker> _24468_cc = _1ac5818d0_constraintChecker(_self_);;
		(*(_24468_cc))._field_et=_241155_errorToken;
		(*_24468_cc.alloc)._field_si=(*(_241136_s));
		(*_24468_cc.alloc)._field_genericsA=_24127_tc._field_useGenerics;
		(*_24468_cc.alloc)._field_uniq=true;
		if ((!(_1ac52e30b_check(_24468_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_241136_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _24598_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_24127_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_241136_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3b0a12d:;
			if (it != expr_end) {
				jule::Ptr<_1ac5a2527_Var> _246116_v = *it;
				{
					_1ac594e98_checkVarDecl(_self_, &(_246116_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));
					_1ac598aa1_checkVar(_self_, &(_246116_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _24598_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1b3b0a12d:;
				++it;
				goto _iter_begin_1b3b0a12d;
			}
			_iter_end_1b3b0a12d:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_24127_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1ac60c285_eval> _24727_eval = _1ac583aad_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));;
	(*((*(_241136_s))))._field_Comparable=(!((*(*((*(_241136_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_241136_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b0dae3:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c9938_FieldIns> _247415_f = *it;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _24758_kind = _1ac6582c0_checkDecl(&_24127_tc, &((*((*((*(_247415_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_24758_kind != nullptr) && __jule_func_result);
				if ((_24758_kind == nullptr)) {
					if (((_self_ != (*(*((*(_241136_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_241136_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_241136_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1b3b0dae3;
				};
				(*_247415_f.alloc)._field_Kind=_24758_kind;
				(*((*(_241136_s))))._field_Mutable=((*((*(_241136_s))))._field_Mutable || ((!((*(*(_247415_f))._field_Decl.alloc)._field_Mutable)) && _1ac63ebbe_Mutable((*(_247415_f))._field_Kind)));
				(*((*(_241136_s))))._field_Comparable=((*((*(_241136_s))))._field_Comparable && _1ac63e938_Comparable((*(_247415_f))._field_Kind));
				if (((*(*(_247415_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1b3b0dae3;
				};
				(*(_24727_eval))._field_prefix=(*_247415_f.alloc)._field_Kind;
				(*_24727_eval.alloc)._field_field=_247415_f;
				(*_247415_f.alloc)._field_Default=_1ac62b0ea_evalExpr(_24727_eval, (*(*(_247415_f))._field_Decl.alloc)._field_Default);
				if (((*_247415_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1b3b0dae3;
				};
				;
				_1ac5841c9_checkAssignType(_self_, false, &((*_247415_f.alloc)._field_Kind), &((*_247415_f.alloc)._field_Default), (*((*(*(_247415_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_241136_s))))._field_Refers);
			}
			_iter_next_1b3b0dae3:;
			++it;
			goto _iter_begin_1b3b0dae3;
		}
		_iter_end_1b3b0dae3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac59a6a7_precheckStructIns(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _250839_s, jule::Ptr<_1ac4912c3_Token> _250858_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1ac59a2ab_checkStructEnv(_self_, _250839_s, _250858_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_250839_s))))._field_Comparable && ((*((*(_250839_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1ac4dbd46_Fn> _25198_decl = _1ac15ae05_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_250839_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3b19989:;
			if (it != expr_end) {
				jule::Ptr<_1ac4c9938_FieldIns> _252016_field = *it;
				{
					jule::Ptr<_1ac64cc21_Arr> _25219_arr = _1ac64175e_Arr((*(_252016_field))._field_Kind.ptr());;
					if ((_25219_arr == nullptr)) {
						goto _iter_next_1b3b19989;
					};
					jule::Ptr<_1ac4dee04_FnIns> _25259_f = _1ac4dd353_instanceForce(_25198_decl);;
					(*(_25259_f))._field_Generics=jule::append((*_25259_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac63b902_InsGeneric>(_1ac63b902_InsGeneric{._field_Kind=(*(_25219_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac599596_checkGenericFn(_self_, &(_25259_f), &((*((*_252016_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/sema.jule:2529:6"));;
					};
					_1ac4e3da3_Push((*((*(_250839_s))))._field_Refers.ptr(), jule::Any(_25259_f, &__jule_any_type7));
				}
				_iter_next_1b3b19989:;
				++it;
				goto _iter_begin_1b3b19989;
			}
			_iter_end_1b3b19989:;
		};
	};
	{
		auto expr = &((*((*(_250839_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b1da15:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _253515_f = *it;
			{
				if (((*(_253515_f))._field_Generics.len() == 0LL)) {
					if ((_1ac59919a_readyToCheckFn(_self_, _250839_s, &(_253515_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1b3b1da15:;
			++it;
			goto _iter_begin_1b3b1da15;
		}
		_iter_end_1b3b1da15:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac59a960_checkStructIns(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _254536_s) {
	{
		auto expr = &((*((*(_254536_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b204d9:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _254615_f = *it;
			{
				_1ac599909_checkTypeMethod(_self_, _254536_s, &(_254615_f));
			}
			_iter_next_1b3b204d9:;
			++it;
			goto _iter_begin_1b3b204d9;
		}
		_iter_end_1b3b204d9:;
	};
}



inline void _1ac59ac18_checkTypeStruct(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _255137_s) {
	if ((*((*(_255137_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_255137_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_255137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b21ee1:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ca4d8_StructIns> _256415_ins = *it;
			{
				_1ac59a960_checkStructIns(_self_, &(_256415_ins));
			}
			_iter_next_1b3b21ee1:;
			++it;
			goto _iter_begin_1b3b21ee1;
		}
		_iter_end_1b3b21ee1:;
	};
}



inline void _1ac59ae16_checkStructTypes(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b22e8c:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _257015_s = *it;
			{
				_1ac59ac18_checkTypeStruct(_self_, &(_257015_s));
			}
			_iter_next_1b3b22e8c:;
			++it;
			goto _iter_begin_1b3b22e8c;
		}
		_iter_end_1b3b22e8c:;
	};
}



inline void _1ac59b1be_checkStructInsOperators(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4ca4d8_StructIns> _257544_s) {
	{
		auto expr = &((*(_257544_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b23e27:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _257615_m = *it;
			{
				{
					auto &_match_expr{ (*(_257615_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1b3b245a9:;
						{
							(*(_257544_s))._field_Operators._field_Eq=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a4529_Eq);
							(*_257544_s.alloc)._field_Comparable=((*_257544_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1b3b24ba3:;
						{
							(*(_257544_s))._field_Operators._field_Gt=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a47e3_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1b3b24c19:;
						{
							(*(_257544_s))._field_Operators._field_GtEq=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a4aac_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1b3b24c80:;
						{
							(*(_257544_s))._field_Operators._field_Lt=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a4d76_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1b3b24ce6:;
						{
							(*(_257544_s))._field_Operators._field_LtEq=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a5140_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1b3b24d6d:;
						{
							(*(_257544_s))._field_Operators._field_Shl=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a577d_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1b3b24de5:;
						{
							(*(_257544_s))._field_Operators._field_Shr=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a5a47_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1b3b24e6c:;
						{
							(*(_257544_s))._field_Operators._field_Add=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a5d11_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1b3b24ee4:;
						{
							(*(_257544_s))._field_Operators._field_Sub=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a60ca_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1b3b2506b:;
						{
							(*(_257544_s))._field_Operators._field_Div=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a6394_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1b3b250e3:;
						{
							(*(_257544_s))._field_Operators._field_Mul=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a665d_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1b3b2516a:;
						{
							(*(_257544_s))._field_Operators._field_Mod=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a6927_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1b3b251e2:;
						{
							(*(_257544_s))._field_Operators._field_BitAnd=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a6be1_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1b3b25269:;
						{
							(*(_257544_s))._field_Operators._field_BitOr=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a6eaa_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1b3b252e1:;
						{
							(*(_257544_s))._field_Operators._field_BitXor=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a7274_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1b3b25368:;
						{
							(*(_257544_s))._field_Operators._field_Neg=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a78b2_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1b3b253e0:;
						{
							(*(_257544_s))._field_Operators._field_Pos=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a7b7b_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1b3b25467:;
						{
							(*(_257544_s))._field_Operators._field_BitNot=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a7e45_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1b3b254de:;
						{
							(*(_257544_s))._field_Operators._field_AddAssign=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a8583_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1b3b25566:;
						{
							(*(_257544_s))._field_Operators._field_SubAssign=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a884c_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1b3b255dd:;
						{
							(*(_257544_s))._field_Operators._field_DivAssign=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a8b16_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1b3b25665:;
						{
							(*(_257544_s))._field_Operators._field_MulAssign=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a8dd0_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1b3b256dc:;
						{
							(*(_257544_s))._field_Operators._field_ModAssign=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a9199_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1b3b25764:;
						{
							(*(_257544_s))._field_Operators._field_ShlAssign=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a9463_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1b3b257db:;
						{
							(*(_257544_s))._field_Operators._field_ShrAssign=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a972c_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1b3b25863:;
						{
							(*(_257544_s))._field_Operators._field_BitOrAssign=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a99e6_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1b3b258da:;
						{
							(*(_257544_s))._field_Operators._field_BitAndAssign=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5a9cb0_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1b3b25962:;
						{
							(*(_257544_s))._field_Operators._field_BitXorAssign=_1ac599db0_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1ac5aa079_BitXorAssign);
						}
					}
					_match_end_1b3b24884:;
				};
			}
			_iter_next_1b3b23e27:;
			++it;
			goto _iter_begin_1b3b23e27;
		}
		_iter_end_1b3b23e27:;
	};
}



inline void _1ac59b477_precheckStructType(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4c767d_Struct>* _263940_s) {
	if ((*((*(_263940_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_263940_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_263940_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ac4ca4d8_StructIns> _26508_ins = _1ac4c7b23_instance((*(_263940_s)));;
		(*(_26508_ins))._field_Checked=true;
		_1ac4c7e31_appendInstance((*(_263940_s)).ptr(), &(_26508_ins));
		_1ac59a6a7_precheckStructIns(_self_, &(_26508_ins), nullptr);
	};
	_1ac59b1be_checkStructInsOperators(_self_, (*((*(_263940_s))))._field_Instances[0LL]);
}



inline void _1ac59b675_precheckStructTypes(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b3ba99:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _266015_s = *it;
			{
				_1ac59b477_precheckStructType(_self_, &(_266015_s));
			}
			_iter_next_1b3b3ba99:;
			++it;
			goto _iter_begin_1b3b3ba99;
		}
		_iter_end_1b3b3ba99:;
	};
}



inline void _1ac59b92d_checkRets(_1ac578256_sema* _self_, jule::Ptr<_1ac4dee04_FnIns>* _266530_f) {
	if (_1ac4dc2ec_IsVoid((*((*(_266530_f))))._field_Decl.ptr())) {
		return;;
	};
	_1ac59dd70_missingRetChecker _26693_mrc = static__1ac59e26b_new();;
	jule::Bool _26703_ok = _1ac5a0448_check(&_26693_mrc, (*((*(_266530_f))))._field_Scope);;
	if ((!(_26703_ok))) {
		_1ac57b15a_pushErr(_self_, (*(*((*(_266530_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1ac59bc91_checkFnInsSc(_1ac578256_sema* _self_, jule::Ptr<_1ac4dee04_FnIns>* _267633_f, jule::Ptr<_1ac53c25e_scopeChecker>* _267649_sc) {
	_1ac576474_appendRetVars(&((*((*((*(_267649_sc))))._field_table))._field_Vars), _267633_f);
	_1ac576760_appendParamVars(&((*(*((*(_267649_sc))))._field_table.alloc)._field_Vars), _267633_f);
	_1ac576a4b_appendGenericTypeAliases(&((*(*((*(_267649_sc))))._field_table.alloc)._field_TypeAliases), _267633_f);
	_1ac54e3d6_check((*(_267649_sc)), &((*((*((*(_267633_f))))._field_Decl))._field_Scope), &((*((*(_267633_f))))._field_Scope));
	if ((!(_1ac53ed66_stopped((*(_267649_sc)).ptr())))) {
		_1ac59b92d_checkRets(_self_, _267633_f);
	};
}



inline void _1ac59c104_checkFnInsCaller(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _268938_f, jule::Ptr<_1ac4912c3_Token> _268953_caller) {
	if ((*((*((*(_268938_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1ac604d93_SymbolTable> _26947_old = (*((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1ac57ac3c_setCurrentFile((*((*((*(_268938_f))))._field_Decl))._field_sema, _26947_old);
	});;
	jule::Ptr<_1ac604d93_SymbolTable> _26967_file = _1ac576dc0_findFile(&((*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_268938_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_26967_file != nullptr)) {
		_1ac57ac3c_setCurrentFile((*((*((*(_268938_f))))._field_Decl))._field_sema, _26967_file);
	};
	jule::Ptr<_1ac53c25e_scopeChecker> _27017_sc = _1ac532ce3_newScopeChecker(&((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema), (*(_268938_f)));;
	(*(_27017_sc))._field_calledFrom=_268953_caller;
	_1ac59bc91_checkFnInsSc(_self_.ptr(), _268938_f, &(_27017_sc));
	if (((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1ac59c3ac_checkFnIns(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dee04_FnIns>* _271132_f) {
	_1ac59c104_checkFnInsCaller(_self_, _271132_f, nullptr);
}



inline void _1ac59c665_checkFunc(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _271531_f) {
	if ((*((*(_271531_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_271531_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_271531_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b4a1d4:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dee04_FnIns> _272515_ins = *it;
			{
				_1ac59c3ac_checkFnIns(_self_, &(_272515_ins));
			}
			_iter_next_1b3b4a1d4:;
			++it;
			goto _iter_begin_1b3b4a1d4;
		}
		_iter_end_1b3b4a1d4:;
	};
}



inline void _1ac59c91d_checkTestFn(_1ac578256_sema* _self_, jule::Ptr<_1ac4dee04_FnIns>* _273032_f) {
	if ((*((*((*(_273032_f))))._field_Decl))._field_Public) {
		_1ac57b15a_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_273032_f))))._field_Decl.alloc)._field_Unsafety || (!(_1ac4dc2ec_IsVoid((*((*(_273032_f))))._field_Decl)))) || ((*(*((*(_273032_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_273032_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_273032_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_273032_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1ac57b15a_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac649e2c_Sptr> _27487_sptr = _1ac640c25_Sptr((*((*((*(_273032_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_27487_sptr == nullptr)) {
		_1ac57b15a_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _27553_s = _1ac642012_Struct((*(_27487_sptr))._field_Elem.ptr());;
	if (((_27553_s == nullptr) || (!(_1ac55d1d6_isStdPackage(&((*((*((*((*(_27553_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1ac57b15a_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ac57b4bd_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ac59cbc6_precheckFunc(jule::Ptr<_1ac578256_sema> _self_, jule::Ptr<_1ac4dbd46_Fn>* _276334_f) {
	if ((*((*(_276334_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_276334_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_276334_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ac4dee04_FnIns> _27748_ins = _1ac4dd353_instanceForce((*(_276334_f)));;
		{ jule::Slice<jule::Ptr<_1ac4dee04_FnIns>> &__jule_push_dest = (*((*(_276334_f))))._field_Instances; __jule_push_dest.push(_27748_ins); };
		jule::Bool _27764_ok = _1ac587a4b_reloadFnInsTypes(_self_, _27748_ins);;
		(*(_27748_ins))._field_reloaded=true;
		if ((_27764_ok && _1ac659854_hasDirective(&((*((*(_276334_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1ac59c91d_checkTestFn(_self_, &(_27748_ins));
		};
	};
}



inline void _1ac59cdc4_precheckFuncs(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b58e29:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> _278715_decl = *it;
			{
				{
					auto expr = &((*(_278715_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3b59886:;
					if (it != expr_end) {
						jule::Ptr<_1ac4dbd46_Fn> _278816_m = *it;
						{
							_1ac59cbc6_precheckFunc(_self_, &(_278816_m));
						}
						_iter_next_1b3b59886:;
						++it;
						goto _iter_begin_1b3b59886;
					}
					_iter_end_1b3b59886:;
				};
			}
			_iter_next_1b3b58e29:;
			++it;
			goto _iter_begin_1b3b58e29;
		}
		_iter_end_1b3b58e29:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b59c2c:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _279215_decl = *it;
			{
				_1ac59cbc6_precheckFunc(_self_, &(_279215_decl));
			}
			_iter_next_1b3b59c2c:;
			++it;
			goto _iter_begin_1b3b59c2c;
		}
		_iter_end_1b3b59c2c:;
	};
}



inline void _1ac59d0c2_checkFuncs(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b5b16d:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _279915_decl = *it;
			{
				_1ac59c665_checkFunc(_self_, &(_279915_decl));
			}
			_iter_next_1b3b5b16d:;
			++it;
			goto _iter_begin_1b3b5b16d;
		}
		_iter_end_1b3b5b16d:;
	};
}



inline void _1ac59d2c0_checkPackageTypes(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b5be60:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _280715_f = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_.ptr(), _280715_f);
				_1ac598c9e_checkGlobals(_self_);
				_1ac59cdc4_precheckFuncs(_self_);
				_1ac59b675_precheckStructTypes(_self_);
			}
			_iter_next_1b3b5be60:;
			++it;
			goto _iter_begin_1b3b5be60;
		}
		_iter_end_1b3b5be60:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b5d9de:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _281815_f = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_, _281815_f);
				_1ac59d0c2_checkFuncs(_self_);
				_1ac59ae16_checkStructTypes(_self_);
			}
			_iter_next_1b3b5d9de:;
			++it;
			goto _iter_begin_1b3b5d9de;
		}
		_iter_end_1b3b5d9de:;
	};
}



inline void _1ac59d4bd_setFileSemaFields(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b600b7:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _282615_f = *it;
			{
				(*(_282615_f))._field_sema=_self_;
			}
			_iter_next_1b3b600b7:;
			++it;
			goto _iter_begin_1b3b600b7;
		}
		_iter_end_1b3b600b7:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b60c33:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _282915_st = *it;
			{
				(*(_282915_st))._field_sema=_self_;
			}
			_iter_next_1b3b60c33:;
			++it;
			goto _iter_begin_1b3b60c33;
		}
		_iter_end_1b3b60c33:;
	};
}



inline void _1ac59d6bb_setSemaFields(jule::Ptr<_1ac578256_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b61904:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _283515_file = *it;
			{
				_1ac57ac3c_setCurrentFile(_self_.ptr(), _283515_file);
				_1ac59d4bd_setFileSemaFields(_self_);
			}
			_iter_next_1b3b61904:;
			++it;
			goto _iter_begin_1b3b61904;
		}
		_iter_end_1b3b61904:;
	};
}



inline void _1ac59d974_check(jule::Ptr<_1ac578256_sema> _self_, jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _284127_files) {
	(*(_self_))._field_files=(*(_284127_files));
	_1ac59d6bb_setSemaFields(_self_);
	_1ac57eacb_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac5805c1_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac57eec7_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac5801c5_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac597cae_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ac59d2c0_checkPackageTypes(_self_);
}







inline _1ac59dd70_missingRetChecker static__1ac59e26b_new(void) {
	return _1ac59dd70_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1ac59e579_checkConditional(_1ac59dd70_missingRetChecker* _self_, jule::Ptr<_1ac535b09_Conditional> _288932_c) {
	{
		auto expr = &((*(_288932_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b670ad:;
		if (it != expr_end) {
			jule::Ptr<_1ac5353de_If> _289015_elif = *it;
			{
				if ((_289015_elif == nullptr)) {
					return false;;
				};
				if ((!(_1ac5a0107_checkScope(_self_, (*(_289015_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1b3b670ad:;
			++it;
			goto _iter_begin_1b3b670ad;
		}
		_iter_end_1b3b670ad:;
	};
	return (((*_288932_c.alloc)._field_Default != nullptr) && _1ac5a0107_checkScope(_self_, (*(*(_288932_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1ac59e8ba_checkMatch(_1ac59dd70_missingRetChecker* _self_, jule::Ptr<_1ac539701_Match> _290126_m) {
	{
		auto expr = &((*(_290126_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b6917b:;
		if (it != expr_end) {
			jule::Ptr<_1ac53a229_Case> _290215_c = *it;
			{
				if ((_290215_c == nullptr)) {
					return false;;
				};
				jule::I64 _29064_n = (*(_self_))._field_breaked.len();;
				jule::Bool _29074_ok = _1ac5a0107_checkScope(_self_, (*(_290215_c))._field_Scope);;
				{
					
					if ((_29064_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1b3b6ab50:;
						{
							return false;;
						}
					}
					else if ((!(_29074_ok))) {
						_case_begin_1b3b6abd8:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1b3b6ac4e;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1b3b6ac4e:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_290215_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1b3b6917b;
						}
					}
					_match_end_1b3b6aad9:;
				};
			}
			_iter_next_1b3b6917b:;
			++it;
			goto _iter_begin_1b3b6917b;
		}
		_iter_end_1b3b6917b:;
	};
	return (((*_290126_m.alloc)._field_Default != nullptr) && _1ac5a0107_checkScope(_self_, (*(*(_290126_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1ac59ecb6_checkInfIter(_1ac59dd70_missingRetChecker* _self_, jule::Uintptr _292724_it, jule::Ptr<_1ac534ec1_Scope>* _292742_s) {
	jule::I64 _29283_n = (*(_self_))._field_breaked.len();;
	if (_1ac5a0107_checkScope(_self_, (*(_292742_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
		return true;;
	};
	if ((_29283_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_29283_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b3b6e58d:;
			if (it != expr_end) {
				jule::Uintptr _293411_addr = *it;
				{
					if ((_292724_it == _293411_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
						return false;;
					};
				}
				_iter_next_1b3b6e58d:;
				++it;
				goto _iter_begin_1b3b6e58d;
			}
			_iter_end_1b3b6e58d:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
	};
	return true;;
}



inline jule::Bool _1ac5a0107_checkScope(_1ac59dd70_missingRetChecker* _self_, jule::Ptr<_1ac534ec1_Scope> _294526_s) {
	if ((_294526_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_294526_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b70bbb:;
		if (it != expr_end) {
			jule::Any _294915_st = *it;
			{
				{
					auto &_match_expr{ _294915_st };
					
					if (_match_expr.type == &__jule_any_type55) {
						_case_begin_1b3b7188c:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type56) {
						_case_begin_1b3b7166c:;
						{
							jule::Uintptr _29555_addr = (*(_294915_st.unsafe_cast_ptr<_1ac537567_BreakSt>()))._field_It;;
							if ((_29555_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_29555_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1b3b71925:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1b3b7199c:;
						{
							jule::Ptr<_1ac535e06_InfIter> _29639_ii = _294915_st.unsafe_cast_ptr<_1ac535e06_InfIter>();;
							if (_1ac59ecb6_checkInfIter(_self_, static_cast<jule::Uintptr>(_29639_ii), &((*(_29639_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type44) {
						_case_begin_1b3b71a24:;
						{
							jule::Ptr<_1ac5363ac_WhileIter> _29689_wn = _294915_st.unsafe_cast_ptr<_1ac5363ac_WhileIter>();;
							if ((_1ac536753_IsWhileNext(_29689_wn.ptr()) && ((*_29689_wn.alloc)._field_Expr == nullptr))) {
								if (_1ac59ecb6_checkInfIter(_self_, static_cast<jule::Uintptr>(_29689_wn), &((*_29689_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type57) {
						_case_begin_1b3b71a9b:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1b3b71b23:;
						{
							if (_1ac5a0107_checkScope(_self_, _294915_st.cast_ptr<_1ac534ec1_Scope>(&__jule_any_type29))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1b3b71b9a:;
						{
							{
								auto &_match_expr{ (*(_294915_st.cast_ptr<_1ac60a55d_Data>(&__jule_any_type31)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type30) {
									_case_begin_1b3b77c17:;
									{
										return true;;
									}
								}
								_match_end_1b3b77b6d:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1b3b71c22:;
						{
							if (_1ac59e579_checkConditional(_self_, _294915_st.cast_ptr<_1ac535b09_Conditional>(&__jule_any_type41))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type54) {
						_case_begin_1b3b71c99:;
						{
							if (_1ac59e8ba_checkMatch(_self_, _294915_st.cast_ptr<_1ac539701_Match>(&__jule_any_type54))) {
								return true;;
							};
						}
					}
					_match_end_1b3b716e4:;
				};
			}
			_iter_next_1b3b70bbb:;
			++it;
			goto _iter_begin_1b3b70bbb;
		}
		_iter_end_1b3b70bbb:;
	};
	return false;;
}



inline jule::Bool _1ac5a0448_check(_1ac59dd70_missingRetChecker* _self_, jule::Ptr<_1ac534ec1_Scope> _300021_s) {
	return _1ac5a0107_checkScope(_self_, _300021_s);;
}







inline jule::Bool _1ac5a2934_IsInitialized(_1ac5a2527_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1ac5a2bba_IsTypeInferred(_1ac5a2527_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1ac5a2e51_untypedConstant(_1ac5a2527_Var* _self_) {
	return (_1ac5a2bba_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1ac5a3b22_Dispose(jule::Ptr<_1ac4dbd46_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*(_1020_f))._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1ac4dc2ec_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*(_1020_f))._field_Params[0LL]))._field_Mutable) && (!(_1ac4dac57_IsRef((*(_1020_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1ac5a3ddb_Str(jule::Ptr<_1ac4dbd46_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1ac4dc2ec_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1ac4dac57_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1ac646401_Prim> _393_prim = _1ac64098e_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1ac6498bb_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1ac5a4260_logical(jule::Ptr<_1ac4dbd46_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1ac4dc2ec_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1ac4dac57_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1ac646401_Prim> _643_prim = _1ac64098e_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1ac649635_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1ac642012_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1ac5a4529_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _7215_f) {
	return static__1ac5a4260_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1ac5a47e3_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _7715_f) {
	return static__1ac5a4260_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1ac5a4aac_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _8217_f) {
	return static__1ac5a4260_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1ac5a4d76_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _8715_f) {
	return static__1ac5a4260_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1ac5a5140_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _9217_f) {
	return static__1ac5a4260_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1ac5a54b4_result(jule::Ptr<_1ac4dbd46_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1ac4dc2ec_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1ac4dac57_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1ac642012_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1ac5a577d_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _11816_f) {
	return static__1ac5a54b4_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1ac5a5a47_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _12316_f) {
	return static__1ac5a54b4_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1ac5a5d11_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _12816_f) {
	return static__1ac5a54b4_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1ac5a60ca_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _13316_f) {
	return static__1ac5a54b4_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1ac5a6394_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _13816_f) {
	return static__1ac5a54b4_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1ac5a665d_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _14316_f) {
	return static__1ac5a54b4_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1ac5a6927_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _14816_f) {
	return static__1ac5a54b4_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1ac5a6be1_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _15319_f) {
	return static__1ac5a54b4_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1ac5a6eaa_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _15818_f) {
	return static__1ac5a54b4_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1ac5a7274_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _16319_f) {
	return static__1ac5a54b4_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1ac5a75e8_unary(jule::Ptr<_1ac4dbd46_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1ac4dc2ec_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1ac4dac57_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1ac642012_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1ac5a78b2_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _18716_f) {
	return static__1ac5a75e8_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1ac5a7b7b_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _19216_f) {
	return static__1ac5a75e8_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1ac5a7e45_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _19719_f) {
	return static__1ac5a75e8_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1ac5a82b9_assign(jule::Ptr<_1ac4dbd46_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1ac4dc2ec_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1ac4dac57_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1ac5a8583_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _22122_f) {
	return static__1ac5a82b9_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1ac5a884c_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _22622_f) {
	return static__1ac5a82b9_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1ac5a8b16_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _23122_f) {
	return static__1ac5a82b9_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1ac5a8dd0_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _23622_f) {
	return static__1ac5a82b9_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1ac5a9199_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _24122_f) {
	return static__1ac5a82b9_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1ac5a9463_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _24622_f) {
	return static__1ac5a82b9_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1ac5a972c_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _25122_f) {
	return static__1ac5a82b9_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1ac5a99e6_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _25624_f) {
	return static__1ac5a82b9_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1ac5a9cb0_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _26125_f) {
	return static__1ac5a82b9_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1ac5aa079_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn> _26625_f) {
	return static__1ac5a82b9_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1ac5e1ce7_typeCompatibilityChecker_eq(_1ac5e1ce7_typeCompatibilityChecker *_self_, _1ac5e1ce7_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1ac5e2325_pushErr(_1ac5e1ce7_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args) {
	_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11923_fmt, _11936_args);
}



inline jule::Bool _1ac5e25ab_checkTrait(_1ac5e1ce7_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ac63e41b_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac5008a4_Trait> _1277_trt = _1ac642298_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1287_ref = false;;
	{
		
		if ((_1ac640c25_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b3bb953e:;
			{
				_1287_ref=true;
				(*(_self_))._field_src=(*(_1ac640c25_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1ac642012_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1b3bb95d8;
			}
		}
		else if ((_1ac642012_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b3bb95d8:;
			{
				jule::Ptr<_1ac4ca4d8_StructIns> _1384_s = _1ac642012_Struct((*(_self_))._field_src);;
				if ((!(_1ac4c8d00_IsImplements((*(_1384_s))._field_Decl.ptr(), _1277_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1287_ref)) && _1ac5e08b7_traitHasReferenceReceiver(&(_1277_trt)))) {
					_1ac5e2325_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac642298_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b3bb9660:;
			{
				jule::Ptr<_1ac5008a4_Trait> _1488_base = _1ac642298_Trait((*(_self_))._field_src);;
				if ((_1277_trt == _1488_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1b3bbe720:;
				{
					auto expr = &((*(_1488_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3bbe9a6:;
					if (it != expr_end) {
						jule::Ptr<_1ac4c767d_Struct> _15311_s1 = *it;
						{
							{
								auto expr = &((*(_1277_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b3bc03ad:;
								if (it != expr_end) {
									jule::Ptr<_1ac4c767d_Struct> _15412_s2 = *it;
									{
										if ((_15311_s1 == _15412_s2)) {
											goto _iter_next_1b3bbe9a6;
										};
									}
									_iter_next_1b3bc03ad:;
									++it;
									goto _iter_begin_1b3bc03ad;
								}
								_iter_end_1b3bc03ad:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1b3bbe9a6:;
						++it;
						goto _iter_begin_1b3bbe9a6;
					}
					_iter_end_1b3bbe9a6:;
				};
				{
					auto expr = &((*_1277_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3bc0798:;
					if (it != expr_end) {
						jule::Ptr<_1ac4dbd46_Fn> _16116_m1 = *it;
						{
							jule::Ptr<_1ac4dbd46_Fn> _1629_m2 = _1ac501586_FindMethod(_1488_base, (*(_16116_m1))._field_Ident);;
							if ((_1629_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1ac4dee04_FnIns> _1665_m1k = _1ac5861ed_getTraitCheckFnKind((*(_self_))._field_s, &(_16116_m1));;
							jule::Ptr<_1ac4dee04_FnIns> _1675_m2k = _1ac5861ed_getTraitCheckFnKind((*(_self_))._field_s, &(_1629_m2));;
							if ((!(_1ac4e0da0_equalTrait(_1665_m1k, &(_1675_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1b3bc0798:;
						++it;
						goto _iter_begin_1b3bc0798;
					}
					_iter_end_1b3bc0798:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b3bb94a6:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b3bb942e:;
	};
}



inline jule::Bool _1ac5e2842_checkPtr(_1ac5e1ce7_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ac63e41b_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac64d6e4_Ptr> _1827_dest = _1ac640eab_Ptr((*(_self_))._field_dest.ptr());;
	if (_1ac64e261_IsUnsafe(_1827_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1ac63da25_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ac5e2ac8_checkPrim(_1ac5e1ce7_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1ac646401_Prim> _1914_prim = _1ac64098e_Prim((*(_self_))._field_dest);;
		if (((_1914_prim != nullptr) && _1ac649b52_IsAny(_1914_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1ac63da25_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ac5e2ec4_typeEnum(_1ac5e1ce7_typeCompatibilityChecker* _self_, jule::Ptr<_1ac5047ba_TypeEnum>* _19925_e, jule::Ptr<_1ac63d2d8_TypeKind>* _19944_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19925_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3bc6c66:;
		if (it != expr_end) {
			jule::Ptr<_1ac5041e3_TypeEnumItem> _20015_item = *it;
			{
				if (_1ac63da25_Equal((*((*(_20015_item))._field_Kind))._field_Kind, (*(_19944_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1ac5047ba_TypeEnum> _2048_ke = _1ac6414c8_TypeEnum((*((*(_20015_item))._field_Kind))._field_Kind);;
				if ((_2048_ke == nullptr)) {
					goto _iter_next_1b3bc6c66;
				};
				if (_1ac5e2ec4_typeEnum(_self_, &(_2048_ke), _19944_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3bc6c66:;
			++it;
			goto _iter_begin_1b3bc6c66;
		}
		_iter_end_1b3bc6c66:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac5e325a_checkTypeEnum(_1ac5e1ce7_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ac63da25_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac5047ba_TypeEnum> _2197_e = _1ac6414c8_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1ac5e2ec4_typeEnum(_self_, &(_2197_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1ac5e34e1_check(_1ac5e1ce7_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1ac640eab_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1ac5e2842_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1ac6401db_NilCompatible((*(_self_))._field_dest)) {
		if (_1ac63e41b_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1ac64098e_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b3bcc574:;
			{
				__jule_func_result = _1ac5e2ac8_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ac6414c8_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b3bcc60c:;
			{
				__jule_func_result = _1ac5e325a_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ac642298_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b3bcc002:;
			{
				__jule_func_result = _1ac5e25ab_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b3bcbb39:;
			{
				__jule_func_result = _1ac63da25_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1b3bcb1aa:;
	};
}








inline jule::Bool _1ac5e3b73_assignTypeChecker_eq(_1ac5e3b73_assignTypeChecker *_self_, _1ac5e3b73_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1ac5e413a_pushErr(_1ac5e3b73_assignTypeChecker* _self_, jule::Str _25623_fmt, jule::Slice<jule::Any> _25636_args) {
	_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25623_fmt, _25636_args);
}



inline jule::Bool _1ac5e43c1_checkValidity(_1ac5e3b73_assignTypeChecker* _self_) {
	jule::Bool _2617_valid = true;;
	{
		
		if ((_1ac641c7b_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3bd0379:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _2644_f = _1ac641c7b_Fn((*((*(_self_))._field_d))._field_Kind);;
				{
					
					if (_1ac4e13bc_IsBuiltin(_2644_f.ptr())) {
						_case_begin_1b3bd1be9:;
						{
							_1ac5e413a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if ((*((*(_2644_f))._field_Decl))._field_Binded) {
						_case_begin_1b3bd1c93:;
						{
							_1ac5e413a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if (((!((*((*(_2644_f))._field_Decl))._field_Statically)) && _1ac4dc583_IsMethod((*(_2644_f))._field_Decl))) {
						_case_begin_1b3bd1d09:;
						{
							_1ac5e413a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if ((((*((*(_2644_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2644_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1b3bd1d70:;
						{
							_1ac5e413a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1ac57b4bd_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					_match_end_1b3bd1b0b:;
				};
			}
		}
		else if ((_1ac6427b5_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3bd0423:;
			{
				_1ac5e413a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2617_valid=false;
			}
		}
		_match_end_1b3bd02e1:;
	};
	return _2617_valid;;
}



inline jule::Bool _1ac5e4657_checkConst(_1ac5e3b73_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1ac64098e_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2933_kind = (*(_1ac64098e_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1aa128a95_IsFloat(_2933_kind)) {
			_case_begin_1b3bd85b3:;
			{
				if ((!(_1ac5e0c4c_floatAssignable(&(_2933_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2933_kind;
			}
		}
		else if (_1aa128754_IsInt(_2933_kind)) {
			_case_begin_1b3bd864b:;
			{
				if ((!(_1ac5e180d_intAssignable(_2933_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2933_kind;
			}
		}
		else {
			_case_begin_1b3bd854c:;
			{
				return false;;
			}
		}
		_match_end_1b3bd841a:;
	};
	return true;;
}



inline jule::Bool _1ac5e48dd_checkCompatibility(_1ac5e3b73_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b3bda8d4:;
			{
				return false;;
			}
		}
		else if ((!(_1ac5e43c1_checkValidity(_self_)))) {
			_case_begin_1b3bda95b:;
			{
				return false;;
			}
		}
		else if (_1ac5e4657_checkConst(_self_)) {
			_case_begin_1b3bda9c2:;
			{
				return true;;
			}
		}
		else if ((_1ac641242_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3bdaa38:;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _3228_dkind = (*(_self_))._field_dest;;
				if ((_1ac641242_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3228_dkind=(*((*(_1ac641242_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1ac646401_Prim> _3264_prim = _1ac64098e_Prim((*(_self_))._field_dest);;
				if (((_3264_prim == nullptr) || _1ac649b52_IsAny(_3264_prim.ptr()))) {
					goto _match_end_1b3bd9bd0;
				};
				jule::Ptr<_1ac63d2d8_TypeKind> _3318_dest = (*(*(_1ac641242_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind.alloc)._field_Kind;;
				return _1ac584b36_checkTypeCompatibility((*(_self_))._field_s, &(_3318_dest), &(_3228_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1b3bd9bd0:;
	};
	return _1ac58550a_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1ac5e4b74_check(_1ac5e3b73_assignTypeChecker* _self_) {
	jule::Bool _3383_ok = _1ac5e48dd_checkCompatibility(_self_);;
	if ((_3383_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1ac65b3a0_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3383_ok;;
}







inline jule::Bool _1b3c0a0eb_annotateConstraintElem(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b3c0b7c3:;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1b3c0ee25:;
						{
							_36112_elem=(*(_1ac64175e_Arr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b3c0edae:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ac4a8a49_ArrTypeDecl>()))._field_Elem;
				return _1ac5e6c86_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1b3c0b74b:;
	};
	return false;;
}

inline jule::Bool _1b3c09859_annotateConstraintElem(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b3c12be7:;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1b3c160b3:;
						{
							_36112_elem=(*(_1ac6419e5_Slc((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b3c162d3:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ac4a7bad_SlcTypeDecl>()))._field_Elem;
				return _1ac5e6c86_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1b3c12b70:;
	};
	return false;;
}

inline jule::Bool _1b3c121e1_annotateConstraintElem(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b3c1924d:;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1b3c1c927:;
						{
							_36112_elem=(*(_1ac640eab_Ptr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b3c1c839:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ac4a82a7_PtrTypeDecl>()))._field_Elem;
				return _1ac5e6c86_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1b3c191c6:;
	};
	return false;;
}

inline jule::Bool _1b3c17d62_annotateConstraintElem(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b3c20353:;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1b3c2293d:;
						{
							_36112_elem=(*(_1ac640c25_Sptr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b3c2393e:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ac4a7828_SptrTypeDecl>()))._field_Elem;
				return _1ac5e6c86_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1b3c202cb:;
	};
	return false;;
}



inline jule::Bool _1ac5e5e72_annotateConstraintMap(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _37842_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b3be3029:;
			{
				jule::Ptr<_1ac64c094_Map> _3818_m = _1ac64252e_Map((*(_37842_k)).ptr());;
				jule::Ptr<_1ac4a9297_MapTypeDecl> _3828_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ac4a9297_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3828_m2))._field_Key;
				if ((!(_1ac5e6c86_annotateConstraint(_self_, &((*(_3818_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3828_m2.alloc)._field_Val;
				__jule_func_result = _1ac5e6c86_annotateConstraint(_self_, &((*_3818_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1b3be2ea2:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac5e62b3_annotateConstraintTup(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _39342_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b3be888c:;
			{
				jule::Ptr<_1ac4a7eaa_TupleTypeDecl> _3968_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ac4a7eaa_TupleTypeDecl>();;
				jule::Ptr<_1ac64b4e4_Tuple> _3978_tup2 = _1ac6427b5_Tup((*(_39342_k)).ptr());;
				{
					auto expr = &((*(_3978_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3bec61b:;
					if (it != expr_end) {
						jule::Ptr<_1ac63d2d8_TypeKind> _39816_t2 = *it;
						{
							{
								auto expr = &((*(_3968_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b3bed089:;
								if (it != expr_end) {
									jule::Ptr<_1ac4a677d_TypeDecl> _39917_t = *it;
									{
										(*(_self_))._field_c=_39917_t;
										if (_1ac5e6c86_annotateConstraint(_self_, &(_39816_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1b3bed089:;
									++it;
									goto _iter_begin_1b3bed089;
								}
								_iter_end_1b3bed089:;
							};
						}
						_iter_next_1b3bec61b:;
						++it;
						goto _iter_begin_1b3bec61b;
					}
					_iter_end_1b3bec61b:;
				};
			}
		}
		_match_end_1b3be8815:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac5e6604_annotateConstraintFn(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _41041_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b3bed5b7:;
			{
				jule::Ptr<_1ac4b843d_FnDecl> _4138_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ac4b843d_FnDecl>();;
				jule::Ptr<_1ac4dee04_FnIns> _4148_f = _1ac641c7b_Fn((*(_41041_k)).ptr());;
				{
					auto expr = &((*(_4148_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3c00597:;
					if (it != expr_end) {
						jule::I64 _4159_i = it - expr->begin();
						jule::Ptr<_1ac4ddc9e_ParamIns> _41516_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4138_pf))._field_Params[_4159_i]))._field_Kind;
							if (_1ac5e6c86_annotateConstraint(_self_, &((*(_41516_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1b3c00597:;
						++it;
						_4159_i++;
						goto _iter_begin_1b3c00597;
					}
					_iter_end_1b3c00597:;
				};
				if (((*_4138_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4138_pf))._field_Result.alloc)._field_Kind;
					if (_1ac5e6c86_annotateConstraint(_self_, &((*_4148_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1b3bed540:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac5e6945_annotateConstraintIdent(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _43144_k) {
	jule::Ptr<_1ac4a6d88_IdentTypeDecl> _4327_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ac4a6d88_IdentTypeDecl>(&__jule_any_type77);;
	jule::Ptr<_1ac4ca4d8_StructIns> _4337_s = _1ac642012_Struct((*(_43144_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c0405c:;
		if (it != expr_end) {
			jule::I64 _4347_i = it - expr->begin();
			jule::Ptr<_1ac4b3988_GenericDecl> _43410_g = *it;
			{
				if (((*(_43410_g))._field_Ident == (*(_4327_ident))._field_Ident)) {
					jule::Ptr<_1ac63b902_InsGeneric> _4369_fg = (*((*(_self_))._field_f))._field_Generics[_4347_i];;
					if ((_4369_fg != nullptr)) {
						return false;;
					};
					_1ac5e70e9_pushGeneric(_self_, _43144_k, _4347_i);
					return true;;
				};
				if ((_4337_s == nullptr)) {
					goto _iter_next_1b3c0405c;
				};
				jule::Ptr<_1ac4a677d_TypeDecl> _4468_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4327_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3c06aed:;
					if (it != expr_end) {
						jule::Ptr<_1ac4a677d_TypeDecl> _44716_ig = *it;
						{
							(*(_self_))._field_c=_44716_ig;
							{
								auto expr = &((*(_4337_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b3c07714:;
								if (it != expr_end) {
									jule::Ptr<_1ac63b902_InsGeneric> _44917_sg = *it;
									{
										if (_1ac5e6c86_annotateConstraint(_self_, &((*(_44917_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1b3c07714:;
									++it;
									goto _iter_begin_1b3c07714;
								}
								_iter_end_1b3c07714:;
							};
						}
						_iter_next_1b3c06aed:;
						++it;
						goto _iter_begin_1b3c06aed;
					}
					_iter_end_1b3c06aed:;
				};
				(*(_self_))._field_c=_4468_c;
			}
			_iter_next_1b3c0405c:;
			++it;
			_4347_i++;
			goto _iter_begin_1b3c0405c;
		}
		_iter_end_1b3c0405c:;
	};
	return false;;
}



inline jule::Bool _1ac5e6c86_annotateConstraint(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _46039_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b3c07b65:;
			{
				return _1ac5e6945_annotateConstraintIdent(_self_, _46039_k);;
			}
		}
		_match_end_1b3c07aee:;
	};
	{
		
		if ((_1ac64175e_Arr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1b3c08a34:;
			{
				return _1b3c0a0eb_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1ac6419e5_Slc((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1b3c08a9a:;
			{
				return _1b3c09859_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1ac640eab_Ptr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1b3c08b11:;
			{
				return _1b3c121e1_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1ac640c25_Sptr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1b3c08b77:;
			{
				return _1b3c17d62_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1ac64252e_Map((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1b3c08bee:;
			{
				return _1ac5e5e72_annotateConstraintMap(_self_, _46039_k);;
			}
		}
		else if ((_1ac641c7b_Fn((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1b3c09150:;
			{
				return _1ac5e6604_annotateConstraintFn(_self_, _46039_k);;
			}
		}
		else if ((_1ac6427b5_Tup((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1b3c091c7:;
			{
				return _1ac5e62b3_annotateConstraintTup(_self_, _46039_k);;
			}
		}
		else {
			_case_begin_1b3c08935:;
			{
				return false;;
			}
		}
		_match_end_1b3c088be:;
	};
}



inline void _1ac5e70e9_pushGeneric(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _48532_k, jule::I64 _48546_i) {
	(*((*(_self_))._field_f))._field_Generics[_48546_i]=jule::new_ptr<_1ac63b902_InsGeneric>(_1ac63b902_InsGeneric{._field_Kind=(*(_48532_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr)});
	jule::Ptr<_1ac4b3988_GenericDecl> _4877_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48546_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c25bb6:;
		if (it != expr_end) {
			jule::Ptr<_1ac63d2d8_TypeKind> _48815_ignored = *it;
			{
				if (((*(_4877_gd))._field_Ident == _1ac63d6d4_Str(_48815_ignored.ptr()))) {
					(*_48815_ignored.alloc)._field_Kind=(*((*(_48532_k))))._field_Kind;
				};
			}
			_iter_next_1b3c25bb6:;
			++it;
			goto _iter_begin_1b3c25bb6;
		}
		_iter_end_1b3c25bb6:;
	};
	if ((((*_4877_gd.alloc)._field_Constraint == nullptr) || ((*((*_4877_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4877_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1ac5e6c86_annotateConstraint(_self_, _48532_k);
}



inline jule::Bool _1ac5e743a_annotatePrim(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _50040_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ac5e945e_annotateAny(_self_, _50040_k);
	return __jule_func_result;;
}



inline jule::Bool _1ac5e777b_annotateArr(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _50439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac64cc21_Arr> _5057_parr = _1ac64175e_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5057_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac64cc21_Arr> _5097_arr = _1ac64175e_Arr((*(_50439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5057_parr))._field_Elem));
	__jule_func_result = _1ac5e97a0_annotateKind(_self_, &((*(_5097_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ac5e7abc_annotateSlc(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _51439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac64a900_Slc> _5157_pslc = _1ac6419e5_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5157_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac64a900_Slc> _5197_slc = _1ac6419e5_Slc((*(_51439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5157_pslc))._field_Elem));
	__jule_func_result = _1ac5e97a0_annotateKind(_self_, &((*(_5197_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ac5e7eb8_checkMapKey(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _52438_k, jule::Ptr<_1ac63d2d8_TypeKind>* _52458_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac63d2d8_TypeKind>* _5257_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52438_k;
	__jule_func_result=_1ac5e97a0_annotateKind(_self_, _52458_ck);
	(*(_self_))._field_k=_5257_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ac5e8309_annotateMap(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _53239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac64c094_Map> _5337_pmap = _1ac64252e_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5337_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac64c094_Map> _5377_m = _1ac64252e_Map((*(_53239_k)).ptr());;
	__jule_func_result = (_1ac5e7eb8_checkMapKey(_self_, (&((*(_5337_pmap))._field_Key)), &((*(_5377_m))._field_Key)) && _1ac5e7eb8_checkMapKey(_self_, (&((*(_5337_pmap))._field_Val)), &((*_5377_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1ac5e864a_annotateFn(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _54238_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac4dee04_FnIns> _5437_pf = _1ac641c7b_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5437_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _5477_f = _1ac641c7b_Fn((*(_54238_k)).ptr());;
	{
		
		if (((*(_5437_pf))._field_Params.len() != (*(_5477_f))._field_Params.len())) {
			_case_begin_1b3c34576:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1ac4dc2ec_IsVoid((*(_5437_pf))._field_Decl.ptr()) != _1ac4dc2ec_IsVoid((*(_5477_f))._field_Decl))) {
			_case_begin_1b3c3460e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b3c344cc:;
	};
	__jule_func_result=true;
	jule::Ptr<_1ac63d2d8_TypeKind>* _5567_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5477_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c3649b:;
		if (it != expr_end) {
			jule::I64 _5578_i = it - expr->begin();
			jule::Ptr<_1ac4ddc9e_ParamIns> _55715_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5437_pf))._field_Params[_5578_i]))._field_Kind));
				__jule_func_result=(_1ac5e97a0_annotateKind(_self_, &((*(_55715_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1b3c3649b:;
			++it;
			_5578_i++;
			goto _iter_begin_1b3c3649b;
		}
		_iter_end_1b3c3649b:;
	};
	if ((!(_1ac4dc2ec_IsVoid((*(_5437_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5437_pf))._field_Result));
		__jule_func_result=(_1ac5e97a0_annotateKind(_self_, &((*_5477_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5567_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ac5e898b_annotatePtr(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _57139_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac64d6e4_Ptr> _5727_pptr = _1ac640eab_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5727_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac64d6e4_Ptr> _5767_ptr = _1ac640eab_Ptr((*(_57139_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5727_pptr))._field_Elem));
	__jule_func_result = _1ac5e97a0_annotateKind(_self_, &((*(_5767_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ac5e8ccc_annotateSptr(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _58140_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac649e2c_Sptr> _5827_ssptr = _1ac640c25_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5827_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac649e2c_Sptr> _5867_sptr = _1ac640c25_Sptr((*(_58140_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5827_ssptr))._field_Elem));
	__jule_func_result = _1ac5e97a0_annotateKind(_self_, &((*(_5867_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ac5e911d_annotateStruct(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _59142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac4ca4d8_StructIns> _5927_s = _1ac642012_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5927_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _5967_s2 = _1ac642012_Struct((*(_59142_k)).ptr());;
	if (((*(_5927_s))._field_Generics.len() != (*(_5967_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5927_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c452ce:;
		if (it != expr_end) {
			jule::I64 _6008_i = it - expr->begin();
			jule::Ptr<_1ac63b902_InsGeneric> _60015_g = *it;
			{
				jule::Ptr<_1ac63b902_InsGeneric> _6018_g2 = (*(_5967_s2))._field_Generics[_6008_i];;
				if (_1ac63da25_Equal((*(_60015_g))._field_Kind, (*(_6018_g2))._field_Kind)) {
					goto _iter_next_1b3c452ce;
				};
				(*(_self_))._field_k=(&((*_60015_g.alloc)._field_Kind));
				if ((!(_1ac5e97a0_annotateKind(_self_, &((*_6018_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3c452ce:;
			++it;
			_6008_i++;
			goto _iter_begin_1b3c452ce;
		}
		_iter_end_1b3c452ce:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac5e945e_annotateAny(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _61339_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6143_kind = _1ac63d6d4_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c48898:;
		if (it != expr_end) {
			jule::I64 _6157_i = it - expr->begin();
			jule::Ptr<_1ac4b3988_GenericDecl> _61510_g = *it;
			{
				if ((_6143_kind != (*(_61510_g))._field_Ident)) {
					goto _iter_next_1b3c48898;
				};
				jule::Ptr<_1ac63b902_InsGeneric> _6194_t = (*((*(_self_))._field_f))._field_Generics[_6157_i];;
				{
					
					if ((_6194_t == nullptr) || ((*(_6194_t))._field_Kind == nullptr)) {
						_case_begin_1b3c4a1e6:;
						{
							_1ac5e70e9_pushGeneric(_self_, _61339_k, _6157_i);
						}
					}
					else if ((!(_1ac63da25_Equal((*(_6194_t))._field_Kind, (*(_61339_k)))))) {
						_case_begin_1b3c4a290:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1b3c4a0a3:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61339_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1b3c48898:;
			++it;
			_6157_i++;
			goto _iter_begin_1b3c48898;
		}
		_iter_end_1b3c48898:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac5e97a0_annotateKind(_1ac5e5548_dynamicTypeAnnotation* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _63440_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1ac5e945e_annotateAny(_self_, _63440_k)) {
			_case_begin_1b3c4c836:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac64098e_Prim((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1b3c4c89c:;
			{
				__jule_func_result = _1ac5e743a_annotatePrim(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac64175e_Arr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1b3c4c913:;
			{
				__jule_func_result = _1ac5e777b_annotateArr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac6419e5_Slc((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1b3c4c98a:;
			{
				__jule_func_result = _1ac5e7abc_annotateSlc(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac64252e_Map((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1b3c4cb44:;
			{
				__jule_func_result = _1ac5e8309_annotateMap(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac641c7b_Fn((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1b3c4cbaa:;
			{
				__jule_func_result = _1ac5e864a_annotateFn(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac640eab_Ptr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1b3c4cc21:;
			{
				__jule_func_result = _1ac5e898b_annotatePtr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac640c25_Sptr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1b3c4cc87:;
			{
				__jule_func_result = _1ac5e8ccc_annotateSptr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ac642012_Struct((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1b3c4cd0e:;
			{
				__jule_func_result = _1ac5e911d_annotateStruct(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b3c4c715:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b3c4c292:;
	};
}



inline jule::Bool _1ac5e9a36_annotate(_1ac5e5548_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1ac5e97a0_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}







inline void _1ac5ea949_pushErrToken(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Ptr<_1ac4912c3_Token> _67928_token, jule::Str _67943_fmt, jule::Slice<jule::Any> _67956_args) {
	_1ac57b15a_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67928_token, _67943_fmt, _67956_args);
}



inline void _1ac5eacac_pushErr(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Str _68323_fmt, jule::Slice<jule::Any> _68336_args) {
	_1ac5ea949_pushErrToken(_self_, (*(_self_))._field_errorToken, _68323_fmt, _68336_args);
}



inline jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>> _1ac5eb043_getParams(_1ac5ea3a5_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1ac4da9c1_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1ac5eb384_checkCounts(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>* _69628_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6977_n = (*(_69628_params)).len();;
	if (((_6977_n > 0LL) && _1ac4da9c1_IsSelf((*((*(_69628_params))[0LL]))._field_Decl.ptr()))) {
		(_6977_n)--;
	};
	jule::I64 _7027_diff = (_6977_n - (*(_self_))._field_args.len());;
	jule::Str _7037_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_7027_diff == 0LL)) {
			_case_begin_1b3c598a9:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6977_n > 0LL) && (*(*((*(_69628_params))[(_6977_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1b3c59557:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7027_diff < 0LL) || (_7027_diff > (*(_69628_params)).len()))) {
			_case_begin_1b3c595bd:;
			{
				_7037_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1b3c594e1:;
			{
				_7037_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1b3c59469:;
	};
	_1b097ade7_StrBuilder _7147_err = static__1b097b1e4_New(32LL);;
	_1b0984be2_WriteStr(&_7147_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1b0984be2_WriteStr(&_7147_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69628_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c58e5d:;
		if (it != expr_end) {
			jule::I64 _7177_i = it - expr->begin();
			jule::Ptr<_1ac4ddc9e_ParamIns> *_71710_p = it;
			{
				_1b0984be2_WriteStr(&_7147_err, _1ac63d6d4_Str((*((*(_71710_p))))._field_Kind.ptr()));
				if ((((*(_69628_params)).len() - _7177_i) > 1LL)) {
					_1b0984be2_WriteStr(&_7147_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b3c58e5d:;
			++it;
			_7177_i++;
			goto _iter_begin_1b3c58e5d;
		}
		_iter_end_1b3c58e5d:;
	};
	_1b0984e9a_WriteByte(&_7147_err, ')');
	_1ac5eacac_pushErr(_self_, _7037_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b09854d9_Str(&_7147_err), &__jule_any_type4); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac5eb83a_checkArg(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Ptr<_1ac4ddc9e_ParamIns>* _72829_p, jule::Ptr<_1ac60a55d_Data>* _72848_arg, jule::Ptr<_1ac4912c3_Token>* _72865_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1ac4e21d1_parameterUsesGenerics(_72829_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72829_p))))._field_Decl))._field_Variadic)) && _1ac603e91_isGoodValueToInfer(_72848_arg));
		if (__jule_func_result) {
			_1ac5e5548_dynamicTypeAnnotation _7339_dta = _1ac5e5548_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72829_p)), ._field_a=(*(_72848_arg)), ._field_errorToken=(*(_72865_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1ac5e9a36_annotate(&_7339_dta);
		};
		if ((!(__jule_func_result))) {
			_1ac5ea949_pushErrToken(_self_, (*(_72865_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1ac58895e_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72829_p))))._field_Kind), _72848_arg, _72865_errorToken)) {
		__jule_func_result = _1ac5841c9_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72829_p))))._field_Kind), _72848_arg, (*(_72865_errorToken)), _1ac61081b_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ac5ebc36_push(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Ptr<_1ac4ddc9e_ParamIns>* _75725_p, jule::Ptr<_1ac4aaab2_Expr> _75743_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac63d2d8_TypeKind> _7587_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7593_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75725_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75725_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75725_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1ac60a55d_Data> _7677_d = _1ac62b0ea_evalExpr((*(_self_))._field_e, _75743_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7587_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7593_oldImmut;
	if ((_7677_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ac5eb83a_checkArg(_self_, _75725_p, &(_7677_d), &((*(_75743_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7677_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1ac5ec132_pushVariadic(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Ptr<_1ac4ddc9e_ParamIns>* _78133_p, jule::I64 _78151_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7837_variadiced = false;;
	jule::Bool _7843_more = ((_78151_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1ac4d1ba4_SliceExprModel> _7857_model = jule::new_ptr<_1ac4d1ba4_SliceExprModel>(_1ac4d1ba4_SliceExprModel{._field_ElemKind=(*((*(_78133_p))))._field_Kind, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1ac63d2d8_TypeKind> _7897_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1ac63d2d8_TypeKind> _7967_oldKind = (*((*(_78133_p))))._field_Kind;;
	(*((*(_78133_p))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>((*(*((*(_78133_p))))._field_Kind.alloc));
	(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78133_p))))._field_Kind=_7967_oldKind;
	});;
	for (; (_78151_i < (*(_self_))._field_args.len()); (_78151_i)++) {
		{
			jule::Ptr<_1ac4aaab2_Expr> _8058_arg = (*(_self_))._field_args[_78151_i];;
			{
				auto &_match_expr{ (*(_8058_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type78) {
					_case_begin_1b3c6ec54:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac64a900_Slc>(_1ac64a900_Slc{._field_Elem=(*((*(_78133_p))))._field_Kind}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1b3c70051:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78133_p))))._field_Kind;
					}
				}
				_match_end_1b3c6eeda:;
			};
			jule::Ptr<_1ac60a55d_Data> _8188_d = _1ac62a968_eval((*(_self_))._field_e, _8058_arg);;
			if ((_8188_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1b3c6e1d7;
			};
			if ((*((*(_8188_d))._field_Kind))._field_Variadic) {
				_7837_variadiced=true;
				(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1ac5eb83a_checkArg(_self_, _78133_p, &(_8188_d), &((*(_8058_arg))._field_Token)));
				(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8188_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type79) {
						_case_begin_1b3c7398e:;
						{
							_7857_model=(*(_8188_d))._field_Model.unsafe_cast_ptr<_1ac4d1ba4_SliceExprModel>();
							(*(_7857_model))._field_ElemKind=(*((*(_78133_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1b3c767a5:;
						{
							_7857_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8188_d))._field_Model); };
						}
					}
					_match_end_1b3c7673e:;
				};
				(_78151_i)++;
				goto _iter_end_1b3c6e1d7;
			};
			__jule_func_result=(__jule_func_result && _1ac5eb83a_checkArg(_self_, _78133_p, &(_8188_d), &((*_8058_arg.alloc)._field_Token)));
			(*(_7857_model))._field_Elems=jule::append((*_7857_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8188_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1b3c6e1d7:;
	}
	_iter_end_1b3c6e1d7:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7897_old;
	if ((_7837_variadiced && _7843_more)) {
		_1ac5ea949_pushErrToken(_self_, (*((*(_self_))._field_args[_78151_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7857_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7857_model, &__jule_any_type79)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ac5ec473_checkArgs(_1ac5ea3a5_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>* _86230_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8633_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8677_i = 0LL;;
	if ((((*(_86230_params)).len() > 0LL) && _1ac4da9c1_IsSelf((*((*(_86230_params))[0LL]))._field_Decl.ptr()))) {
		(_8677_i)++;
	};
	_julec_label_1b3c7eb21:;
	while ((_8677_i < (*(_86230_params)).len())) {
		{
			jule::Ptr<_1ac4ddc9e_ParamIns> _8748_p = (*(_86230_params))[_8677_i];;
			{
				
				if ((*(*(_8748_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1b3c815c3:;
					{
						__jule_func_result=(_1ac5ec132_pushVariadic(_self_, &(_8748_p), _8677_i) && __jule_func_result);
						goto _iter_end_1b3c7edb8;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8677_i)) {
					_case_begin_1b3c816b1:;
					{
						__jule_func_result=false;
						goto _iter_end_1b3c7edb8;
					}
				}
				else {
					_case_begin_1b3c8120a:;
					{
						__jule_func_result=(_1ac5ebc36_push(_self_, &(_8748_p), (*(_self_))._field_args[_8677_i]) && __jule_func_result);
					}
				}
				_match_end_1b3c81183:;
			};
			(_8677_i)++;
		}
	_iter_next_1b3c7edb8:;
	}
	_iter_end_1b3c7edb8:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8633_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ac5ec709_checkDynamicTypeAnnotation(_1ac5ea3a5_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c8340a:;
		if (it != expr_end) {
			jule::Ptr<_1ac63b902_InsGeneric> _89410_g = *it;
			{
				if ((_89410_g == nullptr)) {
					_1ac5eacac_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3c8340a:;
			++it;
			goto _iter_begin_1b3c8340a;
		}
		_iter_end_1b3c8340a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac5ec990_check(_1ac5ea3a5_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>> _9047_params = _1ac5eb043_getParams(_self_);;
	__jule_func_result=_1ac5eb384_checkCounts(_self_, &(_9047_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ac5ec473_checkArgs(_self_, &(_9047_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1ac5ec709_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1ac5ed870_pushErr(_1ac5ed2dc_structLitChecker* _self_, jule::Ptr<_1ac4912c3_Token> _94223_token, jule::Str _94238_fmt, jule::Slice<jule::Any> _94251_args) {
	_1ac60c818_pushErr((*(_self_))._field_e.ptr(), _94223_token, _94238_fmt, _94251_args);
}



inline void _1ac5edbd3_pushSuggestion(_1ac5ed2dc_structLitChecker* _self_, jule::Str _94730_fmt, jule::Slice<jule::Any> _94743_args) {
	_1ac60cb7b_pushSuggestion((*(_self_))._field_e.ptr(), _94730_fmt, _94743_args);
}



inline void _1ac5ee101_pushMatch(_1ac5ed2dc_structLitChecker* _self_, jule::Ptr<_1ac4c9938_FieldIns>* _95130_f, jule::Ptr<_1ac60a55d_Data>* _95149_d, jule::Ptr<_1ac4912c3_Token>* _95164_errorToken) {
	;
	jule::Bool _9573_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95130_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1ac58895e_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9573_mutable, false, &((*((*(_95130_f))))._field_Kind), _95149_d, _95164_errorToken)) {
		_1ac5841c9_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_95130_f))))._field_Kind), _95149_d, (*(_95164_errorToken)), _1ac61081b_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1ac4d0202_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1ac4d0202_StructArgExprModel>(_1ac4d0202_StructArgExprModel{._field_Token=(*(_95164_errorToken)), ._field_Field=(*(_95130_f)), ._field_Expr=(*(_95149_d))})); };
}



inline void _1ac5ee464_checkPair(_1ac5ed2dc_structLitChecker* _self_, jule::Ptr<_1ac4b02d1_FieldExprPair>* _97030_pair, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>* _97057_exprs) {
	jule::Ptr<_1ac4c9938_FieldIns> _9727_f = _1ac4cb8c4_FindField((*(_self_))._field_s.ptr(), (*((*((*(_97030_pair))))._field_Field))._field_Kind);;
	if ((_9727_f == nullptr)) {
		_1ac5ed870_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((!(_1ac57b8b9_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9727_f))._field_Decl))._field_Public, (*(*(_9727_f))._field_Decl.alloc)._field_Token)))) {
		_1ac5ed870_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1ac5edbd3_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1b3c8e8cd:;
	{
		auto expr = _97057_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c9089b:;
		if (it != expr_end) {
			jule::Ptr<_1ac4aaab2_Expr> _98415_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98415_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1b3c91391:;
						{
							jule::Ptr<_1ac4b02d1_FieldExprPair> _9879_dpair = (*(_98415_expr))._field_Kind.unsafe_cast_ptr<_1ac4b02d1_FieldExprPair>();;
							{
								
								if (((*(_97030_pair)) == _9879_dpair)) {
									_case_begin_1b3c93a14:;
									{
										goto _iter_end_1b3c9089b;
									}
								}
								else if (((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind == (*(*(_9879_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1b3c93aad:;
									{
										_1ac5ed870_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
										goto _iter_end_1b3c9089b;
									}
								}
								_match_end_1b3c9399d:;
							};
						}
					}
					_match_end_1b3c91319:;
				};
			}
			_iter_next_1b3c9089b:;
			++it;
			goto _iter_begin_1b3c9089b;
		}
		_iter_end_1b3c9089b:;
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _9987_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9987_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9727_f))._field_Kind;
	jule::Ptr<_1ac60a55d_Data> _10027_d = _1ac62b0ea_evalExpr((*(_self_))._field_e, (*((*(_97030_pair))))._field_Expr);;
	if ((_10027_d == nullptr)) {
		return;;
	};
	_1ac5ee101_pushMatch(_self_, &(_9727_f), &(_10027_d), &((*((*(_97030_pair))))._field_Field));
}



inline jule::Bool _1ac5ee7a5_readyExprs(_1ac5ed2dc_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>* _100931_exprs) {
	jule::Bool _10107_ok = true;;
	{
		auto expr = _100931_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c991bd:;
		if (it != expr_end) {
			jule::I64 _10118_i = it - expr->begin();
			jule::Ptr<_1ac4aaab2_Expr> _101115_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101115_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1b3c99db1:;
						{
							jule::Ptr<_1ac4b18dc_KeyValPair> _10149_pair = (*(_101115_expr))._field_Kind.unsafe_cast_ptr<_1ac4b18dc_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10149_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type51) {
									_case_begin_1b3c9d557:;
									{
										goto _match_end_1b3c9c853;
									}
								}
								else {
									_case_begin_1b3c9c8b9:;
									{
										_1ac5ed870_pushErr(_self_, (*(_10149_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_10107_ok=false;
										goto _iter_next_1b3c991bd;
									}
								}
								_match_end_1b3c9c853:;
							};
							(*((*(_100931_exprs))[_10118_i]))._field_Kind=jule::Any(jule::new_ptr<_1ac4b02d1_FieldExprPair>(_1ac4b02d1_FieldExprPair{._field_Field=(*((*(_10149_pair))._field_Key))._field_Token, ._field_Expr=(*_10149_pair.alloc)._field_Val}), &__jule_any_type80);
						}
					}
					_match_end_1b3c99d39:;
				};
			}
			_iter_next_1b3c991bd:;
			++it;
			_10118_i++;
			goto _iter_begin_1b3c991bd;
		}
		_iter_end_1b3c991bd:;
	};
	return _10107_ok;;
}



inline void _1ac5eea5d_check(_1ac5ed2dc_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>* _103326_exprs) {
	if (((*(_103326_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1ac5ee7a5_readyExprs(_self_, _103326_exprs)))) {
		return;;
	};
	jule::Bool _10407_paired = false;;
	{
		auto expr = _103326_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ca10c6:;
		if (it != expr_end) {
			jule::I64 _10418_i = it - expr->begin();
			jule::Ptr<_1ac4aaab2_Expr> _104115_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104115_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1b3ca6e89:;
						{
							jule::Ptr<_1ac4b02d1_FieldExprPair> _10449_pair = (*(_104115_expr))._field_Kind.unsafe_cast_ptr<_1ac4b02d1_FieldExprPair>();;
							if (((_10418_i > 0LL) && (!(_10407_paired)))) {
								_1ac5ed870_pushErr(_self_, (*(_10449_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10407_paired=true;
							_1ac5ee464_checkPair(_self_, &(_10449_pair), _103326_exprs);
						}
					}
					else {
						_case_begin_1b3ca2281:;
						{
							if (_10407_paired) {
								_1ac5ed870_pushErr(_self_, (*(_104115_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10418_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1ac5ed870_pushErr(_self_, (*_104115_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1b3ca10c6;
							};
							jule::Ptr<_1ac4c9938_FieldIns> _10599_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10418_i];;
							if ((!(_1ac57b8b9_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10599_field))._field_Decl))._field_Public, (*(*(_10599_field))._field_Decl.alloc)._field_Token)))) {
								_1ac5ed870_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1ac5edbd3_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1ac63d2d8_TypeKind> _10679_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10679_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10599_field.alloc)._field_Kind;
							jule::Ptr<_1ac60a55d_Data> _10719_d = _1ac62b0ea_evalExpr((*(_self_))._field_e, _104115_expr);;
							if ((_10719_d == nullptr)) {
								goto _iter_next_1b3ca10c6;
							};
							_1ac5ee101_pushMatch(_self_, &(_10599_field), &(_10719_d), &((*_104115_expr.alloc)._field_Token));
						}
					}
					_match_end_1b3ca221a:;
				};
			}
			_iter_next_1b3ca10c6:;
			++it;
			_10418_i++;
			goto _iter_begin_1b3ca10c6;
		}
		_iter_end_1b3ca10c6:;
	};
	if ((!(_10407_paired))) {
		jule::I64 _10824_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10838_diff = (_10824_n - (*(_103326_exprs)).len());;
		{
			
			if ((_10838_diff <= 0LL)) {
				_case_begin_1b3caaaa3:;
				{
					return;;
				}
			}
			_match_end_1b3caa982:;
		};
		_1b097ade7_StrBuilder _10898_idents = static__1b097b1e4_New(32LL);;
		for (; (_10838_diff > 0LL); (_10838_diff)--) {
			{
				_1b0984be2_WriteStr(&_10898_idents, jule::Str::lit(", ", 2));
				_1b0984be2_WriteStr(&_10898_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10824_n - _10838_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1b3cab686:;
		}
		_iter_end_1b3cab686:;;
		_1ac5ed870_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_1b0985e8a_Buf(&_10898_idents).slice(2LL)), &__jule_any_type4); __jule_collection; }));
	};
}








inline jule::Bool _1ac6000be_rangeChecker_eq(_1ac6000be_rangeChecker *_self_, _1ac6000be_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1ac5a2527_Var> _1ac6005db_buildVar(_1ac6000be_rangeChecker* _self_, jule::Ptr<_1ac4b95e8_VarDecl>* _110925_decl) {
	jule::Ptr<_1ac5a2527_Var> _11107_v = _1ac4e8407_buildVar((*(_110925_decl)));;
	return _11107_v;;
}



inline void _1ac6007d9_setSizeKey(_1ac6000be_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ac493baa_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1ac6005db_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
}



inline void _1ac600c07_checkRangeExprValidity(_1ac6000be_rangeChecker* _self_, jule::Ptr<_1ac60a55d_Data>* _112843_d, jule::Ptr<_1ac5a2527_Var>* _112854_key, jule::Ptr<_1ac63d2d8_TypeKind>* _112870_k) {
	jule::Bool _11297__mut = (*((*(_112854_key))))._field_Mutable;;
	if ((_11297__mut && (!(_1ac63ebbe_Mutable((*(_112870_k)).ptr()))))) {
		_11297__mut=false;
	};
	_1ac58895e_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11297__mut, (*((*(_112854_key))))._field_Reference, &((*((*((*(_112854_key))))._field_Kind))._field_Kind), _112843_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1ac600e05_checkSlice(_1ac6000be_rangeChecker* _self_) {
	_1ac6007d9_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ac493baa_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ac64a900_Slc> _11477_slc = _1ac6419e5_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ac6005db_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=(*(_11477_slc))._field_Elem});
	_1ac600c07_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11477_slc.alloc)._field_Elem));
}



inline void _1ac601103_checkArray(_1ac6000be_rangeChecker* _self_) {
	_1ac6007d9_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ac493baa_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ac64cc21_Arr> _11607_arr = _1ac64175e_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ac6005db_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=(*(_11607_arr))._field_Elem});
	_1ac600c07_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11607_arr.alloc)._field_Elem));
}



inline void _1ac601301_checkMapKeyA(_1ac6000be_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ac493baa_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ac64c094_Map> _11727_m = _1ac64252e_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1ac6005db_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=(*(_11727_m))._field_Key});
	jule::Ptr<_1ac60a55d_Data> _11767_d = jule::new_ptr<_1ac60a55d_Data>((*(*(_self_))._field_d.alloc));;
	(*_11767_d.alloc)._field_Kind=(*_11727_m.alloc)._field_Key;
	_1ac600c07_checkRangeExprValidity(_self_, &(_11767_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11727_m.alloc)._field_Key));
}



inline void _1ac6014ee_checkMapKeyB(_1ac6000be_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ac493baa_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ac64c094_Map> _11877_m = _1ac64252e_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ac6005db_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=(*(_11877_m))._field_Val});
	jule::Ptr<_1ac60a55d_Data> _11917_d = jule::new_ptr<_1ac60a55d_Data>((*(*(_self_))._field_d.alloc));;
	(*_11917_d.alloc)._field_Kind=(*_11877_m.alloc)._field_Val;
	_1ac600c07_checkRangeExprValidity(_self_, &(_11917_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11877_m.alloc)._field_Val));
}



inline void _1ac6016ec_checkMap(_1ac6000be_rangeChecker* _self_) {
	_1ac601301_checkMapKeyA(_self_);
	_1ac6014ee_checkMapKeyB(_self_);
}



inline void _1ac6018ea_checkStr(_1ac6000be_rangeChecker* _self_) {
	_1ac6007d9_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ac493baa_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ac6005db_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_Kind;
}



inline void _1ac601ae8_checkComptime(_1ac6000be_rangeChecker* _self_) {
	_1ac6007d9_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1ac493baa_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ac6005db_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1ac601d7e_checkComptimeRange(_1ac6000be_rangeChecker* _self_) {
	jule::Ptr<_1ac5071e6_comptimeRange> _12267_range = _1ac643d38_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12267_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data6)) {
			_case_begin_1b3cccc29:;
			{
				_1ac601ae8_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1b3ccd037:;
			{
				_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b3cccec1:;
	};
}



inline jule::Bool _1ac602115_check(_1ac6000be_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1b3cd14ad:;
		}
		else if ((_1ac6419e5_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3cced5d:;
			{
				_1ac600e05_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1ac64175e_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3ccedc4:;
			{
				_1ac601103_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1ac64252e_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3cd0424:;
			{
				_1ac6016ec_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1ac643d38_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3cd048a:;
			{
				return _1ac601d7e_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1b3ccecc5:;
			{
				jule::Ptr<_1ac646401_Prim> _12594_prim = _1ac64098e_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12594_prim != nullptr) && _1ac6498bb_IsStr(_12594_prim))) {
					_1ac6018ea_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1b3ccebb5:;
	};
	_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1ac602c92_prepareTypes(_1ac602830_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1ac4e1136_Types((*(_self_))._field_f);
	};
}



inline void _1ac60304a_prepareExprs(_1ac602830_retTypeChecker* _self_, jule::Ptr<_1ac4aaab2_Expr>* _128733_e) {
	if (((*(_128733_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128733_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b3cd79ae:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128733_e))))._field_Kind.unsafe_cast_ptr<_1ac4ab6a6_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1b3cd733d:;
			{
				{ jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128733_e))); };
			}
		}
		_match_end_1b3cd6da9:;
	};
}



inline void _1ac603248_checkExprs(_1ac602830_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ac60a55d_Data>> _13037_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac60a55d_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac60a55d_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1ac60c285_eval> _13047_eval = _1ac583aad_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3cda187:;
		if (it != expr_end) {
			jule::I64 _13058_i = it - expr->begin();
			jule::Ptr<_1ac4aaab2_Expr> _130515_expr = *it;
			{
				if ((_13058_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1b3cda187;
				};
				jule::Ptr<_1ac63d2d8_TypeKind> _13108_t = (*(_self_))._field_types[_13058_i];;
				(*(_13047_eval))._field_prefix=_13108_t;
				jule::Ptr<_1ac60a55d_Data> _13138_d = _1ac62b0ea_evalExpr(_13047_eval, _130515_expr);;
				if ((_13138_d == nullptr)) {
					goto _iter_next_1b3cda187;
				};
				{ jule::Slice<jule::Ptr<_1ac60a55d_Data>> &__jule_push_dest = _13037_datas; __jule_push_dest.push(_13138_d); };
				if (((!((*(_13138_d))._field_Mutable)) && _1ac63ebbe_Mutable((*(_13138_d))._field_Kind.ptr()))) {
					_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1ac5e3b73_assignTypeChecker _13258_ac = _1ac5e3b73_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13108_t, ._field_d=_13138_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1ac5408c2_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1ac5e4b74_check(&_13258_ac);
			}
			_iter_next_1b3cda187:;
			++it;
			_13058_i++;
			goto _iter_begin_1b3cda187;
		}
		_iter_end_1b3cda187:;
	};
	if ((_13037_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1ac4d4dd8_TupleExprModel>(_1ac4d4dd8_TupleExprModel{._field_Datas=_13037_datas}), &__jule_any_type83);
	} else if ((_13037_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_13037_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1ac6034ce_tryFuncMultiRetForward(_1ac602830_retTypeChecker* _self_) {
	jule::Ptr<_1ac60c285_eval> _13477_eval = _1ac583aad_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));;
	jule::Ptr<_1ac60a55d_Data> _13487_d = _1ac62b0ea_evalExpr(_13477_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13487_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ac64b4e4_Tuple> _13547_tup = _1ac6427b5_Tup((*(_13487_d))._field_Kind.ptr());;
	if ((_13547_tup == nullptr)) {
		return false;;
	};
	if (((*(_13547_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1b3ce6270;
	};
	(*(_self_))._field_model=(*(_13487_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ce43a0:;
		if (it != expr_end) {
			jule::I64 _13627_i = it - expr->begin();
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _13638_t1 = (*(_self_))._field_types[_13627_i];;
				jule::Ptr<_1ac63d2d8_TypeKind> _13648_t2 = (*(_13547_tup))._field_Types[_13627_i];;
				if ((!(_1ac584680__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13638_t1), &(_13648_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1b3ce6270;
				};
			}
			_iter_next_1b3ce43a0:;
			++it;
			_13627_i++;
			goto _iter_begin_1b3ce43a0;
		}
		_iter_end_1b3ce43a0:;
	};
	return true;;
	_julec_label_1b3ce6270:;
	_1b097ade7_StrBuilder _13717_wanted = static__1b097b1e4_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ce65a0:;
		if (it != expr_end) {
			jule::I64 _13727_i = it - expr->begin();
			jule::Ptr<_1ac63d2d8_TypeKind> _137210_t = *it;
			{
				_1b0984be2_WriteStr(&_13717_wanted, _1ac63d6d4_Str(_137210_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13727_i) > 1LL)) {
					_1b0984be2_WriteStr(&_13717_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b3ce65a0:;
			++it;
			_13727_i++;
			goto _iter_begin_1b3ce65a0;
		}
		_iter_end_1b3ce65a0:;
	};
	_1b097ade7_StrBuilder _13787_given = static__1b097b1e4_New(32LL);;
	{
		auto expr = &((*(_13547_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ce863a:;
		if (it != expr_end) {
			jule::I64 _13797_i = it - expr->begin();
			jule::Ptr<_1ac63d2d8_TypeKind> _137910_t = *it;
			{
				_1b0984be2_WriteStr(&_13787_given, _1ac63d6d4_Str(_137910_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13797_i) > 1LL)) {
					_1b0984be2_WriteStr(&_13787_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b3ce863a:;
			++it;
			_13797_i++;
			goto _iter_begin_1b3ce863a;
		}
		_iter_end_1b3ce863a:;
	};
	_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1b09854d9_Str(&_13717_wanted), &__jule_any_type4); (*it++) = jule::Any(_1b09854d9_Str(&_13787_given), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline jule::Bool _1ac603820_check(_1ac602830_retTypeChecker* _self_, jule::Ptr<_1ac4aaab2_Expr>* _138926_e) {
	_1ac602c92_prepareTypes(_self_);
	_1ac60304a_prepareExprs(_self_, _138926_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1b3ceba28:;
			{
				if ((!(_1ac4dd0bc_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1ac4dc2ec_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1b3ceba8e:;
			{
				_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1b3cebb05:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b3d01577:;
						{
							if (_1ac6034ce_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1b3d014bc:;
				};
				_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1b3cebb6b:;
			{
				_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1b3cebbd2:;
			{
				_1ac57b15a_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b3ceb8b3:;
	};
	_1ac603248_checkExprs(_self_);
	return true;;
}







inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac6053b0_SelectPackage(_1ac604d93_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d079bd:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1b3d079bd:;
			++it;
			goto _iter_begin_1b3d079bd;
		}
		_iter_end_1b3d079bd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac6057ab_FindVar(_1ac604d93_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1ac6078e0_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac605ba7_FindTypeAlias(_1ac604d93_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1ac607d96_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1ac4c767d_Struct> _1ac6060a3_FindStruct(_1ac604d93_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d0974a:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1b3d0974a:;
			++it;
			goto _iter_begin_1b3d0974a;
		}
		_iter_end_1b3d0974a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac60649e_FindFn(_1ac604d93_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d0b461:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1b3d0b461:;
			++it;
			goto _iter_begin_1b3d0b461;
		}
		_iter_end_1b3d0b461:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5008a4_Trait> _1ac6067e0_FindTrait(_1ac604d93_SymbolTable* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d0c781:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1b3d0c781:;
			++it;
			goto _iter_begin_1b3d0c781;
		}
		_iter_end_1b3d0c781:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5030b0_Enum> _1ac606b31_FindEnum(_1ac604d93_SymbolTable* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d0d793:;
		if (it != expr_end) {
			jule::Ptr<_1ac5030b0_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1b3d0d793:;
			++it;
			goto _iter_begin_1b3d0d793;
		}
		_iter_end_1b3d0d793:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac606e72_FindTypeEnum(_1ac604d93_SymbolTable* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d0e783:;
		if (it != expr_end) {
			jule::Ptr<_1ac5047ba_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1b3d0e783:;
			++it;
			goto _iter_begin_1b3d0e783;
		}
		_iter_end_1b3d0e783:;
	};
	return nullptr;;
}



inline jule::I64 _1ac607439_findVar1(_1ac604d93_SymbolTable* _self_, jule::Ptr<_1ac5a2527_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d10773:;
		if (it != expr_end) {
			jule::I64 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1b3d10773:;
			++it;
			_1097_i++;
			goto _iter_begin_1b3d10773;
		}
		_iter_end_1b3d10773:;
	};
	return -1LL;;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac6078e0_findVar(_1ac604d93_SymbolTable* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I64 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1ac5a2527_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1b3d125dd:;
		}
		_iter_end_1b3d125dd:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3d13a73:;
			if (it != expr_end) {
				jule::Ptr<_1ac5a2527_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1b3d13a73:;
				++it;
				goto _iter_begin_1b3d13a73;
			}
			_iter_end_1b3d13a73:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac607d96_findTypeAlias(_1ac604d93_SymbolTable* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I64 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1ac63c4e6_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1b3d15932:;
		}
		_iter_end_1b3d15932:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3d16db7:;
			if (it != expr_end) {
				jule::Ptr<_1ac63c4e6_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1b3d16db7:;
				++it;
				goto _iter_begin_1b3d16db7;
			}
			_iter_end_1b3d16db7:;
		};
	};
	return nullptr;;
}



inline jule::Any _1ac608292_defByIdent(_1ac604d93_SymbolTable* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d1812c:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type8);;
				};
			}
			_iter_next_1b3d1812c:;
			++it;
			goto _iter_begin_1b3d1812c;
		}
		_iter_end_1b3d1812c:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d18490:;
		if (it != expr_end) {
			jule::Ptr<_1ac63c4e6_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type27);;
				};
			}
			_iter_next_1b3d18490:;
			++it;
			goto _iter_begin_1b3d18490;
		}
		_iter_end_1b3d18490:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d18c98:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type23);;
				};
			}
			_iter_next_1b3d18c98:;
			++it;
			goto _iter_begin_1b3d18c98;
		}
		_iter_end_1b3d18c98:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d1a409:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type26);;
				};
			}
			_iter_next_1b3d1a409:;
			++it;
			goto _iter_begin_1b3d1a409;
		}
		_iter_end_1b3d1a409:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d1c1b9:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type10);;
				};
			}
			_iter_next_1b3d1c1b9:;
			++it;
			goto _iter_begin_1b3d1c1b9;
		}
		_iter_end_1b3d1c1b9:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d1ca38:;
		if (it != expr_end) {
			jule::Ptr<_1ac5030b0_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type24);;
				};
			}
			_iter_next_1b3d1ca38:;
			++it;
			goto _iter_begin_1b3d1ca38;
		}
		_iter_end_1b3d1ca38:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d1d709:;
		if (it != expr_end) {
			jule::Ptr<_1ac5047ba_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type25);;
				};
			}
			_iter_next_1b3d1d709:;
			++it;
			goto _iter_begin_1b3d1d709;
		}
		_iter_end_1b3d1d709:;
	};
	return nullptr;;
}



inline jule::Bool _1ac608748_isDuplicatedIdent(_1ac604d93_SymbolTable* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d1ec05:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b3d1ec05:;
			++it;
			goto _iter_begin_1b3d1ec05;
		}
		_iter_end_1b3d1ec05:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d2009b:;
		if (it != expr_end) {
			jule::Ptr<_1ac63c4e6_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b3d2009b:;
			++it;
			goto _iter_begin_1b3d2009b;
		}
		_iter_end_1b3d2009b:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d20464:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b3d20464:;
			++it;
			goto _iter_begin_1b3d20464;
		}
		_iter_end_1b3d20464:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d22510:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1b3d22510:;
			++it;
			goto _iter_begin_1b3d22510;
		}
		_iter_end_1b3d22510:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d24985:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1b3d24985:;
			++it;
			goto _iter_begin_1b3d24985;
		}
		_iter_end_1b3d24985:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d24a2e:;
		if (it != expr_end) {
			jule::Ptr<_1ac5030b0_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1b3d24a2e:;
			++it;
			goto _iter_begin_1b3d24a2e;
		}
		_iter_end_1b3d24a2e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d25a30:;
		if (it != expr_end) {
			jule::Ptr<_1ac5047ba_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1b3d25a30:;
			++it;
			goto _iter_begin_1b3d25a30;
		}
		_iter_end_1b3d25a30:;
	};
	return false;;
}








inline jule::Bool _1ac60a55d_Data_eq(_1ac60a55d_Data *_self_, _1ac60a55d_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1ac60a97b_IsNil(_1ac60a55d_Data* _self_) {
	return _1ac63e41b_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ac60ac12_IsVoid(_1ac60a55d_Data* _self_) {
	return _1ac63e6a2_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ac60ae98_IsConst(_1ac60a55d_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1ac60b2d9_GoodOperand(_1ac60a55d_Data* _self_, jule::Ptr<_1ac60a55d_Data>* _10628_other) {
	if ((_1ac6414c8_TypeEnum((*((*(_10628_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1ac64098e_Prim((*((*(_10628_other))))._field_Kind) == nullptr) || (!(_1ac649b52_IsAny(_1ac64098e_Prim((*((*(_10628_other))))._field_Kind).ptr())))) && (_1ac642298_Trait((*((*(_10628_other))))._field_Kind) == nullptr)) && (!(_1ac63e41b_IsNil((*(_self_))._field_Kind))));;
}








inline jule::Bool _1ac60b6d5_Value_eq(_1ac60b6d5_Value *_self_, _1ac60b6d5_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1ac60c285_eval_eq(_1ac60c285_eval *_self_, _1ac60c285_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1ac60c818_pushErr(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _13723_token, jule::Str _13738_fmt, jule::Slice<jule::Any> _13751_args) {
	_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), _13723_token, _13738_fmt, _13751_args);
}



inline void _1ac60cb7b_pushSuggestion(_1ac60c285_eval* _self_, jule::Str _14230_fmt, jule::Slice<jule::Any> _14243_args) {
	_1ac57b4bd_pushSuggestion((*(_self_))._field_s.ptr(), _14230_fmt, _14243_args);
}



inline void _1ac60cd79_allowBuiltin(_1ac60c285_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ac60d077_disallowBuiltin(_1ac60c285_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1ac60d30d_isUnsafe(_1ac60c285_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1ac60d594_isGlobal(_1ac60c285_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3)) {
			_case_begin_1b3d824d7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b3d828e4:;
			{
				return false;;
			}
		}
		_match_end_1b3d8287d:;
	};
}



inline jule::Bool _1ac60d8a2_applyNumericPrefix(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _16939_d) {
	if ((((((*(_16939_d)) == nullptr) || (!(_1ac60ae98_IsConst((*(_16939_d)).ptr())))) || (_1ac64098e_Prim((*((*(_16939_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ac646401_Prim> _1763_prim = _1ac64098e_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1763_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1aa128a95_IsFloat(_1ac646775_Str(_1763_prim.ptr()))) {
			_case_begin_1b3d85056:;
			{
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>((*((*(_self_))._field_prefix)));
				_1aa12ce40_SetF64((*((*(_16939_d))))._field_Constant.ptr(), _1aa12c0b5_AsF64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		else if (_1aa12817c_IsSigInt(_1ac646775_Str(_1763_prim.ptr()))) {
			_case_begin_1b3d850bc:;
			{
				if ((!(_1ac5e10c1_sigAssignable(_1ac646775_Str(_1763_prim.ptr()), _16939_d)))) {
					return false;;
				};
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>((*((*(_self_))._field_prefix)));
				_1aa12c36d_SetI64((*((*(_16939_d))))._field_Constant.ptr(), _1aa12ba98_AsI64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		else if (_1aa12848a_IsUnsigInt(_1ac646775_Str(_1763_prim.ptr()))) {
			_case_begin_1b3d85133:;
			{
				if ((!(_1ac5e1489_unsigAssignable(_1ac646775_Str(_1763_prim.ptr()), _16939_d)))) {
					return false;;
				};
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>((*((*(_self_))._field_prefix)));
				_1aa12c626_SetU64((*((*(_16939_d))))._field_Constant.ptr(), _1aa12bd2e_AsU64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		_match_end_1b3d84e68:;
	};
	return true;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac60dbe3_litStr(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr>* _20419_l) {
	jule::Str _2057_s = jule::Str();;
	if (_1ac4926ae_IsRawStr((*((*(_20419_l))))._field_Value)) {
		_2057_s=_1ac5de322_ToRawStr((*((*(_20419_l))))._field_Value);
	} else {
		_2057_s=_1ac5de663_ToStr((*((*(_20419_l))))._field_Value);
	};
	jule::Ptr<_1aa1293c0_Const> _2117_constant = static__1aa12a190_NewStr(_2057_s);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac72822a_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2117_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_2117_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac60e034_litRune(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr>* _22120_l) {
	jule::I32 _2223_r = _1ac5de113_ToRune((*((*(_22120_l))))._field_Value);;
	jule::Ptr<_1ac60a55d_Data> _2237_data = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>(_2223_r))});;
	if ((_2223_r <= 255LL)) {
		(*(_2237_data))._field_Kind=_1ac729c10_primU8;
	} else {
		(*(_2237_data))._field_Kind=_1ac72969e_primI32;
	};
	(*(_2237_data))._field_Model=jule::Any(jule::new_ptr<_1ac4d86d3_RuneExprModel>(_1ac4d86d3_RuneExprModel{._field_Code=_2223_r}), &__jule_any_type85);
	(*_2237_data.alloc)._field_Mutable=true;
	(*_2237_data.alloc)._field_IsRune=true;
	(*_2237_data.alloc)._field_untyped=true;
	return _2237_data;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac60e375_litFloat(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr>* _24021_l) {
	jule::F64 _2413_f = ({
		auto except = _1a9d44d99_ParseFloat((*((*(_24021_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1aa1293c0_Const> _2427_constant = static__1aa12a459_NewF64(_2413_f);;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72abab_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2427_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_2427_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac60e6b6_litInt(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr>* _25223_l) {
	;
	jule::Str _2557_lit = (*((*(_25223_l))))._field_Value;;
	jule::I64 _2567_base = 0LL;;
	{
		
		if (_1b0966ec1_HasPrefix(_2557_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1b3d9c326:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=16LLU;
			}
		}
		else if (_1b0966ec1_HasPrefix(_2557_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1b3d9c414:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=2LLU;
			}
		}
		else if (_1b0966ec1_HasPrefix(_2557_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1b3d9bec4:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=8LLU;
			}
		}
		else if (((_2557_lit[0LL] == '0') && (_2557_lit.len() > 1LL))) {
			_case_begin_1b3d9c03a:;
			{
				(_2557_lit).mut_slice(1LL);;
				_2567_base=8LLU;
			}
		}
		else {
			_case_begin_1b3d9be5d:;
			{
				_2567_base=10LLU;
			}
		}
		_match_end_1b3d9bdd6:;
	};
	jule::Ptr<_1ac60a55d_Data> _2767_d = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
	jule::Bool _2787_ok = true;;
	jule::I64 _2793_sig = ({
		auto except = _1a9d3d579_ParseInt(_2557_lit, _2567_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2787_ok=false;

			0LL;
		});
	});;
	if (_2787_ok) {
		(*_2767_d.alloc)._field_Constant=static__1aa129843_NewI64(_2793_sig);
		(*_2767_d.alloc)._field_Kind=_1ac728e0c_primInt;
	} else {
		jule::U64 _2874_unsig = ({
			auto except = _1a9d3d0c3_ParseUint(_2557_lit, _2567_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1ac60c818_pushErr(_self_, (*((*(_25223_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2767_d.alloc)._field_Constant=static__1aa129b0c_NewU64(_2874_unsig);
		(*_2767_d.alloc)._field_Kind=_1ac728a44_primUint;
	};
	(*_2767_d.alloc)._field_Model=jule::Any((*_2767_d.alloc)._field_Constant, &__jule_any_type20);
	(*_2767_d.alloc)._field_untyped=true;
	if ((!(_1ac60d8a2_applyNumericPrefix(_self_, &(_2767_d))))) {
		_1ac635159_fitBitsize(&(_2767_d));
	};
	return _2767_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac60ea07_litNum(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr>* _30723_l) {
	{
		
		if (_1ac49335d_IsFloat((*((*(_30723_l))))._field_Value)) {
			_case_begin_1b3da4493:;
			{
				return _1ac60e375_litFloat(_self_, _30723_l);;
			}
		}
		else {
			_case_begin_1b3da442c:;
			{
				return _1ac60e6b6_litInt(_self_, _30723_l);;
			}
		}
		_match_end_1b3da431c:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac60ed48_evalLit(_1ac60c285_eval* _self_, jule::Ptr<_1ac4aba4c_LitExpr> _31623_lit) {
	{
		
		if (_1ac492428_IsStr((*(_31623_lit))._field_Value)) {
			_case_begin_1b3da56b4:;
			{
				return _1ac60dbe3_litStr(_self_, &(_31623_lit));;
			}
		}
		else if (_1ac492978_IsRune((*(_31623_lit))._field_Value)) {
			_case_begin_1b3da572a:;
			{
				return _1ac60e034_litRune(_self_, &(_31623_lit));;
			}
		}
		else if (_1ac493627_IsNum((*(_31623_lit))._field_Value)) {
			_case_begin_1b3da5791:;
			{
				return _1ac60ea07_litNum(_self_, &(_31623_lit));;
			}
		}
		else {
			_case_begin_1b3da50a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3da4e99:;
	};
}



inline jule::Any _1ac610189_findBuiltins(_1ac60c285_eval* _self_, jule::Str* _32929_ident) {
	if (_1ac575242_IsPub((*(_32929_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data1)) {
				_case_begin_1b3da7a29:;
				{
					jule::Any _3339_def = _1ac634e28_findBuiltinsImport(_32929_ident, (*(_self_))._field_lookup.cast_ptr<_1ac557cd5_ImportInfo>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data1));;
					if ((_3339_def != nullptr)) {
						return _3339_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3)) {
				_case_begin_1b3da7771:;
				{
					jule::Any _3389_def = _1ac635b82_findBuiltinsSema(_32929_ident, (*(_self_))._field_lookup.cast_ptr<_1ac578256_sema>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));;
					if ((_3389_def != nullptr)) {
						return _3389_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)) {
				_case_begin_1b3da7a90:;
				{
					jule::Any _3439_def = _1ac635b82_findBuiltinsSema(_32929_ident, (*((*(_self_))._field_lookup.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)))._field_s);;
					if ((_3439_def != nullptr)) {
						return _3439_def;;
					};
				}
			}
			_match_end_1b3da796e:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1ac72b4e7_findBuiltinDef(_32929_ident);;
}



inline jule::Any _1ac610585_getDef(_1ac60c285_eval* _self_, jule::Str* _35623_ident, jule::Bool _35635_binded) {
	jule::Ptr<_1ac5a2527_Var> _3617_v = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65c170_FindVar((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3617_v != nullptr)) {
		return jule::Any(_3617_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ac63c4e6_TypeAlias> _3667_ta = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65c56b_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3667_ta != nullptr)) {
		return jule::Any(_3667_ta, &__jule_any_type27);;
	};
	if ((!(_35635_binded))) {
		jule::Ptr<_1ac5030b0_Enum> _3728_enm = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65d4e5_FindEnum((*(_self_))._field_lookup.data, (*(_35623_ident)));;
		if ((_3728_enm != nullptr)) {
			return jule::Any(_3728_enm, &__jule_any_type24);;
		};
		jule::Ptr<_1ac5047ba_TypeEnum> _3778_tenm = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65d836_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35623_ident)));;
		if ((_3778_tenm != nullptr)) {
			return jule::Any(_3778_tenm, &__jule_any_type25);;
		};
	};
	jule::Ptr<_1ac4dbd46_Fn> _3837_f = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65cd63_FindFn((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3837_f != nullptr)) {
		return jule::Any(_3837_f, &__jule_any_type26);;
	};
	jule::Ptr<_1ac4c767d_Struct> _3887_s = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65c967_FindStruct((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3887_s != nullptr)) {
		return jule::Any(_3887_s, &__jule_any_type23);;
	};
	return _1ac610189_findBuiltins(_self_, _35623_ident);;
}



inline jule::Ptr<_1ac4e308e_ReferenceStack> _1ac61081b_getOwnerRefers(_1ac60c285_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)) {
			_case_begin_1b3db2072:;
			{
				return _1ac540b58_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));;
			}
		}
		else {
			_case_begin_1b3db0911:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1b3db089a:;
	};
	return nullptr;;
}



inline void _1b3dca013_pushReference(_1ac60c285_eval* _self_, jule::Ptr<_1ac4dee04_FnIns>* _41437_ref) {
	jule::Ptr<_1ac4e308e_ReferenceStack> _4157_refers = _1ac61081b_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1b3dcc4aa_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1ac4e3da3_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type7));
	};
}

inline void _1b3de1ab8_pushReference(_1ac60c285_eval* _self_, jule::Ptr<_1ac5a2527_Var>* _41437_ref) {
	jule::Ptr<_1ac4e308e_ReferenceStack> _4157_refers = _1ac61081b_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1b3de3e0b_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1ac4e3da3_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type8));
	};
}

inline void _1b366885c_pushReference(_1ac60c285_eval* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _41437_ref) {
	jule::Ptr<_1ac4e308e_ReferenceStack> _4157_refers = _1ac61081b_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1b366aebe_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1ac4e3da3_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac610e15__evalEnum(_1ac60c285_eval* _self_, jule::Ptr<_1ac5030b0_Enum> _42125_enm) {
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_42125_enm, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac611311_evalEnum(_1ac60c285_eval* _self_, jule::Ptr<_1ac5030b0_Enum> _43028_enm, jule::Ptr<_1ac4912c3_Token> _43040_errorToken) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_43028_enm))._field_Public, (*_43028_enm.alloc)._field_Token)))) {
		_1ac60c818_pushErr(_self_, _43040_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_43028_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ac610e15__evalEnum(_self_, _43028_enm);;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac611652__evalTypeEnum(_1ac60c285_eval* _self_, jule::Ptr<_1ac5047ba_TypeEnum> _43929_enm) {
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_43929_enm, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac611a4d_evalTypeEnum(_1ac60c285_eval* _self_, jule::Ptr<_1ac5047ba_TypeEnum> _44832_enm, jule::Ptr<_1ac4912c3_Token> _44848_errorToken) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44832_enm))._field_Public, (*_44832_enm.alloc)._field_Token)))) {
		_1ac60c818_pushErr(_self_, _44848_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_44832_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ac611652__evalTypeEnum(_self_, _44832_enm);;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac611d8e__evalStruct(_1ac60c285_eval* _self_, jule::Ptr<_1ac4ca4d8_StructIns> _45727_s) {
	jule::Ptr<_1ac60a55d_Data> _4587_d = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45727_s, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45727_s, &__jule_any_type9), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
	if ((((*(_45727_s))._field_Decl != nullptr) && (*(*(_45727_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4587_d))._field_Kind))._field_BindIdent=(*(*(_45727_s))._field_Decl.alloc)._field_Ident;
	};
	return _4587_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac61228a_evalStruct(_1ac60c285_eval* _self_, jule::Ptr<_1ac4c767d_Struct> _47130_s, jule::Ptr<_1ac4912c3_Token> _47146_errorToken) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_47130_s))._field_Public, (*_47130_s.alloc)._field_Token)))) {
		_1ac60c818_pushErr(_self_, _47146_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_47130_s.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ac61293e_checkDeprecated(_self_, &((*_47130_s.alloc)._field_Directives), _47146_errorToken);
	jule::Ptr<_1ac4ca4d8_StructIns> _4807_ins = _1ac4c7b23_instance(_47130_s);;
	if (((*_47130_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1ac4ca4d8_StructIns> _4878_exist = _1ac4c7e31_appendInstance(_47130_s, &(_4807_ins));;
		if ((_4878_exist != nullptr)) {
			_4807_ins=_4878_exist;
		} else {
			if ((!(_1ac59a6a7_precheckStructIns((*(_self_))._field_s, &(_4807_ins), _47146_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1ac611d8e__evalStruct(_self_, _4807_ins);;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6125cb_evalFnIns(_1ac60c285_eval* _self_, jule::Ptr<_1ac4dee04_FnIns> _50025_f) {
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_50025_f, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_50025_f, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline void _1ac61293e_checkDeprecated(_1ac60c285_eval* _self_, jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _50936_directives, jule::Ptr<_1ac4912c3_Token> _50967_tok) {
	if (_1ac60d30d_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1ac4a5b9a_Directive> _5143_d = _1ac634a60_findDirective(_50936_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_5143_d != nullptr)) {
		if (((*_5143_d.alloc)._field_Args.len() == 0LL)) {
			_1ac60c818_pushErr(_self_, _50967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4); __jule_collection; }));
		} else {
			_1ac60c818_pushErr(_self_, _50967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_5143_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
		_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac612d3a_evalFn(_1ac60c285_eval* _self_, jule::Ptr<_1ac4dbd46_Fn> _52526_f, jule::Ptr<_1ac4912c3_Token> _52534_errorToken) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_52526_f))._field_Public, (*_52526_f.alloc)._field_Token)))) {
		_1ac60c818_pushErr(_self_, _52534_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_52526_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ac61293e_checkDeprecated(_self_, &((*_52526_f.alloc)._field_Directives), _52534_errorToken);
	jule::Ptr<_1ac4dee04_FnIns> _5347_ins = _1ac4dd5d9_instance(_52526_f);;
	if (((*_52526_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1ac4dee04_FnIns> _5418_exist = _1ac4dd8e7_appendInstance(_52526_f, &(_5347_ins));;
		if ((_5418_exist != nullptr)) {
			_5347_ins=_5418_exist;
		};
	};
	_1b3dca013_pushReference(_self_, &(_5347_ins));
	return _1ac6125cb_evalFnIns(_self_, _5347_ins);;
}



inline void _1ac613258_pushIllegalCycleError(_1ac60c285_eval* _self_, jule::Ptr<_1ac5a2527_Var>* _55038_v1, jule::Ptr<_1ac5a2527_Var>* _55049_v2, _1b097ade7_StrBuilder* _55064_message) {
	;
	jule::Str _5523_refers_to = _1b08b6c9a_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_55038_v1))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_55049_v2))))._field_Ident, &__jule_any_type4); __jule_collection; }));;
	jule::Slice<jule::U8> _5533_buf = _1b0985e8a_Buf(_55064_message);;
	_1b0984be2_WriteStr(_55064_message, _1b0966b08_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1b0984be2_WriteStr(_55064_message, _5523_refers_to);
	_1b0984e9a_WriteByte(_55064_message, '\n');
	_1b0984939_Write(_55064_message, _5533_buf);
}



inline jule::Bool _1ac613654_checkCrossCycle(_1ac60c285_eval* _self_, jule::Ptr<_1ac5a2527_Var>* _56032_v, _1b097ade7_StrBuilder* _56046_message) {
	{
		auto expr = &((*((*(_56032_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3dd1877:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> *_56110_d = it;
			{
				if (((*(_56110_d)) == (*(_self_))._field_owner)) {
					_1ac613258_pushIllegalCycleError(_self_, _56032_v, _56110_d, _56046_message);
					return false;;
				};
				if ((!(_1ac613654_checkCrossCycle(_self_, _56110_d, _56046_message)))) {
					_1ac613258_pushIllegalCycleError(_self_, _56032_v, _56110_d, _56046_message);
					return false;;
				};
			}
			_iter_next_1b3dd1877:;
			++it;
			goto _iter_begin_1b3dd1877;
		}
		_iter_end_1b3dd1877:;
	};
	return true;;
}



inline jule::Bool _1ac613a50_checkIllegalCycles(_1ac60c285_eval* _self_, jule::Ptr<_1ac5a2527_Var>* _57739_v, jule::Ptr<_1ac4912c3_Token> _57748_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57739_v)))) {
		_1ac60c818_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1b097ade7_StrBuilder _5907_message = static__1b097b1e4_New(32LL);;
	if ((!(_1ac613654_checkCrossCycle(_self_, _57739_v, &(_5907_message))))) {
		jule::Str _5938_errMsg = _1b09854d9_Str(&_5907_message);;
		_1b09856d7_Clear(&_5907_message);
		_1ac613258_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57739_v, &(_5907_message));
		_5938_errMsg+=_1b09854d9_Str(&_5907_message);
		_1ac60c818_pushErr(_self_, _57748_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5938_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1ac5a2527_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_57739_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac613e4b_evalVar(_1ac60c285_eval* _self_, jule::Ptr<_1ac5a2527_Var> _60527_v, jule::Ptr<_1ac4912c3_Token> _60536_errorToken) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_60527_v))._field_Public, (*_60527_v.alloc)._field_Token)))) {
		_1ac60c818_pushErr(_self_, _60536_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_60527_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ac61293e_checkDeprecated(_self_, &((*_60527_v.alloc)._field_Directives), _60536_errorToken);
	if (((*_60527_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1b3de9252;
	};
	(*_60527_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3)) {
			_case_begin_1b3dda60b:;
			{
				jule::Bool _6244_ok = _1ac613a50_checkIllegalCycles(_self_, &(_60527_v), _60536_errorToken);;
				if ((!(_6244_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)) {
			_case_begin_1b3dd9bb0:;
			{
				jule::Ptr<_1ac53c25e_scopeChecker> _6298_s = (*(_self_))._field_lookup.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0);;
				jule::Ptr<_1ac53c25e_scopeChecker> _6308_root = _1ac54063b_getRoot(_6298_s);;
				if ((((((*_60527_v.alloc)._field_Scope != nullptr) && (!((*_60527_v.alloc)._field_Constant))) && ((*(_6308_root))._field_captured != nullptr)) && _1ac63a88a_isVarCaptured(_6308_root, _6298_s, _60527_v))) {
					_1ac5403a5_pushCaptured(_6308_root, &(_60527_v));
				};
				if (((!((*_60527_v.alloc)._field_Reference)) || _1ac60d30d_isUnsafe(_self_))) {
					goto _match_end_1b3dda573;
				};
				while ((((*_6298_s.alloc)._field_owner == nullptr) && ((*_6298_s.alloc)._field_parent != nullptr))) {
					{
						_6298_s=(*_6298_s.alloc)._field_parent;
					}
				_iter_next_1b3dde17b:;
				}
				_iter_end_1b3dde17b:;;
				if (((((*_6298_s.alloc)._field_owner != nullptr) && (*((*_6298_s.alloc)._field_owner))._field_Anon) && ((*_60527_v.alloc)._field_Scope != (*((*_6298_s.alloc)._field_owner))._field_Scope))) {
					_1ac60c818_pushErr(_self_, _60536_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_60527_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		_match_end_1b3dda573:;
	};
	if (((*_60527_v.alloc)._field_Scope == nullptr)) {
		_1b3de1ab8_pushReference(_self_, &(_60527_v));
	};
	if (((((!((*_60527_v.alloc)._field_Binded)) && (*_60527_v.alloc)._field_Constant) && ((*_60527_v.alloc)._field_Scope == nullptr)) && (((*_60527_v.alloc)._field_Value == nullptr) || ((*((*_60527_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1ac604d93_SymbolTable> _6588_varfile = _1ac554d8c_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_60527_v));;
		jule::Ptr<_1ac604d93_SymbolTable> _6598_file = _1ac57a984_getCurrentFile((*(_self_))._field_s);;
		_1ac57ac3c_setCurrentFile((*(_self_))._field_s, _6588_varfile);
		_1ac598aa1_checkVar((*(_self_))._field_s, &(_60527_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3));
		_1ac57ac3c_setCurrentFile((*(_self_))._field_s, _6598_file);
		if ((((*_60527_v.alloc)._field_Value == nullptr) || ((*((*_60527_v.alloc)._field_Value))._field_Data == nullptr))) {
			return nullptr;;
		};
	};
	if ((((*_60527_v.alloc)._field_Kind == nullptr) || ((*((*_60527_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_60527_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		jule::Ptr<_1ac604d93_SymbolTable> _6888_varfile = _1ac554d8c_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_60527_v));;
		jule::Ptr<_1ac604d93_SymbolTable> _6898_file = _1ac57a984_getCurrentFile((*(_self_))._field_s);;
		_1ac57ac3c_setCurrentFile((*(_self_))._field_s, _6888_varfile);
		_1ac598aa1_checkVar((*(_self_))._field_s, &(_60527_v), (*(_self_))._field_lookup);
		_1ac57ac3c_setCurrentFile((*(_self_))._field_s, _6898_file);
		if ((((*_60527_v.alloc)._field_Kind == nullptr) || ((*((*_60527_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1b3de9252:;
	jule::Ptr<_1ac60a55d_Data> _7047_d = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=(*((*_60527_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_60527_v.alloc)._field_Mutable, ._field_Reference=(*_60527_v.alloc)._field_Reference, ._field_Lvalue=(!((*_60527_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_60527_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
	if ((((!((*_60527_v.alloc)._field_Binded)) && _1ac5a2934_IsInitialized(_60527_v)) && ((*((*_60527_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_7047_d))._field_IsRune=(*((*((*_60527_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_60527_v.alloc)._field_Constant && ((*((*((*_60527_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_7047_d.alloc)._field_Constant=jule::new_ptr<_1aa1293c0_Const>((*(*((*((*(_60527_v))._field_Value))._field_Data))._field_Constant.alloc));
		(*_7047_d.alloc)._field_Model=jule::Any((*_7047_d.alloc)._field_Constant, &__jule_any_type20);
		if (_1ac5a2e51_untypedConstant(_60527_v)) {
			_1ac60d8a2_applyNumericPrefix(_self_, &(_7047_d));
			(*_7047_d.alloc)._field_untyped=true;
		};
	};
	return _7047_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac614347_evalTypeAlias(_1ac60c285_eval* _self_, jule::Ptr<_1ac63c4e6_TypeAlias> _72833_ta, jule::Ptr<_1ac4912c3_Token> _72849_errorToken) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_72833_ta))._field_Public, (*_72833_ta.alloc)._field_Token)))) {
		_1ac60c818_pushErr(_self_, _72849_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_72833_ta.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_72833_ta.alloc)._field_Used=true;
	jule::Trait _7377_kind = (*((*((*_72833_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1ac60a55d_Data> _73811_d = nullptr;;
	{
		auto &_match_expr{ _7377_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)) {
			_case_begin_1b3e0768e:;
			{
				_73811_d=_1ac611d8e__evalStruct(_self_, _7377_kind.cast_ptr<_1ac4ca4d8_StructIns>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data3)) {
			_case_begin_1b3e0a461:;
			{
				_73811_d=_1ac610e15__evalEnum(_self_, _7377_kind.cast_ptr<_1ac5030b0_Enum>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4)) {
			_case_begin_1b3e0a8e5:;
			{
				_73811_d=_1ac611652__evalTypeEnum(_self_, _7377_kind.cast_ptr<_1ac5047ba_TypeEnum>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1b3e06094:;
			{
				_73811_d=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_72833_ta))._field_Kind))._field_Kind.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});
				if ((*_72833_ta.alloc)._field_Binded) {
					(*((*(_73811_d))._field_Kind))._field_BindIdent=(*_72833_ta.alloc)._field_Ident;
				} else {
					(*((*(_73811_d))._field_Kind))._field_BindIdent=(*(*((*(_72833_ta))._field_Kind))._field_Kind.alloc)._field_BindIdent;
				};
				(*(_73811_d))._field_Model=jule::Any((*_73811_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		_match_end_1b3e05e1d:;
	};
	(*((*(_73811_d))._field_Kind))._field_Generic=(*_72833_ta.alloc)._field_Generic;
	return _73811_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac614743_evalDef(_1ac60c285_eval* _self_, jule::Any* _76728_def, jule::Ptr<_1ac4912c3_Token> _76742_ident) {
	{
		auto &_match_expr{ (*(_76728_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b3e0e0e1:;
			{
				return _1ac613e4b_evalVar(_self_, (*(_76728_def)).cast_ptr<_1ac5a2527_Var>(&__jule_any_type8), _76742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b3e0ddb0:;
			{
				return _1ac611311_evalEnum(_self_, (*(_76728_def)).cast_ptr<_1ac5030b0_Enum>(&__jule_any_type24), _76742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b3e0e157:;
			{
				return _1ac611a4d_evalTypeEnum(_self_, (*(_76728_def)).cast_ptr<_1ac5047ba_TypeEnum>(&__jule_any_type25), _76742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b3e0e1bd:;
			{
				return _1ac61228a_evalStruct(_self_, (*(_76728_def)).cast_ptr<_1ac4c767d_Struct>(&__jule_any_type23), _76742_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b3e0e234:;
			{
				jule::Ptr<_1ac4dbd46_Fn> _7788_f = (*(_76728_def)).cast_ptr<_1ac4dbd46_Fn>(&__jule_any_type26);;
				if ((!(*(_7788_f))._field_Ident.equal("init", 4))) {
					return _1ac612d3a_evalFn(_self_, _7788_f, _76742_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b3e0e2ab:;
			{
				return _1ac6125cb_evalFnIns(_self_, (*(_76728_def)).cast_ptr<_1ac4dee04_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b3e0e333:;
			{
				return _1ac614347_evalTypeAlias(_self_, (*(_76728_def)).cast_ptr<_1ac63c4e6_TypeAlias>(&__jule_any_type27), _76742_ident);;
			}
		}
		_match_end_1b3e0dee2:;
	};
	_1ac60c818_pushErr(_self_, _76742_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_76742_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac614a84_evalIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac4ac3cc_IdentExpr> _79129_ident) {
	jule::Any _7927_def = _1ac610585_getDef(_self_, &((*(_79129_ident))._field_Ident), (*_79129_ident.alloc)._field_Binded);;
	return _1ac614743_evalDef(_self_, &(_7927_def), (*_79129_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac614dc5_evalUnary(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4acb6e_UnaryExpr> _79630_u) {
	_1ac62b57e_unaryEval _7977_unary = static__1ac62ba02_new(_self_);;
	return _1ac62ce32_eval(&_7977_unary, _79630_u);;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac615216_evalVariadic(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ad048_VariadicExpr> _80133_v) {
	if (((*(_80133_v))._field_Expr == nullptr)) {
		_1ac60c818_pushErr(_self_.ptr(), (*_80133_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _8077_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_8077_prefix;
	});;
	jule::Ptr<_1ac60a55d_Data> _8117_d = _1ac62b0ea_evalExpr(_self_, (*_80133_v.alloc)._field_Expr);;
	if ((_8117_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac640708_Variadicable((*(_8117_d))._field_Kind.ptr())))) {
		_1ac60c818_pushErr(_self_, (*_80133_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_8117_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1ac63a45b_makeVariadic(&(_8117_d), (*(_1ac6419e5_Slc((*(_8117_d))._field_Kind)))._field_Elem);
	return _8117_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac615557_evalUnsafe(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4abe26_UnsafeExpr> _82331_u) {
	jule::Bool _8243_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1ac60a55d_Data> _8267_d = _1ac62b0ea_evalExpr(_self_, (*(_82331_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_8243_unsafety;
	return _8267_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac615898_evalArr(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b2118_SliceExpr> _83128_s) {
	jule::Ptr<_1ac64cc21_Arr> _8337_pt = _1ac64175e_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1ac64cc21_Arr> _8357_arr = jule::new_ptr<_1ac64cc21_Arr>(_1ac64cc21_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_8337_pt))._field_Elem});;
	jule::Bool _8417_filled = false;;
	if (((*(_83128_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_83128_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type78) {
				_case_begin_1b3e1e563:;
				{
					if (((*((*((*(_83128_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1ac4ad048_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1b3e1e4a8;
					};
					if ((*_8337_pt.alloc)._field_Auto) {
						_1ac60c818_pushErr(_self_, (*_83128_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_8417_filled=true;
					((*(_83128_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1b3e1e4a8:;
		};
	};
	(*(_8357_arr))._field_N=(*_83128_s.alloc)._field_Exprs.len();
	if ((!((*_8337_pt.alloc)._field_Auto))) {
		if (((*_8357_arr.alloc)._field_N > (*_8337_pt.alloc)._field_N)) {
			_1ac60c818_pushErr(_self_, (*_83128_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_8357_arr.alloc)._field_N < (*_8337_pt.alloc)._field_N)) {
			(*_8357_arr.alloc)._field_N=(*_8337_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1ac4d4adb_ArrayExprModel> _8707_model = jule::new_ptr<_1ac4d4adb_ArrayExprModel>(_1ac4d4adb_ArrayExprModel{._field_Kind=_8357_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_8417_filled) {
		(*(_8707_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8707_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_83128_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _8797_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_8357_arr.alloc)._field_Elem;
	{
		auto expr = &((*_83128_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3e2657b:;
		if (it != expr_end) {
			jule::Ptr<_1ac4aaab2_Expr> _88115_elem = *it;
			{
				jule::Ptr<_1ac60a55d_Data> _8828_d = _1ac62b0ea_evalExpr(_self_, _88115_elem);;
				if ((_8828_d == nullptr)) {
					goto _iter_next_1b3e2657b;
				};
				;
				if (_1ac58895e_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8357_arr.alloc)._field_Elem), &(_8828_d), &((*(_88115_elem))._field_Token))) {
					_1ac5841c9_checkAssignType((*(_self_))._field_s, false, &((*_8357_arr.alloc)._field_Elem), &(_8828_d), (*_88115_elem.alloc)._field_Token, _1ac61081b_getOwnerRefers(_self_));
				};
				(*(_8707_model))._field_Elems=jule::append((*_8707_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8828_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1b3e2657b:;
			++it;
			goto _iter_begin_1b3e2657b;
		}
		_iter_end_1b3e2657b:;
	};
	(*_self_.alloc)._field_prefix=_8797_prefix;
	if (_8417_filled) {
		(*_8707_model.alloc)._field_Elems=jule::append((*_8707_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8357_arr, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8707_model, &__jule_any_type87), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac615d4e_evalExpSlc(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b2118_SliceExpr> _90831_s, jule::Ptr<_1ac63d2d8_TypeKind> _90850_t, jule::Any _90868_first) {
	jule::Ptr<_1ac64a900_Slc> _9097_slc = jule::new_ptr<_1ac64a900_Slc>(_1ac64a900_Slc{._field_Elem=_90850_t});;
	jule::I64 _9137_i = 0LL;;
	jule::Ptr<_1ac4d1ba4_SliceExprModel> _9147_model = jule::new_ptr<_1ac4d1ba4_SliceExprModel>(_1ac4d1ba4_SliceExprModel{._field_ElemKind=_90850_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_90831_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_90868_first != nullptr)) {
		(*(_9147_model))._field_Elems=jule::append((*_9147_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90868_first; __jule_collection; }));
		_9137_i=1LL;
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _9237_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_9097_slc))._field_Elem;
	{
		auto expr = (*_90831_s.alloc)._field_Exprs.slice(_9137_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b3e3228a:;
		if (it != expr_end) {
			jule::Ptr<_1ac4aaab2_Expr> _92515_elem = *it;
			{
				jule::Ptr<_1ac60a55d_Data> _9268_d = _1ac62b0ea_evalExpr(_self_, _92515_elem);;
				if ((_9268_d != nullptr)) {
					;
					if (_1ac58895e_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_9097_slc.alloc)._field_Elem), &(_9268_d), &((*(_92515_elem))._field_Token))) {
						_1ac5841c9_checkAssignType((*(_self_))._field_s, false, &((*_9097_slc.alloc)._field_Elem), &(_9268_d), (*_92515_elem.alloc)._field_Token, _1ac61081b_getOwnerRefers(_self_));
					};
					(*_9147_model.alloc)._field_Elems=jule::append((*_9147_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9268_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1b3e3228a:;
			++it;
			goto _iter_begin_1b3e3228a;
		}
		_iter_end_1b3e3228a:;
	};
	(*_self_.alloc)._field_prefix=_9237_prefix;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_9097_slc, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9147_model, &__jule_any_type79), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac616190_evalSliceExpr(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b2118_SliceExpr> _94634_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1ac64175e_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1b3e36ec6:;
				{
					return _1ac615898_evalArr(_self_, _94634_s);;
				}
			}
			else if ((_1ac6419e5_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1b3e37070:;
				{
					jule::Ptr<_1ac64a900_Slc> _9529_pt = _1ac6419e5_Slc((*(_self_))._field_prefix);;
					return _1ac615d4e_evalExpSlc(_self_, _94634_s, (*(_9529_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1b3e36e1b:;
		};
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _9577_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_94634_s))._field_Exprs.len() == 0LL)) {
		_1ac60c818_pushErr(_self_, (*_94634_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4aaab2_Expr> _9657_firstExpr = (*_94634_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1ac60a55d_Data> _9667_firstElem = _1ac62b0ea_evalExpr(_self_, _9657_firstExpr);;
	if ((_9667_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1ac58895e_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9667_firstElem))._field_Kind), &(_9667_firstElem), &((*(_9657_firstExpr))._field_Token));
	jule::Ptr<_1ac60a55d_Data> _9767_d = _1ac615d4e_evalExpSlc(_self_, _94634_s, (*(_9667_firstElem))._field_Kind, (*(_9667_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_9577_prefix;
	return _9767_d;;
}



inline jule::Bool _1ac61658b_checkIntegerIndexingByData(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _98247_d, jule::Ptr<_1ac4912c3_Token> _98261_token) {
	jule::Str _9833_errKey = _1ac637d3d_checkDataForIntegerIndexing(&((*(_self_))._field_s), _98247_d, &(_98261_token), _1ac61081b_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9833_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1b3e40133:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1b3e3ed14:;
			{
				_1ac60c818_pushErr(_self_, _98261_token, _9833_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_98247_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1b3e3e660:;
			{
				_1ac60c818_pushErr(_self_, _98261_token, _9833_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1b3e3ec9d:;
	};
	return false;;
}



inline void _1ac6169a9_indexingPtr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _99532_d, jule::Ptr<_1ac60a55d_Data>* _99547_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _99566_i) {
	_1ac61658b_checkIntegerIndexingByData(_self_, _99547_index, (*((*(_99566_i))))._field_Token);
	(*((*(_99532_d))))._field_Lvalue=true;
	jule::Ptr<_1ac64d6e4_Ptr> _9997_ptr = _1ac640eab_Ptr((*((*(_99532_d))))._field_Kind.ptr());;
	{
		
		if (_1ac64e261_IsUnsafe(_9997_ptr.ptr())) {
			_case_begin_1b3e43004:;
			{
				_1ac60c818_pushErr(_self_, (*((*(_99566_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1ac60d30d_isUnsafe(_self_)))) {
			_case_begin_1b3e4308c:;
			{
				_1ac60c818_pushErr(_self_, (*((*(_99566_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b3e42e5a:;
	};
	(*((*(_99532_d))))._field_Kind=(*(_9997_ptr))._field_Elem;
}



inline void _1ac616dc7_indexingArr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _101132_d, jule::Ptr<_1ac60a55d_Data>* _101147_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _101166_i) {
	jule::Ptr<_1ac64cc21_Arr> _10127_arr = _1ac64175e_Arr((*((*(_101132_d))))._field_Kind.ptr());;
	(*((*(_101132_d))))._field_Kind=(*(_10127_arr))._field_Elem;
	_1ac61658b_checkIntegerIndexingByData(_self_, _101147_index, (*((*(_101166_i))))._field_Token);
	(*((*(_101132_d))))._field_Lvalue=true;
	if ((_1ac60ae98_IsConst((*(_101147_index)).ptr()) && (_1aa12c0b5_AsF64((*((*(_101147_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_10127_arr.alloc)._field_N)))) {
		_1ac60c818_pushErr(_self_, (*((*(_101166_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1ac6172e5_indexingSlc(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _102132_d, jule::Ptr<_1ac60a55d_Data>* _102147_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _102166_i) {
	jule::Ptr<_1ac64a900_Slc> _10227_slc = _1ac6419e5_Slc((*((*(_102132_d))))._field_Kind.ptr());;
	(*((*(_102132_d))))._field_Kind=(*(_10227_slc))._field_Elem;
	_1ac61658b_checkIntegerIndexingByData(_self_, _102147_index, (*((*(_102166_i))))._field_Token);
	(*((*(_102132_d))))._field_Lvalue=true;
	if ((!(_1ac60ae98_IsConst((*(_102147_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_102132_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b3e4a726:;
			{
				jule::Ptr<_1ac4d1ba4_SliceExprModel> _10338_m = (*((*(_102132_d))))._field_Model.unsafe_cast_ptr<_1ac4d1ba4_SliceExprModel>();;
				jule::F64 _10344_indx = _1aa12c0b5_AsF64((*((*(_102147_index))))._field_Constant.ptr());;
				if ((_10344_indx >= static_cast<jule::F64>((*(_10338_m))._field_Elems.len()))) {
					_1ac60c818_pushErr(_self_, (*((*(_102166_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_102132_d))))._field_Model=(*(_10338_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_10344_indx))];
					(*((*(_102132_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1b3e4a6b0:;
	};
}



inline void _1ac617713_indexingMap(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _104432_d, jule::Ptr<_1ac60a55d_Data>* _104447_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _104466_i) {
	(*((*(_104432_d))))._field_Lvalue=true;
	if (((*(_104447_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac64c094_Map> _10497_m = _1ac64252e_Map((*((*(_104432_d))))._field_Kind.ptr());;
	_1ac5e3b73_assignTypeChecker _10507_atc = _1ac5e3b73_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_10497_m))._field_Key, ._field_d=(*(_104447_index)), ._field_errorToken=(*((*(_104466_i))))._field_Token, ._field_refers=_1ac61081b_getOwnerRefers(_self_)};;
	_1ac5e4b74_check(&_10507_atc);
	(*((*(_104432_d))))._field_Kind=(*_10497_m.alloc)._field_Val;
}



inline void _1ac617b31_indexingStr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _106132_d, jule::Ptr<_1ac60a55d_Data>* _106147_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _106166_i) {
	(*((*(_106132_d))))._field_Kind=_1ac729c10_primU8;
	(*((*(_106132_d))))._field_Mutable=false;
	(*((*(_106132_d))))._field_Lvalue=true;
	if (((*(_106147_index)) == nullptr)) {
		return;;
	};
	_1ac61658b_checkIntegerIndexingByData(_self_, _106147_index, (*((*(_106166_i))))._field_Token);
	if ((!(_1ac60ae98_IsConst((*(_106147_index)).ptr())))) {
		(*((*(_106132_d))))._field_Constant=nullptr;
		(*((*(_106132_d))))._field_untyped=false;
		return;;
	};
	if (_1ac60ae98_IsConst((*(_106132_d)).ptr())) {
		jule::I64 _10794_j = _1aa12ba98_AsI64((*((*(_106147_index))))._field_Constant.ptr());;
		jule::Str _10804_s = _1aa12b57b_ReadStr((*((*(_106132_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10794_j) >= _10804_s.len())) {
			_1ac60c818_pushErr(_self_, (*((*(_106166_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1aa12c626_SetU64((*((*(_106132_d))))._field_Constant, static_cast<jule::U64>(_10804_s[_10794_j]));
		};
	};
}



inline void _1ac61804e_comptimeRange(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _108934_d, jule::Ptr<_1ac60a55d_Data>* _108949_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _108968_i) {
	if (((*(_108949_index)) == nullptr)) {
		(*(_108934_d))=nullptr;
		return;;
	};
	if ((!(_1ac61658b_checkIntegerIndexingByData(_self_, _108949_index, (*((*((*(_108968_i))))._field_Index))._field_Token)))) {
		(*(_108934_d))=nullptr;
		return;;
	};
	if ((!(_1ac60ae98_IsConst((*(_108949_index)).ptr())))) {
		(*(_108934_d))=nullptr;
		_1ac60c818_pushErr(_self_, (*(*((*(_108968_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _11043_j = static_cast<jule::I64>(_1aa12ba98_AsI64((*((*(_108949_index))))._field_Constant.ptr()));;
	jule::Ptr<_1ac5071e6_comptimeRange> _11057_ci = _1ac643d38_comptimeRange((*((*(_108934_d))))._field_Kind.ptr());;
	if ((_11043_j >= ((_1ac506ec6_comptimeRangeKindMptrData*)(*(_11057_ci))._field_kind.safe_type())->_1ac506d72_len((*(_11057_ci))._field_kind.data))) {
		(*(_108934_d))=nullptr;
		_1ac60c818_pushErr(_self_, (*(*((*(_108968_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1ac506ec6_comptimeRangeKindMptrData*)(*_11057_ci.alloc)._field_kind.safe_type())->_1ac50635a_index((*_11057_ci.alloc)._field_kind.data, _108934_d, _11043_j);
}



inline void _1ac61846c_toIndexing(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _111431_d, jule::Ptr<_1ac60a55d_Data>* _111446_index, jule::Ptr<_1ac4b2a75_IndexingExpr>* _111465_i) {
	{
		
		if ((_1ac640eab_Ptr((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3e5c0b7:;
			{
				_1ac6169a9_indexingPtr(_self_, _111431_d, _111446_index, _111465_i);
				return;;
			}
		}
		else if ((_1ac64175e_Arr((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3e5c161:;
			{
				_1ac616dc7_indexingArr(_self_, _111431_d, _111446_index, _111465_i);
				return;;
			}
		}
		else if ((_1ac6419e5_Slc((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3e5c1c7:;
			{
				_1ac6172e5_indexingSlc(_self_, _111431_d, _111446_index, _111465_i);
				return;;
			}
		}
		else if ((_1ac64252e_Map((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3e5c23d:;
			{
				_1ac617713_indexingMap(_self_, _111431_d, _111446_index, _111465_i);
				return;;
			}
		}
		else if ((_1ac64098e_Prim((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3e5c2a4:;
			{
				jule::Ptr<_1ac646401_Prim> _11294_prim = _1ac64098e_Prim((*((*(_111431_d))))._field_Kind);;
				{
					
					if (_1ac6498bb_IsStr(_11294_prim.ptr())) {
						_case_begin_1b3e615b6:;
						{
							_1ac617b31_indexingStr(_self_, _111431_d, _111446_index, _111465_i);
							return;;
						}
					}
					_match_end_1b3e6150b:;
				};
			}
		}
		else if ((_1ac643d38_comptimeRange((*((*(_111431_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3e5c32b:;
			{
				_1ac61804e_comptimeRange(_self_, _111431_d, _111446_index, _111465_i);
				return;;
			}
		}
		_match_end_1b3e5be52:;
	};
	_1ac60c818_pushErr(_self_, (*((*(_111465_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_111431_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1ac618923_pushGenericsFromExprSubIdent(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _114250_sexpr, jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>* _11438_generics, jule::Ptr<_1ac4aaab2_Expr>* _114336_expr) {
	jule::Ptr<_1ac4a7152_SubIdentTypeDecl> _11447_t = jule::new_ptr<_1ac4a7152_SubIdentTypeDecl>(_1ac4a7152_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1ac4a6d88_IdentTypeDecl>>(nullptr)});;
	if ((!(_1ac638db6_pushSubIdentFromExpr(jule::Any((*(_114250_sexpr)), &__jule_any_type88), &(_11447_t))))) {
		_1ac60c818_pushErr(_self_.ptr(), (*((*(_114336_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> &__jule_push_dest = (*(_11438_generics)); __jule_push_dest.push(jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Kind=jule::Any(_11447_t, &__jule_any_type89)})); };
	return true;;
}



inline jule::Bool _1ac618d1e_pushGenericsFromData(jule::Ptr<_1ac60c285_eval> _self_, jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>* _115342_generics, jule::Ptr<_1ac4aaab2_Expr>* _115370_expr) {
	{
		auto &_match_expr{ (*((*(_115370_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b360a39d:;
			{
				jule::Ptr<_1ac4acb6e_UnaryExpr> _11568_u = (*((*(_115370_expr))))._field_Kind.unsafe_cast_ptr<_1ac4acb6e_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_11568_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1b360cc0d:;
						{
							jule::Ptr<_1ac4a82a7_PtrTypeDecl> _11599_kind = jule::new_ptr<_1ac4a82a7_PtrTypeDecl>(_1ac4a82a7_PtrTypeDecl{._field_Elem=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _11609__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4a677d_TypeDecl>(nullptr); __jule_collection; });;
							_1ac618d1e_pushGenericsFromData(_self_, &(_11609__generics), &((*(_11568_u))._field_Expr));
							(*_11599_kind.alloc)._field_Elem=_11609__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> &__jule_push_dest = (*(_115342_generics)); __jule_push_dest.push(jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=(*((*(_115370_expr))))._field_Token, ._field_Kind=jule::Any(_11599_kind, &__jule_any_type73)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1b360e8e1:;
						{
							jule::Ptr<_1ac4a7828_SptrTypeDecl> _11689_kind = jule::new_ptr<_1ac4a7828_SptrTypeDecl>(_1ac4a7828_SptrTypeDecl{._field_Elem=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _11699__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4a677d_TypeDecl>(nullptr); __jule_collection; });;
							_1ac618d1e_pushGenericsFromData(_self_, &(_11699__generics), &((*(_11568_u))._field_Expr));
							(*_11689_kind.alloc)._field_Elem=_11699__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> &__jule_push_dest = (*(_115342_generics)); __jule_push_dest.push(jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=(*((*(_115370_expr))))._field_Token, ._field_Kind=jule::Any(_11689_kind, &__jule_any_type74)})); };
						}
					}
					else {
						_case_begin_1b360bd72:;
						{
							_1ac60c818_pushErr(_self_.ptr(), (*(_11568_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1b360c834:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b360a414:;
			{
				{ jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> &__jule_push_dest = (*(_115342_generics)); __jule_push_dest.push((*((*(_115370_expr))))._field_Kind.cast_ptr<_1ac4a677d_TypeDecl>(&__jule_any_type91)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b3609820:;
			{
				jule::Ptr<_1ac4adbc5_SubIdentExpr> _11838_sexpr = (*((*(_115370_expr))))._field_Kind.unsafe_cast_ptr<_1ac4adbc5_SubIdentExpr>();;
				return _1ac618923_pushGenericsFromExprSubIdent(_self_, &(_11838_sexpr), _115342_generics, _115370_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b3609886:;
			{
				jule::Ptr<_1ac4ac3cc_IdentExpr> _11868_ident = (*((*(_115370_expr))))._field_Kind.unsafe_cast_ptr<_1ac4ac3cc_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> &__jule_push_dest = (*(_115342_generics)); __jule_push_dest.push(jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1ac4a6d88_IdentTypeDecl>(_1ac4a6d88_IdentTypeDecl{._field_Token=(*_11868_ident.alloc)._field_Token, ._field_Ident=(*_11868_ident.alloc)._field_Ident, ._field_Binded=(*(_11868_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>(nullptr)}), &__jule_any_type77)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b3609b3e:;
			{
				{
					auto expr = &((*((*((*(_115370_expr))))._field_Kind.unsafe_cast_ptr<_1ac4ab6a6_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3618c3b:;
					if (it != expr_end) {
						jule::Ptr<_1ac4aaab2_Expr> _119516_texpr = *it;
						{
							if ((!(_1ac618d1e_pushGenericsFromData(_self_, _115342_generics, &(_119516_texpr))))) {
								return false;;
							};
						}
						_iter_next_1b3618c3b:;
						++it;
						goto _iter_begin_1b3618c3b;
					}
					_iter_end_1b3618c3b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b3609ba5:;
			{
				jule::Ptr<_1ac4ad7eb_NsSelectionExpr> _12018_ns = (*((*(_115370_expr))))._field_Kind.unsafe_cast_ptr<_1ac4ad7eb_NsSelectionExpr>();;
				jule::Ptr<_1ac4a6d88_IdentTypeDecl> _12028_decl = jule::new_ptr<_1ac4a6d88_IdentTypeDecl>(_1ac4a6d88_IdentTypeDecl{._field_Token=(*(_12018_ns))._field_Ident, ._field_Ident=(*((*_12018_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> &__jule_push_dest = (*(_115342_generics)); __jule_push_dest.push(jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=(*(_12028_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ac4a752b_NamespaceTypeDecl>(_1ac4a752b_NamespaceTypeDecl{._field_Idents=(*_12018_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=(*_12028_decl.alloc)._field_Token, ._field_Kind=jule::Any(_12028_decl, &__jule_any_type77)})}), &__jule_any_type93)})); };
			}
		}
		else {
			_case_begin_1b2ba234c:;
			{
				_1ac60c818_pushErr(_self_.ptr(), (*((*(_115370_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b2bb16d0:;
	};
	return true;;
}



inline void _1ac619182_evalIdentDeclFromIndexing(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac60a55d_Data>* _122347_d, jule::Ptr<_1ac4b2a75_IndexingExpr>* _122362_i) {
	jule::Ptr<_1ac4ca4d8_StructIns> _12247_s = _1ac642012_Struct((*((*(_122347_d))))._field_Kind.ptr());;
	if ((_12247_s == nullptr)) {
		_1ac60c818_pushErr(_self_.ptr(), (*((*((*(_122362_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_122347_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
		(*(_122347_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ac4a6d88_IdentTypeDecl> _123111_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_122362_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b3625d69:;
			{
				jule::Ptr<_1ac4ac3cc_IdentExpr> _12348_expr = (*((*((*(_122362_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1ac4ac3cc_IdentExpr>();;
				_123111_decl=jule::new_ptr<_1ac4a6d88_IdentTypeDecl>(_1ac4a6d88_IdentTypeDecl{._field_Token=(*_12348_expr.alloc)._field_Token, ._field_Ident=(*_12348_expr.alloc)._field_Ident, ._field_Binded=(*(_12348_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b3627299:;
			{
				jule::Ptr<_1ac4ad7eb_NsSelectionExpr> _12418_expr = (*((*((*(_122362_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1ac4ad7eb_NsSelectionExpr>();;
				_123111_decl=jule::new_ptr<_1ac4a6d88_IdentTypeDecl>(_1ac4a6d88_IdentTypeDecl{._field_Token=(*(_12418_expr))._field_Ident, ._field_Ident=(*((*_12418_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1b36262dc:;
			{
				_1ac60c818_pushErr(_self_, (*((*(_122362_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_122347_d))=nullptr;
				return;;
			}
		}
		_match_end_1b3626276:;
	};
	if ((!(_1ac618d1e_pushGenericsFromData(_self_, &((*(_123111_decl))._field_Generics), &((*((*(_122362_i))))._field_Index))))) {
		(*(_122347_d))=nullptr;
		return;;
	};
	_12247_s=({ auto _wrap_copy = _1ac620b7d_typeChecker(_self_); _1ac654a6e_fromStruct(&_wrap_copy, &(_123111_decl), &((*(_12247_s))._field_Decl)); });
	if ((_12247_s == nullptr)) {
		(*(_122347_d))=nullptr;
		return;;
	};
	(*(*((*(_122347_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12247_s, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1ac619638_checkGenericFn(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4dee04_FnIns>* _126636_f, jule::Ptr<_1ac4912c3_Token>* _126652_et, jule::Any* _126669_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac4dee04_FnIns> _12677_old = (*(_126636_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac599596_checkGenericFn((*(_self_))._field_s, _126636_f, _126652_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1ac638a42_updateModelToGenericIns(_126669_model, _126636_f);
		_1b362e04d_updateRefer(_1ac61081b_getOwnerRefers(_self_), &(_12677_old), _126636_f);
	};
	return __jule_func_result;;
}



inline void _1ac61999b_evalFnGenericFromIndexing(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac60a55d_Data>* _128247_d, jule::Ptr<_1ac4b2a75_IndexingExpr>* _128262_i) {
	jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _12837_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4a677d_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1ac618d1e_pushGenericsFromData(_self_, &(_12837_generics), &((*((*(_128262_i))))._field_Index))))) {
		(*(_128247_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _12897_f = _1ac641c7b_Fn((*((*(_128247_d))))._field_Kind.ptr());;
	jule::I64 _12907_genericsLen = 0LL;;
	if (((*(_12897_f))._field_Decl != nullptr)) {
		_12907_genericsLen=(*(*(_12897_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1ac57c689_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12907_genericsLen, _12837_generics.len(), (*((*((*(_128262_i))))._field_Expr))._field_Token)))) {
		(*(_128247_d))=nullptr;
		return;;
	};
	(*_12897_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>::alloc(0LL, (*(*(_12897_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac63b902_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12837_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3634bd0:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a677d_TypeDecl> _130115_g = *it;
			{
				jule::Ptr<_1ac60a55d_Data> _13028_k = _1ac620ebe_evalType(_self_, _130115_g);;
				if ((_13028_k == nullptr)) {
					(*(_128247_d))=nullptr;
					return;;
				};
				(*_12897_f.alloc)._field_Generics=jule::append((*_12897_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac63b902_InsGeneric>(_1ac63b902_InsGeneric{._field_Kind=(*(_13028_k))._field_Kind, ._field_Constraint=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1b3634bd0:;
			++it;
			goto _iter_begin_1b3634bd0;
		}
		_iter_end_1b3634bd0:;
	};
	if (_1ac4e13bc_IsBuiltin(_12897_f)) {
		return;;
	};
	jule::Bool _13143_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac619638_checkGenericFn(_self_, &(_12897_f), &((*(*((*(_128262_i))))._field_Expr.alloc)._field_Token), &((*((*(_128247_d))))._field_Model));
		_13143_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_13143_ok) {
		(*(*((*(_128247_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12897_f, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1);
	} else {
		(*(_128247_d))=nullptr;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac619cdc_evalIndexing(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b2a75_IndexingExpr> _132233_i) {
	jule::Ptr<_1ac63d2d8_TypeKind> _13237_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13237_prefix;
	});;
	jule::Ptr<_1ac60a55d_Data> _13277_d = _1ac62a2d6_evalExprKind(_self_, (*((*(_132233_i))._field_Expr))._field_Kind);;
	if ((_13277_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_13277_d))._field_Decl) {
		_1ac619182_evalIdentDeclFromIndexing(_self_, &(_13277_d), &(_132233_i));
		return _13277_d;;
	};
	if ((_1ac641c7b_Fn((*(_13277_d))._field_Kind.ptr()) != nullptr)) {
		_1ac61999b_evalFnGenericFromIndexing(_self_, &(_13277_d), &(_132233_i));
		return _13277_d;;
	};
	_1ac60a55d_Data _13437_oldData = (*(_13277_d));;
	jule::Ptr<_1ac60a55d_Data> _13457_index = _1ac62b0ea_evalExpr(_self_, (*_132233_i.alloc)._field_Index);;
	if ((_13457_index == nullptr)) {
		return nullptr;;
	};
	_1ac54ebde_makeComptimeRange(&(_13277_d));
	(*(_13277_d))._field_Decl=false;
	_1ac61846c_toIndexing(_self_, &(_13277_d), &(_13457_index), &(_132233_i));
	if ((_13277_d == nullptr)) {
		return nullptr;;
	};
	if (_1ac60ae98_IsConst(_13277_d.ptr())) {
		(*(_13277_d))._field_Decl=false;
		(*(_13277_d))._field_Model=jule::Any((*(_13277_d))._field_Constant, &__jule_any_type20);
	} else if ((*(_13277_d))._field_Decl) {
		(*(_13277_d))._field_Decl=false;
	} else {
		(*(_13277_d))._field_Model=jule::Any(jule::new_ptr<_1ac4d215a_IndexingExprModel>(_1ac4d215a_IndexingExprModel{._field_Token=(*_132233_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1ac60a55d_Data>(_13437_oldData), ._field_Index=_13457_index}), &__jule_any_type52);
	};
	return _13277_d;;
}



inline __jule_tuple_x_1ac60a55d_Data__jule_tuple_x_1ac60a55d_Data _1ac61a12d_evalSlicingExprs(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b31d5_SlicingExpr>* _138238_s) {
	__jule_tuple_x_1ac60a55d_Data__jule_tuple_x_1ac60a55d_Data __jule_func_result;
	jule::Ptr<_1ac63d2d8_TypeKind> _13837_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13837_prefix;
	});;
	jule::Ptr<_1ac60a55d_Data> _138711_l = nullptr;;
	jule::Ptr<_1ac60a55d_Data> _138811_r = nullptr;;
	if (((*((*(_138238_s))))._field_Start != nullptr)) {
		_138711_l=_1ac62b0ea_evalExpr(_self_, (*((*(_138238_s))))._field_Start);
		if ((_138711_l != nullptr)) {
			_1ac61658b_checkIntegerIndexingByData(_self_, &(_138711_l), (*((*(_138238_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_138711_l=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac728e0c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aa129843_NewI64(0LL)});
		(*((*(_138711_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_138711_l.alloc)._field_Model=jule::Any((*_138711_l.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*((*(_138238_s))))._field_To != nullptr)) {
		_138811_r=_1ac62b0ea_evalExpr(_self_, (*((*(_138238_s))))._field_To);
		if ((_138811_r != nullptr)) {
			_1ac61658b_checkIntegerIndexingByData(_self_, &(_138811_r), (*((*(_138238_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _138711_l;
	__jule_func_result.__jule_result_arg1 = _138811_r;
	return __jule_func_result;;
}



inline void _1ac61a3d6_slicingArr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _141827_d) {
	jule::Ptr<_1ac63d2d8_TypeKind> _14197_elemType = (*(_1ac64175e_Arr((*((*(_141827_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_141827_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac64a900_Slc>(_1ac64a900_Slc{._field_Elem=_14197_elemType}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data24)});
	(*((*(_141827_d))))._field_Lvalue=false;
	(*((*(_141827_d))))._field_Mutable=((*((*(_141827_d))))._field_Mutable || (!(_1ac63ebbe_Mutable(_14197_elemType.ptr()))));
}



inline void _1ac61a804_slicingStr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _143327_d, jule::Ptr<_1ac60a55d_Data>* _143338_l, jule::Ptr<_1ac60a55d_Data>* _143349_r) {
	(*((*(_143327_d))))._field_Lvalue=false;
	(*((*(_143327_d))))._field_Mutable=true;
	if ((!(_1ac60ae98_IsConst((*(_143327_d)).ptr())))) {
		return;;
	};
	if ((((*(_143338_l)) == nullptr) || ((*(_143349_r)) == nullptr))) {
		(*((*(_143327_d))))._field_Constant=nullptr;
		(*((*(_143327_d))))._field_untyped=false;
		return;;
	};
	if ((_1ac60ae98_IsConst((*(_143338_l)).ptr()) && _1ac60ae98_IsConst((*(_143349_r)).ptr()))) {
		jule::I64 _14474_left = _1aa12ba98_AsI64((*((*(_143338_l))))._field_Constant.ptr());;
		if ((_14474_left < 0LL)) {
			return;;
		};
		jule::Str _14524_s = _1aa12b57b_ReadStr((*((*(_143327_d))))._field_Constant);;
		jule::I64 _14538_right = static_cast<jule::I64>(0LL);;
		if (((*(_143349_r)) == nullptr)) {
			_14538_right=static_cast<jule::I64>(_14524_s.len());
		} else {
			_14538_right=_1aa12ba98_AsI64((*((*(_143349_r))))._field_Constant);
		};
		if ((_14474_left > _14538_right)) {
			return;;
		};
		_1aa12cb87_SetStr((*((*(_143327_d))))._field_Constant, _14524_s.slice(_14474_left, _14538_right));
		(*((*(_143327_d))))._field_Decl=true;
	} else {
		(*((*(_143327_d))))._field_Constant=nullptr;
		(*((*(_143327_d))))._field_untyped=false;
	};
}



inline void _1ac61accc_checkSlicing(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _147133_d, jule::Ptr<_1ac60a55d_Data>* _147144_l, jule::Ptr<_1ac60a55d_Data>* _147155_r, jule::Ptr<_1ac4b31d5_SlicingExpr>* _147166_s) {
	{
		
		if ((_1ac64175e_Arr((*((*(_147133_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3651b75:;
			{
				_1ac61a3d6_slicingArr(_self_, _147133_d);
				return;;
			}
		}
		else if ((_1ac6419e5_Slc((*((*(_147133_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3651c1e:;
			{
				return;;
			}
		}
		else if ((_1ac64098e_Prim((*((*(_147133_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3651c85:;
			{
				jule::Ptr<_1ac646401_Prim> _14794_prim = _1ac64098e_Prim((*((*(_147133_d))))._field_Kind);;
				{
					
					if (_1ac6498bb_IsStr(_14794_prim.ptr())) {
						_case_begin_1b365455c:;
						{
							_1ac61a804_slicingStr(_self_, _147133_d, _147144_l, _147155_r);
							return;;
						}
					}
					_match_end_1b36544a2:;
				};
			}
		}
		_match_end_1b3651a43:;
	};
	_1ac60c818_pushErr(_self_, (*((*(_147166_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_147133_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Ptr<_1ac60a55d_Data> _1ac61b11d_evalSlicing(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b31d5_SlicingExpr> _149032_s) {
	jule::Ptr<_1ac60a55d_Data> _14917_d = _1ac62b0ea_evalExpr(_self_, (*(_149032_s))._field_Expr);;
	if ((_14917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac60a55d_Data> _14967_l;
	jule::Ptr<_1ac60a55d_Data> _149614_r;
	({
		__jule_tuple_x_1ac60a55d_Data__jule_tuple_x_1ac60a55d_Data __jule_assign_result = _1ac61a12d_evalSlicingExprs(_self_, &(_149032_s));
		_14967_l = __jule_assign_result.__jule_result_arg0;
		_149614_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14967_l == nullptr)) {
		return _14917_d;;
	};
	(*(_14917_d))._field_Decl=false;
	_1ac61accc_checkSlicing(_self_, &(_14917_d), &(_14967_l), &(_149614_r), &(_149032_s));
	if (_1ac60ae98_IsConst(_14917_d.ptr())) {
		(*(_14917_d))._field_Decl=false;
		(*(_14917_d))._field_Model=jule::Any((*(_14917_d))._field_Constant, &__jule_any_type20);
	} else if ((*(_14917_d))._field_Decl) {
		(*(_14917_d))._field_Decl=false;
	} else {
		jule::Ptr<_1ac4d3447_SlicingExprModel> _15148_model = jule::new_ptr<_1ac4d3447_SlicingExprModel>(_1ac4d3447_SlicingExprModel{._field_Token=(*_149032_s.alloc)._field_Token, ._field_Expr=(*(_14917_d))._field_Model, ._field_Left=(*(_14967_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_149614_r != nullptr)) {
			(*(_15148_model))._field_Right=(*_149614_r.alloc)._field_Model;
		};
		(*(_14917_d))._field_Model=jule::Any(_15148_model, &__jule_any_type94);
	};
	return _14917_d;;
}



inline void _1ac61b53b_castPtr(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _152727_t, jule::Ptr<_1ac60a55d_Data> _152745_d, jule::Ptr<_1ac4912c3_Token> _152755_errorToken) {
	(*(_152745_d))._field_Constant=nullptr;
	(*_152745_d.alloc)._field_untyped=false;
	jule::Ptr<_1ac649e2c_Sptr> _15303_sptr = _1ac640c25_Sptr((*_152745_d.alloc)._field_Kind.ptr());;
	if ((_15303_sptr != nullptr)) {
		if ((!(_1ac63da25_Equal((*(_1ac640eab_Ptr(_152727_t.ptr())))._field_Elem, (*_15303_sptr.alloc)._field_Elem)))) {
			_1ac60c818_pushErr(_self_, _152755_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_152745_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_152727_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1ac60d30d_isUnsafe(_self_)))) {
		_1ac60c818_pushErr(_self_, _152755_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac646401_Prim> _15433_prim = _1ac64098e_Prim((*(_152745_d))._field_Kind);;
	if (((_1ac640eab_Ptr((*(_152745_d))._field_Kind) == nullptr) && ((_15433_prim == nullptr) || (!(_1aa128754_IsInt(_1ac646775_Str(_15433_prim.ptr()))))))) {
		_1ac60c818_pushErr(_self_, _152755_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_152745_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_152727_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1ac61b959_castStruct(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _154930_t, jule::Ptr<_1ac60a55d_Data> _154948_d, jule::Ptr<_1ac4912c3_Token> _154958_errorToken) {
	(*(_154948_d))._field_Constant=nullptr;
	(*_154948_d.alloc)._field_untyped=false;
	jule::Ptr<_1ac5008a4_Trait> _15527_tr = _1ac642298_Trait((*_154948_d.alloc)._field_Kind.ptr());;
	if ((_15527_tr == nullptr)) {
		_1ac60c818_pushErr(_self_, _154958_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_154948_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_154930_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _15587_s = _1ac642012_Struct(_154930_t);;
	_1b366885c_pushReference(_self_, &(_15587_s));
	if ((!(_1ac4c8d00_IsImplements((*(_15587_s))._field_Decl.ptr(), _15527_tr)))) {
		_1ac60c818_pushErr(_self_, _154958_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_154948_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_154930_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1ac61bd77_castRef(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _156627_t, jule::Ptr<_1ac60a55d_Data> _156645_d, jule::Ptr<_1ac4912c3_Token> _156655_errorToken) {
	(*(_156645_d))._field_Constant=nullptr;
	(*_156645_d.alloc)._field_untyped=false;
	jule::Ptr<_1ac649e2c_Sptr> _15697_sptr = _1ac640c25_Sptr(_156627_t.ptr());;
	jule::Ptr<_1ac64d6e4_Ptr> _15717_ptr = _1ac640eab_Ptr((*_156645_d.alloc)._field_Kind.ptr());;
	if (((_15717_ptr != nullptr) && _1ac63da25_Equal((*(_15697_sptr))._field_Elem, (*_15717_ptr.alloc)._field_Elem))) {
		if ((!(_1ac60d30d_isUnsafe(_self_)))) {
			_1ac60c818_pushErr(_self_, _156655_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1ac642012_Struct((*(_15697_sptr))._field_Elem) != nullptr)) {
		_1ac61b959_castStruct(_self_, (*_15697_sptr.alloc)._field_Elem, _156645_d, _156655_errorToken);
		return;;
	};
	_1ac60c818_pushErr(_self_, _156655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_156645_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_156627_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1ac61c295_castSlc(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _158927_t, jule::Ptr<_1ac60a55d_Data> _158945_d, jule::Ptr<_1ac4912c3_Token> _158955_errorToken) {
	jule::Ptr<_1aa1293c0_Const> _15903_c = (*(_158945_d))._field_Constant;;
	(*_158945_d.alloc)._field_Constant=nullptr;
	(*_158945_d.alloc)._field_untyped=false;
	if ((_1ac641242_Enum((*_158945_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1ac64098e_Prim((*((*(_1ac641242_Enum((*(_158945_d))._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1ac6498bb_IsStr(_1ac64098e_Prim((*((*(_1ac641242_Enum((*(_158945_d))._field_Kind.ptr())))._field_Kind))._field_Kind).ptr()))))) {
			_1ac60c818_pushErr(_self_, _158955_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_158945_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_158927_t.ptr()), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else if (((_1ac64098e_Prim((*_158945_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1ac6498bb_IsStr(_1ac64098e_Prim((*(_158945_d))._field_Kind).ptr()))))) {
		_1ac60c818_pushErr(_self_, _158955_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_158945_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_158927_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_158927_t=(*(_1ac6419e5_Slc(_158927_t.ptr())))._field_Elem;
	jule::Ptr<_1ac646401_Prim> _16053_prim = _1ac64098e_Prim(_158927_t);;
	if (((_16053_prim == nullptr) || ((!(_1ac647d2b_IsU8(_16053_prim.ptr()))) && (!(_1ac64780e_IsI32(_16053_prim.ptr())))))) {
		_1ac60c818_pushErr(_self_, _158955_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*_158945_d.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_158927_t), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((_15903_c != nullptr)) {
		{
			
			if (_1ac647d2b_IsU8(_16053_prim.ptr())) {
				_case_begin_1b367d366:;
				{
					jule::Str _16155_s = _1aa12b57b_ReadStr(_15903_c);;
					jule::Ptr<_1ac4d1ba4_SliceExprModel> _16169_model = jule::new_ptr<_1ac4d1ba4_SliceExprModel>(_1ac4d1ba4_SliceExprModel{._field_ElemKind=_158927_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _16155_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_16155_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b367ec2a:;
						if (it != expr_end) {
							jule::U8 *_162012_b = it;
							{
								jule::Ptr<_1aa1293c0_Const> _162110_bc = static__1aa129b0c_NewU64(static_cast<jule::U64>((*(_162012_b))));;
								(*(_162110_bc))._field_Kind=(*(_16053_prim))._field_Kind;
								(*(_16169_model))._field_Elems=jule::append((*_16169_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_162110_bc, &__jule_any_type20); __jule_collection; }));
							}
							_iter_next_1b367ec2a:;
							++it;
							goto _iter_begin_1b367ec2a;
						}
						_iter_end_1b367ec2a:;
					};
					(*_158945_d.alloc)._field_Model=jule::Any(_16169_model, &__jule_any_type79);
					(*_158945_d.alloc)._field_Decl=true;
				}
			}
			else if (_1ac64780e_IsI32(_16053_prim.ptr())) {
				_case_begin_1b367d410:;
				{
					jule::Slice<jule::I32> _16285_runes = __jule_strToRunes(_1aa12b57b_ReadStr(_15903_c));;
					jule::Ptr<_1ac4d1ba4_SliceExprModel> _16299_model = jule::new_ptr<_1ac4d1ba4_SliceExprModel>(_1ac4d1ba4_SliceExprModel{._field_ElemKind=_158927_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _16285_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_16285_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b368315c:;
						if (it != expr_end) {
							jule::I32 *_163312_r = it;
							{
								jule::Ptr<_1aa1293c0_Const> _163410_rc = static__1aa129843_NewI64(static_cast<jule::I64>((*(_163312_r))));;
								(*(_163410_rc))._field_Kind=(*(_16053_prim))._field_Kind;
								(*(_16299_model))._field_Elems=jule::append((*_16299_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_163410_rc, &__jule_any_type20); __jule_collection; }));
							}
							_iter_next_1b368315c:;
							++it;
							goto _iter_begin_1b368315c;
						}
						_iter_end_1b368315c:;
					};
					(*_158945_d.alloc)._field_Model=jule::Any(_16299_model, &__jule_any_type79);
					(*_158945_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1b367d278:;
		};
	};
}



inline void _1ac61c608_castStr(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data> _164427_d, jule::Ptr<_1ac4912c3_Token> _164437_errorToken) {
	if ((_1ac641242_Enum((*(_164427_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac5030b0_Enum> _16468_e = _1ac641242_Enum((*(_164427_d))._field_Kind);;
		if (((_1ac64098e_Prim((*((*(_16468_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1ac6498bb_IsStr(_1ac64098e_Prim((*((*(_16468_e))._field_Kind))._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1aa1293c0_Const> _16523_c = (*_164427_d.alloc)._field_Constant;;
	(*_164427_d.alloc)._field_Constant=nullptr;
	(*_164427_d.alloc)._field_untyped=false;
	if ((_1ac64098e_Prim((*(_164427_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1ac646401_Prim> _16564_prim = _1ac64098e_Prim((*(_164427_d))._field_Kind);;
		if (((!(_1ac647d2b_IsU8(_16564_prim.ptr()))) && (!(_1ac64780e_IsI32(_16564_prim))))) {
			_1ac60c818_pushErr(_self_, _164437_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_164427_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
		if ((_16523_c != nullptr)) {
			{
				
				if (_1ac647d2b_IsU8(_16564_prim)) {
					_case_begin_1b368ae01:;
					{
						(*_164427_d.alloc)._field_Constant=static__1aa12a190_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1aa12bd2e_AsU64(_16523_c))));
						(*_164427_d.alloc)._field_Model=jule::Any((*_164427_d.alloc)._field_Constant, &__jule_any_type20);
						(*_164427_d.alloc)._field_Decl=true;
					}
				}
				else if (_1ac64780e_IsI32(_16564_prim)) {
					_case_begin_1b368ae9a:;
					{
						(*_164427_d.alloc)._field_Constant=static__1aa12a190_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1aa12ba98_AsI64(_16523_c))));
						(*_164427_d.alloc)._field_Model=jule::Any((*_164427_d.alloc)._field_Constant, &__jule_any_type20);
						(*_164427_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1b368acd0:;
			};
		};
		return;;
	};
	jule::Ptr<_1ac64a900_Slc> _16777_s = _1ac6419e5_Slc((*(_164427_d))._field_Kind);;
	if ((_16777_s == nullptr)) {
		_1ac60c818_pushErr(_self_, _164437_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_164427_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _16837_t = (*(_16777_s))._field_Elem;;
	jule::Ptr<_1ac646401_Prim> _16843_prim = _1ac64098e_Prim(_16837_t.ptr());;
	if (((_16843_prim == nullptr) || ((!(_1ac647d2b_IsU8(_16843_prim.ptr()))) && (!(_1ac64780e_IsI32(_16843_prim.ptr())))))) {
		_1ac60c818_pushErr(_self_, _164437_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_164427_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
}



inline void _1ac61ca26_castInt(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _169127_t, jule::Ptr<_1ac60a55d_Data> _169145_d, jule::Ptr<_1ac4912c3_Token> _169155_errorToken) {
	if (_1ac60ae98_IsConst(_169145_d.ptr())) {
		jule::Ptr<_1ac646401_Prim> _16934_prim = _1ac64098e_Prim(_169127_t.ptr());;
		{
			
			if (_1aa12817c_IsSigInt((*(_16934_prim))._field_Kind)) {
				_case_begin_1b3694635:;
				{
					_1aa12c36d_SetI64((*_169145_d.alloc)._field_Constant.ptr(), _1aa12ba98_AsI64((*(_169145_d))._field_Constant));
				}
			}
			else if (_1aa12848a_IsUnsigInt((*(_16934_prim))._field_Kind)) {
				_case_begin_1b36946ce:;
				{
					_1aa12c626_SetU64((*_169145_d.alloc)._field_Constant.ptr(), _1aa12bd2e_AsU64((*(_169145_d))._field_Constant));
				}
			}
			_match_end_1b369459c:;
		};
	} else {
		(*(_169145_d))._field_Constant=nullptr;
		(*_169145_d.alloc)._field_untyped=false;
	};
	if ((_1ac641242_Enum((*(_169145_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac5030b0_Enum> _17064_e = _1ac641242_Enum((*(_169145_d))._field_Kind);;
		if (_1aa128d2b_IsNum(_1ac63d6d4_Str((*((*(_17064_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1ac640c25_Sptr((*(_169145_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1ac646401_Prim> _17134_prim = _1ac64098e_Prim(_169127_t.ptr());;
		if ((!(_1ac64939e_IsUintptr(_17134_prim.ptr())))) {
			_1ac60c818_pushErr(_self_, _169155_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_169145_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_169127_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((_1ac640eab_Ptr((*(_169145_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1ac646401_Prim> _17204_prim = _1ac64098e_Prim(_169127_t);;
		if (_1ac64939e_IsUintptr(_17204_prim.ptr())) {
		} else if ((!(_1ac60d30d_isUnsafe(_self_)))) {
			_1ac60c818_pushErr(_self_, _169155_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1ac646401_Prim> _17293_prim = _1ac64098e_Prim((*(_169145_d))._field_Kind);;
	if (((_17293_prim != nullptr) && _1aa128d2b_IsNum(_1ac646775_Str(_17293_prim)))) {
		return;;
	};
	_1ac60c818_pushErr(_self_, _169155_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_169145_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_169127_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1ac61ce44_castNum(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _173727_t, jule::Ptr<_1ac60a55d_Data> _173745_d, jule::Ptr<_1ac4912c3_Token> _173755_errorToken) {
	if (_1ac60ae98_IsConst(_173745_d.ptr())) {
		jule::Ptr<_1ac646401_Prim> _17394_prim = _1ac64098e_Prim(_173727_t.ptr());;
		{
			
			if (_1aa128a95_IsFloat((*(_17394_prim))._field_Kind)) {
				_case_begin_1b36a0b6e:;
				{
					_1aa12ce40_SetF64((*_173745_d.alloc)._field_Constant.ptr(), _1aa12c0b5_AsF64((*(_173745_d))._field_Constant));
				}
			}
			else if (_1aa12817c_IsSigInt((*(_17394_prim))._field_Kind)) {
				_case_begin_1b36a0c18:;
				{
					_1aa12c36d_SetI64((*_173745_d.alloc)._field_Constant.ptr(), _1aa12ba98_AsI64((*(_173745_d))._field_Constant));
				}
			}
			else if (_1aa12848a_IsUnsigInt((*(_17394_prim))._field_Kind)) {
				_case_begin_1b36a0c7e:;
				{
					_1aa12c626_SetU64((*_173745_d.alloc)._field_Constant.ptr(), _1aa12bd2e_AsU64((*(_173745_d))._field_Constant));
				}
			}
			_match_end_1b36a0a92:;
		};
	} else {
		(*(_173745_d))._field_Constant=nullptr;
		(*_173745_d.alloc)._field_untyped=false;
	};
	if ((_1ac641242_Enum((*(_173745_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac5030b0_Enum> _17544_e = _1ac641242_Enum((*(_173745_d))._field_Kind);;
		if (_1aa128d2b_IsNum(_1ac63d6d4_Str((*((*(_17544_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ac646401_Prim> _17603_prim = _1ac64098e_Prim((*(_173745_d))._field_Kind);;
	if (((_17603_prim != nullptr) && _1aa128d2b_IsNum(_1ac646775_Str(_17603_prim)))) {
		return;;
	};
	_1ac60c818_pushErr(_self_, _173755_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_173745_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_173727_t.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline void _1ac61d362_castPrim(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _176828_t, jule::Ptr<_1ac60a55d_Data> _176846_d, jule::Ptr<_1ac4912c3_Token> _176856_errorToken) {
	jule::Ptr<_1ac646401_Prim> _17693_prim = _1ac64098e_Prim(_176828_t.ptr());;
	{
		
		if (_1ac649b52_IsAny(_17693_prim.ptr())) {
			_case_begin_1b36a92c6:;
			{
				__jule_panic_s(jule::Str::lit("eval: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1772:4"));;
			}
		}
		else if (_1ac6498bb_IsStr(_17693_prim.ptr())) {
			_case_begin_1b36a8e74:;
			{
				_1ac61c608_castStr(_self_, _176846_d, _176856_errorToken);
			}
		}
		else if (_1aa128754_IsInt(_1ac646775_Str(_17693_prim.ptr()))) {
			_case_begin_1b36a8eda:;
			{
				_1ac61ca26_castInt(_self_, _176828_t, _176846_d, _176856_errorToken);
			}
		}
		else if (_1aa128d2b_IsNum(_1ac646775_Str(_17693_prim.ptr()))) {
			_case_begin_1b36a9051:;
			{
				_1ac61ce44_castNum(_self_, _176828_t, _176846_d, _176856_errorToken);
			}
		}
		else {
			_case_begin_1b36a8e0d:;
			{
				_1ac60c818_pushErr(_self_, _176856_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str(_176828_t), &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1b36a8d86:;
	};
}



inline void _1ac61d6c5_castConstant(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _178433_t, jule::Ptr<_1ac60a55d_Data>* _178452_d) {
	if ((((*(_178452_d)) == nullptr) || (!(_1ac60ae98_IsConst((*(_178452_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1ac646401_Prim> _17883_prim = _1ac64098e_Prim((*(_178433_t)).ptr());;
	_1ac638866_castConstByType(&((*(_17883_prim))._field_Kind), _178452_d);
	(*((*(_178452_d))))._field_Model=jule::Any((*((*(_178452_d))))._field_Constant, &__jule_any_type20);
}



inline void _1ac61dae3_castTypeEnum(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _179333_t, jule::Ptr<_1ac60a55d_Data>* _179352_d, jule::Ptr<_1ac4912c3_Token>* _179367_errorToken) {
	jule::I64 _17943_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ac584b36_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_179352_d))))._field_Kind), _179333_t, _179367_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17943_n);;
		_1ac60c818_pushErr(_self_, (*(_179367_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_179352_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_179333_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_179352_d))))._field_Constant=nullptr;
	(*((*(_179352_d))))._field_untyped=false;
}



inline void _1ac61e011_castTypeEnumT(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _180334_t, jule::Ptr<_1ac60a55d_Data>* _180353_d, jule::Ptr<_1ac4912c3_Token>* _180368_errorToken) {
	jule::I64 _18043_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ac584b36_checkTypeCompatibility((*(_self_))._field_s, _180334_t, &((*((*(_180353_d))))._field_Kind), _180368_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _18043_n);;
		_1ac60c818_pushErr(_self_, (*(_180368_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_180353_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_180334_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_180353_d))))._field_Constant=nullptr;
	(*((*(_180353_d))))._field_untyped=false;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac61e4b7_evalCastByTypeNData(_1ac60c285_eval* _self_, jule::Ptr<_1ac63d2d8_TypeKind> _181339_t, jule::Ptr<_1ac60a55d_Data> _181357_d, jule::Ptr<_1ac4912c3_Token> _181371_errorToken) {
	if (((_181357_d != nullptr) && (*_181357_d.alloc)._field_Decl)) {
		_1ac60c818_pushErr(_self_, _181371_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1ac60a97b_IsNil(_181357_d)) {
			_case_begin_1b4010e90:;
			{
				if ((!(_1ac6401db_NilCompatible(_181339_t.ptr())))) {
					_1ac60c818_pushErr(_self_, _181371_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_181339_t), &__jule_any_type4); __jule_collection; }));
				};
				(*_181357_d.alloc)._field_Constant=nullptr;
				(*_181357_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1ac64098e_Prim((*_181357_d.alloc)._field_Kind.ptr()) != nullptr) && _1ac649b52_IsAny(_1ac64098e_Prim((*(_181357_d))._field_Kind).ptr()))) {
			_case_begin_1b4010c2b:;
			{
				if ((_1ac641242_Enum(_181339_t.ptr()) != nullptr)) {
					_1ac60c818_pushErr(_self_, _181371_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
					_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("try cast to type of enum fields instead of enum", 47)), jule::Slice<jule::Any>());
				} else if ((_1ac6414c8_TypeEnum(_181339_t.ptr()) != nullptr)) {
					_1ac60c818_pushErr(_self_, _181371_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
				};
				(*_181357_d.alloc)._field_Constant=nullptr;
				(*_181357_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1ac64098e_Prim(_181339_t.ptr()) != nullptr) && _1ac649b52_IsAny(_1ac64098e_Prim(_181339_t).ptr()))) {
			_case_begin_1b4010c92:;
			{
				(*_181357_d.alloc)._field_Constant=nullptr;
				(*_181357_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1ac6414c8_TypeEnum((*_181357_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b4010d08:;
			{
				_1ac61dae3_castTypeEnum(_self_, &(_181339_t), &(_181357_d), &(_181371_errorToken));
			}
		}
		else if ((_1ac6414c8_TypeEnum(_181339_t.ptr()) != nullptr)) {
			_case_begin_1b4010d6e:;
			{
				_1ac61e011_castTypeEnumT(_self_, &(_181339_t), &(_181357_d), &(_181371_errorToken));
			}
		}
		else if ((_1ac640eab_Ptr(_181339_t.ptr()) != nullptr)) {
			_case_begin_1b4011b61:;
			{
				_1ac61b53b_castPtr(_self_, _181339_t, _181357_d, _181371_errorToken);
			}
		}
		else if ((_1ac640c25_Sptr(_181339_t.ptr()) != nullptr)) {
			_case_begin_1b4011bc7:;
			{
				_1ac61bd77_castRef(_self_, _181339_t, _181357_d, _181371_errorToken);
			}
		}
		else if ((_1ac6419e5_Slc(_181339_t.ptr()) != nullptr)) {
			_case_begin_1b4011c3d:;
			{
				_1ac61c295_castSlc(_self_, _181339_t, _181357_d, _181371_errorToken);
			}
		}
		else if ((_1ac642012_Struct(_181339_t.ptr()) != nullptr)) {
			_case_begin_1b4011ca4:;
			{
				_1ac61b959_castStruct(_self_, _181339_t, _181357_d, _181371_errorToken);
			}
		}
		else if ((_1ac64098e_Prim(_181339_t.ptr()) != nullptr)) {
			_case_begin_1b4011d1a:;
			{
				_1ac61d362_castPrim(_self_, _181339_t, _181357_d, _181371_errorToken);
				_1ac61d6c5_castConstant(_self_, &(_181339_t), &(_181357_d));
			}
		}
		else {
			_case_begin_1b4010ae9:;
			{
				_1ac60c818_pushErr(_self_, _181371_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str(_181339_t.ptr()), &__jule_any_type4); __jule_collection; }));
				_181357_d=nullptr;
			}
		}
		_match_end_1b40108da:;
	};
	if ((_181357_d == nullptr)) {
		return nullptr;;
	};
	(*_181357_d.alloc)._field_Mutable=((*_181357_d.alloc)._field_Mutable || (!(_1ac63ebbe_Mutable((*_181357_d.alloc)._field_Kind.ptr()))));
	if (((!((*_181357_d.alloc)._field_Decl)) && ((_1ac641242_Enum((*(_181357_d))._field_Kind) == nullptr) || (!(_1ac63da25_Equal((*((*(_1ac641242_Enum((*(_181357_d))._field_Kind)))._field_Kind))._field_Kind, _181339_t)))))) {
		_1ac637645_applyCastKind(&((*(_self_))._field_s), &(_181357_d), &(_181339_t), &(_181371_errorToken), _1ac61081b_getOwnerRefers(_self_));
		(*((*_181357_d.alloc)._field_Model.cast_ptr<_1ac4d0e28_CastingExprModel>(&__jule_any_type95)))._field_Token=_181371_errorToken;
	} else {
		(*_181357_d.alloc)._field_Kind=_181339_t;
	};
	(*_181357_d.alloc)._field_Decl=false;
	(*_181357_d.alloc)._field_Lvalue=false;
	(*_181357_d.alloc)._field_untyped=false;
	if (_1ac60ae98_IsConst(_181357_d)) {
		(*((*_181357_d.alloc)._field_Constant))._field_Kind=(*(_1ac64098e_Prim(_181339_t.ptr())))._field_Kind;
	};
	return _181357_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac61e96d_evalCastT(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _189031_t, jule::Ptr<_1ac4aaab2_Expr>* _189050_e, jule::Ptr<_1ac4912c3_Token>* _189065_et) {
	jule::Ptr<_1ac63d2d8_TypeKind> _18917_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18917_prefix;
	});;
	if ((_1ac6419e5_Slc((*(_189031_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_189050_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1b4023ada:;
				{
					(*_self_.alloc)._field_prefix=(*(_189031_t));
				}
			}
			_match_end_1b4023a63:;
		};
	};
	jule::Ptr<_1ac60a55d_Data> _19007_d = _1ac62b0ea_evalExpr(_self_, (*(_189050_e)));;
	if (((_19007_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _19007_d;;
	};
	return _1ac61e4b7_evalCastByTypeNData(_self_, (*(_189031_t)), _19007_d, (*(_189065_et)));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac61ecae_evalCast(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ad422_CastExpr> _190729_c) {
	jule::Ptr<_1ac6459e9_TypeSymbol> _19087_t = _1ac4e490e_buildType((*(_190729_c))._field_Kind);;
	jule::Bool _19093_ok = _1ac581ccb_checkType((*(_self_))._field_s, &(_19087_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19093_ok))) {
		return nullptr;;
	};
	return _1ac61e96d_evalCastT(_self_, &((*(_19087_t))._field_Kind), &((*_190729_c.alloc)._field_Expr), &((*((*_190729_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac620100_evalNsSelection(_1ac60c285_eval* _self_, jule::Ptr<_1ac4ad7eb_NsSelectionExpr> _191635_s) {
	jule::Str _19173_path = _1ac65a778_buildLinkPathByTokens(&((*(_191635_s))._field_Ns));;
	jule::Ptr<_1ac557cd5_ImportInfo> _19187_imp = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65bc74_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>>((void*)__jule_anon_1b402bb7b, jule::Ptr<__jule_anon_1b402bb7b_ctx>::make(__jule_anon_1b402bb7b_ctx{._191635_s=_191635_s,._19173_path=_19173_path}).as<jule::Uintptr>(), __jule_anon_1b402bb7b_ctx_handler));;
	if ((_19187_imp == nullptr)) {
		_1ac60c818_pushErr(_self_, (*(_191635_s))._field_Ns[0LL], static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19173_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _19307_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_19187_imp, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data1);
	;
	_1ac60d077_disallowBuiltin(_self_);
	jule::Any _19357_def = _1ac610585_getDef(_self_, &((*((*_191635_s.alloc)._field_Ident))._field_Kind), false);;
	_1ac60cd79_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_19307_lookup;
	jule::Ptr<_1ac60a55d_Data> _19387_d = _1ac614743_evalDef(_self_, &(_19357_def), (*_191635_s.alloc)._field_Ident);;
	return _19387_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6205a6_evalStructLitExplicit(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ca4d8_StructIns> _194242_s, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _19437_exprs, jule::Ptr<_1ac4912c3_Token> _194327_errorToken) {
	jule::Bool _19443_ok = _1ac57c689_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_194242_s))._field_Decl))._field_Generics.len(), (*_194242_s.alloc)._field_Generics.len(), _194327_errorToken);;
	if ((!(_19443_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_194242_s.alloc)._field_Decl))) {
		_1ac60c818_pushErr(_self_, _194327_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_194242_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	_1b366885c_pushReference(_self_, &(_194242_s));
	_1ac61293e_checkDeprecated(_self_, &((*(*(_194242_s))._field_Decl.alloc)._field_Directives), _194327_errorToken);
	_1ac5ed2dc_structLitChecker _19577_slc = _1ac5ed2dc_structLitChecker{._field_e=_self_, ._field_errorToken=_194327_errorToken, ._field_s=_194242_s, ._field_args=jule::Slice<jule::Ptr<_1ac4d0202_StructArgExprModel>>(nullptr)};;
	_1ac5eea5d_check(&_19577_slc, &(_19437_exprs));
	jule::Ptr<_1ac60a55d_Data> _19647_d = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_194242_s, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1ac4d0598_StructLitExprModel>(_1ac4d0598_StructLitExprModel{._field_Strct=_194242_s, ._field_Args=_19577_slc._field_args}), &__jule_any_type97), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
	if ((*(*(_194242_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19647_d))._field_Kind))._field_BindIdent=(*(*(_194242_s))._field_Decl.alloc)._field_Ident;
	};
	return _19647_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6208e7_evalStructLit(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b0b0b_StructLit> _198034_lit) {
	jule::Ptr<_1ac6459e9_TypeSymbol> _19817_t = _1ac4e490e_buildType((*(_198034_lit))._field_Kind);;
	jule::Bool _19823_ok = _1ac581ccb_checkType((*(_self_))._field_s, &(_19817_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19823_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _19877_s = _1ac642012_Struct((*(_19817_t))._field_Kind.ptr());;
	if ((_19877_s == nullptr)) {
		if ((_1ac640c25_Sptr((*(_19817_t))._field_Kind) != nullptr)) {
			_19877_s=_1ac642012_Struct((*(_1ac640c25_Sptr((*(_19817_t))._field_Kind)))._field_Elem.ptr());
			if ((_19877_s != nullptr)) {
				goto _julec_label_1b403d561;
			};
		};
		_1ac60c818_pushErr(_self_, (*((*_198034_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1b403d561:;
	jule::Ptr<_1ac60a55d_Data> _20007_d = _1ac6205a6_evalStructLitExplicit(_self_, _19877_s, (*_198034_lit.alloc)._field_Exprs, (*(*(_198034_lit))._field_Kind.alloc)._field_Token);;
	if ((_1ac640c25_Sptr((*(_19817_t))._field_Kind) != nullptr)) {
		jule::Ptr<_1ac4d0598_StructLitExprModel> _20028_model = (*(_20007_d))._field_Model.cast_ptr<_1ac4d0598_StructLitExprModel>(&__jule_any_type97);;
		_1ac635489_makeStructLitAlloc(&(_20007_d), &(_20028_model));
	};
	return _20007_d;;
}



inline _1ac6506d5_typeChecker _1ac620b7d_typeChecker(_1ac60c285_eval* _self_) {
	return _1ac580a77_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac620ebe_evalType(_1ac60c285_eval* _self_, jule::Ptr<_1ac4a677d_TypeDecl> _201228_t) {
	jule::Ptr<_1ac6459e9_TypeSymbol> _20137_tk = _1ac4e490e_buildType(_201228_t);;
	jule::Bool _20143_ok = _1ac581ccb_checkType((*(_self_))._field_s, &(_20137_tk), (*(_self_))._field_lookup);;
	if ((!(_20143_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=(*(_20137_tk))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_20137_tk.alloc)._field_Kind, &__jule_any_type86), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline void _1ac621332_callTypeFn(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ae7db_FnCallExpr>* _202532_fc, jule::Ptr<_1ac60a55d_Data>* _202554_d) {
	if (((*((*(_202532_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr(_self_.ptr(), (*((*(_202532_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
	} else if (((*((*(_202532_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr(_self_.ptr(), (*((*((*(_202532_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_202554_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	} else if ((*((*(_202532_fc))))._field_IsCo) {
		_1ac60c818_pushErr(_self_.ptr(), (*((*(_202532_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_202554_d))=nullptr;
		return;;
	} else if (((*((*(_202532_fc))))._field_Exception != nullptr)) {
		_1ac60c818_pushErr(_self_.ptr(), (*((*(_202532_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_202554_d))=nullptr;
		return;;
	};
	if (((*((*(_202532_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1ac4aaab2_Expr> _20418_arg = (*((*(_202532_fc))))._field_Args[0LL];;
		(*(_202554_d))=_1ac61e96d_evalCastT(_self_, &((*((*(_202554_d))))._field_Kind), &(_20418_arg), &((*(_20418_arg))._field_Token));
		return;;
	};
	if (((*(_202554_d)) != nullptr)) {
		(*((*(_202554_d))))._field_Decl=false;
	};
}



inline void _1ac621695_callBuiltinFn(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ae7db_FnCallExpr>* _205135_fc, jule::Ptr<_1ac60a55d_Data>* _205157_d) {
	if ((!(_1ac4aeb93_Unhandled((*(_205135_fc)).ptr())))) {
		_1ac60c818_pushErr(_self_.ptr(), (*((*(_205135_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_205157_d))=(*(_1ac641c7b_Fn((*((*(_205157_d))))._field_Kind.ptr())))._field_caller(&(_self_), _205135_fc, _205157_d);
	if (((*(_205157_d)) == nullptr)) {
		return;;
	};
	(*((*(_205157_d))))._field_Mutable=true;
}



inline void _1ac621a08_checkFnOfConcurrentCall(_1ac60c285_eval* _self_, jule::Ptr<_1ac4dee04_FnIns>* _206340_f, jule::Ptr<_1ac4912c3_Token> _206351_errorToken) {
	if (_1ac60d30d_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_206340_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b404c5b4:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ddc9e_ParamIns> *_206710_p = it;
			{
				if (_1ac4da9c1_IsSelf((*((*(_206710_p))))._field_Decl.ptr())) {
					if ((!(_1ac4dac57_IsRef((*((*(_206710_p))))._field_Decl)))) {
						_1ac60c818_pushErr(_self_, _206351_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_206710_p))))._field_Decl.alloc)._field_Reference) {
					_1ac60c818_pushErr(_self_, _206351_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1b404c5b4:;
			++it;
			goto _iter_begin_1b404c5b4;
		}
		_iter_end_1b404c5b4:;
	};
}



inline void _1ac621e26_processExceptionalHandler(_1ac60c285_eval* _self_, jule::Ptr<_1ac4dee04_FnIns>* _208246_f, jule::Ptr<_1ac4ae7db_FnCallExpr>* _208262_fc, jule::Ptr<_1ac60a55d_Data>* _208284_d) {
	jule::Bool _20833_resultNeeded = ((!(_1ac4dc2ec_IsVoid((*((*(_208246_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1ac53c25e_scopeChecker> _208411_csc = nullptr;;
	jule::Ptr<_1ac534ec1_Scope> _208511_ch = nullptr;;
	jule::Ptr<_1ac4d17ca_FnCallExprModel> _20877_model = (*((*(_208284_d))))._field_Model.cast_ptr<_1ac4d17ca_FnCallExprModel>(&__jule_any_type40);;
	jule::Ptr<_1ac53c25e_scopeChecker> _20917_sc = (*(_self_))._field_lookup.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0);;
	_208411_csc=_1ac54e66c_newChildChecker(_20917_sc);
	if (_20833_resultNeeded) {
		(*(_208411_csc))._field_result=(*(_208246_f));
	};
	_208511_ch=_1ac542918_getChild(_20917_sc);
	(*((*((*(_208262_fc))))._field_Exception))._field_Parent=(*_20917_sc.alloc)._field_tree;
	(*((*_208411_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_208411_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac63580d_buildErrorVar(&(_208511_ch), _208262_fc); __jule_collection; }));
	_1ac542d36_checkChildSsc(_20917_sc, &((*((*(_208262_fc))))._field_Exception), &(_208511_ch), &(_208411_csc));
	(*(_20877_model))._field_Assigned=_20833_resultNeeded;
	(*_20877_model.alloc)._field_Except=_208511_ch;
	if ((_20833_resultNeeded && ((*_208411_csc.alloc)._field_result != nullptr))) {
		_1ac60c818_pushErr(_self_, (*((*(_208262_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1ac622289_callFn(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ae7db_FnCallExpr>* _210928_fc, jule::Ptr<_1ac60a55d_Data>* _210950_d) {
	jule::Ptr<_1ac4dee04_FnIns> _21107_f = _1ac641c7b_Fn((*((*(_210950_d))))._field_Kind.ptr());;
	if (_1ac4e13bc_IsBuiltin(_21107_f.ptr())) {
		_1ac621695_callBuiltinFn(_self_, _210928_fc, _210950_d);
		return;;
	};
	if (((!(_1ac4dc583_IsMethod((*_21107_f.alloc)._field_Decl.ptr()))) && _1ac659854_hasDirective(&((*(*(_21107_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1ac60c818_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_210950_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_210950_d))))._field_Mutable)) && _1ac4dc583_IsMethod((*(_21107_f))._field_Decl)) && (!((*(*(_21107_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_21107_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1ac60c818_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1ac4d0598_StructLitExprModel> _21305_lit = _1ac6399dd_isLitBased(&((*((*(_210950_d))))._field_Model));;
			if ((_21305_lit == nullptr)) {
				_1ac60c818_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1ac5ecd03_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_21305_lit));
			};
		};
	} else if (((!(_1ac60d30d_isUnsafe(_self_))) && (*(*(_21107_f))._field_Decl.alloc)._field_Unsafety)) {
		_1ac60c818_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _21427_dynamicAnnotation = ((((*(*(_21107_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_21107_f.alloc)._field_Generics.len() == 0LL)) && ((*_21107_f.alloc)._field_Params.len() > 0LL));;
	if (_21427_dynamicAnnotation) {
		(*_21107_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>::alloc((*(*(_21107_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_21107_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac63b902_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_21107_f.alloc)._field_Generics.len() != (*(*(_21107_f))._field_Decl.alloc)._field_Generics.len())) {
		_1ac57c689_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_21107_f))._field_Decl.alloc)._field_Generics.len(), (*_21107_f.alloc)._field_Generics.len(), (*((*(_210928_fc))))._field_Token);
		(*(_210950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ac578256_sema> _21517_old = (*_self_.alloc)._field_s;;
	if (((*(*(_21107_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_21107_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_21517_old != (*_self_.alloc)._field_s)) {
			(*(_21517_old))._field_errors=jule::append((*_21517_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_21517_old;
	});;
	_1ac5ea3a5_fnCallArgChecker _21647_fcac = _1ac5ea3a5_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_210928_fc))))._field_Args, ._field_errorToken=(*((*(_210928_fc))))._field_Token, ._field_f=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_dynamicAnnotation=_21427_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr)};;
	if ((!(_21427_dynamicAnnotation))) {
		if ((!((*_21107_f.alloc)._field_reloaded))) {
			jule::Bool _21735_ok = _1ac587a4b_reloadFnInsTypes((*(_self_))._field_s, _21107_f);;
			(*_21107_f.alloc)._field_reloaded=true;
			if ((!(_21735_ok))) {
				(*(_210950_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1ac4dee04_FnIns> _21808_existInstance = _1ac4dd8e7_appendInstance((*(_21107_f))._field_Decl, &(_21107_f));;
		if ((_21808_existInstance != nullptr)) {
			_21107_f=_21808_existInstance;
		};
	} else if ((!(_1ac585dac_buildFnNonGenericTypeKinds((*(_self_))._field_s, _21107_f, &(_21647_fcac._field_ignored))))) {
		(*(_210950_d))=nullptr;
		return;;
	};
	_21647_fcac._field_f=_21107_f;
	jule::Bool _21917_ok = false;;
	if (((*(*(_21107_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_21517_old, (*_self_.alloc)._field_s);
		_21917_ok=_1ac5ec990_check(&_21647_fcac);
		std::swap(_21517_old, (*_self_.alloc)._field_s);
	} else {
		_21917_ok=_1ac5ec990_check(&_21647_fcac);
	};
	if (_21427_dynamicAnnotation) {
		if ((!(_21917_ok))) {
			(*(_210950_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac619638_checkGenericFn(_self_, &(_21107_f), &((*((*(_210928_fc))))._field_Token), &((*((*(_210950_d))))._field_Model));
			_21917_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21917_ok))) {
			(*(_210950_d))=nullptr;
			return;;
		};
	};
	jule::Any _22127_callModel = (*((*(_210950_d))))._field_Model;;
	if (_1ac4dc2ec_IsVoid((*(_21107_f))._field_Decl)) {
		(*(_210950_d))=_1ac637854_buildVoidData();
	} else {
		(*((*(_210950_d))))._field_Kind=(*_21107_f.alloc)._field_Result;
		(*((*(_210950_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1ac4d17ca_FnCallExprModel> _22217_model = jule::new_ptr<_1ac4d17ca_FnCallExprModel>(_1ac4d17ca_FnCallExprModel{._field_Token=(*((*(_210928_fc))))._field_Token, ._field_Func=_21107_f, ._field_IsCo=(*((*(_210928_fc))))._field_IsCo, ._field_Expr=_22127_callModel, ._field_Args=_21647_fcac._field_argModels, ._field_Except=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_210950_d))))._field_Model=jule::Any(_22217_model, &__jule_any_type40);
	(*((*(_210950_d))))._field_Mutable=true;
	if ((*(*(_21107_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_210928_fc))))._field_IsCo) {
			_1ac57b15a_pushErr((*(_self_))._field_s, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1ac57b4bd_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1ac4aeb93_Unhandled((*(_210928_fc)).ptr())) {
				_case_begin_1b4073332:;
				{
					_1ac60c818_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1ac4aee29_Ignored((*(_210928_fc)).ptr())) {
				_case_begin_1b4073013:;
				{
					goto _match_end_1b40718d5;
				}
			}
			else {
				_case_begin_1b407194b:;
				{
					_1ac621e26_processExceptionalHandler(_self_, &(_21107_f), _210928_fc, _210950_d);
				}
			}
			_match_end_1b40718d5:;
		};
	} else if ((!(_1ac4aeb93_Unhandled((*(_210928_fc)).ptr())))) {
		_1ac60c818_pushErr(_self_, (*((*(_210928_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_210928_fc))))._field_IsCo) {
		(*((*(_22217_model))._field_Func))._field_AsAnon=true;
		(*(*(_22217_model))._field_Func.alloc)._field_CalledCo=true;
		_1ac621a08_checkFnOfConcurrentCall(_self_, &((*_22217_model.alloc)._field_Func), (*((*(_210928_fc))))._field_Token);
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6225ca_evalFnCall(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ae7db_FnCallExpr> _225831_fc) {
	jule::Ptr<_1ac63d2d8_TypeKind> _22597_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_22597_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_225831_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b40787aa:;
			{
				if (((*((*((*(_225831_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1ac72c88e_builtinCallerError(&(_self_), &(_225831_fc));;
				};
			}
		}
		_match_end_1b4078733:;
	};
	jule::Ptr<_1ac60a55d_Data> _22727_d = _1ac62a2d6_evalExprKind(_self_, (*(*(_225831_fc))._field_Expr.alloc)._field_Kind);;
	if ((_22727_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22727_d))._field_Decl) {
		_1ac621332_callTypeFn(_self_, &(_225831_fc), &(_22727_d));
		return _22727_d;;
	};
	if ((_1ac641c7b_Fn((*(_22727_d))._field_Kind.ptr()) == nullptr)) {
		_1ac60c818_pushErr(_self_, (*_225831_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ac622289_callFn(_self_, &(_225831_fc), &(_22727_d));
	return _22727_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6229c6_evalEnumStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac5030b0_Enum> _229134_enm, jule::Ptr<_1ac4912c3_Token> _229150_ident) {
	jule::Ptr<_1ac502543_EnumItem> _22927_item = _1ac503bd7_FindItem(_229134_enm.ptr(), (*(_229150_ident))._field_Kind);;
	if ((_22927_item == nullptr)) {
		_1ac60c818_pushErr(_self_, _229150_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229134_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_229150_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _1ac639724_evalEnumStatic(&((*(_self_))._field_s), &(_229134_enm), &(_22927_item), &(_229150_ident), _1ac61081b_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac622dc2_evalTypeEnumStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac5047ba_TypeEnum> _229938_enm, jule::Ptr<_1ac4912c3_Token> _229954_ident) {
	jule::Ptr<_1ac5041e3_TypeEnumItem> _23007_item = _1ac5053ae_FindItem(_229938_enm.ptr(), (*(_229954_ident))._field_Kind);;
	if ((_23007_item == nullptr)) {
		_1ac60c818_pushErr(_self_, _229954_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229938_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_229954_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1ac641242_Enum((*((*(_23007_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b40825b6:;
			{
				return _1ac610e15__evalEnum(_self_, _1ac641242_Enum((*((*(_23007_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1ac6414c8_TypeEnum((*((*(_23007_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b408073a:;
			{
				return _1ac611652__evalTypeEnum(_self_, _1ac6414c8_TypeEnum((*((*(_23007_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1ac642012_Struct((*((*(_23007_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b40807a1:;
			{
				return _1ac611d8e__evalStruct(_self_, _1ac642012_Struct((*((*(_23007_item))._field_Kind))._field_Kind));;
			}
		}
		else {
			_case_begin_1b40806c4:;
			{
				jule::Ptr<_1ac60a55d_Data> _23138_d = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=(*((*(_23007_item))._field_Kind))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
				(*(_23138_d))._field_Model=jule::Any((*_23138_d.alloc)._field_Kind, &__jule_any_type86);
				return _23138_d;;
			}
		}
		_match_end_1b408088e:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6232bd_evalStructStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4ca4d8_StructIns> _232236_s, jule::Ptr<_1ac4912c3_Token> _232251_ident) {
	jule::Ptr<_1ac60a55d_Data> _23237_d = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
	;
	jule::Ptr<_1ac4dbd46_Fn> _23277_method = _1ac4cb583_FindMethod(_232236_s.ptr(), (*(_232251_ident))._field_Kind, true);;
	if ((_23277_method != nullptr)) {
		if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_23277_method.alloc)._field_Public, (*_23277_method.alloc)._field_Token)))) {
			_1ac60c818_pushErr(_self_, _232251_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_232251_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ac4dee04_FnIns> _23348_ins = _1ac4dd5d9_instance(_23277_method);;
		(*(_23348_ins))._field_Owner=_232236_s;
		_1b3dca013_pushReference(_self_, &(_23348_ins));
		(*_23237_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ac4d4712_StructStaticIdentExprModel>(_1ac4d4712_StructStaticIdentExprModel{._field_Structure=_232236_s, ._field_Expr=(*_23237_d.alloc)._field_Model, ._field_Method=_23348_ins}), &__jule_any_type98);
		(*_23237_d.alloc)._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23348_ins, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1)});
		return _23237_d;;
	};
	jule::Ptr<_1ac5a2527_Var> _23487_sttc = _1ac4cbc15_FindStatic(_232236_s, (*_232251_ident.alloc)._field_Kind);;
	if ((_23487_sttc != nullptr)) {
		return _1ac613e4b_evalVar(_self_, _23487_sttc, _232251_ident);;
	};
	_1ac60c818_pushErr(_self_, _232251_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_232236_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_232251_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac623774_evalTraitSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data> _235737_d, jule::Ptr<_1ac5008a4_Trait> _235751_trt, jule::Ptr<_1ac4912c3_Token> _235768_ident) {
	jule::Ptr<_1ac4dbd46_Fn> _23587_f = _1ac501586_FindMethod(_235751_trt.ptr(), (*(_235768_ident))._field_Kind);;
	if ((_23587_f == nullptr)) {
		_1ac60c818_pushErr(_self_, _235768_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_235751_trt.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_235768_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac4dd5d9_instance(_23587_f), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1)}), ._field_Mutable=(*(_235737_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1ac4d39ca_TraitSubIdentExprModel>(_1ac4d39ca_TraitSubIdentExprModel{._field_Token=_235768_ident, ._field_Expr=(*_235737_d.alloc)._field_Model, ._field_Method=_23587_f, ._field_Trt=_235751_trt}), &__jule_any_type99), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac623cd5_evalStructSubIdentField(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _237944_d, jule::Ptr<_1ac4ca4d8_StructIns>* _237959_s, jule::Ptr<_1ac4912c3_Token>* _237979_tok, jule::Ptr<_1ac4c9938_FieldIns>* _237997_f) {
	jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _23807_model = jule::new_ptr<_1ac4d436b_StructSubIdentExprModel>(_1ac4d436b_StructSubIdentExprModel{._field_Token=(*(_237979_tok)), ._field_Expr=jule::new_ptr<_1ac60a55d_Data>((*((*(_237944_d))))), ._field_Method=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Field=(*(_237997_f)), ._field_Owner=(*(_237959_s))});;
	(*((*(_237944_d))))._field_Model=jule::Any(_23807_model, &__jule_any_type100);
	(*((*(_237944_d))))._field_Kind=(*((*(_237997_f))))._field_Kind;
	(*((*(_237944_d))))._field_Lvalue=true;
	if (((*((*((*(_237997_f))))._field_Decl))._field_Mutable && (!((*((*(_237944_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)) {
				_case_begin_1b4097323:;
				{
					jule::Ptr<_1ac53c25e_scopeChecker> _23955_scope = _1ac5408c2_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0));;
					(*((*(_237944_d))))._field_Mutable=(((*(_23955_scope))._field_owner != nullptr) && ((*(*(_23955_scope))._field_owner.alloc)._field_Owner == (*(_237959_s))));
				}
			}
			_match_end_1b40972ac:;
		};
	};
	return (*(_237944_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac624401_evalStructSubIdentMethod(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _240445_d, jule::Ptr<_1ac4ca4d8_StructIns>* _240460_s, jule::Ptr<_1ac4912c3_Token>* _240480_tok, jule::Ptr<_1ac4dbd46_Fn>* _240498_m, jule::Bool _2404106_ref) {
	if ((_1ac4dac57_IsRef((*((*(_240498_m))))._field_Params[0LL].ptr()) && (!(_2404106_ref)))) {
		_1ac60c818_pushErr(_self_, (*(_240480_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1ac61293e_checkDeprecated(_self_, &((*((*(_240498_m))))._field_Directives), (*(_240480_tok)));
	jule::Ptr<_1ac4dee04_FnIns> _24117_ins = _1ac4dd5d9_instance((*(_240498_m)));;
	(*(_24117_ins))._field_Owner=(*(_240460_s));
	_1b3dca013_pushReference(_self_, &(_24117_ins));
	jule::Ptr<_1ac60a55d_Data> _24147_model = jule::new_ptr<_1ac60a55d_Data>((*((*(_240445_d)))));;
	(*((*(_240445_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d436b_StructSubIdentExprModel>(_1ac4d436b_StructSubIdentExprModel{._field_Token=(*(_240480_tok)), ._field_Expr=_24147_model, ._field_Method=_24117_ins, ._field_Field=jule::Ptr<_1ac4c9938_FieldIns>(nullptr), ._field_Owner=(*(_240460_s))}), &__jule_any_type100);
	(*((*(_240445_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_24117_ins, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1)});
	return (*(_240445_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac624962_evalStructSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data> _242538_d, jule::Ptr<_1ac4ca4d8_StructIns> _242552_s, jule::Ptr<_1ac4adbc5_SubIdentExpr> _242571_si, jule::Bool _242590_ref) {
	jule::Ptr<_1ac4c9938_FieldIns> _24267_f = _1ac4cb8c4_FindField(_242552_s.ptr(), (*((*(_242571_si))._field_Ident))._field_Kind);;
	if ((_24267_f != nullptr)) {
		if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_24267_f.alloc)._field_Decl))._field_Public, (*(*(_24267_f))._field_Decl.alloc)._field_Token)))) {
			_1ac60c818_pushErr(_self_, (*_242571_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_24267_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1ac623cd5_evalStructSubIdentField(_self_, &(_242538_d), &(_242552_s), &((*_242571_si.alloc)._field_Ident), &(_24267_f));;
	};
	;
	jule::Ptr<_1ac4dbd46_Fn> _24367_m = _1ac4cb583_FindMethod(_242552_s, (*(*(_242571_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_24367_m == nullptr)) {
		_1ac60c818_pushErr(_self_, (*_242571_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_242552_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_242571_si))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s, (*(_24367_m))._field_Public, (*(_24367_m))._field_Token)))) {
		_1ac60c818_pushErr(_self_, (*_242571_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_24367_m))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1ac60cb7b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1ac624401_evalStructSubIdentMethod(_self_, &(_242538_d), &(_242552_s), &((*_242571_si.alloc)._field_Ident), &(_24367_m), _242590_ref);;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac624ca3_evalIntTypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _244933_ident) {
	;
	{
		auto &_match_expr{ (*(_244933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b40a7ab4:;
			{
				jule::Ptr<_1aa1293c0_Const> _24538_c = static__1aa129843_NewI64(_1aa1247b6_MaxI(jule::Str::lit("int", 3)));;
				(*(_24538_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac728e0c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24538_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24538_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b40a86ca:;
			{
				jule::Ptr<_1aa1293c0_Const> _24628_c = static__1aa129843_NewI64(static_cast<jule::I64>(_1aa124dc1_Min(jule::Str::lit("int", 3))));;
				(*(_24628_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac728e0c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24628_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24628_c});;
			}
		}
		else {
			_case_begin_1b40a7487:;
			{
				_1ac60c818_pushErr(_self_, _244933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type4); (*it++) = jule::Any((*(_244933_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b40a76da:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6250e4_evalUintTypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _247634_ident) {
	;
	{
		auto &_match_expr{ (*(_247634_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b40abd60:;
			{
				jule::Ptr<_1aa1293c0_Const> _24808_c = static__1aa129b0c_NewU64(_1aa124a80_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24808_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac728a44_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24808_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24808_c});;
			}
		}
		else {
			_case_begin_1b40ab766:;
			{
				_1ac60c818_pushErr(_self_, _247634_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4); (*it++) = jule::Any((*(_247634_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b40ab986:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac625435_evalI8TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _249432_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_249432_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b40b02a3:;
			{
				jule::Ptr<_1aa1293c0_Const> _25008_c = static__1aa129843_NewI64(127LL);;
				(*(_25008_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72914e_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25008_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25008_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b40b0db9:;
			{
				jule::Ptr<_1aa1293c0_Const> _25098_c = static__1aa129843_NewI64(-128LL);;
				(*(_25098_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72914e_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25098_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25098_c});;
			}
		}
		else {
			_case_begin_1b40ae9bc:;
			{
				_1ac60c818_pushErr(_self_, _249432_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_249432_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b40aedda:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac625776_evalI16TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _252333_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_252333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b40b4a38:;
			{
				jule::Ptr<_1aa1293c0_Const> _25298_c = static__1aa129843_NewI64(32767LL);;
				(*(_25298_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac7293e6_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25298_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25298_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b40b564e:;
			{
				jule::Ptr<_1aa1293c0_Const> _25388_c = static__1aa129843_NewI64(-32768LL);;
				(*(_25388_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac7293e6_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25388_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25388_c});;
			}
		}
		else {
			_case_begin_1b40b4241:;
			{
				_1ac60c818_pushErr(_self_, _252333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_252333_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b40b4670:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac625ab7_evalI32TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _255233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_255233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b40b92bd:;
			{
				jule::Ptr<_1aa1293c0_Const> _25588_c = static__1aa129843_NewI64(2147483647LL);;
				(*(_25588_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72969e_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25588_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25588_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b40b9dd4:;
			{
				jule::Ptr<_1aa1293c0_Const> _25678_c = static__1aa129843_NewI64(-2147483648LL);;
				(*(_25678_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72969e_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25678_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25678_c});;
			}
		}
		else {
			_case_begin_1b40b89c6:;
			{
				_1ac60c818_pushErr(_self_, _255233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_255233_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b40b8e05:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac625e08_evalI64TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _258133_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_258133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b40bda53:;
			{
				jule::Ptr<_1aa1293c0_Const> _25878_c = static__1aa129843_NewI64(jule::MAX_I64);;
				(*(_25878_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac729957_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25878_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25878_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b40be669:;
			{
				jule::Ptr<_1aa1293c0_Const> _25968_c = static__1aa129843_NewI64(jule::MIN_I64);;
				(*(_25968_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac729957_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25968_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25968_c});;
			}
		}
		else {
			_case_begin_1b40bd25b:;
			{
				_1ac60c818_pushErr(_self_, _258133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_258133_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b40bd68a:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac626249_evalU8TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _261032_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_261032_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b40c2e53:;
			{
				jule::Ptr<_1aa1293c0_Const> _26158_c = static__1aa129b0c_NewU64(255LLU);;
				(*(_26158_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac729c10_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26158_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26158_c});;
			}
		}
		else {
			_case_begin_1b40c2628:;
			{
				_1ac60c818_pushErr(_self_, _261032_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_261032_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b40c29e1:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62658a_evalU16TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _262933_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_262933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b40c5e12:;
			{
				jule::Ptr<_1aa1293c0_Const> _26348_c = static__1aa129b0c_NewU64(65535LLU);;
				(*(_26348_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac729eb8_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26348_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26348_c});;
			}
		}
		else {
			_case_begin_1b40c5395:;
			{
				_1ac60c818_pushErr(_self_, _262933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_262933_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b40c59a0:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6268cb_evalU32TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _264833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_264833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b3a5ada3:;
			{
				jule::Ptr<_1aa1293c0_Const> _26538_c = static__1aa129b0c_NewU64(4294967295LLU);;
				(*(_26538_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72a271_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26538_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26538_c});;
			}
		}
		else {
			_case_begin_1b3a58004:;
			{
				_1ac60c818_pushErr(_self_, _264833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_264833_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3a58697:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac626c1c_evalU64TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _266733_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_266733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b3a5d27e:;
			{
				jule::Ptr<_1aa1293c0_Const> _26728_c = static__1aa129b0c_NewU64(jule::MAX_U64);;
				(*(_26728_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72a75a_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26728_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26728_c});;
			}
		}
		else {
			_case_begin_1b3a5c921:;
			{
				_1ac60c818_pushErr(_self_, _266733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_266733_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3a5cd1c:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62705d_evalF32TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _268633_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_268633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b3a61914:;
			{
				jule::Ptr<_1aa1293c0_Const> _26938_c = static__1aa12a459_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26938_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72a99c_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26938_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26938_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b3a6252a:;
			{
				jule::Ptr<_1aa1293c0_Const> _27028_c = static__1aa12a459_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_27028_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72a99c_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27028_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27028_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1b3a62591:;
			{
				jule::Ptr<_1aa1293c0_Const> _27118_c = static__1aa12a459_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_27118_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72a99c_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27118_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27118_c});;
			}
		}
		else {
			_case_begin_1b3a611d8:;
			{
				_1ac60c818_pushErr(_self_, _268633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_268633_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3a6153a:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62739e_evalF64TypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac4912c3_Token> _272533_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_272533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b3a67684:;
			{
				jule::Ptr<_1aa1293c0_Const> _27328_c = static__1aa12a459_NewF64(jule::MAX_F64);;
				(*(_27328_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72abab_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27328_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27328_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b3a6829a:;
			{
				jule::Ptr<_1aa1293c0_Const> _27418_c = static__1aa12a459_NewF64(jule::MIN_F64);;
				(*(_27418_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72abab_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27418_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27418_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1b3a68311:;
			{
				jule::Ptr<_1aa1293c0_Const> _27508_c = static__1aa12a459_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_27508_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=true, ._field_Kind=_1ac72abab_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27508_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27508_c});;
			}
		}
		else {
			_case_begin_1b3a66e58:;
			{
				_1ac60c818_pushErr(_self_, _272533_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_272533_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3a672aa:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62779a_evalPrimStatic(_1ac60c285_eval* _self_, jule::Str _276430_kind, jule::Ptr<_1ac4912c3_Token> _276441_ident) {
	{
		auto &_match_expr{ _276430_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1b3a6c27c:;
			{
				return _1ac624ca3_evalIntTypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1b3a6cd3d:;
			{
				return _1ac6250e4_evalUintTypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1b3a6cda4:;
			{
				return _1ac625435_evalI8TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1b3a6be3b:;
			{
				return _1ac625776_evalI16TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1b3a6bea2:;
			{
				return _1ac625ab7_evalI32TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1b3a6c018:;
			{
				return _1ac625e08_evalI64TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1b3a6c07e:;
			{
				return _1ac626249_evalU8TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1b3a6ce92:;
			{
				return _1ac62658a_evalU16TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1b3a6d008:;
			{
				return _1ac6268cb_evalU32TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1b3a6d06e:;
			{
				return _1ac626c1c_evalU64TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1b3a6d0d5:;
			{
				return _1ac62705d_evalF32TypeStatic(_self_, _276441_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1b3a6d14b:;
			{
				return _1ac62739e_evalF64TypeStatic(_self_, _276441_ident);;
			}
		}
		else {
			_case_begin_1b3a684dc:;
			{
				_1ac60c818_pushErr(_self_, _276441_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_276430_kind, &__jule_any_type4); (*it++) = jule::Any((*(_276441_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3a68564:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac627b96_evalTypeStatic(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data> _279634_d, jule::Ptr<_1ac4adbc5_SubIdentExpr> _279648_si) {
	{
		
		if ((_1ac64098e_Prim((*(_279634_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a731ea:;
			{
				return _1ac62779a_evalPrimStatic(_self_, _1ac646775_Str(_1ac64098e_Prim((*(_279634_d))._field_Kind).ptr()), (*(_279648_si))._field_Ident);;
			}
		}
		else if ((_1ac641242_Enum((*(_279634_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a74185:;
			{
				return _1ac6229c6_evalEnumStatic(_self_, _1ac641242_Enum((*(_279634_d))._field_Kind), (*(_279648_si))._field_Ident);;
			}
		}
		else if ((_1ac6414c8_TypeEnum((*(_279634_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a741eb:;
			{
				return _1ac622dc2_evalTypeEnumStatic(_self_, _1ac6414c8_TypeEnum((*(_279634_d))._field_Kind), (*(_279648_si))._field_Ident);;
			}
		}
		else if ((_1ac642012_Struct((*(_279634_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a72d87:;
			{
				return _1ac6232bd_evalStructStatic(_self_, _1ac642012_Struct((*(_279634_d))._field_Kind), (*(_279648_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1b3a72d21:;
			{
				_1ac60c818_pushErr(_self_, (*(_279648_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_279634_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3a72c66:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1b3a7b19d_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac5170e6_comptimeTypeInfo>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1ac60a55d_Data> _28137_cd = _1ac51ce21_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1ac60c818_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1ac60a55d_Data> _1b3a80988_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac507c52_comptimeStructField>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1ac60a55d_Data> _28137_cd = _1ac509193_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1ac60c818_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1ac60a55d_Data> _1b3a8520c_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac50e198_comptimeEnumField>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1ac60a55d_Data> _28137_cd = _1ac5101cc_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1ac60c818_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1ac60a55d_Data> _1b3a899c5_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac511eae_comptimeParam>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1ac60a55d_Data> _28137_cd = _1ac51380c_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1ac60c818_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1ac60a55d_Data> _1b3a8e4be_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac50ae75_comptimeStatic>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1ac60a55d_Data> _28137_cd = _1ac50c3b6_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1ac60c818_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1ac60a55d_Data> _1b3a93c43_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac51d1eb_comptimeValue>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1ac60a55d_Data> _28137_cd = _1ac520b7c_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1ac60c818_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1ac60a55d_Data> _1b3a984b7_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac5228c6_comptimeFile>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1ac60a55d_Data> _28137_cd = _1ac524224_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1ac60c818_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}

inline jule::Ptr<_1ac60a55d_Data> _1b3a9ccc4_comptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac5267dc_comptimeDecl>* _281254_ct, jule::Ptr<_1ac60a55d_Data>* _281274_d, jule::Ptr<_1ac4adbc5_SubIdentExpr>* _281285_si) {
	jule::Ptr<_1ac60a55d_Data> _28137_cd = _1ac52a648_subIdent((*(_281254_ct)), &((*((*((*(_281285_si))))._field_Ident))._field_Kind));;
	if ((_28137_cd == nullptr)) {
		_1ac60c818_pushErr(_self_, (*((*(_281285_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_281274_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281285_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28137_cd;;
}



inline __jule_tuple_x_1ac60a55d_Data__jule_tuple_bool _1ac628548_tryComptimeObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data>* _282043_d, jule::Ptr<_1ac4adbc5_SubIdentExpr> _282057_si) {
	__jule_tuple_x_1ac60a55d_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1ac644355_comptimeTypeInfo((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a795a8:;
			{
				jule::Ptr<_1ac5170e6_comptimeTypeInfo> _28238_ct = _1ac644355_comptimeTypeInfo((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b3a7b19d_comptimeObjSubIdent(_self_, &(_28238_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac643068_comptimeStructField((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a790e1:;
			{
				jule::Ptr<_1ac507c52_comptimeStructField> _28268_ct = _1ac643068_comptimeStructField((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b3a80988_comptimeObjSubIdent(_self_, &(_28268_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac643585_comptimeEnumField((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a79168:;
			{
				jule::Ptr<_1ac50e198_comptimeEnumField> _28298_ct = _1ac643585_comptimeEnumField((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b3a8520c_comptimeObjSubIdent(_self_, &(_28298_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac643aa2_comptimeParam((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a791e0:;
			{
				jule::Ptr<_1ac511eae_comptimeParam> _28328_ct = _1ac643aa2_comptimeParam((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b3a899c5_comptimeObjSubIdent(_self_, &(_28328_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac644872_comptimeStatic((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a79267:;
			{
				jule::Ptr<_1ac50ae75_comptimeStatic> _28358_ct = _1ac644872_comptimeStatic((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b3a8e4be_comptimeObjSubIdent(_self_, &(_28358_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac644b08_comptimeValue((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a792de:;
			{
				jule::Ptr<_1ac51d1eb_comptimeValue> _28388_ct = _1ac644b08_comptimeValue((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b3a93c43_comptimeObjSubIdent(_self_, &(_28388_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac6453ab_comptimeFile((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a7981c:;
			{
				jule::Ptr<_1ac5228c6_comptimeFile> _28418_ct = _1ac6453ab_comptimeFile((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b3a984b7_comptimeObjSubIdent(_self_, &(_28418_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ac644d8e_comptimeDecl((*((*(_282043_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3a79883:;
			{
				jule::Ptr<_1ac5267dc_comptimeDecl> _28448_ct = _1ac644d8e_comptimeDecl((*((*(_282043_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b3a9ccc4_comptimeObjSubIdent(_self_, &(_28448_ct), _282043_d, &(_282057_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b3a7907a:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b3a78ec0:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac628944_evalObjSubIdent(_1ac60c285_eval* _self_, jule::Ptr<_1ac60a55d_Data> _285135_d, jule::Ptr<_1ac4adbc5_SubIdentExpr> _285149_si) {
	if (_1ac493baa_IsIgnoreIdent((*((*(_285149_si))._field_Ident))._field_Kind)) {
		_1ac60c818_pushErr(_self_, (*_285149_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1ac60a55d_Data> _28588_compData;
		jule::Bool _285818_ok;
		({
			__jule_tuple_x_1ac60a55d_Data__jule_tuple_bool __jule_assign_result = _1ac628548_tryComptimeObjSubIdent(_self_, &(_285135_d), _285149_si);
			_28588_compData = __jule_assign_result.__jule_result_arg0;
			_285818_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_285818_ok) {
			return _28588_compData;;
		};
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _28647_kind = (*(_285135_d))._field_Kind;;
	{
		
		if ((_1ac640eab_Ptr((*_285135_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3aa3109:;
			{
				jule::Ptr<_1ac64d6e4_Ptr> _28674_ptr = _1ac640eab_Ptr((*(_285135_d))._field_Kind);;
				if (_1ac64e261_IsUnsafe(_28674_ptr.ptr())) {
					goto _match_end_1b3aa3082;
				};
				if ((!(_1ac60d30d_isUnsafe(_self_)))) {
					_1ac60c818_pushErr(_self_, (*_285149_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28647_kind=(*(_1ac640eab_Ptr((*(_285135_d))._field_Kind)))._field_Elem;
				_1ac639cc9_makeImplicitDeref(&(_285135_d), (*_285149_si.alloc)._field_Ident);
			}
		}
		else if ((_1ac640c25_Sptr((*_285135_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3aa31a3:;
			{
				_28647_kind=(*(_1ac640c25_Sptr((*(_285135_d))._field_Kind)))._field_Elem;
				_1ac639cc9_makeImplicitDeref(&(_285135_d), (*_285149_si.alloc)._field_Ident);
			}
		}
		_match_end_1b3aa3082:;
	};
	{
		
		if ((_1ac642298_Trait((*_285135_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3aa366a:;
			{
				return _1ac623774_evalTraitSubIdent(_self_, _285135_d, _1ac642298_Trait((*(_285135_d))._field_Kind), (*_285149_si.alloc)._field_Ident);;
			}
		}
		else if ((_1ac642012_Struct(_28647_kind.ptr()) != nullptr)) {
			_case_begin_1b3aa698c:;
			{
				jule::Ptr<_1ac4ca4d8_StructIns> _28854_s = _1ac642012_Struct(_28647_kind);;
				if (_1ac636325_isInstancedStruct(_28854_s)) {
					jule::Bool _28879_usedReferenceElem = (_1ac640c25_Sptr((*_285135_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1ac624962_evalStructSubIdent(_self_, _285135_d, _1ac642012_Struct(_28647_kind), _285149_si, _28879_usedReferenceElem);;
				};
			}
		}
		_match_end_1b3aa6926:;
	};
	_1ac60c818_pushErr(_self_, (*_285149_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*_285135_d.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac628c85_evalSubIdent(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4adbc5_SubIdentExpr> _289533_si) {
	jule::Ptr<_1ac63d2d8_TypeKind> _28967_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28967_prefix;
	});;
	jule::Ptr<_1ac60a55d_Data> _28997_d = _1ac62a2d6_evalExprKind(_self_, (*((*(_289533_si))._field_Expr))._field_Kind);;
	if ((_28997_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28997_d))._field_Decl) {
		return _1ac627b96_evalTypeStatic(_self_, _28997_d, _289533_si);;
	};
	return _1ac628944_evalObjSubIdent(_self_, _28997_d, _289533_si);;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6290c6_evalTuple(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ab6a6_TupleExpr> _290930_tup) {
	jule::Ptr<_1ac64b4e4_Tuple> _29107_tupT = jule::new_ptr<_1ac64b4e4_Tuple>(_1ac64b4e4_Tuple{._field_Types=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr)});;
	(*_29107_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(0LL, (*(_290930_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac63d2d8_TypeKind>(nullptr); __jule_collection; });
	jule::Ptr<_1ac4d4dd8_TupleExprModel> _29137_model = jule::new_ptr<_1ac4d4dd8_TupleExprModel>(_1ac4d4dd8_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac60a55d_Data>>::alloc(0LL, (*_290930_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac60a55d_Data>(nullptr); __jule_collection; })});;
	jule::Bool _29177_ok = true;;
	{
		auto expr = &((*_290930_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ab19b9:;
		if (it != expr_end) {
			jule::Ptr<_1ac4aaab2_Expr> _291815_expr = *it;
			{
				jule::Ptr<_1ac60a55d_Data> _29198_d = _1ac62b0ea_evalExpr(_self_, _291815_expr);;
				if ((_29198_d == nullptr)) {
					_29177_ok=false;
					goto _iter_next_1b3ab19b9;
				};
				(*_29107_tupT.alloc)._field_Types=jule::append((*_29107_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_29198_d))._field_Kind; __jule_collection; }));
				(*(_29137_model))._field_Datas=jule::append((*_29137_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac60a55d_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _29198_d; __jule_collection; }));
			}
			_iter_next_1b3ab19b9:;
			++it;
			goto _iter_begin_1b3ab19b9;
		}
		_iter_end_1b3ab19b9:;
	};
	if ((!(_29177_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29107_tupT, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29137_model, &__jule_any_type83), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6294c2_evalMap(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac64c094_Map> _293828_m, jule::Ptr<_1ac4b10b2_BraceLit> _293841_lit) {
	jule::Ptr<_1ac4d2db4_MapExprModel> _29397_model = jule::new_ptr<_1ac4d2db4_MapExprModel>(_1ac4d2db4_MapExprModel{._field_Kind=_293828_m, ._field_Entries=jule::Slice<jule::Ptr<_1ac4d29da_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_293841_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ab532a:;
		if (it != expr_end) {
			jule::Ptr<_1ac4aaab2_Expr> _294315_expr = *it;
			{
				{
					auto &_match_expr{ (*(_294315_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1b3ab5946:;
						{
							goto _match_end_1b3ab5c32;
						}
					}
					else {
						_case_begin_1b3ab5c98:;
						{
							_1ac60c818_pushErr(_self_.ptr(), (*(_293841_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1b3ab5c32:;
				};
				jule::Ptr<_1ac4b18dc_KeyValPair> _29538_pair = (*(_294315_expr))._field_Kind.cast_ptr<_1ac4b18dc_KeyValPair>(&__jule_any_type81);;
				jule::Ptr<_1ac60a55d_Data> _29558_key = _1ac62b0ea_evalExpr(_self_, (*(_29538_pair))._field_Key);;
				if ((_29558_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1ac60a55d_Data> _29608_val = _1ac62b0ea_evalExpr(_self_, (*_29538_pair.alloc)._field_Val);;
				if ((_29608_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1ac58895e_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_293828_m))._field_Key), &(_29558_key), &((*((*_29538_pair.alloc)._field_Key))._field_Token))) {
					_1ac5841c9_checkAssignType((*(_self_))._field_s, false, &((*_293828_m.alloc)._field_Key), &(_29558_key), (*(*(_29538_pair))._field_Key.alloc)._field_Token, _1ac61081b_getOwnerRefers(_self_));
				};
				if (_1ac58895e_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_293828_m.alloc)._field_Val), &(_29608_val), &((*((*_29538_pair.alloc)._field_Val))._field_Token))) {
					_1ac5841c9_checkAssignType((*(_self_))._field_s, false, &((*_293828_m.alloc)._field_Val), &(_29608_val), (*(*(_29538_pair))._field_Val.alloc)._field_Token, _1ac61081b_getOwnerRefers(_self_));
				};
				(*(_29397_model))._field_Entries=jule::append((*_29397_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4d29da_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac4d29da_KeyValPairExprModel>(_1ac4d29da_KeyValPairExprModel{._field_Key=(*(_29558_key))._field_Model, ._field_Val=(*(_29608_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1b3ab532a:;
			++it;
			goto _iter_begin_1b3ab532a;
		}
		_iter_end_1b3ab532a:;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_293828_m, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29397_model, &__jule_any_type101), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac629813_evalBraceLit(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b10b2_BraceLit> _298633_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1b3ac27aa:;
			{
				_1ac60c818_pushErr(_self_, (*(_298633_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ac64252e_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b3ac2821:;
			{
				return _1ac6294c2_evalMap(_self_, _1ac64252e_Map((*(_self_))._field_prefix), _298633_lit);;
			}
		}
		else if ((_1ac642012_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b3ac01d1:;
			{
				return _1ac6205a6_evalStructLitExplicit(_self_, _1ac642012_Struct((*(_self_))._field_prefix), (*(_298633_lit))._field_Exprs, (*_298633_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1b3ac016a:;
			{
				_1ac60c818_pushErr(_self_.ptr(), (*(_298633_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b3ac13be:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac629b54_evalAnonFunc(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4b843d_FnDecl> _300133_decl) {
	_1ac6506d5_typeChecker _30027_tc = _1ac6506d5_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1ac64e6e5_referencer>(nullptr), ._field_refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1ac4dee04_FnIns> _30077_ins = _1ac6577ec_buildFunc(&_30027_tc, _300133_decl);;
	if ((_30077_ins == nullptr)) {
		return nullptr;;
	};
	(*(_30077_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _30127_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5a2527_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)) {
			_case_begin_1b3ac823e:;
			{
				jule::Ptr<_1ac53c25e_scopeChecker> _30158_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0);;
				jule::Ptr<_1ac53c25e_scopeChecker> _30168_scc = _1ac54e66c_newChildChecker(_30158_sc);;
				(*(_30168_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ac53b26e_scopeLabel>>>(nullptr);
				(*_30168_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ac53817d_GotoSt>>>(nullptr);
				(*_30168_scc.alloc)._field_owner=_30077_ins;
				(*_30168_scc.alloc)._field_childIndex=0LL;
				(*_30168_scc.alloc)._field_it=0LLU;
				(*_30168_scc.alloc)._field_cse=0LLU;
				(*_30168_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1ac5a2527_Var>>>)((&(_30127_captured))));
				_1ac59bc91_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_30077_ins), &(_30168_scc));
			}
		}
		else {
			_case_begin_1b3ac8d44:;
			{
				_1ac59c3ac_checkFnIns((*_self_.alloc)._field_s, &(_30077_ins));
			}
		}
		_match_end_1b3ac8ccd:;
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_30077_ins, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1ac4d2611_AnonFnExprModel>(_1ac4d2611_AnonFnExprModel{._field_Captured=_30127_captured, ._field_Func=_30077_ins, ._field_Global=_1ac60d594_isGlobal(_self_)}), &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac629e95_evalBinary(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4ae17b_BinaryExpr> _303931_op) {
	_1ac62d51a_binaryEval _30407_bs = static__1ac62db03_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1ac646401_Prim> _30434_prim = _1ac64098e_Prim((*(_self_))._field_prefix);;
		if (((_30434_prim == nullptr) || (!(_1aa128d2b_IsNum(_1ac646775_Str(_30434_prim.ptr())))))) {
			jule::Ptr<_1ac63d2d8_TypeKind> _30459_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_30459_prefix;
			});;
			return _1ac634664_eval(&_30407_bs, &(_303931_op));;
		};
	};
	return _1ac634664_eval(&_30407_bs, &(_303931_op));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62a2d6_evalExprKind(jule::Ptr<_1ac60c285_eval> _self_, jule::Any _305433_kind) {
	{
		auto &_match_expr{ _305433_kind };
		
		if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b4167a31:;
			{
				jule::Ptr<_1ac4aad7b_RangeExpr> _30578_e = _305433_kind.unsafe_cast_ptr<_1ac4aad7b_RangeExpr>();;
				return _1ac62a2d6_evalExprKind(_self_, (*((*(_30578_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b4167d61:;
			{
				return _1ac60ed48_evalLit(_self_.ptr(), _305433_kind.cast_ptr<_1ac4aba4c_LitExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b4167dc7:;
			{
				return _1ac614a84_evalIdent(_self_.ptr(), _305433_kind.cast_ptr<_1ac4ac3cc_IdentExpr>(&__jule_any_type51));;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b4167e3d:;
			{
				return _1ac614dc5_evalUnary(_self_, _305433_kind.cast_ptr<_1ac4acb6e_UnaryExpr>(&__jule_any_type90));;
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b4167ea4:;
			{
				return _1ac615216_evalVariadic(_self_, _305433_kind.cast_ptr<_1ac4ad048_VariadicExpr>(&__jule_any_type78));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b416801a:;
			{
				return _1ac615557_evalUnsafe(_self_, _305433_kind.cast_ptr<_1ac4abe26_UnsafeExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b4168081:;
			{
				return _1ac616190_evalSliceExpr(_self_, _305433_kind.cast_ptr<_1ac4b2118_SliceExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1b416847c:;
			{
				return _1ac619cdc_evalIndexing(_self_, _305433_kind.cast_ptr<_1ac4b2a75_IndexingExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1b41684e3:;
			{
				return _1ac61b11d_evalSlicing(_self_, _305433_kind.cast_ptr<_1ac4b31d5_SlicingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1b4168559:;
			{
				return _1ac61ecae_evalCast(_self_, _305433_kind.cast_ptr<_1ac4ad422_CastExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b41685c0:;
			{
				return _1ac620100_evalNsSelection(_self_.ptr(), _305433_kind.cast_ptr<_1ac4ad7eb_NsSelectionExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1b4168647:;
			{
				return _1ac6208e7_evalStructLit(_self_, _305433_kind.cast_ptr<_1ac4b0b0b_StructLit>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b41686be:;
			{
				return _1ac620ebe_evalType(_self_.ptr(), _305433_kind.cast_ptr<_1ac4a677d_TypeDecl>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b4168746:;
			{
				return _1ac6225ca_evalFnCall(_self_, _305433_kind.cast_ptr<_1ac4ae7db_FnCallExpr>(&__jule_any_type84));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b41687bd:;
			{
				return _1ac628c85_evalSubIdent(_self_, _305433_kind.cast_ptr<_1ac4adbc5_SubIdentExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b4168845:;
			{
				return _1ac6290c6_evalTuple(_self_, _305433_kind.cast_ptr<_1ac4ab6a6_TupleExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b41688bc:;
			{
				return _1ac629813_evalBraceLit(_self_, _305433_kind.cast_ptr<_1ac4b10b2_BraceLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b4168944:;
			{
				return _1ac629b54_evalAnonFunc(_self_, _305433_kind.cast_ptr<_1ac4b843d_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b41689bb:;
			{
				return _1ac629e95_evalBinary(_self_, _305433_kind.cast_ptr<_1ac4ae17b_BinaryExpr>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1b4167cea:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4167c84:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62a627_eval1(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4aaab2_Expr> _310226_expr) {
	jule::Ptr<_1ac60a55d_Data> _31037_d = _1ac62a2d6_evalExprKind(_self_, (*(_310226_expr))._field_Kind);;
	if (((_31037_d == nullptr) || ((*(_31037_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1ac641c7b_Fn((*(_31037_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3846b8e:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _31118_f = _1ac641c7b_Fn((*(_31037_d))._field_Kind.ptr());;
				if (_1ac4e13bc_IsBuiltin(_31118_f.ptr())) {
					_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*_310226_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1b3846b28;
				};
				jule::I64 _31164_required = (*((*_31118_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I64 _31174_given = (*_31118_f.alloc)._field_Generics.len();;
				if ((!(_1ac57c689_checkGenericQuantity((*(_self_))._field_s, _31164_required, _31174_given, (*_310226_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_31118_f))._field_Decl.alloc)._field_Statically)) && _1ac4dc583_IsMethod((*(_31118_f))._field_Decl))) {
					_1ac57b15a_pushErr((*(_self_))._field_s, (*_310226_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1ac634a60_findDirective(&((*(*(_31118_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1ac57b15a_pushErr((*(_self_))._field_s, (*_310226_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_31118_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				} else {
					(*_31118_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_31037_d))._field_Decl) {
			_case_begin_1b387c620:;
			{
				jule::Ptr<_1ac4ca4d8_StructIns> _31308_s = _1ac642012_Struct((*(_31037_d))._field_Kind.ptr());;
				if ((_31308_s == nullptr)) {
					goto _match_end_1b3846b28;
				};
				jule::I64 _31344_required = (*((*(_31308_s))._field_Decl))._field_Generics.len();;
				jule::I64 _31354_given = (*(_31308_s))._field_Generics.len();;
				if ((!(_1ac57c689_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _31344_required, _31354_given, (*_310226_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1b3846b28:;
	};
	return _31037_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62a968_eval(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4aaab2_Expr> _314725_expr) {
	jule::Ptr<_1ac60a55d_Data> _31487_d = _1ac62a627_eval1(_self_, _314725_expr);;
	if ((_31487_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1ac642a4b_comptime((*(_31487_d))._field_Kind.ptr()))) {
		_1ac57b15a_pushErr((*_self_.alloc)._field_s.ptr(), (*(_314725_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _31487_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62aca9_evalExpr1(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4aaab2_Expr> _316230_expr) {
	jule::Ptr<_1ac60a55d_Data> _31637_d = _1ac62a627_eval1(_self_, _316230_expr);;
	{
		
		if ((_31637_d == nullptr)) {
			_case_begin_1b388a9e6:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31637_d))._field_Decl) {
			_case_begin_1b388aa90:;
			{
				_1ac60c818_pushErr(_self_, (*(_316230_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b388a96e:;
			{
				return _31637_d;;
			}
		}
		_match_end_1b388a8e7:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62b0ea_evalExpr(jule::Ptr<_1ac60c285_eval> _self_, jule::Ptr<_1ac4aaab2_Expr> _317829_expr) {
	jule::Ptr<_1ac60a55d_Data> _31797_d = _1ac62a968_eval(_self_, _317829_expr);;
	{
		
		if ((_31797_d == nullptr)) {
			_case_begin_1b388ca5e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31797_d))._field_Decl) {
			_case_begin_1b388cb08:;
			{
				_1ac60c818_pushErr(_self_, (*(_317829_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b388c9d7:;
			{
				return _31797_d;;
			}
		}
		_match_end_1b388c960:;
	};
}








inline jule::Bool _1ac62b57e_unaryEval_eq(_1ac62b57e_unaryEval *_self_, _1ac62b57e_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1ac62b57e_unaryEval static__1ac62ba02_new(jule::Ptr<_1ac60c285_eval> _319920_e) {
	return _1ac62b57e_unaryEval{._field_e=_319920_e, ._field_d=jule::Ptr<_1ac60a55d_Data>(nullptr), ._field_u=jule::Ptr<_1ac4acb6e_UnaryExpr>(nullptr)};;
}



inline void _1ac62bc00_minus(_1ac62b57e_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b388e91d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ac64098e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b388ed08:;
			{
				if ((!(_1aa128d2b_IsNum(_1ac63d6d4_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ac642012_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b388e5bb:;
			{
				if (((*(_1ac642012_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b388e555:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b388e489:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ac60ae98_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1aa12de0d_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b38941d6:;
				{
					_1aa12ce40_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1aa12b812_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aa12d3c4_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b38942c4:;
				{
					_1aa12c36d_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1aa12acc8_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aa12d65a_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b3893d84:;
				{
					_1aa12c36d_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1aa12ba98_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b3893d0c:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3237:5"));;
				}
			}
			_match_end_1b3893c30:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ac4cebc4_UnaryExprModel>(_1ac4cebc4_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac60a55d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ac62bded_plus(_1ac62b57e_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b389986d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ac64098e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3899c58:;
			{
				if ((!(_1aa128d2b_IsNum(_1ac63d6d4_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ac642012_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b389951b:;
			{
				if (((*(_1ac642012_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b38994a5:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b3899395:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ac60ae98_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1aa12de0d_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b389e136:;
				{
					_1aa12ce40_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1aa12b812_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aa12d3c4_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b389e224:;
				{
					_1aa12c36d_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1aa12acc8_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aa12d65a_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b389dcd4:;
				{
					_1aa12c36d_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1aa12ba98_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b389dc5c:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3282:5"));;
				}
			}
			_match_end_1b389db80:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ac4cebc4_UnaryExprModel>(_1ac4cebc4_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac60a55d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ac62c0eb_caret(_1ac62b57e_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b38a479b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ac64098e_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b38a4b86:;
			{
				if ((!(_1aa128754_IsInt(_1ac63d6d4_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ac642012_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b38a4449:;
			{
				if (((*(_1ac642012_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b38a43d3:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b38a42c3:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ac60ae98_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1aa12d3c4_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b38a9053:;
				{
					_1aa12c36d_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1aa12acc8_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aa12d65a_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b38a9141:;
				{
					_1aa12c626_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1aa12b05e_ReadU64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b38a8b8a:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3325:5"));;
				}
			}
			_match_end_1b38a8aad:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ac4cebc4_UnaryExprModel>(_1ac4cebc4_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac60a55d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ac62c2e9_excl(_1ac62b57e_unaryEval* _self_) {
	jule::Ptr<_1ac646401_Prim> _33393_t = _1ac64098e_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_33393_t == nullptr) || (!(_1ac649635_IsBool(_33393_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ac60ae98_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1aa12d8e1_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b38b0334:;
				{
					_1aa12c8ce_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1aa12b2e5_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1b38aee6b:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3353:5"));;
				}
			}
			_match_end_1b38aed8e:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ac4cebc4_UnaryExprModel>(_1ac4cebc4_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac60a55d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ac62c4e7_star(_1ac62b57e_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ac4cebc4_UnaryExprModel>(_1ac4cebc4_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac60a55d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
	{
		
		if ((_1ac640eab_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b38b3b84:;
			{
				if ((!(_1ac60d30d_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1ac60c818_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ac64d6e4_Ptr> _33788_t = _1ac640eab_Ptr((*((*(_self_))._field_d))._field_Kind);;
				if (_1ac64e261_IsUnsafe(_33788_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_33788_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1ac640c25_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b38b3c0b:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1ac640c25_Sptr((*((*(_self_))._field_d))._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1b38b37cc:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b38b27ba:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1ac62c6e5_amper(_1ac62b57e_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b38bc451:;
			{
				jule::Ptr<_1ac4d0598_StructLitExprModel> _34008_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1ac4d0598_StructLitExprModel>();;
				_1ac635489_makeStructLitAlloc(&((*(_self_))._field_d), &(_34008_lit));
			}
		}
		else {
			_case_begin_1b38b986b:;
			{
				{
					
					if (_1ac659b1d_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1b38ba262:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac64d6e4_Ptr>(_1ac64d6e4_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ac4cebc4_UnaryExprModel>(_1ac4cebc4_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac60a55d_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
						}
					}
					else {
						_case_begin_1b38b945e:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1b38b9d11:;
				};
			}
		}
		_match_end_1b38b9805:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1ac62c8e3_typeDecl(_1ac62b57e_unaryEval* _self_) {
	_1ac6506d5_typeChecker _34257_tc = _1ac6506d5_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1ac64e6e5_referencer>(nullptr), ._field_refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ac63c4e6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b38c0ed2:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac656015_buildPtrFromType(&_34257_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b38c0b91:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac655883_buildSptrFromType(&_34257_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		else {
			_case_begin_1b38c05ca:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b38c0b19:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1ac62cae1_evalData(_1ac62b57e_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b38c67e0:;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _34508_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1ac62a968_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34508_prefix;
			}
		}
		else {
			_case_begin_1b38c0c07:;
			{
				(*(_self_))._field_d=_1ac62a968_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1b38c63c2:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62ce32_eval(_1ac62b57e_unaryEval* _self_, jule::Ptr<_1ac4acb6e_UnaryExpr> _345924_u) {
	(*(_self_))._field_u=_345924_u;
	_1ac62cae1_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1ac62c8e3_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _34703_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b38caea9:;
			{
				_1ac62bc00_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b38cb020:;
			{
				_1ac62bded_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b38cb086:;
			{
				_1ac62c0eb_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1b38cb0ec:;
			{
				_1ac62c2e9_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b38cb163:;
			{
				_1ac62c4e7_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b38cb1c9:;
			{
				_1ac62c6e5_amper(_self_);
			}
		}
		else {
			_case_begin_1b38ca96a:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1b38cae32:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b38cb6d5:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str(_34703_kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1ac60ae98_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1b38c9639:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type20);
			}
		}
		_match_end_1b38cd1ba:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1ac62d51a_binaryEval_eq(_1ac62d51a_binaryEval *_self_, _1ac62d51a_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1ac62d51a_binaryEval static__1ac62db03_newPlain(jule::Ptr<_1ac60c285_eval> _350725_e) {
	return _1ac62d51a_binaryEval{._field_e=_350725_e, ._field_l=jule::Ptr<_1ac60a55d_Data>(nullptr), ._field_r=jule::Ptr<_1ac60a55d_Data>(nullptr), ._field_op=jule::Ptr<_1ac4912c3_Token>(nullptr)};;
}



inline _1ac62d51a_binaryEval static__1ac62de77_new(jule::Ptr<_1ac60c285_eval> _351320_e, jule::Ptr<_1ac4912c3_Token> _351334_op) {
	return _1ac62d51a_binaryEval{._field_e=_351320_e, ._field_l=jule::Ptr<_1ac60a55d_Data>(nullptr), ._field_r=jule::Ptr<_1ac60a55d_Data>(nullptr), ._field_op=_351334_op};;
}



inline jule::Bool _1ac62e20d_checkTypeCompatibility(_1ac62d51a_binaryEval* _self_) {
	return _1ac58550a_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1ac62e494_checkStructCommonOperatorCompatibility(_1ac62d51a_binaryEval* _self_) {
	jule::Ptr<_1ac4dee04_FnIns> _352711_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b38d3b60:;
			{
				_352711_overload=(*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b38d380d:;
			{
				_352711_overload=(*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b38d3874:;
			{
				_352711_overload=(*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b38d38da:;
			{
				_352711_overload=(*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b38d3951:;
			{
				_352711_overload=(*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b38d39b7:;
			{
				_352711_overload=(*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b38d3a2d:;
			{
				_352711_overload=(*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b38d526b:;
			{
				_352711_overload=(*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b38d52d2:;
			{
				_352711_overload=(*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b38d5348:;
			{
				_352711_overload=(*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b38d33bd:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1b38d3786:;
	};
	if ((_352711_overload == nullptr)) {
		_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1ac4ddc9e_ParamIns> _35597_p = (*(_352711_overload))._field_Params[1LL];;
	return _1ac5841c9_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35597_p))._field_Decl))._field_Reference, &((*_35597_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op, _1ac61081b_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62e72a_evalComptimeTypeInfo(_1ac62d51a_binaryEval* _self_) {
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _35647_r = _1ac644355_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_35647_r == nullptr)) {
		_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac5170e6_comptimeTypeInfo> _35697_l = _1ac644355_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b38e45dd:;
			{
				jule::Ptr<_1aa1293c0_Const> _35728_constant = static__1aa129dc6_NewBool(_1ac63da25_Equal((*(_35697_l))._field_base, (*(_35647_r))._field_base));;
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35728_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_35728_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b38e5a84:;
			{
				jule::Ptr<_1aa1293c0_Const> _35798_constant = static__1aa129dc6_NewBool((!(_1ac63da25_Equal((*(_35697_l))._field_base, (*(_35647_r))._field_base))));;
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35798_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_35798_constant});;
			}
		}
		else {
			_case_begin_1b38e23ee:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b38e4214:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62e9b1_evalNil(_1ac62d51a_binaryEval* _self_) {
	if ((!(_1ac6401db_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b38ea78c:;
			{
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b38e8a76:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b38ea3b3:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62ec47_evalEnum(_1ac62d51a_binaryEval* _self_) {
	jule::Ptr<_1ac5030b0_Enum> _36107_enm = _1ac641242_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b38ecbbd:;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _36148_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1ac641242_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
					_36148_rkind=(*((*(_1ac641242_Enum((*((*(_self_))._field_r))._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1ac584b36_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_36107_enm))._field_Kind.alloc)._field_Kind), &(_36148_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		_match_end_1b38ecb46:;
	};
	if (((_1ac641242_Enum((*((*(_self_))._field_r))._field_Kind) == nullptr) || (_36107_enm != _1ac641242_Enum((*((*(_self_))._field_r))._field_Kind)))) {
		_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_36107_enm))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b390381c:;
			{
				if ((!(_1aa128d2b_IsNum(_1ac63d6d4_Str((*(*(_36107_enm))._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36107_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b3904961:;
			{
				jule::Ptr<_1ac502543_EnumItem> _36444_first = (*_36107_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1aa12d3c4_IsI64((*((*((*(_36444_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1b390847b:;
						{
							if ((_1aa12acc8_ReadI64((*((*((*(_36444_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1b390cd65;
							};
							goto _julec_label_1b390b869;
						}
					}
					else if (_1aa12d65a_IsU64((*((*((*(_36444_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1b3908569:;
						{
							if ((_1aa12b05e_ReadU64((*((*((*(_36444_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1b390cd65;
							};
							goto _julec_label_1b390b869;
						}
					}
					else {
						_case_begin_1b39080b3:;
						{
							__jule_panic_s(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3657:5"));;
						}
					}
					_match_end_1b390803b:;
				};
				_julec_label_1b390b869:;
				_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_36107_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1ac60cb7b_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1b390cd65:;
				goto _case_begin_1b39049c7;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b39049c7:;
			{
				if (((_1ac64098e_Prim((*(*(_36107_enm))._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1aa128754_IsInt(_1ac646775_Str(_1ac64098e_Prim((*((*(_36107_enm))._field_Kind))._field_Kind).ptr())))))) {
					_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36107_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b38ecc34:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36107_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3903465:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac62eecd_evalTypeEnum(_1ac62d51a_binaryEval* _self_) {
	jule::Ptr<_1ac5047ba_TypeEnum> _36777_enm = _1ac6414c8_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1ac62e20d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3911b27:;
			{
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b3910e56:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac504b3e_Str(_36777_enm.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b39116b5:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac630264_evalSptr(_1ac62d51a_binaryEval* _self_) {
	if ((!(_1ac62e20d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3914146:;
			{
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b3913068:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3913c6c:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6304ea_evalPtr(_1ac62d51a_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b3916522:;
			{
				if ((!(_1ac62e20d_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b3917985:;
			{
				if ((_1ac640eab_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1ac64e261_IsUnsafe(_1ac640eab_Ptr((*((*(_self_))._field_l))._field_Kind).ptr())) {
					_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
				if ((!(_1ac636622_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b3915b1a:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3915a3d:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac630781_evalArr(_1ac62d51a_binaryEval* _self_) {
	if ((!(_1ac62e20d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b391e74a:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1ac4dee04_FnIns> _37549_f = _1ac4dd353_instanceForce(_1ac15ae05_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37549_f))._field_Generics=jule::append((*_37549_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac63b902_InsGeneric>(_1ac63b902_InsGeneric{._field_Kind=(*(_1ac64175e_Arr((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr)}); __jule_collection; }));
					jule::Bool _37565_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac599596_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37549_f), &((*(_self_))._field_op));
						_37565_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37565_ok))) {
						__jule_panic_s(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/eval.jule:3758:6"));;
					};
					_1b3dca013_pushReference((*(_self_))._field_e, &(_37549_f));
				};
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b39193d2:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b391e371:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac630a17_evalStruct(_1ac62d51a_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b3921120:;
			{
				if (((*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b39211a8:;
			{
				if (((*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b3925861:;
			{
				if (((*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b39258c7:;
			{
				if (((*(_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b392593d:;
			{
				if ((!(_1ac62e20d_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		_match_end_1b3921043:;
	};
	if ((!(_1ac62e494_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac630c9d_evalTrait(_1ac62d51a_binaryEval* _self_) {
	if ((!(_1ac62e20d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b39320cb:;
			{
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b3931482:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3931c02:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac631034_evalAny(_1ac62d51a_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b39344a7:;
			{
				_1ac65b3a0_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op), _1ac61081b_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b3933aa0:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b39339c3:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6312ba_evalBool(_1ac62d51a_binaryEval* _self_) {
	if ((!(_1ac62e20d_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b3937642:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b39357d8:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3937268:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac631551_evalStr(_1ac62d51a_binaryEval* _self_) {
	jule::Str _38707_rk = _1ac63d6d4_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_38707_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_38707_rk, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b393b8cc:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b393b7de:;
			{
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1b393a39d:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b393b437:;
	};
}



inline void _1ac63174e_setTypeToGreater(_1ac62d51a_binaryEval* _self_) {
	jule::Ptr<_1ac646401_Prim> _38953_lp = _1ac64098e_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1ac646401_Prim> _38963_rp = _1ac64098e_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38963_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38953_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38953_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1ac631a07_checkModData(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _391233_d) {
	if ((!(_1ac60ae98_IsConst((*(_391233_d)).ptr())))) {
		if (((_1ac64098e_Prim((*((*(_391233_d))))._field_Kind.ptr()) == nullptr) || (!(_1aa128754_IsInt((*(_1ac64098e_Prim((*((*(_391233_d))))._field_Kind)))._field_Kind))))) {
			_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1ac5e10c1_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _391233_d)) {
			_case_begin_1b3947e27:;
			{
				_1aa12c36d_SetI64((*((*(_391233_d))))._field_Constant.ptr(), _1aa12ba98_AsI64((*((*(_391233_d))))._field_Constant));
			}
		}
		else if (_1ac5e1489_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _391233_d)) {
			_case_begin_1b3947b08:;
			{
				_1aa12c626_SetU64((*((*(_391233_d))))._field_Constant.ptr(), _1aa12bd2e_AsU64((*((*(_391233_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1b3947a92:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b3947a2b:;
	};
}



inline void _1ac631c05_mod(_1ac62d51a_binaryEval* _self_) {
	_1ac631a07_checkModData(_self_, &((*(_self_))._field_l));
	_1ac631a07_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1ac632101_numbersAreCompatibile(_1ac62d51a_binaryEval* _self_, jule::Str* _393434_lk, jule::Str* _393444_rk) {
	if ((!(_1aa128d2b_IsNum((*(_393444_rk)))))) {
		return false;;
	};
	if ((_1ac60ae98_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_393434_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1ac60ae98_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1ac5e0c4c_floatAssignable(_393434_lk, &((*(_self_))._field_r));;
		};
		return ((*(_393444_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_393434_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1ac60ae98_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1ac5e0c4c_floatAssignable(_393434_lk, &((*(_self_))._field_r));;
		};
		return ((*(_393444_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1ac60ae98_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1ac5e180d_intAssignable((*(_393434_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_393434_lk)) == (*(_393444_rk)));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac632387_shift(_1ac62d51a_binaryEval* _self_) {
	jule::Ptr<_1ac646401_Prim> _39623_lk = _1ac64098e_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((_39623_lk == nullptr)) {
		_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac646401_Prim> _39673_rk = _1ac64098e_Prim((*((*(_self_))._field_r))._field_Kind);;
	if ((_39673_rk == nullptr)) {
		_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1aa128d2b_IsNum((*(_39623_lk))._field_Kind))) || (!(_1aa128d2b_IsNum((*(_39673_rk))._field_Kind))))) {
		_1ac585054_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1aa128754_IsInt((*(_39623_lk))._field_Kind)))) {
		if (((!(_1ac60ae98_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39623_lk))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*(_39673_rk))._field_Kind, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} else if (_1ac5e180d_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1aa12c36d_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1aa12ba98_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1ac729957_primI64;
		} else if (_1ac5e180d_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1aa12c626_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1aa12bd2e_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1ac72a75a_primU64;
		};
	};
	if ((!(_1aa128754_IsInt((*(_39673_rk))._field_Kind)))) {
		if (((!(_1ac60ae98_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39623_lk))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*(_39673_rk))._field_Kind, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} else if (_1ac5e180d_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1aa12c36d_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1aa12ba98_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1ac729957_primI64;
		} else if (_1ac5e180d_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1aa12c626_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1aa12bd2e_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1ac72a75a_primU64;
		};
	};
	if ((!(_1ac635e4b_isOkForShifting(&((*(_self_))._field_r))))) {
		_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac63261d_evalFloat(_1ac62d51a_binaryEval* _self_) {
	jule::Str _40173_lk = (*(_1ac64098e_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40183_rk = (*(_1ac64098e_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1ac632101_numbersAreCompatibile(_self_, &(_40173_lk), &(_40183_rk))))) {
		_1ac585054_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b3964185:;
			{
				_1ac63174e_setTypeToGreater(_self_);
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		_match_end_1b396410d:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b3965b59:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4042:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b3966a06:;
			{
				_1ac63174e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b3966a6c:;
			{
				_1ac63174e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b39650ed:;
			{
				if ((!(_1aa128754_IsInt(_40183_rk)))) {
					_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_40173_lk, &__jule_any_type4); (*it++) = jule::Any(_40183_rk, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1ac631c05_mod(_self_);
				_1ac63174e_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1b3964273:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3965087:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac6328a4_evalInt(_1ac62d51a_binaryEval* _self_) {
	jule::Str _40663_lk = (*(_1ac64098e_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40673_rk = (*(_1ac64098e_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1ac632101_numbersAreCompatibile(_self_, &(_40663_lk), &(_40673_rk))))) {
		_1ac585054_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b396c9c9:;
			{
				return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac7284d3_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
			}
		}
		_match_end_1b396c952:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b396e2b1:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4091:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b397015d:;
			{
				_1ac63174e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b39701c4:;
			{
				_1ac63174e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b396d8cb:;
			{
				_1ac631c05_mod(_self_);
				_1ac63174e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b396cab7:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b396dda4:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac632b3a_evalPrim(_1ac62d51a_binaryEval* _self_) {
	jule::Ptr<_1ac646401_Prim> _41143_prim = _1ac64098e_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1ac649635_IsBool(_41143_prim.ptr())) {
			_case_begin_1b42bc4e3:;
			{
				return _1ac6312ba_evalBool(_self_);;
			}
		}
		else if (_1ac6498bb_IsStr(_41143_prim.ptr())) {
			_case_begin_1b42bc58c:;
			{
				return _1ac631551_evalStr(_self_);;
			}
		}
		_match_end_1b42bc45a:;
	};
	if ((_1ac64098e_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac646775_Str(_41143_prim.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1aa128a95_IsFloat((*_41143_prim.alloc)._field_Kind)) {
			_case_begin_1b42c042a:;
			{
				return _1ac63261d_evalFloat(_self_);;
			}
		}
		else if (_1aa128754_IsInt((*_41143_prim.alloc)._field_Kind)) {
			_case_begin_1b42c04b3:;
			{
				return _1ac6328a4_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1b42c03b4:;
			{
				return nullptr;;
			}
		}
		_match_end_1b42bd6d1:;
	};
}



inline jule::Bool _1ac632dc1_checkSpecialCases(_1ac62d51a_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41393_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));;
	if ((!(_41393_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1ac63e938_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1ac63e41b_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1ac63e938_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1ac63e41b_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac633157_evalOp(_1ac62d51a_binaryEval* _self_) {
	jule::Bool _41543_ok = _1ac632dc1_checkSpecialCases(_self_);;
	if ((!(_41543_ok))) {
		return nullptr;;
	};
	if ((_1ac642012_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
		return _1ac630a17_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(57LLU)))) {
		return _1ac632387_shift(_self_);;
	};
	{
		
		if (_1ac63e6a2_Void((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1b42c95bb:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1ac644355_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b42c9775:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b42c9632;
			}
		}
		else if ((_1ac644355_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b42c9632:;
			{
				return _1ac62e72a_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1ac64098e_Prim((*((*(_self_))._field_r))._field_Kind) != nullptr) && _1ac649b52_IsAny(_1ac64098e_Prim((*((*(_self_))._field_r))._field_Kind).ptr()))) {
			_case_begin_1b42c9698:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b42cac1b;
			}
		}
		else if (_1ac63e41b_IsNil((*((*(_self_))._field_r))._field_Kind)) {
			_case_begin_1b42cac1b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b42cac82;
			}
		}
		else if (_1ac63e41b_IsNil((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1b42cac82:;
			{
				return _1ac62e9b1_evalNil(_self_);;
			}
		}
		else if (((_1ac64098e_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr) && _1ac649b52_IsAny(_1ac64098e_Prim((*((*(_self_))._field_l))._field_Kind).ptr()))) {
			_case_begin_1b42cad81:;
			{
				return _1ac631034_evalAny(_self_);;
			}
		}
		else if ((_1ac6414c8_TypeEnum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b42cade7:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b42cae5d;
			}
		}
		else if ((_1ac6414c8_TypeEnum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b42cae5d:;
			{
				return _1ac62eecd_evalTypeEnum(_self_);;
			}
		}
		else if ((_1ac641242_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b42caec4:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b42cb03a;
			}
		}
		else if ((_1ac641242_Enum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b42cb03a:;
			{
				return _1ac62ec47_evalEnum(_self_);;
			}
		}
		else if ((_1ac640c25_Sptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b42cb0a1:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b42cb117;
			}
		}
		else if ((_1ac640c25_Sptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b42cb117:;
			{
				return _1ac630264_evalSptr(_self_);;
			}
		}
		else if ((_1ac640eab_Ptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b42cb17d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b42cb1e4;
			}
		}
		else if ((_1ac640eab_Ptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b42cb1e4:;
			{
				return _1ac6304ea_evalPtr(_self_);;
			}
		}
		else if ((_1ac64175e_Arr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b42cb25a:;
			{
				return _1ac630781_evalArr(_self_);;
			}
		}
		else if ((_1ac642298_Trait((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1b42cb326:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b42cb38c;
			}
		}
		else if ((_1ac642298_Trait((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b42cb38c:;
			{
				return _1ac630c9d_evalTrait(_self_);;
			}
		}
		else if ((_1ac64098e_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1b42cb403:;
			{
				return _1ac632b3a_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1b42c93e0:;
			{
				_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b42c8983:;
	};
}



inline void _1ac633410_evalConst(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _422430_d) {
	{
		
		if (((*(_422430_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1b42dd080:;
			{
				return;;
			}
		}
		else if ((!(_1ac60ae98_IsConst((*(_self_))._field_l.ptr()))) || (!(_1ac60ae98_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1b42dd635:;
			{
				(*((*(_422430_d))))._field_Constant=nullptr;
				(*((*(_422430_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1b42dce70:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b42dd712:;
			{
				(*((*(_422430_d))))._field_Constant=static__1aa129dc6_NewBool(_1aa12eea8_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b42e0b65:;
			{
				(*((*(_422430_d))))._field_Constant=static__1aa129dc6_NewBool((!(_1aa12eea8_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b42e0bcb:;
			{
				(*((*(_422430_d))))._field_Constant=static__1aa129dc6_NewBool(_1aa12eb67_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b42e0c42:;
			{
				(*((*(_422430_d))))._field_Constant=static__1aa129dc6_NewBool(_1aa12e826_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b42e0ca8:;
			{
				(*((*(_422430_d))))._field_Constant=static__1aa129dc6_NewBool(_1aa13097b_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b42e0d30:;
			{
				(*((*(_422430_d))))._field_Constant=static__1aa129dc6_NewBool(_1aa1302e9_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b42e0da7:;
			{
				(*((*(_422430_d))))._field_Constant=static__1aa129dc6_NewBool(_1aa130cbc_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b42e0e2e:;
			{
				(*((*(_422430_d))))._field_Constant=static__1aa129dc6_NewBool(_1aa13063a_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b42e0ea6:;
			{
				_1aa13110d_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b42e102d:;
			{
				_1aa13144e_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b42e10a5:;
			{
				_1aa131790_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b42e112c:;
			{
				jule::Bool _42644_ok = _1aa131ad1_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42644_ok)) && (_1aa12c0b5_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1ac646401_Prim> _42698_prim = _1ac64098e_Prim((*((*(_422430_d))))._field_Kind.ptr());;
				{
					
					if (_1aa12817c_IsSigInt((*(_42698_prim))._field_Kind)) {
						_case_begin_1b430236e:;
						{
							_1aa12c36d_SetI64((*((*(_422430_d))))._field_Constant, _1aa12ba98_AsI64((*((*(_422430_d))))._field_Constant));
						}
					}
					else if (_1aa12848a_IsUnsigInt((*(_42698_prim))._field_Kind)) {
						_case_begin_1b4302418:;
						{
							_1aa12c626_SetU64((*((*(_422430_d))))._field_Constant, _1aa12bd2e_AsU64((*((*(_422430_d))))._field_Constant));
						}
					}
					_match_end_1b43022e7:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b42e11a4:;
			{
				jule::Bool _42774_ok = _1aa131e22_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42774_ok)) && (_1aa12c0b5_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b42e122b:;
			{
				_1aa1325a4_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b42e12a3:;
			{
				_1aa132263_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b42e132a:;
			{
				_1aa1328e5_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b42e13a2:;
			{
				_1aa132c36_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b42e1429:;
			{
				_1aa133077_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422430_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1b42dee50:;
	};
	(*((*(_422430_d))))._field_Model=jule::Any((*((*(_422430_d))))._field_Constant, &__jule_any_type20);
	_1ac638349_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _422430_d, _1ac641242_Enum((*((*(_422430_d))))._field_Kind.ptr()), &((*(_self_))._field_op), _1ac61081b_getOwnerRefers((*(_self_))._field_e));
}



inline void _1ac6336b8_checkData(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _430230_d) {
	jule::Ptr<_1ac4dee04_FnIns> _43033_f = _1ac641c7b_Fn((*((*(_430230_d))))._field_Kind.ptr());;
	if ((((_43033_f != nullptr) && ((*_43033_f.alloc)._field_Decl != nullptr)) && _1ac4dc583_IsMethod((*(_43033_f))._field_Decl))) {
		_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1ac6338b6_checkDatas(_1ac62d51a_binaryEval* _self_) {
	_1ac6336b8_checkData(_self_, &((*(_self_))._field_l));
	_1ac6336b8_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1ac633b6e_setModel(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _431429_d) {
	if (_1ac60ae98_IsConst((*(_431429_d)).ptr())) {
		if (((_1ac60ae98_IsConst((*(_self_))._field_l.ptr()) && _1ac60ae98_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1ac60a55d_Data> _43257_l;
	jule::Ptr<_1ac60a55d_Data> _432514_r;
	({
		jule::Ptr<_1ac60a55d_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1ac60a55d_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_43257_l = ___jule_assign_arg;
		_432514_r = _1___jule_assign_arg;
	});
	if ((!(_1ac60b2d9_GoodOperand(_43257_l, &(_432514_r))))) {
		std::swap(_43257_l, _432514_r);
	};
	(*((*(_431429_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4ce7ea_BinaryExprModel>(_1ac4ce7ea_BinaryExprModel{._field_Left=jule::new_ptr<_1ac4ce300_OperandExprModel>(_1ac4ce300_OperandExprModel{._field_Kind=(*_43257_l.alloc)._field_Kind, ._field_Model=(*_43257_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1ac4ce300_OperandExprModel>(_1ac4ce300_OperandExprModel{._field_Kind=(*_432514_r.alloc)._field_Kind, ._field_Model=(*_432514_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type113);
}



inline void _1ac633e27_postEval(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _434329_d) {
	(*((*(_434329_d))))._field_Lvalue=false;
	_1ac633b6e_setModel(_self_, _434329_d);
}



inline jule::Ptr<_1ac60a55d_Data> _1ac634323_solveExplicit(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac60a55d_Data>* _434834_l, jule::Ptr<_1ac60a55d_Data>* _434849_r) {
	({
		jule::Ptr<_1ac60a55d_Data> ___jule_assign_arg = (*(_434834_l));
		jule::Ptr<_1ac60a55d_Data> _1___jule_assign_arg = (*(_434849_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ac6338b6_checkDatas(_self_);
	jule::Ptr<_1ac60a55d_Data> _43537_d = _1ac633157_evalOp(_self_);;
	({
		jule::Ptr<_1ac60a55d_Data> ___jule_assign_arg = (*(_434834_l));
		jule::Ptr<_1ac60a55d_Data> _1___jule_assign_arg = (*(_434849_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ac633410_evalConst(_self_, &(_43537_d));
	if ((_43537_d != nullptr)) {
		(*_43537_d.alloc)._field_Mutable=true;
		_1ac633e27_postEval(_self_, &(_43537_d));
	};
	return _43537_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac634664_eval(_1ac62d51a_binaryEval* _self_, jule::Ptr<_1ac4ae17b_BinaryExpr>* _436825_op) {
	if (((*((*((*(_436825_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ac60c818_pushErr((*(_self_))._field_e.ptr(), (*((*(_436825_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1ac60cb7b_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac60a55d_Data> _43757_l = _1ac62aca9_evalExpr1((*(_self_))._field_e, (*((*(_436825_op))))._field_Left);;
	if (((_43757_l == nullptr) || ((*(_43757_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _43807_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43757_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43807_prefix;
	});;
	jule::Ptr<_1ac60a55d_Data> _43837_r = _1ac62aca9_evalExpr1((*(_self_))._field_e, (*((*(_436825_op))))._field_Right);;
	if (((_43837_r == nullptr) || ((*(_43837_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_436825_op))))._field_Op;
	jule::Ptr<_1ac60a55d_Data> _43907_d = _1ac634323_solveExplicit(_self_, &(_43757_l), &(_43837_r));;
	if ((((_43907_d != nullptr) && (*(_43757_l))._field_IsRune) && (*(_43837_r))._field_IsRune)) {
		(*_43907_d.alloc)._field_IsRune=true;
	};
	return _43907_d;;
}
















inline jule::Bool _1ac63d2d8_TypeKind_eq(_1ac63d2d8_TypeKind *_self_, _1ac63d2d8_TypeKind _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1ac63d6d4_Str(_1ac63d2d8_TypeKind* _self_) {
	if (_1ac63e41b_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1b097ade7_StrBuilder _747_kind = static__1b097b1e4_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1b0984be2_WriteStr(&_747_kind, jule::Str::lit("...", 3));
	};
	if (_1ac63e185_Binded(_self_)) {
		_1b0984be2_WriteStr(&_747_kind, jule::Str::lit("cpp.", 4));
		_1b0984be2_WriteStr(&_747_kind, (*(_self_))._field_BindIdent);
	} else {
		_1b0984be2_WriteStr(&_747_kind, ((_1ac63cd32_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1ac63c88c_Str((*(_self_))._field_Kind.data));
	};
	return _1b09854d9_Str(&_747_kind);;
}



inline jule::Bool _1ac63da25_Equal(jule::Ptr<_1ac63d2d8_TypeKind> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _9018_other) {
	if (_1ac63e41b_IsNil(_self_.ptr())) {
		return _1ac63e41b_IsNil(_9018_other.ptr());;
	};
	if (_1ac63e185_Binded(_self_)) {
		return (_1ac63e185_Binded(_9018_other) && ((*_self_.alloc)._field_BindIdent == (*_9018_other.alloc)._field_BindIdent));;
	};
	return ((_1ac63cd32_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1ac63cbcd_Equal((*_self_.alloc)._field_Kind.data, _9018_other);;
}



inline jule::Bool _1ac63e185_Binded(_1ac63d2d8_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1ac63e41b_IsNil(_1ac63d2d8_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1ac63e6a2_Void(_1ac63d2d8_TypeKind* _self_) {
	jule::Ptr<_1ac646401_Prim> _1103_prim = _1ac64098e_Prim(_self_);;
	return ((_1103_prim != nullptr) && (*(_1103_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1ac63e938_Comparable(_1ac63d2d8_TypeKind* _self_) {
	{
		_1ac63d2d8_TypeKind* _1178__self = _self_;;
		if ((_1ac642012_Struct(_1178__self) != nullptr)) {
			return (*(_1ac642012_Struct(_1178__self)))._field_Comparable;;
		};
		if ((_1ac64175e_Arr(_1178__self) != nullptr)) {
			return _1ac63e938_Comparable((*(_1ac64175e_Arr(_1178__self)))._field_Elem.ptr());;
		};
		return (((_1ac64252e_Map(_1178__self) == nullptr) && (_1ac6419e5_Slc(_1178__self) == nullptr)) && (_1ac641c7b_Fn(_1178__self) == nullptr));;
	};
}



inline jule::Bool _1ac63ebbe_Mutable(_1ac63d2d8_TypeKind* _self_) {
	{
		_1ac63d2d8_TypeKind* _1318__self = _self_;;
		if ((_1ac642012_Struct(_1318__self) != nullptr)) {
			return (*(_1ac642012_Struct(_1318__self)))._field_Mutable;;
		};
		if ((_1ac642298_Trait(_1318__self) != nullptr)) {
			return true;;
		};
		if ((_1ac64098e_Prim(_1318__self) != nullptr)) {
			jule::Ptr<_1ac646401_Prim> _1395_p = _1ac64098e_Prim(_1318__self);;
			return _1ac649b52_IsAny(_1395_p.ptr());;
		};
		if ((_1ac64175e_Arr(_1318__self) != nullptr)) {
			return _1ac63ebbe_Mutable((*(_1ac64175e_Arr(_1318__self)))._field_Elem.ptr());;
		};
		return (((_1ac6419e5_Slc(_1318__self) != nullptr) || (_1ac640eab_Ptr(_1318__self) != nullptr)) || (_1ac640c25_Sptr(_1318__self) != nullptr));;
	};
}



inline jule::Bool _1ac63ee55_Ordered(_1ac63d2d8_TypeKind* _self_) {
	{
		_1ac63d2d8_TypeKind* _1548__self = _self_;;
		jule::Ptr<_1ac646401_Prim> _1554_prim = _1ac64098e_Prim(_1548__self);;
		if ((_1554_prim != nullptr)) {
			return (_1aa128d2b_IsNum((*_1554_prim.alloc)._field_Kind) || _1ac6498bb_IsStr(_1554_prim));;
		};
		if ((_1ac640eab_Ptr(_1548__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1ac4ca4d8_StructIns> _1624_s = _1ac642012_Struct(_1548__self);;
		if ((_1624_s != nullptr)) {
			return (((((*_1624_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1624_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1ac5030b0_Enum> _1694_enm = _1ac641242_Enum(_1548__self);;
		if ((_1694_enm != nullptr)) {
			return _1aa128d2b_IsNum(_1ac63d6d4_Str((*((*_1694_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1ac6401db_NilCompatible(_1ac63d2d8_TypeKind* _self_) {
	{
		_1ac63d2d8_TypeKind* _1808__self = _self_;;
		jule::Ptr<_1ac646401_Prim> _1824_prim = _1ac64098e_Prim(_1808__self);;
		if (((_1824_prim != nullptr) && _1ac649b52_IsAny(_1824_prim))) {
			return true;;
		};
		return (((((((_1ac63e41b_IsNil(_1808__self) || (_1ac641c7b_Fn(_1808__self) != nullptr)) || (_1ac640c25_Sptr(_1808__self) != nullptr)) || (_1ac640eab_Ptr(_1808__self) != nullptr)) || (_1ac642298_Trait(_1808__self) != nullptr)) || (_1ac6419e5_Slc(_1808__self) != nullptr)) || (_1ac64252e_Map(_1808__self) != nullptr)) || (_1ac6414c8_TypeEnum(_1808__self) != nullptr));;
	};
}



inline jule::Bool _1ac640472_GC(_1ac63d2d8_TypeKind* _self_) {
	{
		_1ac63d2d8_TypeKind* _2018__self = _self_;;
		jule::Ptr<_1ac646401_Prim> _2024_prim = _1ac64098e_Prim(_2018__self);;
		if ((_2024_prim != nullptr)) {
			return (_1ac649b52_IsAny(_2024_prim) || _1ac6498bb_IsStr(_2024_prim));;
		};
		return ((((_1ac640c25_Sptr(_2018__self) != nullptr) || (_1ac6419e5_Slc(_2018__self) != nullptr)) || (_1ac642298_Trait(_2018__self) != nullptr)) || (_1ac6414c8_TypeEnum(_2018__self) != nullptr));;
	};
}



inline jule::Bool _1ac640708_Variadicable(_1ac63d2d8_TypeKind* _self_) {
	{
		_1ac63d2d8_TypeKind* _2148__self = _self_;;
		return (_1ac6419e5_Slc(_2148__self) != nullptr);;
	};
}



inline jule::Ptr<_1ac646401_Prim> _1ac64098e_Prim(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)) {
			_case_begin_1b41b6002:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac646401_Prim>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1b41ca4cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41ca467:;
	};
}



inline jule::Ptr<_1ac649e2c_Sptr> _1ac640c25_Sptr(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23)) {
			_case_begin_1b41cb16b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac649e2c_Sptr>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1b41cb3be:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41cb358:;
	};
}



inline jule::Ptr<_1ac64d6e4_Ptr> _1ac640eab_Ptr(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data28)) {
			_case_begin_1b41cc0e5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac64d6e4_Ptr>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1b41cbe3b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41cbdc5:;
	};
}



inline jule::Ptr<_1ac5030b0_Enum> _1ac641242_Enum(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data3)) {
			_case_begin_1b41ccd71:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac5030b0_Enum>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1b41ccbb7:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41ccb51:;
	};
}



inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac6414c8_TypeEnum(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4)) {
			_case_begin_1b41cdaec:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac5047ba_TypeEnum>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1b41cd943:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41cd8cc:;
	};
}



inline jule::Ptr<_1ac64cc21_Arr> _1ac64175e_Arr(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data27)) {
			_case_begin_1b41ce878:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac64cc21_Arr>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1b41ce6be:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41ce658:;
	};
}



inline jule::Ptr<_1ac64a900_Slc> _1ac6419e5_Slc(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data24)) {
			_case_begin_1b41d0604:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac64a900_Slc>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1b41d044a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41d03d4:;
	};
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ac641c7b_Fn(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1)) {
			_case_begin_1b41d1380:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac4dee04_FnIns>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1b41d11c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41d1160:;
	};
}



inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac642012_Struct(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)) {
			_case_begin_1b41d210b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac4ca4d8_StructIns>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1b41d1e52:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41d1ddb:;
	};
}



inline jule::Ptr<_1ac5008a4_Trait> _1ac642298_Trait(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data2)) {
			_case_begin_1b41d2d87:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac5008a4_Trait>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1b41d2bcd:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41d2b67:;
	};
}



inline jule::Ptr<_1ac64c094_Map> _1ac64252e_Map(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data26)) {
			_case_begin_1b41d3b13:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac64c094_Map>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1b41d3959:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41d38e3:;
	};
}



inline jule::Ptr<_1ac64b4e4_Tuple> _1ac6427b5_Tup(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data25)) {
			_case_begin_1b41d488e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac64b4e4_Tuple>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1b41d46d5:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41d466e:;
	};
}



inline jule::Bool _1ac642a4b_comptime(_1ac63d2d8_TypeKind* _self_) {
	return (((((((((((((((_1ac6440be_comptimeTypeInfos(_self_) != nullptr) || (_1ac644355_comptimeTypeInfo(_self_) != nullptr)) || (_1ac642cd2_comptimeStructFields(_self_) != nullptr)) || (_1ac643068_comptimeStructField(_self_) != nullptr)) || (_1ac6432ee_comptimeEnumFields(_self_) != nullptr)) || (_1ac643585_comptimeEnumField(_self_) != nullptr)) || (_1ac6445db_comptimeStatics(_self_) != nullptr)) || (_1ac644872_comptimeStatic(_self_) != nullptr)) || (_1ac64381b_comptimeParams(_self_) != nullptr)) || (_1ac643aa2_comptimeParam(_self_) != nullptr)) || (_1ac644b08_comptimeValue(_self_) != nullptr)) || (_1ac645642_comptimeFiles(_self_) != nullptr)) || (_1ac6453ab_comptimeFile(_self_) != nullptr)) || (_1ac644d8e_comptimeDecl(_self_) != nullptr)) || (_1ac645125_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1ac5094e5_comptimeStructFields> _1ac642cd2_comptimeStructFields(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data7)) {
			_case_begin_1b41d53ea:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac5094e5_comptimeStructFields>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1b41d980b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41d9795:;
	};
}



inline jule::Ptr<_1ac507c52_comptimeStructField> _1ac643068_comptimeStructField(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data6)) {
			_case_begin_1b41da17a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac507c52_comptimeStructField>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1b41d9ec1:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41d9e5a:;
	};
}



inline jule::Ptr<_1ac5104a7_comptimeEnumFields> _1ac6432ee_comptimeEnumFields(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data11)) {
			_case_begin_1b41dabd6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac5104a7_comptimeEnumFields>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1b41dae39:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41dadc3:;
	};
}



inline jule::Ptr<_1ac50e198_comptimeEnumField> _1ac643585_comptimeEnumField(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data10)) {
			_case_begin_1b41dbb60:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac50e198_comptimeEnumField>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1b41db9a6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41db940:;
	};
}



inline jule::Ptr<_1ac513d18_comptimeParams> _1ac64381b_comptimeParams(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data13)) {
			_case_begin_1b41dc6bb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac513d18_comptimeParams>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1b41dc91e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41dc8a8:;
	};
}



inline jule::Ptr<_1ac511eae_comptimeParam> _1ac643aa2_comptimeParam(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data12)) {
			_case_begin_1b41dd645:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac511eae_comptimeParam>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1b41dd48b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41dd425:;
	};
}



inline jule::Ptr<_1ac5071e6_comptimeRange> _1ac643d38_comptimeRange(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data5)) {
			_case_begin_1b41de1a1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac5071e6_comptimeRange>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1b41de404:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41de38d:;
	};
}



inline jule::Ptr<_1ac515677_comptimeTypeInfos> _1ac6440be_comptimeTypeInfos(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data14)) {
			_case_begin_1b41dee0a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac515677_comptimeTypeInfos>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1b41e015d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41e00e7:;
	};
}



inline jule::Ptr<_1ac5170e6_comptimeTypeInfo> _1ac644355_comptimeTypeInfo(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data15)) {
			_case_begin_1b41e0d84:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac5170e6_comptimeTypeInfo>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1b41e0bca:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41e0b64:;
	};
}



inline jule::Ptr<_1ac50c729_comptimeStatics> _1ac6445db_comptimeStatics(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data9)) {
			_case_begin_1b41e18e0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac50c729_comptimeStatics>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1b41e1b43:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41e1acc:;
	};
}



inline jule::Ptr<_1ac50ae75_comptimeStatic> _1ac644872_comptimeStatic(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data8)) {
			_case_begin_1b41e2869:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac50ae75_comptimeStatic>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1b41e26b0:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41e2649:;
	};
}



inline jule::Ptr<_1ac51d1eb_comptimeValue> _1ac644b08_comptimeValue(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data16)) {
			_case_begin_1b41e33c5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac51d1eb_comptimeValue>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1b41e3628:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41e35b2:;
	};
}



inline jule::Ptr<_1ac5267dc_comptimeDecl> _1ac644d8e_comptimeDecl(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data20)) {
			_case_begin_1b41e412e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac5267dc_comptimeDecl>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1b41e4382:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41e431b:;
	};
}



inline jule::Ptr<_1ac5244ee_comptimeDecls> _1ac645125_comptimeDecls(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data19)) {
			_case_begin_1b41e4d88:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac5244ee_comptimeDecls>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1b41e50db:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41e5075:;
	};
}



inline jule::Ptr<_1ac5228c6_comptimeFile> _1ac6453ab_comptimeFile(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data18)) {
			_case_begin_1b41e5d12:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac5228c6_comptimeFile>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1b41e5b58:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41e5ae2:;
	};
}



inline jule::Ptr<_1ac520e57_comptimeFiles> _1ac645642_comptimeFiles(_1ac63d2d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data17)) {
			_case_begin_1b41e6a8d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac520e57_comptimeFiles>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1b41e68d4:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41e686d:;
	};
}








inline jule::Bool _1ac6459e9_TypeSymbol_eq(_1ac6459e9_TypeSymbol *_self_, _1ac6459e9_TypeSymbol _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Bool _1ac645da1_checked(_1ac6459e9_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}








inline jule::Bool _1ac646401_Prim_eq(_1ac646401_Prim *_self_, _1ac646401_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1ac646775_Str(_1ac646401_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1ac646ab6_Equal(jule::Ptr<_1ac646401_Prim> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _53218_other) {
	jule::Ptr<_1ac646401_Prim> _5333_prim = _1ac64098e_Prim(_53218_other.ptr());;
	if ((_5333_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5333_prim))._field_Kind);;
}



inline jule::Bool _1ac64705b_IsConstraint(_1ac646401_Prim* _self_) {
	return ((((!(_1ac6498bb_IsStr(_self_))) && (!(_1ac649b52_IsAny(_self_)))) && (!(_1ac649635_IsBool(_self_)))) && (!(_1aa128d2b_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1ac6472e2_IsI8(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1ac647578_IsI16(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1ac64780e_IsI32(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1ac647a95_IsI64(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1ac647d2b_IsU8(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1ac6480b2_IsU16(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1ac648348_IsU32(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1ac6485ce_IsU64(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1ac648865_IsF32(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1ac648aeb_IsF64(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1ac648d82_IsInt(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1ac649118_IsUint(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1ac64939e_IsUintptr(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1ac649635_IsBool(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1ac6498bb_IsStr(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1ac649b52_IsAny(_1ac646401_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1ac649e2c_Sptr_eq(_1ac649e2c_Sptr *_self_, _1ac649e2c_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1ac64a2d4_Str(_1ac649e2c_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1ac63d6d4_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ac64a625_Equal(jule::Ptr<_1ac649e2c_Sptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _60918_other) {
	jule::Ptr<_1ac649e2c_Sptr> _6103_sptr = _1ac640c25_Sptr(_60918_other.ptr());;
	if ((_6103_sptr == nullptr)) {
		return false;;
	};
	return _1ac63da25_Equal((*(_self_))._field_Elem, (*(_6103_sptr))._field_Elem);;
}








inline jule::Bool _1ac64a900_Slc_eq(_1ac64a900_Slc *_self_, _1ac64a900_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1ac64adb7_Str(_1ac64a900_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1ac63d6d4_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ac64b208_Equal(jule::Ptr<_1ac64a900_Slc> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _62818_other) {
	jule::Ptr<_1ac64a900_Slc> _6293_slc = _1ac6419e5_Slc(_62818_other.ptr());;
	if ((_6293_slc == nullptr)) {
		return false;;
	};
	return _1ac63da25_Equal((*(_self_))._field_Elem, (*(_6293_slc))._field_Elem);;
}







inline jule::Str _1ac64b89b_Str(_1ac64b4e4_Tuple* _self_) {
	_1b097ade7_StrBuilder _6457_s = static__1b097b1e4_New(16LL);;
	_1b0984e9a_WriteByte(&_6457_s, '(');
	_1b0984be2_WriteStr(&_6457_s, _1ac63d6d4_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b4207de0:;
		if (it != expr_end) {
			jule::Ptr<_1ac63d2d8_TypeKind> *_64810_t = it;
			{
				_1b0984e9a_WriteByte(&_6457_s, ',');
				_1b0984be2_WriteStr(&_6457_s, _1ac63d6d4_Str((*(_64810_t)).ptr()));
			}
			_iter_next_1b4207de0:;
			++it;
			goto _iter_begin_1b4207de0;
		}
		_iter_end_1b4207de0:;
	};
	_1b0984e9a_WriteByte(&_6457_s, ')');
	return _1b09854d9_Str(&_6457_s);;
}



inline jule::Bool _1ac64bbdc_Equal(jule::Ptr<_1ac64b4e4_Tuple> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _65718_other) {
	jule::Ptr<_1ac64b4e4_Tuple> _6583_tup = _1ac6427b5_Tup(_65718_other.ptr());;
	if ((_6583_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6583_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6657_i = 0LL;;
	for (; (_6657_i < (*_self_.alloc)._field_Types.len()); (_6657_i)++) {
		{
			if ((!(_1ac63da25_Equal((*(_self_))._field_Types[_6657_i], (*(_6583_tup))._field_Types[_6657_i])))) {
				return false;;
			};
		}
	_iter_next_1b420ad8d:;
	}
	_iter_end_1b420ad8d:;;
	return true;;
}








inline jule::Bool _1ac64c094_Map_eq(_1ac64c094_Map *_self_, _1ac64c094_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1ac64c44b_Str(_1ac64c094_Map* _self_) {
	_1b097ade7_StrBuilder _6857_s = static__1b097b1e4_New(16LL);;
	_1b0984be2_WriteStr(&_6857_s, jule::Str::lit("map[", 4));
	_1b0984be2_WriteStr(&_6857_s, _1ac63d6d4_Str((*(_self_))._field_Key.ptr()));
	_1b0984e9a_WriteByte(&_6857_s, ']');
	_1b0984be2_WriteStr(&_6857_s, _1ac63d6d4_Str((*(_self_))._field_Val.ptr()));
	return _1b09854d9_Str(&_6857_s);;
}



inline jule::Bool _1ac64c78c_Equal(jule::Ptr<_1ac64c094_Map> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _69418_other) {
	jule::Ptr<_1ac64c094_Map> _6953_m = _1ac64252e_Map(_69418_other.ptr());;
	if ((_6953_m == nullptr)) {
		return false;;
	};
	return (_1ac63da25_Equal((*(_self_))._field_Key, (*(_6953_m))._field_Key) && _1ac63da25_Equal((*_self_.alloc)._field_Val, (*(_6953_m))._field_Val));;
}








inline jule::Bool _1ac64cc21_Arr_eq(_1ac64cc21_Arr *_self_, _1ac64cc21_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1ac64d0c8_Str(_1ac64cc21_Arr* _self_) {
	_1b097ade7_StrBuilder _7137_s = static__1b097b1e4_New(16LL);;
	_1b0984e9a_WriteByte(&_7137_s, '[');
	_1b0984be2_WriteStr(&_7137_s, _1aa11b307_Itoa((*(_self_))._field_N));
	_1b0984e9a_WriteByte(&_7137_s, ']');
	_1b0984be2_WriteStr(&_7137_s, _1ac63d6d4_Str((*(_self_))._field_Elem.ptr()));
	return _1b09854d9_Str(&_7137_s);;
}



inline jule::Bool _1ac64d419_Equal(jule::Ptr<_1ac64cc21_Arr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _72218_other) {
	jule::Ptr<_1ac64cc21_Arr> _7233_arr = _1ac64175e_Arr(_72218_other.ptr());;
	if ((_7233_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7233_arr))._field_N) && _1ac63da25_Equal((*_self_.alloc)._field_Elem, (*(_7233_arr))._field_Elem));;
}








inline jule::Bool _1ac64d6e4_Ptr_eq(_1ac64d6e4_Ptr *_self_, _1ac64d6e4_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1ac64da9b_Str(_1ac64d6e4_Ptr* _self_) {
	if (_1ac64e261_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1ac63d6d4_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ac64dddc_Equal(jule::Ptr<_1ac64d6e4_Ptr> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _74618_other) {
	jule::Ptr<_1ac64d6e4_Ptr> _7473_ptr = _1ac640eab_Ptr(_74618_other.ptr());;
	{
		
		if ((_7473_ptr == nullptr)) {
			_case_begin_1b4216e87:;
			{
				return false;;
			}
		}
		else if (_1ac64e261_IsUnsafe(_self_.ptr())) {
			_case_begin_1b4216838:;
			{
				return _1ac64e261_IsUnsafe(_7473_ptr.ptr());;
			}
		}
		else if (_1ac64e261_IsUnsafe(_7473_ptr.ptr())) {
			_case_begin_1b421689e:;
			{
				return _1ac64e261_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1b42163b5:;
			{
				return _1ac63da25_Equal((*(_self_))._field_Elem, (*(_7473_ptr))._field_Elem);;
			}
		}
		_match_end_1b421633d:;
	};
}



inline jule::Bool _1ac64e261_IsUnsafe(_1ac64d6e4_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1ac64e6e5_referencer_eq(_1ac64e6e5_referencer *_self_, _1ac64e6e5_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1ac650e66_pushErr(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4912c3_Token> _83823_token, jule::Str _83838_fmt, jule::Slice<jule::Any> _83851_args) {
	_1ac57b15a_pushErr((*(_self_))._field_s.ptr(), _83823_token, _83838_fmt, _83851_args);
}



inline void _1ac651164_allowBuiltin(_1ac6506d5_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ac651362_disallowBuiltin(_1ac6506d5_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1b421b893_pushReference(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _85037_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b366aebe_Exist((*(_self_))._field_refers.ptr(), (*(_85037_t)))) {
		return;;
	};
	_1ac4e3da3_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85037_t)), &__jule_any_type9));
}

inline void _1b421e368_pushReference(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac5008a4_Trait>* _85037_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b422106d_Exist((*(_self_))._field_refers.ptr(), (*(_85037_t)))) {
		return;;
	};
	_1ac4e3da3_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85037_t)), &__jule_any_type10));
}



inline void _1ac6518c3_pushReferenceByKind(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _86040_k) {
	{
		
		if ((_1ac642012_Struct((*(_86040_k)).ptr()) != nullptr)) {
			_case_begin_1b421a4a7:;
			{
				jule::Ptr<_1ac4ca4d8_StructIns> _8638_t = _1ac642012_Struct((*(_86040_k)).ptr());;
				_1b421b893_pushReference(_self_, &(_8638_t));
			}
		}
		else if ((_1ac642298_Trait((*(_86040_k)).ptr()) != nullptr)) {
			_case_begin_1b421a551:;
			{
				jule::Ptr<_1ac5008a4_Trait> _8668_t = _1ac642298_Trait((*(_86040_k)).ptr());;
				_1b421e368_pushReference(_self_, &(_8668_t));
			}
		}
		_match_end_1b421a386:;
	};
}



inline void _1ac651ce1_pushCycleError(_1ac6506d5_typeChecker* _self_, jule::Any _87126_def1, jule::Any _87137_def2, _1b097ade7_StrBuilder* _87153_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8733_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1b4223438, nullptr, nullptr);;
	jule::Str _8833_m = _1b09854d9_Str(_87153_message);;
	jule::Str _8843_def1Ident = _8733_getIdent(&(_87126_def1));;
	jule::Str _8853_def2Ident = _8733_getIdent(&(_87137_def2));;
	jule::Str _8863_refersTo = _1b08b6c9a_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8843_def1Ident, &__jule_any_type4); (*it++) = jule::Any(_8853_def2Ident, &__jule_any_type4); __jule_collection; }));;
	_1b0984be2_WriteStr(_87153_message, _1b0966b08_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1b0984be2_WriteStr(_87153_message, _8863_refersTo);
	_1b0984e9a_WriteByte(_87153_message, '\n');
	_1b0984be2_WriteStr(_87153_message, _8833_m);
}



inline jule::Bool _1ac6521dc_checkCrossCycle(_1ac6506d5_typeChecker* _self_, jule::Any _89327_decl, _1b097ade7_StrBuilder* _89343_message) {
	{
		auto &_match_expr{ _89327_decl };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b4227a25:;
			{
				jule::Ptr<_1ac63c4e6_TypeAlias> _8964_ta = _89327_decl.unsafe_cast_ptr<_1ac63c4e6_TypeAlias>();;
				{
					auto expr = &((*(_8964_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b42289e3:;
					if (it != expr_end) {
						jule::Any *_89711_d = it;
						{
							{
								
								if (((*(_89711_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1b42292eb:;
									{
										_1ac651ce1_pushCycleError(_self_, jule::Any(_8964_ta, &__jule_any_type27), (*(_89711_d)), _89343_message);
										return false;;
									}
								}
								else if ((!(_1ac6521dc_checkCrossCycle(_self_, (*(_89711_d)), _89343_message)))) {
									_case_begin_1b4229384:;
									{
										_1ac651ce1_pushCycleError(_self_, jule::Any(_8964_ta, &__jule_any_type27), (*(_89711_d)), _89343_message);
										return false;;
									}
								}
								_match_end_1b42291db:;
							};
						}
						_iter_next_1b42289e3:;
						++it;
						goto _iter_begin_1b42289e3;
					}
					_iter_end_1b42289e3:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b422787c:;
			{
				jule::Ptr<_1ac4c767d_Struct> _9084_s = _89327_decl.unsafe_cast_ptr<_1ac4c767d_Struct>();;
				{
					auto expr = &((*(_9084_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b422ad7a:;
					if (it != expr_end) {
						jule::Ptr<_1ac4c767d_Struct> *_90911_d = it;
						{
							{
								
								if ((jule::Any((*(_90911_d)), &__jule_any_type23) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1b422b694:;
									{
										_1ac651ce1_pushCycleError(_self_, jule::Any(_9084_s, &__jule_any_type23), jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message);
										return false;;
									}
								}
								else if ((!(_1ac6521dc_checkCrossCycle(_self_, jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message)))) {
									_case_begin_1b422b72c:;
									{
										_1ac651ce1_pushCycleError(_self_, jule::Any(_9084_s, &__jule_any_type23), jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message);
										return false;;
									}
								}
								_match_end_1b422b584:;
							};
						}
						_iter_next_1b422ad7a:;
						++it;
						goto _iter_begin_1b422ad7a;
					}
					_iter_end_1b422ad7a:;
				};
			}
		}
		_match_end_1b42279ae:;
	};
	return true;;
}



inline jule::Bool _1ac6525d8_checkIllegalCycles(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _92735_ident, jule::Any _92762_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92762_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b422db08:;
			{
				if ((*(_92762_decl.unsafe_cast_ptr<_1ac4c767d_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b422da1a:;
			{
				if ((*(_92762_decl.unsafe_cast_ptr<_1ac63c4e6_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b422d90a:;
	};
	if ((_92762_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1ac650e66_pushErr(_self_, (*((*(_92735_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1b097ade7_StrBuilder _9507_message = static__1b097b1e4_New(32LL);;
	if ((!(_1ac6521dc_checkCrossCycle(_self_, _92762_decl, &(_9507_message))))) {
		jule::Str _9538_errMsg = _1b09854d9_Str(&_9507_message);;
		_1b09856d7_Clear(&_9507_message);
		_1ac651ce1_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _92762_decl, &(_9507_message));
		_9538_errMsg+=_1b09854d9_Str(&_9507_message);
		_1ac650e66_pushErr(_self_, (*((*(_92735_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9538_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b4233a75:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_92762_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b42320b2:;
			{
				{
					auto &_match_expr{ _92762_decl };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b4234339:;
						{
							jule::Ptr<_1ac4c767d_Struct> _9699_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1ac4c767d_Struct>();;
							(*(_9699_s))._field_Depends=jule::append((*_9699_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4c767d_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _92762_decl.cast_ptr<_1ac4c767d_Struct>(&__jule_any_type23); __jule_collection; }));
						}
					}
					_match_end_1b4234191:;
				};
			}
		}
		_match_end_1b42339dc:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1ac6529d4_fromTypeAlias(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _97730_decl, jule::Ptr<_1ac63c4e6_TypeAlias>* _97757_ta) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_97757_ta))))._field_Public, (*((*(_97757_ta))))._field_Token)))) {
		_1ac650e66_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_97757_ta))))._field_Used=true;
	if (((*((*(_97730_decl))))._field_Generics.len() > 0LL)) {
		_1ac650e66_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b42399b0:;
			if (it != expr_end) {
				jule::Ptr<_1ac63c4e6_TypeAlias> _99411_bg = *it;
				{
					if (((_99411_bg == (*(_97757_ta))) || (((*((*((*(_97757_ta))))._field_Kind))._field_Kind != nullptr) && _1ac63da25_Equal((*((*((*(_97757_ta))))._field_Kind))._field_Kind, (*(*(_99411_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1b42399b0;
					};
				}
				_iter_next_1b42399b0:;
				++it;
				goto _iter_begin_1b42399b0;
			}
			_iter_end_1b42399b0:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b423bcc0:;
			if (it != expr_end) {
				jule::Ptr<_1ac63c4e6_TypeAlias> _100511_bg = *it;
				{
					if ((_100511_bg == (*(_97757_ta)))) {
						_1ac650e66_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_97757_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b423c6c7:;
						if (it != expr_end) {
							jule::Ptr<_1ac63c4e6_TypeAlias> _101012_dg = *it;
							{
								if ((_100511_bg == _101012_dg)) {
									_1ac650e66_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1b423c6c7:;
							++it;
							goto _iter_begin_1b423c6c7;
						}
						_iter_end_1b423c6c7:;
					};
				}
				_iter_next_1b423bcc0:;
				++it;
				goto _iter_begin_1b423bcc0;
			}
			_iter_end_1b423bcc0:;
		};
	};
	if (((*(*((*(_97757_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		jule::Bool _10214_ok = _1ac588d5a_checkTypeAliasDeclKind((*(_self_))._field_s, _97757_ta, (*(_self_))._field_lookup);;
		if ((!(_10214_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_97757_ta))))._field_Kind))._field_Kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)) {
			_case_begin_1b4240e06:;
			{
				jule::Bool _10294_ok = _1ac6525d8_checkIllegalCycles(_self_, _97730_decl, jule::Any((*((*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_Kind.cast_ptr<_1ac4ca4d8_StructIns>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)))._field_Decl, &__jule_any_type23));;
				if ((!(_10294_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1b4240d7e:;
	};
	if (((*((*(_97757_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_97757_ta)); __jule_collection; }));
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _10417_tk = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_97757_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_Kind});;
	_1ac6518c3_pushReferenceByKind(_self_, &(_10417_tk));
	if ((*((*(_97757_ta))))._field_Binded) {
		(*(_10417_tk))._field_BindIdent=(*((*(_97757_ta))))._field_Ident;
	} else {
		(*(_10417_tk))._field_BindIdent=(*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10417_tk, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data21);;
}



inline jule::Ptr<_1ac5030b0_Enum> _1ac652dd0_fromEnum(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _105425_decl, jule::Ptr<_1ac5030b0_Enum>* _105452_e) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_105452_e))))._field_Public, (*((*(_105452_e))))._field_Token)))) {
		_1ac650e66_pushErr(_self_, (*((*(_105425_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105425_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_105425_decl))))._field_Generics.len() > 0LL)) {
		_1ac650e66_pushErr(_self_, (*((*(_105425_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105425_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_105452_e));;
}



inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac6532cb_fromTypeEnum(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _106629_decl, jule::Ptr<_1ac5047ba_TypeEnum>* _106656_e) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106656_e))))._field_Public, (*((*(_106656_e))))._field_Token)))) {
		_1ac650e66_pushErr(_self_, (*((*(_106629_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106629_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106629_decl))))._field_Generics.len() > 0LL)) {
		_1ac650e66_pushErr(_self_, (*((*(_106629_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106629_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_106656_e));;
}



inline jule::Ptr<_1ac5008a4_Trait> _1ac6536c7_fromTrait(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _107826_decl, jule::Ptr<_1ac5008a4_Trait>* _107853_t) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_107853_t))))._field_Public, (*((*(_107853_t))))._field_Token)))) {
		_1ac650e66_pushErr(_self_, (*((*(_107826_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_107826_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_107826_decl))))._field_Generics.len() > 0LL)) {
		_1ac650e66_pushErr(_self_, (*((*(_107826_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_107826_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1b421e368_pushReference(_self_, _107853_t);
	return (*(_107853_t));;
}



inline jule::Bool _1ac653ac3_checkStructIns(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _109135_ins, jule::Ptr<_1ac4912c3_Token>* _109157_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_109135_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_109135_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_109135_ins))))._field_Decl, &__jule_any_type23) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ac59a6a7_precheckStructIns((*(_self_))._field_s, _109135_ins, (*(_109157_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_109135_ins))))._field_Generics.len() > 0LL)) {
		_1ac59b1be_checkStructInsOperators((*(_self_))._field_s, (*(_109135_ins)));
		_1ac59a960_checkStructIns((*(_self_))._field_s, _109135_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac653d7b_appendUsedStructReference(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4c767d_Struct>* _111246_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b4253985:;
			{
				jule::Ptr<_1ac4c767d_Struct> _11188_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1ac4c767d_Struct>();;
				if ((!(_1ac4c9141_IsUses(_11188_refS.ptr(), (*(_111246_s)))))) {
					(*_11188_refS.alloc)._field_Uses=jule::append((*_11188_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4c767d_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_111246_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1b425391e:;
	};
}



inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac654277_buildStructInstance(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _112540_decl, jule::Ptr<_1ac4c767d_Struct>* _112567_s) {
	jule::Ptr<_1ac64e6e5_referencer> _11277_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> _11297_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)) {
				_case_begin_1b42569bb:;
				{
					jule::Ptr<_1ac53c25e_scopeChecker> _11369_sc = (*(_self_))._field_lookup.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0);;
					jule::Ptr<_1ac53c25e_scopeChecker> _11379_hard = _1ac5408c2_getHardRoot(_11369_sc);;
					if ((((*((*(_11379_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11379_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_112567_s))))) {
						goto _match_end_1b4256955;
					};
					jule::I64 _11415_n = ((*(*(_11379_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11379_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11379_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11415_n);
				}
			}
			_match_end_1b4256955:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11517_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1ac4ca4d8_StructIns> _11557_ins = _1ac4c7b23_instance((*(_112567_s)));;
	(*(_11557_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>::alloc(0LL, (*((*(_112540_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac63b902_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_112540_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b425bcbd:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a677d_TypeDecl> _115715_g = *it;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _11588_kind = _1ac657e7e_build(_self_, &((*(_115715_g))._field_Kind));;
				if ((_11588_kind == nullptr)) {
					return nullptr;;
				};
				(*_11557_ins.alloc)._field_Generics=jule::append((*_11557_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac63b902_InsGeneric>(_1ac63b902_InsGeneric{._field_Kind=_11588_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1b425bcbd:;
			++it;
			goto _iter_begin_1b425bcbd;
		}
		_iter_end_1b425bcbd:;
	};
	(*(_self_))._field_lookup=_11517_lookup;
	(*(_self_))._field_bannedGenerics=_11297_bannedGenerics;
	(*(_self_))._field_referencer=_11277_referencer;
	return _11557_ins;;
}



inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac654673_fromStructIns(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _117334_ins, jule::Ptr<_1ac4912c3_Token> _117355_token) {
	jule::Ptr<_1ac4ca4d8_StructIns> _11747_existInstance = _1ac4c7e31_appendInstance((*((*(_117334_ins))))._field_Decl.ptr(), _117334_ins);;
	if ((_11747_existInstance != nullptr)) {
		if ((!(_1ac586b5a_checkConstraintsStruct((*(_self_))._field_s, _117334_ins, &(_117355_token), _11747_existInstance)))) {
			return nullptr;;
		};
		_1b421b893_pushReference(_self_, &(_11747_existInstance));
		return _11747_existInstance;;
	};
	if ((!(_1ac653ac3_checkStructIns(_self_, _117334_ins, &(_117355_token))))) {
		return nullptr;;
	};
	_1b421b893_pushReference(_self_, _117334_ins);
	return (*(_117334_ins));;
}



inline jule::Ptr<_1ac4ca4d8_StructIns> _1ac654a6e_fromStruct(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _119131_decl, jule::Ptr<_1ac4c767d_Struct>* _119158_s) {
	if ((!(_1ac57b8b9_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_119158_s))))._field_Public, (*((*(_119158_s))))._field_Token)))) {
		_1ac650e66_pushErr(_self_, (*((*(_119131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_119131_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_119131_decl))))._field_Generics.len() > 0LL)) {
			_1ac650e66_pushErr(_self_, (*((*(_119131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1ac4ca4d8_StructIns>(_1ac4ca4d8_StructIns{._field_Checked=false, ._field_Decl=(*(_119158_s)), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1ac4c9938_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Operators=_1ac4c676a_Operators{._field_Eq=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Add=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Div=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1ac4dee04_FnIns>(nullptr)}});;
	};
	jule::Bool _12097_ok = _1ac6525d8_checkIllegalCycles(_self_, _119131_decl, jule::Any((*(_119158_s)), &__jule_any_type23));;
	if ((!(_12097_ok))) {
		return nullptr;;
	};
	_1ac653d7b_appendUsedStructReference(_self_, _119158_s);
	jule::Ptr<_1ac4ca4d8_StructIns> _12157_ins = _1ac654277_buildStructInstance(_self_, _119131_decl, _119158_s);;
	if ((_12157_ins == nullptr)) {
		return nullptr;;
	};
	_12097_ok=_1ac57c689_checkGenericQuantity((*(_self_))._field_s, (*((*(_12157_ins))._field_Decl))._field_Generics.len(), (*(_12157_ins))._field_Generics.len(), (*((*(_119131_decl))))._field_Token);
	if ((!(_12097_ok))) {
		return nullptr;;
	};
	return _1ac654673_fromStructIns(_self_, &(_12157_ins), (*((*(_119131_decl))))._field_Token);;
}



inline jule::Trait _1ac654db0_getDef(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl>* _123527_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b42673a0:;
		if (it != expr_end) {
			jule::Ptr<_1ac4b3988_GenericDecl> _123610_g = *it;
			{
				if (((*(_123610_g))._field_Ident == (*((*(_123527_decl))))._field_Ident)) {
					return jule::Trait(_1ac65ab52_buildPrimType((*_123610_g.alloc)._field_Ident), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22);;
				};
			}
			_iter_next_1b42673a0:;
			++it;
			goto _iter_begin_1b42673a0;
		}
		_iter_end_1b42673a0:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4267713:;
		if (it != expr_end) {
			jule::Ptr<_1ac63c4e6_TypeAlias> _124215_g = *it;
			{
				if (((*(_124215_g))._field_Ident == (*((*(_123527_decl))))._field_Ident)) {
					if (((*((*(_123527_decl))))._field_Generics.len() > 0LL)) {
						_1ac650e66_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_123527_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1ac4ca4d8_StructIns> _12489_st = _1ac642012_Struct((*((*_124215_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12489_st != nullptr)) {
						jule::Bool _12506_ok = _1ac6525d8_checkIllegalCycles(_self_, _123527_decl, jule::Any((*_12489_st.alloc)._field_Decl, &__jule_any_type23));;
						if ((!(_12506_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_124215_g))._field_Kind))._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1b4267713:;
			++it;
			goto _iter_begin_1b4267713;
		}
		_iter_end_1b4267713:;
	};
	if ((!((*((*(_123527_decl))))._field_Binded))) {
		jule::Ptr<_1ac5030b0_Enum> _12608_e = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65d4e5_FindEnum((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12608_e != nullptr)) {
			return jule::Trait(_1ac652dd0_fromEnum(_self_, _123527_decl, &(_12608_e)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data3);;
		};
		jule::Ptr<_1ac5047ba_TypeEnum> _12658_te = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65d836_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12658_te != nullptr)) {
			return jule::Trait(_1ac6532cb_fromTypeEnum(_self_, _123527_decl, &(_12658_te)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4);;
		};
		jule::Ptr<_1ac5008a4_Trait> _12708_t = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65d1a4_FindTrait((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12708_t != nullptr)) {
			return jule::Trait(_1ac6536c7_fromTrait(_self_, _123527_decl, &(_12708_t)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1ac650e66_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4c767d_Struct> _12797_s = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65c967_FindStruct((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident, (*((*(_123527_decl))))._field_Binded);;
	if ((_12797_s != nullptr)) {
		return jule::Trait(_1ac654a6e_fromStruct(_self_, _123527_decl, &(_12797_s)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0);;
	};
	jule::Ptr<_1ac63c4e6_TypeAlias> _12847_ta = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65c56b_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident, (*((*(_123527_decl))))._field_Binded);;
	if (((_12847_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12847_ta=_1ac72b261_findBuiltinTypeAlias((*((*(_123527_decl))))._field_Ident);
	};
	if ((_12847_ta != nullptr)) {
		return _1ac6529d4_fromTypeAlias(_self_, _123527_decl, &(_12847_ta));;
	};
	_1ac650e66_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_123527_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1ac655201_buildIdent(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a6d88_IdentTypeDecl> _129630_decl) {
	return _1ac654db0_getDef(_self_, &(_129630_decl));;
}



inline jule::Trait _1ac655542_buildSubIdent(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a7152_SubIdentTypeDecl> _130033_decl) {
	jule::Trait _13017_ident = _1ac655201_buildIdent(_self_, (*(_130033_decl))._field_Idents[0LL]);;
	if ((_13017_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _13017_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4)) {
			_case_begin_1b42757ba:;
			{
				goto _match_end_1b4275d2b;
			}
		}
		else {
			_case_begin_1b4275897:;
			{
				_1ac650e66_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b4275d2b:;
	};
	jule::Ptr<_1ac5047ba_TypeEnum> _13127_t = _13017_ident.cast_ptr<_1ac5047ba_TypeEnum>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1ac4a6d88_IdentTypeDecl>> _13137_idents = (*_130033_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_13137_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b427591e:;
		if (it != expr_end) {
			jule::I64 _13147_i = it - expr->begin();
			jule::Ptr<_1ac4a6d88_IdentTypeDecl> _131410_id = *it;
			{
				jule::Ptr<_1ac5041e3_TypeEnumItem> _13158_item = _1ac5053ae_FindItem(_13127_t.ptr(), (*(_131410_id))._field_Ident);;
				if ((_13158_item == nullptr)) {
					_1ac650e66_pushErr(_self_, (*_131410_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_13127_t.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_131410_id.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				if (((_13137_idents.len() - _13147_i) == 1LL)) {
					_1ac6518c3_pushReferenceByKind(_self_, &((*((*(_13158_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_13158_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data21);;
				};
				_13127_t=_1ac6414c8_TypeEnum((*(*(_13158_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_13127_t == nullptr)) {
					_1ac650e66_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1b427591e:;
			++it;
			_13147_i++;
			goto _iter_begin_1b427591e;
		}
		_iter_end_1b427591e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac649e2c_Sptr> _1ac655883_buildSptrFromType(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _133438_elem) {
	{
		
		if (((*(_133438_elem)) == nullptr)) {
			_case_begin_1b427c052:;
			{
				return nullptr;;
			}
		}
		else if ((_1ac642012_Struct((*(_133438_elem)).ptr()) != nullptr)) {
			_case_begin_1b427c0c9:;
			{
				jule::Ptr<_1ac4ca4d8_StructIns> _13404_s = _1ac642012_Struct((*(_133438_elem)).ptr());;
				if ((((*(_13404_s))._field_Decl != nullptr) && (*(*(_13404_s))._field_Decl.alloc)._field_Binded)) {
					_1ac650e66_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1ac64175e_Arr((*(_133438_elem)).ptr()) != nullptr) && (*(_1ac64175e_Arr((*(_133438_elem)).ptr())))._field_Auto)) {
			_case_begin_1b427c140:;
			{
				_1ac650e66_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b427b628:;
	};
	return jule::new_ptr<_1ac649e2c_Sptr>(_1ac649e2c_Sptr{._field_Elem=(*(_133438_elem))});;
}



inline jule::Ptr<_1ac649e2c_Sptr> _1ac655bc4_buildSptr(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a7828_SptrTypeDecl> _135429_decl) {
	jule::Bool _13553_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13553_cycleRisk;
	});;
	jule::Ptr<_1ac63d2d8_TypeKind> _13597_elem = _1ac6582c0_checkDecl(_self_, &((*(_135429_decl))._field_Elem));;
	return _1ac655883_buildSptrFromType(_self_, &(_13597_elem));;
}



inline jule::Ptr<_1ac64d6e4_Ptr> _1ac656015_buildPtrFromType(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _136337_elem) {
	{
		
		if (((*(_136337_elem)) == nullptr)) {
			_case_begin_1b42823dc:;
			{
				return nullptr;;
			}
		}
		else if (((_1ac64175e_Arr((*(_136337_elem)).ptr()) != nullptr) && (*(_1ac64175e_Arr((*(_136337_elem)).ptr())))._field_Auto)) {
			_case_begin_1b4282486:;
			{
				_1ac650e66_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1ac64d6e4_Ptr>(_1ac64d6e4_Ptr{._field_Elem=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr)});;
			}
		}
		_match_end_1b42822bb:;
	};
	return jule::new_ptr<_1ac64d6e4_Ptr>(_1ac64d6e4_Ptr{._field_Elem=(*(_136337_elem))});;
}



inline jule::Ptr<_1ac64d6e4_Ptr> _1ac656356_buildPtr(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a82a7_PtrTypeDecl> _137828_decl) {
	jule::Bool _13793_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13793_cycleRisk;
	});;
	jule::Ptr<_1ac63d2d8_TypeKind> _138311_elem = nullptr;;
	if ((!(_1ac4a864d_IsUnsafe(_137828_decl.ptr())))) {
		_138311_elem=_1ac6582c0_checkDecl(_self_, &((*_137828_decl.alloc)._field_Elem));
		return _1ac656015_buildPtrFromType(_self_, &(_138311_elem));;
	};
	return jule::new_ptr<_1ac64d6e4_Ptr>(_1ac64d6e4_Ptr{._field_Elem=_138311_elem});;
}



inline jule::Ptr<_1ac64a900_Slc> _1ac656697_buildSlc(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a7bad_SlcTypeDecl> _139528_decl) {
	jule::Bool _13963_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13963_cycleRisk;
	});;
	jule::Ptr<_1ac63d2d8_TypeKind> _14007_elem = _1ac6582c0_checkDecl(_self_, &((*(_139528_decl))._field_Elem));;
	{
		
		if ((_14007_elem == nullptr)) {
			_case_begin_1b42876bc:;
			{
				return nullptr;;
			}
		}
		else if (((_1ac64175e_Arr(_14007_elem.ptr()) != nullptr) && (*(_1ac64175e_Arr(_14007_elem)))._field_Auto)) {
			_case_begin_1b4287733:;
			{
				_1ac650e66_pushErr(_self_, (*((*_139528_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b4287656:;
	};
	return jule::new_ptr<_1ac64a900_Slc>(_1ac64a900_Slc{._field_Elem=_14007_elem});;
}



inline jule::Ptr<_1ac64cc21_Arr> _1ac6569d8_buildArr(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a8a49_ArrTypeDecl> _141628_decl) {
	jule::I64 _14177_n = 0LL;;
	if ((!(_1ac4a8de0_AutoSized(_141628_decl.ptr())))) {
		jule::Ptr<_1ac60a55d_Data> _14208_size = _1ac62b0ea_evalExpr(_1ac583aad_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_141628_decl.alloc)._field_Size);;
		if ((_14208_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1ac60ae98_IsConst(_14208_size.ptr())))) {
			_1ac650e66_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1ac64098e_Prim((*(_14208_size))._field_Kind.ptr()) == nullptr) || (!(_1aa128754_IsInt((*(_1ac64098e_Prim((*(_14208_size))._field_Kind)))._field_Kind))))) {
			_1ac650e66_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_14177_n=static_cast<jule::I64>(_1aa12ba98_AsI64((*(_14208_size))._field_Constant.ptr()));
		if ((_14177_n < 0LL)) {
			_1ac650e66_pushErr(_self_, (*((*_141628_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14385_max = _1aa1247b6_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1aa11c68d_BitSize != 64LL) && (static_cast<jule::I64>(_14177_n) > _14385_max))) {
				_1ac650e66_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac639180_constoa(&((*(_14208_size))._field_Constant)), &__jule_any_type4); (*it++) = jule::Any(_1aa11b03d_FmtInt(_14385_max, 10LL), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _14477_elem = _1ac6582c0_checkDecl(_self_, &((*_141628_decl.alloc)._field_Elem));;
	{
		
		if ((_14477_elem == nullptr)) {
			_case_begin_1b4292a7e:;
			{
				return nullptr;;
			}
		}
		else if (((_1ac64175e_Arr(_14477_elem.ptr()) != nullptr) && (*(_1ac64175e_Arr(_14477_elem)))._field_Auto)) {
			_case_begin_1b4292b28:;
			{
				_1ac650e66_pushErr(_self_, (*((*_141628_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b4292a07:;
	};
	return jule::new_ptr<_1ac64cc21_Arr>(_1ac64cc21_Arr{._field_Auto=_1ac4a8de0_AutoSized(_141628_decl), ._field_N=_14177_n, ._field_Elem=_14477_elem});;
}



inline jule::Ptr<_1ac64c094_Map> _1ac656d29_buildMap(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a9297_MapTypeDecl> _146528_decl) {
	jule::Bool _14663_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14663_cycleRisk;
	});;
	jule::Ptr<_1ac63d2d8_TypeKind> _14707_key = _1ac6582c0_checkDecl(_self_, &((*(_146528_decl))._field_Key));;
	if ((_14707_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _14757_val = _1ac6582c0_checkDecl(_self_, &((*_146528_decl.alloc)._field_Val));;
	if ((_14757_val == nullptr)) {
		return nullptr;;
	};
	if ((_1ac641242_Enum(_14757_val.ptr()) != nullptr)) {
		_1ac650e66_pushErr(_self_, (*((*_146528_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1ac4c767d_Struct> _14848_s = _1ac15b455_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1ac653d7b_appendUsedStructReference(_self_, &(_14848_s));
		jule::Ptr<_1ac4ca4d8_StructIns> _14868_ins = _1ac4c7b23_instance(_14848_s);;
		(*(_14868_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac63b902_InsGeneric>(_1ac63b902_InsGeneric{._field_Kind=_14707_key, ._field_Constraint=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr)}); (*it++) = jule::new_ptr<_1ac63b902_InsGeneric>(_1ac63b902_InsGeneric{._field_Kind=_14757_val, ._field_Constraint=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr)}); __jule_collection; });
		_1ac654673_fromStructIns(_self_, &(_14868_ins), (*((*_146528_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1ac64c094_Map>(_1ac64c094_Map{._field_Key=_14707_key, ._field_Val=_14757_val});;
}



inline jule::Ptr<_1ac64b4e4_Tuple> _1ac65716a_buildTuple(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a7eaa_TupleTypeDecl> _149730_decl) {
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _14987_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(0LL, (*(_149730_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac63d2d8_TypeKind>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_149730_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b429bd30:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a677d_TypeDecl> _149915_t = *it;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _15008_kind = _1ac6582c0_checkDecl(_self_, &(_149915_t));;
				if ((_15008_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> &__jule_push_dest = _14987_types; __jule_push_dest.push(_15008_kind); };
			}
			_iter_next_1b429bd30:;
			++it;
			goto _iter_begin_1b429bd30;
		}
		_iter_end_1b429bd30:;
	};
	return jule::new_ptr<_1ac64b4e4_Tuple>(_1ac64b4e4_Tuple{._field_Types=_14987_types});;
}



inline jule::Bool _1ac6574ab_checkFuncTypes(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4dee04_FnIns>* _151035_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_151035_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b429d86a:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ddc9e_ParamIns> _151115_p = *it;
			{
				(*(_151115_p))._field_Kind=_1ac657e7e_build(_self_, &((*((*((*((*_151115_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_151115_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1ac58770a_checkFnParamKind((*(_self_))._field_s, &(_151115_p));
			}
			_iter_next_1b429d86a:;
			++it;
			goto _iter_begin_1b429d86a;
		}
		_iter_end_1b429d86a:;
	};
	if ((!(_1ac4dc2ec_IsVoid((*((*(_151035_f))))._field_Decl.ptr())))) {
		(*((*(_151035_f))))._field_Result=_1ac657e7e_build(_self_, &((*(*((*((*((*((*(_151035_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_151035_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ac6577ec_buildFunc(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4b843d_FnDecl> _152829_decl) {
	jule::Bool _15293_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15293_cycleRisk;
	});;
	if (((*(_152829_decl))._field_Generics.len() > 0LL)) {
		_1ac650e66_pushErr(_self_, (*_152829_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4dbd46_Fn> _15387_f = _1ac4e6526_buildFunc(_152829_decl);;
	jule::I64 _15403_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1ac59685c_checkAnonFuncDecl((*(_self_))._field_s, &(_15387_f));
	if ((_15403_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _15467_ins = _1ac4dd353_instanceForce(_15387_f);;
	(*(_15467_ins))._field_Anon=true;
	(*_15467_ins.alloc)._field_AsAnon=true;
	jule::Bool _15503_ok = _1ac6574ab_checkFuncTypes(_self_, &(_15467_ins));;
	if ((!(_15503_ok))) {
		return nullptr;;
	};
	return _15467_ins;;
}



inline jule::Trait _1ac657b3d_buildByNamespace(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a752b_NamespaceTypeDecl> _155836_decl) {
	jule::Str _15593_path = _1ac65a778_buildLinkPathByTokens(&((*(_155836_decl))._field_Idents));;
	jule::Ptr<_1ac557cd5_ImportInfo> _15607_imp = ((_1ac65d98a_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ac65bc74_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>>((void*)__jule_anon_1b42a81d2, jule::Ptr<__jule_anon_1b42a81d2_ctx>::make(__jule_anon_1b42a81d2_ctx{._155836_decl=_155836_decl,._15593_path=_15593_path}).as<jule::Uintptr>(), __jule_anon_1b42a81d2_ctx_handler));;
	jule::Str _15673_selfIdent = jule::Str::lit("self", 4);;
	if (((_15607_imp == nullptr) || (!(_1ac55a359_isLookupable(_15607_imp.ptr(), &(_15673_selfIdent)))))) {
		_1ac650e66_pushErr(_self_, (*(_155836_decl))._field_Idents[0LL], static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_15593_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1ac651362_disallowBuiltin(_self_);
	jule::Trait _15747_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15607_imp, (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data1);
	jule::Ptr<_1ac63d2d8_TypeKind> _15767_kind = _1ac6582c0_checkDecl(_self_, &((*_155836_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15747_lookup;
	_1ac651164_allowBuiltin(_self_);
	return jule::Trait(_15767_kind, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data21);;
}



inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac657e7e_build(_1ac6506d5_typeChecker* _self_, jule::Any* _158226_declKind) {
	jule::Trait _158311_kind = nullptr;;
	{
		auto &_match_expr{ (*(_158226_declKind)) };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b42ad24d:;
			{
				jule::Trait _15868_t = _1ac655201_buildIdent(_self_, (*(_158226_declKind)).cast_ptr<_1ac4a6d88_IdentTypeDecl>(&__jule_any_type77));;
				if ((_15868_t != nullptr)) {
					_158311_kind=_15868_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b42ad3a2:;
			{
				jule::Trait _15918_t = _1ac655542_buildSubIdent(_self_, (*(_158226_declKind)).cast_ptr<_1ac4a7152_SubIdentTypeDecl>(&__jule_any_type89));;
				if ((_15918_t != nullptr)) {
					_158311_kind=_15918_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b42ad418:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac649e2c_Sptr> _15978_t = _1ac655bc4_buildSptr(_self_, (*(_158226_declKind)).cast_ptr<_1ac4a7828_SptrTypeDecl>(&__jule_any_type74));;
				if ((_15978_t != nullptr)) {
					_158311_kind=jule::Trait(_15978_t, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b42ad47e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac64d6e4_Ptr> _16038_t = _1ac656356_buildPtr(_self_, (*(_158226_declKind)).cast_ptr<_1ac4a82a7_PtrTypeDecl>(&__jule_any_type73));;
				if ((_16038_t != nullptr)) {
					_158311_kind=jule::Trait(_16038_t, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b42ad4e5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac64a900_Slc> _16098_t = _1ac656697_buildSlc(_self_, (*(_158226_declKind)).cast_ptr<_1ac4a7bad_SlcTypeDecl>(&__jule_any_type72));;
				if ((_16098_t != nullptr)) {
					_158311_kind=jule::Trait(_16098_t, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b42ad55b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac64cc21_Arr> _16158_t = _1ac6569d8_buildArr(_self_, (*(_158226_declKind)).cast_ptr<_1ac4a8a49_ArrTypeDecl>(&__jule_any_type71));;
				if ((_16158_t != nullptr)) {
					_158311_kind=jule::Trait(_16158_t, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b42ad5c2:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac64c094_Map> _16218_t = _1ac656d29_buildMap(_self_, (*(_158226_declKind)).cast_ptr<_1ac4a9297_MapTypeDecl>(&__jule_any_type75));;
				if ((_16218_t != nullptr)) {
					_158311_kind=jule::Trait(_16218_t, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b42ae040:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac64b4e4_Tuple> _16278_t = _1ac65716a_buildTuple(_self_, (*(_158226_declKind)).cast_ptr<_1ac4a7eaa_TupleTypeDecl>(&__jule_any_type76));;
				if ((_16278_t != nullptr)) {
					_158311_kind=jule::Trait(_16278_t, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b42ae0a6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ac4dee04_FnIns> _16338_t = _1ac6577ec_buildFunc(_self_, (*(_158226_declKind)).cast_ptr<_1ac4b843d_FnDecl>(&__jule_any_type14));;
				if ((_16338_t != nullptr)) {
					_158311_kind=jule::Trait(_16338_t, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b42ae11c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16398_t = _1ac657b3d_buildByNamespace(_self_, (*(_158226_declKind)).cast_ptr<_1ac4a752b_NamespaceTypeDecl>(&__jule_any_type93));;
				if ((_16398_t != nullptr)) {
					_158311_kind=_16398_t;
				};
			}
		}
		else {
			_case_begin_1b42ad33b:;
			{
				_1ac650e66_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b42ad2c5:;
	};
	if ((_158311_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _158311_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data21)) {
			_case_begin_1b442d07c:;
			{
				return _158311_kind.cast_ptr<_1ac63d2d8_TypeKind>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1b442984d:;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _16548_tk = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_158311_kind});;
				{
					auto &_match_expr{ _158311_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)) {
						_case_begin_1b442b432:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16548_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)) {
						_case_begin_1b442b2ab:;
						{
							jule::Ptr<_1ac4ca4d8_StructIns> _16615_s = _158311_kind.cast_ptr<_1ac4ca4d8_StructIns>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0);;
							if ((((*(_16615_s))._field_Decl != nullptr) && (*(*(_16615_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16548_tk))._field_BindIdent=(*(*(_16615_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1b442b3bb:;
				};
				return _16548_tk;;
			}
		}
		_match_end_1b442a673:;
	};
}



inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac6582c0_checkDecl(_1ac6506d5_typeChecker* _self_, jule::Ptr<_1ac4a677d_TypeDecl>* _167030_decl) {
	jule::Ptr<_1ac4912c3_Token> _16727_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_167030_decl))))._field_Token;
	jule::Ptr<_1ac63d2d8_TypeKind> _16757_kind = _1ac657e7e_build(_self_, &((*((*(_167030_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16727_errorToken;
	return _16757_kind;;
}








inline jule::Bool _1ac658798_identTypeLookup_eq(_1ac658798_identTypeLookup *_self_, _1ac658798_identTypeLookup _other_) { return true; }

inline jule::Bool static__1ac658c1b_prim(jule::Str* _169718_ident, jule::Ptr<_1ac646401_Prim> _169730_t) {
	return ((*(_169730_t))._field_Kind == (*(_169718_ident)));;
}



inline jule::Bool static__1ac659090_exist(jule::Str* _170119_ident, jule::Ptr<_1ac63d2d8_TypeKind>* _170136_k) {
	{
		
		if ((_1ac64098e_Prim((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1b4432dc8:;
			{
				return static__1ac658c1b_prim(_170119_ident, _1ac64098e_Prim((*(_170136_k)).ptr()));;
			}
		}
		else if ((_1ac640c25_Sptr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1b4432e50:;
			{
				jule::Ptr<_1ac649e2c_Sptr> _17068_sptr = _1ac640c25_Sptr((*(_170136_k)).ptr());;
				return static__1ac659090_exist(_170119_ident, &((*(_17068_sptr))._field_Elem));;
			}
		}
		else if ((_1ac640eab_Ptr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1b4432ec7:;
			{
				jule::Ptr<_1ac64d6e4_Ptr> _17098_ptr = _1ac640eab_Ptr((*(_170136_k)).ptr());;
				return static__1ac659090_exist(_170119_ident, &((*(_17098_ptr))._field_Elem));;
			}
		}
		else if ((_1ac6419e5_Slc((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1b443304e:;
			{
				jule::Ptr<_1ac64a900_Slc> _17128_slc = _1ac6419e5_Slc((*(_170136_k)).ptr());;
				return static__1ac659090_exist(_170119_ident, &((*(_17128_slc))._field_Elem));;
			}
		}
		else if ((_1ac64175e_Arr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1b443322a:;
			{
				jule::Ptr<_1ac64cc21_Arr> _17158_arr = _1ac64175e_Arr((*(_170136_k)).ptr());;
				return static__1ac659090_exist(_170119_ident, &((*(_17158_arr))._field_Elem));;
			}
		}
		else if ((_1ac64252e_Map((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1b4433291:;
			{
				jule::Ptr<_1ac64c094_Map> _17188_m = _1ac64252e_Map((*(_170136_k)).ptr());;
				return (static__1ac659090_exist(_170119_ident, &((*(_17188_m))._field_Key)) || static__1ac659090_exist(_170119_ident, &((*_17188_m.alloc)._field_Val)));;
			}
		}
		else if ((_1ac642012_Struct((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1b4433307:;
			{
				jule::Ptr<_1ac4ca4d8_StructIns> _17228_s = _1ac642012_Struct((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17228_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b443a452:;
					if (it != expr_end) {
						jule::Ptr<_1ac63b902_InsGeneric> _172316_g = *it;
						{
							if (static__1ac659090_exist(_170119_ident, &((*(_172316_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b443a452:;
						++it;
						goto _iter_begin_1b443a452;
					}
					_iter_end_1b443a452:;
				};
				return false;;
			}
		}
		else if ((_1ac641c7b_Fn((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1b443336d:;
			{
				jule::Ptr<_1ac4dee04_FnIns> _17308_f = _1ac641c7b_Fn((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17308_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b443c0ad:;
					if (it != expr_end) {
						jule::Ptr<_1ac4ddc9e_ParamIns> _173116_p = *it;
						{
							if (_1ac4da9c1_IsSelf((*(_173116_p))._field_Decl.ptr())) {
								goto _iter_next_1b443c0ad;
							};
							if (static__1ac659090_exist(_170119_ident, &((*_173116_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b443c0ad:;
						++it;
						goto _iter_begin_1b443c0ad;
					}
					_iter_end_1b443c0ad:;
				};
				if (((*_17308_f.alloc)._field_Result != nullptr)) {
					return static__1ac659090_exist(_170119_ident, &((*_17308_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1ac6427b5_Tup((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1b44333e5:;
			{
				jule::Ptr<_1ac64b4e4_Tuple> _17448_tup = _1ac6427b5_Tup((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17448_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b443e92e:;
					if (it != expr_end) {
						jule::Ptr<_1ac63d2d8_TypeKind> _174516_t = *it;
						{
							if (static__1ac659090_exist(_170119_ident, &(_174516_t))) {
								return true;;
							};
						}
						_iter_next_1b443e92e:;
						++it;
						goto _iter_begin_1b443e92e;
					}
					_iter_end_1b443e92e:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1b4432ca7:;
			{
				return false;;
			}
		}
		_match_end_1b4432b97:;
	};
}















inline void _1ad258908_stop(_1ad258254_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1ad258b8e_stopped(_1ad258254_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1ad258e25_finished(_1ad258254_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1ad2591ab_isLastSt(_1ad258254_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1ad25951e_pushErr(_1ad258254_scopeParser* _self_, jule::Ptr<_1ac4912c3_Token> _18823_token, jule::Str _18838_fmt) {
	_1ad2772b7_pushErr((*(_self_))._field_p.ptr(), _18823_token, _18838_fmt, jule::Slice<jule::Any>());
}



inline void _1ad259882_pushSuggestion(_1ad258254_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args) {
	_1ad27762a_pushSuggestion((*(_self_))._field_p.ptr(), _19330_fmt, _19343_args);
}



inline void _1ad259b3a_insertAsNext(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _19733_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1ad2578b3_stmt>(_1ad2578b3_stmt{._field_tokens=(*(_19733_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1ad2578b3_stmt> _1ad259dc1_next(_1ad258254_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1ac4b679e_ScopeTree> _1ad25a2bc_buildScope(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _20731_tokens, jule::Ptr<_1ac4912c3_Token> _20753_end) {
	jule::Ptr<_1ac4b679e_ScopeTree> _2087_s = _1ad256670_newScope();;
	(*(_2087_s))._field_Parent=(*(_self_))._field_s;
	(*_2087_s.alloc)._field_End=_20753_end;
	_1ad258254_scopeParser _2117_ssp = _1ad258254_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1ad2578b3_stmt>>(nullptr), ._field_pos=0};;
	_1ad265140_build(&_2117_ssp, _20731_tokens, &(_2087_s));
	return _2087_s;;
}



inline jule::Ptr<_1ac4b95e8_VarDecl> _1ad25a60d_buildVarSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _21831_tokens) {
	jule::Ptr<_1ac4b95e8_VarDecl> _2197_v = _1ad27a089_buildVar((*(_self_))._field_p, (*(_21831_tokens)));;
	if ((_2197_v != nullptr)) {
		(*_2197_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _2197_v;;
}



inline jule::Ptr<_1ac4b99c2_RetSt> _1ad25a94e_buildRetSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _22630_tokens) {
	jule::Ptr<_1ac4b99c2_RetSt> _2277_st = jule::new_ptr<_1ac4b99c2_RetSt>(_1ac4b99c2_RetSt{._field_Token=_22630_tokens[0LL], ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	if ((_22630_tokens.len() > 1LL)) {
		(_22630_tokens).mut_slice(1LL);;
		(*(_2277_st))._field_Expr=_1ad27796b_buildExpr((*(_self_))._field_p, &(_22630_tokens));
	};
	return _2277_st;;
}



inline jule::Ptr<_1ac4ba242_Iter> _1ad25ac90_buildWhileNextIter(_1ad258254_scopeParser* _self_, jule::Ptr<_1ad2578b3_stmt>* _23739_s) {
	jule::Ptr<_1ac4ba242_Iter> _2387_it = jule::new_ptr<_1ac4ba242_Iter>(_1ac4ba242_Iter{._field_Comptime=false, ._field_Token=(*((*(_23739_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _2417_tokens = (*((*(_23739_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1ac4baa6c_WhileKind> _2427_kind = jule::new_ptr<_1ac4baa6c_WhileKind>(_1ac4baa6c_WhileKind{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1ac4912c3_Token>(nullptr)});;
	if ((_2417_tokens.len() > 0LL)) {
		(*_2427_kind.alloc)._field_Expr=_1ad27796b_buildExpr((*(_self_))._field_p, &(_2417_tokens));
	};
	if (_1ad2591ab_isLastSt(_self_)) {
		_1ad25951e_pushErr(_self_, (*(_2387_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2417_tokens=(*(_1ad259dc1_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _2547_stTokens = _1ad271998_getBlockExpr(&(_2417_tokens));;
	if ((_2547_stTokens.len() > 0LL)) {
		jule::Ptr<_1ad2578b3_stmt> _2568_stmt = jule::new_ptr<_1ad2578b3_stmt>(_1ad2578b3_stmt{._field_tokens=_2547_stTokens, ._field_terminated=(*((*(_23739_s))))._field_terminated});;
		(*_2427_kind.alloc)._field_NextToken=_2547_stTokens[0LL];
		(*_2427_kind.alloc)._field_Next=_1ad264ccc_buildSt(_self_, &(_2568_stmt));
	};
	jule::I64 _2647_i = _2547_stTokens.len();;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _2657_blockTokens = _1ad274e85_range(&(_2647_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2417_tokens));;
	if ((_2657_blockTokens == nullptr)) {
		_1ad258908_stop(_self_);
		_1ad25951e_pushErr(_self_, (*_2387_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ad259882_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2647_i < _2417_tokens.len())) {
		_1ad25951e_pushErr(_self_, _2417_tokens[_2647_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_2387_it.alloc)._field_Scope=_1ad25a2bc_buildScope(_self_, &(_2657_blockTokens), _2417_tokens[(_2647_i - 1LL)]);
	(*_2387_it.alloc)._field_Kind=jule::Any(_2427_kind, &__jule_any_type43);
	return _2387_it;;
}



inline jule::Ptr<_1ac4baa6c_WhileKind> _1ad25b0d1_buildWhileIterKind(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _28239_tokens) {
	return jule::new_ptr<_1ac4baa6c_WhileKind>(_1ac4baa6c_WhileKind{._field_Expr=_1ad27796b_buildExpr((*(_self_))._field_p, _28239_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1ac4912c3_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1ad25b422_getRangeKindKeysTokens(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _28843_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _2897_vars;
	jule::Slice<_1b08b6838_Log> _28913_errs;
	({
		__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(_28843_toks, static_cast<jule::U64>(5LLU), true);
		_2897_vars = __jule_assign_result.__jule_result_arg0;
		_28913_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28913_errs);
	return _2897_vars;;
}



inline jule::Ptr<_1ac4b95e8_VarDecl> _1ad25b763_buildRangeKindKey(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _29438_tokens) {
	if (((*(_29438_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ac4b95e8_VarDecl> _2987_key = jule::new_ptr<_1ac4b95e8_VarDecl>(_1ac4b95e8_VarDecl{._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_Token=(*(_29438_tokens))[0LL], ._field_Setter=(*(_29438_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	if (((*((*(_2987_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2987_key.alloc)._field_Mutable=true;
		if (((*(_29438_tokens)).len() == 1LL)) {
			_1ad25951e_pushErr(_self_, (*_2987_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2987_key.alloc)._field_Token=(*(_29438_tokens))[1LL];
	} else if (((*(_29438_tokens)).len() > 1LL)) {
		_1ad25951e_pushErr(_self_, (*(_29438_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2987_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad25951e_pushErr(_self_, (*_2987_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ad259882_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2987_key.alloc)._field_Ident=(*(*(_2987_key))._field_Token.alloc)._field_Kind;
	return _2987_key;;
}



inline jule::Slice<jule::Ptr<_1ac4b95e8_VarDecl>> _1ad25baa4_buildRangeKindKeys(_1ad258254_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>>* _32039_parts) {
	jule::Slice<jule::Ptr<_1ac4b95e8_VarDecl>> _32111_keys = nullptr;;
	{
		auto expr = _32039_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b475e248:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _32215_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac4b95e8_VarDecl>> &__jule_push_dest = _32111_keys; __jule_push_dest.push(_1ad25b763_buildRangeKindKey(_self_, &(_32215_tokens))); };
			}
			_iter_next_1b475e248:;
			++it;
			goto _iter_begin_1b475e248;
		}
		_iter_end_1b475e248:;
	};
	return _32111_keys;;
}



inline void _1ad25be17_setupRangeKindKeysPlain(_1ad258254_scopeParser* _self_, jule::Ptr<_1ac4bb474_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _32866_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _3297_keyTokens = _1ad25b422_getRangeKindKeysTokens(_self_, _32866_tokens);;
	if ((_3297_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_3297_keyTokens.len() > 2LL)) {
		_1ad25951e_pushErr(_self_, (*((*(_32844_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1ac4b95e8_VarDecl>> _3367_keys = _1ad25baa4_buildRangeKindKeys(_self_, &(_3297_keyTokens));;
	(*((*(_32844_rng))))._field_KeyA=_3367_keys[0LL];
	if ((_3367_keys.len() > 1LL)) {
		(*((*(_32844_rng))))._field_KeyB=_3367_keys[1LL];
	};
}



inline void _1ad25c27a_setupRangeKindKeysExplicit(_1ad258254_scopeParser* _self_, jule::Ptr<_1ac4bb474_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _34369_tokens) {
	jule::I64 _3447_i = 0LL;;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _3457_rang = _1ad274e85_range(&(_3447_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34369_tokens);;
	if ((_3447_i < (*(_34369_tokens)).len())) {
		_1ad25951e_pushErr(_self_, (*((*(_34347_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1ad25be17_setupRangeKindKeysPlain(_self_, _34347_rng, &(_3457_rang));
}



inline void _1ad25c5dd_setupRangeKindKeys(_1ad258254_scopeParser* _self_, jule::Ptr<_1ac4bb474_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _35261_tokens) {
	if (((*((*(_35261_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1ad25c27a_setupRangeKindKeysExplicit(_self_, _35239_rng, _35261_tokens);
		return;;
	};
	_1ad25be17_setupRangeKindKeysPlain(_self_, _35239_rng, _35261_tokens);
}



inline jule::Ptr<_1ac4bb474_RangeKind> _1ad25ca94_buildRangeIterKind(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _3618_exprTokens, jule::Ptr<_1ac4912c3_Token>* _36135_inToken) {
	jule::Ptr<_1ac4bb474_RangeKind> _3627_rng = jule::new_ptr<_1ac4bb474_RangeKind>(_1ac4bb474_RangeKind{._field_InToken=(*(_36135_inToken)), ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1ac4b95e8_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1ac4b95e8_VarDecl>(nullptr)});;
	if (((*(_3618_exprTokens)).len() == 0LL)) {
		_1ad25951e_pushErr(_self_, (*(_3627_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3627_rng;;
	};
	(*_3627_rng.alloc)._field_Expr=_1ad27796b_buildExpr((*(_self_))._field_p, _3618_exprTokens);
	if (((*(_36039_var_tokens)).len() > 0LL)) {
		_1ad25c5dd_setupRangeKindKeys(_self_, &(_3627_rng), _36039_var_tokens);
	};
	return _3627_rng;;
}



inline jule::Any _1ad25ce90_buildCommonIterKind(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _37640_tokens, jule::Ptr<_1ac4912c3_Token>* _37659_err_tok) {
	jule::I64 _3777_braceN = 0LL;;
	{
		auto expr = _37640_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b476a045:;
		if (it != expr_end) {
			jule::I64 _3788_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> _37815_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b476a919:;
						{
							(_3777_braceN)++;
							goto _iter_next_1b476a045;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b476ad04:;
						{
							(_3777_braceN)--;
						}
					}
					_match_end_1b476ac05:;
				};
				if ((_3777_braceN != 0LL)) {
					goto _iter_next_1b476a045;
				};
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1b476bdc1:;
						{
							jule::Slice<jule::Ptr<_1ac4912c3_Token>> _3959_declTokens = (*(_37640_tokens)).slice(0LL, _3788_i);;
							jule::Slice<jule::Ptr<_1ac4912c3_Token>> _3969_exprTokens = (*(_37640_tokens)).slice((_3788_i + 1LL));;
							return jule::Any(_1ad25ca94_buildRangeIterKind(_self_, &(_3959_declTokens), &(_3969_exprTokens), &(_37815_tok)), &__jule_any_type45);;
						}
					}
					_match_end_1b476c531:;
				};
			}
			_iter_next_1b476a045:;
			++it;
			_3788_i++;
			goto _iter_begin_1b476a045;
		}
		_iter_end_1b476a045:;
	};
	return jule::Any(_1ad25b0d1_buildWhileIterKind(_self_, _37640_tokens), &__jule_any_type43);;
}



inline jule::Ptr<_1ac4ba242_Iter> _1ad25d2d1_buildCommonIter(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _40335_tokens) {
	jule::Ptr<_1ac4ba242_Iter> _4047_it = jule::new_ptr<_1ac4ba242_Iter>(_1ac4ba242_Iter{._field_Comptime=false, ._field_Token=_40335_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr)});;
	(_40335_tokens).mut_slice(1LL);;
	if ((_40335_tokens.len() == 0LL)) {
		_1ad258908_stop(_self_);
		_1ad25951e_pushErr(_self_, (*(_4047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ad259882_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _4147_exprTokens = _1ad271998_getBlockExpr(&(_40335_tokens));;
	if ((_4147_exprTokens.len() > 0LL)) {
		(*_4047_it.alloc)._field_Kind=_1ad25ce90_buildCommonIterKind(_self_, &(_4147_exprTokens), &((*_4047_it.alloc)._field_Token));
	};
	jule::I64 _4187_i = _4147_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _4197_scopeTokens = _1ad274e85_range(&(_4187_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40335_tokens));;
	if ((_4197_scopeTokens == nullptr)) {
		_1ad258908_stop(_self_);
		_1ad25951e_pushErr(_self_, (*_4047_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ad259882_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_4187_i < _40335_tokens.len())) {
		_1ad25951e_pushErr(_self_, _40335_tokens[_4187_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_4047_it.alloc)._field_Scope=_1ad25a2bc_buildScope(_self_, &(_4197_scopeTokens), _40335_tokens[(_4187_i - 1LL)]);
	return _4047_it;;
}



inline jule::Ptr<_1ac4ba242_Iter> _1ad25d622_buildIterSt(_1ad258254_scopeParser* _self_, jule::Ptr<_1ad2578b3_stmt>* _43332_st) {
	if ((*((*(_43332_st))))._field_terminated) {
		return _1ad25ac90_buildWhileNextIter(_self_, _43332_st);;
	};
	return _1ad25d2d1_buildCommonIter(_self_, (*((*(_43332_st))))._field_tokens);;
}



inline jule::Ptr<_1ac4bb84d_BreakSt> _1ad25d963_buildBreakSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _44033_tokens) {
	jule::Ptr<_1ac4bb84d_BreakSt> _4417_brk = jule::new_ptr<_1ac4bb84d_BreakSt>(_1ac4bb84d_BreakSt{._field_Token=(*(_44033_tokens))[0LL], ._field_Label=jule::Ptr<_1ac4912c3_Token>(nullptr)});;
	if (((*(_44033_tokens)).len() > 1LL)) {
		if (((*((*(_44033_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1ad25951e_pushErr(_self_, (*(_44033_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1ad259882_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4417_brk))._field_Label=(*(_44033_tokens))[1LL];
			if (((*(_44033_tokens)).len() > 2LL)) {
				_1ad25951e_pushErr(_self_, (*(_44033_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4417_brk;;
}



inline jule::Ptr<_1ac4bbc27_ContSt> _1ad25dca4_buildContSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _45832_tokens) {
	jule::Ptr<_1ac4bbc27_ContSt> _4597_cont = jule::new_ptr<_1ac4bbc27_ContSt>(_1ac4bbc27_ContSt{._field_Token=(*(_45832_tokens))[0LL], ._field_Label=jule::Ptr<_1ac4912c3_Token>(nullptr)});;
	if (((*(_45832_tokens)).len() > 1LL)) {
		if (((*((*(_45832_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1ad25951e_pushErr(_self_, (*(_45832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1ad259882_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4597_cont))._field_Label=(*(_45832_tokens))[1LL];
			if (((*(_45832_tokens)).len() > 2LL)) {
				_1ad25951e_pushErr(_self_, (*(_45832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4597_cont;;
}



inline jule::Ptr<_1ac4bc1cd_If> _1ad25e0e5_buildIf(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _47628_tokens) {
	jule::Ptr<_1ac4bc1cd_If> _4777_model = jule::new_ptr<_1ac4bc1cd_If>(_1ac4bc1cd_If{._field_Token=(*(_47628_tokens))[0LL], ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr)});;
	((*(_47628_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _4817_exprTokens = _1ad271998_getBlockExpr(_47628_tokens);;
	jule::I64 _4827_i = 0LL;;
	if ((_4817_exprTokens.len() == 0LL)) {
		_1ad25951e_pushErr(_self_, (*(_4777_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4827_i=_4817_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _4887_scopeTokens = _1ad274e85_range(&(_4827_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47628_tokens);;
	if ((_4887_scopeTokens == nullptr)) {
		_1ad258908_stop(_self_);
		_1ad25951e_pushErr(_self_, (*(_4777_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ad259882_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4912c3_Token> _4957_end = (*(_47628_tokens))[(_4827_i - 1LL)];;
	if ((_4827_i < (*(_47628_tokens)).len())) {
		if (((*((*(_47628_tokens))[_4827_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47628_tokens))).mut_slice(_4827_i);;
		} else {
			_1ad25951e_pushErr(_self_, (*(_47628_tokens))[_4827_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_47628_tokens))=nullptr;
		};
	};
	(*_4777_model.alloc)._field_Expr=_1ad27796b_buildExpr((*(_self_))._field_p, &(_4817_exprTokens));
	(*_4777_model.alloc)._field_Scope=_1ad25a2bc_buildScope(_self_, &(_4887_scopeTokens), _4957_end);
	return _4777_model;;
}



inline jule::Ptr<_1ac4bc5a7_Else> _1ad25e436_buildElse(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _50930_tokens) {
	jule::Ptr<_1ac4bc5a7_Else> _5107_els = jule::new_ptr<_1ac4bc5a7_Else>(_1ac4bc5a7_Else{._field_Token=(*(_50930_tokens))[0LL], ._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr)});;
	((*(_50930_tokens))).mut_slice(1LL);;
	jule::I64 _5147_i = 0LL;;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _5157_scopeTokens = _1ad274e85_range(&(_5147_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50930_tokens);;
	if ((_5157_scopeTokens == nullptr)) {
		if ((_5147_i < (*(_50930_tokens)).len())) {
			_1ad25951e_pushErr(_self_, (*(_5107_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1ad258908_stop(_self_);
			_1ad25951e_pushErr(_self_, (*(_5107_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1ad259882_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_5147_i < (*(_50930_tokens)).len())) {
		_1ad25951e_pushErr(_self_, (*(_50930_tokens))[_5147_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_5107_els))._field_Scope=_1ad25a2bc_buildScope(_self_, &(_5157_scopeTokens), (*(_50930_tokens))[(_5147_i - 1LL)]);
	return _5107_els;;
}



inline jule::Ptr<_1ac4bca5d_Conditional> _1ad25e777_buildIfElseChain(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _53336_tokens) {
	jule::Ptr<_1ac4bca5d_Conditional> _5347_chain = jule::new_ptr<_1ac4bca5d_Conditional>(_1ac4bca5d_Conditional{._field_Head=_1ad25e0e5_buildIf(_self_, &(_53336_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1ac4bc1cd_If>>(nullptr), ._field_Default=jule::Ptr<_1ac4bc5a7_Else>(nullptr)});;
	if (((*(_5347_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53336_tokens.len() != 0LL)) {
		{
			if (((*(_53336_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1b4788c67;
			};
			if (((_53336_tokens.len() > 1LL) && ((*(_53336_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53336_tokens).mut_slice(1LL);;
				jule::Ptr<_1ac4bc1cd_If> _5469_elif = _1ad25e0e5_buildIf(_self_, &(_53336_tokens));;
				(*_5347_chain.alloc)._field_Tail=jule::append((*_5347_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4bc1cd_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5469_elif; __jule_collection; }));
				goto _iter_next_1b4788c67;
			};
			(*_5347_chain.alloc)._field_Default=_1ad25e436_buildElse(_self_, &(_53336_tokens));
			goto _iter_end_1b4788c67;
		}
	_iter_next_1b4788c67:;
	}
	_iter_end_1b4788c67:;;
	return _5347_chain;;
}



inline jule::Ptr<_1ac4aaab2_Expr> _1ad25eab8_buildCoCallSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _55633_tokens) {
	jule::Ptr<_1ac4912c3_Token> _5573_token = _55633_tokens[0LL];;
	(_55633_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac4aaab2_Expr> _5597_e = _1ad27796b_buildExpr((*(_self_))._field_p, &(_55633_tokens));;
	if ((_5597_e == nullptr)) {
		return _5597_e;;
	};
	{
		auto &_match_expr{ (*(_5597_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b478cd59:;
			{
				(*((*(_5597_e))._field_Kind.unsafe_cast_ptr<_1ac4ae7db_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1b478d431:;
			{
				_1ad25951e_pushErr(_self_, _5573_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1b478d3ba:;
	};
	return _5597_e;;
}



inline jule::Ptr<_1ac4b423b_GotoSt> _1ad25ee09_buildGotoSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _57232_tokens) {
	jule::Ptr<_1ac4b423b_GotoSt> _5737_gt = jule::new_ptr<_1ac4b423b_GotoSt>(_1ac4b423b_GotoSt{._field_Token=(*(_57232_tokens))[0LL], ._field_Label=jule::Ptr<_1ac4912c3_Token>(nullptr)});;
	if (((*(_57232_tokens)).len() == 1LL)) {
		_1ad25951e_pushErr(_self_, (*(_5737_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_57232_tokens)).len() > 2LL)) {
		_1ad25951e_pushErr(_self_, (*(_57232_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1ac4912c3_Token> _5827_identToken = (*(_57232_tokens))[1LL];;
	if (((*(_5827_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad25951e_pushErr(_self_, _5827_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ad259882_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5737_gt;;
	};
	(*(_5737_gt))._field_Label=_5827_identToken;
	return _5737_gt;;
}



inline jule::Ptr<_1ac4b4538_FallSt> _1ad26024a_buildFallSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _59232_tokens) {
	jule::Ptr<_1ac4b4538_FallSt> _5937_fll = jule::new_ptr<_1ac4b4538_FallSt>(_1ac4b4538_FallSt{._field_Token=(*(_59232_tokens))[0LL]});;
	if (((*(_59232_tokens)).len() > 1LL)) {
		_1ad25951e_pushErr(_self_, (*(_59232_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5937_fll;;
}



inline jule::Ptr<_1ac4bd29a_TypeAliasDecl> _1ad26058b_buildTypeAliasSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _60237_tokens) {
	jule::Ptr<_1ac4bd29a_TypeAliasDecl> _6037_tad = _1ad27920e_buildTypeAliasDecl((*(_self_))._field_p, _60237_tokens);;
	(*(_6037_tad))._field_Scope=(*(_self_))._field_s;
	return _6037_tad;;
}



inline void _1ad260a64_pushCaseExpr(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _60832_tokens, jule::Ptr<_1ac4912c3_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>* _60925_exprs) {
	if ((_60832_tokens.len() == 0LL)) {
		return;;
	};
	if (_6093_typeMatch) {
		jule::I64 _6148_i = 0LL;;
		jule::Ptr<_1ac4a677d_TypeDecl> _6158_t;
		jule::Bool _61511_ok;
		({
			__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType((*(_self_))._field_p, &(_60832_tokens), (&(_6148_i)), true);
			_6158_t = __jule_assign_result.__jule_result_arg0;
			_61511_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61511_ok) {
			{ jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(jule::new_ptr<_1ac4aaab2_Expr>(_1ac4aaab2_Expr{._field_Token=_60832_tokens[0LL], ._field_End=_60832_tokens[(_60832_tokens.len() - 1LL)], ._field_Kind=jule::Any(_6158_t, &__jule_any_type91)})); };
			if ((_6148_i < _60832_tokens.len())) {
				_1ad25951e_pushErr(_self_, _60832_tokens[_6148_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(_1ad27796b_buildExpr((*(_self_))._field_p, &(_60832_tokens))); };
}



inline __jule_tuple_sx_1ac4aaab2_Expr__jule_tuple_bool _1ad26101a_buildCaseExprs(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _63135_tokens, jule::Ptr<_1ac4912c3_Token>* _63158_colon, jule::Bool _63173_typeMatch) {
	__jule_tuple_sx_1ac4aaab2_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _6327_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4aaab2_Expr>(nullptr); __jule_collection; });;
	jule::I64 _6337_braceN = 0LL;;
	jule::I64 _6347_j = 0LL;;
	{
		auto expr = _63135_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4799cde:;
		if (it != expr_end) {
			jule::I64 _6358_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> _63515_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63515_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b479b54e:;
						{
							(_6337_braceN)++;
							goto _iter_next_1b4799cde;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b479b939:;
						{
							(_6337_braceN)--;
							goto _iter_next_1b4799cde;
						}
					}
					_match_end_1b479b83a:;
				};
				if ((_6337_braceN != 0LL)) {
					goto _iter_next_1b4799cde;
				};
				{
					
					if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1b479d100:;
						{
							jule::Slice<jule::Ptr<_1ac4912c3_Token>> _6545_exprTokens = (*(_63135_tokens)).slice(_6347_j, _6358_i);;
							if ((_6545_exprTokens.len() == 0LL)) {
								_1ad25951e_pushErr(_self_, _63515_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1ad260a64_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							};
							_6347_j=(_6358_i + 1LL);
						}
					}
					else if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1b479d166:;
						{
							(*(_63158_colon))=_63515_tok;
							_1ad260a64_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							((*(_63135_tokens))).mut_slice((_6358_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _6327_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6358_i - _6347_j) == 0LL) || (_6327_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1b479cb05:;
				};
			}
			_iter_next_1b4799cde:;
			++it;
			_6358_i++;
			goto _iter_begin_1b4799cde;
		}
		_iter_end_1b4799cde:;
	};
	_1ad25951e_pushErr(_self_, (*(_63135_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_63135_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac4b679e_ScopeTree> _1ad26135b_buildCaseScope(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _67335_tokens) {
	jule::I64 _6747_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6768_i = 0LL;;
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _6778_next;
			({
				__jule_tuple_sx_1ac4912c3_Token__jule_tuple_bool __jule_assign_result = _1ad257583_skipSt(&(_6768_i), (*(_67335_tokens)).slice(_6747_n));
				_6778_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6778_next.len() == 0LL)) {
				goto _iter_end_1b47a1de5;
			};
			jule::Ptr<_1ac4912c3_Token> _6814_tok = _6778_next[0LL];;
			if (((*(_6814_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6747_n+=_6768_i;
				goto _iter_next_1b47a1de5;
			};
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _6868_scopeTokens = (*(_67335_tokens)).slice(0LL, _6747_n);;
			jule::Ptr<_1ac4b679e_ScopeTree> _6878_scope = _1ad25a2bc_buildScope(_self_, &(_6868_scopeTokens), (*(_67335_tokens))[_6747_n]);;
			((*(_67335_tokens))).mut_slice(_6747_n);;
			return _6878_scope;;
		}
	_iter_next_1b47a1de5:;
	}
	_iter_end_1b47a1de5:;;
	jule::Ptr<_1ac4912c3_Token> _69111_end;;
	if (((*(_67335_tokens)).len() > 0LL)) {
		_69111_end=(*(_67335_tokens))[((*(_67335_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1ac4b679e_ScopeTree> _6957_scope = _1ad25a2bc_buildScope(_self_, _67335_tokens, _69111_end);;
	(*(_67335_tokens))=nullptr;
	return _6957_scope;;
}



inline __jule_tuple_x_1ac4bd751_Case__jule_tuple_bool _1ad261757_buildCase(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _70030_tokens, jule::Bool _70048_typeMatch) {
	__jule_tuple_x_1ac4bd751_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac4bd751_Case> _7017_c = jule::new_ptr<_1ac4bd751_Case>(_1ac4bd751_Case{._field_Token=(*(_70030_tokens))[0LL], ._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>(nullptr)});;
	((*(_70030_tokens))).mut_slice(1LL);;
	jule::Ptr<_1ac4912c3_Token> _70511_colon = nullptr;;
	if (((*(_70030_tokens)).len() == 0LL)) {
		_1ad25951e_pushErr(_self_, (*(_7017_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _71012_ok;
	({
		__jule_tuple_sx_1ac4aaab2_Expr__jule_tuple_bool __jule_assign_result = _1ad26101a_buildCaseExprs(_self_, _70030_tokens, &(_70511_colon), _70048_typeMatch);
		(*_7017_c.alloc)._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_71012_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_7017_c.alloc)._field_Scope=_1ad26135b_buildCaseScope(_self_, _70030_tokens);
	if (((*((*_7017_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_7017_c))._field_Scope.alloc)._field_End=_70511_colon;
	};
	jule::Bool _7153_isDefault = (_71012_ok && ((*_7017_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _7017_c;
	__jule_func_result.__jule_result_arg1 = _7153_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ac4bd751_Case__jule_tuple_x_1ac4bc5a7_Else _1ad261b53_buildCases(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _71930_tokens, jule::Bool _71948_typeMatch) {
	__jule_tuple_sx_1ac4bd751_Case__jule_tuple_x_1ac4bc5a7_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1ac4bd751_Case>> _72011_cases = nullptr;;
	jule::Ptr<_1ac4bc5a7_Else> _72111_def = nullptr;;
	jule::Bool _7227_defNotLast = false;;
	while ((_71930_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1ac4912c3_Token> _7248_tok = _71930_tokens[0LL];;
			if (((*(_7248_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1ad25951e_pushErr(_self_, _7248_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1b47ab30b;
			};
			jule::Ptr<_1ac4bd751_Case> _7298_c;
			jule::Bool _72911_isDefault;
			({
				__jule_tuple_x_1ac4bd751_Case__jule_tuple_bool __jule_assign_result = _1ad261757_buildCase(_self_, &(_71930_tokens), _71948_typeMatch);
				_7298_c = __jule_assign_result.__jule_result_arg0;
				_72911_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72911_isDefault) {
				(*(_7298_c))._field_Token=_7248_tok;
				if ((_72111_def == nullptr)) {
					_72111_def=jule::new_ptr<_1ac4bc5a7_Else>(_1ac4bc5a7_Else{._field_Token=(*_7298_c.alloc)._field_Token, ._field_Scope=(*_7298_c.alloc)._field_Scope});
				} else {
					_1ad25951e_pushErr(_self_, _7248_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_7227_defNotLast=(_7227_defNotLast || (_72111_def != nullptr));
				{ jule::Slice<jule::Ptr<_1ac4bd751_Case>> &__jule_push_dest = _72011_cases; __jule_push_dest.push(_7298_c); };
			};
		}
	_iter_next_1b47ab30b:;
	}
	_iter_end_1b47ab30b:;;
	if (_7227_defNotLast) {
		_1ad25951e_pushErr(_self_, (*(_72111_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _72011_cases;
	__jule_func_result.__jule_result_arg1 = _72111_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac4be06a_MatchCase> _1ad261e94_buildMatchCase(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _75334_tokens) {
	jule::Ptr<_1ac4be06a_MatchCase> _7547_m = jule::new_ptr<_1ac4be06a_MatchCase>(_1ac4be06a_MatchCase{._field_Comptime=false, ._field_Token=_75334_tokens[0LL], ._field_End=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1ac4bd751_Case>>(nullptr), ._field_Default=jule::Ptr<_1ac4bc5a7_Else>(nullptr)});;
	(_75334_tokens).mut_slice(1LL);;
	if (((_75334_tokens.len() > 0LL) && ((*(_75334_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7547_m))._field_TypeMatch=true;
		(_75334_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _7647_exprTokens = _1ad271998_getBlockExpr(&(_75334_tokens));;
	if ((_7647_exprTokens.len() > 0LL)) {
		(*_7547_m.alloc)._field_Expr=_1ad27796b_buildExpr((*(_self_))._field_p, &(_7647_exprTokens));
	} else if ((*_7547_m.alloc)._field_TypeMatch) {
		_1ad25951e_pushErr(_self_, (*_7547_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I64 _7717_i = _7647_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _7727_blockToks = _1ad274e85_range(&(_7717_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_75334_tokens));;
	if ((_7727_blockToks == nullptr)) {
		_1ad258908_stop(_self_);
		_1ad25951e_pushErr(_self_, (*_7547_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ad259882_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7717_i < _75334_tokens.len())) {
		_1ad25951e_pushErr(_self_, _75334_tokens[_7717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_7547_m.alloc)._field_End=_75334_tokens[(_7717_i - 1LL)];
	({
		__jule_tuple_sx_1ac4bd751_Case__jule_tuple_x_1ac4bc5a7_Else __jule_assign_result = _1ad261b53_buildCases(_self_, _7727_blockToks, (*_7547_m.alloc)._field_TypeMatch);
		(*_7547_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7547_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7547_m;;
}



inline jule::Ptr<_1ac4b679e_ScopeTree> _1ad2622d5_buildScopeSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _78632_tokens) {
	jule::Bool _7877_isUnsafe = false;;
	jule::Bool _7887_isDeferred = false;;
	jule::Ptr<_1ac4912c3_Token> _7897_token = _78632_tokens[0LL];;
	if (((*(_7897_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7877_isUnsafe=true;
		(_78632_tokens).mut_slice(1LL);;
		if ((_78632_tokens.len() == 0LL)) {
			_1ad25951e_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7897_token=_78632_tokens[0LL];
		if (((*_7897_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7887_isDeferred=true;
			(_78632_tokens).mut_slice(1LL);;
			if ((_78632_tokens.len() == 0LL)) {
				_1ad25951e_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7897_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7887_isDeferred=true;
		(_78632_tokens).mut_slice(1LL);;
		if ((_78632_tokens.len() == 0LL)) {
			_1ad25951e_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I64 _8157_i = 0LL;;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _8167_scopeTokens = _1ad274e85_range(&(_8157_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78632_tokens));;
	if ((_8167_scopeTokens == nullptr)) {
		_1ad25951e_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_8157_i < _78632_tokens.len())) {
		_1ad25951e_pushErr(_self_, _78632_tokens[_8157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1ac4b679e_ScopeTree> _8237_scope = _1ad25a2bc_buildScope(_self_, &(_8167_scopeTokens), _78632_tokens[(_8157_i - 1LL)]);;
	(*(_8237_scope))._field_Unsafety=_7877_isUnsafe;
	(*_8237_scope.alloc)._field_Deferred=_7887_isDeferred;
	return _8237_scope;;
}



inline jule::Ptr<_1ac4b3d62_LabelSt> _1ad262626_buildLabelSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _82933_tokens) {
	jule::Ptr<_1ac4b3d62_LabelSt> _8307_lbl = jule::new_ptr<_1ac4b3d62_LabelSt>(_1ac4b3d62_LabelSt{._field_Token=(*(_82933_tokens))[0LL], ._field_Ident=(*((*(_82933_tokens))[0LL]))._field_Kind});;
	if (((*(_82933_tokens)).len() > 2LL)) {
		((*(_82933_tokens))).mut_slice(2LL);;
		_1ad259b3a_insertAsNext(_self_, _82933_tokens);
	};
	return _8307_lbl;;
}



inline __jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool _1ad262967_buildIdSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _84430_tokens) {
	__jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84430_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ac4912c3_Token> _8497_token = (*(_84430_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8497_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1b47c2dc2:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1ad262626_buildLabelSt(_self_, _84430_tokens), &__jule_any_type63);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b47c3631:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ad2733d4_assignInfo> _1ad262ca8_buildAssignInfo(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _85836_tokens) {
	jule::Ptr<_1ad2733d4_assignInfo> _8597_info = jule::new_ptr<_1ad2733d4_assignInfo>(_1ad2733d4_assignInfo{._field_l=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr), ._field_setter=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_ok=true});;
	jule::I64 _8627_braceN = 0LL;;
	{
		auto expr = _85836_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b47c4e07:;
		if (it != expr_end) {
			jule::I64 _8638_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> _86315_token = *it;
			{
				{
					auto &_match_expr{ (*(_86315_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b47c5842:;
						{
							(_8627_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b47c5bc7:;
						{
							(_8627_braceN)--;
						}
					}
					_match_end_1b47c5ac8:;
				};
				{
					
					if ((_8627_braceN > 0LL)) {
						_case_begin_1b47c6d2c:;
						{
							goto _iter_next_1b47c4e07;
						}
					}
					else if (((!(_1ac49611e_IsAssignOp((*(_86315_token))._field_Id))) && ((*_86315_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1b47c6d93:;
						{
							goto _iter_next_1b47c4e07;
						}
					}
					_match_end_1b47c6c83:;
				};
				(*(_8597_info))._field_l=(*(_85836_tokens)).slice(0LL, _8638_i);
				if (((*_8597_info.alloc)._field_l.len() == 0LL)) {
					(*_8597_info.alloc)._field_ok=false;
				};
				(*_8597_info.alloc)._field_setter=_86315_token;
				if (((_8638_i + 1LL) >= (*(_85836_tokens)).len())) {
					(*_8597_info.alloc)._field_r=nullptr;
					(*_8597_info.alloc)._field_ok=_1ac495d55_IsPostfixOp((*((*_8597_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1b47c4e07;
				};
				(*_8597_info.alloc)._field_r=(*(_85836_tokens)).slice((_8638_i + 1LL));
				if (_1ac495d55_IsPostfixOp((*(*(_8597_info))._field_setter.alloc)._field_Id)) {
					if (((*_8597_info.alloc)._field_r.len() > 0LL)) {
						_1ad25951e_pushErr(_self_, (*(_8597_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8597_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1b47c4e07;
			}
			_iter_next_1b47c4e07:;
			++it;
			_8638_i++;
			goto _iter_begin_1b47c4e07;
		}
		_iter_end_1b47c4e07:;
	};
	return _8597_info;;
}



inline jule::Ptr<_1ac4b4b98_AssignLeft> _1ad2630e9_buildAssignL(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _90333_tokens) {
	jule::Ptr<_1ac4b4b98_AssignLeft> _9047_l = jule::new_ptr<_1ac4b4b98_AssignLeft>(_1ac4b4b98_AssignLeft{._field_Token=(*(_90333_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	if (((*((*(_90333_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_9047_l))._field_Ident=(*((*_9047_l.alloc)._field_Token))._field_Kind;
	};
	(*_9047_l.alloc)._field_Expr=_1ad27796b_buildExpr((*(_self_))._field_p, _90333_tokens);
	return _9047_l;;
}



inline jule::Slice<jule::Ptr<_1ac4b4b98_AssignLeft>> _1ad26343a_buildAssignLs(_1ad258254_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>>* _91434_parts) {
	jule::Slice<jule::Ptr<_1ac4b4b98_AssignLeft>> _91511_lefts = nullptr;;
	{
		auto expr = _91434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b47ce241:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _91615_part = *it;
			{
				jule::Ptr<_1ac4b4b98_AssignLeft> _9178_l = _1ad2630e9_buildAssignL(_self_, &(_91615_part));;
				{ jule::Slice<jule::Ptr<_1ac4b4b98_AssignLeft>> &__jule_push_dest = _91511_lefts; __jule_push_dest.push(_9178_l); };
			}
			_iter_next_1b47ce241:;
			++it;
			goto _iter_begin_1b47ce241;
		}
		_iter_end_1b47ce241:;
	};
	return _91511_lefts;;
}



inline __jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool _1ad26377b_buildPlainAssign(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _92337_tokens) {
	__jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ad2733d4_assignInfo> _9247_info = _1ad262ca8_buildAssignInfo(_self_, _92337_tokens);;
	if ((!((*(_9247_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac4b522b_AssignSt> _9297_assign = jule::new_ptr<_1ac4b522b_AssignSt>(_1ac4b522b_AssignSt{._field_Declarative=false, ._field_Setter=(*_9247_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1ac4b4b98_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	if (((*((*_9247_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_9297_assign))._field_Declarative=true;
		(*_9297_assign.alloc)._field_Right=_1ad27796b_buildExpr((*(_self_))._field_p, &((*_9247_info.alloc)._field_r));
		jule::Bool _9374_ok = _1ad263b77_buildDeclAssign1(_self_, &((*_9247_info.alloc)._field_l), &(_9297_assign));;
		if ((!(_9374_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_9297_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_9297_assign, &__jule_any_type65);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1ac4b4b98_AssignLeft> _9468_left = (*(_9297_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9468_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type51) {
				_case_begin_1b47d5511:;
				{
					jule::Ptr<_1ac4b95e8_VarDecl> _9499_decl = jule::new_ptr<_1ac4b95e8_VarDecl>(_1ac4b95e8_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9468_left))._field_Token, ._field_Setter=(*_9297_assign.alloc)._field_Setter, ._field_Ident=(*_9468_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9468_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9468_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Expr=(*_9297_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9499_decl, &__jule_any_type16);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1b47d549a:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_9297_assign, &__jule_any_type65);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _9637_parts;
	jule::Slice<_1b08b6838_Log> _96314_errs;
	({
		__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(&((*_9247_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9637_parts = __jule_assign_result.__jule_result_arg0;
		_96314_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96314_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_96314_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_9297_assign.alloc)._field_Left=_1ad26343a_buildAssignLs(_self_, &(_9637_parts));
	if (((*_9247_info.alloc)._field_r != nullptr)) {
		(*_9297_assign.alloc)._field_Right=_1ad27796b_buildExpr((*(_self_))._field_p, &((*_9247_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_9297_assign, &__jule_any_type65);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1ad263b77_buildDeclAssign1(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _97737_lefts, jule::Ptr<_1ac4b522b_AssignSt>* _97759_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _9797_parts;
	jule::Slice<_1b08b6838_Log> _97914_errs;
	({
		__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(_97737_lefts, static_cast<jule::U64>(5LLU), true);
		_9797_parts = __jule_assign_result.__jule_result_arg0;
		_97914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97914_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_97914_errs);
		return false;;
	};
	{
		auto expr = &(_9797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b47db4d4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _98515_part = *it;
			{
				jule::Bool _9868_isMut = false;;
				jule::Bool _9878_isRef = false;;
				jule::Ptr<_1ac4912c3_Token> _9894_token = _98515_part[0LL];;
				if (((*(_9894_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9868_isMut=true;
					(_98515_part).mut_slice(1LL);;
					if ((_98515_part.len() == 0LL)) {
						_1ad25951e_pushErr(_self_, _9894_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_98515_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9878_isRef=true;
					(_98515_part).mut_slice(1LL);;
					if ((_98515_part.len() == 0LL)) {
						_1ad25951e_pushErr(_self_, _9894_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_98515_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_98515_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1ad25951e_pushErr(_self_, _9894_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1ac4b4b98_AssignLeft> _10138_l = _1ad2630e9_buildAssignL(_self_, &(_98515_part));;
				if (((*(_10138_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*_10138_l.alloc)._field_Mutable=_9868_isMut;
				(*_10138_l.alloc)._field_Reference=_9878_isRef;
				{ jule::Slice<jule::Ptr<_1ac4b4b98_AssignLeft>> &__jule_push_dest = (*((*(_97759_assign))))._field_Left; __jule_push_dest.push(_10138_l); };
			}
			_iter_next_1b47db4d4:;
			++it;
			goto _iter_begin_1b47db4d4;
		}
		_iter_end_1b47db4d4:;
	};
	return true;;
}



inline __jule_tuple_x_1ac4b522b_AssignSt__jule_tuple_bool _1ad263eb8_buildDeclAssign(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _102535_tokens) {
	__jule_tuple_x_1ac4b522b_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_102535_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_102535_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac4912c3_Token> _10317_token = _102535_tokens[0LL];;
	if (((*(_10317_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac4b522b_AssignSt> _10367_assign = jule::new_ptr<_1ac4b522b_AssignSt>(_1ac4b522b_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1ac4b4b98_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	jule::I64 _10407_i = 0LL;;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _10417_rang = _1ad274e85_range(&(_10407_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_102535_tokens));;
	if ((_10417_rang == nullptr)) {
		_1ad25951e_pushErr(_self_, _10317_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10407_i + 1LL) < _102535_tokens.len())) {
		(*(_10367_assign))._field_Setter=_102535_tokens[_10407_i];
		if (((*((*_10367_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1ad25951e_pushErr(_self_, (*_10367_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10407_i)++;
		jule::Slice<jule::Ptr<_1ac4912c3_Token>> _10518_exprTokens = _102535_tokens.slice(_10407_i);;
		(*_10367_assign.alloc)._field_Right=_1ad27796b_buildExpr((*(_self_))._field_p, &(_10518_exprTokens));
	};
	jule::Bool _10553_ok = _1ad263b77_buildDeclAssign1(_self_, &(_10417_rang), &(_10367_assign));;
	__jule_func_result.__jule_result_arg0 = _10367_assign;
	__jule_func_result.__jule_result_arg1 = _10553_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool _1ad264309_buildAssignSt(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _105934_tokens) {
	__jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1ad27378b_checkAssignTokens(_105934_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_105934_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b47ec281:;
			{
				({
					__jule_tuple_x_1ac4b522b_AssignSt__jule_tuple_bool __jule_assign_result = _1ad263eb8_buildDeclAssign(_self_, (*(_105934_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type65);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b47eb406:;
			{
				({
					__jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool __jule_assign_result = _1ad26377b_buildPlainAssign(_self_, _105934_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b47eb868:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ac4ab486_UseExpr> _1ad26464a_buildUseExpr(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _107233_tokens) {
	if (((*(_107233_tokens)).len() == 1LL)) {
		_1ad25951e_pushErr(_self_, (*(_107233_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1ac4ab486_UseExpr> _10777_ue = jule::new_ptr<_1ac4ab486_UseExpr>(_1ac4ab486_UseExpr{._field_Token=(*(_107233_tokens))[0LL], ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	((*(_107233_tokens))).mut_slice(1LL);;
	(*(_10777_ue))._field_Expr=_1ad27796b_buildExpr((*(_self_))._field_p, _107233_tokens);
	return _10777_ue;;
}



inline jule::Any _1ad26498b_buildConstSt(_1ad258254_scopeParser* _self_, jule::Ptr<_1ad2578b3_stmt>* _108533_st) {
	if (((*((*(_108533_st))))._field_tokens.len() == 1LL)) {
		_1ad25951e_pushErr(_self_, (*((*(_108533_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_108533_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b48018a1:;
			{
				((*((*(_108533_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1ac4ba242_Iter> _10938_iter = _1ad25d622_buildIterSt(_self_, _108533_st);;
				if ((_10938_iter != nullptr)) {
					(*_10938_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10938_iter, &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b4801692:;
			{
				((*((*(_108533_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1ac4be06a_MatchCase> _11008_mt = _1ad261e94_buildMatchCase(_self_, (*((*(_108533_st))))._field_tokens);;
				if ((_11008_mt != nullptr)) {
					(*_11008_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_11008_mt, &__jule_any_type66);;
			}
		}
		else {
			_case_begin_1b480099e:;
			{
				return jule::Any(_1ad25a60d_buildVarSt(_self_, &((*((*(_108533_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1b48011db:;
	};
}



inline jule::Any _1ad264ccc_buildSt(_1ad258254_scopeParser* _self_, jule::Ptr<_1ad2578b3_stmt>* _111028_st) {
	jule::Ptr<_1ac4912c3_Token> _11117_token = (*((*(_111028_st))))._field_tokens[0LL];;
	if (((*(_11117_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _11138_s;
		jule::Bool _111311_ok;
		({
			__jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool __jule_assign_result = _1ad262967_buildIdSt(_self_, &((*((*(_111028_st))))._field_tokens));
			_11138_s = __jule_assign_result.__jule_result_arg0;
			_111311_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_111311_ok) {
			return _11138_s;;
		};
	};
	jule::Any _11197_s;
	jule::Bool _111910_ok;
	({
		__jule_tuple__1ac4b5ddb_StmtData__jule_tuple_bool __jule_assign_result = _1ad264309_buildAssignSt(_self_, &((*((*(_111028_st))))._field_tokens));
		_11197_s = __jule_assign_result.__jule_result_arg0;
		_111910_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_111910_ok) {
		return _11197_s;;
	};
	{
		auto &_match_expr{ (*(_11117_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1b48077ca:;
			{
				return jule::Any(_1ad26464a_buildUseExpr(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type70);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b4807654:;
			{
				return _1ad26498b_buildConstSt(_self_, _111028_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b4807a3e:;
			{
				return jule::Any(_1ad25a60d_buildVarSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b4807aa5:;
			{
				return jule::Any(_1ad25a94e_buildRetSt(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b4807b1b:;
			{
				return jule::Any(_1ad25d622_buildIterSt(_self_, _111028_st), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b4807b82:;
			{
				return jule::Any(_1ad25d963_buildBreakSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1b4807be8:;
			{
				return jule::Any(_1ad25dca4_buildContSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1b4807c70:;
			{
				return jule::Any(_1ad25e777_buildIfElseChain(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1b4807ce7:;
			{
				return jule::Any(_1ad25eab8_buildCoCallSt(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1b4807d6e:;
			{
				return jule::Any(_1ad25ee09_buildGotoSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1b4807de6:;
			{
				return jule::Any(_1ad26024a_buildFallSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b4807e6d:;
			{
				return jule::Any(_1ad26058b_buildTypeAliasSt(_self_, &((*((*(_111028_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b4807ee5:;
			{
				return jule::Any(_1ad261e94_buildMatchCase(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b480806c:;
			{
				if (((*((*(_111028_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1b4807489;
				};
				if ((((*((*((*(_111028_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_111028_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1ad2622d5_buildScopeSt(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type58);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b48080e4:;
			{
				return jule::Any(_1ad2622d5_buildScopeSt(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b480816b:;
			{
				return jule::Any(_1ad2622d5_buildScopeSt(_self_, (*((*(_111028_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		_match_end_1b4807489:;
	};
	jule::Ptr<_1ac4aaab2_Expr> _11667_expr = _1ad27796b_buildExpr((*(_self_))._field_p, &((*((*(_111028_st))))._field_tokens));;
	if ((_11667_expr != nullptr)) {
		return jule::Any(_11667_expr, &__jule_any_type59);;
	};
	_1ad25951e_pushErr(_self_, _11117_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1ad265140_build(_1ad258254_scopeParser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _117426_tokens, jule::Ptr<_1ac4b679e_ScopeTree>* _117449_s) {
	if (((*(_117449_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1ad257c6a_splitStmts(_117426_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_117449_s));
	while (((!(_1ad2591ab_isLastSt(_self_))) && (!(_1ad258e25_finished(_self_))))) {
		{
			jule::Ptr<_1ad2578b3_stmt> _11828_st = _1ad259dc1_next(_self_);;
			jule::Any _11838_data = _1ad264ccc_buildSt(_self_, &(_11828_st));;
			if ((_11838_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1ac4b613e_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac4b613e_Stmt{._field_Token=(*(_11828_st))._field_tokens[0LL], ._field_Data=_11838_data}; __jule_collection; }));
			};
			if (_1ad258b8e_stopped(_self_)) {
				goto _iter_end_1b48153ba;
			};
		}
	_iter_next_1b48153ba:;
	}
	_iter_end_1b48153ba:;;
}








inline jule::Bool _1ad265bbd_exprBuilder_eq(_1ad265bbd_exprBuilder *_self_, _1ad265bbd_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1ad266493_pushErr(_1ad265bbd_exprBuilder* _self_, jule::Ptr<_1ac4912c3_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args) {
	_1ad2772b7_pushErr((*(_self_))._field_p.ptr(), _4523_token, _4538_fmt, _4551_args);
}



inline void _1ad266806_pushSuggestion(_1ad265bbd_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args) {
	_1ad27762a_pushSuggestion((*(_self_))._field_p.ptr(), _5030_fmt, _5043_args);
}



inline jule::Ptr<_1ac4ab6a6_TupleExpr> _1ad266b47_buildTuple(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>>* _5431_parts) {
	jule::Ptr<_1ac4ab6a6_TupleExpr> _557_tuple = jule::new_ptr<_1ac4ab6a6_TupleExpr>(_1ac4ab6a6_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>::alloc(0LL, (*(_5431_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4aaab2_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _5431_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b48394bb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _5815_part = *it;
			{
				(*(_557_tuple))._field_Expr=jule::append((*_557_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad27103b_buildFromTokens(_self_, _5815_part); __jule_collection; }));
			}
			_iter_next_1b48394bb:;
			++it;
			goto _iter_begin_1b48394bb;
		}
		_iter_end_1b48394bb:;
	};
	return _557_tuple;;
}



inline jule::Ptr<_1ac4aba4c_LitExpr> _1ad266e88_buildLit(_1ad265bbd_exprBuilder* _self_, jule::Ptr<_1ac4912c3_Token> _6424_token) {
	return jule::new_ptr<_1ac4aba4c_LitExpr>(_1ac4aba4c_LitExpr{._field_Token=_6424_token, ._field_Value=(*(_6424_token))._field_Kind});;
}



inline jule::Any _1ad26761a_buildSingle(_1ad265bbd_exprBuilder* _self_, jule::Ptr<_1ac4912c3_Token> _7531_token) {
	{
		auto &_match_expr{ (*(_7531_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1b483c1b1:;
			{
				return jule::Any(_1ad266e88_buildLit(_self_, _7531_token), &__jule_any_type104);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1b483c238:;
			{
				return jule::Any(jule::new_ptr<_1ac4ad048_VariadicExpr>(_1ac4ad048_VariadicExpr{._field_Token=_7531_token, ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr)}), &__jule_any_type78);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1b483c29e:;
			{
				return jule::Any(_1ad2723e4_buildIdentExpr(&(_7531_token)), &__jule_any_type51);;
			}
		}
		_match_end_1b483c0e5:;
	};
	_1ad266493_pushErr(_self_, _7531_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ac4ac3cc_IdentExpr> _1ad26795b_buildBindIdent(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _9235_tokens) {
	if (((*((*(_9235_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9235_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1ad266493_pushErr(_self_, (*(_9235_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4912c3_Token> _1007_token = (*(_9235_tokens))[2LL];;
	if (((*(_1007_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad266493_pushErr(_self_, (*(_9235_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4ac3cc_IdentExpr> _1067_expr = _1ad2723e4_buildIdentExpr(&(_1007_token));;
	(*(_1067_expr))._field_Binded=true;
	return _1067_expr;;
}



inline jule::Ptr<_1ac4acb6e_UnaryExpr> _1ad267c9c_buildUnary(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _11130_tokens) {
	jule::Ptr<_1ac4912c3_Token> _1127_op = _11130_tokens[0LL];;
	if ((_11130_tokens.len() == 1LL)) {
		_1ad266493_pushErr(_self_, _1127_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1ac491a10_IsUnaryOp((*(_1127_op))._field_Id)))) {
		_1ad266493_pushErr(_self_, _1127_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_1127_op.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(_11130_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1ac4acb6e_UnaryExpr>(_1ac4acb6e_UnaryExpr{._field_Op=_1127_op, ._field_Expr=_1ad27103b_buildFromTokens(_self_, _11130_tokens)});;
}



inline jule::Ptr<_1ac4adbc5_SubIdentExpr> _1ad2680dd_buildObjSubIdent(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _13236_tokens) {
	jule::I64 _1337_i = (_13236_tokens.len() - 1LL);;
	jule::Ptr<_1ac4912c3_Token> _1347_identToken = _13236_tokens[_1337_i];;
	(_1337_i)--;
	(_13236_tokens).mut_slice(0LL, _1337_i);;
	if ((_13236_tokens.len() == 0LL)) {
		_1ad266493_pushErr(_self_, _1347_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac4adbc5_SubIdentExpr>(_1ac4adbc5_SubIdentExpr{._field_Expr=_1ad27103b_buildFromTokens(_self_, _13236_tokens), ._field_Ident=_1347_identToken});;
}



inline jule::Ptr<_1ac4ad7eb_NsSelectionExpr> _1ad26842e_buildNsSubIdent(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _14736_tokens) {
	jule::Ptr<_1ac4ad7eb_NsSelectionExpr> _1487_ns = jule::new_ptr<_1ac4ad7eb_NsSelectionExpr>(_1ac4ad7eb_NsSelectionExpr{._field_Ns=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr), ._field_Ident=jule::Ptr<_1ac4912c3_Token>(nullptr)});;
	if ((((*(_14736_tokens)).len() == 3LL) && ((*((*(_14736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_1487_ns.alloc)._field_Ns=(*(_14736_tokens)).slice(0LL, 1LL);
		(*_1487_ns.alloc)._field_Ident=(*(_14736_tokens))[2LL];
	} else {
		{
			auto expr = _14736_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b484e107:;
			if (it != expr_end) {
				jule::I64 _1549_i = it - expr->begin();
				jule::Ptr<_1ac4912c3_Token> _15416_token = *it;
				{
					if (((_1549_i & 1LL) == 0LL)) {
						if (((*(_15416_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1ad266493_pushErr(_self_, _15416_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
						};
						(*_1487_ns.alloc)._field_Ns=jule::append((*_1487_ns.alloc)._field_Ns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4912c3_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15416_token; __jule_collection; }));
					} else if (((*(_15416_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1ad266493_pushErr(_self_, _15416_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b484e107:;
				++it;
				_1549_i++;
				goto _iter_begin_1b484e107;
			}
			_iter_end_1b484e107:;
		};
		(*_1487_ns.alloc)._field_Ident=(*_1487_ns.alloc)._field_Ns[((*_1487_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_1487_ns))._field_Ns).mut_slice(0LL, ((*(_1487_ns))._field_Ns.len() - 1LL));;
	};
	return _1487_ns;;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad268770_buildType(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _17230_tokens) {
	jule::I64 _1737_i = 0LL;;
	jule::Ptr<_1ac4a677d_TypeDecl> _1747_t;
	jule::Bool _17410_ok;
	({
		__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType((*(_self_))._field_p, _17230_tokens, (&(_1737_i)), false);
		_1747_t = __jule_assign_result.__jule_result_arg0;
		_17410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17410_ok))) {
		_1ad266493_pushErr(_self_, (*(_17230_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1737_i < (*(_17230_tokens)).len())) {
		_1ad266493_pushErr(_self_, (*(_17230_tokens))[_1737_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1747_t;;
}



inline jule::Any _1ad268ab1_buildSubIdent(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _18634_tokens) {
	jule::I64 _1873_i = ((*(_18634_tokens)).len() - 2LL);;
	jule::Ptr<_1ac4912c3_Token> _1883_token = (*(_18634_tokens))[_1873_i];;
	{
		auto &_match_expr{ (*(_1883_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1b4857709:;
			{
				return jule::Any(_1ad2680dd_buildObjSubIdent(_self_, (*(_18634_tokens))), &__jule_any_type88);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b4857d36:;
			{
				return jule::Any(_1ad26842e_buildNsSubIdent(_self_, _18634_tokens), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b4857d9c:;
			{
				return jule::Any(_1ad268770_buildType(_self_, _18634_tokens), &__jule_any_type91);;
			}
		}
		_match_end_1b4857c15:;
	};
	if (_1ad272a87_isAnonFnHead(_18634_tokens)) {
		return jule::Any(_1ad268770_buildType(_self_, _18634_tokens), &__jule_any_type91);;
	};
	_1ad266493_pushErr(_self_, _1883_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ac4ad048_VariadicExpr> _1ad268e02_buildVariadic(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _20833_tokens) {
	jule::Ptr<_1ac4912c3_Token> _2097_token = _20833_tokens[(_20833_tokens.len() - 1LL)];;
	(_20833_tokens).mut_slice(0LL, (_20833_tokens.len() - 1LL));;
	return jule::new_ptr<_1ac4ad048_VariadicExpr>(_1ac4ad048_VariadicExpr{._field_Token=_2097_token, ._field_Expr=_1ad27103b_buildFromTokens(_self_, _20833_tokens)});;
}



inline jule::Ptr<_1ac4aad7b_RangeExpr> _1ad269243_buildBetweenParentheses(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _21743_tokens) {
	if ((_21743_tokens.len() == 2LL)) {
		_1ad266493_pushErr(_self_, _21743_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21743_tokens).mut_slice(1LL, (_21743_tokens.len() - 1LL));;
	return jule::new_ptr<_1ac4aad7b_RangeExpr>(_1ac4aad7b_RangeExpr{._field_Expr=_1ad27103b_buildFromTokens(_self_, _21743_tokens)});;
}



inline jule::Ptr<_1ac4ad422_CastExpr> _1ad269584_tryBuildCast(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _22933_tokens) {
	jule::I64 _2307_rangeN = 0LL;;
	{
		auto expr = _22933_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b485d930:;
		if (it != expr_end) {
			jule::I64 _2317_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> _23110_token = *it;
			{
				{
					auto &_match_expr{ (*(_23110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b485e2c1:;
						{
							(_2307_rangeN)++;
							goto _iter_next_1b485d930;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b485e6ab:;
						{
							(_2307_rangeN)--;
						}
					}
					_match_end_1b485e5ac:;
				};
				if ((_2307_rangeN > 0LL)) {
					goto _iter_next_1b485d930;
				} else if (((_2317_i + 1LL) == (*(_22933_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1ac4912c3_Token>> _2508_typeTokens = (*(_22933_tokens)).slice(0LL, (_2317_i + 1LL));;
				jule::Slice<jule::Ptr<_1ac4912c3_Token>> _2518_exprTokens = (*(_22933_tokens)).slice((_2317_i + 1LL));;
				if ((_2518_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1ac4912c3_Token> _2584_tok = _2518_exprTokens[0LL];;
				if (((*(_2584_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1ac4ad422_CastExpr> _2638_cast = jule::new_ptr<_1ac4ad422_CastExpr>(_1ac4ad422_CastExpr{._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
				if ((_2518_exprTokens.len() == 2LL)) {
					_1ad266493_pushErr(_self_, _2518_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2508_typeTokens.len() == 2LL)) {
					_1ad266493_pushErr(_self_, _2508_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2508_typeTokens).mut_slice(1LL, (_2508_typeTokens.len() - 1LL));;
					jule::I64 _2779_typeIndex = 0LL;;
					jule::Ptr<_1ac4a677d_TypeDecl> _2789_t;
					jule::Bool _27812_ok;
					({
						__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType((*(_self_))._field_p, &(_2508_typeTokens), (&(_2779_typeIndex)), true);
						_2789_t = __jule_assign_result.__jule_result_arg0;
						_27812_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27812_ok && (_2779_typeIndex < _2508_typeTokens.len()))) {
						_1ad266493_pushErr(_self_, _2508_typeTokens[_2779_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_27812_ok))) {
						return _2638_cast;;
					};
					(*(_2638_cast))._field_Kind=_2789_t;
					if ((_2518_exprTokens.len() > 2LL)) {
						jule::I64 _28810_j = 0LL;;
						_1ad274e85_range(&(_28810_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2518_exprTokens));
						if ((_28810_j < _2518_exprTokens.len())) {
							return nullptr;;
						};
						(_2518_exprTokens).mut_slice(0LL, _28810_j);;
						(*_2638_cast.alloc)._field_Expr=_1ad27103b_buildFromTokens(_self_, _2518_exprTokens);
					};
				};
				return _2638_cast;;
			}
			_iter_next_1b485d930:;
			++it;
			_2317_i++;
			goto _iter_begin_1b485d930;
		}
		_iter_end_1b485d930:;
	};
	return nullptr;;
}



inline void _1ad2699a2_pushArg(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _30347_tokens, jule::Ptr<_1ac4912c3_Token> _30365_err_token) {
	if ((_30347_tokens.len() == 0LL)) {
		_1ad266493_pushErr(_self_, _30365_err_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> &__jule_push_dest = (*(_30328_args)); __jule_push_dest.push(_1ad27103b_buildFromTokens(_self_, _30347_tokens)); };
}



inline jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _1ad269ce3_buildArgs(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _31229_tokens) {
	if ((_31229_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _31811_args = nullptr;;
	jule::I64 _3197_last = 0LL;;
	jule::I64 _3207_rangeN = 0LL;;
	(_31229_tokens).mut_slice(1LL, (_31229_tokens.len() - 1LL));;
	{
		auto expr = &(_31229_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b486c345:;
		if (it != expr_end) {
			jule::I64 _3227_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> _32210_token = *it;
			{
				{
					auto &_match_expr{ (*(_32210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b486d027:;
						{
							(_3207_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b486d412:;
						{
							(_3207_rangeN)--;
						}
					}
					_match_end_1b486d313:;
				};
				if (((_3207_rangeN > 0LL) || ((*(_32210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1b486c345;
				};
				_1ad2699a2_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last, _3227_i), _32210_token);
				_3197_last=(_3227_i + 1LL);
			}
			_iter_next_1b486c345:;
			++it;
			_3227_i++;
			goto _iter_begin_1b486c345;
		}
		_iter_end_1b486c345:;
	};
	if ((_3197_last < _31229_tokens.len())) {
		if ((_3197_last == 0LL)) {
			if ((_31229_tokens.len() > 0LL)) {
				_1ad2699a2_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[_3197_last]);
			};
		} else {
			_1ad2699a2_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[(_3197_last - 1LL)]);
		};
	};
	return _31811_args;;
}



inline jule::Ptr<_1ac4ae7db_FnCallExpr> _1ad26a5da_buildFnCall(_1ad265bbd_exprBuilder* _self_, jule::Ptr<_1ac4912c3_Token>* _37832_token, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _37873_args) {
	return jule::new_ptr<_1ac4ae7db_FnCallExpr>(_1ac4ae7db_FnCallExpr{._field_Token=(*(_37832_token)), ._field_Expr=_1ad27103b_buildFromTokens(_self_, (*(_37852_expr))), ._field_Args=_1ad269ce3_buildArgs(_self_, (*(_37873_args))), ._field_Exception=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1ad26a92b_buildParenthesesRange(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _38642_tokens) {
	jule::Ptr<_1ac4912c3_Token> _3877_token = (*(_38642_tokens))[0LL];;
	if (((*(_3877_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1ac4ad422_CastExpr> _3898_expr = _1ad269584_tryBuildCast(_self_, _38642_tokens);;
		if ((_3898_expr != nullptr)) {
			return jule::Any(_3898_expr, &__jule_any_type108);;
		};
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _3947_exprTokens;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _39423_argsTokens;
	({
		__jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token __jule_assign_result = _1ad27524e_rangeLast(_38642_tokens);
		_3947_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39423_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3947_exprTokens.len() == 0LL)) {
		return jule::Any(_1ad269243_buildBetweenParentheses(_self_, _39423_argsTokens), &__jule_any_type103);;
	};
	if (_1ad272a87_isAnonFnHead(&(_3947_exprTokens))) {
		return jule::Any(_1ad268770_buildType(_self_, _38642_tokens), &__jule_any_type91);;
	};
	return jule::Any(_1ad26a5da_buildFnCall(_self_, &(_3877_token), &(_3947_exprTokens), &(_39423_argsTokens)), &__jule_any_type84);;
}



inline jule::Ptr<_1ac4abe26_UnsafeExpr> _1ad26ac6c_buildUnsafeExpr(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _40835_tokens) {
	jule::Ptr<_1ac4912c3_Token> _4097_token = _40835_tokens[0LL];;
	(_40835_tokens).mut_slice(1LL);;
	jule::I64 _4117_i = 0LL;;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _4127_rangeTokens = _1ad274e85_range(&(_4117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40835_tokens));;
	if ((_4127_rangeTokens.len() == 0LL)) {
		_1ad266493_pushErr(_self_, _40835_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac4abe26_UnsafeExpr>(_1ac4abe26_UnsafeExpr{._field_Token=_4097_token, ._field_Expr=_1ad27103b_buildFromTokens(_self_, _4127_rangeTokens)});;
}



inline jule::Ptr<_1ac4b843d_FnDecl> _1ad26b0ad_buildAnonFn(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _42332_tokens) {
	jule::Ptr<_1ac4b843d_FnDecl> _4247_f = _1ad27d455_buildFn((*(_self_))._field_p, _42332_tokens, false, false);;
	if ((!(_1ac4b87d4_IsAnon(_4247_f.ptr())))) {
		_1ad266493_pushErr(_self_, (*_4247_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4247_f;;
}



inline jule::Any _1ad26b3ee_buildUnsafe(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _43232_tokens) {
	{
		auto &_match_expr{ (*((*(_43232_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b4880e5d:;
			{
				return jule::Any(_1ad26b0ad_buildAnonFn(_self_, _43232_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1b4880303:;
			{
				return jule::Any(_1ad26ac6c_buildUnsafeExpr(_self_, (*(_43232_tokens))), &__jule_any_type105);;
			}
		}
		_match_end_1b4880743:;
	};
}



inline void _1ad26b81c_pushRangeLitPart(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _44236_part, jule::Ptr<_1ac4912c3_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>>* _44328_parts) {
	if ((_44236_part.len() == 0LL)) {
		_1ad266493_pushErr(_self_, _4433_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> &__jule_push_dest = (*(_44328_parts)); __jule_push_dest.push(_44236_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1ad26bb5d_getBraceRangeLitExprParts(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _45345_tokens) {
	if ((_45345_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _45911_parts = nullptr;;
	jule::I64 _4617_last = 0LL;;
	jule::I64 _4627_rangeN = 0LL;;
	(_45345_tokens).mut_slice(1LL, (_45345_tokens.len() - 1LL));;
	{
		auto expr = &(_45345_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b48846e2:;
		if (it != expr_end) {
			jule::I64 _4647_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> _46410_token = *it;
			{
				{
					auto &_match_expr{ (*(_46410_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b48853c4:;
						{
							(_4627_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b48857ae:;
						{
							(_4627_rangeN)--;
						}
					}
					_match_end_1b48856b0:;
				};
				if (((_4627_rangeN > 0LL) || ((*(_46410_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1b48846e2;
				};
				_1ad26b81c_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last, _4647_i), _46410_token, &(_45911_parts));
				_4617_last=(_4647_i + 1LL);
			}
			_iter_next_1b48846e2:;
			++it;
			_4647_i++;
			goto _iter_begin_1b48846e2;
		}
		_iter_end_1b48846e2:;
	};
	if ((_4617_last < _45345_tokens.len())) {
		if ((_4617_last == 0LL)) {
			if ((_45345_tokens.len() > 0LL)) {
				_1ad26b81c_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[_4617_last], &(_45911_parts));
			};
		} else {
			_1ad26b81c_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[(_4617_last - 1LL)], &(_45911_parts));
		};
	};
	return _45911_parts;;
}



inline jule::Ptr<_1ac4b02d1_FieldExprPair> _1ad26be9e_buildFieldExprPair(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _49538_tokens) {
	if (((_49538_tokens.len() - 2LL) == 0LL)) {
		_1ad266493_pushErr(_self_, _49538_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4b02d1_FieldExprPair> _5007_pair = jule::new_ptr<_1ac4b02d1_FieldExprPair>(_1ac4b02d1_FieldExprPair{._field_Field=_49538_tokens[0LL], ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	(_49538_tokens).mut_slice(2LL);;
	(*(_5007_pair))._field_Expr=_1ad27103b_buildFromTokens(_self_, _49538_tokens);
	return _5007_pair;;
}



inline jule::Ptr<_1ac4aaab2_Expr> _1ad26c2e0_buildStructLitExpr(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _50839_tokens) {
	jule::Ptr<_1ac4912c3_Token> _5097_token = (*(_50839_tokens))[0LL];;
	if ((((*(_5097_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_50839_tokens)).len() > 1LL))) {
		_5097_token=(*(_50839_tokens))[1LL];
		if (((*_5097_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1ac4aaab2_Expr>(_1ac4aaab2_Expr{._field_Token=_5097_token, ._field_End=(*(_50839_tokens))[((*(_50839_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1ad26be9e_buildFieldExprPair(_self_, (*(_50839_tokens))), &__jule_any_type80)});;
		};
	};
	return _1ad27103b_buildFromTokens(_self_, (*(_50839_tokens)));;
}



inline jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _1ad26c631_buildStructLitExprs(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _52340_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _5247_parts = _1ad26bb5d_getBraceRangeLitExprParts(_self_, (*(_52340_tokens)));;
	if ((_5247_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> _5297_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>::alloc(0LL, _5247_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4aaab2_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5247_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b488e0c0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _53015_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac4aaab2_Expr>> &__jule_push_dest = _5297_pairs; __jule_push_dest.push(_1ad26c2e0_buildStructLitExpr(_self_, &(_53015_part))); };
			}
			_iter_next_1b488e0c0:;
			++it;
			goto _iter_begin_1b488e0c0;
		}
		_iter_end_1b488e0c0:;
	};
	return _5297_pairs;;
}



inline jule::Ptr<_1ac4b0b0b_StructLit> _1ad26c972_buildTypedStructLiteral(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _53643_tokens) {
	jule::I64 _5377_i = 0LL;;
	jule::Ptr<_1ac4a677d_TypeDecl> _5387_t;
	jule::Bool _53810_ok;
	({
		__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType((*(_self_))._field_p, &(_53643_tokens), (&(_5377_i)), true);
		_5387_t = __jule_assign_result.__jule_result_arg0;
		_53810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53810_ok))) {
		return nullptr;;
	} else if ((_5377_i >= _53643_tokens.len())) {
		_1ad266493_pushErr(_self_, _53643_tokens[_5377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53643_tokens).mut_slice(_5377_i);;
	jule::Ptr<_1ac4912c3_Token> _5473_token = _53643_tokens[0LL];;
	if (((*(_5473_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1ad266493_pushErr(_self_, _5473_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac4b0b0b_StructLit>(_1ac4b0b0b_StructLit{._field_End=_53643_tokens[(_53643_tokens.len() - 1LL)], ._field_Kind=_5387_t, ._field_Exprs=_1ad26c631_buildStructLitExprs(_self_, &(_53643_tokens))});;
}



inline jule::Ptr<_1ac4aaab2_Expr> _1ad26ccb3_buildBraceLitPart(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _56038_tokens) {
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _5617_l;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _56114_r;
	({
		__jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token __jule_assign_result = _1ad271d61_splitDelim(_56038_tokens, static_cast<jule::U64>(8LLU));
		_5617_l = __jule_assign_result.__jule_result_arg0;
		_56114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5617_l != nullptr)) {
		return jule::new_ptr<_1ac4aaab2_Expr>(_1ac4aaab2_Expr{._field_Token=(*(_56038_tokens))[0LL], ._field_End=(*(_56038_tokens))[((*(_56038_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1ac4b18dc_KeyValPair>(_1ac4b18dc_KeyValPair{._field_Key=_1ad27103b_buildFromTokens(_self_, _5617_l), ._field_Val=_1ad27103b_buildFromTokens(_self_, _56114_r), ._field_Colon=(*(_56038_tokens))[_5617_l.len()]}), &__jule_any_type81)});;
	};
	return _1ad27103b_buildFromTokens(_self_, (*(_56038_tokens)));;
}



inline jule::Ptr<_1ac4b10b2_BraceLit> _1ad26d104_buildBraceLit(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _57734_tokens) {
	jule::Ptr<_1ac4b10b2_BraceLit> _5787_lit = jule::new_ptr<_1ac4b10b2_BraceLit>(_1ac4b10b2_BraceLit{._field_Token=(*(_57734_tokens))[0LL], ._field_End=(*(_57734_tokens))[((*(_57734_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _5837_parts = _1ad26bb5d_getBraceRangeLitExprParts(_self_, (*(_57734_tokens)));;
	if ((_5837_parts == nullptr)) {
		return _5787_lit;;
	};
	(*(_5787_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>::alloc(0LL, _5837_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4aaab2_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5837_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4898cde:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _58915_part = *it;
			{
				(*_5787_lit.alloc)._field_Exprs=jule::append((*_5787_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad26ccb3_buildBraceLitPart(_self_, &(_58915_part)); __jule_collection; }));
			}
			_iter_next_1b4898cde:;
			++it;
			goto _iter_begin_1b4898cde;
		}
		_iter_end_1b4898cde:;
	};
	return _5787_lit;;
}



inline jule::Any _1ad26d445_buildBraceRange(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _59636_tokens) {
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _5977_exprTokens;
	jule::I64 _59719_rangeN;
	({
		__jule_tuple_sx_1ac4912c3_Token__jule_tuple_int __jule_assign_result = _1ad2726ad_getRangeExprTokens(_59636_tokens);
		_5977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5977_exprTokens.len() == 0LL)) {
			_case_begin_1b489a73b:;
			{
				return jule::Any(_1ad26d104_buildBraceLit(_self_, _59636_tokens), &__jule_any_type110);;
			}
		}
		else if ((_59719_rangeN > 0LL)) {
			_case_begin_1b489a7c4:;
			{
				_1ad266493_pushErr(_self_, (*(_59636_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b489a6c5:;
	};
	jule::Ptr<_1ac4912c3_Token> _6083_elseToken = _5977_exprTokens[(_5977_exprTokens.len() - 1LL)];;
	if (((*(_5977_exprTokens[(_5977_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5977_exprTokens).mut_slice(0LL, (_5977_exprTokens.len() - 1LL));;
		jule::Any _6118_d = _1ad2708a9_build(_self_, &(_5977_exprTokens));;
		if ((_6118_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _6118_d };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1b489d61d:;
				{
					((*(_59636_tokens))).mut_slice((_5977_exprTokens.len() + 1LL));;
					jule::I64 _6189_i = 0LL;;
					jule::Slice<jule::Ptr<_1ac4912c3_Token>> _6199_rangeTokens = _1ad274e85_range(&(_6189_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _59636_tokens);;
					jule::Ptr<_1ac4ae7db_FnCallExpr> _6209_model = _6118_d.unsafe_cast_ptr<_1ac4ae7db_FnCallExpr>();;
					if (_1ac4aee29_Ignored(_6209_model.ptr())) {
						_1ad266493_pushErr(_self_, _6083_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*_6209_model.alloc)._field_Exception=_1ad278461_buildScope((*(_self_))._field_p, &(_6199_rangeTokens), (*(_59636_tokens))[(_6189_i - 1LL)]);
					return _6118_d;;
				}
			}
			else {
				_case_begin_1b489d277:;
				{
					_1ad266493_pushErr(_self_, _5977_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1b489d6b7:;
		};
	};
	{
		auto &_match_expr{ (*(_5977_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b48a2e6e:;
			{
				return _1ad26b3ee_buildUnsafe(_self_, _59636_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b48a3722:;
			{
				return jule::Any(_1ad26b0ad_buildAnonFn(_self_, _59636_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b48a3788:;
			{
				return jule::Any(_1ad26c972_buildTypedStructLiteral(_self_, (*(_59636_tokens))), &__jule_any_type109);;
			}
		}
		else {
			_case_begin_1b48a107c:;
			{
				_1ad266493_pushErr(_self_, _5977_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b48a2a62:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1ad26d786_getEnumerableParts(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _64838_tokens) {
	(_64838_tokens).mut_slice(1LL, (_64838_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _6507_parts;
	jule::Slice<_1b08b6838_Log> _65014_errors;
	({
		__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(&(_64838_tokens), static_cast<jule::U64>(5LLU), true);
		_6507_parts = __jule_assign_result.__jule_result_arg0;
		_65014_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65014_errors);
	return _6507_parts;;
}



inline jule::Ptr<_1ac4b2118_SliceExpr> _1ad26dac7_buildSlice(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _65530_tokens) {
	jule::Ptr<_1ac4b2118_SliceExpr> _6567_slc = jule::new_ptr<_1ac4b2118_SliceExpr>(_1ac4b2118_SliceExpr{._field_Token=_65530_tokens[0LL], ._field_End=_65530_tokens[(_65530_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _6617_parts = _1ad26d786_getEnumerableParts(_self_, _65530_tokens);;
	if ((_6617_parts.len() == 0LL)) {
		return _6567_slc;;
	};
	(*(_6567_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>::alloc(0LL, _6617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4aaab2_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b48a8617:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _66715_p = *it;
			{
				if ((_66715_p.len() == 0LL)) {
					goto _iter_next_1b48a8617;
				};
				(*_6567_slc.alloc)._field_Exprs=jule::append((*_6567_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4aaab2_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad27103b_buildFromTokens(_self_, _66715_p); __jule_collection; }));
			}
			_iter_next_1b48a8617:;
			++it;
			goto _iter_begin_1b48a8617;
		}
		_iter_end_1b48a8617:;
	};
	return _6567_slc;;
}



inline jule::Ptr<_1ac4b2a75_IndexingExpr> _1ad26e07d_buildIndexing(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _6787_tokens, jule::Ptr<_1ac4912c3_Token> _67829_errorToken) {
	jule::Ptr<_1ac4912c3_Token> _6797_end = _6787_tokens[(_6787_tokens.len() - 1LL)];;
	(_6787_tokens).mut_slice(1LL, (_6787_tokens.len() - 1LL));;
	if ((_6787_tokens.len() == 0LL)) {
		_1ad266493_pushErr(_self_, _67829_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4aaab2_Expr> _6857_expr = _1ad27103b_buildFromTokens(_self_, _67733_exprTokens);;
	if ((_6857_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac4aaab2_Expr> _6897_index = _1ad27103b_buildFromTokens(_self_, _6787_tokens);;
	if ((_6897_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac4b2a75_IndexingExpr>(_1ac4b2a75_IndexingExpr{._field_Token=_67829_errorToken, ._field_End=_6797_end, ._field_Expr=_6857_expr, ._field_Index=_6897_index});;
}



inline jule::Ptr<_1ac4b31d5_SlicingExpr> _1ad26e699_buildSlicing(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _70160_start, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _7028_to, jule::Ptr<_1ac4912c3_Token>* _70227_errorToken, jule::Ptr<_1ac4912c3_Token> _70251_end) {
	jule::Ptr<_1ac4b31d5_SlicingExpr> _7037_slc = jule::new_ptr<_1ac4b31d5_SlicingExpr>(_1ac4b31d5_SlicingExpr{._field_Token=(*(_70227_errorToken)), ._field_End=_70251_end, ._field_Expr=_1ad27103b_buildFromTokens(_self_, (*(_70133_exprTokens))), ._field_Start=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_To=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	if (((*(_70160_start)).len() > 0LL)) {
		(*(_7037_slc))._field_Start=_1ad27103b_buildFromTokens(_self_, (*(_70160_start)));
	};
	if (((*(_7028_to)).len() > 0LL)) {
		(*_7037_slc.alloc)._field_To=_1ad27103b_buildFromTokens(_self_, (*(_7028_to)));
	};
	return _7037_slc;;
}



inline jule::Any _1ad26e9da_buildBracketRange(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _71737_tokens) {
	jule::Ptr<_1ac4912c3_Token> _7187_errorToken = _71737_tokens[0LL];;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _7197_exprTokens;
	jule::I64 _71919_rangeN;
	({
		__jule_tuple_sx_1ac4912c3_Token__jule_tuple_int __jule_assign_result = _1ad2726ad_getRangeExprTokens(&(_71737_tokens));
		_7197_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71919_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_7197_exprTokens.len() == 0LL)) {
		return jule::Any(_1ad26dac7_buildSlice(_self_, _71737_tokens), &__jule_any_type96);;
	} else if ((_71919_rangeN > 0LL)) {
		_1ad266493_pushErr(_self_, _7187_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71737_tokens).mut_slice(_7197_exprTokens.len());;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _7347_splitTokens = _71737_tokens.slice(1LL, (_71737_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _7357_start;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _73518_to;
	({
		__jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token __jule_assign_result = _1ad271d61_splitDelim(&(_7347_splitTokens), static_cast<jule::U64>(8LLU));
		_7357_start = __jule_assign_result.__jule_result_arg0;
		_73518_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7357_start != nullptr) || (_73518_to != nullptr))) {
		return jule::Any(_1ad26e699_buildSlicing(_self_, &(_7197_exprTokens), &(_7357_start), &(_73518_to), &(_7187_errorToken), _71737_tokens[(_71737_tokens.len() - 1LL)]), &__jule_any_type107);;
	};
	return jule::Any(_1ad26e07d_buildIndexing(_self_, _7197_exprTokens, _71737_tokens, _7187_errorToken), &__jule_any_type106);;
}



inline jule::Any _1ad26ed2b_buildExclRight(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _74235_tokens) {
	jule::Ptr<_1ac4912c3_Token> _7433_token = (*(_74235_tokens))[((*(_74235_tokens)).len() - 1LL)];;
	((*(_74235_tokens))).mut_slice(0LL, ((*(_74235_tokens)).len() - 1LL));;
	jule::Any _7457_d = _1ad2708a9_build(_self_, _74235_tokens);;
	if ((_7457_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7457_d };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b48b61e6:;
			{
				(*(_7457_d.unsafe_cast_ptr<_1ac4ae7db_FnCallExpr>()))._field_Exception=jule::new_ptr<_1ac4b679e_ScopeTree>(_1ac4b679e_ScopeTree{._field_Parent=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1ac4b613e_Stmt>(nullptr), ._field_End=jule::Ptr<_1ac4912c3_Token>(nullptr)});
				return _7457_d;;
			}
		}
		_match_end_1b48b65d1:;
	};
	_1ad266493_pushErr(_self_, _7433_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ad27016c_buildData(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _76030_tokens) {
	{
		auto _match_expr{ (*(_76030_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b48b7cec:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b48b7d63:;
			{
				return _1ad26761a_buildSingle(_self_, (*(_76030_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b48b7dc9:;
			{
				if (((*((*(_76030_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1ad26795b_buildBindIdent(_self_, _76030_tokens), &__jule_any_type51);;
				};
			}
		}
		_match_end_1b48b7bba:;
	};
	jule::Ptr<_1ac4912c3_Token> _7727_token = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
	if (((*(_7727_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1ad268e02_buildVariadic(_self_, (*(_76030_tokens))), &__jule_any_type78);;
	};
	_7727_token=(*(_76030_tokens))[0LL];
	if (_1ac491a10_IsUnaryOp((*_7727_token.alloc)._field_Id)) {
		if (((*(_76030_tokens)).len() > 1LL)) {
			_7727_token=(*(_76030_tokens))[1LL];
			if (((*_7727_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1ad268770_buildType(_self_, _76030_tokens), &__jule_any_type91);;
			};
		};
		return jule::Any(_1ad267c9c_buildUnary(_self_, (*(_76030_tokens))), &__jule_any_type90);;
	};
	if (((*(_76030_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7727_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1b48bc692:;
				{
					if (((*(_76030_tokens)).len() > 3LL)) {
						jule::Ptr<_1ac4912c3_Token> _7986_t = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
						if (((*(_7986_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1b48bc96c;
						};
					};
					jule::Ptr<_1ac4912c3_Token> _8045_next = (*(_76030_tokens))[1LL];;
					if (((*(_8045_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1b48bc96c;
					};
					return jule::Any(_1ad268770_buildType(_self_, _76030_tokens), &__jule_any_type91);;
				}
			}
			_match_end_1b48bc96c:;
		};
	};
	_7727_token=(*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7727_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b48c0b6d:;
			{
				return _1ad268ab1_buildSubIdent(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1b48c0bd4:;
			{
				return _1ad26ed2b_buildExclRight(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1b48c0c4a:;
			{
				return _1ad26a92b_buildParenthesesRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b48c0cb1:;
			{
				return _1ad26d445_buildBraceRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b48c0d27:;
			{
				return _1ad26e9da_buildBracketRange(_self_, (*(_76030_tokens)));;
			}
		}
		_match_end_1b48c0b07:;
	};
	_1ad266493_pushErr(_self_, _7727_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ad270568_buildBinary(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _82932_tokens, jule::I64 _82950_i) {
	jule::Ptr<_1ac4912c3_Token> _8307_op = (*(_82932_tokens))[_82950_i];;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _8317_leftTokens = (*(_82932_tokens)).slice(0LL, _82950_i);;
	if ((_1ad2713c1_isTypeOp(&((*(_8307_op))._field_Id)) && _1ad2716ce_isTypeRange(&(_8317_leftTokens)))) {
		return jule::Any(_1ad268770_buildType(_self_, _82932_tokens), &__jule_any_type91);;
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _8367_rightTokens = (*(_82932_tokens)).slice((_82950_i + 1LL));;
	if ((_8317_leftTokens.len() == 0LL)) {
		_1ad266493_pushErr(_self_, (*(_82932_tokens))[_82950_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8367_rightTokens.len() == 0LL)) {
		_1ad266493_pushErr(_self_, (*(_82932_tokens))[_82950_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad266806_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1ac4ae17b_BinaryExpr>(_1ac4ae17b_BinaryExpr{._field_Left=_1ad27103b_buildFromTokens(_self_, _8317_leftTokens), ._field_Right=_1ad27103b_buildFromTokens(_self_, _8367_rightTokens), ._field_Op=_8307_op}), &__jule_any_type111);;
}



inline jule::Any _1ad2708a9_build(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _85426_tokens) {
	if (((*((*(_85426_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1ad268770_buildType(_self_, _85426_tokens), &__jule_any_type91);;
	};
	jule::I64 _8583_i = _1ad27212a_findLowestPrecOp(_85426_tokens);;
	if ((_8583_i == -1LL)) {
		return _1ad27016c_buildData(_self_, _85426_tokens);;
	};
	return _1ad270568_buildBinary(_self_, _85426_tokens, _8583_i);;
}



inline jule::Any _1ad270bea_buildKind(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _86530_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _8667_parts;
	jule::Slice<_1b08b6838_Log> _86614_errors;
	({
		__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(_86530_tokens, static_cast<jule::U64>(5LLU), true);
		_8667_parts = __jule_assign_result.__jule_result_arg0;
		_86614_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86614_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86614_errors);
		return nullptr;;
	} else if ((_8667_parts.len() > 1LL)) {
		return jule::Any(_1ad266b47_buildTuple(_self_, &(_8667_parts)), &__jule_any_type82);;
	};
	return _1ad2708a9_build(_self_, _86530_tokens);;
}



inline jule::Ptr<_1ac4aaab2_Expr> _1ad27103b_buildFromTokens(_1ad265bbd_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _87635_tokens) {
	if ((_87635_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8807_kind = _1ad270bea_buildKind(_self_, &(_87635_tokens));;
	if ((_8807_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac4aaab2_Expr>(_1ac4aaab2_Expr{._field_Token=_87635_tokens[0LL], ._field_End=_87635_tokens[(_87635_tokens.len() - 1LL)], ._field_Kind=_8807_kind});;
}











inline void _1ad276b13_stop(_1ad2767d3_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1ad276d99_stopped(_1ad2767d3_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1ad2772b7_pushErr(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4912c3_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args) {
	{ jule::Slice<_1b08b6838_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ad275dba_compilerErr(&(_20823_token), &(_20838_fmt), _20851_args)); };
}



inline void _1ad27762a_pushSuggestion(_1ad2767d3_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args) {
	{
		_1ad276261_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21330_fmt, _21343_args);
	};
}



inline jule::Ptr<_1ac4aaab2_Expr> _1ad27796b_buildExpr(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _21731_tokens) {
	return _1ad27103b_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21731_tokens)));;
}



inline jule::Ptr<_1ac4a5b9a_Directive> _1ad277cac_buildDirective(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _22134_tokens) {
	if ((_22134_tokens.len() == 1LL)) {
		_1ad2772b7_pushErr(_self_, _22134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22134_tokens[1LL]))._field_Column != ((*(_22134_tokens[0LL]))._field_Column + 1LL))) {
		_1ad2772b7_pushErr(_self_, _22134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac4a5b9a_Directive>(_1ac4a5b9a_Directive{._field_Tag=_22134_tokens[1LL], ._field_Args=_22134_tokens.slice(2LL)});;
}



inline void _1ad278065_pushDirective(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4a5b9a_Directive> _23633_d) {
	if ((_23633_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b48ed2d8:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a5b9a_Directive> _24110_pd = *it;
			{
				if (((*((*(_23633_d))._field_Tag))._field_Kind == (*(*(_24110_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b48ed2d8:;
			++it;
			goto _iter_begin_1b48ed2d8;
		}
		_iter_end_1b48ed2d8:;
	};
	{ jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23633_d); };
}



inline jule::Ptr<_1ac4b679e_ScopeTree> _1ad278461_buildScope(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _24932_tokens, jule::Ptr<_1ac4912c3_Token> _24954_end) {
	jule::Ptr<_1ac4b679e_ScopeTree> _2507_s = _1ad256670_newScope();;
	(*(_2507_s))._field_End=_24954_end;
	_1ad258254_scopeParser _2527_sp = _1ad258254_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1ad2578b3_stmt>>(nullptr), ._field_pos=0};;
	_1ad265140_build(&_2527_sp, _24932_tokens, &(_2507_s));
	return _2507_s;;
}



inline __jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool _1ad278917__buildType(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err) {
	__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ad288905_typeBuilder _2617_tb = _1ad288905_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25939_tokens)), ._field_i=_2607_i, ._field_err=_26016_err};;
	__jule_func_result = std::move(_1ad28b919_build(&_2617_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool _1ad278dbd_buildType(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err) {
	__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac4912c3_Token> _2733_token = (*(_27138_tokens))[(*(_2727_i))];;
	jule::Ptr<_1ac4a677d_TypeDecl> _2747_t;
	jule::Bool _27410_ok;
	({
		__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278917__buildType(_self_, _27138_tokens, _2727_i, _27216_err);
		_2747_t = __jule_assign_result.__jule_result_arg0;
		_27410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27216_err && (!(_27410_ok)))) {
		_1ad2772b7_pushErr(_self_, _2733_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2747_t;
	__jule_func_result.__jule_result_arg1 = _27410_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac4bd29a_TypeAliasDecl> _1ad27920e_buildTypeAliasDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _28140_tokens) {
	jule::I64 _2827_i = 1LL;;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1ad2772b7_pushErr(_self_.ptr(), (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4bd29a_TypeAliasDecl> _2877_tad = jule::new_ptr<_1ac4bd29a_TypeAliasDecl>(_1ac4bd29a_TypeAliasDecl{._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_28140_tokens))[1LL], ._field_Ident=(*((*(_28140_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr)});;
	jule::Ptr<_1ac4912c3_Token> _2917_token = (*(_28140_tokens))[_2827_i];;
	if (((*(_2917_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad2772b7_pushErr(_self_, _2917_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1ad2772b7_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	_2917_token=(*(_28140_tokens))[_2827_i];
	if (((*_2917_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1ad2772b7_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1ad2772b7_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	jule::Ptr<_1ac4a677d_TypeDecl> _3127_t;
	jule::Bool _31210_ok;
	({
		__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, _28140_tokens, (&(_2827_i)), true);
		_3127_t = __jule_assign_result.__jule_result_arg0;
		_31210_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2877_tad))._field_Kind=_3127_t;
	if ((_31210_ok && (_2827_i < (*(_28140_tokens)).len()))) {
		_1ad2772b7_pushErr(_self_, (*(_28140_tokens))[_2827_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2877_tad.alloc)._field_Public=_1ac575242_IsPub((*_2877_tad.alloc)._field_Ident);
	return _2877_tad;;
}



inline void _1ad279572_buildVarTypeAndExpr(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4b95e8_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _32159_tokens) {
	jule::I64 _3227_i = 0LL;;
	jule::Ptr<_1ac4912c3_Token> _3237_tok = (*(_32159_tokens))[_3227_i];;
	if (((*(_3237_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_3227_i)++;
		if (((_3227_i >= (*(_32159_tokens)).len()) || ((*((*(_32159_tokens))[_3227_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1ad2772b7_pushErr(_self_.ptr(), _3237_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1ac4a677d_TypeDecl> _3308_t;
		jule::Bool _33011_ok;
		({
			__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, _32159_tokens, (&(_3227_i)), true);
			_3308_t = __jule_assign_result.__jule_result_arg0;
			_33011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33011_ok) {
			(*((*(_32141_v))))._field_Kind=_3308_t;
			if ((_3227_i >= (*(_32159_tokens)).len())) {
				return;;
			};
			_3237_tok=(*(_32159_tokens))[_3227_i];
		};
	};
	if (((*_3237_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1ad2772b7_pushErr(_self_, _3237_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Setter=_3237_tok;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _3467_exprTokens = (*(_32159_tokens)).slice((_3227_i + 1LL));;
	if ((_3467_exprTokens.len() == 0LL)) {
		_1ad2772b7_pushErr(_self_, _3237_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Expr=_1ad27796b_buildExpr(_self_, &(_3467_exprTokens));
}



inline void _1ad2798d5_buildVarCommon(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4b95e8_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _35453_tokens) {
	(*((*(_35436_v))))._field_Token=_35453_tokens[0LL];
	if (((*((*((*(_35436_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad2772b7_pushErr(_self_.ptr(), (*((*(_35436_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35436_v))))._field_Ident=(*(*((*(_35436_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35436_v))))._field_Public=_1ac575242_IsPub((*((*(_35436_v))))._field_Ident);
	(*((*(_35436_v))))._field_Kind=nullptr;
	if ((_35453_tokens.len() > 1LL)) {
		(_35453_tokens).mut_slice(1LL);;
		_1ad279572_buildVarTypeAndExpr(_self_, _35436_v, &(_35453_tokens));
	};
}



inline void _1ad279c48_buildVarBegin(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4b95e8_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _37052_tokens) {
	jule::Ptr<_1ac4912c3_Token> _3713_tok = (*(_37052_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3713_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b45d4d7c:;
			{
				(*((*(_37034_v))))._field_Statically=true;
				goto _case_begin_1b45d4a3b;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b45d4a3b:;
			{
				if (((*(_37052_tokens)).len() == 1LL)) {
					(*(_37052_tokens))=nullptr;
					_1ad2772b7_pushErr(_self_, _3713_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37052_tokens))).mut_slice(1LL);;
				if (((*((*(_37052_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37034_v))))._field_Mutable=true;
					((*(_37052_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b45d4aa2:;
			{
				(*((*(_37034_v))))._field_Constant=true;
				((*(_37052_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1b45d472d:;
			{
				(*(_37052_tokens))=nullptr;
				_1ad2772b7_pushErr(_self_, _3713_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b45d49c5:;
	};
}



inline jule::Ptr<_1ac4b95e8_VarDecl> _1ad27a089_buildVar(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _39829_tokens) {
	jule::Ptr<_1ac4b95e8_VarDecl> _3997_v = jule::new_ptr<_1ac4b95e8_VarDecl>(_1ac4b95e8_VarDecl{._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_Token=_39829_tokens[0LL], ._field_Setter=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	_1ad279c48_buildVarBegin(_self_.ptr(), &(_3997_v), &(_39829_tokens));
	if ((_39829_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39829_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3997_v))._field_Reference=true;
		if ((_39829_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39829_tokens).mut_slice(1LL);;
	};
	_1ad2798d5_buildVarCommon(_self_, &(_3997_v), _39829_tokens);
	return _3997_v;;
}



inline jule::Ptr<_1ac4b3988_GenericDecl> _1ad27a3ca_buildGeneric(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _41734_tokens) {
	jule::Ptr<_1ac4b3988_GenericDecl> _4187_g = jule::new_ptr<_1ac4b3988_GenericDecl>(_1ac4b3988_GenericDecl{._field_Token=(*(_41734_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1ac4b34d2_Constraint>(nullptr)});;
	if (((*((*(_4187_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad2772b7_pushErr(_self_.ptr(), (*_4187_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_4187_g.alloc)._field_Ident=(*(*(_4187_g))._field_Token.alloc)._field_Kind;
	if (((*(_41734_tokens)).len() > 1LL)) {
		if (((*((*(_41734_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1ad2772b7_pushErr(_self_, (*(_41734_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41734_tokens)).len() == 2LL)) {
			_1ad2772b7_pushErr(_self_, (*(_41734_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1ac4912c3_Token>> _4358_constraintTokens = (*(_41734_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _4368_parts;
		jule::Slice<_1b08b6838_Log> _43615_errors;
		({
			__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(&(_4358_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_4368_parts = __jule_assign_result.__jule_result_arg0;
			_43615_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43615_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43615_errors);
			return nullptr;;
		};
		(*_4187_g.alloc)._field_Constraint=jule::new_ptr<_1ac4b34d2_Constraint>(_1ac4b34d2_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>::alloc(0LL, _4368_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4a677d_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_4368_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b45e2ce1:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1ac4912c3_Token>> _44216_part = *it;
				{
					jule::I64 _4439_i = 0LL;;
					jule::Ptr<_1ac4a677d_TypeDecl> _4449_kind;
					({
						__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, &(_44216_part), (&(_4439_i)), true);
						_4449_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_4187_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_4187_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4449_kind; __jule_collection; }));
					if ((_4439_i < _44216_part.len())) {
						_1ad2772b7_pushErr(_self_, _44216_part[_4439_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b45e2ce1:;
				++it;
				goto _iter_begin_1b45e2ce1;
			}
			_iter_end_1b45e2ce1:;
		};
	};
	return _4187_g;;
}



inline jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _1ad27a7c6_buildGenerics(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _45435_tokens, jule::Ptr<_1ac4912c3_Token>* _45454_errorToken) {
	if (((*(_45435_tokens)).len() == 0LL)) {
		_1ad2772b7_pushErr(_self_.ptr(), (*(_45454_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _4607_parts;
	jule::Slice<_1b08b6838_Log> _46014_errors;
	({
		__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(_45435_tokens, static_cast<jule::U64>(5LLU), true);
		_4607_parts = __jule_assign_result.__jule_result_arg0;
		_46014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46014_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46014_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> _4667_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>::alloc(0LL, _4607_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4b3988_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b45e8368:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _46715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>> &__jule_push_dest = _4667_generics; __jule_push_dest.push(_1ad27a3ca_buildGeneric(_self_, &(_46715_part))); };
			}
			_iter_next_1b45e8368:;
			++it;
			goto _iter_begin_1b45e8368;
		}
		_iter_end_1b45e8368:;
	};
	return _4667_generics;;
}



inline jule::Ptr<_1ac4b6edb_ParamDecl> _1ad27ab17_buildSelfParam(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _47434_tokens) {
	if ((_47434_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ac4b6edb_ParamDecl> _4797_param = jule::new_ptr<_1ac4b6edb_ParamDecl>(_1ac4b6edb_ParamDecl{._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4797_param.alloc)._field_Mutable=true;
		if ((_47434_tokens.len() == 1LL)) {
			_1ad2772b7_pushErr(_self_, _47434_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	_1b097ade7_StrBuilder _4917_ident = static__1b097b1e4_New(5LL);;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1b0984be2_WriteStr(&_4917_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
		if ((_47434_tokens.len() == 1LL)) {
			_1ad2772b7_pushErr(_self_, _47434_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1b0984be2_WriteStr(&_4917_ident, jule::Str::lit("self", 4));
		(*_4797_param.alloc)._field_Token=_47434_tokens[0LL];
		if ((_47434_tokens.len() != 1LL)) {
			_1ad2772b7_pushErr(_self_, _47434_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4797_param.alloc)._field_Ident=_1b09854d9_Str(&_4917_ident);
	return _4797_param;;
}



inline void _1ad27b035_paramTypeBegin(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4b6edb_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _51468_tokens) {
	for (; ((*(_51459_i)) < (*(_51468_tokens)).len()); ((*(_51459_i)))++) {
		{
			jule::Ptr<_1ac4912c3_Token> _5164_token = (*(_51468_tokens))[(*(_51459_i))];;
			if (((*(_5164_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_51435_param))))._field_Variadic) {
				_1ad2772b7_pushErr(_self_, _5164_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1b4600d10;
			};
			(*((*(_51435_param))))._field_Variadic=true;
		}
	_iter_next_1b4600d10:;
	}
	_iter_end_1b4600d10:;;
}



inline void _1ad27b398_buildParamType(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4b6edb_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _52960_tokens) {
	jule::I64 _5307_i = 0LL;;
	_1ad27b035_paramTypeBegin(_self_.ptr(), _52936_param, &(_5307_i), _52960_tokens);
	if ((_5307_i >= (*(_52960_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, _52960_tokens, (&(_5307_i)), true);
		(*((*(_52936_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_5307_i < (*(_52960_tokens)).len())) {
		_1ad2772b7_pushErr(_self_, (*(_52960_tokens))[_5307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ad27b70b_buildParamBody(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4b6edb_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _54259_tokens) {
	jule::Ptr<_1ac4912c3_Token> _5437_tok = _54259_tokens[0LL];;
	if ((_54259_tokens.len() == 1LL)) {
		(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
		return;;
	} else if ((_54259_tokens.len() < 3LL)) {
		_1ad2772b7_pushErr(_self_.ptr(), _5437_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54259_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_54236_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1ad27b398_buildParamType(_self_, _54236_param, &(_54259_tokens));
		return;;
	};
	(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
	(_54259_tokens).mut_slice(2LL);;
	_1ad27b398_buildParamType(_self_, _54236_param, &(_54259_tokens));
}



inline jule::Ptr<_1ac4b6edb_ParamDecl> _1ad27ba4c_buildParam(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _56231_tokens) {
	jule::Ptr<_1ac4b6edb_ParamDecl> _5637_param = jule::new_ptr<_1ac4b6edb_ParamDecl>(_1ac4b6edb_ParamDecl{._field_Token=_56231_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5637_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5637_param.alloc)._field_Mutable=true;
		if ((_56231_tokens.len() == 1LL)) {
			_1ad2772b7_pushErr(_self_.ptr(), _56231_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56231_tokens).mut_slice(1LL);;
		(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
	};
	if ((_56231_tokens.len() >= 3LL)) {
		if (((*(*(_5637_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_56231_tokens.len() == 1LL)) {
				_1ad2772b7_pushErr(_self_, _56231_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56231_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_56231_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5637_param.alloc)._field_Reference=true;
				(_56231_tokens).mut_slice(1LL);;
				(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
			};
		};
	};
	if (((*(*(_5637_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5637_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1ad27b398_buildParamType(_self_, &(_5637_param), &(_56231_tokens));
	} else {
		_1ad27b70b_buildParamBody(_self_, &(_5637_param), _56231_tokens);
	};
	return _5637_param;;
}



inline void _1ad27bd05_checkParams(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>>* _60532_params) {
	{
		auto expr = _60532_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46116e4:;
		if (it != expr_end) {
			jule::Ptr<_1ac4b6edb_ParamDecl> _60615_param = *it;
			{
				if ((_1ac4b7393_IsSelf(_60615_param.ptr()) || ((*_60615_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1b46116e4;
				};
				if (((*_60615_param.alloc)._field_Token == nullptr)) {
					_1ad2772b7_pushErr(_self_, (*_60615_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*_60615_param.alloc)._field_Kind=jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ac4a6d88_IdentTypeDecl>(_1ac4a6d88_IdentTypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Ident=(*((*_60615_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>(nullptr)}), &__jule_any_type77)});
					(*_60615_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1b46116e4:;
			++it;
			goto _iter_begin_1b46116e4;
		}
		_iter_end_1b46116e4:;
	};
}



inline jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>> _1ad27c201_buildParams(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _62533_tokens, jule::Bool _62551_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _6267_parts;
	jule::Slice<_1b08b6838_Log> _62614_errs;
	({
		__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(_62533_tokens, static_cast<jule::U64>(5LLU), true);
		_6267_parts = __jule_assign_result.__jule_result_arg0;
		_62614_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62614_errs);
	if ((_6267_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>> _63211_params = nullptr;;
	if ((_62551_method && (_6267_parts.len() > 0LL))) {
		jule::Ptr<_1ac4b6edb_ParamDecl> _6348_param = _1ad27ab17_buildSelfParam(_self_, _6267_parts[0LL]);;
		if (((_6348_param != nullptr) && _1ac4b7393_IsSelf(_6348_param))) {
			{ jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6348_param); };
			(_6267_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_6267_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46182de:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _64115_part = *it;
			{
				if ((_64115_part.len() == 0LL)) {
					goto _iter_next_1b46182de;
				};
				jule::Ptr<_1ac4b6edb_ParamDecl> _6458_param = _1ad27ba4c_buildParam(_self_, _64115_part);;
				if ((_6458_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6458_param); };
				};
			}
			_iter_next_1b46182de:;
			++it;
			goto _iter_begin_1b46182de;
		}
		_iter_end_1b46182de:;
	};
	_1ad27bd05_checkParams(_self_, &(_63211_params));
	return _63211_params;;
}



inline __jule_tuple_x_1ac4a9671_RetTypeDecl__jule_tuple_bool _1ad27c5ec_buildMultiRetType(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _65539_tokens, jule::I64* _65562_i) {
	__jule_tuple_x_1ac4a9671_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ac4a9671_RetTypeDecl>(_1ac4a9671_RetTypeDecl{._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr)});
	((*(_65562_i)))++;
	if (((*(_65562_i)) >= (*(_65539_tokens)).len())) {
		((*(_65562_i)))--;
		({
			__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, _65539_tokens, (&((*(_65562_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65562_i)))--;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _6657_rangeTokens = _1ad274e85_range(_65562_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _65539_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _6677_parts;
	jule::Slice<_1b08b6838_Log> _66714_errs;
	({
		__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(&(_6657_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6677_parts = __jule_assign_result.__jule_result_arg0;
		_66714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66714_errs);
	if ((_6677_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _6737_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4a677d_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4912c3_Token>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4912c3_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6677_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b461e3e4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _67515_part = *it;
			{
				if ((_67515_part.len() == 0LL)) {
					goto _iter_next_1b461e3e4;
				};
				jule::Ptr<_1ac4912c3_Token> _6798_token = _67515_part[0LL];;
				jule::I64 _6808_offset = 0LL;;
				if ((_67515_part.len() > 1LL)) {
					_6798_token=_67515_part[1LL];
					if (((*(_6798_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6808_offset=2LL;
						if ((_67515_part.len() < 3LL)) {
							_1ad2772b7_pushErr(_self_, _6798_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1b461e3e4;
						};
					};
				};
				_6798_token=_67515_part[0LL];
				if ((_6808_offset != 2LL)) {
					jule::Ptr<_1ac4912c3_Token> _6969_newToken = jule::new_ptr<_1ac4912c3_Token>((*_6798_token.alloc));;
					(*_6969_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4912c3_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6969_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4912c3_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6798_token; __jule_collection; }));
				};
				jule::Ptr<_1ac4a677d_TypeDecl> _7038_tk;
				({
					__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, &(_67515_part), (&(_6808_offset)), true);
					_7038_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6808_offset < _67515_part.len())) {
					_1ad2772b7_pushErr(_self_, _67515_part[_6808_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> &__jule_push_dest = _6737_types; __jule_push_dest.push(_7038_tk); };
			}
			_iter_next_1b461e3e4:;
			++it;
			goto _iter_begin_1b461e3e4;
		}
		_iter_end_1b461e3e4:;
	};
	if ((_6737_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=(*(_65539_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1ac4a7eaa_TupleTypeDecl>(_1ac4a7eaa_TupleTypeDecl{._field_Types=_6737_types}), &__jule_any_type76)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6737_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ac4a9671_RetTypeDecl__jule_tuple_bool _1ad27c9e8_buildRetType(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _72634_tokens, jule::I64* _72657_i) {
	__jule_tuple_x_1ac4a9671_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ac4a9671_RetTypeDecl>(_1ac4a9671_RetTypeDecl{._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr)});
	if (((*(_72657_i)) >= (*(_72634_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ac4912c3_Token> _7327_token = (*(_72634_tokens))[(*(_72657_i))];;
	{
		auto &_match_expr{ (*(_7327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b46284a8:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1b4628530:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1b4628596:;
			{
				if ((((*(_72657_i)) + 1LL) >= (*(_72634_tokens)).len())) {
					_1ad2772b7_pushErr(_self_.ptr(), _7327_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72657_i)))++;
				_7327_token=(*(_72634_tokens))[(*(_72657_i))];
				{
					auto &_match_expr{ (*(_7327_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b4629454:;
						{
							({
								__jule_tuple_x_1ac4a9671_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ad27c5ec_buildMultiRetType(_self_, _72634_tokens, _72657_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b462a5ba:;
						{
							_1ad2772b7_pushErr(_self_, _7327_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1b462a521:;
				};
				({
					__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, _72634_tokens, (&((*(_72657_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1b4628442:;
	};
	((*(_72657_i)))++;
	_1ad2772b7_pushErr(_self_.ptr(), _7327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1ac4b843d_FnDecl> _1ad27ce9e_buildFnPrototype(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method) {
	jule::Ptr<_1ac4b843d_FnDecl> _7667_f = jule::new_ptr<_1ac4b843d_FnDecl>(_1ac4b843d_FnDecl{._field_Token=(*(_76538_tokens))[(*(_76561_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1ac4a9671_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>>(nullptr)});;
	if (((*((*(_7667_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7667_f.alloc)._field_Statically=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1ad2772b7_pushErr(_self_.ptr(), (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	if (((*(*(_7667_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7667_f.alloc)._field_Unsafety=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1ad2772b7_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	((*(_76561_i)))++;
	if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
		_1ad2772b7_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4912c3_Token> _7993_tok = (*(_76538_tokens))[(*(_76561_i))];;
	if (((*(_7993_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1ad2772b7_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Ident=(*_7993_tok.alloc)._field_Kind;
	} else {
		(*_7667_f.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1ac4912c3_Token> _8113_errorToken = (*(_76538_tokens))[(*(_76561_i))];;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _8127_genericsTokens = _1ad274e85_range(_76561_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _76538_tokens);;
	if ((_8127_genericsTokens != nullptr)) {
		(*_7667_f.alloc)._field_Generics=_1ad27a7c6_buildGenerics(_self_, &(_8127_genericsTokens), &(_8113_errorToken));
	};
	if (((*((*(_76538_tokens))[(*(_76561_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1ad2772b7_pushErr(_self_, (*(_76538_tokens))[(*(_76561_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _8227_paramsToks = _1ad274e85_range(_76561_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _76538_tokens);;
	if ((_8227_paramsToks.len() > 0LL)) {
		(*_7667_f.alloc)._field_Params=_1ad27c201_buildParams(_self_, &(_8227_paramsToks), _76569_method);
	};
	if (((*(_76561_i)) < (*(_76538_tokens)).len())) {
		jule::Ptr<_1ac4912c3_Token> _8284_token = (*(_76538_tokens))[(*(_76561_i))];;
		if (((*(_8284_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7667_f.alloc)._field_Exceptional=true;
			((*(_76561_i)))++;
		};
	};
	(*_7667_f.alloc)._field_Public=_1ac575242_IsPub((*_7667_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1ac4a9671_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ad27c9e8_buildRetType(_self_, _76538_tokens, _76561_i);
		(*_7667_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7667_f;;
}



inline jule::Ptr<_1ac4b843d_FnDecl> _1ad27d455_buildFn(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype) {
	jule::I64 _8437_i = 0LL;;
	jule::Ptr<_1ac4b843d_FnDecl> _8447_f = _1ad27ce9e_buildFnPrototype(_self_, _84229_tokens, &(_8437_i), _84247_method);;
	if (_84261_prototype) {
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1ad2772b7_pushErr(_self_, (*(_84229_tokens))[(_8437_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8447_f;;
	} else if ((_8447_f == nullptr)) {
		return _8447_f;;
	};
	if ((_8437_i >= (*(_84229_tokens)).len())) {
		_1ad276b13_stop(_self_);
		_1ad2772b7_pushErr(_self_, (*(_8447_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _8607_blockTokens = _1ad274e85_range(&(_8437_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _84229_tokens);;
	if ((_8607_blockTokens != nullptr)) {
		(*_8447_f.alloc)._field_Scope=_1ad278461_buildScope(_self_, &(_8607_blockTokens), (*(_84229_tokens))[(_8437_i - 1LL)]);
		(*((*_8447_f.alloc)._field_Scope))._field_Unsafety=(*_8447_f.alloc)._field_Unsafety;
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1ad2772b7_pushErr(_self_, (*(_84229_tokens))[_8437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1ad276b13_stop(_self_);
		_1ad2772b7_pushErr(_self_, (*_8447_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8447_f;;
}



inline jule::Slice<jule::Ptr<_1ac4912c3_Token>> _1ad27d796_getUseDeclSelectors(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _87639_tokens) {
	jule::I64 _8777_i = 0LL;;
	_87639_tokens=_1ad274e85_range(&(_8777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_87639_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _8797_parts;
	jule::Slice<_1b08b6838_Log> _87914_errs;
	({
		__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(&(_87639_tokens), static_cast<jule::U64>(5LLU), true);
		_8797_parts = __jule_assign_result.__jule_result_arg0;
		_87914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87914_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87914_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _8857_selectors = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4912c3_Token>>::alloc(0LL, _8797_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4912c3_Token>(nullptr); __jule_collection; });;
	{
		auto expr = &(_8797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46451c8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _88615_part = *it;
			{
				if ((_88615_part.len() > 1LL)) {
					_1ad2772b7_pushErr(_self_, _88615_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ac4912c3_Token> _8908_tok = _88615_part[0LL];;
				if ((((*(_8908_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8908_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1ad2772b7_pushErr(_self_, _8908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
					goto _iter_next_1b46451c8;
				};
				{ jule::Slice<jule::Ptr<_1ac4912c3_Token>> &__jule_push_dest = _8857_selectors; __jule_push_dest.push(_8908_tok); };
			}
			_iter_next_1b46451c8:;
			++it;
			goto _iter_begin_1b46451c8;
		}
		_iter_end_1b46451c8:;
	};
	return _8857_selectors;;
}



inline void _1ad27db09_buildBindUseDecl(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4be884_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _90154_tokens) {
	if (((*(_90154_tokens)).len() > 1LL)) {
		_1ad2772b7_pushErr(_self_, (*(_90154_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac4912c3_Token> _9053_token = (*(_90154_tokens))[0LL];;
	if ((((*(_9053_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9053_token.alloc)._field_Kind[0LL] != '`') && ((*_9053_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1ad2772b7_pushErr(_self_, _9053_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90137_decl))))._field_Binded=true;
	(*((*(_90137_decl))))._field_LinkPath=(*_9053_token.alloc)._field_Kind.slice(1LL, ((*_9053_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1ad27de4a_useDeclTokstoa(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _91431_tokens) {
	jule::I64 _9157_n = 0LL;;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b464cb2b:;
		if (it != expr_end) {
			jule::Ptr<_1ac4912c3_Token> *_91610_token = it;
			{
				if ((((*((*(_91610_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_91610_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1ad2772b7_pushErr(_self_, (*(_91610_token)), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				_9157_n+=(*(*(_91610_token)).alloc)._field_Kind.len();
			}
			_iter_next_1b464cb2b:;
			++it;
			goto _iter_begin_1b464cb2b;
		}
		_iter_end_1b464cb2b:;
	};
	_1b097ade7_StrBuilder _9227_s = static__1b097b1e4_New(_9157_n);;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b464c862:;
		if (it != expr_end) {
			jule::Ptr<_1ac4912c3_Token> *_92310_token = it;
			{
				_1b0984be2_WriteStr(&_9227_s, (*((*(_92310_token))))._field_Kind);
			}
			_iter_next_1b464c862:;
			++it;
			goto _iter_begin_1b464c862;
		}
		_iter_end_1b464c862:;
	};
	return _1b09854d9_Str(&_9227_s);;
}



inline void _1ad27e2ad_buildStdUseDecl(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4be884_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _92956_tokens) {
	(*((*(_92936_decl))))._field_Std=true;
	jule::Ptr<_1ac4912c3_Token> _9327_token = _92956_tokens[0LL];;
	if ((_92956_tokens.len() < 3LL)) {
		_1ad2772b7_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(_92956_tokens).mut_slice(2LL);;
	_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_9327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b46526be:;
			{
				_1ad2772b7_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b4652746:;
			{
				jule::Slice<jule::Ptr<_1ac4912c3_Token>> _94512_selectors = nullptr;;
				({
					__jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token __jule_assign_result = _1ad27524e_rangeLast(&(_92956_tokens));
					_92956_tokens = __jule_assign_result.__jule_result_arg0;
					_94512_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92936_decl))))._field_Selected=_1ad27d796_getUseDeclSelectors(_self_, _94512_selectors);
				if ((_92956_tokens.len() == 0LL)) {
					_1ad2772b7_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1ad2772b7_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1ad2772b7_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b46527ac:;
			{
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1ad2772b7_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1ad2772b7_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1ad2772b7_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92936_decl))))._field_Full=true;
			}
		}
		_match_end_1b4652658:;
	};
	if (((_92956_tokens.len() == 1LL) && ((*(_92956_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_92936_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92936_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1ad27de4a_useDeclTokstoa(_self_, &(_92956_tokens)));
	};
}



inline void _1ad27e621_buildIdentUseDecl(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4be884_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _98758_tokens) {
	(*((*(_98738_decl))))._field_Std=false;
	jule::Ptr<_1ac4912c3_Token> _9907_token = _98758_tokens[(_98758_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_9907_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b465b9a3:;
			{
				_1ad2772b7_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b465c8a5:;
			{
				jule::Slice<jule::Ptr<_1ac4912c3_Token>> _99612_selectors = nullptr;;
				({
					__jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token __jule_assign_result = _1ad27524e_rangeLast(&(_98758_tokens));
					_98758_tokens = __jule_assign_result.__jule_result_arg0;
					_99612_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98738_decl))))._field_Selected=_1ad27d796_getUseDeclSelectors(_self_, _99612_selectors);
				if ((_98758_tokens.len() == 0LL)) {
					_1ad2772b7_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1ad2772b7_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1ad2772b7_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b465c91b:;
			{
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1ad2772b7_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1ad2772b7_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1ad2772b7_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98738_decl))))._field_Full=true;
			}
		}
		_match_end_1b465c773:;
	};
	(*((*(_98738_decl))))._field_LinkPath=_1ad27de4a_useDeclTokstoa(_self_, &(_98758_tokens));
}



inline void _1ad27e984_parseUseDecl(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4be884_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _103553_tokens) {
	if ((*((*(_103533_decl))))._field_Binded) {
		_1ad27db09_buildBindUseDecl(_self_, _103533_decl, &(_103553_tokens));
		return;;
	};
	jule::Ptr<_1ac4912c3_Token> _10417_token = _103553_tokens[0LL];;
	if (((*(_10417_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad2772b7_pushErr(_self_, _10417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103553_tokens.len() > 2LL) && ((*(_103553_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_103533_decl))))._field_Alias=(*_10417_token.alloc)._field_Kind;
		if (((*(_103553_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1ad2772b7_pushErr(_self_, _10417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			return;;
		};
		(_103553_tokens).mut_slice(2LL);;
		_10417_token=_103553_tokens[0LL];
	};
	;
	{
		
		if ((*(_10417_token))._field_Kind.equal("std", 3)) {
			_case_begin_1b466ab27:;
			{
				_1ad27e2ad_buildStdUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		else {
			_case_begin_1b466a3eb:;
			{
				_1ad27e621_buildIdentUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		_match_end_1b466a385:;
	};
}



inline jule::Ptr<_1ac4be884_UseDecl> _1ad27ed80_buildUseDecl(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _106932_tokens, jule::Bool _106950_binded) {
	jule::Ptr<_1ac4be884_UseDecl> _10707_decl = jule::new_ptr<_1ac4be884_UseDecl>(_1ac4be884_UseDecl{._field_Token=_106932_tokens[0LL], ._field_LinkPath=jule::Str(), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr), ._field_Binded=_106950_binded, ._field_Std=false});;
	if ((_106932_tokens.len() < 2LL)) {
		_1ad2772b7_pushErr(_self_, (*(_10707_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106932_tokens).mut_slice(1LL);;
	_1ad27e984_parseUseDecl(_self_, &(_10707_decl), _106932_tokens);
	return _10707_decl;;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28027b_buildTypeEnumItemKind(jule::Ptr<_1ad2767d3_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _108356_tokens) {
	jule::I64 _10847_braceN = 0LL;;
	jule::I64 _10853_exprStart = (*(_108343_i));;
	for (; ((*(_108343_i)) < (*(_108356_tokens)).len()); ((*(_108343_i)))++) {
		{
			jule::Ptr<_1ac4912c3_Token> _10874_t = (*(_108356_tokens))[(*(_108343_i))];;
			{
				auto &_match_expr{ (*(_10874_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b466e961:;
					{
						(_10847_braceN)++;
						goto _iter_next_1b466dde4;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b466ec91:;
					{
						(_10847_braceN)--;
					}
				}
				_match_end_1b466e9d8:;
			};
			if ((_10847_braceN > 0LL)) {
				goto _iter_next_1b466dde4;
			};
			if ((((*(_10874_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_108343_i)) + 1LL) >= (*(_108356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ac4912c3_Token>> _110313_kindTokens = nullptr;;
				if (((*_10874_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart, (*(_108343_i)));
				} else {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart);
				};
				jule::I64 _11099_j = 0LL;;
				jule::Ptr<_1ac4a677d_TypeDecl> _11109_kind;
				({
					__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, &(_110313_kindTokens), (&(_11099_j)), true);
					_11109_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_11099_j < _110313_kindTokens.len())) {
					_1ad2772b7_pushErr(_self_, _110313_kindTokens[_11099_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _11109_kind;;
			};
		}
	_iter_next_1b466dde4:;
	}
	_iter_end_1b466dde4:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ac4c1226_TypeEnumItemDecl>> _1ad2805bc_buildTypeEnumItems(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _112040_tokens) {
	jule::Slice<jule::Ptr<_1ac4c1226_TypeEnumItemDecl>> _11217_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4c1226_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4c1226_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _11227_i = 0LL;;
	for (; (_11227_i < (*(_112040_tokens)).len()); (_11227_i)++) {
		{
			jule::Ptr<_1ac4912c3_Token> _11248_t = (*(_112040_tokens))[_11227_i];;
			jule::Ptr<_1ac4c1226_TypeEnumItemDecl> _11258_item = jule::new_ptr<_1ac4c1226_TypeEnumItemDecl>(_1ac4c1226_TypeEnumItemDecl{._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr)});;
			(*_11258_item.alloc)._field_Token=_11248_t;
			if ((((*((*_11258_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112040_tokens)).len() - _11227_i) > 2LL))) {
				_11248_t=(*(_112040_tokens))[(_11227_i + 1LL)];
				if (((*(_11248_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_11258_item.alloc)._field_Ident=(*(*(_11258_item))._field_Token.alloc)._field_Kind;
					_11227_i+=2LL;
					if (((_11227_i >= (*(_112040_tokens)).len()) || ((*((*(_112040_tokens))[_11227_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1ad2772b7_pushErr(_self_.ptr(), _11248_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1b4674c52;
					};
				};
			};
			(*_11258_item.alloc)._field_Kind=_1ad28027b_buildTypeEnumItemKind(_self_, &(_11227_i), _112040_tokens);
			{ jule::Slice<jule::Ptr<_1ac4c1226_TypeEnumItemDecl>> &__jule_push_dest = _11217_items; __jule_push_dest.push(_11258_item); };
		}
	_iter_next_1b4674c52:;
	}
	_iter_end_1b4674c52:;;
	return _11217_items;;
}



inline jule::Ptr<_1ac4c1886_TypeEnumDecl> _1ad28090d_buildTypeEnumDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _114439_tokens) {
	jule::I64 _11457_i = 1LL;;
	jule::Ptr<_1ac4c1886_TypeEnumDecl> _11467_e = jule::new_ptr<_1ac4c1886_TypeEnumDecl>(_1ac4c1886_TypeEnumDecl{._field_Token=(*(_114439_tokens))[_11457_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1ac4c1226_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1ac4912c3_Token>(nullptr)});;
	if (((*((*(_11467_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad2772b7_pushErr(_self_.ptr(), (*_11467_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Ident=(*(*(_11467_e))._field_Token.alloc)._field_Kind;
	_11457_i+=3LL;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _11567_itemTokens = _1ad274e85_range(&(_11457_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _114439_tokens);;
	if ((_11567_itemTokens == nullptr)) {
		_1ad276b13_stop(_self_);
		_1ad2772b7_pushErr(_self_, (*_11467_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11467_e;;
	} else if ((_11457_i < (*(_114439_tokens)).len())) {
		_1ad2772b7_pushErr(_self_, (*(_114439_tokens))[_11457_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Public=_1ac575242_IsPub((*_11467_e.alloc)._field_Ident);
	(*_11467_e.alloc)._field_End=(*(_114439_tokens))[(_11457_i - 1LL)];
	(*_11467_e.alloc)._field_Items=_1ad2805bc_buildTypeEnumItems(_self_, &(_11567_itemTokens));
	return _11467_e;;
}



inline jule::Ptr<_1ac4aaab2_Expr> _1ad280d09_buildEnumItemExpr(jule::Ptr<_1ad2767d3_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _117152_tokens) {
	jule::I64 _11727_braceN = 0LL;;
	jule::I64 _11733_exprStart = (*(_117139_i));;
	for (; ((*(_117139_i)) < (*(_117152_tokens)).len()); ((*(_117139_i)))++) {
		{
			jule::Ptr<_1ac4912c3_Token> _11754_t = (*(_117152_tokens))[(*(_117139_i))];;
			{
				auto &_match_expr{ (*(_11754_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b468315b:;
					{
						(_11727_braceN)++;
						goto _iter_next_1b46825de;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b468348b:;
					{
						(_11727_braceN)--;
					}
				}
				_match_end_1b46831d3:;
			};
			if ((_11727_braceN > 0LL)) {
				goto _iter_next_1b46825de;
			};
			if ((((*(_11754_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117139_i)) + 1LL) >= (*(_117152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ac4912c3_Token>> _119113_exprTokens = nullptr;;
				if (((*_11754_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart, (*(_117139_i)));
				} else {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart);
				};
				return _1ad27796b_buildExpr(_self_, &(_119113_exprTokens));;
			};
		}
	_iter_next_1b46825de:;
	}
	_iter_end_1b46825de:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ac4bed3a_EnumItemDecl>> _1ad28114a_buildEnumItems(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _120336_tokens) {
	jule::Slice<jule::Ptr<_1ac4bed3a_EnumItemDecl>> _12047_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4bed3a_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4bed3a_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _12057_i = 0LL;;
	for (; (_12057_i < (*(_120336_tokens)).len()); (_12057_i)++) {
		{
			jule::Ptr<_1ac4912c3_Token> _12078_t = (*(_120336_tokens))[_12057_i];;
			jule::Ptr<_1ac4bed3a_EnumItemDecl> _12088_item = jule::new_ptr<_1ac4bed3a_EnumItemDecl>(_1ac4bed3a_EnumItemDecl{._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
			(*_12088_item.alloc)._field_Token=_12078_t;
			if (((*((*_12088_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1ad2772b7_pushErr(_self_.ptr(), (*_12088_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_12088_item.alloc)._field_Ident=(*(*(_12088_item))._field_Token.alloc)._field_Kind;
			if ((((_12057_i + 1LL) >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[(_12057_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_12057_i + 1LL) < (*(_120336_tokens)).len())) {
					(_12057_i)++;
				};
				{ jule::Slice<jule::Ptr<_1ac4bed3a_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
				goto _iter_next_1b468702d;
			};
			(_12057_i)++;
			_12078_t=(*(_120336_tokens))[_12057_i];
			(_12057_i)++;
			if (((*(_12078_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1ad2772b7_pushErr(_self_, _12078_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1b468702d;
			};
			if (((_12057_i >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[_12057_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1ad2772b7_pushErr(_self_, _12078_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1b468702d;
			};
			(*_12088_item.alloc)._field_Expr=_1ad280d09_buildEnumItemExpr(_self_, &(_12057_i), _120336_tokens);
			{ jule::Slice<jule::Ptr<_1ac4bed3a_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
		}
	_iter_next_1b468702d:;
	}
	_iter_end_1b468702d:;;
	return _12047_items;;
}



inline jule::Ptr<_1ac4c08eb_EnumDecl> _1ad28148b_buildEnumDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _124035_tokens) {
	if (((*(_124035_tokens)).len() < 3LL)) {
		_1ad2772b7_pushErr(_self_.ptr(), (*(_124035_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4c08eb_EnumDecl> _12457_e = jule::new_ptr<_1ac4c08eb_EnumDecl>(_1ac4c08eb_EnumDecl{._field_Token=(*(_124035_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1ac4bed3a_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1ac4912c3_Token>(nullptr)});;
	if (((*((*(_12457_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad2772b7_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Ident=(*(*(_12457_e))._field_Token.alloc)._field_Kind;
	jule::I64 _12537_i = 2LL;;
	if (((*((*(_124035_tokens))[_12537_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_12537_i)++;
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1ad2772b7_pushErr(_self_, (*(_124035_tokens))[(_12537_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _12457_e;;
		};
		({
			__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, _124035_tokens, (&(_12537_i)), true);
			(*_12457_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1ad276b13_stop(_self_);
			_1ad2772b7_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _12457_e;;
		};
	} else {
		(*_12457_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _12707_itemTokens = _1ad274e85_range(&(_12537_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124035_tokens);;
	if ((_12707_itemTokens == nullptr)) {
		_1ad276b13_stop(_self_);
		_1ad2772b7_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _12457_e;;
	} else if ((_12537_i < (*(_124035_tokens)).len())) {
		_1ad2772b7_pushErr(_self_, (*(_124035_tokens))[_12537_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Public=_1ac575242_IsPub((*_12457_e.alloc)._field_Ident);
	(*_12457_e.alloc)._field_End=(*(_124035_tokens))[(_12537_i - 1LL)];
	(*_12457_e.alloc)._field_Items=_1ad28114a_buildEnumItems(_self_, &(_12707_itemTokens));
	return _12457_e;;
}



inline jule::Any _1ad2817cc_buildNodeEnumDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _128539_tokens) {
	if ((((*(_128539_tokens)).len() > 3LL) && ((*((*(_128539_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_128539_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1ad28090d_buildTypeEnumDecl(_self_, _128539_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1ad28148b_buildEnumDecl(_self_, _128539_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1ac4c1b50_FieldDecl> _1ad281b1d_buildField(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _129431_tokens) {
	jule::Ptr<_1ac4c1b50_FieldDecl> _12957_f = jule::new_ptr<_1ac4c1b50_FieldDecl>(_1ac4c1b50_FieldDecl{._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	(*_12957_f.alloc)._field_Mutable=((*(_129431_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_12957_f.alloc)._field_Mutable) {
		if ((_129431_tokens.len() == 1LL)) {
			_1ad2772b7_pushErr(_self_.ptr(), _129431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(1LL);;
	};
	(*_12957_f.alloc)._field_Token=_129431_tokens[0LL];
	if (((*((*_12957_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad2772b7_pushErr(_self_, (*_12957_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_12957_f.alloc)._field_Ident=(*(*(_12957_f))._field_Token.alloc)._field_Kind;
	if ((_129431_tokens.len() == 1LL)) {
		_1ad2772b7_pushErr(_self_, _129431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129431_tokens.len() < 3LL) || ((*(_129431_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1ad2772b7_pushErr(_self_, _129431_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129431_tokens).mut_slice(2LL);;
	jule::I64 _13237_i = 0LL;;
	({
		__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, &(_129431_tokens), (&(_13237_i)), true);
		(*_12957_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_13237_i < _129431_tokens.len())) {
		jule::Ptr<_1ac4912c3_Token> _13264_token = _129431_tokens[_13237_i];;
		if (((*(_13264_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1ad2772b7_pushErr(_self_, _129431_tokens[_13237_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13237_i)++;
		if ((_13237_i >= _129431_tokens.len())) {
			_1ad2772b7_pushErr(_self_, _13264_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(_13237_i);;
		(*_12957_f.alloc)._field_Default=_1ad27796b_buildExpr(_self_, &(_129431_tokens));
	};
	(*_12957_f.alloc)._field_Public=_1ac575242_IsPub((*_12957_f.alloc)._field_Ident);
	return _12957_f;;
}



inline jule::Slice<jule::Ptr<_1ac4c1b50_FieldDecl>> _1ad281e5e_buildStructDeclFields(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _134342_tokens) {
	jule::Slice<jule::Ptr<_1ac4c1b50_FieldDecl>> _134411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ad2578b3_stmt>> _13457_stmts = _1ad257c6a_splitStmts(&(_134342_tokens));;
	{
		auto expr = &(_13457_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46a8e84:;
		if (it != expr_end) {
			jule::Ptr<_1ad2578b3_stmt> _134615_stmt = *it;
			{
				_134342_tokens=(*(_134615_stmt))._field_tokens;
				jule::Ptr<_1ac4c1b50_FieldDecl> _13488_f = _1ad281b1d_buildField(_self_, _134342_tokens);;
				{ jule::Slice<jule::Ptr<_1ac4c1b50_FieldDecl>> &__jule_push_dest = _134411_fields; __jule_push_dest.push(_13488_f); };
			}
			_iter_next_1b46a8e84:;
			++it;
			goto _iter_begin_1b46a8e84;
		}
		_iter_end_1b46a8e84:;
	};
	return _134411_fields;;
}



inline jule::Ptr<_1ac4c2546_StructDecl> _1ad2822a0_buildStructDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _135437_tokens) {
	if (((*(_135437_tokens)).len() < 3LL)) {
		_1ad2772b7_pushErr(_self_.ptr(), (*(_135437_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _13607_i = 1LL;;
	jule::Ptr<_1ac4c2546_StructDecl> _13617_s = jule::new_ptr<_1ac4c2546_StructDecl>(_1ac4c2546_StructDecl{._field_Token=(*(_135437_tokens))[_13607_i], ._field_End=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1ac4c1b50_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>(nullptr)});;
	if (((*((*(_13617_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad2772b7_pushErr(_self_, (*_13617_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_13607_i)++;
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1ad2772b7_pushErr(_self_, (*(_135437_tokens))[_13607_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	(*_13617_s.alloc)._field_Ident=(*(*(_13617_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1ac4912c3_Token> _13753_errorToken = (*(_135437_tokens))[_13607_i];;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _13767_genericsTokens = _1ad274e85_range(&(_13607_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _135437_tokens);;
	if ((_13767_genericsTokens != nullptr)) {
		(*_13617_s.alloc)._field_Generics=_1ad27a7c6_buildGenerics(_self_, &(_13767_genericsTokens), &(_13753_errorToken));
	};
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1ad2772b7_pushErr(_self_, (*(_135437_tokens))[(_13607_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _13867_bodyTokens = _1ad274e85_range(&(_13607_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _135437_tokens);;
	if ((_13867_bodyTokens == nullptr)) {
		_1ad276b13_stop(_self_);
		_1ad2772b7_pushErr(_self_, (*_13617_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	if ((_13607_i < (*(_135437_tokens)).len())) {
		_1ad2772b7_pushErr(_self_, (*(_135437_tokens))[_13607_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_13617_s.alloc)._field_Public=_1ac575242_IsPub((*_13617_s.alloc)._field_Ident);
	(*_13617_s.alloc)._field_Fields=_1ad281e5e_buildStructDeclFields(_self_, _13867_bodyTokens);
	(*_13617_s.alloc)._field_End=(*(_135437_tokens))[(_13607_i - 1LL)];
	return _13617_s;;
}



inline void _1ad282558_checkMethodReceiver(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4b843d_FnDecl>* _140236_f) {
	if ((*((*(_140236_f))))._field_Statically) {
		if ((((*((*(_140236_f))))._field_Params.len() > 0LL) && _1ac4b7393_IsSelf((*((*(_140236_f))))._field_Params[0LL].ptr()))) {
			_1ad2772b7_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140236_f))))._field_Params.len() == 0LL)) {
		_1ad2772b7_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac4b6edb_ParamDecl> _14143_param = (*((*(_140236_f))))._field_Params[0LL];;
	if ((!(_1ac4b7393_IsSelf(_14143_param.ptr())))) {
		_1ad2772b7_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ad2828bb_buildTraitBody(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4c2c83_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _142155_tokens) {
	jule::Slice<jule::Ptr<_1ad2578b3_stmt>> _14227_stmts = _1ad257c6a_splitStmts(&(_142155_tokens));;
	{
		auto expr = &(_14227_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46ba814:;
		if (it != expr_end) {
			jule::Ptr<_1ad2578b3_stmt> _142315_stmt = *it;
			{
				_142155_tokens=(*(_142315_stmt))._field_tokens;
				if ((_142155_tokens.len() == 0LL)) {
					goto _iter_next_1b46ba814;
				};
				{
					auto &_match_expr{ (*(_142155_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1b46be483:;
						{
							jule::Ptr<_1ac4b843d_FnDecl> _14309_f = _1ad27d455_buildFn(_self_, &(_142155_tokens), true, true);;
							if ((_14309_f == nullptr)) {
								goto _match_end_1b46bbace;
							};
							_1ad282558_checkMethodReceiver(_self_, &(_14309_f));
							if (((*(_14309_f))._field_Generics.len() > 0LL)) {
								_1ad2772b7_pushErr(_self_, (*(_14309_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ac4b843d_FnDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Methods; __jule_push_dest.push(_14309_f); };
						}
					}
					else {
						_case_begin_1b46bb3c5:;
						{
							jule::I64 _14409_i = 0LL;;
							jule::Ptr<_1ac4a677d_TypeDecl> _14419_ti;
							jule::Bool _144113_ok;
							({
								__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, &(_142155_tokens), (&(_14409_i)), true);
								_14419_ti = __jule_assign_result.__jule_result_arg0;
								_144113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144113_ok))) {
								goto _match_end_1b46bbace;
							};
							if ((_14409_i < _142155_tokens.len())) {
								_1ad2772b7_pushErr(_self_, _142155_tokens[_14409_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Inherits; __jule_push_dest.push(_14419_ti); };
						}
					}
					_match_end_1b46bbace:;
				};
			}
			_iter_next_1b46ba814:;
			++it;
			goto _iter_begin_1b46ba814;
		}
		_iter_end_1b46ba814:;
	};
}



inline jule::Ptr<_1ac4c2c83_TraitDecl> _1ad282c0c_buildTraitDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _145336_tokens) {
	if (((*(_145336_tokens)).len() < 3LL)) {
		_1ad2772b7_pushErr(_self_.ptr(), (*(_145336_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4c2c83_TraitDecl> _14587_t = jule::new_ptr<_1ac4c2c83_TraitDecl>(_1ac4c2c83_TraitDecl{._field_Token=(*(_145336_tokens))[1LL], ._field_End=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1ac4b843d_FnDecl>>(nullptr)});;
	if (((*((*(_14587_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad2772b7_pushErr(_self_, (*_14587_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Ident=(*(*(_14587_t))._field_Token.alloc)._field_Kind;
	jule::I64 _14667_i = 2LL;;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _14677_bodyTokens = _1ad274e85_range(&(_14667_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _145336_tokens);;
	if ((_14677_bodyTokens == nullptr)) {
		_1ad276b13_stop(_self_);
		_1ad2772b7_pushErr(_self_, (*_14587_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14667_i < (*(_145336_tokens)).len())) {
		_1ad2772b7_pushErr(_self_, (*(_145336_tokens))[_14667_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Public=_1ac575242_IsPub((*_14587_t.alloc)._field_Ident);
	_1ad2828bb_buildTraitBody(_self_, &(_14587_t), _14677_bodyTokens);
	(*_14587_t.alloc)._field_End=(*(_145336_tokens))[(_14667_i - 1LL)];
	return _14587_t;;
}



inline jule::Ptr<_1ac4b843d_FnDecl> _1ad28304d_buildBindFn(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _148332_tokens) {
	(_148332_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac4b843d_FnDecl> _14857_f = _1ad27d455_buildFn(_self_, &(_148332_tokens), false, true);;
	if ((_14857_f != nullptr)) {
		(*_14857_f.alloc)._field_Public=false;
		(*_14857_f.alloc)._field_Binded=true;
	};
	return _14857_f;;
}



inline jule::Ptr<_1ac4b95e8_VarDecl> _1ad28338e_buildBindVar(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _149333_tokens) {
	(_149333_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac4b95e8_VarDecl> _14957_v = _1ad27a089_buildVar(_self_, _149333_tokens);;
	if ((_14957_v != nullptr)) {
		(*_14957_v.alloc)._field_Public=false;
		(*_14957_v.alloc)._field_Binded=true;
		if (((*_14957_v.alloc)._field_Expr != nullptr)) {
			_1ad2772b7_pushErr(_self_, (*_14957_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _14957_v;;
}



inline jule::Ptr<_1ac4c2546_StructDecl> _1ad2836d0_buildBindStruct(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _150636_tokens) {
	(_150636_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac4c2546_StructDecl> _15087_s = _1ad2822a0_buildStructDecl(_self_, &(_150636_tokens));;
	if ((_15087_s != nullptr)) {
		(*_15087_s.alloc)._field_Public=false;
		{
			auto expr = &((*_15087_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b46ce020:;
			if (it != expr_end) {
				jule::Ptr<_1ac4c1b50_FieldDecl> _151116_f = *it;
				{
					(*(_151116_f))._field_Public=true;
				}
				_iter_next_1b46ce020:;
				++it;
				goto _iter_begin_1b46ce020;
			}
			_iter_end_1b46ce020:;
		};
		(*_15087_s.alloc)._field_Binded=true;
	};
	return _15087_s;;
}



inline jule::Ptr<_1ac4bd29a_TypeAliasDecl> _1ad283a21_buildBindTypeAlias(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _152039_tokens) {
	(_152039_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac4bd29a_TypeAliasDecl> _15227_t = _1ad27920e_buildTypeAliasDecl(_self_, &(_152039_tokens));;
	if ((_15227_t != nullptr)) {
		(*_15227_t.alloc)._field_Public=false;
		(*_15227_t.alloc)._field_Binded=true;
	};
	return _15227_t;;
}



inline jule::Ptr<_1ac4be884_UseDecl> _1ad283d62_buildBindUse(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _153033_tokens) {
	if ((_153033_tokens.len() == 1LL)) {
		_1ad2772b7_pushErr(_self_.ptr(), _153033_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153033_tokens).mut_slice(1LL);;
	;
	return _1ad27ed80_buildUseDecl(_self_, _153033_tokens, true);;
}



inline jule::Any _1ad2841a3_buildBind(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _154131_tokens) {
	jule::Ptr<_1ac4912c3_Token> _15427_token = (*(_154131_tokens))[0LL];;
	if (((*(_154131_tokens)).len() == 1LL)) {
		_1ad2772b7_pushErr(_self_.ptr(), _15427_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_15427_token=(*(_154131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_15427_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b46d50e2:;
			{
				return jule::Any(_1ad28304d_buildBindFn(_self_, (*(_154131_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b46d4c3a:;
			{
				return jule::Any(_1ad28338e_buildBindVar(_self_, (*(_154131_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b46d4ca1:;
			{
				return jule::Any(_1ad2836d0_buildBindStruct(_self_, (*(_154131_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b46d4d17:;
			{
				return jule::Any(_1ad283a21_buildBindTypeAlias(_self_, (*(_154131_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1b46d3ec0:;
			{
				_1ad2772b7_pushErr(_self_, _15427_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b46d4bc4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac4b843d_FnDecl> _1ad2844e4_getMethod(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _156531_tokens) {
	jule::I64 _15667_i = 0LL;;
	jule::Ptr<_1ac4912c3_Token> _15677_token = (*(_156531_tokens))[_15667_i];;
	if (((*(_15677_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1ad2772b7_pushErr(_self_.ptr(), _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1ad2772b7_pushErr(_self_, _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1ad2772b7_pushErr(_self_, _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ad27d455_buildFn(_self_, _156531_tokens, true, false);;
}



inline void _1ad284857_parseImplBody(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4c33e3_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _159452_tokens) {
	jule::Slice<jule::Ptr<_1ad2578b3_stmt>> _15957_stmts = _1ad257c6a_splitStmts(_159452_tokens);;
	{
		auto expr = &(_15957_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49a944e:;
		if (it != expr_end) {
			jule::Ptr<_1ad2578b3_stmt> _159615_stmt = *it;
			{
				(*(_159452_tokens))=(*(_159615_stmt))._field_tokens;
				jule::Ptr<_1ac4912c3_Token> _15988_token = (*(_159452_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1b49aa450:;
						{
							_1ad278065_pushDirective(_self_.ptr(), _1ad277cac_buildDirective(_self_, (*(_159452_tokens))));
							goto _iter_next_1b49a944e;
						}
					}
					_match_end_1b49aa692:;
				};
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1b49ab918:;
						{
							jule::Ptr<_1ac4b95e8_VarDecl> _16079_v = _1ad27a089_buildVar(_self_, (*(_159452_tokens)));;
							if ((_16079_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1ac4b95e8_VarDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Statics; __jule_push_dest.push(_16079_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1b49ab64e:;
						{
							jule::Ptr<_1ac4b843d_FnDecl> _16149_f = _1ad2844e4_getMethod(_self_, _159452_tokens);;
							if ((_16149_f != nullptr)) {
								_1ad282558_checkMethodReceiver(_self_, &(_16149_f));
								_1ad285292_applyFnMeta(_self_, &(_16149_f));
								{ jule::Slice<jule::Ptr<_1ac4b843d_FnDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Methods; __jule_push_dest.push(_16149_f); };
							};
						}
					}
					else {
						_case_begin_1b49aa7e6:;
						{
							_1ad2772b7_pushErr(_self_, _15988_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1b49a944e;
						}
					}
					_match_end_1b49aace1:;
				};
			}
			_iter_next_1b49a944e:;
			++it;
			goto _iter_begin_1b49a944e;
		}
		_iter_end_1b49a944e:;
	};
}



inline jule::Ptr<_1ac4c33e3_Impl> _1ad284b98_buildImpl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _162730_tokens) {
	jule::Ptr<_1ac4912c3_Token> _16287_token = _162730_tokens[0LL];;
	if ((_162730_tokens.len() < 2LL)) {
		_1ad2772b7_pushErr(_self_.ptr(), _16287_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _16347_i = 1LL;;
	jule::Ptr<_1ac4a677d_TypeDecl> _16367_base;
	jule::Bool _163617_ok;
	({
		__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		_16367_base = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1ad2772b7_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac4c33e3_Impl> _16457_ipl = jule::new_ptr<_1ac4c33e3_Impl>(_1ac4c33e3_Impl{._field_End=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Base=_16367_base, ._field_Dest=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1ac4b843d_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1ac4b95e8_VarDecl>>(nullptr)});;
	_16287_token=_162730_tokens[_16347_i];
	if (((*(_16287_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_16287_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_16457_ipl))._field_Base, (*_16457_ipl.alloc)._field_Dest);
			goto _julec_label_1b49b866c;
		};
		_1ad276b13_stop(_self_);
		_1ad2772b7_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_16347_i)++;
	if ((_16347_i >= _162730_tokens.len())) {
		_1ad276b13_stop(_self_);
		_1ad2772b7_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		(*_16457_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1ad276b13_stop(_self_);
		_1ad2772b7_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1b49b866c:;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _16837_bodyTokens = _1ad274e85_range(&(_16347_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_162730_tokens));;
	if ((_16837_bodyTokens == nullptr)) {
		_1ad276b13_stop(_self_);
		_1ad2772b7_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16347_i < _162730_tokens.len())) {
		_1ad2772b7_pushErr(_self_, _162730_tokens[_16347_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_16457_ipl.alloc)._field_End=_162730_tokens[(_16347_i - 1LL)];
	_1ad284857_parseImplBody(_self_, &(_16457_ipl), &(_16837_bodyTokens));
	return _16457_ipl;;
}



inline jule::Any _1ad284ed9_buildNodeData(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _169835_tokens) {
	jule::Ptr<_1ac4912c3_Token> _16997_token = (*(_169835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_16997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b49bd83c:;
			{
				jule::Ptr<_1ac4b843d_FnDecl> _17038_f = _1ad27d455_buildFn(_self_, _169835_tokens, false, false);;
				if ((_17038_f != nullptr)) {
					(*_17038_f.alloc)._field_Global=true;
				};
				return jule::Any(_17038_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b49be024:;
			{
				return jule::Any(_1ad27a089_buildVar(_self_, (*(_169835_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b49be08a:;
			{
				return jule::Any(_1ad27920e_buildTypeAliasDecl(_self_, _169835_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1b49bd452:;
			{
				return _1ad2817cc_buildNodeEnumDecl(_self_, _169835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b49bd4b8:;
			{
				return jule::Any(_1ad2822a0_buildStructDecl(_self_, _169835_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1b49bd52e:;
			{
				return jule::Any(_1ad282c0c_buildTraitDecl(_self_, _169835_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1b49bd595:;
			{
				return jule::Any(_1ad284b98_buildImpl(_self_, (*(_169835_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b49bd61c:;
			{
				return _1ad2841a3_buildBind(_self_, _169835_tokens);;
			}
		}
		else {
			_case_begin_1b49bd155:;
			{
				_1ad2772b7_pushErr(_self_.ptr(), _16997_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b49bd3db:;
	};
}



inline void _1ad285292_applyFnMeta(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4b843d_FnDecl>* _173132_f) {
	(*((*(_173132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1ad28554a_applyMeta(_1ad2767d3_parser* _self_, _1ac4a577c_Node* _173630_node) {
	{
		auto &_match_expr{ (*(_173630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b49c5338:;
			{
				jule::Ptr<_1ac4b95e8_VarDecl> _17398_v = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1ac4b95e8_VarDecl>();;
				if ((_17398_v == nullptr)) {
					return;;
				};
				(*(_17398_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b49c5091:;
			{
				jule::Ptr<_1ac4b843d_FnDecl> _17468_f = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1ac4b843d_FnDecl>();;
				if ((_17468_f == nullptr)) {
					return;;
				};
				_1ad285292_applyFnMeta(_self_, &(_17468_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b49c53d2:;
			{
				jule::Ptr<_1ac4c2546_StructDecl> _17528_sd = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1ac4c2546_StructDecl>();;
				if ((_17528_sd == nullptr)) {
					return;;
				};
				(*(_17528_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1b49c52a0:;
	};
}



inline void _1ad285803_pushUseDecl(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac4be884_UseDecl>* _176133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4be884_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_176133_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1ad2772b7_pushErr(_self_, (*((*(_176133_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1ad27762a_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ad285b44_pushMetaNodes(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _176935_tokens) {
	{
		auto &_match_expr{ (*((*(_176935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1b49cb97c:;
			{
				;
				jule::Ptr<_1ac4be884_UseDecl> _17738_decl = _1ad27ed80_buildUseDecl(_self_.ptr(), (*(_176935_tokens)), false);;
				_1ad285803_pushUseDecl(_self_, &(_17738_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b49cba04:;
			{
				if ((((*(_176935_tokens)).len() > 1LL) && ((*((*(_176935_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1ac4be884_UseDecl> _17789_decl = _1ad283d62_buildBindUse(_self_, (*(_176935_tokens)));;
					_1ad285803_pushUseDecl(_self_, &(_17789_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1b49cba6a:;
			{
				_1ad278065_pushDirective(_self_.ptr(), _1ad277cac_buildDirective(_self_, (*(_176935_tokens))));
				return true;;
			}
		}
		_match_end_1b49cb86c:;
	};
	return false;;
}



inline _1ac4a577c_Node _1ad285e85_parseNode(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _178931_st) {
	_1ac4a577c_Node _17907_node = _1ac4a577c_Node{._field_Token=(*(_178931_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1ad285b44_pushMetaNodes(_self_, _178931_st)) {
		return _17907_node;;
	};
	jule::Any _17987_data = _1ad284ed9_buildNodeData(_self_, _178931_st);;
	if ((_17987_data == nullptr)) {
		return _17907_node;;
	};
	_17907_node._field_Data=_17987_data;
	_1ad28554a_applyMeta(_self_, &(_17907_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1ad2772b7_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _17907_node;;
}



inline void _1ad28623d_appendNode(jule::Ptr<_1ad2767d3_parser> _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _181332_st) {
	if (((*(_181332_st)).len() == 0LL)) {
		return;;
	};
	_1ac4a577c_Node _18177_node = _1ad285e85_parseNode(_self_, _181332_st);;
	if (((_18177_node._field_Data != nullptr) && (!(_1ad276d99_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1ac4a577c_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _18177_node; __jule_collection; }));
	};
}



inline void _1ad286716_removeRange(_1ad2767d3_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges) {
	jule::U64 _18243_close = _1ad27598b_getCloseOfBrace(_182335_id);;
	for (; (_182327_i >= 0LL); (_182327_i)--) {
		{
			jule::Ptr<_1ac4912c3_Token> _18264_tok = (*(_182349_tokens))[(*(_182372_ranges))[_182327_i]];;
			if (((*(_18264_tok))._field_Id != _18243_close)) {
				goto _iter_next_1b49d6c2e;
			};
			(*(_182372_ranges))=jule::append((*(_182372_ranges)).slice(0LL, _182327_i),(*(_182372_ranges)).slice((_182327_i + 1LL)));
			goto _iter_end_1b49d6c2e;
		}
	_iter_next_1b49d6c2e:;
	}
	_iter_end_1b49d6c2e:;;
}



inline void _1ad286b34_pushWrongOrderCloseErr(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4912c3_Token>* _183539_t, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges) {
	{
		auto &_match_expr{ (*((*(_183551_tokens))[(*(_183570_ranges))[((*(_183570_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1b49d913d:;
			{
				_1ad2772b7_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b49d91b5:;
			{
				_1ad2772b7_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1b49d922b:;
			{
				_1ad2772b7_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b49d902d:;
	};
}



inline void _1ad28710c_pushRangeClose(_1ad2767d3_parser* _self_, jule::Ptr<_1ac4912c3_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges) {
	jule::I64 _18473_n = (*(_184680_ranges)).len();;
	if ((_18473_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1b49dc240:;
				{
					_1ad2772b7_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1b49dc2b7:;
				{
					_1ad2772b7_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1b49dc32d:;
				{
					_1ad2772b7_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1b49dc174:;
		};
		return;;
	} else if (((*((*(_184657_tokens))[(*(_184680_ranges))[(_18473_n - 1LL)]]))._field_Id != _184641_left)) {
		_1ad286b34_pushWrongOrderCloseErr(_self_, &(_184630_t), _184657_tokens, _184680_ranges);
	};
	_1ad286716_removeRange(_self_, (_18473_n - 1LL), (*(_184630_t))._field_Id, _184657_tokens, _184680_ranges);
}



inline void _1ad2873b5_checkRanges(_1ad2767d3_parser* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _186428_tokens) {
	jule::Slice<jule::I64> _186511_ranges = nullptr;;
	{
		auto expr = _186428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49e060b:;
		if (it != expr_end) {
			jule::I64 _18677_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> *_186710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b49e14a8:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _186511_ranges; __jule_push_dest.push(_18677_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b49e1541:;
						{
							_1ad28710c_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(74LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1b49e15a7:;
						{
							_1ad28710c_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(72LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b49e161d:;
						{
							_1ad28710c_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(76LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					_match_end_1b49e13dc:;
				};
			}
			_iter_next_1b49e060b:;
			++it;
			_18677_i++;
			goto _iter_begin_1b49e060b;
		}
		_iter_end_1b49e060b:;
	};
	{
		auto expr = &(_186511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49e06d8:;
		if (it != expr_end) {
			jule::I64 _188210_i = *it;
			{
				jule::Ptr<_1ac4912c3_Token> _18834_token = (*(_186428_tokens))[_188210_i];;
				{
					auto &_match_expr{ (*(_18834_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b49e44cd:;
						{
							_1ad2772b7_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b49e4544:;
						{
							_1ad2772b7_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b49e45aa:;
						{
							_1ad2772b7_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1b49e4247:;
				};
			}
			_iter_next_1b49e06d8:;
			++it;
			goto _iter_begin_1b49e06d8;
		}
		_iter_end_1b49e06d8:;
	};
}



inline void _1ad28766d_parse(jule::Ptr<_1ad2767d3_parser> _self_, jule::Ptr<_1ac496a59_File>* _189527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1ac4a4869_AST>(_1ac4a4869_AST{._field_File=(*(_189527_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1ac4be884_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1ac4a577c_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1ad265bbd_exprBuilder>(_1ad265bbd_exprBuilder{._field_p=_self_});
	_1ad2873b5_checkRanges(_self_, &((*((*(_189527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ad2578b3_stmt>> _19087_stmts = _1ad257c6a_splitStmts(&((*((*(_189527_f))))._field_Tokens));;
	jule::I64 _19117_i = 0LL;;
	for (; (_19117_i < _19087_stmts.len()); (_19117_i)++) {
		{
			jule::Ptr<_1ad2578b3_stmt> _19138_stmt = _19087_stmts[_19117_i];;
			if (((*(_19138_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_19138_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1b49e83c2;
			};
			if ((!(_1b08b863c_IsTopDirective((*((*_19138_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1b49e83c2;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad277cac_buildDirective(_self_, (*_19138_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1b49e83c2:;
	}
	_iter_end_1b49e83c2:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_19117_i < _19087_stmts.len()) && (!(_1ad276d99_stopped(_self_)))); (_19117_i)++) {
		{
			jule::Ptr<_1ad2578b3_stmt> _19308_stmt = _19087_stmts[_19117_i];;
			_1ad28623d_appendNode(_self_, &((*(_19308_stmt))._field_tokens));
		}
	_iter_next_1b49eb3c5:;
	}
	_iter_end_1b49eb3c5:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1ad2772b7_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1ad288ecc_pushErr(_1ad288905_typeBuilder* _self_, jule::Ptr<_1ac4912c3_Token> _4123_token, jule::Str _4138_fmt) {
	if ((*(_self_))._field_err) {
		_1ad2772b7_pushErr((*(_self_))._field_p.ptr(), _4123_token, _4138_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1ad289340_pushSuggestion(_1ad288905_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args) {
	if ((*(_self_))._field_err) {
		_1ad27762a_pushSuggestion((*(_self_))._field_p.ptr(), _4830_fmt, _4843_args);
	};
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad2895c6_buildNamespace(_1ad288905_typeBuilder* _self_) {
	jule::Ptr<_1ac4a677d_TypeDecl> _557_t = jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1ac4a752b_NamespaceTypeDecl> _597_nst = jule::new_ptr<_1ac4a752b_NamespaceTypeDecl>(_1ac4a752b_NamespaceTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr), ._field_Kind=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr)});;
	jule::I64 _607_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ac4912c3_Token> _628_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_607_n & 1LL) == 0LL)) {
				if (((*(_628_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1ad288ecc_pushErr(_self_, _628_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					_1ad289340_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				};
				(*_597_nst.alloc)._field_Idents=jule::append((*_597_nst.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4912c3_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _628_token; __jule_collection; }));
			} else if (((*(_628_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1b4a01cb0;
			};
			(_607_n)++;
		}
	_iter_next_1b4a01cb0:;
	}
	_iter_end_1b4a01cb0:;;
	((*(_597_nst))._field_Idents).mut_slice(0LL, ((*(_597_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_597_nst.alloc)._field_Kind=_1ad289d79_buildIdent(_self_);
	(*(_557_t))._field_Kind=jule::Any(_597_nst, &__jule_any_type93);
	return _557_t;;
}



inline jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _1ad28985c_buildGenerics(_1ad288905_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ac4912c3_Token> _883_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_883_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _937_parts = _1ad289ae3_identGenerics(_self_);;
	if ((_937_parts.len() == 0LL)) {
		_1ad288ecc_pushErr(_self_, _883_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> _997_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>::alloc(0LL, _937_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4a677d_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a09504:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _10015_part = *it;
			{
				jule::I64 _1018_j = 0LL;;
				jule::Ptr<_1ac4a677d_TypeDecl> _1028_t;
				({
					__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType((*(_self_))._field_p, &(_10015_part), (&(_1018_j)), true);
					_1028_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_1018_j < _10015_part.len())) {
					_1ad288ecc_pushErr(_self_, _10015_part[_1018_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>> &__jule_push_dest = _997_types; __jule_push_dest.push(_1028_t); };
			}
			_iter_next_1b4a09504:;
			++it;
			goto _iter_begin_1b4a09504;
		}
		_iter_end_1b4a09504:;
	};
	return _997_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1ad289ae3_identGenerics(_1ad288905_typeBuilder* _self_) {
	jule::I64 _1123_first = (*((*(_self_))._field_i));;
	jule::I64 _1137_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ac4912c3_Token> _1154_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1154_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1b4a0d78e:;
					{
						(_1137_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1b4a0dabe:;
					{
						(_1137_rangeN)--;
					}
				}
				_match_end_1b4a0d816:;
			};
			if ((_1137_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1b4a0c969;
			};
		}
	_iter_next_1b4a0c969:;
	}
	_iter_end_1b4a0c969:;;
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _1277_tokens = (*(_self_))._field_tokens.slice((_1123_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1287_parts;
	jule::Slice<_1b08b6838_Log> _12814_errors;
	({
		__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad275705_parts(&(_1277_tokens), static_cast<jule::U64>(5LLU), true);
		_1287_parts = __jule_assign_result.__jule_result_arg0;
		_12814_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12814_errors);
	};
	return _1287_parts;;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad289d79_buildIdent(_1ad288905_typeBuilder* _self_) {
	jule::Bool _1367_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1367_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1ad2895c6_buildNamespace(_self_);;
	};
	jule::Ptr<_1ac4912c3_Token> _1407_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ac4a6d88_IdentTypeDecl> _1417_it = jule::new_ptr<_1ac4a6d88_IdentTypeDecl>(_1ac4a6d88_IdentTypeDecl{._field_Token=_1407_token, ._field_Ident=(*(_1407_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ac4a677d_TypeDecl> _1477_itd = jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1417_it, &__jule_any_type77)});;
	if (((!(_1367_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1417_it))._field_Generics=_1ad28985c_buildGenerics(_self_);
		return _1477_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1ad288ecc_pushErr(_self_, _1407_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1477_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1ad288ecc_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1477_itd;;
	};
	jule::Ptr<_1ac4a7152_SubIdentTypeDecl> _1647_sit = jule::new_ptr<_1ac4a7152_SubIdentTypeDecl>(_1ac4a7152_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1ac4a6d88_IdentTypeDecl>>(nullptr)});;
	(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a6d88_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1417_it; __jule_collection; }));
	jule::Ptr<_1ac4a677d_TypeDecl> _1667_ident = _1ad289d79_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1667_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b4a19745:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a6d88_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1667_ident))._field_Kind.cast_ptr<_1ac4a6d88_IdentTypeDecl>(&__jule_any_type77); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b4a13b4b:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,(*((*(_1667_ident))._field_Kind.unsafe_cast_ptr<_1ac4a7152_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1b4a196bd:;
	};
	return jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1647_sit, &__jule_any_type89)});;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28a110_buildCppLink(_1ad288905_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1ad288ecc_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1ac4a677d_TypeDecl> _1857_t = _1ad289d79_buildIdent(_self_);;
	(*((*(_1857_t))._field_Kind.cast_ptr<_1ac4a6d88_IdentTypeDecl>(&__jule_any_type77)))._field_Binded=true;
	return _1857_t;;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28a396_buildFn(_1ad288905_typeBuilder* _self_) {
	jule::Ptr<_1ac4912c3_Token> _1917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ac4b843d_FnDecl> _1927_f = _1ad27ce9e_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1927_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac4b87d4_IsAnon(_1927_f.ptr())))) {
		_1ad288ecc_pushErr(_self_, (*(_1927_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=_1917_token, ._field_Kind=jule::Any(_1927_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28a62c_buildPtr(_1ad288905_typeBuilder* _self_) {
	jule::Ptr<_1ac4912c3_Token> _2067_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ad288ecc_pushErr(_self_, _2067_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1ac4a82a7_PtrTypeDecl>(_1ac4a82a7_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type73)});;
	};
	jule::Ptr<_1ac4a677d_TypeDecl> _2237_elem = _1ad28b683_step(_self_);;
	if ((_2237_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1ac4a82a7_PtrTypeDecl>(_1ac4a82a7_PtrTypeDecl{._field_Elem=_2237_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28a8b3_buildSptr(_1ad288905_typeBuilder* _self_) {
	jule::Ptr<_1ac4912c3_Token> _2377_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ad288ecc_pushErr(_self_, _2377_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ac4a677d_TypeDecl> _2447_elem = _1ad28b683_step(_self_);;
	if ((_2447_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=_2377_token, ._field_Kind=jule::Any(jule::new_ptr<_1ac4a7828_SptrTypeDecl>(_1ac4a7828_SptrTypeDecl{._field_Elem=_2447_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28ab49_buildSlc(_1ad288905_typeBuilder* _self_) {
	jule::Ptr<_1ac4912c3_Token> _2587_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ac4a677d_TypeDecl> _2607_elem = _1ad28b683_step(_self_);;
	if ((_2607_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=_2587_token, ._field_Kind=jule::Any(jule::new_ptr<_1ac4a7bad_SlcTypeDecl>(_1ac4a7bad_SlcTypeDecl{._field_Elem=_2607_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28add0_buildArr(_1ad288905_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _2737_exprTokens = _1ad274e85_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ad288ecc_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1ac4a677d_TypeDecl> _2797_elem = _1ad28b683_step(_self_);;
	if ((_2797_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac4a8a49_ArrTypeDecl> _2847_arrt = jule::new_ptr<_1ac4a8a49_ArrTypeDecl>(_1ac4a8a49_ArrTypeDecl{._field_Elem=_2797_elem, ._field_Size=jule::Ptr<_1ac4aaab2_Expr>(nullptr)});;
	jule::Ptr<_1ac4912c3_Token> _2887_token = _2737_exprTokens[0LL];;
	if (((_2737_exprTokens.len() == 1LL) && ((*(_2887_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2847_arrt))._field_Size=_1ad27796b_buildExpr((*(_self_))._field_p, &(_2737_exprTokens));
	};
	return jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=_2887_token, ._field_Kind=jule::Any(_2847_arrt, &__jule_any_type71)});;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28b166_buildMap(_1ad288905_typeBuilder* _self_) {
	jule::Ptr<_1ac4912c3_Token> _3027_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ad288ecc_pushErr(_self_, _3027_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _3107_keyTokens = _1ad274e85_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ad288ecc_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3107_keyTokens.len() == 0LL)) {
		_1ad288ecc_pushErr(_self_, _3027_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1ac4a9297_MapTypeDecl> _3197_mapt = jule::new_ptr<_1ac4a9297_MapTypeDecl>(_1ac4a9297_MapTypeDecl{._field_Key=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr)});;
	jule::I64 _3207_j = 0LL;;
	jule::Ptr<_1ac4a677d_TypeDecl> _3217_keyt;
	jule::Bool _32117_ok;
	({
		__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType((*(_self_))._field_p, &(_3107_keyTokens), (&(_3207_j)), (*(_self_))._field_err);
		_3217_keyt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	} else if ((_3207_j < _3107_keyTokens.len())) {
		_1ad288ecc_pushErr(_self_, _3107_keyTokens[_3207_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3197_mapt.alloc)._field_Key=_3217_keyt;
	jule::Ptr<_1ac4a677d_TypeDecl> _3297_valt;
	({
		__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad278dbd_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3297_valt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	};
	(*_3197_mapt.alloc)._field_Val=_3297_valt;
	return jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=_3027_mapToken, ._field_Kind=jule::Any(_3197_mapt, &__jule_any_type75)});;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28b3ec_buildEnumerable(_1ad288905_typeBuilder* _self_) {
	jule::Ptr<_1ac4912c3_Token> _3417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1ad288ecc_pushErr(_self_, _3417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3417_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3417_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1ad28ab49_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1ad28add0_buildArr(_self_);;
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad28b683_step(_1ad288905_typeBuilder* _self_) {
	jule::Ptr<_1ac4912c3_Token> _3563_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3563_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b444cd49:;
			{
				return _1ad289d79_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b444d234:;
			{
				return _1ad28a110_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b444d29a:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1ac4a677d_TypeDecl> _3669_f = _1ad28a396_buildFn(_self_);;
					if ((_3669_f != nullptr)) {
						(*((*_3669_f.alloc)._field_Kind.cast_ptr<_1ac4b843d_FnDecl>(&__jule_any_type14)))._field_Unsafety=true;
					};
					return _3669_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b444d311:;
			{
				return _1ad28a396_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b444d377:;
			{
				return _1ad28a62c_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b444d3ee:;
			{
				return _1ad28a8b3_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b444d476:;
			{
				return jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1ac4a7828_SptrTypeDecl>(_1ac4a7828_SptrTypeDecl{._field_Elem=_1ad28a8b3_buildSptr(_self_)}), &__jule_any_type74)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1b444d4ed:;
			{
				return _1ad28b3ec_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1b444d575:;
			{
				return _1ad28b166_buildMap(_self_);;
			}
		}
		_match_end_1b444cdc1:;
	};
	((*((*(_self_))._field_i)))++;
	_1ad288ecc_pushErr(_self_, _3563_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool _1ad28b919_build(_1ad288905_typeBuilder* _self_) {
	__jule_tuple_x_1ac4a677d_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac4a677d_TypeDecl> _3977_root = _1ad28b683_step(_self_);;
	if ((_3977_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ad288174_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3977_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1ac97ac41_CompileInfo_eq(_1ac97ac41_CompileInfo *_self_, _1ac97ac41_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1ac97c79d_pushErr(_1ac97c21a_directiveEval* _self_, jule::Ptr<_1ac4912c3_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args) {
	{ jule::Slice<_1b08b6838_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1b08b6838_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1b08b6c9a_Logf(_2134_fmt, _2147_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1ac97cb99_splitOperans(_1ac97c21a_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _3346_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr); __jule_collection; });;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3346_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1ac4912c3_Token> _394_b = (*(_3346_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b447704e:;
					{
						(_367_rangeN)++;
						goto _iter_next_1b44765c0;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b447737e:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1b44770c6:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1b44765c0;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1b44765c0:;
	}
	_iter_end_1b44765c0:;;
	if ((_377_last < (*(_3346_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last)); };
	} else {
		_1ac97c79d_pushErr(_self_, (*(_3346_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1ac97ceda_evalDirectiveIdent(_1ac97c21a_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4479e42:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1b4479e42:;
			++it;
			goto _iter_begin_1b4479e42;
		}
		_iter_end_1b4479e42:;
	};
	return false;;
}



inline jule::Bool _1ac97d32b_evalDirectivePart(_1ac97c21a_directiveEval* _self_, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1ac97c79d_pushErr(_self_, _7837_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1ac97ceda_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1ac97d5b2_eval(_1ac97c21a_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1ac97c79d_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1047_logicalOrParts = _1ac97cb99_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b448095e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> _1118_logicalAndParts = _1ac97cb99_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4482488:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1ac4912c3_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1ac4912c3_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1ac4912c3_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1ac97c79d_pushErr(_self_, _1175_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1ac97d32b_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1b4482488:;
						++it;
						goto _iter_begin_1b4482488;
					}
					_iter_end_1b4482488:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1b448095e:;
			++it;
			goto _iter_begin_1b448095e;
		}
		_iter_end_1b448095e:;
	};
	return _1027_result;;
}







inline jule::Ptr<_1ad28c8e8_JuleImporter> static__1ad28cd27_New(_1ac97ac41_CompileInfo _5816_info) {
	jule::Ptr<_1ad28c8e8_JuleImporter> _597_imp = jule::new_ptr<_1ad28c8e8_JuleImporter>(_1ad28c8e8_JuleImporter{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b0398529_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1ac97b5c1_initVars(&((*(_597_imp))._field_vars), &(_5816_info));
	return _597_imp;;
}



inline jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>> _1ad28d0ad_AllPackages(_1ad28c8e8_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1ad28d4ed_SetModPath(_1ad28c8e8_JuleImporter* _self_, jule::Str _7526_path) {
	(*(_self_))._field_mod=_7526_path;
}



inline jule::Str _1ad28d784_GetModPath(_1ad28c8e8_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1ad28dac5_ModById(_1ad28c8e8_JuleImporter* _self_, jule::I64 _8319_id) {
	return (*(_self_))._field_mods[_8319_id];;
}



inline jule::Ptr<_1ac557cd5_ImportInfo> _1ad28de16_GetImport(_1ad28c8e8_JuleImporter* _self_, jule::Str _8725_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4488912:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _8815_p = *it;
			{
				if (_1b09872cc_EqualFold((*(_8815_p))._field_Path, _8725_path)) {
					return _8815_p;;
				};
			}
			_iter_next_1b4488912:;
			++it;
			goto _iter_begin_1b4488912;
		}
		_iter_end_1b4488912:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log _1ad28e312_ImportPackage(_1ad28c8e8_JuleImporter* _self_, jule::Str _9729_path, jule::Bool _9740_updateMod) {
	__jule_tuple_sx_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1ae66a753_DirEntry>> _987_dirents = ({
		auto except = static__1b098c2e3_Read(_9729_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1b08b6838_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad28c40e_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _9729_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_1ae66a753_DirEntry>>(nullptr);});
	});;
	if (_9740_updateMod) {
		jule::Str _1034_newMod = _1ac57462b_FindModuleFileDeep(_9729_path);;
		if ((_1034_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_1034_newMod;
			jule::Slice<_1b08b6838_Log> _1069_errs = _1ac5748e5_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_1069_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _1069_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1ac4a4869_AST>> _1137_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4a4869_AST>>::alloc(0LL, _987_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4a4869_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_987_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b448ab45:;
		if (it != expr_end) {
			jule::Ptr<_1ae66a753_DirEntry> _11410_dirent = *it;
			{
				if ((_1ae66eb20_IsDir((*(_11410_dirent))._field_Stat.ptr()) || (!(_1b0967345_HasSuffix((*_11410_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1b448ab45;
				};
				jule::Str _1204__path = _1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _9729_path; (*it++) = (*_11410_dirent.alloc)._field_Name; __jule_collection; }));;
				jule::Ptr<_1ac496a59_File> _1218_file = _1ac497e34_NewFileSet(_1204__path);;
				_1ac496eaa_Fill(_1218_file.ptr(), _1ad28c101_readBuff((*_1218_file.alloc)._field_Path));
				jule::Slice<_1b08b6838_Log> _1238_errors = _1ac4a4418_Lex(_1218_file, static_cast<jule::I64>(0LL));;
				if ((_1238_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1238_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ad20bd0c_FileInfo> _1288_finfo = _1ad20eace_ParseFile(_1218_file);;
				if (((*(_1288_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1288_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ac9603c9_isPassFileAnnotation((*_11410_dirent.alloc)._field_Name)))) {
					goto _iter_next_1b448ab45;
				};
				jule::Bool _1384_r;
				jule::Slice<_1b08b6838_Log> _13811_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad28e9e9_isPassBuildDirectives(_self_, &((*_1288_finfo.alloc)._field_Ast));
					_1384_r = __jule_assign_result.__jule_result_arg0;
					_13811_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13811_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13811_logs;
					return __jule_func_result;;
				};
				if ((!(_1384_r))) {
					goto _iter_next_1b448ab45;
				};
				{ jule::Slice<jule::Ptr<_1ac4a4869_AST>> &__jule_push_dest = _1137_asts; __jule_push_dest.push((*_1288_finfo.alloc)._field_Ast); };
			}
			_iter_next_1b448ab45:;
			++it;
			goto _iter_begin_1b448ab45;
		}
		_iter_end_1b448ab45:;
	};
	__jule_func_result.__jule_result_arg0 = _1137_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ad28e5ba_Imported(_1ad28c8e8_JuleImporter* _self_, jule::Ptr<_1ac557cd5_ImportInfo> _15428_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b448cc79:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _15610_p = *it;
			{
				if ((((*(_15610_p))._field_Binded == (*(_15428_imp))._field_Binded) && _1b09872cc_EqualFold((*_15610_p.alloc)._field_Path, (*_15428_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1b448cc79:;
			++it;
			goto _iter_begin_1b448cc79;
		}
		_iter_end_1b448cc79:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b44953be:;
			if (it != expr_end) {
				jule::I64 _1648_i = it - expr->begin();
				jule::Str _16411_mod = *it;
				{
					if (((*(_self_))._field_mod == _16411_mod)) {
						(*_15428_imp.alloc)._field_ModId=_1648_i;
						goto _julec_label_1b4494a1c;
					};
				}
				_iter_next_1b44953be:;
				++it;
				_1648_i++;
				goto _iter_begin_1b44953be;
			}
			_iter_end_1b44953be:;
		};
		(*_15428_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1b4494a1c:;
	};
	{ jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15428_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1b08b6838_Log _1ad28e9e9_isPassBuildDirectives(_1ad28c8e8_JuleImporter* _self_, jule::Ptr<_1ac4a4869_AST>* _18142_file) {
	__jule_tuple_bool__jule_tuple_s_1b08b6838_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_18142_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b448cc35:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a5b9a_Directive> _18215_td = *it;
			{
				if (((*((*(_18215_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1b448cc35;
				};
				_1ac97c21a_directiveEval _1868_de = _1ac97c21a_directiveEval{._field_logs=jule::Slice<_1b08b6838_Log>(nullptr), ._field_d=_18215_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1904_result = _1ac97d5b2_eval(&_1868_de);;
				if ((_1868_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1868_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1904_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1b448cc35:;
			++it;
			goto _iter_begin_1b448cc35;
		}
		_iter_end_1b448cc35:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline jule::Ptr<_1ad2941d5_ExprInspector> static__1ad29457b_New(void) {
	return jule::new_ptr<_1ad2941d5_ExprInspector>(_1ad2941d5_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1ad294834_args(_1ad2941d5_ExprInspector* _self_, jule::Slice<jule::Any> _5524_args) {
	{
		auto expr = &(_5524_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44e0073:;
		if (it != expr_end) {
			jule::Any _5615_arg = *it;
			{
				_1ad294adc_inspect(_self_, &(_5615_arg));
			}
			_iter_next_1b44e0073:;
			++it;
			goto _iter_begin_1b44e0073;
		}
		_iter_end_1b44e0073:;
	};
}



inline void _1ad294adc_inspect(_1ad2941d5_ExprInspector* _self_, jule::Any* _6128_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_6128_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6128_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b44e1492:;
			{
				jule::Ptr<_1ac4ce7ea_BinaryExprModel> _698_b = (*(_6128_m)).cast_ptr<_1ac4ce7ea_BinaryExprModel>(&__jule_any_type113);;
				_1ad294adc_inspect(_self_, &((*((*(_698_b))._field_Left))._field_Model));
				_1ad294adc_inspect(_self_, &((*((*_698_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b44e1618:;
			{
				jule::Ptr<_1ac4cebc4_UnaryExprModel> _738_u = (*(_6128_m)).cast_ptr<_1ac4cebc4_UnaryExprModel>(&__jule_any_type112);;
				_1ad294adc_inspect(_self_, &((*((*(_738_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b44e1508:;
			{
				jule::Ptr<_1ac4d0598_StructLitExprModel> _768_lit = (*(_6128_m)).cast_ptr<_1ac4d0598_StructLitExprModel>(&__jule_any_type97);;
				{
					auto expr = &((*(_768_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b44e5980:;
					if (it != expr_end) {
						jule::Ptr<_1ac4d0202_StructArgExprModel> _7716_arg = *it;
						{
							_1ad294adc_inspect(_self_, &((*((*(_7716_arg))._field_Expr))._field_Model));
						}
						_iter_next_1b44e5980:;
						++it;
						goto _iter_begin_1b44e5980;
					}
					_iter_end_1b44e5980:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b44e18d2:;
			{
				jule::Ptr<_1ac4d0598_StructLitExprModel> _818_lit = (*((*(_6128_m)).cast_ptr<_1ac4d0895_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
				{
					auto expr = &((*(_818_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b44e7168:;
					if (it != expr_end) {
						jule::Ptr<_1ac4d0202_StructArgExprModel> _8216_arg = *it;
						{
							_1ad294adc_inspect(_self_, &((*((*(_8216_arg))._field_Expr))._field_Model));
						}
						_iter_next_1b44e7168:;
						++it;
						goto _iter_begin_1b44e7168;
					}
					_iter_end_1b44e7168:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b44e1948:;
			{
				jule::Ptr<_1ac4d0e28_CastingExprModel> _868_c = (*(_6128_m)).cast_ptr<_1ac4d0e28_CastingExprModel>(&__jule_any_type95);;
				_1ad294adc_inspect(_self_, &((*((*(_868_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b44e19ae:;
			{
				jule::Ptr<_1ac4d17ca_FnCallExprModel> _898_fc = (*(_6128_m)).cast_ptr<_1ac4d17ca_FnCallExprModel>(&__jule_any_type40);;
				_1ad294adc_inspect(_self_, &((*(_898_fc))._field_Expr));
				_1ad294834_args(_self_, (*_898_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b44e1a25:;
			{
				jule::Ptr<_1ac4d1ba4_SliceExprModel> _938_s = (*(_6128_m)).cast_ptr<_1ac4d1ba4_SliceExprModel>(&__jule_any_type79);;
				_1ad294834_args(_self_, (*(_938_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b44e1a8b:;
			{
				jule::Ptr<_1ac4d4adb_ArrayExprModel> _968_a = (*(_6128_m)).cast_ptr<_1ac4d4adb_ArrayExprModel>(&__jule_any_type87);;
				_1ad294834_args(_self_, (*(_968_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b44e1b13:;
			{
				jule::Ptr<_1ac4d215a_IndexingExprModel> _998_i = (*(_6128_m)).cast_ptr<_1ac4d215a_IndexingExprModel>(&__jule_any_type52);;
				_1ad294adc_inspect(_self_, &((*((*(_998_i))._field_Expr))._field_Model));
				_1ad294adc_inspect(_self_, &((*((*_998_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b44e1b8a:;
			{
				jule::Ptr<_1ac4d2db4_MapExprModel> _1038_mp = (*(_6128_m)).cast_ptr<_1ac4d2db4_MapExprModel>(&__jule_any_type101);;
				{
					auto expr = &((*(_1038_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b44ed6e1:;
					if (it != expr_end) {
						jule::Ptr<_1ac4d29da_KeyValPairExprModel> _10416_entry = *it;
						{
							_1ad294adc_inspect(_self_, &((*(_10416_entry))._field_Key));
							_1ad294adc_inspect(_self_, &((*_10416_entry.alloc)._field_Val));
						}
						_iter_next_1b44ed6e1:;
						++it;
						goto _iter_begin_1b44ed6e1;
					}
					_iter_end_1b44ed6e1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b44e1c12:;
			{
				jule::Ptr<_1ac4d3447_SlicingExprModel> _1098_s = (*(_6128_m)).cast_ptr<_1ac4d3447_SlicingExprModel>(&__jule_any_type94);;
				_1ad294adc_inspect(_self_, &((*(_1098_s))._field_Expr));
				_1ad294adc_inspect(_self_, &((*_1098_s.alloc)._field_Left));
				if (((*_1098_s.alloc)._field_Right != nullptr)) {
					_1ad294adc_inspect(_self_, &((*_1098_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b44e1c89:;
			{
				jule::Ptr<_1ac4d39ca_TraitSubIdentExprModel> _1168_t = (*(_6128_m)).cast_ptr<_1ac4d39ca_TraitSubIdentExprModel>(&__jule_any_type99);;
				_1ad294adc_inspect(_self_, &((*(_1168_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b44e1d11:;
			{
				jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _1198_s = (*(_6128_m)).cast_ptr<_1ac4d436b_StructSubIdentExprModel>(&__jule_any_type100);;
				_1ad294adc_inspect(_self_, &((*((*(_1198_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b44e1d88:;
			{
				jule::Ptr<_1ac4d4dd8_TupleExprModel> _1228_t = (*(_6128_m)).cast_ptr<_1ac4d4dd8_TupleExprModel>(&__jule_any_type83);;
				{
					auto expr = &((*(_1228_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b45032b7:;
					if (it != expr_end) {
						jule::Ptr<_1ac60a55d_Data> _12316_d = *it;
						{
							_1ad294adc_inspect(_self_, &((*(_12316_d))._field_Model));
						}
						_iter_next_1b45032b7:;
						++it;
						goto _iter_begin_1b45032b7;
					}
					_iter_end_1b45032b7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b44e1e10:;
			{
				jule::Ptr<_1ac4d5a65_BuiltinNewCallExprModel> _1278_b = (*(_6128_m)).cast_ptr<_1ac4d5a65_BuiltinNewCallExprModel>(&__jule_any_type115);;
				if (((*(_1278_b))._field_Init != nullptr)) {
					_1ad294adc_inspect(_self_, &((*_1278_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b44e1e87:;
			{
				jule::Ptr<_1ac4d52b2_BuiltinOutCallExprModel> _1328_c = (*(_6128_m)).cast_ptr<_1ac4d52b2_BuiltinOutCallExprModel>(&__jule_any_type34);;
				_1ad294adc_inspect(_self_, &((*((*(_1328_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b44e200e:;
			{
				jule::Ptr<_1ac4d568b_BuiltinOutlnCallExprModel> _1358_c = (*(_6128_m)).cast_ptr<_1ac4d568b_BuiltinOutlnCallExprModel>(&__jule_any_type35);;
				_1ad294adc_inspect(_self_, &((*((*(_1358_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b44e2086:;
			{
				jule::Ptr<_1ac4d5e3e_BuiltinPanicCallExprModel> _1388_c = (*(_6128_m)).cast_ptr<_1ac4d5e3e_BuiltinPanicCallExprModel>(&__jule_any_type36);;
				_1ad294adc_inspect(_self_, &((*(_1388_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b44e210d:;
			{
				jule::Ptr<_1ac4d7a45_BuiltinErrorCallExprModel> _1418_c = (*(_6128_m)).cast_ptr<_1ac4d7a45_BuiltinErrorCallExprModel>(&__jule_any_type30);;
				_1ad294adc_inspect(_self_, &((*((*(_1418_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b44e2185:;
			{
				jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel> _1448_b = (*(_6128_m)).cast_ptr<_1ac4d63e5_BuiltinMakeCallExprModel>(&__jule_any_type116);;
				if (((*(_1448_b))._field_Len != nullptr)) {
					_1ad294adc_inspect(_self_, &((*_1448_b.alloc)._field_Len));
				};
				if (((*_1448_b.alloc)._field_Cap != nullptr)) {
					_1ad294adc_inspect(_self_, &((*_1448_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b44e220c:;
			{
				jule::Ptr<_1ac4d67be_BuiltinAppendCallExprModel> _1528_b = (*(_6128_m)).cast_ptr<_1ac4d67be_BuiltinAppendCallExprModel>(&__jule_any_type33);;
				_1ad294adc_inspect(_self_, &((*(_1528_b))._field_Dest));
				_1ad294adc_inspect(_self_, &((*_1528_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b44e2284:;
			{
				jule::Ptr<_1ac4d6abb_BuiltinLenCallExprModel> _1568_l = (*(_6128_m)).cast_ptr<_1ac4d6abb_BuiltinLenCallExprModel>(&__jule_any_type117);;
				_1ad294adc_inspect(_self_, &((*((*(_1568_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b44e230b:;
			{
				jule::Ptr<_1ac4d6db8_BuiltinCapCallExprModel> _1598_c = (*(_6128_m)).cast_ptr<_1ac4d6db8_BuiltinCapCallExprModel>(&__jule_any_type118);;
				_1ad294adc_inspect(_self_, &((*((*(_1598_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b44e2383:;
			{
				jule::Ptr<_1ac4d7292_BuiltinDeleteCallExprModel> _1628_b = (*(_6128_m)).cast_ptr<_1ac4d7292_BuiltinDeleteCallExprModel>(&__jule_any_type38);;
				_1ad294adc_inspect(_self_, &((*((*(_1628_b))._field_Dest))._field_Model));
				if (((*_1628_b.alloc)._field_Key != nullptr)) {
					_1ad294adc_inspect(_self_, &((*(*(_1628_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b44e240a:;
			{
				jule::Ptr<_1ac4d7d42_SizeofExprModel> _1688_s = (*(_6128_m)).cast_ptr<_1ac4d7d42_SizeofExprModel>(&__jule_any_type119);;
				_1ad294adc_inspect(_self_, &((*(_1688_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b44e2482:;
			{
				jule::Ptr<_1ac4d84e6_AlignofExprModel> _1718_a = (*(_6128_m)).cast_ptr<_1ac4d84e6_AlignofExprModel>(&__jule_any_type120);;
				_1ad294adc_inspect(_self_, &((*(_1718_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b44e2509:;
			{
				jule::Ptr<_1ac4d8d54_FreeExprModel> _1748_f = (*(_6128_m)).cast_ptr<_1ac4d8d54_FreeExprModel>(&__jule_any_type39);;
				_1ad294adc_inspect(_self_, &((*(_1748_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b44e2581:;
			{
				jule::Ptr<_1ac4d8a57_BackendEmitExprModel> _1778_e = (*(_6128_m)).cast_ptr<_1ac4d8a57_BackendEmitExprModel>(&__jule_any_type32);;
				_1ad294834_args(_self_, (*(_1778_e))._field_Exprs);
			}
		}
		_match_end_1b44e142b:;
	};
}



inline void _1ad294e50_Inspect(_1ad2941d5_ExprInspector* _self_, jule::Any* _18528_m, jule::Fn<void,jule::Any*> _18542_f) {
	(*(_self_))._field_handler=_18542_f;
	_1ad294adc_inspect(_self_, _18528_m);
}












inline jule::Bool _1ad3d480e_specialCaseDefines_eq(_1ad3d480e_specialCaseDefines *_self_, _1ad3d480e_specialCaseDefines _other_) {
	return 
		(_self_->_field_runtime_Map == _other_._field_runtime_Map) &&
		(_self_->_field_runtime_mapIterator == _self_->_field_runtime_mapIterator);
}

inline jule::Bool _1ad3d4b72_isAllMethodsLive(_1ad3d480e_specialCaseDefines* _self_, jule::Ptr<_1ac4c767d_Struct> _3028_s) {
	return ((_3028_s == (*(_self_))._field_runtime_Map) || (_3028_s == (*(_self_))._field_runtime_mapIterator));;
}











inline jule::Ptr<_1ad3d56cd_ObjectDeadCode> static__1ad3d5c50_new(jule::Ptr<_1ad29028b_IR>* _5021_ir) {
	return jule::new_ptr<_1ad3d56cd_ObjectDeadCode>(_1ad3d56cd_ObjectDeadCode{._field_live=_1ad3d5227_liveTable{._field_vars=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1ac4dee04_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1ac4ca4d8_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1ac5008a4_Trait>>(nullptr)}, ._field_ir=(*(_5021_ir)), ._field_scd=_1ad3d480e_specialCaseDefines{._field_runtime_Map=jule::Ptr<_1ac4c767d_Struct>(nullptr), ._field_runtime_mapIterator=jule::Ptr<_1ac4c767d_Struct>(nullptr)}});;
}



inline jule::Bool _1b4a6001b_isLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _5627_t) {
	jule::Slice<jule::Ptr<_1ac4ca4d8_StructIns>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1b4a61b88:;
			{
				_5711_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1b4a61a56:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a61abc:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1b4a61abc:;
			++it;
			_687_i++;
			goto _iter_begin_1b4a61abc;
		}
		_iter_end_1b4a61abc:;
	};
	return false;;
}

inline jule::Bool _1b4a66e13_isLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4dee04_FnIns>* _5627_t) {
	jule::Slice<jule::Ptr<_1ac4dee04_FnIns>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1b4a689c5:;
			{
				_5711_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1b4a68909:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a68970:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1b4a68970:;
			++it;
			_687_i++;
			goto _iter_begin_1b4a68970;
		}
		_iter_end_1b4a68970:;
	};
	return false;;
}

inline jule::Bool _1b4a8da3e_isLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac5008a4_Trait>* _5627_t) {
	jule::Slice<jule::Ptr<_1ac5008a4_Trait>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1b4a90722:;
			{
				_5711_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1b4a90579:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a917de:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1b4a917de:;
			++it;
			_687_i++;
			goto _iter_begin_1b4a917de;
		}
		_iter_end_1b4a917de:;
	};
	return false;;
}

inline jule::Bool _1b4a98c69_isLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac5a2527_Var>* _5627_t) {
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1b4a9a60b:;
			{
				_5711_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1b4a9a760:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a9b299:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1b4a9b299:;
			++it;
			_687_i++;
			goto _iter_begin_1b4a9b299;
		}
		_iter_end_1b4a9b299:;
	};
	return false;;
}



inline void _1b4a60923_pushLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4ca4d8_StructIns> _7632_t) {
	{
		
{
			_case_begin_1b4a64031:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4ca4d8_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1b4a62c88:;
	};
}

inline void _1b4a67320_pushLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4dee04_FnIns> _7632_t) {
	{
		
{
			_case_begin_1b4a6b4de:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4dee04_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1b4a6a8d9:;
	};
}

inline void _1b4a8e446_pushLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac5008a4_Trait> _7632_t) {
	{
		
{
			_case_begin_1b4a928ab:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5008a4_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1b4a9115c:;
	};
}

inline void _1b4a99121_pushLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac5a2527_Var> _7632_t) {
	{
		
{
			_case_begin_1b4a9cd8e:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1b4a9b8d7:;
	};
}



inline void _1ad3d65be_pushStructAsLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _8938_s) {
	if (_1b4a6001b_isLive(_self_, _8938_s)) {
		return;;
	};
	_1b4a60923_pushLive(_self_, (*(_8938_s)));
	_1ad3d6877_setReferencesAsLive(_self_, &((*((*(_8938_s))))._field_Refers));
	jule::Bool _953_allLive = _1ad3d4b72_isAllMethodsLive(&(*_self_.alloc)._field_scd, (*((*(_8938_s))))._field_Decl);;
	{
		auto expr = &((*((*(_8938_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a654a5:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _9615_m = *it;
			{
				{
					auto expr = &((*(_9615_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4a65e01:;
					if (it != expr_end) {
						jule::Ptr<_1ac4dee04_FnIns> _9716_ins = *it;
						{
							if (_1b4a66e13_isLive(_self_, &(_9716_ins))) {
								goto _iter_next_1b4a65e01;
							};
							if (_953_allLive) {
								_1b4a67320_pushLive(_self_, _9716_ins);
								_1ad3d6877_setReferencesAsLive(_self_, &((*(_9716_ins))._field_Refers));
								goto _iter_next_1b4a65e01;
							};
							if (_1ad296c76_IsTraitMethod(_8938_s, &(_9716_ins))) {
								_1b4a67320_pushLive(_self_, _9716_ins);
								_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
							};
							;
							;
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Eq)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Gt)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_GtEq)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Lt)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_LtEq)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Shl)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Shr)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Add)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Sub)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Div)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Mul)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Mod)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitAnd)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitOr)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitXor)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Neg)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Pos)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitNot)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_AddAssign)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_SubAssign)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_DivAssign)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_MulAssign)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ModAssign)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ShlAssign)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ShrAssign)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitOrAssign)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitAndAssign)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitXorAssign)) {
									_1b4a67320_pushLive(_self_, _9716_ins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1ac4dbd46_Fn> _1359_dispose = _1ac4cb583_FindMethod((*(_8938_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
							if (((_1359_dispose != nullptr) && static__1ac5a3b22_Dispose(_1359_dispose))) {
								jule::Ptr<_1ac4dee04_FnIns> _13710_fins = (*_1359_dispose.alloc)._field_Instances[0LL];;
								_1b4a67320_pushLive(_self_, _13710_fins);
								_1ad3d6877_setReferencesAsLive(_self_, &((*(_13710_fins))._field_Refers));
							};
							jule::Ptr<_1ac4dbd46_Fn> _1429__str = _1ac4cb583_FindMethod((*(_8938_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1429__str != nullptr) && static__1ac5a3ddb_Str(_1429__str))) {
								jule::Ptr<_1ac4dee04_FnIns> _14410_fins = (*(_1429__str))._field_Instances[0LL];;
								_1b4a67320_pushLive(_self_, _14410_fins);
								_1ad3d6877_setReferencesAsLive(_self_, &((*(_14410_fins))._field_Refers));
							};
						}
						_iter_next_1b4a65e01:;
						++it;
						goto _iter_begin_1b4a65e01;
					}
					_iter_end_1b4a65e01:;
				};
			}
			_iter_next_1b4a654a5:;
			++it;
			goto _iter_begin_1b4a654a5;
		}
		_iter_end_1b4a654a5:;
	};
}



inline void _1ad3d6877_setReferencesAsLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac4e308e_ReferenceStack>* _15241_rs) {
	if (((*(_15241_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _1567_i = 0LL;;
	for (; (_1567_i < _1ac4e37a9_Len((*(_15241_rs)).ptr())); (_1567_i)++) {
		{
			jule::Any _1588_ref = _1ac4e3aea_At((*(_15241_rs)).ptr(), _1567_i);;
			{
				auto &_match_expr{ _1588_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1b4a8c730:;
					{
						jule::Ptr<_1ac5008a4_Trait> _1619_t = _1588_ref.unsafe_cast_ptr<_1ac5008a4_Trait>();;
						if (_1b4a8da3e_isLive(_self_, &(_1619_t))) {
							goto _iter_next_1b4a8b90a;
						};
						_1b4a8e446_pushLive(_self_, _1619_t);
						{
							auto expr = &((*(_1619_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b4a8d456:;
							if (it != expr_end) {
								jule::Ptr<_1ac4dbd46_Fn> _16617_ins = *it;
								{
									{
										auto expr = &((*(_16617_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b4a924b0:;
										if (it != expr_end) {
											jule::Ptr<_1ac4dee04_FnIns> _16718_mins = *it;
											{
												if (_1b4a66e13_isLive(_self_, &(_16718_mins))) {
													goto _iter_next_1b4a924b0;
												};
												_1b4a67320_pushLive(_self_, _16718_mins);
												_1ad3d6877_setReferencesAsLive(_self_, &((*(_16718_mins))._field_Refers));
											}
											_iter_next_1b4a924b0:;
											++it;
											goto _iter_begin_1b4a924b0;
										}
										_iter_end_1b4a924b0:;
									};
								}
								_iter_next_1b4a8d456:;
								++it;
								goto _iter_begin_1b4a8d456;
							}
							_iter_end_1b4a8d456:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1b4a8c565:;
					{
						jule::Ptr<_1ac4dee04_FnIns> _1769_f = _1588_ref.unsafe_cast_ptr<_1ac4dee04_FnIns>();;
						if (_1b4a66e13_isLive(_self_, &(_1769_f))) {
							goto _match_end_1b4a8c5dc;
						};
						if ((((*(_1769_f))._field_Owner != nullptr) && (!((*((*_1769_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1b4a6001b_isLive(_self_, &((*_1769_f.alloc)._field_Owner))))) {
								_1b4a60923_pushLive(_self_, (*_1769_f.alloc)._field_Owner);
								_1ad3d6877_setReferencesAsLive(_self_, &((*(*(_1769_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1b4a67320_pushLive(_self_, _1769_f);
						_1ad3d6877_setReferencesAsLive(_self_, &((*_1769_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1b4a8c796:;
					{
						jule::Ptr<_1ac5a2527_Var> _1899_v = _1588_ref.unsafe_cast_ptr<_1ac5a2527_Var>();;
						if (_1b4a98c69_isLive(_self_, &(_1899_v))) {
							goto _match_end_1b4a8c5dc;
						};
						_1b4a99121_pushLive(_self_, _1899_v);
						_1ad3d6877_setReferencesAsLive(_self_, &((*(_1899_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1b4a8c80c:;
					{
						jule::Ptr<_1ac4ca4d8_StructIns> _1969_s = _1588_ref.unsafe_cast_ptr<_1ac4ca4d8_StructIns>();;
						_1ad3d65be_pushStructAsLive(_self_, &(_1969_s));
					}
				}
				_match_end_1b4a8c5dc:;
			};
		}
	_iter_next_1b4a8b90a:;
	}
	_iter_end_1b4a8b90a:;;
}



inline void _1ad3d6b30_inits(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac55ac0b_Package>* _20227_pkg) {
	{
		auto expr = &((*((*(_20227_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a8ba92:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _20315_file = *it;
			{
				{
					auto expr = &((*(_20315_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4aa02d1:;
					if (it != expr_end) {
						jule::Ptr<_1ac4dbd46_Fn> _20416_f = *it;
						{
							if ((*(_20416_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1ac4dee04_FnIns> _20610_ins = (*(_20416_f))._field_Instances[0LL];;
								if ((!(_1b4a66e13_isLive(_self_, &(_20610_ins))))) {
									_1b4a67320_pushLive(_self_, _20610_ins);
								};
								_1ad3d6877_setReferencesAsLive(_self_, &((*(_20610_ins))._field_Refers));
							};
						}
						_iter_next_1b4aa02d1:;
						++it;
						goto _iter_begin_1b4aa02d1;
					}
					_iter_end_1b4aa02d1:;
				};
			}
			_iter_next_1b4a8ba92:;
			++it;
			goto _iter_begin_1b4a8ba92;
		}
		_iter_end_1b4a8ba92:;
	};
}



inline void _1ad3d6dd8_collectLivePackage(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac55ac0b_Package>* _21640_pkg) {
	_1ad3d6b30_inits(_self_, _21640_pkg);
	_1ad292e4d_IterFiles(_21640_pkg, jule::__new_closure<void,jule::Ptr<_1ac604d93_SymbolTable>*>((void*)__jule_anon_1b4aa30c5, jule::Ptr<__jule_anon_1b4aa30c5_ctx>::make(__jule_anon_1b4aa30c5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b4aa30c5_ctx_handler));
	if (_1b03a0d6c_Test) {
		if ((((*((*(_21640_pkg))))._field_Files.len() > 0LL) && _1ad2970ea_IsStdPackage((*((*((*((*(_21640_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1ac4c767d_Struct> _2469_s = _1ac55bdc7_FindStruct((*(_21640_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1ac4ca4d8_StructIns> _2479_ins = (*(_2469_s))._field_Instances[0LL];;
			_1ad3d65be_pushStructAsLive(_self_, &(_2479_ins));
			{
				auto expr = &((*(_2479_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b4aa9609:;
				if (it != expr_end) {
					jule::Ptr<_1ac4dbd46_Fn> _24917_m = *it;
					{
						{
							auto expr = &((*(_24917_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b4aaa176:;
							if (it != expr_end) {
								jule::Ptr<_1ac4dee04_FnIns> _25018_mins = *it;
								{
									if (_1b4a66e13_isLive(_self_, &(_25018_mins))) {
										goto _iter_next_1b4aaa176;
									};
									_1b4a67320_pushLive(_self_, _25018_mins);
									_1ad3d6877_setReferencesAsLive(_self_, &((*(_25018_mins))._field_Refers));
								}
								_iter_next_1b4aaa176:;
								++it;
								goto _iter_begin_1b4aaa176;
							}
							_iter_end_1b4aaa176:;
						};
					}
					_iter_next_1b4aa9609:;
					++it;
					goto _iter_begin_1b4aa9609;
				}
				_iter_end_1b4aa9609:;
			};
		};
		{
			auto expr = &((*((*(_21640_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4aa6161:;
			if (it != expr_end) {
				jule::Ptr<_1ac604d93_SymbolTable> _25916_file = *it;
				{
					{
						auto expr = &((*(_25916_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b4aac83d:;
						if (it != expr_end) {
							jule::Ptr<_1ac4dbd46_Fn> _26017_f = *it;
							{
								if (_1ad2984b4_HasDirective(&((*(_26017_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1ac4dee04_FnIns> _26211_ins = (*_26017_f.alloc)._field_Instances[0LL];;
									if ((!(_1b4a66e13_isLive(_self_, &(_26211_ins))))) {
										_1b4a67320_pushLive(_self_, _26211_ins);
									};
									_1ad3d6877_setReferencesAsLive(_self_, &((*(_26211_ins))._field_Refers));
								};
							}
							_iter_next_1b4aac83d:;
							++it;
							goto _iter_begin_1b4aac83d;
						}
						_iter_end_1b4aac83d:;
					};
				}
				_iter_next_1b4aa6161:;
				++it;
				goto _iter_begin_1b4aa6161;
			}
			_iter_end_1b4aa6161:;
		};
	};
}



inline void _1ad3d70d6_collectLive(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4aad553:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _27415_used = *it;
			{
				if ((!((*(_27415_used))._field_Binded))) {
					_1ad3d6dd8_collectLivePackage(_self_, &((*_27415_used.alloc)._field_Package));
				};
			}
			_iter_next_1b4aad553:;
			++it;
			goto _iter_begin_1b4aad553;
		}
		_iter_end_1b4aad553:;
	};
	_1ad3d6dd8_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1ac4dbd46_Fn> _2827_main = _1ac55c2c3_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2827_main != nullptr)) {
		jule::Ptr<_1ac4dee04_FnIns> _2848_ins = (*_2827_main.alloc)._field_Instances[0LL];;
		if ((!(_1b4a66e13_isLive(_self_, &(_2848_ins))))) {
			_1b4a67320_pushLive(_self_, _2848_ins);
		};
		_1ad3d6877_setReferencesAsLive(_self_, &((*(_2848_ins))._field_Refers));
	};
}



inline void _1ad3d738e_removeDeadGlobals(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac5a2527_Var>>* _29239_vars) {
	jule::I64 _2937_i = 0LL;;
	while ((_2937_i < (*(_29239_vars)).len())) {
		{
			jule::Ptr<_1ac5a2527_Var> _2954_v = (*(_29239_vars))[_2937_i];;
			if (_1b4a98c69_isLive(_self_, &(_2954_v))) {
				(_2937_i)++;
				goto _iter_next_1b4ab426d;
			};
			(*(_29239_vars))=jule::append((*(_29239_vars)).slice(0LL, _2937_i),(*(_29239_vars)).slice((_2937_i + 1LL)));
		}
	_iter_next_1b4ab426d:;
	}
	_iter_end_1b4ab426d:;;
}



inline void _1ad3d7647_removeDeadFns(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>* _30435_funcs) {
	jule::I64 _3057_i = 0LL;;
	while ((_3057_i < (*(_30435_funcs)).len())) {
		{
			jule::Ptr<_1ac4dbd46_Fn> _3078_f = (*(_30435_funcs))[_3057_i];;
			jule::I64 _3088_j = 0LL;;
			while ((_3088_j < (*(_3078_f))._field_Instances.len())) {
				{
					jule::Ptr<_1ac4dee04_FnIns> _3105_ins = (*(_3078_f))._field_Instances[_3088_j];;
					if (_1b4a66e13_isLive(_self_, &(_3105_ins))) {
						(_3088_j)++;
						goto _iter_next_1b4ab6b22;
					};
					(*_3078_f.alloc)._field_Instances=jule::append((*_3078_f.alloc)._field_Instances.slice(0LL, _3088_j),(*_3078_f.alloc)._field_Instances.slice((_3088_j + 1LL)));
				}
			_iter_next_1b4ab6b22:;
			}
			_iter_end_1b4ab6b22:;;
			if (((*_3078_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_30435_funcs))=jule::append((*(_30435_funcs)).slice(0LL, _3057_i),(*(_30435_funcs)).slice((_3057_i + 1LL)));
				goto _iter_next_1b4ab5b43;
			};
			(_3057_i)++;
		}
	_iter_next_1b4ab5b43:;
	}
	_iter_end_1b4ab5b43:;;
}



inline void _1ad3d7900_removeDeadStructs(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac4c767d_Struct>>* _32539_structs) {
	jule::I64 _3267_i = 0LL;;
	while ((_3267_i < (*(_32539_structs)).len())) {
		{
			jule::Ptr<_1ac4c767d_Struct> _3288_s = (*(_32539_structs))[_3267_i];;
			jule::I64 _3298_j = 0LL;;
			while ((_3298_j < (*(_3288_s))._field_Instances.len())) {
				{
					jule::Ptr<_1ac4ca4d8_StructIns> _3319_ins = (*(_3288_s))._field_Instances[_3298_j];;
					_1ad3d7647_removeDeadFns(_self_, &((*(_3319_ins))._field_Methods));
					if ((((*_3319_ins.alloc)._field_Methods.len() != 0LL) || _1b4a6001b_isLive(_self_, &(_3319_ins)))) {
						(_3298_j)++;
						goto _iter_next_1b4aba7c4;
					};
					(*_3288_s.alloc)._field_Instances=jule::append((*_3288_s.alloc)._field_Instances.slice(0LL, _3298_j),(*_3288_s.alloc)._field_Instances.slice((_3298_j + 1LL)));
				}
			_iter_next_1b4aba7c4:;
			}
			_iter_end_1b4aba7c4:;;
			if (((*_3288_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_32539_structs))=jule::append((*(_32539_structs)).slice(0LL, _3267_i),(*(_32539_structs)).slice((_3267_i + 1LL)));
				goto _iter_next_1b4ab997c;
			};
			(_3267_i)++;
		}
	_iter_next_1b4ab997c:;
	}
	_iter_end_1b4ab997c:;;
}



inline void _1ad3d7ba8_removeDeadTraits(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac5008a4_Trait>>* _34738_traits) {
	jule::I64 _3487_i = 0LL;;
	while ((_3487_i < (*(_34738_traits)).len())) {
		{
			jule::Ptr<_1ac5008a4_Trait> _3508_t = (*(_34738_traits))[_3487_i];;
			if ((!(_1b4a8da3e_isLive(_self_, &(_3508_t))))) {
				(*(_34738_traits))=jule::append((*(_34738_traits)).slice(0LL, _3487_i),(*(_34738_traits)).slice((_3487_i + 1LL)));
				goto _iter_next_1b4abe18a;
			};
			jule::I64 _3558_j = 0LL;;
			while ((_3558_j < (*(_3508_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1ac4c767d_Struct> _3575_s = (*(_3508_t))._field_Implemented[_3558_j];;
					if (((*(_3575_s))._field_Instances.len() > 0LL)) {
						(_3558_j)++;
						goto _iter_next_1b4abead6;
					};
					(*_3508_t.alloc)._field_Implemented=jule::append((*_3508_t.alloc)._field_Implemented.slice(0LL, _3558_j),(*_3508_t.alloc)._field_Implemented.slice((_3558_j + 1LL)));
				}
			_iter_next_1b4abead6:;
			}
			_iter_end_1b4abead6:;;
			(_3487_i)++;
		}
	_iter_next_1b4abe18a:;
	}
	_iter_end_1b4abe18a:;;
}



inline void _1ad3d7e61_removeDeadsFile(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac604d93_SymbolTable>* _36837_file) {
	_1ad3d7647_removeDeadFns(_self_, &((*((*(_36837_file))))._field_Funcs));
	_1ad3d7900_removeDeadStructs(_self_, &((*((*(_36837_file))))._field_Structs));
	_1ad3d7ba8_removeDeadTraits(_self_, &((*((*(_36837_file))))._field_Traits));
	_1ad3d738e_removeDeadGlobals(_self_, &((*((*(_36837_file))))._field_Vars));
}



inline void _1ad3d8219_removeDeadsPackage(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_, jule::Ptr<_1ac55ac0b_Package>* _37540_pkg) {
	{
		auto expr = &((*((*(_37540_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4ac469b:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _37615_file = *it;
			{
				_1ad3d7e61_removeDeadsFile(_self_, &(_37615_file));
			}
			_iter_next_1b4ac469b:;
			++it;
			goto _iter_begin_1b4ac469b;
		}
		_iter_end_1b4ac469b:;
	};
}



inline void _1ad3d8417_removeDeads(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4ac4e3d:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _38215_used = *it;
			{
				if ((!((*(_38215_used))._field_Binded))) {
					_1ad3d8219_removeDeadsPackage(_self_, &((*_38215_used.alloc)._field_Package));
				};
			}
			_iter_next_1b4ac4e3d:;
			++it;
			goto _iter_begin_1b4ac4e3d;
		}
		_iter_end_1b4ac4e3d:;
	};
	_1ad3d8219_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1ad3d8615_collectSpecialCaseDefines(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_) {
	(*(_self_))._field_scd._field_runtime_Map=_1ac8cc984_RuntimeFindStruct(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));
	(*_self_.alloc)._field_scd._field_runtime_mapIterator=_1ac8cc984_RuntimeFindStruct(&((*(*(_self_))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));
}



inline void _1ad3d8813_elimanate(jule::Ptr<_1ad3d56cd_ObjectDeadCode> _self_) {
	_1ad3d8615_collectSpecialCaseDefines(_self_);
	_1ad3d70d6_collectLive(_self_);
	_1ad3d8417_removeDeads(_self_);
}








inline jule::Bool _1ad3d9803_scopeDeadCode_eq(_1ad3d9803_scopeDeadCode *_self_, _1ad3d9803_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1ad3d9d20_optimizeChild(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac534ec1_Scope>* _3935_s) {
	jule::Ptr<_1ad3d9803_scopeDeadCode> _407_sdc = jule::new_ptr<_1ad3d9803_scopeDeadCode>(_1ad3d9803_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1ad3dc73a_optimizeStmts(_407_sdc);
	};
}



inline void _1ad3da0c8_optimizeBodyChildExceptional(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac534ec1_Scope>* _4950_s) {
	jule::Ptr<_1ad3d9803_scopeDeadCode> _507_sdc = jule::new_ptr<_1ad3d9803_scopeDeadCode>(_1ad3d9803_scopeDeadCode{._field_parent=jule::Ptr<_1ad3d9803_scopeDeadCode>(nullptr), ._field_s=(*(_4950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1ad3dc73a_optimizeStmts(_507_sdc);
	};
}



inline void _1ad3da381_optimizeBodyChild(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac534ec1_Scope>* _5939_s) {
	jule::Ptr<_1ad3d9803_scopeDeadCode> _607_sdc = jule::new_ptr<_1ad3d9803_scopeDeadCode>(_1ad3d9803_scopeDeadCode{._field_parent=jule::Ptr<_1ad3d9803_scopeDeadCode>(nullptr), ._field_s=(*(_5939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1ad3dc73a_optimizeStmts(_607_sdc);
	};
}



inline void _1ad3da639_optimizeExprModel(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Any* _6839_model) {
	_1ad3dde9a_exprDeadCode _693_edc = static__1ad3de363_new(&(_self_));;
	_1ad3de61b_optimize(&_693_edc, _6839_model);
}



inline void _1ad3da837_eliminateFollowed(_1ad3d9803_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1ad3d9803_scopeDeadCode> _807_parent = (*(_self_))._field_parent;;
	while ((_807_parent != nullptr)) {
		{
			{
				((*((*(_807_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_807_parent))._field_i + 1LL));;
			};
			_807_parent=(*_807_parent.alloc)._field_parent;
		}
	_iter_next_1b4ad72c4:;
	}
	_iter_end_1b4ad72c4:;;
}



inline void _1ad3daae0_pushGoto(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac53817d_GotoSt> _8929_gt) {
	jule::I64 _907_i = 0LL;;
	for (; (_907_i < (*((*(_self_))._field_labels)).len()); (_907_i)++) {
		{
			if (((*(_8929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_907_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b4ada607:;
	}
	_iter_end_1b4ada607:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac53817d_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _8929_gt; __jule_collection; }));
}



inline void _1ad3dad98_pushLabel(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac537a1d_Label> _9930_l) {
	jule::I64 _1007_i = 0LL;;
	while ((_1007_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_9930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_1007_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_1007_i), (*((*(_self_))._field_gotos)).slice((_1007_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1b4adc807;
			};
			(_1007_i)++;
		}
	_iter_next_1b4adc807:;
	}
	_iter_end_1b4adc807:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac537a1d_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _9930_l; __jule_collection; }));
}



inline void _1ad3db151_optimizeRangeIter(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac536d08_RangeIter> _11238_it) {
	_1ad3da639_optimizeExprModel(_self_, &((*((*(_11238_it))._field_Expr))._field_Model));
	_1ad3da381_optimizeBodyChild(_self_, &((*_11238_it.alloc)._field_Scope));
}



inline void _1ad3db409_optimizeWhileIter(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac5363ac_WhileIter> _11738_it) {
	_1ad3da639_optimizeExprModel(_self_, &((*(_11738_it))._field_Expr));
	if (((*_11738_it.alloc)._field_Next != nullptr)) {
		_1ad3dc53c_optimizeStmt(_self_, (*_11738_it.alloc)._field_Next);
	};
	_1ad3da381_optimizeBodyChild(_self_, &((*_11738_it.alloc)._field_Scope));
}



inline void _1ad3db6b2_optimizeInfIter(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac535e06_InfIter> _12536_it) {
	_1ad3da381_optimizeBodyChild(_self_, &((*(_12536_it))._field_Scope));
}



inline void _1ad3db96a_optimizeConditional(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac535b09_Conditional> _12940_c) {
	{
		auto expr = &((*(_12940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4ae45bc:;
		if (it != expr_end) {
			jule::Ptr<_1ac5353de_If> _13015_case = *it;
			{
				if ((_13015_case != nullptr)) {
					_1ad3da639_optimizeExprModel(_self_, &((*_13015_case.alloc)._field_Expr));
					_1ad3da381_optimizeBodyChild(_self_, &((*_13015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1b4ae45bc:;
			++it;
			goto _iter_begin_1b4ae45bc;
		}
		_iter_end_1b4ae45bc:;
	};
	if (((*_12940_c.alloc)._field_Default != nullptr)) {
		if (((*_12940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1ad3d9d20_optimizeChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1ad3da381_optimizeBodyChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1ad3dbc23_optimizeMatch(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac539701_Match> _14734_m) {
	{
		auto expr = &((*(_14734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4ae7b53:;
		if (it != expr_end) {
			jule::Ptr<_1ac53a229_Case> _14815_case = *it;
			{
				{
					auto expr = &((*(_14815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4ae85d2:;
					if (it != expr_end) {
						jule::Ptr<_1ac60a55d_Data> _14916_expr = *it;
						{
							_1ad3da639_optimizeExprModel(_self_, &((*(_14916_expr))._field_Model));
						}
						_iter_next_1b4ae85d2:;
						++it;
						goto _iter_begin_1b4ae85d2;
					}
					_iter_end_1b4ae85d2:;
				};
				_1ad3da381_optimizeBodyChild(_self_, &((*_14815_case.alloc)._field_Scope));
			}
			_iter_next_1b4ae7b53:;
			++it;
			goto _iter_begin_1b4ae7b53;
		}
		_iter_end_1b4ae7b53:;
	};
	if (((*_14734_m.alloc)._field_Default != nullptr)) {
		if (((*_14734_m.alloc)._field_Cases.len() == 0LL)) {
			_1ad3d9d20_optimizeChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1ad3da381_optimizeBodyChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1ad3dbecb_optimizeAssign(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac538a0d_Assign> _16535_assign) {
	_1ad3da639_optimizeExprModel(_self_, &((*((*(_16535_assign))._field_Left))._field_Model));
	_1ad3da639_optimizeExprModel(_self_, &((*((*_16535_assign.alloc)._field_Right))._field_Model));
}



inline void _1ad3dc284_optimizeMultiAssign(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Ptr<_1ac538eb4_MultiAssign> _17040_assign) {
	{
		auto expr = &((*(_17040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4aec99e:;
		if (it != expr_end) {
			jule::Ptr<_1ac60a55d_Data> _17115_l = *it;
			{
				if ((_17115_l != nullptr)) {
					_1ad3da639_optimizeExprModel(_self_, &((*_17115_l.alloc)._field_Model));
				};
			}
			_iter_next_1b4aec99e:;
			++it;
			goto _iter_begin_1b4aec99e;
		}
		_iter_end_1b4aec99e:;
	};
	_1ad3da639_optimizeExprModel(_self_, &((*_17040_assign.alloc)._field_Right));
}



inline void _1ad3dc53c_optimizeStmt(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_, jule::Any _17933_st) {
	{
		auto &_match_expr{ _17933_st };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b4aee64e:;
			{
				jule::Ptr<_1ac534ec1_Scope> _1828_scope = _17933_st.unsafe_cast_ptr<_1ac534ec1_Scope>();;
				if ((*(_1828_scope))._field_Deferred) {
					_1ad3dca37_eliminateDeadCodeOfScope(_1828_scope);
				} else {
					_1ad3d9d20_optimizeChild(_self_, &(_1828_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b4aee3b8:;
			{
				_1ad3db151_optimizeRangeIter(_self_, _17933_st.cast_ptr<_1ac536d08_RangeIter>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b4aee6c6:;
			{
				_1ad3db409_optimizeWhileIter(_self_, _17933_st.cast_ptr<_1ac5363ac_WhileIter>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b4aee74d:;
			{
				_1ad3db6b2_optimizeInfIter(_self_, _17933_st.cast_ptr<_1ac535e06_InfIter>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b4aee7c5:;
			{
				_1ad3db96a_optimizeConditional(_self_, _17933_st.cast_ptr<_1ac535b09_Conditional>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b4aee84c:;
			{
				_1ad3dbc23_optimizeMatch(_self_, _17933_st.cast_ptr<_1ac539701_Match>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b4aee8c4:;
			{
				_1ad3dbecb_optimizeAssign(_self_, _17933_st.cast_ptr<_1ac538a0d_Assign>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b4aee94b:;
			{
				_1ad3dc284_optimizeMultiAssign(_self_, _17933_st.cast_ptr<_1ac538eb4_MultiAssign>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b4aee9c3:;
			{
				jule::Ptr<_1ac60a55d_Data> _2038_d = _17933_st.unsafe_cast_ptr<_1ac60a55d_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1b4aee4ea;
				};
				{
					auto &_match_expr{ (*(_2038_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type36) {
						_case_begin_1b4b05259:;
						{
							_1ad3da837_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1b4b058ca:;
						{
							_1ad3da639_optimizeExprModel(_self_, &((*(_2038_d))._field_Model));
						}
					}
					_match_end_1b4b05864:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b4aeea4a:;
			{
				_1ad3da837_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b4aeeac2:;
			{
				_1ad3daae0_pushGoto(_self_, _17933_st.cast_ptr<_1ac53817d_GotoSt>(&__jule_any_type48));
				_1ad3da837_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b4aeeb49:;
			{
				_1ad3dad98_pushLabel(_self_, _17933_st.cast_ptr<_1ac537a1d_Label>(&__jule_any_type28));
			}
		}
		_match_end_1b4aee4ea:;
	};
}



inline void _1ad3dc73a_optimizeStmts(jule::Ptr<_1ad3d9803_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1ad3dc53c_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1b4b085ae:;
	}
	_iter_end_1b4b085ae:;;
}








inline jule::Bool _1ad3dde9a_exprDeadCode_eq(_1ad3dde9a_exprDeadCode *_self_, _1ad3dde9a_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1ad3dde9a_exprDeadCode static__1ad3de363_new(jule::Ptr<_1ad3d9803_scopeDeadCode>* _1821_s) {
	return _1ad3dde9a_exprDeadCode{._field_s=(*(_1821_s))};;
}



inline void _1ad3de61b_optimize(_1ad3dde9a_exprDeadCode* _self_, jule::Any* _2425_model) {
	jule::Ptr<_1ad2941d5_ExprInspector> _257_inspector = static__1ad29457b_New();;
	_1ad294e50_Inspect(_257_inspector.ptr(), _2425_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1b4b11067, jule::Ptr<__jule_anon_1b4b11067_ctx>::make(__jule_anon_1b4b11067_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b4b11067_ctx_handler));
}








inline jule::Bool _1ac738559_ExceptionalForwardingExprModel_eq(_1ac738559_ExceptionalForwardingExprModel *_self_, _1ac738559_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ac7388de_SwapExprModel_eq(_1ac7388de_SwapExprModel *_self_, _1ac7388de_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1ac738cb8_EmptyCompareExprModel_eq(_1ac738cb8_EmptyCompareExprModel *_self_, _1ac738cb8_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1ac73913c_RefExprModel_eq(_1ac73913c_RefExprModel *_self_, _1ac73913c_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1ac7395b0_StrCompExprModel_eq(_1ac7395b0_StrCompExprModel *_self_, _1ac7395b0_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1ac739b43_MutSlicingExprModel_eq(_1ac739b43_MutSlicingExprModel *_self_, _1ac739b43_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1ac739e40_UnsafeBinaryExprModel_eq(_1ac739e40_UnsafeBinaryExprModel *_self_, _1ac739e40_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1ac73a2c5_UnsafeIndexingExprModel_eq(_1ac73a2c5_UnsafeIndexingExprModel *_self_, _1ac73a2c5_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1ac73a69e_PushToSliceExprModel_eq(_1ac73a69e_PushToSliceExprModel *_self_, _1ac73a69e_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1ac73aa78_AppendToSliceExprModel_eq(_1ac73aa78_AppendToSliceExprModel *_self_, _1ac73aa78_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1ac73ae52_StrRuneIter_eq(_1ac73ae52_StrRuneIter *_self_, _1ac73ae52_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1ac73b24e_UnsafeDerefExprModel_eq(_1ac73b24e_UnsafeDerefExprModel *_self_, _1ac73b24e_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1ac73b54b_UnsafeCastingExprModel_eq(_1ac73b54b_UnsafeCastingExprModel *_self_, _1ac73b54b_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1ac73c22d_nilVar_eq(_1ac73c22d_nilVar *_self_, _1ac73c22d_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1ac73ca14_pushVar(_1ac73c56e_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe) {
	if (((!(_1ad2b20e3_Access)) || (_2923_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49014b7:;
		if (it != expr_end) {
			_1ac73c22d_nilVar _3415_v = *it;
			{
				if ((_3415_v._field_var == _2923_var)) {
					_3415_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1b49014b7:;
			++it;
			goto _iter_begin_1b49014b7;
		}
		_iter_end_1b49014b7:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4902144:;
		if (it != expr_end) {
			_1ac73c22d_nilVar _4115_v = *it;
			{
				if ((_4115_v._field_var == 0LLU)) {
					_4115_v._field_var=_2923_var;
					_4115_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1b4902144:;
			++it;
			goto _iter_begin_1b4902144;
		}
		_iter_end_1b4902144:;
	};
	{ jule::Slice<_1ac73c22d_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1ac73c22d_nilVar{._field_var=_2923_var, ._field_safe=_2937_safe}); };
}



inline jule::Bool _1ac73cd55_removeVar(_1ac73c56e_nils* _self_, jule::Uintptr _5225_var) {
	if ((_5225_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4903e7b:;
			if (it != expr_end) {
				_1ac73c22d_nilVar _5416_v = *it;
				{
					if ((_5416_v._field_var == _5225_var)) {
						_5416_v._field_var=0LLU;
						_5416_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1b4903e7b:;
				++it;
				goto _iter_begin_1b4903e7b;
			}
			_iter_end_1b4903e7b:;
		};
	};
	return false;;
}



inline jule::Bool _1ac73d196_isSafe(_1ac73c56e_nils* _self_, jule::Uintptr _6622_var) {
	if ((_6622_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4905620:;
			if (it != expr_end) {
				_1ac73c22d_nilVar _6811_v = *it;
				{
					if ((_6811_v._field_var == _6622_var)) {
						return _6811_v._field_safe;;
					};
				}
				_iter_next_1b4905620:;
				++it;
				goto _iter_begin_1b4905620;
			}
			_iter_end_1b4905620:;
		};
	};
	return false;;
}








inline jule::Bool _1ad29beac_scopeOptimizer_eq(_1ad29beac_scopeOptimizer *_self_, _1ad29beac_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1ad29beac_scopeOptimizer> static__1ad29c562_new(jule::Ptr<_1ac534ec1_Scope> _5120_scope) {
	jule::Ptr<_1ad29beac_scopeOptimizer> _527_sc = jule::new_ptr<_1ad29beac_scopeOptimizer>(_1ad29beac_scopeOptimizer{._field_parent=jule::Ptr<_1ad29beac_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_5120_scope, ._field_data=jule::new_ptr<_1ad2abd68_data>(_1ad2abd68_data{._field_boundary=jule::new_ptr<_1ad2ad7e8_boundary>(_1ad2ad7e8_boundary{._field_vars=jule::Slice<_1ad2ad4a7_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1ac73c56e_nils>(_1ac73c56e_nils{._field_vars=jule::Slice<_1ac73c22d_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1ad2a91d9_dynamic>(_1ad2a91d9_dynamic{._field_vars=jule::Slice<_1ad2a8d98_dynamicVar>(nullptr)})})});;
	return _527_sc;;
}



inline void _1ad29c81a_setCurrentStmt(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Any _6335_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6335_stmt))))));
}



inline void _1ad29ca18_removeCurrent(jule::Ptr<_1ad29beac_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1ad29cc9e_isLastStmt(jule::Ptr<_1ad29beac_scopeOptimizer> _self_) {
	jule::Ptr<_1ad29beac_scopeOptimizer> _737_r = _self_;;
	for (; (_737_r != nullptr); _737_r=(*_737_r.alloc)._field_parent) {
		{
			if ((((*((*_737_r.alloc)._field_scope))._field_Stmts.len() - (*_737_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1b491286e:;
	}
	_iter_end_1b491286e:;;
	return true;;
}



inline jule::Bool _1ad29d035_isIter(jule::Ptr<_1ad29beac_scopeOptimizer> _self_) {
	jule::Ptr<_1ad29beac_scopeOptimizer> _837_r = (*(_self_))._field_parent;;
	for (; (_837_r != nullptr); _837_r=(*_837_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_837_r))._field_scope))._field_Stmts[(*(_837_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type46 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type42) {
					_case_begin_1b49151bd:;
					{
						return true;;
					}
				}
				_match_end_1b4915124:;
			};
		}
	_iter_next_1b4913c9e:;
	}
	_iter_end_1b4913c9e:;;
	return false;;
}



inline void _1ad29d2dd_optimizeData(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac60a55d_Data> _9533_d) {
	{
		auto &_match_expr{ (*(_9533_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b4916400:;
			{
				jule::Ptr<_1ac4d17ca_FnCallExprModel> _988_m = (*(_9533_d))._field_Model.unsafe_cast_ptr<_1ac4d17ca_FnCallExprModel>();;
				if (_1b03a1730_Production) {
					if (((!(_1ac4e13bc_IsBuiltin((*(_988_m))._field_Func.ptr()))) && _1ad2970ea_IsStdPackage((*((*((*((*(*(_988_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1ad29c81a_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1ad2a426c_optimizeData(&((*(_9533_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1ad2b3567_Exceptional && (*(*((*(_988_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_988_m.alloc)._field_Except != nullptr)) && ((*(*(_988_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1ad295c53_IsForwarded(&((*_988_m.alloc)._field_Except))) && _1ad29cc9e_isLastStmt(_self_)) && (!(_1ad29d035_isIter(_self_))))) {
					_1ad29c81a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac738559_ExceptionalForwardingExprModel>(_1ac738559_ExceptionalForwardingExprModel{._field_Expr=_988_m}), &__jule_any_type121));
				};
				return;;
			}
		}
		_match_end_1b4916378:;
	};
	static__1ad2a426c_optimizeData(&((*_9533_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1ad29d596_optimizeVar(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac5a2527_Var> _12132_v) {
	if (((*(_12132_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1ac73dbd0_isNilValidType((*((*_12132_v.alloc)._field_Kind))._field_Kind)) && _1ac73d916_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_12132_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1ac73ca14_pushVar((*((*(_self_))._field_data))._field_nils, _1ac73e021_getNilVar(jule::Any(_12132_v, &__jule_any_type8)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1ac63d2d8_TypeKind> _1309_kind = _1ad2aa9b0_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_12132_v))._field_Kind.alloc)._field_Kind, (*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1309_kind != nullptr)) {
				if (_1ad2aa581_isDynamicValidType((*(*(_12132_v))._field_Kind.alloc)._field_Kind)) {
					_1ad2a967e_pushVar((*((*(_self_))._field_data))._field_dynamic, _1ad2aad01_getDynamicVar(jule::Any(_12132_v, &__jule_any_type8)), _1309_kind);
				};
			};
		};
		static__1ad2a426c_optimizeData(&((*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1ad29d84e_optimizeConditional(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac535b09_Conditional> _14240_c) {
	_1ad2ab86d_dataCheckpoint _1437_checkpoint = _1ad2ac220_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49277a7:;
		if (it != expr_end) {
			jule::Ptr<_1ac5353de_If> _14415_elif = *it;
			{
				static__1ad2a426c_optimizeData(&((*(_14415_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1ad2a14cd_optimizeChild(_self_, (*_14415_elif.alloc)._field_Scope);
				if ((((*(_14240_c))._field_Elifs.len() > 1LL) || ((*_14240_c.alloc)._field_Default != nullptr))) {
					_1ad2ac4c8_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
				};
			}
			_iter_next_1b49277a7:;
			++it;
			goto _iter_begin_1b49277a7;
		}
		_iter_end_1b49277a7:;
	};
	if (((*_14240_c.alloc)._field_Default != nullptr)) {
		_1ad2a14cd_optimizeChild(_self_, (*(*(_14240_c))._field_Default.alloc)._field_Scope);
		_1ad2ac4c8_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
	};
	if ((!(_1ad2b2a1c_Cond))) {
		return;;
	};
	jule::Bool _1607_constCase = false;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b492b437:;
		if (it != expr_end) {
			jule::I64 _1638_i = it - expr->begin();
			jule::Ptr<_1ac5353de_If> _16315_elif = *it;
			{
				if ((!(_1ad2a1a61_isConstantValidConditionalCase(&(_16315_elif))))) {
					goto _iter_next_1b492b437;
				};
				_1607_constCase=true;
				((*(_14240_c))._field_Elifs).mut_slice(0LL, _1638_i);;
				(*_14240_c.alloc)._field_Default=jule::new_ptr<_1ac5356db_Else>(_1ac5356db_Else{._field_Scope=(*(_16315_elif))._field_Scope});
				goto _iter_end_1b492b437;
			}
			_iter_next_1b492b437:;
			++it;
			_1638_i++;
			goto _iter_begin_1b492b437;
		}
		_iter_end_1b492b437:;
	};
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ac5353de_If>* _1807_i = (&((*(_14240_c))._field_Elifs[0LL]));;
	jule::Ptr<_1ac5353de_If>* _1813_end = (&((*_14240_c.alloc)._field_Elifs[((*_14240_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1807_i <= _1813_end); (_1807_i)++) {
		{
			{
				if (_1ad2a2479_isUnreachableConditionalCase(&((*(_1807_i))))) {
					(*(_1807_i))=nullptr;
				};
			};
		}
	_iter_next_1b492ea12:;
	}
	_iter_end_1b492ea12:;;
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1607_constCase))) {
		return;;
	};
	jule::I64 _1997_only = -1LL;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b493141a:;
		if (it != expr_end) {
			jule::I64 _2007_j = it - expr->begin();
			jule::Ptr<_1ac5353de_If> _20010_elif = *it;
			{
				if ((_20010_elif != nullptr)) {
					if ((_1997_only != -1LL)) {
						return;;
					};
					_1997_only=_2007_j;
				};
			}
			_iter_next_1b493141a:;
			++it;
			_2007_j++;
			goto _iter_begin_1b493141a;
		}
		_iter_end_1b493141a:;
	};
	if ((_1997_only != -1LL)) {
		_1ad29c81a_setCurrentStmt(_self_, jule::Any((*((*_14240_c.alloc)._field_Elifs[_1997_only]))._field_Scope, &__jule_any_type29));
	};
}



inline void _1ad29dc6c_buildDefaultConstantTrueCase(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac53a229_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1ac539701_Match>* _21680_m) {
	(*(_21649_case))._field_Exprs=nullptr;
	jule::I64 _2183_start = (*(_21667_i));;
	_julec_label_1b4934451:;
	for (;;) {
		{
			if (((*((*_21649_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1b49343eb;
			};
			jule::Any *_2249_stmt = &((*(*(_21649_case))._field_Scope.alloc)._field_Stmts[((*(*(_21649_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2249_stmt)) };
				
				if (_match_expr.type == &__jule_any_type55) {
					_case_begin_1b4936365:;
					{
						((*(_21667_i)))++;
						if (((*(_21667_i)) >= (*((*(_21680_m))))._field_Cases.len())) {
							(*(_2249_stmt))=jule::Any((*((*((*(_21680_m))))._field_Default))._field_Scope, &__jule_any_type29);
							goto _iter_end_1b49343eb;
						};
						_21649_case=(*((*(_21680_m))))._field_Cases[(*(_21667_i))];
						(*(_2249_stmt))=jule::Any((*_21649_case.alloc)._field_Scope, &__jule_any_type29);
					}
				}
				else {
					_case_begin_1b4936442:;
					{
						goto _iter_end_1b49343eb;
					}
				}
				_match_end_1b49362ee:;
			};
		}
	_iter_next_1b49343eb:;
	}
	_iter_end_1b49343eb:;;
	(*((*(_21680_m))))._field_Default=(*((*(_21680_m))))._field_Cases[_2183_start];
	((*((*(_21680_m))))._field_Cases).mut_slice(0LL, _2183_start);;
}



inline void _1ad29e025_optimizeMatch(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac539701_Match> _24234_m) {
	jule::Uintptr _2437_var = 0LLU;;
	if ((_1ad2b3ac8_Dynamic && (*(_24234_m))._field_TypeMatch)) {
		_2437_var=_1ad2aad01_getDynamicVar((*((*_24234_m.alloc)._field_Expr))._field_Model);
	};
	_1ad2ab86d_dataCheckpoint _2477_checkpoint = _1ad2ac220_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b493a2ae:;
		if (it != expr_end) {
			jule::Ptr<_1ac53a229_Case> _24815_case = *it;
			{
				{
					auto expr = &((*(_24815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b493aba5:;
					if (it != expr_end) {
						jule::Ptr<_1ac60a55d_Data> _24916_expr = *it;
						{
							static__1ad2a426c_optimizeData(&((*(_24916_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1b493aba5:;
						++it;
						goto _iter_begin_1b493aba5;
					}
					_iter_end_1b493aba5:;
				};
				if ((((*_24815_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1ac63d2d8_TypeKind> _2549_kind = _1ad2aa9b0_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_24815_case))._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2549_kind != nullptr)) {
						_1ad2a967e_pushVar((*((*(_self_))._field_data))._field_dynamic, _2437_var, _2549_kind);
					} else {
						_1ad2a99c0_removeVar((*((*(_self_))._field_data))._field_dynamic, _2437_var);
					};
				};
				_1ad2a14cd_optimizeChild(_self_, (*_24815_case.alloc)._field_Scope);
				if ((((*_24234_m.alloc)._field_Cases.len() > 1LL) || ((*_24234_m.alloc)._field_Default != nullptr))) {
					_1ad2ac4c8_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
				};
			}
			_iter_next_1b493a2ae:;
			++it;
			goto _iter_begin_1b493a2ae;
		}
		_iter_end_1b493a2ae:;
	};
	if (((*_24234_m.alloc)._field_Default != nullptr)) {
		_1ad2a14cd_optimizeChild(_self_, (*(*(_24234_m))._field_Default.alloc)._field_Scope);
		_1ad2ac4c8_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
	};
	if ((!(_1ad2b2a1c_Cond))) {
		return;;
	};
	jule::Bool _2757_constCase = false;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49427a0:;
		if (it != expr_end) {
			jule::I64 _27812_i = it - expr->begin();
			jule::Ptr<_1ac53a229_Case> _27819_case = *it;
			{
				if ((!(_1ad2a2138_isConstantValidMatchCase(&(_27819_case))))) {
					goto _iter_next_1b49427a0;
				};
				_2757_constCase=true;
				_1ad29dc6c_buildDefaultConstantTrueCase(_self_, _27819_case, &(_27812_i), &(_24234_m));
				goto _iter_end_1b49427a0;
			}
			_iter_next_1b49427a0:;
			++it;
			_27812_i++;
			goto _iter_begin_1b49427a0;
		}
		_iter_end_1b49427a0:;
	};
	if (((*_24234_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ac53a229_Case>* _2927_i = (&((*(_24234_m))._field_Cases[0LL]));;
	jule::Ptr<_1ac53a229_Case>* _2933_end = (&((*_24234_m.alloc)._field_Cases[((*_24234_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2927_i <= _2933_end); (_2927_i)++) {
		{
			{
				if (_1ad2a2710_isUnreachableMatchCase(&((*(_2927_i))))) {
					(*(_2927_i))=nullptr;
				};
			};
		}
	_iter_next_1b4945363:;
	}
	_iter_end_1b4945363:;;
	if ((!(_2757_constCase))) {
		return;;
	};
	jule::I64 _3077_only = -1LL;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b494663e:;
		if (it != expr_end) {
			jule::I64 _3087_j = it - expr->begin();
			jule::Ptr<_1ac53a229_Case> _30810_case = *it;
			{
				if ((_30810_case != nullptr)) {
					if ((_3077_only != -1LL)) {
						return;;
					};
					_3077_only=_3087_j;
				};
			}
			_iter_next_1b494663e:;
			++it;
			_3087_j++;
			goto _iter_begin_1b494663e;
		}
		_iter_end_1b494663e:;
	};
	if ((_3077_only != -1LL)) {
		_1ad29c81a_setCurrentStmt(_self_, jule::Any((*((*_24234_m.alloc)._field_Cases[_3077_only]))._field_Scope, &__jule_any_type29));
	};
}



inline void _1ad29e2cd_optimizeRangeIter(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac536d08_RangeIter> _32438_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32438_it))._field_KeyA != nullptr))) {
		_1ad2adc8d_pushVar((*((*(_self_))._field_data))._field_boundary, _1ad2b0c29_getBoundaryVar((*((*_32438_it.alloc)._field_Expr))._field_Model), jule::Any((*_32438_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1ad2a14cd_optimizeChild(_self_, (*_32438_it.alloc)._field_Scope);
	if (_1ad2b3820_Iter) {
		{
			auto &_match_expr{ (*((*(_32438_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type95) {
				_case_begin_1b494b358:;
				{
					jule::Ptr<_1ac4d0e28_CastingExprModel> _3369_cem = (*((*(_32438_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1ac4d0e28_CastingExprModel>();;
					jule::Ptr<_1ac646401_Prim> _3375_eprim = _1ac64098e_Prim((*(_3369_cem))._field_ExprKind.ptr());;
					if (((_3375_eprim == nullptr) || (!(_1ac6498bb_IsStr(_3375_eprim.ptr()))))) {
						goto _match_end_1b494b2d1;
					};
					jule::Ptr<_1ac64a900_Slc> _3419_s = _1ac6419e5_Slc((*_3369_cem.alloc)._field_Kind.ptr());;
					if ((_3419_s == nullptr)) {
						goto _match_end_1b494b2d1;
					};
					jule::Ptr<_1ac646401_Prim> _3455_prim = _1ac64098e_Prim((*(_3419_s))._field_Elem.ptr());;
					if ((_3455_prim == nullptr)) {
						goto _match_end_1b494b2d1;
					};
					{
						
						if (_1ac647d2b_IsU8(_3455_prim.ptr())) {
							_case_begin_1b494ec63:;
							{
								(*_32438_it.alloc)._field_Expr=(*_3369_cem.alloc)._field_Expr;
							}
						}
						else if (_1ac64780e_IsI32(_3455_prim.ptr())) {
							_case_begin_1b494ee3e:;
							{
								static__1ad2a426c_optimizeData(&((*((*_3369_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1ad29c81a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac73ae52_StrRuneIter>(_1ac73ae52_StrRuneIter{._field_Expr=(*_3369_cem.alloc)._field_Expr, ._field_Base=_32438_it}), &__jule_any_type122));
								return;;
							}
						}
						_match_end_1b494ea76:;
					};
				}
			}
			_match_end_1b494b2d1:;
		};
	};
	static__1ad2a426c_optimizeData(&((*(*(_32438_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1ad29e586_optimizeWhileIter(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac5363ac_WhileIter> _36938_it) {
	static__1ad2a426c_optimizeData(&((*(_36938_it))._field_Expr), &((*(_self_))._field_data));
	_1ad2a1225_optimizeStmt(_self_, (*_36938_it.alloc)._field_Next);
	_1ad2a14cd_optimizeChild(_self_, (*_36938_it.alloc)._field_Scope);
}



inline jule::Bool _1ad29e8c7_substr(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538a0d_Assign> _37527_a) {
	if (((*((*(_37527_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37527_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b495781a:;
			{
				jule::Ptr<_1ac4d3447_SlicingExprModel> _3818_sem = (*((*(_37527_a))._field_Right))._field_Model.unsafe_cast_ptr<_1ac4d3447_SlicingExprModel>();;
				if (_1ac737932_equalModels((*((*_37527_a.alloc)._field_Left))._field_Model, (*(_3818_sem))._field_Expr)) {
					_1ad29c81a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac739b43_MutSlicingExprModel>(_1ac739b43_MutSlicingExprModel{._field_Token=(*_3818_sem.alloc)._field_Token, ._field_Expr=(*_3818_sem.alloc)._field_Expr, ._field_Left=(*_3818_sem.alloc)._field_Left, ._field_Right=(*_3818_sem.alloc)._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1b4957793:;
	};
	return false;;
}



inline jule::Bool _1ad29ec18_strAssign(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538a0d_Assign> _39530_a) {
	if ((!(_1ad2b2c5e_Str))) {
		return false;;
	};
	jule::Ptr<_1ac646401_Prim> _3993_lp = _1ac64098e_Prim((*((*(_39530_a))._field_Left))._field_Kind.ptr());;
	if (((_3993_lp == nullptr) || (!(_1ac6498bb_IsStr(_3993_lp.ptr()))))) {
		return false;;
	};
	return _1ad29e8c7_substr(_self_, _39530_a);;
}



inline jule::Bool _1ad2a0059_sliceAssign(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538a0d_Assign> _40632_a) {
	if (((!(_1ad2b3006_Slice)) || (_1ac6419e5_Slc((*((*(_40632_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1ad29e8c7_substr(_self_, _40632_a);;
}



inline void _1ad2a0312_optimizePostfix(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538557_Postfix> _41436_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1ad2b03cc_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41436_postfix))._field_Expr);
	};
	static__1ad2a426c_optimizeData(&((*_41436_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1ad2a05ba_optimizeAssign(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538a0d_Assign> _42135_assign) {
	if ((((*((*(_42135_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1ac737932_equalModels((*((*_42135_assign.alloc)._field_Left))._field_Model, (*((*_42135_assign.alloc)._field_Right))._field_Model))) {
		_1ad29ca18_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1ad2b0696_isBoundaryRiskyType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
			_1ad2b03cc_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1ac73d916_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Right.alloc)._field_Model)) {
			if (_1ac73dbd0_isNilValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				;
				_1ac73ca14_pushVar((*((*(_self_))._field_data))._field_nils, _1ac73e021_getNilVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1ac73d54d_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1ac63d2d8_TypeKind> _4458_kind = _1ad2aa9b0_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Right.alloc)._field_Kind, (*(*(_42135_assign))._field_Right.alloc)._field_Model);;
		if ((_4458_kind != nullptr)) {
			if (_1ad2aa581_isDynamicValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				_1ad2a967e_pushVar((*((*(_self_))._field_data))._field_dynamic, _1ad2aad01_getDynamicVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), _4458_kind);
			};
		} else {
			_1ad2aa273_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1ad29ec18_strAssign(_self_, _42135_assign) || _1ad2a0059_sliceAssign(_self_, _42135_assign)) {
			_case_begin_1b49698e8:;
			{
				return;;
			}
		}
		_match_end_1b496b6ca:;
	};
	static__1ad2a426c_optimizeData(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1ad2a426c_optimizeData(&((*(*(_42135_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU) || _match_expr == static_cast<jule::U64>(45LLU) || _match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b49702e4:;
			{
				if (((!(_1ad2b1d3a_Math)) || (_1ac642012_Struct((*(*(_42135_assign))._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1b497026c;
				};
				jule::U64 _4714_oldId;
				jule::Str _47111_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Kind;
					_4714_oldId = ___jule_assign_arg;
					_47111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1b497356c:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1b49735d3:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(45LLU)) {
						_case_begin_1b49731e8:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(46LLU)) {
						_case_begin_1b4973270:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else {
						_case_begin_1b4972c75:;
						{
							__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:486:5"));;
						}
					}
					_match_end_1b49730a5:;
				};
				jule::Ptr<_1ac4ce7ea_BinaryExprModel> _4888_b = jule::new_ptr<_1ac4ce7ea_BinaryExprModel>(_1ac4ce7ea_BinaryExprModel{._field_Left=(*_42135_assign.alloc)._field_Left, ._field_Right=(*_42135_assign.alloc)._field_Right, ._field_Op=(*_42135_assign.alloc)._field_Op});;
				jule::Any _4938_model = jule::Any(_4888_b, &__jule_any_type113);;
				static__1ad2a426c_optimizeData(&(_4938_model), &((*_self_.alloc)._field_data));
				if ((!__jule_any_type113_compare(_4938_model, _4888_b))) {
					(*_42135_assign.alloc)._field_Right=jule::new_ptr<_1ac4ce300_OperandExprModel>((*(*(_42135_assign))._field_Right.alloc));
					(*(_4888_b))._field_Op=jule::new_ptr<_1ac4912c3_Token>((*(*(_4888_b))._field_Op.alloc));
					(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
					(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_42135_assign))._field_Right.alloc)._field_Model=_4938_model;
					return;;
				};
				(*(*(_42135_assign))._field_Op.alloc)._field_Id=_4714_oldId;
				(*(*(_42135_assign))._field_Op.alloc)._field_Kind=_47111_oldKind;
				return;;
			}
		}
		_match_end_1b497026c:;
	};
	if (_1ad2b1a3d_Append) {
		{
			auto &_match_expr{ (*((*(_42135_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type33) {
				_case_begin_1b497c466:;
				{
					jule::Ptr<_1ac4d67be_BuiltinAppendCallExprModel> _5139_m = (*(*(_42135_assign))._field_Right.alloc)._field_Model.cast_ptr<_1ac4d67be_BuiltinAppendCallExprModel>(&__jule_any_type33);;
					if ((!(_1ad2a80a6_areSameLvalueExprModel(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*(_5139_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5139_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type79) {
							_case_begin_1b497eec4:;
							{
								_1ad29c81a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac73a69e_PushToSliceExprModel>(_1ac73a69e_PushToSliceExprModel{._field_Dest=(*_5139_m.alloc)._field_Dest, ._field_Elems=(*(_5139_m))._field_Elements.unsafe_cast_ptr<_1ac4d1ba4_SliceExprModel>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1b497e017:;
							{
								_1ad29c81a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac73aa78_AppendToSliceExprModel>(_1ac73aa78_AppendToSliceExprModel{._field_Dest=(*(*(_42135_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5139_m.alloc)._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1b497dea1:;
					};
				}
			}
			_match_end_1b497c3de:;
		};
	};
}



inline jule::Bool _1ad2a090b_tryOptimizeSwap(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538eb4_MultiAssign>* _53537_assign) {
	if (((((!(_1ad2b32ae_Assign)) || ((*((*(_53537_assign))))._field_Left.len() != 2LL)) || ((*((*(_53537_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_53537_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ac4d4dd8_TupleExprModel> _54011_tup;;
	{
		auto &_match_expr{ (*((*(_53537_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b4986c23:;
			{
				_54011_tup=(*((*(_53537_assign))))._field_Right.unsafe_cast_ptr<_1ac4d4dd8_TupleExprModel>();
			}
		}
		_match_end_1b4986b9b:;
	};
	if (((_54011_tup == nullptr) || ((*(_54011_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1ac737932_equalModels((*((*((*(_53537_assign))))._field_Left[0LL]))._field_Model, (*((*(_54011_tup))._field_Datas[0LL]))._field_Model) && _1ac737932_equalModels((*((*((*(_53537_assign))))._field_Left[1LL]))._field_Model, (*((*(_54011_tup))._field_Datas[1LL]))._field_Model))) {
		_1ad29ca18_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1ac737932_equalModels((*((*((*(_53537_assign))))._field_Left[0LL]))._field_Model, (*((*(_54011_tup))._field_Datas[1LL]))._field_Model))) || (!(_1ac737932_equalModels((*((*((*(_53537_assign))))._field_Left[1LL]))._field_Model, (*((*(_54011_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1ac7388de_SwapExprModel> _5627_model = jule::new_ptr<_1ac7388de_SwapExprModel>(_1ac7388de_SwapExprModel{._field_Left=(*((*(_53537_assign))))._field_Left[0LL], ._field_Right=(*((*(_53537_assign))))._field_Left[1LL]});;
	static__1ad2a426c_optimizeData(&((*((*(_5627_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1ad2a426c_optimizeData(&((*((*_5627_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1ad29c81a_setCurrentStmt(_self_, jule::Any(_5627_model, &__jule_any_type126));
	return true;;
}



inline void _1ad2a0bb4_optimizeMultiAssign(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac538eb4_MultiAssign> _57240_assign) {
	if (_1ad2a090b_tryOptimizeSwap(_self_, &(_57240_assign))) {
		return;;
	};
	jule::Ptr<_1ac4d4dd8_TupleExprModel> _5797_tup = static_cast<jule::Ptr<_1ac4d4dd8_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_57240_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b49931c4:;
			{
				_5797_tup=(*(_57240_assign))._field_Right.unsafe_cast_ptr<_1ac4d4dd8_TupleExprModel>();
			}
		}
		_match_end_1b499314c:;
	};
	{
		auto expr = &((*(_57240_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b499115b:;
		if (it != expr_end) {
			jule::I64 _5848_i = it - expr->begin();
			jule::Ptr<_1ac60a55d_Data> _58415_l = *it;
			{
				if ((_58415_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1ad2b0696_isBoundaryRiskyType((*_58415_l.alloc)._field_Kind)) {
							_1ad2b03cc_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_58415_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5797_tup != nullptr) && _1ac73d916_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5797_tup.alloc)._field_Datas[_5848_i]))._field_Model))) {
							if (_1ac73dbd0_isNilValidType((*_58415_l.alloc)._field_Kind)) {
								;
								_1ac73ca14_pushVar((*((*(_self_))._field_data))._field_nils, _1ac73e021_getNilVar((*_58415_l.alloc)._field_Model), true);
							};
						} else {
							_1ac73d54d_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_58415_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5797_tup != nullptr))) {
						jule::Ptr<_1ac63d2d8_TypeKind> _60210_kind = _1ad2aa9b0_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5797_tup.alloc)._field_Datas[_5848_i]))._field_Kind, (*((*(_5797_tup))._field_Datas[_5848_i]))._field_Model);;
						if ((_60210_kind != nullptr)) {
							if (_1ad2aa581_isDynamicValidType((*_58415_l.alloc)._field_Kind)) {
								_1ad2a967e_pushVar((*((*(_self_))._field_data))._field_dynamic, _1ad2aad01_getDynamicVar((*_58415_l.alloc)._field_Model), _60210_kind);
							};
						} else {
							_1ad2aa273_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_58415_l.alloc)._field_Model);
						};
					};
					static__1ad2a426c_optimizeData(&((*_58415_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1b499115b:;
			++it;
			_5848_i++;
			goto _iter_begin_1b499115b;
		}
		_iter_end_1b499115b:;
	};
	static__1ad2a426c_optimizeData(&((*_57240_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1ad2a0e6c_optimizeRet(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac53acb8_RetSt> _61832_r) {
	static__1ad2a426c_optimizeData(&((*(_61832_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1ad2b3567_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_61832_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b4c6ba74:;
			{
				goto _match_end_1b4c6bb2e;
			}
		}
		else {
			_case_begin_1b4c6bb95:;
			{
				return;;
			}
		}
		_match_end_1b4c6bb2e:;
	};
	jule::Ptr<_1ac4d17ca_FnCallExprModel> _6327_fc = (*_61832_r.alloc)._field_Expr.cast_ptr<_1ac4d17ca_FnCallExprModel>(&__jule_any_type40);;
	if (((((!((*((*((*(_6327_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6327_fc.alloc)._field_Except == nullptr)) || ((*((*_6327_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1ad295c53_IsForwarded(&((*_6327_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1ad29c81a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac738559_ExceptionalForwardingExprModel>(_1ac738559_ExceptionalForwardingExprModel{._field_Expr=_6327_fc}), &__jule_any_type121));
}



inline void _1ad2a1225_optimizeStmt(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Any _64233_stmt) {
	{
		auto &_match_expr{ _64233_stmt };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b4c700b6:;
			{
				_1ad2a14cd_optimizeChild(_self_, _64233_stmt.cast_ptr<_1ac534ec1_Scope>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b4c6ed41:;
			{
				_1ad29d2dd_optimizeData(_self_, _64233_stmt.cast_ptr<_1ac60a55d_Data>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4c7014e:;
			{
				_1ad29d596_optimizeVar(_self_, _64233_stmt.cast_ptr<_1ac5a2527_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b4c701e8:;
			{
				_1ad29d84e_optimizeConditional(_self_, _64233_stmt.cast_ptr<_1ac535b09_Conditional>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b4c7025e:;
			{
				_1ad29e2cd_optimizeRangeIter(_self_, _64233_stmt.cast_ptr<_1ac536d08_RangeIter>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b4c702c5:;
			{
				_1ad29e586_optimizeWhileIter(_self_, _64233_stmt.cast_ptr<_1ac5363ac_WhileIter>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b4c7034c:;
			{
				_1ad2a14cd_optimizeChild(_self_, (*(_64233_stmt.unsafe_cast_ptr<_1ac535e06_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b4c703c4:;
			{
				_1ad2a05ba_optimizeAssign(_self_, _64233_stmt.cast_ptr<_1ac538a0d_Assign>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b4c7044b:;
			{
				_1ad2a0bb4_optimizeMultiAssign(_self_, _64233_stmt.cast_ptr<_1ac538eb4_MultiAssign>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b4c704c3:;
			{
				_1ad29e025_optimizeMatch(_self_, _64233_stmt.cast_ptr<_1ac539701_Match>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b4c7054a:;
			{
				_1ad2a0e6c_optimizeRet(_self_, _64233_stmt.cast_ptr<_1ac53acb8_RetSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b4c705c2:;
			{
				_1ad2a0312_optimizePostfix(_self_, _64233_stmt.cast_ptr<_1ac538557_Postfix>(&__jule_any_type49));
			}
		}
		_match_end_1b4c6ee62:;
	};
}



inline void _1ad2a14cd_optimizeChild(jule::Ptr<_1ad29beac_scopeOptimizer> _self_, jule::Ptr<_1ac534ec1_Scope> _67134_child) {
	jule::Ptr<_1ad29beac_scopeOptimizer> _6727_so = static__1ad29c562_new(_67134_child);;
	(*(_6727_so))._field_parent=_self_;
	(*_6727_so.alloc)._field_data=(*(_self_))._field_data;
	_1ad2a16cb_optimize(_6727_so);
}



inline void _1ad2a16cb_optimize(jule::Ptr<_1ad29beac_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1ad2a1225_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1b4c78872:;
	}
	_iter_end_1b4c78872:;;
}








inline jule::Bool _1ad2a39a8_exprOptimizer_eq(_1ad2a39a8_exprOptimizer *_self_, _1ad2a39a8_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1ad2a3e81_optimize(jule::Any* _3626_model) {
	static__1ad2a426c_optimizeData(_3626_model, &(_1ad2ab472_emptyData));
}



inline void static__1ad2a426c_optimizeData(jule::Any* _4030_model, jule::Ptr<_1ad2abd68_data>* _4053_d) {
	if (_1ad3deb8d_exprEnabled) {
		jule::Ptr<_1ad2a39a8_exprOptimizer> _438_exop = jule::new_ptr<_1ad2a39a8_exprOptimizer>(_1ad2a39a8_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_4030_model)), ._field_data=(*(_4053_d)), ._field_inspector=static__1ad29457b_New()});;
		_1ad2a779d_do(_438_exop.ptr());
	};
}



inline jule::Bool _1ad2a45ad_selfCmpCond(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _5228_m) {
	if ((!(_1ac737932_equalModels((*((*((*(_5228_m))))._field_Left))._field_Model, (*((*((*(_5228_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_5228_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b4c883cb:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1aa129dc6_NewBool(true), &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b4c887d8:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1aa129dc6_NewBool(false), &__jule_any_type20);
				return true;;
			}
		}
		else {
			_case_begin_1b4c87298:;
			{
				return false;;
			}
		}
		_match_end_1b4c88354:;
	};
}



inline jule::Bool _1ad2a48ee_boolCond(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _7625_m) {
	jule::Ptr<_1ac646401_Prim> _773_lp = _1ac64098e_Prim((*((*((*(_7625_m))))._field_Left))._field_Kind.ptr());;
	if (((_773_lp == nullptr) || (!(_1ac649635_IsBool(_773_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b4c8cc1b:;
			{
				std::swap((*((*(_7625_m))))._field_Left, (*((*(_7625_m))))._field_Right);
			}
		}
		else {
			_case_begin_1b4c8bde6:;
			{
				{
					auto &_match_expr{ (*((*((*(_7625_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1b4c8b1d1:;
						{
							goto _match_end_1b4c8c721;
						}
					}
					else {
						_case_begin_1b4c8c787:;
						{
							return false;;
						}
					}
					_match_end_1b4c8c721:;
				};
			}
		}
		_match_end_1b4c8bd80:;
	};
	jule::Ptr<_1aa1293c0_Const> _947_c = (*((*((*(_7625_m))))._field_Right))._field_Model.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20);;
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b4c8e866:;
			{
				if (_1aa12b2e5_ReadBool(_947_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				} else {
					_1aa12c8ce_SetBool(_947_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type20);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b4c8e910:;
			{
				if (_1aa12b2e5_ReadBool(_947_c.ptr())) {
					_1aa12c8ce_SetBool(_947_c, true);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type20);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1b4c8c9da:;
		}
		_match_end_1b4c8e7cd:;
	};
	return false;;
}



inline jule::Bool _1ad2a4c40_strCond(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel> _12923_m) {
	jule::Ptr<_1ac646401_Prim> _1303_lp = _1ac64098e_Prim((*((*(_12923_m))._field_Left))._field_Kind.ptr());;
	if (((_1303_lp == nullptr) || (!(_1ac6498bb_IsStr(_1303_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_12923_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_12923_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b4c96560:;
			{
				std::swap((*_12923_m.alloc)._field_Left, (*_12923_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1b4c9573a:;
			{
				{
					auto &_match_expr{ (*((*(_12923_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1b4c942b6:;
						{
							goto _match_end_1b4c96065;
						}
					}
					else {
						_case_begin_1b4c960cb:;
						{
							return false;;
						}
					}
					_match_end_1b4c96065:;
				};
			}
		}
		_match_end_1b4c956c4:;
	};
	jule::Ptr<_1aa1293c0_Const> _1507_c = (*((*_12923_m.alloc)._field_Right))._field_Model.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20);;
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b4c96340:;
			{
				if ((_1aa12b57b_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1549_model = jule::Any(jule::new_ptr<_1ac738cb8_EmptyCompareExprModel>(_1ac738cb8_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1549_model))))));
					goto _match_end_1b4c980ab;
				};
				jule::Any _1618_model = jule::Any(jule::new_ptr<_1ac7395b0_StrCompExprModel>(_1ac7395b0_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1618_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b4c98166:;
			{
				if ((_1aa12b57b_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1699_model = jule::Any(jule::new_ptr<_1ac738cb8_EmptyCompareExprModel>(_1ac738cb8_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1699_model))))));
					goto _match_end_1b4c980ab;
				};
				jule::Any _1768_model = jule::Any(jule::new_ptr<_1ac7395b0_StrCompExprModel>(_1ac7395b0_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1768_model))))));
			}
		}
		_match_end_1b4c980ab:;
	};
	return true;;
}



inline jule::Bool _1ad2a51e6_tryNeutralElement1(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _18635_m, jule::Ptr<_1aa1293c0_Const> _18660_c, jule::Ptr<_1ac4ce300_OperandExprModel>* _18672_nc) {
	if (_1aa12db77_IsStr(_18660_c.ptr())) {
		if ((!(_1ad2b2c5e_Str))) {
			return false;;
		};
		if (((_1aa12b57b_ReadStr(_18660_c.ptr())).empty() && ((*((*((*(_18635_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18672_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1ad2b1d3a_Math)) || (_1aa12c0b5_AsF64(_18660_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18635_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b4ca741c:;
			{
				if (((*(_18672_nc)) == (*((*(_18635_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b4ca8055:;
			{
				_1aa12c36d_SetI64(_18660_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b4ca80bb:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1b4ca7e12:;
	};
	return false;;
}



inline jule::Bool _1ad2a5537_tryNeutralElement(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _23034_m) {
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b4cab81c:;
			{
				jule::Ptr<_1aa1293c0_Const> _2348_c = (*((*((*(_23034_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1aa1293c0_Const>();;
				return _1ad2a51e6_tryNeutralElement1(_self_, _23034_m, _2348_c, &((*((*(_23034_m))))._field_Right));;
			}
		}
		_match_end_1b4cab795:;
	};
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b4cabd39:;
			{
				jule::Ptr<_1aa1293c0_Const> _2398_c = (*((*((*(_23034_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1aa1293c0_Const>();;
				return _1ad2a51e6_tryNeutralElement1(_self_, _23034_m, _2398_c, &((*((*(_23034_m))))._field_Left));;
			}
		}
		_match_end_1b4cabcc3:;
	};
	return false;;
}



inline void _1ad2a57e0_checkBinaryForBoundary(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _24539_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b4cb028d:;
			{
				jule::Ptr<_1ac4d6abb_BuiltinLenCallExprModel> _2518_blc = (*((*((*(_24539_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1ac4d6abb_BuiltinLenCallExprModel>();;
				if ((!(_1ad2b0960_isBoundaryValidType((*((*(_2518_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_24539_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type20) {
							_case_begin_1b4cb358d:;
							{
								jule::Ptr<_1aa1293c0_Const> _26310_c = jule::new_ptr<_1aa1293c0_Const>((*((*((*((*(_24539_m))))._field_Right))._field_Model.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20))));;
								_1aa13144e_Sub(_26310_c, (*(static__1aa129843_NewI64(1LL))));
								_1ad2adc8d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ad2b0c29_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), jule::Any(_26310_c, &__jule_any_type20));
							}
						}
						_match_end_1b4cb3516:;
					};
					return;;
				};
				_1ad2adc8d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ad2b0c29_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1b4cb0216:;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b4cb0931:;
			{
				jule::Ptr<_1ac4d6abb_BuiltinLenCallExprModel> _2748_blc = (*((*((*(_24539_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1ac4d6abb_BuiltinLenCallExprModel>();;
				if ((!(_1ad2b0960_isBoundaryValidType((*(*(_2748_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type20) {
							_case_begin_1b4cba30e:;
							{
								jule::Ptr<_1aa1293c0_Const> _28610_c = jule::new_ptr<_1aa1293c0_Const>((*((*((*((*(_24539_m))))._field_Left))._field_Model.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20))));;
								_1aa13144e_Sub(_28610_c, (*(static__1aa129843_NewI64(1LL))));
								_1ad2adc8d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ad2b0c29_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), jule::Any(_28610_c, &__jule_any_type20));
							}
						}
						_match_end_1b4cba287:;
					};
					return;;
				};
				_1ad2adc8d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ad2b0c29_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1b4cb08a9:;
	};
}



inline void _1ad2a5a98_checkBinaryForNil(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel>* _29734_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3017_var = _1ac73e021_getNilVar((*((*((*(_29734_m))))._field_Left))._field_Model);;
	if ((_3017_var != 0LLU)) {
		if ((!(_1ac73dbd0_isNilValidType((*(*((*(_29734_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type20) {
				_case_begin_1b4cc0bb6:;
				{
					_1ac73ca14_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*((*((*(_29734_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1b4cc0b3e:;
		};
		return;;
	};
	_3017_var=_1ac73e021_getNilVar((*((*((*(_29734_m))))._field_Right))._field_Model);
	if ((_3017_var != 0LLU)) {
		if ((!(_1ac73dbd0_isNilValidType((*(*((*(_29734_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type20) {
				_case_begin_1b4cc33a0:;
				{
					_1ac73ca14_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*(*((*(_29734_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1b4cc3328:;
		};
		return;;
	};
}



inline void _1ad2a5d51_binary(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel> _32922_m) {
	_1ad2a57e0_checkBinaryForBoundary(_self_, &(_32922_m));
	_1ad2a5a98_checkBinaryForNil(_self_, &(_32922_m));
	if (_1ad2b2a1c_Cond) {
		{
			
			if (_1ad2a4c40_strCond(_self_, _32922_m) || _1ad2a48ee_boolCond(_self_, &(_32922_m)) || _1ad2a45ad_selfCmpCond(_self_, &(_32922_m))) {
				_case_begin_1b4cc5308:;
				{
					return;;
				}
			}
			_match_end_1b4cc51c6:;
		};
	};
	if (_1ad2a5537_tryNeutralElement(_self_, &(_32922_m))) {
		return;;
	};
	if ((!(_1ad2b1d3a_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b4cc6271:;
			{
				goto _match_end_1b4cc6507;
			}
		}
		else {
			_case_begin_1b4cc656d:;
			{
				return;;
			}
		}
		_match_end_1b4cc6507:;
	};
	jule::Ptr<_1ac646401_Prim> _3623_lp = _1ac64098e_Prim((*((*(_32922_m))._field_Left))._field_Kind.ptr());;
	if ((_3623_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac646401_Prim> _3663_rp = _1ac64098e_Prim((*((*(_32922_m))._field_Right))._field_Kind);;
	if ((_3663_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b4cc8e77:;
			{
				jule::Bool _3734_ok;
				jule::U64 _3738_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ad2a7bdd_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3734_ok = __jule_assign_result.__jule_result_arg0;
					_3738_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3734_ok) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1ac4912c3_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1aa1293c0_Const> _3789_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20);;
					_1aa12c626_SetU64(_3789_c.ptr(), _3738_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b4cc8edd:;
			{
				jule::Bool _3854_ok;
				jule::U64 _3858_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ad2a7bdd_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3854_ok = __jule_assign_result.__jule_result_arg0;
					_3858_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3854_ok) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1ac4912c3_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1aa1293c0_Const> _3909_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20);;
					_1aa12c626_SetU64(_3909_c.ptr(), _3858_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b4cc9054:;
			{
				jule::Ptr<_1aa1293c0_Const> _3978_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20);;
				if ((_1aa12c0b5_AsF64(_3978_c.ptr()) == 2LL)) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1ac4912c3_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1aa12c36d_SetI64(_3978_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b4cc90ba:;
			{
				jule::I64 _4094_z = _1aa11d738_BitsizeOf((*(_3623_lp))._field_Kind);;
				jule::U64 _4104_s = _1aa12bd2e_AsU64((*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20).ptr());;
				if ((_4104_s >= static_cast<jule::U64>(_4094_z))) {
					(*((*(_self_))._field_model))=jule::Any(static__1aa129b0c_NewU64(0LLU), &__jule_any_type20);
					return;;
				};
			}
		}
		else {
			_case_begin_1b4cc8ad1:;
			{
				return;;
			}
		}
		_match_end_1b4cc8e00:;
	};
	jule::Any _4237_model = jule::Any(jule::new_ptr<_1ac739e40_UnsafeBinaryExprModel>(_1ac739e40_UnsafeBinaryExprModel{._field_Node=_32922_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4237_model))))));
}



inline void _1ad2a6109_unary(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4cebc4_UnaryExprModel> _42721_m) {
	if ((!(_1ad2b2654_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_42721_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b4cd876c:;
			{
				{
					auto &_match_expr{ (*((*(_42721_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1b4cda780:;
						{
							jule::Ptr<_1ac4cebc4_UnaryExprModel> _4359_um = (*((*(_42721_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1ac4cebc4_UnaryExprModel>();;
							if (((*((*(_4359_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4359_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1b4cda708:;
				};
				if ((!(_1ad2b20e3_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1ac73dbd0_isNilValidType((*(*(_42721_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4495_var = _1ac73e021_getNilVar((*(*(_42721_m))._field_Expr.alloc)._field_Model);;
					if (_1ac73d196_isSafe((*((*(_self_))._field_data))._field_nils, _4495_var)) {
						jule::Any _45110_model = jule::Any(jule::new_ptr<_1ac73b24e_UnsafeDerefExprModel>(_1ac73b24e_UnsafeDerefExprModel{._field_Base=_42721_m}), &__jule_any_type130);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_45110_model))))));
						return;;
					};
					_1ac73ca14_pushVar((*((*(_self_))._field_data))._field_nils, _4495_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b4cd87d3:;
			{
				{
					auto &_match_expr{ (*((*(_42721_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b4ce3c3e:;
						{
							jule::Ptr<_1ac5a2527_Var> _4619_v = (*((*(_42721_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1ac5a2527_Var>();;
							if ((*(_4619_v))._field_Reference) {
								jule::Any _46310_model = jule::Any(jule::new_ptr<_1ac73913c_RefExprModel>(_1ac73913c_RefExprModel{._field_Var=_4619_v}), &__jule_any_type131);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_46310_model))))));
							};
						}
					}
					_match_end_1b4ce3bb7:;
				};
			}
		}
		_match_end_1b4cd8706:;
	};
}



inline void _1ad2a63b2_structureLit(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4d0598_StructLitExprModel> _47028_m) {
	{
		auto expr = &((*(_47028_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4ce6291:;
		if (it != expr_end) {
			jule::Ptr<_1ac4d0202_StructArgExprModel> _47115_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1ad2b0696_isBoundaryRiskyType((*((*(_47115_arg))._field_Expr))._field_Kind)) {
						_1ad2b03cc_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_47115_arg, &__jule_any_type132));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1ac73d54d_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_47115_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1ad2aa273_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_47115_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1b4ce6291:;
			++it;
			goto _iter_begin_1b4ce6291;
		}
		_iter_end_1b4ce6291:;
	};
}



inline void _1ad2a666a_casting(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4d0e28_CastingExprModel> _48623_m) {
	jule::Bool _4873_valid = _1ad2aa581_isDynamicValidType((*(_48623_m))._field_ExprKind);;
	jule::Uintptr _4883_var = _1ad2aad01_getDynamicVar((*((*_48623_m.alloc)._field_Expr))._field_Model);;
	if (((_4873_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1ad2a9dbb_isFits((*((*(_self_))._field_data))._field_dynamic, _4883_var, (*_48623_m.alloc)._field_Kind))) {
		jule::Any _4908_model = jule::Any(jule::new_ptr<_1ac73b54b_UnsafeCastingExprModel>(_1ac73b54b_UnsafeCastingExprModel{._field_Base=_48623_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4908_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4873_valid)) {
		_1ad2a967e_pushVar((*((*(_self_))._field_data))._field_dynamic, _4883_var, (*_48623_m.alloc)._field_Kind);
	};
}



inline void _1ad2a69cd_args(_1ad2a39a8_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>> _50020_params, jule::Slice<jule::Any>* _50046_args) {
	{
		auto expr = _50046_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4d07192:;
		if (it != expr_end) {
			jule::I64 _5018_i = it - expr->begin();
			jule::Any _50115_arg = *it;
			{
				if ((_5018_i >= _50020_params.len())) {
					goto _iter_next_1b4d07192;
				};
				jule::Ptr<_1ac4ddc9e_ParamIns> _5058_p = _50020_params[_5018_i];;
				if (((*((*(_5058_p))._field_Decl))._field_Mutable && (*(*(_5058_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1ad2b0696_isBoundaryRiskyType((*_5058_p.alloc)._field_Kind)) {
							_1ad2b03cc_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _50115_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1ac73d54d_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _50115_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1ad2aa273_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _50115_arg);
					};
				};
			}
			_iter_next_1b4d07192:;
			++it;
			_5018_i++;
			goto _iter_begin_1b4d07192;
		}
		_iter_end_1b4d07192:;
	};
}



inline void _1ad2a6c86_scope(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac534ec1_Scope>* _52222_s) {
	jule::Ptr<_1ad29beac_scopeOptimizer> _5237_scopt = static__1ad29c562_new((*(_52222_s)));;
	(*(_5237_scopt))._field_data=(*(_self_))._field_data;
	_1ad2a16cb_optimize(_5237_scopt);
}



inline void _1ad2a703e_funcCall(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel> _52824_m) {
	_1ad2a69cd_args(_self_, (*((*(_52824_m))._field_Func))._field_Params, &((*_52824_m.alloc)._field_Args));
	if (((*_52824_m.alloc)._field_Except != nullptr)) {
		_1ad2a6c86_scope(_self_, &((*_52824_m.alloc)._field_Except));
	};
}



inline void _1ad2a72e7_indexing(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4d215a_IndexingExprModel> _53524_m) {
	if ((!(_1ad2b20e3_Access))) {
		return;;
	};
	jule::Bool _5403_array = (_1ac64175e_Arr((*((*(_53524_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5403_array && _1ac60ae98_IsConst((*_53524_m.alloc)._field_Index.ptr()))) {
		jule::Any _5438_model = jule::Any(jule::new_ptr<_1ac73a2c5_UnsafeIndexingExprModel>(_1ac73a2c5_UnsafeIndexingExprModel{._field_Node=_53524_m}), &__jule_any_type134);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5438_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1ad2b0960_isBoundaryValidType((*(*(_53524_m))._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5494_var = _1ad2b0c29_getBoundaryVar((*(*(_53524_m))._field_Expr.alloc)._field_Model);;
		if (_1ad2ae4ca_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5494_var, (*(*(_53524_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5519_model = jule::Any(jule::new_ptr<_1ac73a2c5_UnsafeIndexingExprModel>(_1ac73a2c5_UnsafeIndexingExprModel{._field_Node=_53524_m}), &__jule_any_type134);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5519_model))))));
			return;;
		};
		_1ad2adc8d_pushVar((*((*(_self_))._field_data))._field_boundary, _5494_var, (*(*(_53524_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1ad2a75a0_anonFunc(_1ad2a39a8_exprOptimizer* _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel> _55924_m) {
	_1ad2a6c86_scope(_self_, &((*((*(_55924_m))._field_Func))._field_Scope));
}



inline void _1ad2a779d_do(_1ad2a39a8_exprOptimizer* _self_) {
	_1ad294e50_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1b4b6275b, jule::Ptr<__jule_anon_1b4b6275b_ctx>::make(__jule_anon_1b4b6275b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b4b6275b_ctx_handler));
}








inline jule::Bool _1ad2a8d98_dynamicVar_eq(_1ad2a8d98_dynamicVar *_self_, _1ad2a8d98_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1ad2a967e_pushVar(jule::Ptr<_1ad2a91d9_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1ac63d2d8_TypeKind> _3242_kind) {
	if (((!(_1ad2b3ac8_Dynamic)) || (_3224_var == 0LLU))) {
		return;;
	};
	_3242_kind=_1ad2aa9b0_isTypeGuaranteedDynamicData(&(_self_), _3242_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b71eda:;
		if (it != expr_end) {
			_1ad2a8d98_dynamicVar _3815_v = *it;
			{
				if ((_3815_v._field_var == _3224_var)) {
					_3815_v._field_kind=_3242_kind;
					return;;
				};
			}
			_iter_next_1b4b71eda:;
			++it;
			goto _iter_begin_1b4b71eda;
		}
		_iter_end_1b4b71eda:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b729d0:;
		if (it != expr_end) {
			_1ad2a8d98_dynamicVar _4515_v = *it;
			{
				if ((_4515_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3224_var;
						jule::Ptr<_1ac63d2d8_TypeKind> _1___jule_assign_arg = _3242_kind;
						_4515_v._field_var = ___jule_assign_arg;
						_4515_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1b4b729d0:;
			++it;
			goto _iter_begin_1b4b729d0;
		}
		_iter_end_1b4b729d0:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1ad2a8d98_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad2a8d98_dynamicVar{._field_var=_3224_var, ._field_kind=_3242_kind}; __jule_collection; }));
}



inline jule::Bool _1ad2a99c0_removeVar(_1ad2a91d9_dynamic* _self_, jule::Uintptr _5525_var) {
	if ((_5525_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4b74bbe:;
			if (it != expr_end) {
				_1ad2a8d98_dynamicVar _5716_v = *it;
				{
					if ((_5716_v._field_var == _5525_var)) {
						_5716_v._field_var=0LLU;
						_5716_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1b4b74bbe:;
				++it;
				goto _iter_begin_1b4b74bbe;
			}
			_iter_end_1b4b74bbe:;
		};
	};
	return false;;
}



inline jule::Bool _1ad2a9dbb_isFits(_1ad2a91d9_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1ac63d2d8_TypeKind> _6936_kind) {
	if ((_6922_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4b76583:;
			if (it != expr_end) {
				_1ad2a8d98_dynamicVar _7111_v = *it;
				{
					if ((_7111_v._field_var == _6922_var)) {
						return ((_7111_v._field_kind != nullptr) && _1ac63da25_Equal(_7111_v._field_kind, _6936_kind));;
					};
				}
				_iter_next_1b4b76583:;
				++it;
				goto _iter_begin_1b4b76583;
			}
			_iter_end_1b4b76583:;
		};
	};
	return false;;
}








inline jule::Bool _1ad2abd68_data_eq(_1ad2abd68_data *_self_, _1ad2abd68_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline _1ad2ab86d_dataCheckpoint _1ad2ac220_getCheckpoint(_1ad2abd68_data* _self_) {
	_1ad2ab86d_dataCheckpoint _257_c = _1ad2ab86d_dataCheckpoint{._field_boundary=_1ad2ad7e8_boundary{._field_vars=jule::Slice<_1ad2ad4a7_boundaryVar>(nullptr)}, ._field_nils=_1ac73c56e_nils{._field_vars=jule::Slice<_1ac73c22d_nilVar>(nullptr)}, ._field_dynamic=_1ad2a91d9_dynamic{._field_vars=jule::Slice<_1ad2a8d98_dynamicVar>(nullptr)}};;
	_257_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1ad2ad4a7_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ad2ad4a7_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b78431:;
		if (it != expr_end) {
			jule::I64 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1b4b78431:;
			++it;
			_277_i++;
			goto _iter_begin_1b4b78431;
		}
		_iter_end_1b4b78431:;
	};
	_257_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1ac73c22d_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ac73c22d_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1ad2a8d98_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ad2a8d98_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1ad2ac4c8_loadCheckpoint(_1ad2abd68_data* _self_, _1ad2ab86d_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}











inline void _1ad2adc8d_pushVar(_1ad2ad7e8_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1ad2b20e3_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1ad2ae860_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b8c731:;
		if (it != expr_end) {
			_1ad2ad4a7_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b4b8d523:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1ad2b009c_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1b4b8d523:;
							++it;
							_349_i++;
							goto _iter_begin_1b4b8d523;
						}
						_iter_end_1b4b8d523:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1b4b8c731:;
			++it;
			goto _iter_begin_1b4b8c731;
		}
		_iter_end_1b4b8c731:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b8d0a0:;
		if (it != expr_end) {
			_1ad2ad4a7_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1b4b8d0a0:;
			++it;
			goto _iter_begin_1b4b8d0a0;
		}
		_iter_end_1b4b8d0a0:;
	};
	{ jule::Slice<_1ad2ad4a7_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1ad2ad4a7_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1ad2ae4ca_fitsMaxSize(_1ad2ad7e8_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4b92e40:;
			if (it != expr_end) {
				_1ad2ad4a7_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1ad2aec28_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1b4b92e40:;
				++it;
				goto _iter_begin_1b4b92e40;
			}
			_iter_end_1b4b92e40:;
		};
	};
	return false;;
}








inline jule::Bool _1ad3e00bc_Optimizer_eq(_1ad3e00bc_Optimizer *_self_, _1ad3e00bc_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1ad3e00bc_Optimizer> static__1ad3e0573_New(jule::Ptr<_1ad29028b_IR>* _2621_ir) {
	return jule::new_ptr<_1ad3e00bc_Optimizer>(_1ad3e00bc_Optimizer{._field_ir=(*(_2621_ir))});;
}



inline void _1ad3e082b_optimizeGlobal(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac5a2527_Var>* _3235_v) {
	if ((!((*((*(_3235_v))))._field_Binded))) {
		static__1ad2a3e81_optimize(&((*((*((*((*(_3235_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1ad3e0ad4_optimizeFunction(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac4dbd46_Fn>* _3837_func) {
	if ((*((*(_3837_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3837_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b97eab:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dee04_FnIns> _4215_ins = *it;
			{
				jule::Ptr<_1ad29beac_scopeOptimizer> _438_so = static__1ad29c562_new((*(_4215_ins))._field_Scope);;
				_1ad2a16cb_optimize(_438_so);
			}
			_iter_next_1b4b97eab:;
			++it;
			goto _iter_begin_1b4b97eab;
		}
		_iter_end_1b4b97eab:;
	};
}



inline void _1ad3e0d8c_optimizeStruct(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac4c767d_Struct>* _4835_s) {
	if ((*((*(_4835_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b99683:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ca4d8_StructIns> _5215_ins = *it;
			{
				{
					auto expr = &((*(_5215_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4b9a08a:;
					if (it != expr_end) {
						jule::Ptr<_1ac4c9938_FieldIns> _5316_f = *it;
						{
							if (((*(_5316_f))._field_Default != nullptr)) {
								static__1ad2a3e81_optimize(&((*(*(_5316_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1b4b9a08a:;
						++it;
						goto _iter_begin_1b4b9a08a;
					}
					_iter_end_1b4b9a08a:;
				};
				{
					auto expr = &((*_5215_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4b9a4db:;
					if (it != expr_end) {
						jule::Ptr<_1ac4dbd46_Fn> _5816_m = *it;
						{
							_1ad3e0ad4_optimizeFunction(_self_, &(_5816_m));
						}
						_iter_next_1b4b9a4db:;
						++it;
						goto _iter_begin_1b4b9a4db;
					}
					_iter_end_1b4b9a4db:;
				};
			}
			_iter_next_1b4b99683:;
			++it;
			goto _iter_begin_1b4b99683;
		}
		_iter_end_1b4b99683:;
	};
}



inline void _1ad3e1145_optimizeGlobals(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac55ac0b_Package>* _6436_p) {
	{
		auto expr = &((*((*(_6436_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b9b82d:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _6515_f = *it;
			{
				{
					auto expr = &((*(_6515_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4b9c642:;
					if (it != expr_end) {
						jule::Ptr<_1ac5a2527_Var> _6616_v = *it;
						{
							_1ad3e082b_optimizeGlobal(_self_, &(_6616_v));
						}
						_iter_next_1b4b9c642:;
						++it;
						goto _iter_begin_1b4b9c642;
					}
					_iter_end_1b4b9c642:;
				};
			}
			_iter_next_1b4b9b82d:;
			++it;
			goto _iter_begin_1b4b9b82d;
		}
		_iter_end_1b4b9b82d:;
	};
}



inline void _1ad3e13ed_optimizeFunctions(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac55ac0b_Package>* _7238_p) {
	{
		auto expr = &((*((*(_7238_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b9cbe7:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _7315_f = *it;
			{
				{
					auto expr = &((*(_7315_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4b9da61:;
					if (it != expr_end) {
						jule::Ptr<_1ac4dbd46_Fn> _7416_func = *it;
						{
							_1ad3e0ad4_optimizeFunction(_self_, &(_7416_func));
						}
						_iter_next_1b4b9da61:;
						++it;
						goto _iter_begin_1b4b9da61;
					}
					_iter_end_1b4b9da61:;
				};
			}
			_iter_next_1b4b9cbe7:;
			++it;
			goto _iter_begin_1b4b9cbe7;
		}
		_iter_end_1b4b9cbe7:;
	};
}



inline void _1ad3e16a6_optimizeStructs(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac55ac0b_Package>* _8036_p) {
	{
		auto expr = &((*((*(_8036_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b9e116:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _8115_f = *it;
			{
				{
					auto expr = &((*(_8115_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4b9ee80:;
					if (it != expr_end) {
						jule::Ptr<_1ac4c767d_Struct> _8216_s = *it;
						{
							_1ad3e0d8c_optimizeStruct(_self_, &(_8216_s));
						}
						_iter_next_1b4b9ee80:;
						++it;
						goto _iter_begin_1b4b9ee80;
					}
					_iter_end_1b4b9ee80:;
				};
			}
			_iter_next_1b4b9e116:;
			++it;
			goto _iter_begin_1b4b9e116;
		}
		_iter_end_1b4b9e116:;
	};
}



inline void _1ad3e195e_optimizePackage(_1ad3e00bc_Optimizer* _self_, jule::Ptr<_1ac55ac0b_Package>* _8836_p) {
	_1ad3e1145_optimizeGlobals(_self_, _8836_p);
	_1ad3e13ed_optimizeFunctions(_self_, _8836_p);
	_1ad3e16a6_optimizeStructs(_self_, _8836_p);
}



inline void _1ad3e1b5c_Optimize(_1ad3e00bc_Optimizer* _self_) {
	_1ad3e1dc1_detectEnabled();
	if (_1ad2b1785_Deadcode) {
		_1ad3d8abb_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1ad3dedd0_scopeEnabled || _1ad3deb8d_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4ba1ed7:;
			if (it != expr_end) {
				jule::Ptr<_1ac557cd5_ImportInfo> _10416_u = *it;
				{
					if ((!((*(_10416_u))._field_Binded))) {
						_1ad3e195e_optimizePackage(_self_, &((*_10416_u.alloc)._field_Package));
					};
				}
				_iter_next_1b4ba1ed7:;
				++it;
				goto _iter_begin_1b4ba1ed7;
			}
			_iter_end_1b4ba1ed7:;
		};
		_1ad3e195e_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1ad2b1785_Deadcode) {
		_1ad3dd6c5_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1ad416577_AnsiEscape_eq(_1ad416577_AnsiEscape *_self_, _1ad416577_AnsiEscape _other_) { return true; }

inline void static__1ad3e2377_Reset(void) {
	jule::out(_1ac2a1c82_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1ad415400_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1ac2a1c82_toStr(_1918_escape));
	jule::out(_1ac2a1c82_toStr(_1931_text));
	static__1ad3e2377_Reset();
}








inline jule::Bool _1ad417b2d_Logger_eq(_1ad417b2d_Logger *_self_, _1ad417b2d_Logger _other_) { return true; }

inline void static__1ad417e08_LogFlat(_1b08b6838_Log* _1421_l) {
	jule::outln(_1ac2a1c82_toStr((*(_1421_l))._field_Text));
}



inline void static__1ad418139_LogError(_1b08b6838_Log* _1922_l) {
	jule::out(_1ac2a1c82_toStr(jule::Str::lit("\033[31m", 5)));
	jule::out(_1ac2a1c82_toStr(jule::Str::lit("error: ", 7)));
	jule::out(_1ac2a1c82_toStr((*(_1922_l))._field_Text));
	static__1ad3e2377_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(_1ac2a1c82_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::out(_1ac2a1c82_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(_1ac2a1c82_toStr(jule::Str::lit(":", 1)));
		jule::out(_1ac2a1c82_toStr(_1aa11b307_Itoa((*(_1922_l))._field_Row)));
		jule::out(_1ac2a1c82_toStr(jule::Str::lit(":", 1)));
		jule::out(_1ac2a1c82_toStr(_1aa11b307_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1b096dcdb_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1b096c867_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(_1ac2a1c82_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1aa11b307_Itoa((*(_1922_l))._field_Row);;
		jule::out(_1ac2a1c82_toStr(_434_row));
		jule::out(_1ac2a1c82_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1ac2a1c82_toStr(_388_line));
		jule::out(_1ac2a1c82_toStr(jule::Str::lit("\n  ", 3)));
		jule::out(_1ac2a1c82_toStr(_1b0966b08_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::out(_1ac2a1c82_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1ac2a1c82_toStr(_1b0966b08_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::out(_1ac2a1c82_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(_1ac2a1c82_toStr(jule::Str::lit("\n  ", 3)));
			jule::out(_1ac2a1c82_toStr(_1b0966b08_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::out(_1ac2a1c82_toStr(jule::Str::lit(" | ", 3)));
			static__1ad415400_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out(_1ac2a1c82_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::outln(_1ac2a1c82_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1ad41836a_Log(_1b08b6838_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1b4bae797:;
			{
				static__1ad417e08_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1b4baea61:;
			{
				static__1ad418139_LogError(_6417_l);
			}
		}
		_match_end_1b4bae962:;
	};
}



inline void static__1ad41859b_PrintLogs(jule::Slice<_1b08b6838_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4baeb2c:;
		if (it != expr_end) {
			_1b08b6838_Log *_7510_l = it;
			{
				static__1ad41836a_Log(_7510_l);
			}
			_iter_next_1b4baeb2c:;
			++it;
			goto _iter_begin_1b4baeb2c;
		}
		_iter_end_1b4baeb2c:;
	};
	jule::out(_1ac2a1c82_toStr(jule::Str::lit("=== ", 4)));
	jule::out(_1ac2a1c82_toStr(_1aa11b307_Itoa((*(_7423_logs)).len())));
	jule::outln(_1ac2a1c82_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1ae082ab6_AbsTime_eq(_1ae082ab6_AbsTime *_self_, _1ae082ab6_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1ae08328c_Time_eq(_1ae08328c_Time *_self_, _1ae08328c_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1ae08328c_Time static__1ae083677_Unix(jule::U64 _9117_sec) {
	return _1ae08328c_Time{._field_sec=_9117_sec};;
}



inline _1ae08328c_Time static__1ae083886_Now(void) {
	return static__1ae083677_Unix(_1ae08537c_unix());;
}



inline _1ae082ab6_AbsTime _1ae08506e_Abs(_1ae08328c_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1ae082027_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1ae082027_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1b4bdc83b:;
	}
	_iter_end_1b4bdc83b:;;
	_1ae082ab6_AbsTime _1747_t = _1ae082ab6_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1adea99ee_scopeCoder_eq(_1adea99ee_scopeCoder *_self_, _1adea99ee_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1adea99ee_scopeCoder> static__1adeaa1e7_new(jule::Ptr<_1ae08ee9c_ObjectCoder>* _7321_oc) {
	return jule::new_ptr<_1adea99ee_scopeCoder>(_1adea99ee_scopeCoder{._field_oc=(*(_7321_oc))});;
}



inline void _1b4e4053e_iterHead(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac536d08_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ad2b1488_Copy && _1adeb2e25_isCopyOptimizable(&((*((*(_8029_it))))._field_Expr)))) {
		(*(_8041_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8029_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b4e45ad8:;
				{
					jule::Ptr<_1ac5a2527_Var> _895_v = (*((*((*(_8029_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1ac5a2527_Var>();;
					if ((*(_895_v))._field_Reference) {
						_1adec49e7_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
						goto _match_end_1b4e44015;
					};
					goto _case_begin_1b4e4407b;
				}
			}
			else {
				_case_begin_1b4e4407b:;
				{
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1adec49e7_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1b4e44015:;
		};
	} else {
		_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8041_ref))) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8041_ref))) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, _8052_begin);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
}



inline void _1adeaa8bd_rangeIndexIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac536d08_RangeIter>* _12936_it) {
	_1b097ade7_StrBuilder _1307_sb = static__1b097b1e4_New(64LL);;
	static__1adece480_iterBegin(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1323_begin = _1b09854d9_Str(&_1307_sb);;
	_1b09856d7_Clear(&_1307_sb);
	static__1adecea57_iterNext(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1353_next = _1b09854d9_Str(&_1307_sb);;
	jule::Bool _1377_ref = false;;
	_1b4e4053e_iterHead(_self_, _12936_it, &(_1377_ref), _1323_begin);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		_1ae097603_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12936_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b4e51055, jule::Ptr<__jule_anon_1b4e51055_ctx>::make(__jule_anon_1b4e51055_ctx{._self_=_self_,._1377_ref=_1377_ref}).as<jule::Uintptr>(), __jule_anon_1b4e51055_ctx_handler));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ae091069_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12936_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12936_it))))._field_KeyB.alloc)._field_Reference=(_1ad2b1488_Copy && _1adeb32dd_isIterCopyOptimizable(&((*((*(_12936_it))))._field_Expr), &((*((*(_12936_it))))._field_KeyB)));
		_1ae097603_varInitExpr((*(_self_))._field_oc, &((*((*(_12936_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1b4e54a5e, jule::Ptr<__jule_anon_1b4e54a5e_ctx>::make(__jule_anon_1b4e54a5e_ctx{._self_=_self_,._12936_it=_12936_it}).as<jule::Uintptr>(), __jule_anon_1b4e54a5e_ctx_handler));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ae091069_indent((*(_self_))._field_oc);
	};
	_1adeb21bb_scope(_self_, (*((*(_12936_it))))._field_Scope);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, _1353_next);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1ae091069_indent((*(_self_))._field_oc);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		static__1adece194_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_12936_it))))._field_KeyA);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1ae091069_indent((*(_self_))._field_oc);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ae0906b7_write((*(_self_))._field_oc, _1323_begin);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ae091069_indent((*(_self_))._field_oc);
	static__1adece76b_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12936_it))));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1adeaab76_rangeHashmapIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac536d08_RangeIter>* _19638_it) {
	_1b097ade7_StrBuilder _1977_sb = static__1b097b1e4_New(64LL);;
	static__1adece480_iterBegin(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _1993_begin = _1b09854d9_Str(&_1977_sb);;
	_1b09856d7_Clear(&_1977_sb);
	static__1adecea57_iterNext(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _2023_next = _1b09854d9_Str(&_1977_sb);;
	jule::Ptr<_1ac64c094_Map> _2047__map = _1ac64252e_Map((*((*((*(_19638_it))))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1ac4c767d_Struct> _2057_s = _1ac8cc984_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1ac4ca4d8_StructIns> _2067_ins = _1ad29a0a9_FindStructGenericInstance(&(_2057_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_2047__map))._field_Key; (*it++) = (*_2047__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1ac4dee04_FnIns> _2087_f = (*(_1ac4cb583_FindMethod(_2067_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1ac4c767d_Struct> _2107_itDecl = _1ac8cc984_RuntimeFindStruct(&((*(*((*(_self_))._field_oc))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));;
	jule::Ptr<_1ac4ca4d8_StructIns> _2117_iterator = _1ad29a0a9_FindStructGenericInstance(&(_2107_itDecl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_2047__map.alloc)._field_Key; (*it++) = (*_2047__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1ac4dee04_FnIns> _2127_nextCall = (*(_1ac4cb583_FindMethod(_2117_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0a3488_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _2117_iterator);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2087_f));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_19638_it))))._field_Expr.alloc)._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, _1993_begin);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0a4698_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2127_nextCall));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2127_nextCall));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	if (((*((*(_19638_it))))._field_KeyA != nullptr)) {
		_1ae097603_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b4e75145, jule::Ptr<__jule_anon_1b4e75145_ctx>::make(__jule_anon_1b4e75145_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b4e75145_ctx_handler));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ae091069_indent((*(_self_))._field_oc);
	};
	if (((*((*(_19638_it))))._field_KeyB != nullptr)) {
		_1ae097603_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1b4e77631, jule::Ptr<__jule_anon_1b4e77631_ctx>::make(__jule_anon_1b4e77631_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b4e77631_ctx_handler));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ae091069_indent((*(_self_))._field_oc);
	};
	_1adeb21bb_scope(_self_, (*((*(_19638_it))))._field_Scope);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, _2023_next);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ae0906b7_write((*(_self_))._field_oc, _1993_begin);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ae091069_indent((*(_self_))._field_oc);
	static__1adece76b_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19638_it))));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1adeaae2e_strRuneIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac73ae52_StrRuneIter> _27932_it) {
	_1b097ade7_StrBuilder _2807_sb = static__1b097b1e4_New(64LL);;
	static__1adece480_iterBegin(&(_2807_sb), static_cast<jule::Uintptr>((*(_27932_it))._field_Base));
	jule::Str _2823_begin = _1b09854d9_Str(&_2807_sb);;
	_1b09856d7_Clear(&_2807_sb);
	static__1adecea57_iterNext(&(_2807_sb), static_cast<jule::Uintptr>((*_27932_it.alloc)._field_Base));
	jule::Str _2853_next = _1b09854d9_Str(&_2807_sb);;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	jule::Bool _2917_ref = false;;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ad2b1488_Copy && _1adeb2e25_isCopyOptimizable(&((*_27932_it.alloc)._field_Expr)))) {
		_2917_ref=true;
		{
			auto &_match_expr{ (*((*(_27932_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b4e86794:;
				{
					jule::Ptr<_1ac5a2527_Var> _2975_v = (*((*(_27932_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1ac5a2527_Var>();;
					if ((*(_2975_v))._field_Reference) {
						_1adec49e7_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1b4e84bc1;
					};
					goto _case_begin_1b4e84c37;
				}
			}
			else {
				_case_begin_1b4e84c37:;
				{
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1adec49e7_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1b4e84bc1:;
		};
	} else {
		_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2917_ref) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2917_ref) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1ae091069_indent((*(_self_))._field_oc);
	if (((*((*_27932_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1ae097603_varInitExpr((*(_self_))._field_oc, &((*(*(_27932_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b4e915e5, jule::Ptr<__jule_anon_1b4e915e5_ctx>::make(__jule_anon_1b4e915e5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b4e915e5_ctx_handler));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ae091069_indent((*(_self_))._field_oc);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1ae091069_indent((*(_self_))._field_oc);
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1ae097603_varInitExpr((*(_self_))._field_oc, &((*(*(_27932_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ae091069_indent((*(_self_))._field_oc);
	};
	_1ae0906b7_write((*(_self_))._field_oc, _2823_begin);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1adece194_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_27932_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1adeb21bb_scope(_self_, (*(*(_27932_it))._field_Base.alloc)._field_Scope);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, _2853_next);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1ae091069_indent((*(_self_))._field_oc);
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1adece194_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_27932_it))._field_Base.alloc)._field_KeyA);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1ae091069_indent((*(_self_))._field_oc);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ae0906b7_write((*(_self_))._field_oc, _2823_begin);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1adeab1d7_ifCase(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac5353de_If> _39127_i) {
	if (((*(_39127_i))._field_Expr != nullptr)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39127_i.alloc)._field_Expr);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1adeb21bb_scope(_self_, (*_39127_i.alloc)._field_Scope);
}



inline void _1adeab490_conditional(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac535b09_Conditional> _40032_c) {
	jule::Bool _4017_writed = false;;
	{
		auto expr = &((*(_40032_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4ea6b5a:;
		if (it != expr_end) {
			jule::Ptr<_1ac5353de_If> _40215_elif = *it;
			{
				if ((_40215_elif == nullptr)) {
					goto _iter_next_1b4ea6b5a;
				};
				if (_4017_writed) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_4017_writed=true;
				_1adeab1d7_ifCase(_self_, _40215_elif);
			}
			_iter_next_1b4ea6b5a:;
			++it;
			goto _iter_begin_1b4ea6b5a;
		}
		_iter_end_1b4ea6b5a:;
	};
	if (((*_40032_c.alloc)._field_Default != nullptr)) {
		if (_4017_writed) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1adeb21bb_scope(_self_, (*(*(_40032_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1adeab748_infIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac535e06_InfIter> _42028_it) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1adeb21bb_scope(_self_, (*(_42028_it))._field_Scope);
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ae091069_indent((*(_self_))._field_oc);
	static__1adecea57_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_42028_it));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ae091069_indent((*(_self_))._field_oc);
	static__1adece76b_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_42028_it));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1adeaba01_whileIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac5363ac_WhileIter> _43730_it) {
	if ((((*(_43730_it))._field_Expr != nullptr) && ((*_43730_it.alloc)._field_Next == nullptr))) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_43730_it.alloc)._field_Expr);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_43730_it))._field_Expr != nullptr)) {
			_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_43730_it.alloc)._field_Expr);
		};
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_43730_it.alloc)._field_Next != nullptr)) {
			_1adeb1b5a_st(_self_, (*_43730_it.alloc)._field_Next);
		};
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_43730_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1adeb21bb_scope(_self_, (*_43730_it.alloc)._field_Scope);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	static__1adecea57_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_43730_it));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ae091069_indent((*(_self_))._field_oc);
	static__1adece76b_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_43730_it));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1adeabca9_rangeIter(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac536d08_RangeIter> _47630_it) {
	{
		
		if ((_1ac6419e5_Slc((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b4ebc555:;
			{
				_1adeaa8bd_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		else if ((_1ac64175e_Arr((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b4ebc203:;
			{
				_1adeaa8bd_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		else if ((_1ac64252e_Map((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b4ebc269:;
			{
				_1adeaab76_rangeHashmapIter(_self_, &(_47630_it));
			}
		}
		else {
			_case_begin_1b4ebc18c:;
			{
				_1adeaa8bd_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		_match_end_1b4ebc07c:;
	};
}



inline void _1adeac062_cont(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac53718d_ContSt> _48921_c) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1adecea57_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_48921_c))._field_It);
}



inline void _1adeac31a_label(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac537a1d_Label> _49422_l) {
	static__1adeced43_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_49422_l));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1adeac5c3_gotoSt(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac53817d_GotoSt> _49923_gt) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1adeced43_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_49923_gt))._field_Label));
}



inline void _1adeac87b_postfix(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538557_Postfix> _50428_p) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_50428_p))._field_Expr);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1ae0906b7_write((*(_self_))._field_oc, (*_50428_p.alloc)._field_Op);
}



inline void _1adeacb34_assignLeft(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Any* _51132_model) {
	{
		auto &_match_expr{ (*(_51132_model)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b4ec6570:;
			{
				jule::Ptr<_1ac4d215a_IndexingExprModel> _5148_iem = (*(_51132_model)).cast_ptr<_1ac4d215a_IndexingExprModel>(&__jule_any_type52);;
				jule::Ptr<_1ac64c094_Map> _5154__map = _1ac64252e_Map((*((*(_5148_iem))._field_Expr))._field_Kind.ptr());;
				if ((_5154__map == nullptr)) {
					goto _match_end_1b4ec6509;
				};
				jule::Ptr<_1ac4c767d_Struct> _5218_s = _1ac8cc984_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1ac4ca4d8_StructIns> _5228_ins = _1ad29a0a9_FindStructGenericInstance(&(_5218_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5154__map))._field_Key; (*it++) = (*(_5154__map))._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1ac4dee04_FnIns> _5248_f = (*(_1ac4cb583_FindMethod(_5228_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_5248_f));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_5148_iem))._field_Expr.alloc)._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_1b03a1730_Production))) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ae092d4b_locInfo((*(_self_))._field_oc, &((*_5148_iem.alloc)._field_Token));
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1adeba944_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_5148_iem.alloc)._field_Index))._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1b4ec6509:;
	};
	_1adeba944_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_51132_model)));
}



inline void _1adeacddc_shl(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538a0d_Assign> _54324_a) {
	_1adeacb34_assignLeft(_self_, &((*((*(_54324_a))._field_Left))._field_Model));
	_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1adeb91e5_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_54324_a.alloc)._field_Left), &((*_54324_a.alloc)._field_Right));
}



inline void _1adead195_shr(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538a0d_Assign> _54924_a) {
	_1adeacb34_assignLeft(_self_, &((*((*(_54924_a))._field_Left))._field_Model));
	_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1adeb9558_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_54924_a.alloc)._field_Left), &((*_54924_a.alloc)._field_Right));
}



inline void _1adead44d_divByZeroAssign(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538a0d_Assign> _55536_a) {
	_1adeacb34_assignLeft(_self_, &((*((*(_55536_a))._field_Left))._field_Model));
	_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1adeb83d1_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_55536_a.alloc)._field_Op), &((*_55536_a.alloc)._field_Left), &((*_55536_a.alloc)._field_Right));
}



inline void _1adead926_operatorOverloadingAssign(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _56147_s, jule::Ptr<_1ac4ce300_OperandExprModel>* _56173_l, jule::Ptr<_1ac4ce300_OperandExprModel>* _5628_r, jule::U64 _56236_op) {
	;
	jule::Ptr<_1ac4dee04_FnIns> _5647_f = _1ad2997a1_FindOperator(_56147_s, _56236_op, false);;
	if ((_5647_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:566:4"));;
	};
	static__1adecce1d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5647_f));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1adeacb34_assignLeft(_self_, &((*((*(_56173_l))))._field_Model));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5628_r))))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adeadbce_assign(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538a0d_Assign> _57627_a) {
	{
		auto &_match_expr{ (*((*(_57627_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b4edc025:;
			{
				if ((_1b03a14dd_Safety && (_1ac642012_Struct((*((*(_57627_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1adead44d_divByZeroAssign(_self_, _57627_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b4edc09c:;
			{
				if ((_1ac642012_Struct((*((*(_57627_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1adeacddc_shl(_self_, _57627_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b4edc113:;
			{
				if ((_1ac642012_Struct((*((*(_57627_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1adead195_shr(_self_, _57627_a);
					return;;
				};
			}
		}
		_match_end_1b4edbe59:;
	};
	if ((((*((*(_57627_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1ac642012_Struct((*((*_57627_a.alloc)._field_Left))._field_Kind.ptr()) != nullptr))) {
		jule::Ptr<_1ac4ca4d8_StructIns> _5998_s = _1ac642012_Struct((*((*(_57627_a))._field_Left))._field_Kind);;
		_1adead926_operatorOverloadingAssign(_self_, &(_5998_s), &((*_57627_a.alloc)._field_Left), &((*_57627_a.alloc)._field_Right), (*(*(_57627_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1adeacb34_assignLeft(_self_, &((*(*(_57627_a))._field_Left.alloc)._field_Model));
	_1ae0906b7_write((*_self_.alloc)._field_oc, (*(*(_57627_a))._field_Op.alloc)._field_Kind);
	_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_57627_a.alloc)._field_Right))._field_Model);
}



inline void _1adeade87_mapLookupAssign(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538eb4_MultiAssign>* _60937_a) {
	jule::Ptr<_1ac4d215a_IndexingExprModel> _6117_iem = (*((*(_60937_a))))._field_Right.cast_ptr<_1ac4d215a_IndexingExprModel>(&__jule_any_type52);;
	jule::Ptr<_1ac64c094_Map> _6127__map = _1ac64252e_Map((*((*(_6117_iem))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1ac4c767d_Struct> _6147_s = _1ac8cc984_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1ac4ca4d8_StructIns> _6157_ins = _1ad29a0a9_FindStructGenericInstance(&(_6147_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_6127__map))._field_Key; (*it++) = (*_6127__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1ac4dee04_FnIns> _6177_f = (*(_1ac4cb583_FindMethod(_6157_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_6177_f));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1adeacb34_assignLeft(_self_, &((*(*(_6117_iem))._field_Expr.alloc)._field_Model));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_6117_iem.alloc)._field_Index))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_60937_a))))._field_Left[0LL] != nullptr)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1adeba944_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_60937_a))))._field_Left[0LL]))._field_Model);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_60937_a))))._field_Left[1LL] != nullptr)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1adeba944_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_60937_a))))._field_Left[1LL]))._field_Model);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adeae240_multiAssignTup(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538eb4_MultiAssign>* _64236_a) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1ac4d4dd8_TupleExprModel> _6467_tup = (*((*(_64236_a))))._field_Right.cast_ptr<_1ac4d4dd8_TupleExprModel>(&__jule_any_type83);;
	{
		auto expr = &((*(_6467_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5002a41:;
		if (it != expr_end) {
			jule::I64 _6488_i = it - expr->begin();
			jule::Ptr<_1ac60a55d_Data> _64815_r = *it;
			{
				_1ae091069_indent((*(_self_))._field_oc);
				jule::Ptr<_1ac60a55d_Data> _6508_l = (*((*(_64236_a))))._field_Left[_6488_i];;
				if ((_6508_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6508_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b5005abb:;
							{
								jule::Ptr<_1ac5a2527_Var> _65410_v = (*(_6508_l))._field_Model.unsafe_cast_ptr<_1ac5a2527_Var>();;
								if (((*(_65410_v))._field_Reference && (!(_1ac5a2934_IsInitialized(_65410_v))))) {
									static__1adece194_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _65410_v);
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_64815_r))._field_Model);
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_64236_a))))._field_Left[_6488_i]=nullptr;
									goto _iter_next_1b5002a41;
								};
							}
						}
						_match_end_1b5005a55:;
					};
					_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6508_l.alloc)._field_Kind);
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1adecc3e5_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1adea9290_assignArgName, static_cast<jule::Uintptr>(_6488_i));
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1adeba944_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_64815_r.alloc)._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b5002a41:;
			++it;
			_6488_i++;
			goto _iter_begin_1b5002a41;
		}
		_iter_end_1b5002a41:;
	};
	{
		auto expr = &((*((*(_64236_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b500c1ee:;
		if (it != expr_end) {
			jule::I64 _6758_i = it - expr->begin();
			jule::Ptr<_1ac60a55d_Data> _67515_l = *it;
			{
				if ((_67515_l == nullptr)) {
					goto _iter_next_1b500c1ee;
				};
				_1ae091069_indent((*(_self_))._field_oc);
				_1adeacb34_assignLeft(_self_, &((*(_67515_l))._field_Model));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1adecc3e5_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1adea9290_assignArgName, static_cast<jule::Uintptr>(_6758_i));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b500c1ee:;
			++it;
			_6758_i++;
			goto _iter_begin_1b500c1ee;
		}
		_iter_end_1b500c1ee:;
	};
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1adeae4e8_multiAssignFn(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538eb4_MultiAssign>* _69135_a) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	jule::Ptr<_1ac4d17ca_FnCallExprModel> _6967_f = (*((*(_69135_a))))._field_Right.cast_ptr<_1ac4d17ca_FnCallExprModel>(&__jule_any_type40);;
	_1ae0aa182_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6967_f))._field_Func))._field_Result));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_69135_a))))._field_Right);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1ac64b4e4_Tuple> _7027_tup = _1ac6427b5_Tup((*(*(_6967_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_69135_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5015d95:;
		if (it != expr_end) {
			jule::I64 _7038_i = it - expr->begin();
			jule::Ptr<_1ac60a55d_Data> _70315_l = *it;
			{
				if ((_70315_l == nullptr)) {
					goto _iter_next_1b5015d95;
				};
				;
				_1ae091069_indent((*(_self_))._field_oc);
				_1adeacb34_assignLeft(_self_, &((*(_70315_l))._field_Model));
				{
					
					if (_1ac63da25_Equal((*(_7027_tup))._field_Types[_7038_i], (*(_70315_l))._field_Kind)) {
						_case_begin_1b502107b:;
						{
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_7038_i));
						}
					}
					else if (_1ad29632a_IsAny(&((*(_70315_l))._field_Kind))) {
						_case_begin_1b501ce8a:;
						{
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_7038_i));
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_1ae0921be_pushAnyType((*(_self_))._field_oc, (*(_7027_tup))._field_Types[_7038_i])));
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1b5017182:;
						{
							if ((_1ac642298_Trait((*(_7027_tup))._field_Types[_7038_i].ptr()) != nullptr)) {
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1ac5008a4_Trait> _72410_t1 = _1ac642298_Trait((*(_70315_l))._field_Kind.ptr());;
								jule::Ptr<_1ac5008a4_Trait> _72510_t2 = _1ac642298_Trait((*(_7027_tup))._field_Types[_7038_i].ptr());;
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_7038_i));
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1ae092a93_pushAndWriteMaskMapper((*(_self_))._field_oc, _72410_t1, _72510_t2);
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1b5018084;
							};
							jule::Ptr<_1ac5008a4_Trait> _7335_t = _1ac642298_Trait((*(_70315_l))._field_Kind);;
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_7038_i));
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1adecd209_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _7335_t);
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_1ad299372_FindTraitTypeOffset(_7335_t, (*(_7027_tup))._field_Types[_7038_i])));
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1b5018084:;
				};
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b5015d95:;
			++it;
			_7038_i++;
			goto _iter_begin_1b5015d95;
		}
		_iter_end_1b5015d95:;
	};
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1adeae7a1_multiAssign(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac538eb4_MultiAssign> _75032_a) {
	{
		auto expr = &((*(_75032_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b50269dd:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _75315_d = *it;
			{
				_1ae097603_varInitExpr((*(_self_))._field_oc, &(_75315_d), nullptr);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1ae091069_indent((*(_self_))._field_oc);
			}
			_iter_next_1b50269dd:;
			++it;
			goto _iter_begin_1b50269dd;
		}
		_iter_end_1b50269dd:;
	};
	{
		auto &_match_expr{ (*(_75032_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b5027208:;
			{
				_1adeade87_mapLookupAssign(_self_, &(_75032_a));
				return;;
			}
		}
		_match_end_1b5027192:;
	};
	{
		auto &_match_expr{ (*(_75032_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b5027291:;
			{
				_1adeae240_multiAssignTup(_self_, &(_75032_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b5028c54:;
			{
				_1adeae4e8_multiAssignFn(_self_, &(_75032_a));
			}
		}
		else {
			_case_begin_1b5028bdd:;
			{
				__jule_panic_s(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:772:4"));;
			}
		}
		_match_end_1b5028b77:;
	};
}



inline jule::Fn<void> _1adeaeae2_matchExpr(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac539701_Match> _77630_m) {
	if ((!(_1ac60ae98_IsConst((*(_77630_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1b502b2a6, jule::Ptr<__jule_anon_1b502b2a6_ctx>::make(__jule_anon_1b502b2a6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b502b2a6_ctx_handler);;
	};
	if (((!(_1aa12d8e1_IsBool((*(*(_77630_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1aa12b2e5_ReadBool((*((*(_77630_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1b5032444, jule::Ptr<__jule_anon_1b5032444_ctx>::make(__jule_anon_1b5032444_ctx{._self_=_self_,._77630_m=_77630_m}).as<jule::Uintptr>(), __jule_anon_1b5032444_ctx_handler);;
	};
	return nullptr;;
}



inline void _1adeaee55_case(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac539701_Match> _78625_m, jule::Ptr<_1ac53a229_Case> _78640_c) {
	if ((((*(_78640_c))._field_Exprs.len() != 0LL) && (!((*(_78625_m))._field_Comptime)))) {
		if ((((*_78625_m.alloc)._field_Cases.len() > 0LL) && ((*(_78625_m))._field_Cases[0LL] == _78640_c))) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_78640_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b50366ce:;
			if (it != expr_end) {
				jule::I64 _7939_i = it - expr->begin();
				jule::Ptr<_1ac60a55d_Data> _79316_expr = *it;
				{
					{
						
						if ((!((*_78625_m.alloc)._field_TypeMatch))) {
							_case_begin_1b503e20e:;
							{
								jule::Fn<void> _7966_caseExpr = _1adeaeae2_matchExpr(_self_, _78625_m);;
								if (_1ac60b2d9_GoodOperand((*_78625_m.alloc)._field_Expr.ptr(), &(_79316_expr))) {
									if ((_7966_caseExpr != nullptr)) {
										_7966_caseExpr();
										_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_79316_expr))._field_Model);
								} else {
									_1adeba944_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_79316_expr))._field_Model);
									if ((_7966_caseExpr != nullptr)) {
										_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7966_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b50372a1:;
							{
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1ac63d2d8_TypeKind> _81210_tk = (*(_79316_expr))._field_Model.cast_ptr<_1ac63d2d8_TypeKind>(&__jule_any_type86);;
								if ((_1ac642298_Trait((*((*_78625_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1adeb6c3c_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1ac640c25_Sptr((*(_79316_expr))._field_Kind) != nullptr));
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1adecd209_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ac642298_Trait((*((*(_78625_m))._field_Expr))._field_Kind));
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_1ad299372_FindTraitTypeOffset(_1ac642298_Trait((*((*(_78625_m))._field_Expr))._field_Kind), (*_79316_expr.alloc)._field_Kind)));
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _8227_j = _1ae0921be_pushAnyType((*(_self_))._field_oc, _81210_tk);;
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_8227_j));
								};
							}
						}
						_match_end_1b5037191:;
					};
					if ((((*_78640_c.alloc)._field_Exprs.len() - _7939_i) > 1LL)) {
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1b50366ce:;
				++it;
				_7939_i++;
				goto _iter_begin_1b50366ce;
			}
			_iter_end_1b50366ce:;
		};
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_78625_m))._field_Default == _78640_c) && ((*_78625_m.alloc)._field_Cases.len() != 0LL))) {
		_1ae091069_indent((*(_self_))._field_oc);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ae091069_indent((*(_self_))._field_oc);
	static__1aded041a_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_78640_c));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_78640_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1ae091069_indent((*(_self_))._field_oc);
		_1adeb21bb_scope(_self_, (*_78640_c.alloc)._field_Scope);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1adeb020d_matchSt(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac539701_Match> _85628_m) {
	if ((((*(_85628_m))._field_Cases.len() == 0LL) && ((*_85628_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_85628_m.alloc)._field_Comptime && (((*_85628_m.alloc)._field_Default == nullptr) || ((*((*((*_85628_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	if (((!((*_85628_m.alloc)._field_Comptime)) && (!(_1ac60ae98_IsConst((*_85628_m.alloc)._field_Expr.ptr()))))) {
		if ((_1ad2b1488_Copy && _1adeb2e25_isCopyOptimizable(&((*_85628_m.alloc)._field_Expr)))) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_85628_m))._field_Expr.alloc)._field_Model);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1ae091069_indent((*(_self_))._field_oc);
	};
	if (((*_85628_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_85628_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b5052a4c:;
			if (it != expr_end) {
				jule::Ptr<_1ac53a229_Case> _88416_c = *it;
				{
					if ((_88416_c == nullptr)) {
						goto _iter_next_1b5052a4c;
					};
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ae091069_indent((*(_self_))._field_oc);
					_1adeaee55_case(_self_, _85628_m, _88416_c);
				}
				_iter_next_1b5052a4c:;
				++it;
				goto _iter_begin_1b5052a4c;
			}
			_iter_end_1b5052a4c:;
		};
	};
	if (((*_85628_m.alloc)._field_Default != nullptr)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1adeaee55_case(_self_, _85628_m, (*_85628_m.alloc)._field_Default);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ae091069_indent((*(_self_))._field_oc);
	static__1aded012e_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_85628_m));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1adeb04b6_fallSt(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac53a922_FallSt> _91123_f) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1aded041a_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_91123_f))._field_DestCase);
}



inline void _1adeb076e_breakSt(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac537567_BreakSt> _91624_b) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_91624_b))._field_It != 0LLU)) {
		static__1adece76b_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_91624_b.alloc)._field_It);
	} else {
		static__1aded012e_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_91624_b))._field_Mtch);
	};
}



inline void _1adeb0a27_setResult(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac53acb8_RetSt> _92530_r) {
	if (((*((*((*((*(_92530_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_92530_r.alloc)._field_Expr);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1ae091069_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_92530_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b4c04798:;
			{
				jule::Slice<jule::Ptr<_1ac60a55d_Data>> _9358_datas = (*((*(_92530_r))._field_Expr.unsafe_cast_ptr<_1ac4d4dd8_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_9358_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4c084a0:;
					if (it != expr_end) {
						jule::I64 _9368_i = it - expr->begin();
						jule::Ptr<_1ac60a55d_Data> _93611_data = *it;
						{
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_9368_i));
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1adeba944_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_93611_data))._field_Model);
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1ae091069_indent((*(_self_))._field_oc);
						}
						_iter_next_1b4c084a0:;
						++it;
						_9368_i++;
						goto _iter_begin_1b4c084a0;
					}
					_iter_end_1b4c084a0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b4c07427:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1adec49e7_model((*((*(_self_))._field_oc))._field_ec, (*_92530_r.alloc)._field_Expr);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1b4c0703c:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:949:4"));;
			}
		}
		_match_end_1b4c06ec6:;
	};
}



inline void _1adeb0cd0_retSt(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac53acb8_RetSt> _95326_r) {
	if (_1ac4dc2ec_IsVoid((*((*(_95326_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_95326_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_95326_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_95326_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_95326_r))._field_Func.alloc)._field_Result);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_95326_r.alloc)._field_Expr);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_95326_r.alloc)._field_Expr);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_95326_r))._field_Expr != nullptr)) {
		_1adeb0a27_setResult(_self_, _95326_r);
	};
	if ((*((*((*_95326_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1ae0aa182_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_95326_r))._field_Func.alloc)._field_Result));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1adeb1088_var(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac5a2527_Var> _98924_v) {
	if ((!((*(_98924_v))._field_Constant))) {
		_1ae0978ab_var((*(_self_))._field_oc, _98924_v);
	};
}



inline void _1adeb1341_mutSlicing(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac739b43_MutSlicingExprModel> _99531_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_99531_m))._field_Expr);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1b03a1730_Production))) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ae092d4b_locInfo((*(_self_))._field_oc, &((*_99531_m.alloc)._field_Token));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1adeba944_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_99531_m.alloc)._field_Left);
	if (((*_99531_m.alloc)._field_Right != nullptr)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1adeba944_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_99531_m.alloc)._field_Right);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1adeb15e9_swap(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac7388de_SwapExprModel> _101225_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1adeba944_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_101225_m))._field_Left))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1adeba944_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_101225_m.alloc)._field_Right))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adeb18a2_exceptionalForwarding(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac738559_ExceptionalForwardingExprModel> _102042_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1adebc36e_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_102042_m))._field_Expr));
}



inline void _1adeb1b5a_st(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Any _102623_st) {
	if ((_102623_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _102623_st };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b4c257db:;
			{
				_1adeb21bb_scope(_self_, _102623_st.cast_ptr<_1ac534ec1_Scope>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4c25a61:;
			{
				_1adeb1088_var(_self_, _102623_st.cast_ptr<_1ac5a2527_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b4c25ac7:;
			{
				_1adec49e7_model((*((*(_self_))._field_oc))._field_ec, (*(_102623_st.unsafe_cast_ptr<_1ac60a55d_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b4c26347:;
			{
				_1adeab490_conditional(_self_, _102623_st.cast_ptr<_1ac535b09_Conditional>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b4c263ad:;
			{
				_1adeab748_infIter(_self_, _102623_st.cast_ptr<_1ac535e06_InfIter>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b4c26424:;
			{
				_1adeaba01_whileIter(_self_, _102623_st.cast_ptr<_1ac5363ac_WhileIter>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b4c2648a:;
			{
				_1adeabca9_rangeIter(_self_, _102623_st.cast_ptr<_1ac536d08_RangeIter>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b4c26501:;
			{
				_1adeac062_cont(_self_, _102623_st.cast_ptr<_1ac53718d_ContSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b4c26567:;
			{
				_1adeac31a_label(_self_, _102623_st.cast_ptr<_1ac537a1d_Label>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b4c265cd:;
			{
				_1adeac5c3_gotoSt(_self_, _102623_st.cast_ptr<_1ac53817d_GotoSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b4c26644:;
			{
				_1adeac87b_postfix(_self_, _102623_st.cast_ptr<_1ac538557_Postfix>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b4c266aa:;
			{
				_1adeadbce_assign(_self_, _102623_st.cast_ptr<_1ac538a0d_Assign>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b4c26721:;
			{
				_1adeae7a1_multiAssign(_self_, _102623_st.cast_ptr<_1ac538eb4_MultiAssign>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b4c26787:;
			{
				_1adeb020d_matchSt(_self_, _102623_st.cast_ptr<_1ac539701_Match>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1b4c267ed:;
			{
				_1adeb04b6_fallSt(_self_, _102623_st.cast_ptr<_1ac53a922_FallSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1b4c26875:;
			{
				_1adeb076e_breakSt(_self_, _102623_st.cast_ptr<_1ac537567_BreakSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b4c268ec:;
			{
				_1adeb0cd0_retSt(_self_, _102623_st.cast_ptr<_1ac53acb8_RetSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b4c26974:;
			{
				_1adec24c8_pushToSlice((*((*(_self_))._field_oc))._field_ec, _102623_st.cast_ptr<_1ac73a69e_PushToSliceExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b4c269eb:;
			{
				_1adec2781_appendToSlice((*((*(_self_))._field_oc))._field_ec, _102623_st.cast_ptr<_1ac73aa78_AppendToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b4c26a73:;
			{
				_1adeb1341_mutSlicing(_self_, _102623_st.cast_ptr<_1ac739b43_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1b4c26aea:;
			{
				_1adeb15e9_swap(_self_, _102623_st.cast_ptr<_1ac7388de_SwapExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b4c26b72:;
			{
				_1adeb18a2_exceptionalForwarding(_self_, _102623_st.cast_ptr<_1ac738559_ExceptionalForwardingExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b4c26be9:;
			{
				_1adeaae2e_strRuneIter(_self_, _102623_st.cast_ptr<_1ac73ae52_StrRuneIter>(&__jule_any_type122));
			}
		}
		else {
			_case_begin_1b4c25654:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b4c255dd:;
	};
}



inline void _1adeb1e13_scopeStmts(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac534ec1_Scope>* _108232_s) {
	{
		auto expr = &((*((*(_108232_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4c34cb2:;
		if (it != expr_end) {
			jule::Any _108315_st = *it;
			{
				_1ae091069_indent((*(_self_))._field_oc);
				_1adeb1b5a_st(_self_, _108315_st);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b4c34cb2:;
			++it;
			goto _iter_begin_1b4c34cb2;
		}
		_iter_end_1b4c34cb2:;
	};
}



inline void _1adeb21bb_scope(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac534ec1_Scope> _109126_s) {
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	if ((*(_109126_s))._field_Deferred) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1adeb1e13_scopeStmts(_self_, &(_109126_s));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_109126_s.alloc)._field_Deferred) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1adeb2474_commonFuncScope(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac4dee04_FnIns>* _110637_f) {
	if ((!(_1ac4dc2ec_IsVoid((*((*(_110637_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1ac64b4e4_Tuple> _11088_tup = _1ac6427b5_Tup((*((*(_110637_f))))._field_Result.ptr());;
		if ((_11088_tup != nullptr)) {
			_1ae091069_indent((*(_self_))._field_oc);
			_1ae0a99ab_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _11088_tup);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_11088_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b4c3ba33:;
				if (it != expr_end) {
					jule::I64 _111310_i = it - expr->begin();
					jule::Ptr<_1ac63d2d8_TypeKind> _111317_t = *it;
					{
						if (_1ae0ac360_shouldInitialized(&(_111317_t))) {
							_1ae091069_indent((*(_self_))._field_oc);
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_111310_i));
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1adec5bb3_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _111317_t);
							_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1b4c3ba33:;
					++it;
					_111310_i++;
					goto _iter_begin_1b4c3ba33;
				}
				_iter_end_1b4c3ba33:;
			};
		} else if (((*((*(*((*(_110637_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1ae091069_indent((*(_self_))._field_oc);
			_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_110637_f))))._field_Result);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1ae0ac360_shouldInitialized(&((*((*(_110637_f))))._field_Result))) {
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1adec5bb3_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_110637_f))))._field_Result);
			};
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1adeb1e13_scopeStmts(_self_, &((*((*(_110637_f))))._field_Scope));
	if (((*(*((*(_110637_f))))._field_Decl.alloc)._field_Exceptional && _1ac4dc2ec_IsVoid((*((*(_110637_f))))._field_Decl))) {
		_1ae091069_indent((*_self_.alloc)._field_oc);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1adeb27d7_anonFuncScope(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel> _114634_m, jule::Str _114655_ident) {
	if (((*((*(_114634_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11503_closure = _1ad29666b_IsClosure(&(_114634_m));;
	if (_11503_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1ac5a2527_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1ac5a2527_Var>>((void*)__jule_anon_1b4c4a404, jule::Ptr<__jule_anon_1b4c4a404_ctx>::make(__jule_anon_1b4c4a404_ctx{._self_=_self_,._114634_m=_114634_m}).as<jule::Uintptr>(), __jule_anon_1b4c4a404_ctx_handler); __jule_collection; }));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	if (_11503_closure) {
		_1ae091069_indent((*(_self_))._field_oc);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1ae0906b7_write((*(_self_))._field_oc, _114655_ident);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1ae0906b7_write((*(_self_))._field_oc, _114655_ident);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1adeb2474_commonFuncScope(_self_, &((*_114634_m.alloc)._field_Func));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11503_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1adeb2a90_funcScope(jule::Ptr<_1adea99ee_scopeCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _117830_f) {
	if (((*(_117830_f))._field_Scope == nullptr)) {
		return;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1adeb2474_commonFuncScope(_self_, &(_117830_f));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1adeb62d0_exprCoder> static__1adeb66cb_new(jule::Ptr<_1ae08ee9c_ObjectCoder>* _11221_oc) {
	return jule::new_ptr<_1adeb62d0_exprCoder>(_1adeb62d0_exprCoder{._field_oc=(*(_11221_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1ac5a2527_Var>>>(nullptr)});;
}



inline void _1adeb6984_string(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1aa1293c0_Const>* _11824_c) {
	jule::Str _1193_content = _1aa12b57b_ReadStr((*(_11824_c)).ptr());;
	if ((_1193_content.len() == 0LL)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1243_len = _1aa11b03d_FmtInt(static_cast<jule::I64>(_1193_content.len()), 10LL);;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1adec6972_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1193_content);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ae0906b7_write((*(_self_))._field_oc, _1243_len);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adeb6c3c_boolean(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Bool _13324_b) {
	if (_13324_b) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1adeb6e3a_nilLit(jule::Ptr<_1adeb62d0_exprCoder> _self_) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1adeb727b_ftoaSpecialCases(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::F64* _14534_x) {
	{
		
		if (_1a9d04463_IsNaN((*(_14534_x)))) {
			_case_begin_1b5073276:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1a9d04ae5_IsInf((*(_14534_x)), 1LL)) {
			_case_begin_1b5073320:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1a9d04ae5_IsInf((*(_14534_x)), -1LL)) {
			_case_begin_1b5073397:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b50731dd:;
			{
				return false;;
			}
		}
		_match_end_1b50730cd:;
	};
	return true;;
}



inline void _1adeb7534_float32(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1aa1293c0_Const>* _15925_c) {
	jule::F64 _1603_x = _1aa12c0b5_AsF64((*(_15925_c)).ptr());;
	if (_1adeb727b_ftoaSpecialCases(_self_, &(_1603_x))) {
		return;;
	};
	{
		
		if ((_1603_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b5077533:;
			{
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1603_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b507690b:;
			{
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b5076576:;
			{
				_1adec6d18_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1603_x, 32LL);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1b5076312:;
	};
}



inline void _1adeb77dc_float64(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1aa1293c0_Const>* _17825_c) {
	jule::F64 _1793_x = _1aa12c0b5_AsF64((*(_17825_c)).ptr());;
	if (_1adeb727b_ftoaSpecialCases(_self_, &(_1793_x))) {
		return;;
	};
	{
		
		if ((_1793_x == jule::MAX_F64)) {
			_case_begin_1b5079d71:;
			{
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1793_x == jule::MIN_F64)) {
			_case_begin_1b5079a52:;
			{
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b50799db:;
			{
				_1adec6d18_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1793_x, 64LL);
			}
		}
		_match_end_1b5079777:;
	};
}



inline void _1adeb7a95_constant(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1aa1293c0_Const> _19629_c) {
	{
		
		if (_1aa12db77_IsStr(_19629_c.ptr())) {
			_case_begin_1b507bbec:;
			{
				_1adeb6984_string(_self_, &(_19629_c));
			}
		}
		else if (_1aa12d8e1_IsBool(_19629_c.ptr())) {
			_case_begin_1b507bc63:;
			{
				_1adeb6c3c_boolean(_self_, _1aa12b2e5_ReadBool(_19629_c));
			}
		}
		else if (_1aa12de0d_IsF64(_19629_c.ptr())) {
			_case_begin_1b507bcc9:;
			{
				{
					
					if (((*_19629_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1b507e716:;
						{
							_1adeb7534_float32(_self_, &(_19629_c));
						}
					}
					else {
						_case_begin_1b507e370:;
						{
							_1adeb77dc_float64(_self_, &(_19629_c));
						}
					}
					_match_end_1b507e260:;
				};
			}
		}
		else if (_1aa12d3c4_IsI64(_19629_c.ptr())) {
			_case_begin_1b507bd40:;
			{
				_1adec7104_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1aa12acc8_ReadI64(_19629_c));
			}
		}
		else if (_1aa12d65a_IsU64(_19629_c.ptr())) {
			_case_begin_1b507bda6:;
			{
				_1adec73e0_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1aa12b05e_ReadU64(_19629_c));
			}
		}
		else if (_1aa12e194_IsNil(_19629_c.ptr())) {
			_case_begin_1b507be1c:;
			{
				_1adeb6e3a_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b507bb86:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b507ba87:;
	};
}



inline void _1adeb7eb3_operatorOverloadingUnary(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _22046_s, jule::U64 _22061_op, jule::Any _22078_e) {
	;
	jule::Ptr<_1ac4dee04_FnIns> _2227_f = _1ad2997a1_FindOperator(_22046_s, _22061_op, true);;
	if ((_2227_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("unary operator overloading is not exist, this is an implementation mistake", 74) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:224:4"));;
	};
	static__1adecce1d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_2227_f));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1adeba944_possibleRefExpr(_self_, _22078_e);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adeb83d1_divByZeroBinary(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4912c3_Token>* _23233_op, jule::Ptr<_1ac4ce300_OperandExprModel>* _23250_l, jule::Ptr<_1ac4ce300_OperandExprModel>* _23277_r) {
	;
	;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23250_l))))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1adeba944_possibleRefExpr(_self_, (*((*(_23250_l))))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23277_r))))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1adeba944_possibleRefExpr(_self_, (*((*(_23277_r))))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_1b03a1730_Production))) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1ae092d4b_locInfo((*(_self_))._field_oc, _23233_op);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23250_l))))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_23233_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b508d0e8:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b5091827:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1b509177d:;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1adeb8ac9__unsafeBinary(jule::Ptr<_1adeb62d0_exprCoder> _self_, _1b097ade7_StrBuilder* _27135_buf, jule::Str* _27153_l, jule::Str* _27162_r, jule::Ptr<_1ac63d2d8_TypeKind>* _2728_lk, jule::Ptr<_1ac63d2d8_TypeKind>* _27228_rk, jule::U64 _27243_op, jule::Str _27256_kind) {
	if ((_1ac642012_Struct((*(_2728_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1ac4ca4d8_StructIns> _2758_s = _1ac642012_Struct((*(_2728_lk)).ptr());;
		_1adec7a3e_operatorOverloadingBinary(_27135_buf, &(_2758_s), _27153_l, _27162_r, _27243_op, _27256_kind);
		return;;
	};
	if (((_27243_op == static_cast<jule::U64>(50LLU)) || (_27243_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_1ad29632a_IsAny(_2728_lk)) {
				_case_begin_1b5096376:;
				{
					if (((!(_1ac63e41b_IsNil((*(_27228_rk)).ptr()))) && (!(_1ad29632a_IsAny(_27228_rk))))) {
						_1b0984e9a_WriteByte(_27135_buf, '(');
						if ((_27243_op == static_cast<jule::U64>(51LLU))) {
							_1b0984e9a_WriteByte(_27135_buf, '!');
						};
						jule::I64 _2916_i = _1ae0921be_pushAnyType((*(_self_))._field_oc, (*(_27228_rk)));;
						_1b0984be2_WriteStr(_27135_buf, jule::Str::lit("__jule_any_type", 15));
						_1b0984be2_WriteStr(_27135_buf, _1aa11b307_Itoa(_2916_i));
						_1b0984be2_WriteStr(_27135_buf, jule::Str::lit("_compare(", 9));
						_1b0984be2_WriteStr(_27135_buf, (*(_27153_l)));
						_1b0984be2_WriteStr(_27135_buf, jule::Str::lit(", ", 2));
						_1b0984be2_WriteStr(_27135_buf, (*(_27162_r)));
						_1b0984be2_WriteStr(_27135_buf, jule::Str::lit("))", 2));
						return;;
					};
				}
			}
			else if ((_1ac64175e_Arr((*(_2728_lk)).ptr()) != nullptr)) {
				_case_begin_1b5096420:;
				{
					jule::Ptr<_1ac64cc21_Arr> _3045_arr = _1ac64175e_Arr((*(_2728_lk)).ptr());;
					jule::Ptr<_1ac4dbd46_Fn> _3059_f = _1ac8cc38a_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
					jule::Ptr<_1ac4dee04_FnIns> _3069_ins = _1ad299b25_FindFnGenericInstance(&(_3059_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_3045_arr))._field_Elem; __jule_collection; }));;
					if ((_27243_op == static_cast<jule::U64>(51LLU))) {
						_1b0984e9a_WriteByte(_27135_buf, '!');
					};
					static__1adecce1d_funcIns(_27135_buf, &(_3069_ins));
					_1b0984e9a_WriteByte(_27135_buf, '(');
					_1b0984be2_WriteStr(_27135_buf, (*(_27153_l)));
					_1b0984be2_WriteStr(_27135_buf, jule::Str::lit(".begin(), ", 10));
					_1b0984be2_WriteStr(_27135_buf, (*(_27162_r)));
					_1b0984be2_WriteStr(_27135_buf, jule::Str::lit(".begin(), ", 10));
					_1b0984be2_WriteStr(_27135_buf, _1aa11b307_Itoa((*_3045_arr.alloc)._field_N));
					_1b0984e9a_WriteByte(_27135_buf, ')');
					return;;
				}
			}
			_match_end_1b5096288:;
		};
	};
	{
		auto &_match_expr{ _27243_op };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b50964a8:;
			{
				jule::Ptr<_1ac646401_Prim> _3254_lp = _1ac64098e_Prim((*(_2728_lk)).ptr());;
				if (((_3254_lp != nullptr) && _1aa12848a_IsUnsigInt((*_3254_lp.alloc)._field_Kind))) {
					_1b0984e9a_WriteByte(_27135_buf, '(');
					_1ae0a0c05_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _27135_buf, _3254_lp);
					_1b0984e9a_WriteByte(_27135_buf, ')');
				};
			}
		}
		_match_end_1b5099ec3:;
	};
	_1b0984e9a_WriteByte(_27135_buf, '(');
	_1b0984be2_WriteStr(_27135_buf, (*(_27153_l)));
	_1b0984e9a_WriteByte(_27135_buf, ' ');
	_1b0984be2_WriteStr(_27135_buf, _27256_kind);
	_1b0984e9a_WriteByte(_27135_buf, ' ');
	_1b0984be2_WriteStr(_27135_buf, (*(_27162_r)));
	_1b0984e9a_WriteByte(_27135_buf, ')');
}



inline void _1adeb8d82_unsafeBinary(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel> _34233_m) {
	jule::I64 _3433_i = _1b098596d_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _3447_oldbuf = _1b0985e8a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1adeba944_possibleRefExpr(_self_, (*((*(_34233_m))._field_Left))._field_Model);
	jule::Str _3463_l = __jule_bytesToStr(_1b0985e8a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3433_i));;
	{
		_1b0986243_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3447_oldbuf);
	};
	_1adeba944_possibleRefExpr(_self_, (*((*_34233_m.alloc)._field_Right))._field_Model);
	jule::Str _3493_r = __jule_bytesToStr(_1b0985e8a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3433_i));;
	{
		_1b0986243_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3447_oldbuf);
	};
	_1adeb8ac9__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3463_l), &(_3493_r), &((*(*(_34233_m))._field_Left.alloc)._field_Kind), &((*(*(_34233_m))._field_Right.alloc)._field_Kind), (*((*_34233_m.alloc)._field_Op))._field_Id, (*(*(_34233_m))._field_Op.alloc)._field_Kind);
}



inline void _1adeb91e5_shl(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ce300_OperandExprModel>* _35425_l, jule::Ptr<_1ac4ce300_OperandExprModel>* _35452_r) {
	;
	;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_35425_l))))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1adeba944_possibleRefExpr(_self_, (*((*(_35425_l))))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_35452_r))))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1adeba944_possibleRefExpr(_self_, (*((*(_35452_r))))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_35425_l))))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_1aa11d738_BitsizeOf((*(_1ac64098e_Prim((*((*(_35425_l))))._field_Kind.ptr())))._field_Kind)));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1adeb9558_shr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ce300_OperandExprModel>* _38225_l, jule::Ptr<_1ac4ce300_OperandExprModel>* _38252_r) {
	;
	;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_38225_l))))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1adeba944_possibleRefExpr(_self_, (*((*(_38225_l))))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_38252_r))))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1adeba944_possibleRefExpr(_self_, (*((*(_38252_r))))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_38225_l))))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_1aa11d738_BitsizeOf((*(_1ac64098e_Prim((*((*(_38225_l))))._field_Kind.ptr())))._field_Kind)));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1adeb9811_binary(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ce7ea_BinaryExprModel> _41027_m) {
	{
		auto &_match_expr{ (*((*(_41027_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b50c32e8:;
			{
				if ((_1b03a14dd_Safety && (_1ac642012_Struct((*((*(_41027_m))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1adeb83d1_divByZeroBinary(_self_, &((*_41027_m.alloc)._field_Op), &((*_41027_m.alloc)._field_Left), &((*_41027_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b50c3370:;
			{
				if ((_1ac642012_Struct((*((*(_41027_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1adeb91e5_shl(_self_, &((*_41027_m.alloc)._field_Left), &((*_41027_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b50c33d6:;
			{
				if ((_1ac642012_Struct((*((*(_41027_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1adeb9558_shr(_self_, &((*_41027_m.alloc)._field_Left), &((*_41027_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1b50c322c:;
	};
	_1adeb8d82_unsafeBinary(_self_, _41027_m);
}



inline void _1adeb9ab9_var(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac5a2527_Var> _43424_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b50c81ee:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1ac5a2527_Var>> _43510_prefix = *it;
			{
				if (_43510_prefix(_43424_m)) {
					return;;
				};
			}
			_iter_next_1b50c81ee:;
			++it;
			goto _iter_begin_1b50c81ee;
		}
		_iter_end_1b50c81ee:;
	};
	if ((*(_43424_m))._field_Binded) {
		jule::Ptr<_1ac4a5b9a_Directive> _4414_d = _1ad2980eb_FindDirective(&((*_43424_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_4414_d != nullptr)) {
			_1ae090970_writeBytes((*_self_.alloc)._field_oc, _1ae09c7e5_concatAllParts((*_4414_d.alloc)._field_Args));
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1adece194_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _43424_m);
}



inline void _1adeb9d72_structureIns(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns> _45033_m) {
	_1ae0a3488_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _45033_m);
}



inline void _1adeba12a_unary(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4cebc4_UnaryExprModel> _45426_m) {
	if ((_1ac642012_Struct((*((*(_45426_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac4ca4d8_StructIns> _4578_s = _1ac642012_Struct((*((*(_45426_m))._field_Expr))._field_Kind);;
		_1adeb7eb3_operatorOverloadingUnary(_self_, &(_4578_s), (*((*_45426_m.alloc)._field_Op))._field_Id, (*(*(_45426_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_45426_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b50ce513:;
			{
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1adeba944_possibleRefExpr(_self_, (*(*(_45426_m))._field_Expr.alloc)._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b50ced71:;
			{
				if ((_1b03a1730_Production || (_1ac640c25_Sptr((*((*(_45426_m))._field_Expr))._field_Kind) == nullptr))) {
					goto _match_end_1b50cecc7;
				};
				_1adeba944_possibleRefExpr(_self_, (*(*(_45426_m))._field_Expr.alloc)._field_Model);
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1ae092d4b_locInfo((*(_self_))._field_oc, &((*_45426_m.alloc)._field_Op));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1b50cecc7:;
	};
	_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1ae0906b7_write((*(_self_))._field_oc, (*(*(_45426_m))._field_Op.alloc)._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1adeba944_possibleRefExpr(_self_, (*(*(_45426_m))._field_Expr.alloc)._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1adeba3d3_structureLit(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d0598_StructLitExprModel> _48533_m) {
	if ((*((*((*(_48533_m))._field_Strct))._field_Decl))._field_Binded) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1ae0a3488_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_48533_m.alloc)._field_Strct);
	if ((*(*((*(_48533_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4967_inited = false;;
	_julec_label_1b50d7131:;
	{
		auto expr = &((*(*(_48533_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b50da2dd:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c9938_FieldIns> _49815_f = *it;
			{
				{
					auto expr = &((*_48533_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b50db003:;
					if (it != expr_end) {
						jule::Ptr<_1ac4d0202_StructArgExprModel> _49916_arg = *it;
						{
							if (((*(_49916_arg))._field_Field == _49815_f)) {
								if (_4967_inited) {
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1adecdda8_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_49815_f))._field_Decl));
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1adeba944_possibleRefExpr(_self_, (*((*_49916_arg.alloc)._field_Expr))._field_Model);
								_4967_inited=true;
								goto _iter_next_1b50da2dd;
							};
						}
						_iter_next_1b50db003:;
						++it;
						goto _iter_begin_1b50db003;
					}
					_iter_end_1b50db003:;
				};
				if ((*(*((*(_48533_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_4967_inited=false;
					goto _iter_next_1b50da2dd;
				};
				if (_4967_inited) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4967_inited=_1adec4d38_handleFieldByDefault(_self_, &(_49815_f));
			}
			_iter_next_1b50da2dd:;
			++it;
			goto _iter_begin_1b50da2dd;
		}
		_iter_end_1b50da2dd:;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1adeba68b_allocStructure(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d0895_AllocStructLitExprModel> _52835_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1adecdabc_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_52835_m))._field_Lit))._field_Strct));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1adeba3d3_structureLit(_self_, (*_52835_m.alloc)._field_Lit);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adeba944_possibleRefExpr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Any _53632_expr) {
	{
		auto &_match_expr{ _53632_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b50e37ad:;
			{
				jule::Ptr<_1ac5a2527_Var> _5394_v = _53632_expr.unsafe_cast_ptr<_1ac5a2527_Var>();;
				if ((*(_5394_v))._field_Reference) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1adec49e7_model(_self_, _53632_expr);
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1b50e3747:;
	};
	_1adec49e7_model(_self_, _53632_expr);
}



inline void _1adebad62_castTraitFromTrait(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d0e28_CastingExprModel>* _55040_m, jule::Ptr<_1ac5008a4_Trait> _55066_t1, jule::Ptr<_1ac5008a4_Trait> _55082_t2) {
	_1adeba944_possibleRefExpr(_self_, (*((*((*(_55040_m))))._field_Expr))._field_Model);
	_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1ae092a93_pushAndWriteMaskMapper((*(_self_))._field_oc, _55066_t1, _55082_t2);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adebb11a_casting(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d0e28_CastingExprModel> _56328_m) {
	{
		
		if (_1ad29632a_IsAny(&((*(_56328_m))._field_Kind))) {
			_case_begin_1b50e83c8:;
			{
				if (_1ac63e41b_IsNil((*_56328_m.alloc)._field_ExprKind.ptr())) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1ac6414c8_TypeEnum((*(_56328_m))._field_ExprKind) != nullptr)) {
					_1adeba944_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _5744_i = _1ae0921be_pushAnyType((*(_self_))._field_oc, (*_56328_m.alloc)._field_ExprKind);;
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_56328_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1b50ea0ab:;
						{
							jule::Ptr<_1ac646401_Prim> _5785_prim = _1ac64098e_Prim((*(_56328_m))._field_ExprKind);;
							if (((_5785_prim != nullptr) && _1aa128754_IsInt((*_5785_prim.alloc)._field_Kind))) {
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1ae0a0c05_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5785_prim);
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1adeba944_possibleRefExpr(_self_, (*(*(_56328_m))._field_Expr.alloc)._field_Model);
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1b50ec2de;
							};
							goto _case_begin_1b50ec355;
						}
					}
					else {
						_case_begin_1b50ec355:;
						{
							_1adeba944_possibleRefExpr(_self_, (*(*(_56328_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1b50ec2de:;
				};
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_5744_i));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1ad29632a_IsAny(&((*(_56328_m))._field_ExprKind))) {
			_case_begin_1b50e8472:;
			{
				_1adeba944_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1ac640c25_Sptr((*_56328_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1ac640c25_Sptr((*(_56328_m))._field_Kind)))._field_Elem);
				} else {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56328_m.alloc)._field_Kind);
				};
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1b03a1730_Production))) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ae092d4b_locInfo((*(_self_))._field_oc, &((*_56328_m.alloc)._field_Token));
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_1ae0921be_pushAnyType((*(_self_))._field_oc, (*_56328_m.alloc)._field_Kind)));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ac640eab_Ptr((*(_56328_m))._field_ExprKind.ptr()) != nullptr) || (_1ac640eab_Ptr((*_56328_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b50e84d8:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56328_m.alloc)._field_Kind);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1adeba944_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1ac642298_Trait((*(_56328_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b50e854e:;
			{
				if ((_1ac642298_Trait((*_56328_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1adebad62_castTraitFromTrait(_self_, &(_56328_m), _1ac642298_Trait((*(_56328_m))._field_Kind), _1ac642298_Trait((*(_56328_m))._field_ExprKind));
					return;;
				};
				_1adeba944_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1ac640c25_Sptr((*(_56328_m))._field_Kind) != nullptr)) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1ac640c25_Sptr((*(_56328_m))._field_Kind)))._field_Elem);
				} else {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56328_m.alloc)._field_Kind);
				};
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1b03a1730_Production))) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ae092d4b_locInfo((*(_self_))._field_oc, &((*_56328_m.alloc)._field_Token));
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1adecd209_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ac642298_Trait((*(_56328_m))._field_ExprKind));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_1ad299372_FindTraitTypeOffset(_1ac642298_Trait((*(_56328_m))._field_ExprKind), (*_56328_m.alloc)._field_Kind)));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ac642298_Trait((*(_56328_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b50e85b5:;
			{
				_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56328_m.alloc)._field_Kind);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1adeba944_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1adecd209_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ac642298_Trait((*(_56328_m))._field_Kind));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_1ad299372_FindTraitTypeOffset(_1ac642298_Trait((*(_56328_m))._field_Kind), (*_56328_m.alloc)._field_ExprKind)));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1b50e8241:;
	};
	jule::Ptr<_1ac646401_Prim> _6607_prim = _1ac64098e_Prim((*(_56328_m))._field_Kind.ptr());;
	if (((_6607_prim != nullptr) && _1ac6498bb_IsStr(_6607_prim))) {
		jule::Ptr<_1ac646401_Prim> _6628_eprim = _1ac64098e_Prim((*_56328_m.alloc)._field_ExprKind.ptr());;
		if (((_6628_eprim != nullptr) && (_6607_prim != nullptr))) {
			if (_1ac647d2b_IsU8(_6628_eprim)) {
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1adeba944_possibleRefExpr(_self_, (*((*_56328_m.alloc)._field_Expr))._field_Model);
			_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1ac64a900_Slc> _6738_slc = _1ac6419e5_Slc((*(_56328_m))._field_ExprKind);;
		if ((_6738_slc != nullptr)) {
			_6628_eprim=_1ac64098e_Prim((*_6738_slc.alloc)._field_Elem.ptr());
			if (_1ac64780e_IsI32(_6628_eprim)) {
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1adeba944_possibleRefExpr(_self_, (*(*(_56328_m))._field_Expr.alloc)._field_Model);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_6607_prim=_1ac64098e_Prim((*(_56328_m))._field_ExprKind);
	if (((_6607_prim != nullptr) && _1ac6498bb_IsStr(_6607_prim))) {
		jule::Ptr<_1ac64a900_Slc> _6898_slc = _1ac6419e5_Slc((*(_56328_m))._field_Kind);;
		if ((_6898_slc != nullptr)) {
			_6607_prim=_1ac64098e_Prim((*(_6898_slc))._field_Elem);
			if (_1ac64780e_IsI32(_6607_prim)) {
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1adeba944_possibleRefExpr(_self_, (*(*(_56328_m))._field_Expr.alloc)._field_Model);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_56328_m.alloc)._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1adeba944_possibleRefExpr(_self_, (*(*(_56328_m))._field_Expr.alloc)._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adebb3c3_args(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel>* _71026_m) {
	jule::I64 _7117_j = 0LL;;
	if (((((*((*((*(_71026_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_71026_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_71026_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1ac4da9c1_IsSelf((*((*((*((*(_71026_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_7117_j)++;
	};
	{
		auto expr = &((*((*(_71026_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b512ebe5:;
		if (it != expr_end) {
			jule::I64 _7167_i = it - expr->begin();
			jule::Any _71610_arg = *it;
			{
				jule::Ptr<_1ac4ddc9e_ParamIns> _7174_p = (*(*((*(_71026_m))))._field_Func.alloc)._field_Params[_7117_j];;
				if ((((*(_7174_p))._field_Decl != nullptr) && (*(*(_7174_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _71610_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b5132a1c:;
							{
								jule::Ptr<_1ac5a2527_Var> _7216_v = _71610_arg.unsafe_cast_ptr<_1ac5a2527_Var>();;
								if ((*(_7216_v))._field_Reference) {
									_1adec49e7_model(_self_, _71610_arg);
									goto _julec_label_1b5135569;
								};
							}
						}
						_match_end_1b51329a6:;
					};
					_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1adec49e7_model(_self_, _71610_arg);
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1b5135569;
				};
				_1adeba944_possibleRefExpr(_self_, _71610_arg);
				_julec_label_1b5135569:;
				if ((((*((*(_71026_m))))._field_Args.len() - _7167_i) > 1LL)) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_7117_j)++;
			}
			_iter_next_1b512ebe5:;
			++it;
			_7167_i++;
			goto _iter_begin_1b512ebe5;
		}
		_iter_end_1b512ebe5:;
	};
}



inline void _1adebb67b_modelForCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Any _74133_expr) {
	{
		auto &_match_expr{ _74133_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b51365c0:;
			{
				_1adebec01_funcIns(_self_, _74133_expr.cast_ptr<_1ac4dee04_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b5131983:;
			{
				jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _7478_ssie = _74133_expr.unsafe_cast_ptr<_1ac4d436b_StructSubIdentExprModel>();;
				if (((*(_7478_ssie))._field_Method != nullptr)) {
					_1adebec01_funcIns(_self_, (*_7478_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1b5136559:;
	};
	_1adeba944_possibleRefExpr(_self_, _74133_expr);
}



inline void _1adebb934_pushCallInf(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel>* _75629_m) {
	if ((_1b03a1730_Production || (!((*((*((*(_75629_m))))._field_Func))._field_Anon)))) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_75629_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_75629_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1b513a173:;
				{
					if ((*((*((*((*((*((*(_75629_m))))._field_Expr.unsafe_cast_ptr<_1ac4d436b_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1b513a10c:;
		};
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1ae092d4b_locInfo((*(_self_))._field_oc, &((*((*(_75629_m))))._field_Token));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_75629_m))))._field_Args.len() != 0LL)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1adebbc75_isWrapped(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel>* _77931_m) {
	if ((((!(_1ac4e13bc_IsBuiltin((*((*(_77931_m))))._field_Func.ptr()))) && ((*((*(*((*(_77931_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1ac4da9c1_IsSelf((*((*((*((*(_77931_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_77931_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1b513ee36:;
				{
					jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _7839_ssie = (*((*(_77931_m))))._field_Expr.unsafe_cast_ptr<_1ac4d436b_StructSubIdentExprModel>();;
					{
						
						if (_1ac4dac57_IsRef((*((*((*((*(_77931_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1ac640c25_Sptr((*((*(_7839_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b5141bd5:;
							{
								goto _match_end_1b5140d8d;
							}
						}
						else {
							_case_begin_1b5140e15:;
							{
								if ((_1ac642012_Struct((*((*(_7839_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*(_7839_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1adec49e7_model(_self_, (*(*(_7839_ssie))._field_Expr.alloc)._field_Model);
										_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1b5140d8d:;
					};
				}
			}
			_match_end_1b513edc0:;
		};
	};
	return false;;
}



inline jule::Bool _1adebc0b6_writeReceiver(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Any _80334_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _80334_m };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b5146712:;
			{
				_1adeba944_possibleRefExpr(_self_, (*((*(_80334_m.unsafe_cast_ptr<_1ac4cebc4_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b5146921:;
			{
				_1adeba944_possibleRefExpr(_self_, (*((*((*(_80334_m.unsafe_cast_ptr<_1ac73b24e_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b51468aa:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:812:4"));;
			}
		}
		_match_end_1b5146844:;
	};
}



inline void _1adebc36e_pureFuncCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel>* _81634_m) {
	jule::Bool _8173_wrapped = _1adebbc75_isWrapped(_self_, _81634_m);;
	_1adebb67b_modelForCall(_self_, (*((*(_81634_m))))._field_Expr);
	if ((!(_1ac4e13bc_IsBuiltin((*((*(_81634_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_81634_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_81634_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1ad2984b4_HasDirective(&((*(*((*((*(_81634_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_81634_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b514ac66:;
					if (it != expr_end) {
						jule::I64 _82311_i = it - expr->begin();
						jule::Ptr<_1ac63b902_InsGeneric> _82318_g = *it;
						{
							_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_82318_g))._field_Kind);
							if ((((*(*((*(_81634_m))))._field_Func.alloc)._field_Generics.len() - _82311_i) > 1LL)) {
								_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1b514ac66:;
						++it;
						_82311_i++;
						goto _iter_begin_1b514ac66;
					}
					_iter_end_1b514ac66:;
				};
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1adebb934_pushCallInf(_self_, _81634_m);
	if (((*(*((*(_81634_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_81634_m))))._field_Func.alloc)._field_Anon)))) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_81634_m))))._field_Args.len() > 0LL)) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1ac4e13bc_IsBuiltin((*((*(_81634_m))))._field_Func))) && ((*(*((*((*(_81634_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1ac4da9c1_IsSelf((*((*((*((*(_81634_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_81634_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1b5152971:;
				{
					jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _8479_ssie = (*((*(_81634_m))))._field_Expr.unsafe_cast_ptr<_1ac4d436b_StructSubIdentExprModel>();;
					{
						
						if (_1ac4dac57_IsRef((*((*((*((*(_81634_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1b5156c0b:;
							{
								_1adebc0b6_writeReceiver(_self_, (*((*(_8479_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1ac640c25_Sptr((*((*(_8479_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b51582a1:;
							{
								jule::Bool _8546_safe = _1adebc0b6_writeReceiver(_self_, (*(*(_8479_ssie))._field_Expr.alloc)._field_Model);;
								if (_8546_safe) {
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_1b03a1730_Production))) {
										_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1ae092d4b_locInfo((*(_self_))._field_oc, &((*((*(_81634_m))))._field_Token));
										_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1b51539c7:;
							{
								if ((_1ac642012_Struct((*((*(_8479_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_8479_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1b5154324:;
											{
												jule::Ptr<_1ac5a2527_Var> _8688_v = (*((*(_8479_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1ac5a2527_Var>();;
												if ((*(_8688_v))._field_Reference) {
													goto _match_end_1b51547ec;
												};
												goto _case_begin_1b5154863;
											}
										}
										else {
											_case_begin_1b5154863:;
											{
												_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1b51547ec:;
									};
								};
								if (_8173_wrapped) {
									_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1ac640eab_Ptr((*((*(_8479_ssie))._field_Expr))._field_Kind) == nullptr)) {
									_1adec49e7_model(_self_, (*(*(_8479_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1adeba944_possibleRefExpr(_self_, (*((*((*(*(_8479_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1ac4cebc4_UnaryExprModel>(&__jule_any_type112)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1b5153950:;
					};
					if (((*((*(_81634_m))))._field_Args.len() > 0LL)) {
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1b515260d:;
				{
					_1adeba944_possibleRefExpr(_self_, (*((*((*(_81634_m))))._field_Expr.unsafe_cast_ptr<_1ac4d39ca_TraitSubIdentExprModel>()))._field_Expr);
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_81634_m))))._field_Args.len() > 0LL)) {
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1b51528e9:;
		};
	};
	_1adebb3c3_args(_self_, _81634_m);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_8173_wrapped) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1adebc627_coFuncCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel>* _90632_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _9137_i = jule::Str();;
	if ((((*((*((*(_90632_m))))._field_Func))._field_Params.len() > 0LL) || (*(*((*(_90632_m))))._field_Func.alloc)._field_AsAnon)) {
		_9137_i=_1aa11b307_Itoa(_1ae0916eb_pushCoSpawn((*(_self_))._field_oc, (*((*(_90632_m))))._field_Func));
		jule::Str _9164_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _9137_i);;
		_1ae0906b7_write((*(_self_))._field_oc, _9164_t);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1ae0906b7_write((*(_self_))._field_oc, _9164_t);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1ae091069_indent((*(_self_))._field_oc);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1adebb67b_modelForCall(_self_, (*((*(_90632_m))))._field_Expr);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*(*((*(_90632_m))))._field_Func.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b516de21:;
			if (it != expr_end) {
				jule::I64 _9388_j = it - expr->begin();
				{
					_1ae091069_indent((*(_self_))._field_oc);
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_9388_j));
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1adeba944_possibleRefExpr(_self_, (*((*(_90632_m))))._field_Args[_9388_j]);
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1b516de21:;
				++it;
				_9388_j++;
				goto _iter_begin_1b516de21;
			}
			_iter_end_1b516de21:;
		};
		_1ae091069_indent((*(_self_))._field_oc);
	};
	if (!(_9137_i).empty()) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_9137_i).empty()) {
		static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_90632_m))))._field_Func));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _9137_i));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_9137_i).empty()) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_9137_i).empty()) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1adebc98a_writeUseExpr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4dee04_FnIns>* _98434_f, jule::Ptr<_1ac60a55d_Data> _98449_d) {
	if ((_1ac6427b5_Tup((*(_98449_d))._field_Kind.ptr()) == nullptr)) {
		_1adeba944_possibleRefExpr(_self_, (*_98449_d.alloc)._field_Model);
		_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1ac4d4dd8_TupleExprModel> _9907_tup = (*_98449_d.alloc)._field_Model.cast_ptr<_1ac4d4dd8_TupleExprModel>(&__jule_any_type83);;
	_1ae0a99ab_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1ac6427b5_Tup((*((*(_98434_f))))._field_Result.ptr()));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_9907_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5180bbe:;
		if (it != expr_end) {
			jule::I64 _9937_i = it - expr->begin();
			jule::Ptr<_1ac60a55d_Data> _99310_data = *it;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_9937_i));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1adeba944_possibleRefExpr(_self_, (*(_99310_data))._field_Model);
				if ((((*(_9907_tup))._field_Datas.len() - _9937_i) > 1LL)) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b5180bbe:;
			++it;
			_9937_i++;
			goto _iter_begin_1b5180bbe;
		}
		_iter_end_1b5180bbe:;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1adebcc43_funcCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d17ca_FnCallExprModel> _100529_m) {
	if ((*(_100529_m))._field_IsCo) {
		_1adebc627_coFuncCall(_self_, &(_100529_m));
		return;;
	};
	if (((_1ac4e13bc_IsBuiltin((*_100529_m.alloc)._field_Func.ptr()) || (!((*((*(*(_100529_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_100529_m.alloc)._field_Except != nullptr) && ((*(*(_100529_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1adebc36e_pureFuncCall(_self_, &(_100529_m));
		return;;
	};
	_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1adebc36e_pureFuncCall(_self_, &(_100529_m));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ae091069_indent((*(_self_))._field_oc);
	if (((*_100529_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_100529_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_100529_m.alloc)._field_Assigned)))) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1adeb21bb_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_100529_m.alloc)._field_Except);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _10335_forwarded = _1ad295c53_IsForwarded(&((*_100529_m.alloc)._field_Except));;
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_10335_forwarded) {
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _10389_stmt = (*(*(_100529_m))._field_Except.alloc)._field_Stmts[((*(*(_100529_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _10389_stmt };
				
				if (_match_expr.type == &__jule_any_type31) {
					_case_begin_1b5192e23:;
					{
						((*((*(_100529_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_100529_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1ae090b6d_addIndent((*(_self_))._field_oc);
						_1adeb1e13_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_100529_m.alloc)._field_Except));
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ae091069_indent((*(_self_))._field_oc);
						_1adebc98a_writeUseExpr(_self_, &((*_100529_m.alloc)._field_Func), _10389_stmt.cast_ptr<_1ac60a55d_Data>(&__jule_any_type31));
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ae090d6b_doneIndent((*(_self_))._field_oc);
						_1ae091069_indent((*(_self_))._field_oc);
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1b5194386:;
					{
						_1adeb21bb_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_100529_m.alloc)._field_Except);
					}
				}
				_match_end_1b5194320:;
			};
			if (_10335_forwarded) {
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1adec5bb3_initExpr(_self_, (*(*(_100529_m))._field_Func.alloc)._field_Result);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1ae090d6b_doneIndent((*(_self_))._field_oc);
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1ae092d4b_locInfo((*(_self_))._field_oc, &((*_100529_m.alloc)._field_Token));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1ac4dc2ec_IsVoid((*((*(_100529_m))._field_Func))._field_Decl)))) {
			_1ae091069_indent((*(_self_))._field_oc);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1ae090d6b_doneIndent((*(_self_))._field_oc);
	};
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1adebceeb_slice(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d1ba4_SliceExprModel> _107826_m) {
	if (((*(_107826_m))._field_Elems.len() == 0LL)) {
		_1ae0a25db_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_107826_m.alloc)._field_ElemKind);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1ae0a25db_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_107826_m.alloc)._field_ElemKind);
	jule::Str _10863_size = _1aa11b307_Itoa((*_107826_m.alloc)._field_Elems.len());;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ae0906b7_write((*(_self_))._field_oc, _10863_size);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ae0906b7_write((*(_self_))._field_oc, _10863_size);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_107826_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b51a8345:;
		if (it != expr_end) {
			jule::I64 _10967_i = it - expr->begin();
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1adeba944_possibleRefExpr(_self_, (*(_107826_m))._field_Elems[_10967_i]);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1b51a8345:;
			++it;
			_10967_i++;
			goto _iter_begin_1b51a8345;
		}
		_iter_end_1b51a8345:;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1adebd2a4_indexing(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d215a_IndexingExprModel> _110729_m) {
	{
		auto &_match_expr{ (*((*(_110729_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b51ac1c3:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1b03a1730_Production))) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ae092d4b_locInfo((*(_self_))._field_oc, &((*(_110729_m))._field_Token));
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _11184_s = _1aa12b57b_ReadStr((*((*(_110729_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1aa1293c0_Const>().ptr());;
				_1adec6972_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _11184_s);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_11184_s.len()));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1adeba944_possibleRefExpr(_self_, (*((*_110729_m.alloc)._field_Index))._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1b51ac15c:;
	};
	{
		
		if ((_1ac64252e_Map((*((*_110729_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b51b5e35:;
			{
				jule::Ptr<_1ac64c094_Map> _11318__map = _1ac64252e_Map((*((*(_110729_m))._field_Expr))._field_Kind);;
				jule::Ptr<_1ac4c767d_Struct> _11328_s = _1ac8cc984_RuntimeFindStruct(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1ac4ca4d8_StructIns> _11338_ins = _1ad29a0a9_FindStructGenericInstance(&(_11328_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_11318__map))._field_Key; (*it++) = (*_11318__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1ac4dee04_FnIns> _11358_f = (*(_1ac4cb583_FindMethod(_11338_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11358_f));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1adeba944_possibleRefExpr(_self_, (*(*(_110729_m))._field_Expr.alloc)._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1adeba944_possibleRefExpr(_self_, (*(*(_110729_m))._field_Index.alloc)._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_1b03a1730_Production || (_1ac640eab_Ptr((*((*_110729_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr) || _1ad296061_IsExprComesFromBind(&((*_110729_m.alloc)._field_Expr))) {
			_case_begin_1b51b3570:;
			{
				_1adeba944_possibleRefExpr(_self_, (*(*(_110729_m))._field_Expr.alloc)._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1adeba944_possibleRefExpr(_self_, (*(*(_110729_m))._field_Index.alloc)._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1b51b3460:;
			{
				_1adeba944_possibleRefExpr(_self_, (*((*_110729_m.alloc)._field_Expr))._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1ae092d4b_locInfo((*(_self_))._field_oc, &((*_110729_m.alloc)._field_Token));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1adeba944_possibleRefExpr(_self_, (*(*(_110729_m))._field_Index.alloc)._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1b51b098a:;
	};
}



inline void _1adebd55c_unsafeIndexing(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac73a2c5_UnsafeIndexingExprModel> _115935_m) {
	_1adeba944_possibleRefExpr(_self_, (*((*((*(_115935_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1b03a1730_Production || (_1ac640eab_Ptr((*(*((*(_115935_m))._field_Node))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1ac64252e_Map((*((*((*(_115935_m))._field_Node))._field_Expr))._field_Kind) != nullptr)) {
			_case_begin_1b51c2507:;
			{
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1adeba944_possibleRefExpr(_self_, (*((*(*(_115935_m))._field_Node.alloc)._field_Index))._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1b51c0060:;
			{
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1adeba944_possibleRefExpr(_self_, (*((*(*(_115935_m))._field_Node.alloc)._field_Index))._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1b51c0b10:;
	};
}



inline void _1adebd815_anonFunc(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel> _117629_m) {
	jule::Bool _11773_closure = _1ad29666b_IsClosure(&(_117629_m));;
	jule::Str _11783_ident = _1ae091d7d_pushAnonFn((*(_self_))._field_oc, &(_117629_m));;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1ae0a4a0b_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_117629_m))._field_Func);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1ae0906b7_write((*(_self_))._field_oc, _11783_ident);
	if (_11773_closure) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1ae0906b7_write((*(_self_))._field_oc, _11783_ident);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1ae0906b7_write((*(_self_))._field_oc, _11783_ident);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_117629_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b51c6c04:;
			if (it != expr_end) {
				jule::I64 _11909_i = it - expr->begin();
				jule::Ptr<_1ac5a2527_Var> _119016_v = *it;
				{
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1adece194_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _119016_v);
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1adeb9ab9_var(_self_, _119016_v);
					if ((((*_117629_m.alloc)._field_Captured.len() - _11909_i) > 1LL)) {
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1b51c6c04:;
				++it;
				_11909_i++;
				goto _iter_begin_1b51c6c04;
			}
			_iter_end_1b51c6c04:;
		};
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1ae0906b7_write((*(_self_))._field_oc, _11783_ident);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1adebdabd_mapExpr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d2db4_MapExprModel> _120728_m) {
	jule::Ptr<_1ac4c767d_Struct> _12087_s = _1ac8cc984_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1ac4ca4d8_StructIns> _12097_ins = _1ad29a0a9_FindStructGenericInstance(&(_12087_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_120728_m))._field_Kind))._field_Key; (*it++) = (*(*(_120728_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1ac4dee04_FnIns> _12117_maker = (*(_1ac4cb583_FindMethod(_12097_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_120728_m.alloc)._field_Entries.len() == 0LL)) {
		static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_12117_maker));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _12187_f = (*(_1ac4cb583_FindMethod(_12097_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ae0a2cb2_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_120728_m.alloc)._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_12117_maker));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_120728_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b51d8a3a:;
		if (it != expr_end) {
			jule::Ptr<_1ac4d29da_KeyValPairExprModel> _122815_pair = *it;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_12187_f));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1adeba944_possibleRefExpr(_self_, (*(_122815_pair))._field_Key);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1adeba944_possibleRefExpr(_self_, (*_122815_pair.alloc)._field_Val);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1b51d8a3a:;
			++it;
			goto _iter_begin_1b51d8a3a;
		}
		_iter_end_1b51d8a3a:;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1adebdd76_slicing(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d3447_SlicingExprModel> _124328_m) {
	_1adeba944_possibleRefExpr(_self_, (*(_124328_m))._field_Expr);
	_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1b03a1730_Production))) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ae092d4b_locInfo((*(_self_))._field_oc, &((*_124328_m.alloc)._field_Token));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1adeba944_possibleRefExpr(_self_, (*_124328_m.alloc)._field_Left);
	if (((*_124328_m.alloc)._field_Right != nullptr)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1adeba944_possibleRefExpr(_self_, (*_124328_m.alloc)._field_Right);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adebe12e_traitSub(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d39ca_TraitSubIdentExprModel> _125929_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1adecd209_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_125929_m))._field_Trt);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1adeba944_possibleRefExpr(_self_, (*_125929_m.alloc)._field_Expr);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1b03a1730_Production))) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ae092d4b_locInfo((*(_self_))._field_oc, &((*_125929_m.alloc)._field_Token));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1adeccb32_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_125929_m.alloc)._field_Method));
}



inline void _1adebe3d7_structureSub(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _127533_m) {
	_1adeba944_possibleRefExpr(_self_, (*((*(_127533_m))._field_Expr))._field_Model);
	if (((*_127533_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1adecdda8_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_127533_m.alloc)._field_Field))._field_Decl));
}



inline void _1adebe690_array(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d4adb_ArrayExprModel> _128426_m) {
	if ((((*((*(_128426_m))._field_Kind))._field_N == 0LL) || (((*_128426_m.alloc)._field_Elems.len() == 0LL) && (!(_1ae0ac085_ableToInit(&((*(*(_128426_m))._field_Kind.alloc)._field_Elem))))))) {
		_1ae0a37eb_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_128426_m.alloc)._field_Kind);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_128426_m.alloc)._field_Elems.len() == 2LL) && ((*(_128426_m))._field_Elems[1LL] == nullptr))) {
		_1ae0a37eb_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_128426_m.alloc)._field_Kind);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1adeba944_possibleRefExpr(_self_, (*(_128426_m))._field_Elems[0LL]);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1ae0a37eb_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_128426_m.alloc)._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_128426_m.alloc)._field_Elems.len() != (*(*(_128426_m))._field_Kind.alloc)._field_N)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_128426_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b520479d:;
		if (it != expr_end) {
			jule::I64 _13177_i = it - expr->begin();
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1adeba944_possibleRefExpr(_self_, (*_128426_m.alloc)._field_Elems[_13177_i]);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1b520479d:;
			++it;
			_13177_i++;
			goto _iter_begin_1b520479d;
		}
		_iter_end_1b520479d:;
	};
	if ((((*_128426_m.alloc)._field_Elems.len() != (*(*(_128426_m))._field_Kind.alloc)._field_N) && _1ae0ac085_ableToInit(&((*(*(_128426_m))._field_Kind.alloc)._field_Elem)))) {
		_1adec5399_fillCollectionByDefault(_self_, &((*(*(_128426_m))._field_Kind.alloc)._field_Elem));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1adebe948_funcInsCommon(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _133434_m) {
	_1ae0a4d6e_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _133434_m);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1adebec01_funcIns(_self_, _133434_m);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adebec01_funcIns(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _134128_m) {
	if ((((*(_134128_m))._field_Decl != nullptr) && (*(*(_134128_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1ac4a5b9a_Directive> _13434_d = _1ad2980eb_FindDirective(&((*(*(_134128_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_13434_d != nullptr)) {
			_1ae090970_writeBytes((*(_self_))._field_oc, _1ae09c7e5_concatAllParts((*_13434_d.alloc)._field_Args));
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_134128_m));
}



inline void _1adebeea9_tuple(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d4dd8_TupleExprModel> _135226_m) {
	{
		auto expr = &((*_135226_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5211ed6:;
		if (it != expr_end) {
			jule::I64 _13538_i = it - expr->begin();
			jule::Ptr<_1ac60a55d_Data> _135315_d = *it;
			{
				_1adeba944_possibleRefExpr(_self_, (*(_135315_d))._field_Model);
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_135226_m))._field_Datas.len() - _13538_i) > 1LL)) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ae091069_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1b5211ed6:;
			++it;
			_13538_i++;
			goto _iter_begin_1b5211ed6;
		}
		_iter_end_1b5211ed6:;
	};
}



inline void _1adec0262_newCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d5a65_BuiltinNewCallExprModel> _136328_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_136328_m))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_136328_m.alloc)._field_Init != nullptr)) {
		_1adeba944_possibleRefExpr(_self_, (*_136328_m.alloc)._field_Init);
	} else if (_1ae0ac085_ableToInit(&((*_136328_m.alloc)._field_Kind))) {
		_1adec5bb3_initExpr(_self_, (*_136328_m.alloc)._field_Kind);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adec051a_outCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d52b2_BuiltinOutCallExprModel> _137528_m) {
	if (((*(_137528_m))._field_Debug && _1b03a1730_Production)) {
		return;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	jule::Ptr<_1ac4dbd46_Fn> _13807_decl = _1ac8cc38a_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1ac4dee04_FnIns> _13817_f = _1ad299b25_FindFnGenericInstance(&(_13807_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_137528_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13817_f));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1adeba944_possibleRefExpr(_self_, (*(*(_137528_m))._field_Expr.alloc)._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1adec07c3_outlnCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d568b_BuiltinOutlnCallExprModel> _138830_m) {
	if (((*(_138830_m))._field_Debug && _1b03a1730_Production)) {
		return;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	jule::Ptr<_1ac4dbd46_Fn> _13937_decl = _1ac8cc38a_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1ac4dee04_FnIns> _13947_f = _1ad299b25_FindFnGenericInstance(&(_13937_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_138830_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13947_f));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1adeba944_possibleRefExpr(_self_, (*(*(_138830_m))._field_Expr.alloc)._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1adec0a7b_panicCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d5e3e_BuiltinPanicCallExprModel> _140130_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1adeba944_possibleRefExpr(_self_, (*(_140130_m))._field_Expr);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1ae092d4b_locInfo((*(_self_))._field_oc, &((*_140130_m.alloc)._field_Token));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1adec0d34_errorCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d7a45_BuiltinErrorCallExprModel> _140930_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1ac4dc2ec_IsVoid((*((*(_140930_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_140930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b5225291:;
				{
					jule::Ptr<_1ac5a2527_Var> _14145_v = (*((*(_140930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1ac5a2527_Var>();;
					if (((*(_14145_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1b522522a:;
		};
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1ae0aa182_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_140930_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_140930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b52297d4:;
				{
					jule::Ptr<_1ac5a2527_Var> _14265_v = (*((*(_140930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1ac5a2527_Var>();;
					if (((*(_14265_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1b522976d:;
		};
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1adeba944_possibleRefExpr(_self_, (*((*(_140930_m))._field_Err))._field_Model);
	jule::I64 _14353_i = _1ae0921be_pushAnyType((*(_self_))._field_oc, (*(*(_140930_m))._field_Err.alloc)._field_Kind);;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_14353_i));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1adec10dc_copyCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d766b_BuiltinCopyCallExprModel> _144129_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1adeba944_possibleRefExpr(_self_, (*((*(_144129_m))._field_Dest))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1adeba944_possibleRefExpr(_self_, (*((*_144129_m.alloc)._field_Src))._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adec1395_lenCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d6abb_BuiltinLenCallExprModel> _144928_m) {
	jule::Ptr<_1ac64c094_Map> _14507__map = _1ac64252e_Map((*((*(_144928_m))._field_Expr))._field_Kind.ptr());;
	if ((_14507__map != nullptr)) {
		jule::Ptr<_1ac4c767d_Struct> _14528_s = _1ac8cc984_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		jule::Ptr<_1ac4ca4d8_StructIns> _14538_ins = _1ad29a0a9_FindStructGenericInstance(&(_14528_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_14507__map.alloc)._field_Key; (*it++) = (*_14507__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1ac4dee04_FnIns> _14558_f = (*(_1ac4cb583_FindMethod(_14538_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14558_f));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1adeba944_possibleRefExpr(_self_, (*(*(_144928_m))._field_Expr.alloc)._field_Model);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1adeba944_possibleRefExpr(_self_, (*(*(_144928_m))._field_Expr.alloc)._field_Model);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1adec164d_capCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d6db8_BuiltinCapCallExprModel> _146628_m) {
	_1adeba944_possibleRefExpr(_self_, (*((*(_146628_m))._field_Expr))._field_Model);
	_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1adec1906_deleteCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d7292_BuiltinDeleteCallExprModel> _147131_m) {
	jule::Ptr<_1ac64c094_Map> _14727__map = _1ac64252e_Map((*((*(_147131_m))._field_Dest))._field_Kind.ptr());;
	if ((_14727__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1474:4"));;
	};
	jule::Ptr<_1ac4c767d_Struct> _14767_s = _1ac8cc984_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1ac4ca4d8_StructIns> _14777_ins = _1ad29a0a9_FindStructGenericInstance(&(_14767_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14727__map))._field_Key; (*it++) = (*(_14727__map))._field_Val; __jule_collection; }));;
	;
	if (((*_147131_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1ac4dee04_FnIns> _14808_f = (*(_1ac4cb583_FindMethod(_14777_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14808_f));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1adeba944_possibleRefExpr(_self_, (*(*(_147131_m))._field_Dest.alloc)._field_Model);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1adeba944_possibleRefExpr(_self_, (*(*(_147131_m))._field_Key.alloc)._field_Model);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1ac4dee04_FnIns> _14888_f = (*(_1ac4cb583_FindMethod(_14777_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14888_f));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1adeba944_possibleRefExpr(_self_, (*(*(_147131_m))._field_Dest.alloc)._field_Model);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1adec1bae_makeCallSlice(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel>* _149635_m) {
	jule::Ptr<_1ac64a900_Slc> _14977_slice = _1ac6419e5_Slc((*((*(_149635_m))))._field_Kind.ptr());;
	jule::Bool _14983_init = _1ae0ac085_ableToInit(&((*(_14977_slice))._field_Elem));;
	if (_14983_init) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_149635_m))))._field_Kind);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1adeba944_possibleRefExpr(_self_, (*((*(_149635_m))))._field_Len);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_149635_m))))._field_Cap != nullptr)) {
		_1adeba944_possibleRefExpr(_self_, (*((*(_149635_m))))._field_Cap);
	} else {
		_1adeba944_possibleRefExpr(_self_, (*((*(_149635_m))))._field_Len);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14983_init))) {
		return;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1adec5652_initCollection(_self_, &((*_14977_slice.alloc)._field_Elem));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1adec1e67_makeCallStr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel>* _152033_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1adeba944_possibleRefExpr(_self_, (*((*(_152033_m))))._field_Len);
	if (((*((*(_152033_m))))._field_Cap != nullptr)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1adeba944_possibleRefExpr(_self_, (*((*(_152033_m))))._field_Cap);
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adec2220_makeCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel> _153129_m) {
	if ((_1ac6419e5_Slc((*(_153129_m))._field_Kind.ptr()) != nullptr)) {
		_1adec1bae_makeCallSlice(_self_, &(_153129_m));
		return;;
	};
	_1adec1e67_makeCallStr(_self_, &(_153129_m));
}



inline void _1adec24c8_pushToSlice(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac73a69e_PushToSliceExprModel> _153932_m) {
	;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1ae0a25db_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_153932_m))._field_Elems))._field_ElemKind);
	jule::Bool _15477_ptr = false;;
	{
		auto &_match_expr{ (*(_153932_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b5252730:;
			{
				jule::Ptr<_1ac4cebc4_UnaryExprModel> _15518_u = (*(_153932_m))._field_Dest.unsafe_cast_ptr<_1ac4cebc4_UnaryExprModel>();;
				if ((_1ac640eab_Ptr((*((*(_15518_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1adeba944_possibleRefExpr(_self_, (*(*(_15518_u))._field_Expr.alloc)._field_Model);
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_15477_ptr=true;
					goto _match_end_1b5251223;
				};
				goto _case_begin_1b5251289;
			}
		}
		else {
			_case_begin_1b5251289:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1adeba944_possibleRefExpr(_self_, (*_153932_m.alloc)._field_Dest);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1b5251223:;
	};
	if (((*(*(_153932_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_15477_ptr) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1adeba944_possibleRefExpr(_self_, (*((*(_153932_m))._field_Elems))._field_Elems[0LL]);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_15477_ptr) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa((*(*(_153932_m))._field_Elems.alloc)._field_Elems.len()));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_153932_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5259baa:;
		if (it != expr_end) {
			jule::Any _158515_e = *it;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_15477_ptr) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1adeba944_possibleRefExpr(_self_, _158515_e);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1b5259baa:;
			++it;
			goto _iter_begin_1b5259baa;
		}
		_iter_end_1b5259baa:;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1adec2781_appendToSlice(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac73aa78_AppendToSliceExprModel> _159934_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1adeba944_possibleRefExpr(_self_, (*(_159934_m))._field_Dest);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1adeba944_possibleRefExpr(_self_, (*_159934_m.alloc)._field_Slice);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1adec2a39_appendCall(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d67be_BuiltinAppendCallExprModel> _160731_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1adeba944_possibleRefExpr(_self_, (*(_160731_m))._field_Dest);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1adeba944_possibleRefExpr(_self_, (*_160731_m.alloc)._field_Elements);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adec2ce2_sizeof(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d7d42_SizeofExprModel> _161527_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1adeba944_possibleRefExpr(_self_, (*(_161527_m))._field_Expr);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adec309a_alignof(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d84e6_AlignofExprModel> _162128_m) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1adeba944_possibleRefExpr(_self_, (*(_162128_m))._field_Expr);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1adec3353_runeLit(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d86d3_RuneExprModel> _162724_m) {
	if (((*(_162724_m))._field_Code <= 127LL)) {
		_1b0984e9a_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _16308_b = _1adec6356_sbtoa(static_cast<jule::U8>((*_162724_m.alloc)._field_Code));;
		if (_16308_b.equal("'", 1)) {
			_1b0984e9a_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
		};
		_1b0984be2_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _16308_b);
		_1b0984e9a_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1adec7104_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_162724_m.alloc)._field_Code));
}



inline void _1adec360b_structureStatic(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d4712_StructStaticIdentExprModel> _164136_m) {
	static__1adecce1d_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_164136_m))._field_Method));
}



inline void _1adec38b4_backendEmit(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d8a57_BackendEmitExprModel> _164532_m) {
	if (((*(_164532_m))._field_Exprs.len() == 0LL)) {
		_1ae0906b7_write((*(_self_))._field_oc, (*_164532_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _16503_n = _1b098596d_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _16517_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_164532_m.alloc)._field_Exprs.len(), (*_164532_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_164532_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5269deb:;
		if (it != expr_end) {
			jule::I64 _16528_i = it - expr->begin();
			jule::Any _165215_expr = *it;
			{
				_1adeba944_possibleRefExpr(_self_, _165215_expr);
				jule::Slice<jule::U8> _16548_buf = _1b0985e8a_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_16517_args[_16528_i]=jule::Any(__jule_bytesToStr(_16548_buf.slice(_16503_n)), &__jule_any_type4);
				{
					_1b0986243_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _16548_buf.slice(0LL, _16503_n));
				};
			}
			_iter_next_1b5269deb:;
			++it;
			_16528_i++;
			goto _iter_begin_1b5269deb;
		}
		_iter_end_1b5269deb:;
	};
	_1ae0906b7_write((*(_self_))._field_oc, _1ac7267bc_Format((*_164532_m.alloc)._field_Code, _16517_args));
}



inline void _1adec3b6c_free(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4d8d54_FreeExprModel> _166125_m) {
	_1adeba944_possibleRefExpr(_self_, (*(_166125_m))._field_Expr);
	if (_1b03a1125_RC) {
		_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1adec3e25_strComp(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac7395b0_StrCompExprModel> _167028_m) {
	if ((*(_167028_m))._field_NotEq) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16743_s = _1aa12b57b_ReadStr((*_167028_m.alloc)._field_Right.ptr());;
	_1adeba944_possibleRefExpr(_self_, (*_167028_m.alloc)._field_Left);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1adec6972_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16743_s);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_16743_s.len()));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_167028_m.alloc)._field_NotEq) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1adec41cd_emptyCompare(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac738cb8_EmptyCompareExprModel> _168633_m) {
	if ((*(_168633_m))._field_Neg) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1adeba944_possibleRefExpr(_self_, (*_168633_m.alloc)._field_Expr);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1adec4486_unsafeDeref(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac73b24e_UnsafeDerefExprModel> _169532_m) {
	{
		
		if ((_1ac640c25_Sptr((*((*((*(_169532_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b5278954:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1adeba944_possibleRefExpr(_self_, (*(*((*(_169532_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1b527858b:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1702:4"));;
			}
		}
		_match_end_1b527847b:;
	};
}



inline void _1adec473e_unsafeCasting(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac73b54b_UnsafeCastingExprModel> _170634_m) {
	{
		
		if (_1ad29632a_IsAny(&((*((*(_170634_m))._field_Base))._field_ExprKind))) {
			_case_begin_1b527b638:;
			{
				_1adeba944_possibleRefExpr(_self_, (*((*(*(_170634_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1ac640c25_Sptr((*(*(_170634_m))._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1ac640c25_Sptr((*((*(_170634_m))._field_Base))._field_Kind)))._field_Elem);
				} else {
					_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1ae0a51d2_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_170634_m))._field_Base.alloc)._field_Kind);
				};
				_1ae0906b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1b527b270:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1719:4"));;
			}
		}
		_match_end_1b527b182:;
	};
}



inline void _1adec49e7_model(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Any _172326_m) {
	{
		auto &_match_expr{ _172326_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b527bea7:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, _172326_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1b5281ee0:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, (*(_172326_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b5282056:;
			{
				_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _172326_m.cast_ptr<_1ac63d2d8_TypeKind>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b52820bc:;
			{
				_1adeb7a95_constant(_self_, _172326_m.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b5282133:;
			{
				_1adeb9ab9_var(_self_, _172326_m.cast_ptr<_1ac5a2527_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b5282199:;
			{
				_1adeb9d72_structureIns(_self_, _172326_m.cast_ptr<_1ac4ca4d8_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b5282210:;
			{
				_1adebe948_funcInsCommon(_self_, _172326_m.cast_ptr<_1ac4dee04_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b5282d6a:;
			{
				_1adeb8d82_unsafeBinary(_self_, (*(_172326_m.unsafe_cast_ptr<_1ac739e40_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b5282dd1:;
			{
				_1adeb9811_binary(_self_, _172326_m.cast_ptr<_1ac4ce7ea_BinaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b5282e47:;
			{
				_1adeba12a_unary(_self_, _172326_m.cast_ptr<_1ac4cebc4_UnaryExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b5282ead:;
			{
				_1adeba3d3_structureLit(_self_, _172326_m.cast_ptr<_1ac4d0598_StructLitExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b5283024:;
			{
				_1adeba68b_allocStructure(_self_, _172326_m.cast_ptr<_1ac4d0895_AllocStructLitExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b528308a:;
			{
				_1adebb11a_casting(_self_, _172326_m.cast_ptr<_1ac4d0e28_CastingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b5283101:;
			{
				_1adebcc43_funcCall(_self_, _172326_m.cast_ptr<_1ac4d17ca_FnCallExprModel>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b5283167:;
			{
				_1adebceeb_slice(_self_, _172326_m.cast_ptr<_1ac4d1ba4_SliceExprModel>(&__jule_any_type79));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b52831de:;
			{
				_1adebe690_array(_self_, _172326_m.cast_ptr<_1ac4d4adb_ArrayExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1b5283266:;
			{
				_1adebd55c_unsafeIndexing(_self_, _172326_m.cast_ptr<_1ac73a2c5_UnsafeIndexingExprModel>(&__jule_any_type134));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b52832dd:;
			{
				_1adebd2a4_indexing(_self_, _172326_m.cast_ptr<_1ac4d215a_IndexingExprModel>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b5283365:;
			{
				_1adebd815_anonFunc(_self_, _172326_m.cast_ptr<_1ac4d2611_AnonFnExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b52833dc:;
			{
				_1adebdabd_mapExpr(_self_, _172326_m.cast_ptr<_1ac4d2db4_MapExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b5283464:;
			{
				_1adebdd76_slicing(_self_, _172326_m.cast_ptr<_1ac4d3447_SlicingExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b52834db:;
			{
				_1adebe12e_traitSub(_self_, _172326_m.cast_ptr<_1ac4d39ca_TraitSubIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b5283563:;
			{
				_1adebe3d7_structureSub(_self_, _172326_m.cast_ptr<_1ac4d436b_StructSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b52835da:;
			{
				_1adebeea9_tuple(_self_, _172326_m.cast_ptr<_1ac4d4dd8_TupleExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b5283662:;
			{
				_1adec051a_outCall(_self_, _172326_m.cast_ptr<_1ac4d52b2_BuiltinOutCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b52836d9:;
			{
				_1adec07c3_outlnCall(_self_, _172326_m.cast_ptr<_1ac4d568b_BuiltinOutlnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b5283761:;
			{
				_1adec0262_newCall(_self_, _172326_m.cast_ptr<_1ac4d5a65_BuiltinNewCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b52837d8:;
			{
				_1adec0a7b_panicCall(_self_, _172326_m.cast_ptr<_1ac4d5e3e_BuiltinPanicCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b5283860:;
			{
				_1adec0d34_errorCall(_self_, _172326_m.cast_ptr<_1ac4d7a45_BuiltinErrorCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b52838d7:;
			{
				_1adec2220_makeCall(_self_, _172326_m.cast_ptr<_1ac4d63e5_BuiltinMakeCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b528395e:;
			{
				_1adec2a39_appendCall(_self_, _172326_m.cast_ptr<_1ac4d67be_BuiltinAppendCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b52839d6:;
			{
				_1adec10dc_copyCall(_self_, _172326_m.cast_ptr<_1ac4d766b_BuiltinCopyCallExprModel>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b5283a5d:;
			{
				_1adec1395_lenCall(_self_, _172326_m.cast_ptr<_1ac4d6abb_BuiltinLenCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b5283ad5:;
			{
				_1adec164d_capCall(_self_, _172326_m.cast_ptr<_1ac4d6db8_BuiltinCapCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b5283b5c:;
			{
				_1adec1906_deleteCall(_self_, _172326_m.cast_ptr<_1ac4d7292_BuiltinDeleteCallExprModel>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b5283bd4:;
			{
				_1adec2ce2_sizeof(_self_, _172326_m.cast_ptr<_1ac4d7d42_SizeofExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b5283c5b:;
			{
				_1adec309a_alignof(_self_, _172326_m.cast_ptr<_1ac4d84e6_AlignofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b5283cd3:;
			{
				_1adec3353_runeLit(_self_, _172326_m.cast_ptr<_1ac4d86d3_RuneExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b5283d5a:;
			{
				_1adec360b_structureStatic(_self_, _172326_m.cast_ptr<_1ac4d4712_StructStaticIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b5283dd2:;
			{
				_1adec38b4_backendEmit(_self_, _172326_m.cast_ptr<_1ac4d8a57_BackendEmitExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b5283e59:;
			{
				_1adec3b6c_free(_self_, _172326_m.cast_ptr<_1ac4d8d54_FreeExprModel>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1b5283ed1:;
			{
				_1adec3e25_strComp(_self_, _172326_m.cast_ptr<_1ac7395b0_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1b5284058:;
			{
				_1adeb9ab9_var(_self_, (*(_172326_m.unsafe_cast_ptr<_1ac73913c_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1b52840d0:;
			{
				_1adec41cd_emptyCompare(_self_, _172326_m.cast_ptr<_1ac738cb8_EmptyCompareExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b5284157:;
			{
				_1adec4486_unsafeDeref(_self_, _172326_m.cast_ptr<_1ac73b24e_UnsafeDerefExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1b52841ce:;
			{
				_1adec473e_unsafeCasting(_self_, _172326_m.cast_ptr<_1ac73b54b_UnsafeCastingExprModel>(&__jule_any_type133));
			}
		}
		else {
			_case_begin_1b5281e79:;
			{
				_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b5281d8b:;
	};
}



inline jule::Bool _1adec4d38_handleFieldByDefault(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4c9938_FieldIns>* _182342_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_182342_f))))._field_Default != nullptr)) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1adecdda8_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_182342_f))))._field_Decl));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1adeba944_possibleRefExpr(_self_, (*(*((*(_182342_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ae0ac085_ableToInit(&((*((*(_182342_f))))._field_Kind))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1adecdda8_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_182342_f))))._field_Decl));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1adec5bb3_initExpr(_self_, (*((*(_182342_f))))._field_Kind);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1adec50e1_initStructLit(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _184435_s) {
	if ((*((*((*(_184435_s))))._field_Decl))._field_Binded) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ae0a3488_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_184435_s)));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1ae0a3488_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_184435_s)));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _18537_inited = false;;
	{
		auto expr = &((*((*(_184435_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b52a6179:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c9938_FieldIns> _185415_f = *it;
			{
				if (_18537_inited) {
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_18537_inited=_1adec4d38_handleFieldByDefault(_self_, &(_185415_f));
			}
			_iter_next_1b52a6179:;
			++it;
			goto _iter_begin_1b52a6179;
		}
		_iter_end_1b52a6179:;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1adec5399_fillCollectionByDefault(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _186645_elem) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1adec5bb3_initExpr(_self_, (*(_186645_elem)));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1adec5652_initCollection(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _188136_elem) {
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1adec5399_fillCollectionByDefault(_self_, _188136_elem);
}



inline void _1adec590a_initArray(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac64cc21_Arr>* _189531_arr) {
	if (((*((*(_189531_arr))))._field_N == 0LL)) {
		_1ae0a37eb_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_189531_arr)));
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1ae0a37eb_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_189531_arr)));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1adec5652_initCollection(_self_, &((*((*(_189531_arr))))._field_Elem));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1adec5bb3_initExpr(jule::Ptr<_1adeb62d0_exprCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _190929_t) {
	if (_1ac6401db_NilCompatible(_190929_t.ptr())) {
		if ((_1ac64252e_Map(_190929_t) != nullptr)) {
			_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _190929_t);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1ac640eab_Ptr(_190929_t) != nullptr)) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _190929_t);
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1ac64b4e4_Tuple> _19247_tup = _1ac6427b5_Tup(_190929_t);;
	if ((_19247_tup != nullptr)) {
		_1ae0a99ab_tup((*(*((*(_self_))._field_oc))._field_tc.alloc)._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _19247_tup);
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_19247_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b52be846:;
			if (it != expr_end) {
				jule::I64 _19289_i = it - expr->begin();
				jule::Ptr<_1ac63d2d8_TypeKind> _192816_tt = *it;
				{
					if ((!(_1ae0ac360_shouldInitialized(&(_192816_tt))))) {
						goto _iter_next_1b52be846;
					};
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1ae0906b7_write((*(_self_))._field_oc, _1aa11b307_Itoa(_19289_i));
					_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1adec5bb3_initExpr(_self_, _192816_tt);
					if ((((*_19247_tup.alloc)._field_Types.len() - _19289_i) > 1LL)) {
						_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1b52be846:;
				++it;
				_19289_i++;
				goto _iter_begin_1b52be846;
			}
			_iter_end_1b52be846:;
		};
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1ac5030b0_Enum> _19437_enm = _1ac641242_Enum(_190929_t);;
	if ((_19437_enm != nullptr)) {
		_1adec49e7_model(_self_, (*((*((*((*_19437_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1ac646401_Prim> _19483_prim = _1ac64098e_Prim(_190929_t);;
	if ((_19483_prim != nullptr)) {
		if (_1aa128d2b_IsNum((*_19483_prim.alloc)._field_Kind)) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1ac649635_IsBool(_19483_prim)) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1ac6498bb_IsStr(_19483_prim)) {
			_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1ac64175e_Arr(_190929_t) != nullptr)) {
		jule::Ptr<_1ac64cc21_Arr> _19608_arr = _1ac64175e_Arr(_190929_t);;
		_1adec590a_initArray(_self_, &(_19608_arr));
		return;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _19647_s = _1ac642012_Struct(_190929_t);;
	if ((_19647_s != nullptr)) {
		_1adec50e1_initStructLit(_self_, &(_19647_s));
		return;;
	};
	_1ae0a51d2_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _190929_t);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1adec8a84_TestCoder_eq(_1adec8a84_TestCoder *_self_, _1adec8a84_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1adec8a84_TestCoder> static__1adec903a_New(jule::Ptr<_1ae08ee9c_ObjectCoder>* _2921_oc) {
	return jule::new_ptr<_1adec8a84_TestCoder>(_1adec8a84_TestCoder{._field_t=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_oc=(*(_2921_oc))});;
}



inline jule::Ptr<_1ac557cd5_ImportInfo> _1adec92c1_findTestingPackage(jule::Ptr<_1adec8a84_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b52ca2e1:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _3615_imp = *it;
			{
				if ((*(_3615_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3615_imp;;
				};
			}
			_iter_next_1b52ca2e1:;
			++it;
			goto _iter_begin_1b52ca2e1;
		}
		_iter_end_1b52ca2e1:;
	};
	return nullptr;;
}



inline void _1adec9579_appendTest(jule::Ptr<_1adec8a84_TestCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _4431_f) {
	_1ae091069_indent((*(_self_))._field_oc);
	_1adec9cb6_callTmReset(_self_);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1adec6972_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_4431_f))._field_Decl))._field_Ident);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1ae091069_indent((*(_self_))._field_oc);
	static__1adecce1d_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4431_f));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1adec9832_appendPackageTests(jule::Ptr<_1adec8a84_TestCoder> _self_, jule::Ptr<_1ac55ac0b_Package>* _5940_p) {
	{
		auto expr = &((*((*(_5940_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b52d1abc:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _6015_file = *it;
			{
				{
					auto expr = &((*(_6015_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b52d254b:;
					if (it != expr_end) {
						jule::Ptr<_1ac4dbd46_Fn> _6116_f = *it;
						{
							if (_1ad2984b4_HasDirective(&((*(_6116_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1adec9579_appendTest(_self_, (*_6116_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1b52d254b:;
						++it;
						goto _iter_begin_1b52d254b;
					}
					_iter_end_1b52d254b:;
				};
			}
			_iter_next_1b52d1abc:;
			++it;
			goto _iter_begin_1b52d1abc;
		}
		_iter_end_1b52d1abc:;
	};
}



inline jule::Bool _1adec9ab8_readyTestingPackage(jule::Ptr<_1adec8a84_TestCoder> _self_) {
	jule::Ptr<_1ac557cd5_ImportInfo> _707_p = _1adec92c1_findTestingPackage(_self_);;
	if ((_707_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1ac558ee5_FindStruct(_707_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1ac4cb583_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1ac4cb583_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1ac4cb583_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1adec9cb6_callTmReset(jule::Ptr<_1adec8a84_TestCoder> _self_) {
	static__1adeccb32_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1adec9eb4_callTmFailed(jule::Ptr<_1adec8a84_TestCoder> _self_) {
	static__1adeccb32_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1adeca1b2_callTmSkipped(jule::Ptr<_1adec8a84_TestCoder> _self_) {
	static__1adeccb32_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1adeca3b0_Serialize(jule::Ptr<_1adec8a84_TestCoder> _self_) {
	_1ae09c262_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1ae09ba03_end((*(_self_))._field_oc);
	});;
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	if ((!(_1adec9ab8_readyTestingPackage(_self_)))) {
		_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1ae090d6b_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1b097ade7_StrBuilder _1207_tb = static__1b097b1e4_New(40LL);;
	_1ae0a3488_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1207_tb), (*_self_.alloc)._field_t);
	_1ae0a13cb_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1b0985e8a_Buf(&_1207_tb));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1ae090970_writeBytes((*(_self_))._field_oc, _1b0985e8a_Buf(&_1207_tb));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1ae090b6d_addIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1adec9eb4_callTmFailed(_self_);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1adeca1b2_callTmSkipped(_self_);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1adec9832_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1ae090d6b_doneIndent((*(_self_))._field_oc);
	_1ae091069_indent((*(_self_))._field_oc);
	_1ae0906b7_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}








inline jule::Bool _1adecba10_identCoder_eq(_1adecba10_identCoder *_self_, _1adecba10_identCoder _other_) { return true; }

inline void static__1adecc04e_writeIdentTo(_1b097ade7_StrBuilder* _3530_buf, jule::Str* _3548_ident) {
	{
		auto expr = _3548_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b530853e:;
		if (it != expr_end) {
			jule::U8 *_3610_b = it;
			{
				if (((*(_3610_b)) >= 128LLU)) {
					goto _julec_label_1b53088b3;
				};
			}
			_iter_next_1b530853e:;
			++it;
			goto _iter_begin_1b530853e;
		}
		_iter_end_1b530853e:;
	};
	_1b0984be2_WriteStr(_3530_buf, (*(_3548_ident)));
	return;;
	_julec_label_1b53088b3:;
	{
		auto expr = _3548_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _4610_r;
		_iter_begin_1b53093ec:;
		__jule_runeStep(it, end - it, &_4610_r, &len);
		if (it < end) {
			{
				if ((_4610_r < 128LL)) {
					_1b0984e9a_WriteByte(_3530_buf, static_cast<jule::U8>(_4610_r));
					goto _iter_next_1b53093ec;
				};
				_1b0984be2_WriteStr(_3530_buf, _1aa11b03d_FmtInt(static_cast<jule::I64>(_4610_r), 15LL));
			}
			_iter_next_1b53093ec:;
			it += len;
			goto _iter_begin_1b53093ec;
		}
	};
}



inline void static__1adecc3e5_toOut(_1b097ade7_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr) {
	_1b0984e9a_WriteByte(_6323_buf, '_');
	if ((_6352_addr != 0LLU)) {
		_1b0984be2_WriteStr(_6323_buf, _1aa11ab75_FmtUint(static_cast<jule::U64>(_6352_addr), 15LL));
		_1b0984e9a_WriteByte(_6323_buf, '_');
	};
	static__1adecc04e_writeIdentTo(_6323_buf, &(_6340_ident));
}



inline void static__1adecc846_toLocal(_1b097ade7_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident) {
	_1b0984e9a_WriteByte(_7825_buf, '_');
	_1b0984be2_WriteStr(_7825_buf, _1aa11b307_Itoa(_7842_row));
	_1b0984be2_WriteStr(_7825_buf, _1aa11b307_Itoa(_7852_col));
	_1b0984e9a_WriteByte(_7825_buf, '_');
	static__1adecc04e_writeIdentTo(_7825_buf, _7863_ident);
}



inline void static__1adeccb32_func(_1b097ade7_StrBuilder* _8622_buf, jule::Ptr<_1ac4dbd46_Fn>* _8644_f) {
	{
		
		if ((*((*(_8644_f))))._field_Binded) {
			_case_begin_1b530d830:;
			{
				_1b0984be2_WriteStr(_8622_buf, (*((*(_8644_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8644_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1b530d8c9:;
			{
				_1b0984be2_WriteStr(_8622_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1ac4dc583_IsMethod((*(_8644_f)).ptr())) {
			_case_begin_1b530d940:;
			{
				if ((*((*(_8644_f))))._field_Statically) {
					_1b0984be2_WriteStr(_8622_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1b530d6ba:;
	};
	jule::Ptr<_1ac4a5b9a_Directive> _993_export = _1ad2980eb_FindDirective(&((*((*(_8644_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_993_export != nullptr)) {
		_1b0984be2_WriteStr(_8622_buf, (*((*_993_export.alloc)._field_Args[0LL]))._field_Kind);
		return;;
	};
	static__1adecc3e5_toOut(_8622_buf, (*((*(_8644_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8644_f))));
}



inline void static__1adecce1d_funcIns(_1b097ade7_StrBuilder* _10725_buf, jule::Ptr<_1ac4dee04_FnIns>* _10747_f) {
	if (_1ac4e13bc_IsBuiltin((*(_10747_f)).ptr())) {
		_1b0984be2_WriteStr(_10725_buf, jule::Str::lit("jule::", 6));
		_1b0984be2_WriteStr(_10725_buf, (*((*((*(_10747_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10747_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10747_f))))._field_Generics.len() == 0LL))) {
		static__1adeccb32_func(_10725_buf, &((*((*(_10747_f))))._field_Decl));
		return;;
	};
	static__1adecc3e5_toOut(_10725_buf, (*(*((*(_10747_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10747_f))));
}



inline void static__1adecd209_traitDecl(_1b097ade7_StrBuilder* _12227_buf, jule::Ptr<_1ac5008a4_Trait> _12244_t) {
	static__1adecc3e5_toOut(_12227_buf, (*(_12244_t))._field_Ident, static_cast<jule::Uintptr>(_12244_t));
}



inline void static__1adecd4e5_param(_1b097ade7_StrBuilder* _12623_buf, jule::Ptr<_1ac4da372_Param>* _12641_p) {
	if ((_1ac493e74_IsAnonIdent((*((*(_12641_p))))._field_Ident) || _1ac493baa_IsIgnoreIdent((*((*(_12641_p))))._field_Ident))) {
		return;;
	};
	if (_1ac4da9c1_IsSelf((*(_12641_p)).ptr())) {
		_1b0984be2_WriteStr(_12623_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12641_p))))._field_Token == nullptr)) {
		static__1adecc846_toLocal(_12623_buf, 0LL, 0LL, &((*((*(_12641_p))))._field_Ident));
		return;;
	};
	static__1adecc846_toLocal(_12623_buf, (*((*((*(_12641_p))))._field_Token))._field_Row, (*((*((*(_12641_p))))._field_Token))._field_Column, &((*((*(_12641_p))))._field_Ident));
}



inline void static__1adecd7d1_structure(_1b097ade7_StrBuilder* _14127_buf, jule::Ptr<_1ac4c767d_Struct>* _14145_s) {
	if ((*((*(_14145_s))))._field_Binded) {
		if ((!(_1ad2984b4_HasDirective(&((*((*(_14145_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			_1b0984be2_WriteStr(_14127_buf, jule::Str::lit("struct ", 7));
		};
		_1b0984be2_WriteStr(_14127_buf, (*((*(_14145_s))))._field_Ident);
		return;;
	};
	static__1adecc3e5_toOut(_14127_buf, (*((*(_14145_s))))._field_Ident, static_cast<jule::Uintptr>((*(_14145_s))));
}



inline void static__1adecdabc_structureIns(_1b097ade7_StrBuilder* _15230_buf, jule::Ptr<_1ac4ca4d8_StructIns>* _15248_s) {
	if (((*((*((*(_15248_s))))._field_Decl))._field_Binded || ((*((*(_15248_s))))._field_Generics.len() == 0LL))) {
		static__1adecd7d1_structure(_15230_buf, &((*((*(_15248_s))))._field_Decl));
		return;;
	};
	static__1adecc3e5_toOut(_15230_buf, (*(*((*(_15248_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_15248_s))));
}



inline void static__1adecdda8_field(_1b097ade7_StrBuilder* _16023_buf, jule::Ptr<_1ac4c4757_Field>* _16041_f) {
	if ((*((*((*(_16041_f))))._field_Owner))._field_Binded) {
		_1b0984be2_WriteStr(_16023_buf, (*((*(_16041_f))))._field_Ident);
		return;;
	};
	_1b0984be2_WriteStr(_16023_buf, jule::Str::lit("_field_", 7));
	static__1adecc04e_writeIdentTo(_16023_buf, &((*((*(_16041_f))))._field_Ident));
}



inline void static__1adece194_var(_1b097ade7_StrBuilder* _17021_buf, jule::Ptr<_1ac5a2527_Var> _17042_v) {
	{
		
		if ((*(_17042_v))._field_Binded) {
			_case_begin_1b4c5d1d6:;
			{
				_1b0984be2_WriteStr(_17021_buf, (*_17042_v.alloc)._field_Ident);
			}
		}
		else if (((*(_17042_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1b4c5c405:;
			{
				_1b0984be2_WriteStr(_17021_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if (((*(_17042_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1b4c5b48c:;
			{
				_1b0984be2_WriteStr(_17021_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_17042_v))._field_RetOrder == -1LL)) {
			_case_begin_1b4c5b503:;
			{
				_1b0984be2_WriteStr(_17021_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_17042_v))._field_RetOrder >= 0LL)) {
			_case_begin_1b4c5b569:;
			{
				_1b0984be2_WriteStr(_17021_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1b0984be2_WriteStr(_17021_buf, _1aa11b307_Itoa((*_17042_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_17042_v))._field_Scope != nullptr)) {
			_case_begin_1b4c5b5d0:;
			{
				static__1adecc846_toLocal(_17021_buf, (*((*_17042_v.alloc)._field_Token))._field_Row, (*(*(_17042_v))._field_Token.alloc)._field_Column, &((*_17042_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1b4c5b426:;
			{
				jule::Ptr<_1ac4a5b9a_Directive> _1884_export = _1ad2980eb_FindDirective(&((*(_17042_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1884_export != nullptr)) {
					_1b0984be2_WriteStr(_17021_buf, (*((*_1884_export.alloc)._field_Args[0LL]))._field_Kind);
					return;;
				};
				static__1adecc3e5_toOut(_17021_buf, (*_17042_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_17042_v));
			}
		}
		_match_end_1b4c5b316:;
	};
}



inline void static__1adece480_iterBegin(_1b097ade7_StrBuilder* _19727_buf, jule::Uintptr _19744_it) {
	_1b0984be2_WriteStr(_19727_buf, jule::Str::lit("_iter_begin_", 12));
	_1b0984be2_WriteStr(_19727_buf, _1aa11ab75_FmtUint(static_cast<jule::U64>(_19744_it), 15LL));
}



inline void static__1adece76b_iterEnd(_1b097ade7_StrBuilder* _20225_buf, jule::Uintptr _20242_it) {
	_1b0984be2_WriteStr(_20225_buf, jule::Str::lit("_iter_end_", 10));
	_1b0984be2_WriteStr(_20225_buf, _1aa11ab75_FmtUint(static_cast<jule::U64>(_20242_it), 15LL));
}



inline void static__1adecea57_iterNext(_1b097ade7_StrBuilder* _20726_buf, jule::Uintptr _20743_it) {
	_1b0984be2_WriteStr(_20726_buf, jule::Str::lit("_iter_next_", 11));
	_1b0984be2_WriteStr(_20726_buf, _1aa11ab75_FmtUint(static_cast<jule::U64>(_20743_it), 15LL));
}



inline void static__1adeced43_label(_1b097ade7_StrBuilder* _21223_buf, jule::Uintptr _21240_u) {
	_1b0984be2_WriteStr(_21223_buf, jule::Str::lit("_julec_label_", 13));
	_1b0984be2_WriteStr(_21223_buf, _1aa11ab75_FmtUint(static_cast<jule::U64>(_21240_u), 15LL));
}



inline void static__1aded012e_matchEnd(_1b097ade7_StrBuilder* _21726_buf, jule::Uintptr _21743_m) {
	_1b0984be2_WriteStr(_21726_buf, jule::Str::lit("_match_end_", 11));
	_1b0984be2_WriteStr(_21726_buf, _1aa11ab75_FmtUint(static_cast<jule::U64>(_21743_m), 15LL));
}



inline void static__1aded041a_caseBegin(_1b097ade7_StrBuilder* _22227_buf, jule::Uintptr _22244_c) {
	_1b0984be2_WriteStr(_22227_buf, jule::Str::lit("_case_begin_", 12));
	_1b0984be2_WriteStr(_22227_buf, _1aa11ab75_FmtUint(static_cast<jule::U64>(_22244_c), 15LL));
}








inline jule::Bool _1ae08cb9d_SerializationInfo_eq(_1ae08cb9d_SerializationInfo *_self_, _1ae08cb9d_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1ae08d0bb_traitCast_eq(_1ae08d0bb_traitCast *_self_, _1ae08d0bb_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1ae08d495_anonHash_eq(_1ae08d495_anonHash *_self_, _1ae08d495_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}






inline jule::Bool _1ae08d819_metadata_eq(_1ae08d819_metadata *_self_, _1ae08d819_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1ae08ee9c_ObjectCoder> static__1ae09040e_New(jule::Ptr<_1ad29028b_IR>* _14021_ir, _1ae08cb9d_SerializationInfo _14030_info) {
	jule::Ptr<_1ae08ee9c_ObjectCoder> _1417_oc = jule::new_ptr<_1ae08ee9c_ObjectCoder>(_1ae08ee9c_ObjectCoder{._field_Buf=_1b097ade7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1b097ade7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1b097ade7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1b097ade7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1b097ade7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_1b097ade7_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_14021_ir)), ._field_info=_14030_info, ._field_anons=jule::Slice<jule::Ptr<_1ae08d495_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1b4d1924d_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr), ._field_traitCastMap=jule::Slice<_1ae08d0bb_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1ac4dee04_FnIns>>(nullptr), ._field_traitMetMap=static__1b4d64c05_make(), ._field_ec=jule::Ptr<_1adeb62d0_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1adea99ee_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1ae09eece_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1ae08d819_metadata{._field_concurrent=false}});;
	(*(_1417_oc))._field_ec=static__1adeb66cb_new(&(_1417_oc));
	(*_1417_oc.alloc)._field_sc=static__1adeaa1e7_new(&(_1417_oc));
	(*_1417_oc.alloc)._field_tc=static__1ae0a052e_new(&(_1417_oc));
	return _1417_oc;;
}



inline void _1ae0906b7_write(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Str _15322_s) {
	_1b0984be2_WriteStr(&(*(_self_))._field_Buf, _15322_s);
}



inline void _1ae090970_writeBytes(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Slice<jule::U8> _15727_b) {
	_1b0984939_Write(&(*(_self_))._field_Buf, _15727_b);
}



inline void _1ae090b6d_addIndent(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1ae090d6b_doneIndent(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1ae091069_indent(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1b0984939_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1ae0913aa_findAnyType(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _17633_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b546129b:;
		if (it != expr_end) {
			jule::I64 _1778_i = it - expr->begin();
			jule::Ptr<_1ac63d2d8_TypeKind> _17715_at = *it;
			{
				if (_1ac63da25_Equal(_17715_at, (*(_17633_t)))) {
					return _1778_i;;
				};
			}
			_iter_next_1b546129b:;
			++it;
			_1778_i++;
			goto _iter_begin_1b546129b;
		}
		_iter_end_1b546129b:;
	};
	return -1LL;;
}



inline jule::I64 _1ae0916eb_pushCoSpawn(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _18532_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5461d5c:;
		if (it != expr_end) {
			jule::I64 _1867_i = it - expr->begin();
			jule::Ptr<_1ac4dee04_FnIns> _18610_sf = *it;
			{
				if (((*(_18610_sf))._field_Params.len() == (*(_18532_f))._field_Params.len())) {
					{
						auto expr = &((*_18610_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b5463886:;
						if (it != expr_end) {
							jule::I64 _1889_j = it - expr->begin();
							jule::Ptr<_1ac4ddc9e_ParamIns> *_18812_sp = it;
							{
								if ((!(_1ac63da25_Equal((*((*(_18812_sp))))._field_Kind, (*((*(_18610_sf))._field_Params[_1889_j]))._field_Kind)))) {
									goto _iter_end_1b5463886;
								};
							}
							_iter_next_1b5463886:;
							++it;
							_1889_j++;
							goto _iter_begin_1b5463886;
						}
						_iter_end_1b5463886:;
					};
					return _1867_i;;
				};
			}
			_iter_next_1b5461d5c:;
			++it;
			_1867_i++;
			goto _iter_begin_1b5461d5c;
		}
		_iter_end_1b5461d5c:;
	};
	jule::I64 _1963_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1973_is = _1aa11b307_Itoa(_1963_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4dee04_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _18532_f; __jule_collection; }));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1973_is);
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_1ae0a4d6e_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _18532_f);
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
	{
		auto expr = &((*_18532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5468b88:;
		if (it != expr_end) {
			jule::I64 _2138_j = it - expr->begin();
			jule::Ptr<_1ac4ddc9e_ParamIns> _21315_p = *it;
			{
				_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_1ae0a51d2_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_21315_p))._field_Kind);
				_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1aa11b307_Itoa(_2138_j));
				_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
				_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
			}
			_iter_next_1b5468b88:;
			++it;
			_2138_j++;
			goto _iter_begin_1b5468b88;
		}
		_iter_end_1b5468b88:;
	};
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
	{
		
		if ((_1b0399184_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1b546dde1:;
			{
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
			}
		}
		else if (_1b08bac8d_IsUnix(_1b0399184_Os)) {
			_case_begin_1b546debd:;
			{
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
			}
		}
		else {
			_case_begin_1b546bae2:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:4"));;
			}
		}
		_match_end_1b546d82a:;
	};
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1973_is);
	;
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1973_is);
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1973_is);
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
	{
		auto expr = &((*_18532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b54768aa:;
		if (it != expr_end) {
			jule::I64 _2587_j = it - expr->begin();
			{
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1aa11b307_Itoa(_2587_j));
				if ((((*_18532_f.alloc)._field_Params.len() - _2587_j) > 1LL)) {
					_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b54768aa:;
			++it;
			_2587_j++;
			goto _iter_begin_1b54768aa;
		}
		_iter_end_1b54768aa:;
	};
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
	{
		
		if ((_1b0399184_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1b547ae75:;
			{
				_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
			}
		}
		else if (_1b08bac8d_IsUnix(_1b0399184_Os)) {
			_case_begin_1b547b052:;
			{
				_1b0984e9a_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
			}
		}
		else {
			_case_begin_1b5477229:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:281:4"));;
			}
		}
		_match_end_1b547aaac:;
	};
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
	return _1963_i;;
}



inline jule::I64 _1ae091a3c_pushDealloc(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _28832_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b547d4d8:;
		if (it != expr_end) {
			jule::I64 _2897_i = it - expr->begin();
			jule::Ptr<_1ac63d2d8_TypeKind> _28910_dt = *it;
			{
				if (_1ac63da25_Equal(_28910_dt, _28832_t)) {
					return _2897_i;;
				};
			}
			_iter_next_1b547d4d8:;
			++it;
			_2897_i++;
			goto _iter_begin_1b547d4d8;
		}
		_iter_end_1b547d4d8:;
	};
	jule::I64 _2943_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28832_t; __jule_collection; }));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_deallocObj, _1aa11b307_Itoa(_2943_i));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1ae0a51d2_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _28832_t);
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _2943_i;;
}



inline jule::Str _1ae091d7d_pushAnonFn(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel>* _30432_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_30432_m))))._field_Func))._field_CalledCo);
	jule::Bool _3073_closure = _1ad29666b_IsClosure(_30432_m);;
	if (_3073_closure) {
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _3114_l = _1b098596d_Len(&(*_self_.alloc)._field_anonObj);;
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, _1aa11ab75_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_30432_m))))._field_Func)), 15LL));
		__jule_func_result=__jule_bytesToStr(_1b0985e8a_Buf(&(*_self_.alloc)._field_anonObj).slice(_3114_l));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_30432_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b5485a95:;
			if (it != expr_end) {
				jule::Ptr<_1ac5a2527_Var> _31616_v = *it;
				{
					_1b0984e9a_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1ae0a51d2_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_31616_v))._field_Kind))._field_Kind);
					_1b0984e9a_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_31616_v.alloc)._field_Reference) {
						_1b0984e9a_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1adece194_var(&((*_self_.alloc)._field_anonObj), _31616_v);
					_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1b5485a95:;
				++it;
				goto _iter_begin_1b5485a95;
			}
			_iter_end_1b5485a95:;
		};
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1aa11ab75_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_30432_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ae08d495_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ae08d495_anonHash>(_1ae08d495_anonHash{._field_expr=(*(_30432_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1ae097c1e_anonFuncInsDecl(_self_, _30432_m, __jule_func_result);
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1ae0921be_pushAnyType(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _34632_t) {
	jule::Ptr<_1ac63d2d8_TypeKind> _3477_orig = _34632_t;;
	if ((_1ac641242_Enum(_34632_t.ptr()) != nullptr)) {
		_34632_t=(*((*(_1ac641242_Enum(_34632_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _3517_i = _1ae0913aa_findAnyType(_self_, &(_34632_t));;
	if ((_3517_i != -1LL)) {
		return _3517_i;;
	};
	_3517_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _34632_t; __jule_collection; }));
	jule::Str _3573_si = _1aa11b307_Itoa(_3517_i);;
	if ((_1ac640c25_Sptr(_34632_t) != nullptr)) {
		_1b097ade7_StrBuilder _3598_elemKind = static__1b097b1e4_New(40LL);;
		_1ae0a51d2_kind((*_self_.alloc)._field_tc.ptr(), &(_3598_elemKind), (*(_1ac640c25_Sptr(_34632_t)))._field_Elem);
		jule::I64 _3634_di = _1ae091a3c_pushDealloc(_self_, (*(_1ac640c25_Sptr(_34632_t)))._field_Elem);;
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _1aa11b307_Itoa(_3634_di));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1ae0a13cb_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1b0985e8a_Buf(&_3598_elemKind));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _3824_comparable = _1ac63e938_Comparable(_34632_t);;
		_1b097ade7_StrBuilder _3838_kindB = static__1b097b1e4_New(40LL);;
		_1ae0a51d2_kind((*_self_.alloc)._field_tc.ptr(), &(_3838_kindB), _34632_t);
		jule::Str _3854_kind = _1b09854d9_Str(&_3838_kindB);;
		jule::I64 _3884_di = _1ae091a3c_pushDealloc(_self_, _34632_t);;
		if (_3824_comparable) {
			jule::Str _3949_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
			_3949_lmodel+=_3854_kind;
			_3949_lmodel+=jule::Str::lit("*>(", 3);
			jule::Str _3979_rmodel = _3949_lmodel;;
			_3979_rmodel+=jule::Str::lit("other)", 6);
			_3949_lmodel+=jule::Str::lit("alloc)", 6);
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return ", 48));
			_1adeb8ac9__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3949_lmodel), &(_3979_rmodel), &(_34632_t), &(_34632_t), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
		};
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
		jule::Ptr<_1ac4dbd46_Fn> _4128_decl = _1ac8cc38a_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
		jule::Ptr<_1ac4dee04_FnIns> _4138_f = _1ad299b25_FindFnGenericInstance(&(_4128_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _3477_orig; __jule_collection; }));;
		static__1adecce1d_funcIns(&((*_self_.alloc)._field_anyObj), &(_4138_f));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
		if ((_1ac640eab_Ptr(_34632_t) == nullptr)) {
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3854_kind);
		} else {
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3854_kind);
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _1aa11b307_Itoa(_3884_di));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_3824_comparable) {
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
		_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_3824_comparable) {
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3854_kind);
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _3573_si);
			_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _3517_i;;
}



inline void _1ae092477_pushResultIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dee04_FnIns>* _45735_f) {
	jule::Str _4583_s = __jule_bytesToStr(_1ae0aa490_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_45735_f))))._field_Result)));;
	jule::Bool _4596_ok;
	_1b4d19913_lookup((*_self_.alloc)._field_resultMap, _4583_s, nullptr, &(_4596_ok));
	if (_4596_ok) {
		return;;
	};
	(*_1b4d19bbb_set(((*_self_.alloc)._field_resultMap).ptr(), _4583_s))=false;
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_resultDecls, _4583_s);
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1ac6427b5_Tup((*((*(_45735_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b54ac7e2:;
		if (it != expr_end) {
			jule::I64 _4678_i = it - expr->begin();
			jule::Ptr<_1ac63d2d8_TypeKind> _46715_t = *it;
			{
				_1b0984e9a_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1ae0a51d2_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _46715_t);
				_1b0984e9a_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_resultDecls, _1aa11b307_Itoa(_4678_i));
				_1b0984be2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b54ac7e2:;
			++it;
			_4678_i++;
			goto _iter_begin_1b54ac7e2;
		}
		_iter_end_1b54ac7e2:;
	};
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1ae092730_pushResult(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dbd46_Fn>* _47832_f) {
	if ((_1ac4dc2ec_IsVoid((*(_47832_f)).ptr()) || ((*((*((*(_47832_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _4827_n = (*((*(_47832_f))))._field_Instances.len();;
	if (((*((*(_47832_f))))._field_Generics.len() == 0LL)) {
		_4827_n=1LL;
	};
	{
		auto expr = (*((*(_47832_f))))._field_Instances.slice(0LL, _4827_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b54b28c4:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dee04_FnIns> _48615_ins = *it;
			{
				_1ae092477_pushResultIns(_self_, &(_48615_ins));
			}
			_iter_next_1b54b28c4:;
			++it;
			goto _iter_begin_1b54b28c4;
		}
		_iter_end_1b54b28c4:;
	};
}



inline void _1ae092a93_pushAndWriteMaskMapper(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5008a4_Trait> _49143_t1, jule::Ptr<_1ac5008a4_Trait> _49159_t2) {
	_1b097ade7_StrBuilder _4927_ident = static__1b097b1e4_New(32LL);;
	_1b0984be2_WriteStr(&_4927_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1b0984be2_WriteStr(&_4927_ident, _1aa11ab75_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_49159_t2)), 15LL));
	_1b0984be2_WriteStr(&_4927_ident, jule::Str::lit("_to_", 4));
	_1b0984be2_WriteStr(&_4927_ident, _1aa11ab75_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_49143_t1)), 15LL));
	_1b0984939_Write(&(*(_self_))._field_Buf, _1b0985e8a_Buf(&_4927_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b54b5751:;
		if (it != expr_end) {
			_1ae08d0bb_traitCast _50010_m = *it;
			{
				if (((_50010_m._field_t1 == _49143_t1) && (_50010_m._field_t2 == _49159_t2))) {
					return;;
				};
			}
			_iter_next_1b54b5751:;
			++it;
			goto _iter_begin_1b54b5751;
		}
		_iter_end_1b54b5751:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1ae08d0bb_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ae08d0bb_traitCast{._field_t1=_49143_t1, ._field_t2=_49159_t2}; __jule_collection; }));
	;
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_1b0984939_Write(&(*_self_.alloc)._field_anyObj, _1b0985e8a_Buf(&_4927_ident));
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_1b097ade7_StrBuilder _5147_t1Ident = static__1b097b1e4_New(16LL);;
	_1b097ade7_StrBuilder _5157_t2Ident = static__1b097b1e4_New(16LL);;
	static__1adecd209_traitDecl(&(_5147_t1Ident), _49143_t1);
	static__1adecd209_traitDecl(&(_5157_t2Ident), _49159_t2);
	{
		auto expr = &((*(_49143_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b54b5d7d:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _51915_s1 = *it;
			{
				{
					auto expr = &((*(_49159_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b54b9d82:;
					if (it != expr_end) {
						jule::Ptr<_1ac4c767d_Struct> _52011_s2 = *it;
						{
							if ((_51915_s1 == _52011_s2)) {
								{
									auto expr = &((*(_51915_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b54bac73:;
									if (it != expr_end) {
										jule::Ptr<_1ac4ca4d8_StructIns> _52218_s1i = *it;
										{
											jule::I64 _5237_i1 = _1ad298eed_FindTraitTypeOffsetS(_49143_t1, _52218_s1i);;
											jule::I64 _5247_i2 = _1ad298eed_FindTraitTypeOffsetS(_49159_t2, _52218_s1i);;
											_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_1b0984939_Write(&(*_self_.alloc)._field_anyObj, _1b0985e8a_Buf(&_5157_t2Ident));
											_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _1aa11b307_Itoa(_5247_i2));
											_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_1b0984939_Write(&(*_self_.alloc)._field_anyObj, _1b0985e8a_Buf(&_5147_t1Ident));
											_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, _1aa11b307_Itoa(_5237_i1));
											_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1b54bac73:;
										++it;
										goto _iter_begin_1b54bac73;
									}
									_iter_end_1b54bac73:;
								};
							};
						}
						_iter_next_1b54b9d82:;
						++it;
						goto _iter_begin_1b54b9d82;
					}
					_iter_end_1b54b9d82:;
				};
			}
			_iter_next_1b54b5d7d:;
			++it;
			goto _iter_begin_1b54b5d7d;
		}
		_iter_end_1b54b5d7d:;
	};
	_1b0984be2_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
}



inline void _1ae092d4b_locInfo(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4912c3_Token>* _54225_t) {
	jule::Str *_5434_loc = &((*((*((*(_54225_t))))._field_File))._field_Path);;
	if (_1b03a1730_Production) {
		{
			
			if (_1b0966ec1_HasPrefix((*(_5434_loc)), _1b0398529_PathStdlib)) {
				_case_begin_1b54c1262:;
				{
					_1adec6642_cstrBytes(&((*(_self_))._field_Buf), (*(_5434_loc)).slice((_1b0989d6d_Dir(_1b0398529_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1b0966ec1_HasPrefix((*(_5434_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1b54c133e:;
				{
					_1adec6642_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5434_loc)).slice((_1b0989d6d_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1b54c0d99:;
				{
					_1adec6642_cstrBytes(&((*(_self_))._field_Buf), (*(_5434_loc)));
				}
			}
			_match_end_1b54c0cbc:;
		};
	} else {
		_1adec6642_cstrBytes(&((*(_self_))._field_Buf), (*(_5434_loc)));
	};
	_1ae0906b7_write(_self_, jule::Str::lit(":", 1));
	_1ae0906b7_write(_self_, _1aa11b307_Itoa((*((*(_54225_t))))._field_Row));
	_1ae0906b7_write(_self_, jule::Str::lit(":", 1));
	_1ae0906b7_write(_self_, _1aa11b307_Itoa((*((*(_54225_t))))._field_Column));
}



inline void _1ae093049_head(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ae08328c_Time _5693_time = static__1ae083886_Now();;
	_1ae082ab6_AbsTime _5703_abs = _1ae08506e_Abs(&_5693_time);;
	_1ae0906b7_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1ae0906b7_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1ae0906b7_write(_self_, jule::Str::lit("jule0.1.0", 9));
	_1ae0906b7_write(_self_, jule::Str::lit("\n", 1));
	_1ae0906b7_write(_self_, jule::Str::lit("// Date: ", 9));
	_1ae0906b7_write(_self_, _1aa11ab75_FmtUint(_5703_abs._field_Day, 10LL));
	_1ae0906b7_write(_self_, jule::Str::lit("/", 1));
	_1ae0906b7_write(_self_, _1aa11ab75_FmtUint(_5703_abs._field_Month, 10LL));
	_1ae0906b7_write(_self_, jule::Str::lit("/", 1));
	_1ae0906b7_write(_self_, _1aa11ab75_FmtUint(_5703_abs._field_Year, 10LL));
	_1ae0906b7_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ae0906b7_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1ae0906b7_write(_self_, jule::Str::lit(" ", 1));
	_1ae0906b7_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1b03a1730_Production) {
		_1ae0906b7_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1b03a1125_RC))) {
		_1ae0906b7_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1b03a14dd_Safety))) {
		_1ae0906b7_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ae093302_links(_self_, true);
	_1ae0906b7_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1ae0906b7_write(_self_, _1b0398dcb_PathApi);
	_1ae0906b7_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1ae093302_links(_self_, false);
}



inline void _1ae093302_links(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Bool _60922_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b54cce61:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _61010_used = *it;
			{
				{
					
					if ((!((*(_61010_used))._field_Binded))) {
						_case_begin_1b54cdc97:;
						{
							goto _iter_next_1b54cce61;
						}
					}
					else if (_1b08a92a9_IsStdHeaderPath((*(_61010_used))._field_Path)) {
						_case_begin_1b54cdd30:;
						{
							if ((!(_60922_std))) {
								goto _iter_next_1b54cce61;
							};
							_1ae0906b7_write(_self_, jule::Str::lit("#include ", 9));
							_1ae0906b7_write(_self_, (*_61010_used.alloc)._field_Path);
							_1ae0906b7_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1b08a9584_IsValidHeaderExt(_1b0989411_Ext((*(_61010_used))._field_Path))) {
						_case_begin_1b54cdd96:;
						{
							if (_60922_std) {
								goto _iter_next_1b54cce61;
							};
							_1ae0906b7_write(_self_, jule::Str::lit("#include \"", 10));
							_1ae0906b7_write(_self_, (*_61010_used.alloc)._field_Path);
							_1ae0906b7_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1b54cdb43:;
				};
			}
			_iter_next_1b54cce61:;
			++it;
			goto _iter_begin_1b54cce61;
		}
		_iter_end_1b54cce61:;
	};
}



inline void _1ae0935aa_prepareStructure(_1ae08ee9c_ObjectCoder* _self_, jule::Ptr<_1ac4c767d_Struct>* _63237_s) {
	{
		auto expr = &((*((*(_63237_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b54cd901:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ca4d8_StructIns> _63315_ins = *it;
			{
				{
					auto expr = &((*(_63315_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b54d2a37:;
					if (it != expr_end) {
						jule::Ptr<_1ac4dbd46_Fn> _63416_m = *it;
						{
							if ((*(_63416_m))._field_Statically) {
								goto _iter_next_1b54d2a37;
							};
							{
								auto expr = &((*_63416_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b54d35e8:;
								if (it != expr_end) {
									jule::Ptr<_1ac4dee04_FnIns> _63817_mins = *it;
									{
										jule::Ptr<_1ac4ddc9e_ParamIns> _63910_p = (*(_63817_mins))._field_Params[0LL];;
										_1b097ade7_StrBuilder _64010_kind = static__1b097b1e4_New(40LL);;
										_1ae0a51d2_kind((*(_self_))._field_tc.ptr(), &(_64010_kind), (*(_63910_p))._field_Kind);
										if ((!(_1ac4dac57_IsRef((*_63910_p.alloc)._field_Decl.ptr())))) {
											_1b0984be2_WriteStr(&_64010_kind, jule::Str::lit("*", 1));
										};
										(*_63910_p.alloc)._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ae09e396_customType>(_1ae09e396_customType{._field_kind=_1b09854d9_Str(&_64010_kind)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data29)});
									}
									_iter_next_1b54d35e8:;
									++it;
									goto _iter_begin_1b54d35e8;
								}
								_iter_end_1b54d35e8:;
							};
						}
						_iter_next_1b54d2a37:;
						++it;
						goto _iter_begin_1b54d2a37;
					}
					_iter_end_1b54d2a37:;
				};
			}
			_iter_next_1b54cd901:;
			++it;
			goto _iter_begin_1b54cd901;
		}
		_iter_end_1b54cd901:;
	};
}



inline void _1ae0937a8_prepareStructures(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b54cc911:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _65615_s = *it;
			{
				if (((*(_65615_s))._field_Token != nullptr)) {
					_1ae0935aa_prepareStructure(_self_.ptr(), &(_65615_s));
				};
			}
			_iter_next_1b54cc911:;
			++it;
			goto _iter_begin_1b54cc911;
		}
		_iter_end_1b54cc911:;
	};
}



inline void _1ae093a61_structurePlainDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4c767d_Struct>* _66340_s) {
	{
		auto expr = &((*((*(_66340_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b54d7c07:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ca4d8_StructIns> _66415_ins = *it;
			{
				_1ae0906b7_write(_self_, jule::Str::lit("struct ", 7));
				static__1adecdabc_structureIns(&((*_self_.alloc)._field_Buf), &(_66415_ins));
				_1ae0906b7_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b54d7c07:;
			++it;
			goto _iter_begin_1b54d7c07;
		}
		_iter_end_1b54d7c07:;
	};
}



inline void _1ae093c5e_structurePlainDecls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b54d9324:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _67215_s = *it;
			{
				if (((*(_67215_s))._field_Token != nullptr)) {
					_1ae093a61_structurePlainDecl(_self_, &(_67215_s));
				};
			}
			_iter_next_1b54d9324:;
			++it;
			goto _iter_begin_1b54d9324;
		}
		_iter_end_1b54d9324:;
	};
}



inline void _1ae094017_fieldDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4c9938_FieldIns>* _67931_f) {
	_1ae0a51d2_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_67931_f))))._field_Kind);
	_1ae0906b7_write(_self_, jule::Str::lit(" ", 1));
	static__1adecdda8_field(&((*_self_.alloc)._field_Buf), &((*((*(_67931_f))))._field_Decl));
	_1ae0906b7_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ae0942c0_structureDestructor(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _68641_s) {
	;
	jule::Ptr<_1ac4dbd46_Fn> _6897_disposeMethod = _1ac4cb583_FindMethod((*(_68641_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _6907_disposed = static__1ac5a3b22_Dispose(_6897_disposeMethod);;
	if ((!(_6907_disposed))) {
		return;;
	};
	_1ae0906b7_write(_self_, jule::Str::lit("~", 1));
	static__1adecdabc_structureIns(&((*_self_.alloc)._field_Buf), _68641_s);
	_1ae0906b7_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1adeccb32_func(&((*_self_.alloc)._field_Buf), &(_6897_disposeMethod));
	_1ae0906b7_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1ae0946dd_structureOperatorEq(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Str _70236_ident, jule::Ptr<_1ac4ca4d8_StructIns>* _70253_s, jule::Bool _70268_decl) {
	if ((!(_1ae09cdbc_defaultEq(_70253_s)))) {
		return;;
	};
	_1ae0906b7_write(_self_, jule::Str::lit("\n", 1));
	if (_1ad2b239b_Inline) {
		_1ae0906b7_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ae0906b7_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1ae0906b7_write(_self_, _70236_ident);
	_1ae0906b7_write(_self_, jule::Str::lit("_eq", 3));
	_1ae0906b7_write(_self_, jule::Str::lit("(", 1));
	_1ae0906b7_write(_self_, _70236_ident);
	_1ae0906b7_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1ae0906b7_write(_self_, _70236_ident);
	_1ae0906b7_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_70268_decl) {
		_1ae0906b7_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1ae0906b7_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_70253_s))))._field_Fields.len() == 0LL)) {
		_1ae0906b7_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1ae090b6d_addIndent(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("\n", 1));
	_1ae091069_indent(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("return ", 7));
	_1ae090b6d_addIndent(_self_);
	jule::Bool _7337_writed = false;;
	jule::Str _7367_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _7377_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_70253_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b54e708a:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c9938_FieldIns> _73915_f = *it;
			{
				jule::Ptr<_1ac4ca4d8_StructIns> _7414_strct = _1ac642012_Struct((*(_73915_f))._field_Kind.ptr());;
				if ((((_7414_strct != nullptr) && ((*_7414_strct.alloc)._field_Decl != nullptr)) && (*(*(_7414_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1b54e708a;
				};
				if (_7337_writed) {
					_1ae0906b7_write(_self_, jule::Str::lit(" &&", 3));
				};
				_7337_writed=true;
				_1ae0906b7_write(_self_, jule::Str::lit("\n", 1));
				_1ae091069_indent(_self_);
				_1b097ade7_StrBuilder _7528_fIdent = static__1b097b1e4_New((*((*_73915_f.alloc)._field_Decl))._field_Ident.len());;
				static__1adecdda8_field(&(_7528_fIdent), &((*_73915_f.alloc)._field_Decl));
				_7367_lmodel+=_1e276361a_BytesStr(_1b0985e8a_Buf(&_7528_fIdent));
				_7377_rmodel+=_1e276361a_BytesStr(_1b0985e8a_Buf(&_7528_fIdent));
				_1adeb8ac9__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_7367_lmodel), &(_7377_rmodel), &((*_73915_f.alloc)._field_Kind), &((*_73915_f.alloc)._field_Kind), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_7367_lmodel).mut_slice(0LL, (_7367_lmodel.len() - _1b098596d_Len(&_7528_fIdent)));;
				_7377_rmodel=_7367_lmodel.slice(0LL, (_7377_rmodel.len() - _1b098596d_Len(&_7528_fIdent)));
			}
			_iter_next_1b54e708a:;
			++it;
			goto _iter_begin_1b54e708a;
		}
		_iter_end_1b54e708a:;
	};
	_1ae090d6b_doneIndent(_self_);
	if ((!(_7337_writed))) {
		_1ae0906b7_write(_self_, jule::Str::lit("true", 4));
	};
	_1ae0906b7_write(_self_, jule::Str::lit(";\n", 2));
	_1ae090d6b_doneIndent(_self_);
	_1ae091069_indent(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1ae094a51_structureOperators(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _77040_s, jule::Bool _77055_decl) {
	_1b097ade7_StrBuilder _7717_sb = static__1b097b1e4_New(40LL);;
	static__1adecdabc_structureIns(&(_7717_sb), _77040_s);
	jule::Str _7733_ident = _1b09854d9_Str(&_7717_sb);;
	_1ae0946dd_structureOperatorEq(_self_, _7733_ident, _77040_s, _77055_decl);
}



inline void _1ae094d09_structureInsDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _77938_s) {
	{
		auto expr = &((*((*(_77938_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55013d5:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _78015_m = *it;
			{
				if (_1ae09cb03_isHeadDecl(&(_78015_m))) {
					_1ae09615c_funcDecl(_self_, &(_78015_m), false);
				};
			}
			_iter_next_1b55013d5:;
			++it;
			goto _iter_begin_1b55013d5;
		}
		_iter_end_1b55013d5:;
	};
	_1ae0906b7_write(_self_, jule::Str::lit("struct ", 7));
	static__1adecdabc_structureIns(&((*_self_.alloc)._field_Buf), _77938_s);
	_1ae0906b7_write(_self_, jule::Str::lit(" {\n", 3));
	_1ae090b6d_addIndent(_self_);
	{
		auto expr = &((*((*(_77938_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5502cdd:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c9938_FieldIns> _79115_f = *it;
			{
				_1ae091069_indent(_self_);
				_1ae094017_fieldDecl(_self_, &(_79115_f));
				_1ae0906b7_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1b5502cdd:;
			++it;
			goto _iter_begin_1b5502cdd;
		}
		_iter_end_1b5502cdd:;
	};
	_1ae091069_indent(_self_);
	_1ae0942c0_structureDestructor(_self_, _77938_s);
	_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
	_1ae090d6b_doneIndent(_self_);
	_1ae091069_indent(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("};", 2));
	;
	_1ae094a51_structureOperators(_self_, _77938_s, true);
}



inline void _1ae0950b2_structureDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4c767d_Struct>* _80935_s) {
	{
		auto expr = &((*((*(_80935_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b550697e:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ca4d8_StructIns> _81015_ins = *it;
			{
				_1ae094d09_structureInsDecl(_self_, &(_81015_ins));
			}
			_iter_next_1b550697e:;
			++it;
			goto _iter_begin_1b550697e;
		}
		_iter_end_1b550697e:;
	};
}



inline void _1ae0952b0_structureDecls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5507221:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _81615_s = *it;
			{
				if (((*(_81615_s))._field_Token != nullptr)) {
					_1ae0950b2_structureDecl(_self_, &(_81615_s));
					_1ae0906b7_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1b5507221:;
			++it;
			goto _iter_begin_1b5507221;
		}
		_iter_end_1b5507221:;
	};
}



inline void _1ae0954ad_structureMethodDecls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5508244:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _82515_s = *it;
			{
				if (((*(_82515_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_82515_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b550a367:;
						if (it != expr_end) {
							jule::Ptr<_1ac4ca4d8_StructIns> _82717_ins = *it;
							{
								{
									auto expr = &((*(_82717_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b550acb3:;
									if (it != expr_end) {
										jule::Ptr<_1ac4dbd46_Fn> _82818_m = *it;
										{
											if ((!(_1ae09cb03_isHeadDecl(&(_82818_m))))) {
												_1ae092730_pushResult(_self_, &(_82818_m));
												_1ae09615c_funcDecl(_self_, &(_82818_m), false);
											};
										}
										_iter_next_1b550acb3:;
										++it;
										goto _iter_begin_1b550acb3;
									}
									_iter_end_1b550acb3:;
								};
							}
							_iter_next_1b550a367:;
							++it;
							goto _iter_begin_1b550a367;
						}
						_iter_end_1b550a367:;
					};
				};
			}
			_iter_next_1b5508244:;
			++it;
			goto _iter_begin_1b5508244;
		}
		_iter_end_1b5508244:;
	};
}



inline void _1ae095986_funcHead(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, _1b097ade7_StrBuilder* _84330_buf, jule::Ptr<_1ac4dee04_FnIns>* _84352_f, jule::Bool _84363_ptr, jule::Str _84374_ident) {
	if ((((!(_84363_ptr)) && _1ad2b239b_Inline) && (!(_1ac4dc819_IsEntryPoint((*((*(_84352_f))))._field_Decl.ptr()))))) {
		_1b0984be2_WriteStr(_84330_buf, jule::Str::lit("inline ", 7));
	};
	_1ae0a4698_funcInsResult((*(_self_))._field_tc.ptr(), _84330_buf, _84352_f);
	if (_84363_ptr) {
		_1b0984be2_WriteStr(_84330_buf, jule::Str::lit("(*", 2));
		static__1adecce1d_funcIns(_84330_buf, _84352_f);
		_1b0984e9a_WriteByte(_84330_buf, ')');
	} else {
		_1b0984e9a_WriteByte(_84330_buf, ' ');
		if ((_84374_ident).empty()) {
			static__1adecce1d_funcIns(_84330_buf, _84352_f);
		} else {
			_1b0984be2_WriteStr(_84330_buf, _84374_ident);
		};
	};
}



inline void _1ae095ce9_funcDeclIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dee04_FnIns>* _86233_f, jule::Bool _86244_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_86233_f))))._field_CalledCo);
	_1ae091069_indent(_self_);
	_1ae095986_funcHead(_self_, &((*_self_.alloc)._field_Buf), _86233_f, _86244_ptr, jule::Str());
	_1ae097290_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _86233_f);
	_1ae0906b7_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1ae09615c_funcDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dbd46_Fn>* _87030_f, jule::Bool _87038_ptr) {
	{
		auto expr = &((*((*(_87030_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5512924:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dee04_FnIns> _87115_c = *it;
			{
				_1ae095ce9_funcDeclIns(_self_, &(_87115_c), _87038_ptr);
			}
			_iter_next_1b5512924:;
			++it;
			goto _iter_begin_1b5512924;
		}
		_iter_end_1b5512924:;
	};
}



inline void _1ae096415_funcDeclTrait(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dbd46_Fn>* _87635_f) {
	{
		auto expr = &((*((*(_87635_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5513859:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dee04_FnIns> _87715_c = *it;
			{
				jule::Ptr<_1ac63d2d8_TypeKind> _8788_k = (*((*(_87715_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_87715_c))._field_Params[0LL]))._field_Kind=_1ae08c8c3_generalGCPtr;
				_1ae095ce9_funcDeclIns(_self_, &(_87715_c), true);
				(*((*(_87715_c))._field_Params[0LL]))._field_Kind=_8788_k;
			}
			_iter_next_1b5513859:;
			++it;
			goto _iter_begin_1b5513859;
		}
		_iter_end_1b5513859:;
	};
}



inline void _1ae096613_funcDecls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ad292b1d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ac55ac0b_Package>*>((void*)__jule_anon_1b5516582, jule::Ptr<__jule_anon_1b5516582_ctx>::make(__jule_anon_1b5516582_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b5516582_ctx_handler));
}



inline void _1ae0968bb_traitDataTypeMethods(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5008a4_Trait>* _89842_t) {
	_1ad2939ba_IterTraitMethods(_89842_t, jule::__new_closure<void,jule::Ptr<_1ac4dbd46_Fn>*>((void*)__jule_anon_1b5517a7d, jule::Ptr<__jule_anon_1b5517a7d_ctx>::make(__jule_anon_1b5517a7d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b5517a7d_ctx_handler));
}



inline void _1ae096ab9_traitDataTypes(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ad292b1d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ac55ac0b_Package>*>((void*)__jule_anon_1b551d215, jule::Ptr<__jule_anon_1b551d215_ctx>::make(__jule_anon_1b551d215_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b551d215_ctx_handler));
}



inline void _1ae096e2c_paramIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, _1b097ade7_StrBuilder* _93430_buf, jule::Ptr<_1ac4ddc9e_ParamIns>* _93452_p) {
	_1ae0a3ec2_paramIns((*(_self_))._field_tc.ptr(), _93430_buf, _93452_p);
	_1b0984e9a_WriteByte(_93430_buf, ' ');
	static__1adecd4e5_param(_93430_buf, &((*((*(_93452_p))))._field_Decl));
}



inline void _1ae097290_paramsIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, _1b097ade7_StrBuilder* _94031_buf, jule::Ptr<_1ac4dee04_FnIns>* _94053_f) {
	if (((!((*((*(_94053_f))))._field_AsAnon)) && ((*((*(_94053_f))))._field_Params.len() == 0LL))) {
		_1b0984be2_WriteStr(_94031_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_1b0984e9a_WriteByte(_94031_buf, '(');
	if ((*((*(_94053_f))))._field_AsAnon) {
		_1b0984be2_WriteStr(_94031_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_94053_f))))._field_Params.len() > 0LL)) {
			_1b0984be2_WriteStr(_94031_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_94053_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5526509:;
		if (it != expr_end) {
			jule::I64 _9528_i = it - expr->begin();
			jule::Ptr<_1ac4ddc9e_ParamIns> _95215_p = *it;
			{
				_1ae096e2c_paramIns(_self_, _94031_buf, &(_95215_p));
				if ((((*((*(_94053_f))))._field_Params.len() - _9528_i) > 1LL)) {
					_1b0984be2_WriteStr(_94031_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b5526509:;
			++it;
			_9528_i++;
			goto _iter_begin_1b5526509;
		}
		_iter_end_1b5526509:;
	};
	_1b0984e9a_WriteByte(_94031_buf, ')');
}



inline void _1ae097603_varInitExpr(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5a2527_Var>* _96133_v, jule::Fn<void> _96142_init) {
	if ((*((*(_96133_v))))._field_Statically) {
		_1ae0906b7_write(_self_, jule::Str::lit("static ", 7));
	};
	_1ae0a51d2_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_96133_v))))._field_Kind))._field_Kind);
	_1ae0906b7_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_96133_v))))._field_Reference) {
		_1ae0906b7_write(_self_, jule::Str::lit("*", 1));
	};
	static__1adece194_var(&((*_self_.alloc)._field_Buf), (*(_96133_v)));
	if ((_96142_init != nullptr)) {
		_1ae0906b7_write(_self_, jule::Str::lit(" = ", 3));
		_96142_init();
	};
	_1ae0906b7_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ae0978ab_var(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5a2527_Var> _97924_v) {
	if (_1ac493baa_IsIgnoreIdent((*(_97924_v))._field_Ident)) {
		return;;
	};
	if ((((*_97924_v.alloc)._field_Value != nullptr) && ((*(*(_97924_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_97924_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_97924_v.alloc)._field_Reference) {
				_1ae097603_varInitExpr(_self_, &(_97924_v), jule::__new_closure<void>((void*)__jule_anon_1b552d8b8, jule::Ptr<__jule_anon_1b552d8b8_ctx>::make(__jule_anon_1b552d8b8_ctx{._self_=_self_,._97924_v=_97924_v}).as<jule::Uintptr>(), __jule_anon_1b552d8b8_ctx_handler));
			} else {
				_1ae097603_varInitExpr(_self_, &(_97924_v), jule::__new_closure<void>((void*)__jule_anon_1b55309a8, jule::Ptr<__jule_anon_1b55309a8_ctx>::make(__jule_anon_1b55309a8_ctx{._self_=_self_,._97924_v=_97924_v}).as<jule::Uintptr>(), __jule_anon_1b55309a8_ctx_handler));
			};
			return;;
		};
		_1ae097603_varInitExpr(_self_, &(_97924_v), nullptr);
		return;;
	};
	if ((*_97924_v.alloc)._field_Reference) {
		_1ae097603_varInitExpr(_self_, &(_97924_v), jule::__new_closure<void>((void*)__jule_anon_1b55331b4, jule::Ptr<__jule_anon_1b55331b4_ctx>::make(__jule_anon_1b55331b4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b55331b4_ctx_handler));
		return;;
	};
	if (_1ae0ac360_shouldInitialized(&((*((*_97924_v.alloc)._field_Kind))._field_Kind))) {
		_1ae097603_varInitExpr(_self_, &(_97924_v), jule::__new_closure<void>((void*)__jule_anon_1b553435d, jule::Ptr<__jule_anon_1b553435d_ctx>::make(__jule_anon_1b553435d_ctx{._self_=_self_,._97924_v=_97924_v}).as<jule::Uintptr>(), __jule_anon_1b553435d_ctx_handler));
		return;;
	};
	_1ae097603_varInitExpr(_self_, &(_97924_v), nullptr);
}



inline void _1ae097c1e_anonFuncInsDecl(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel>* _101037_m, jule::Str _101058_ident) {
	_1ae095986_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_101037_m))))._field_Func), false, _101058_ident);
	_1ae097290_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_101037_m))))._field_Func));
	_1b0984e9a_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1ae098082_anonFuncIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4d2611_AnonFnExprModel>* _101633_m, jule::Str _101654_ident) {
	_1ae095986_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_101633_m))))._field_Func), false, _101654_ident);
	_1ae097290_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_101633_m))))._field_Func));
	_1ae0906b7_write(_self_, jule::Str::lit(" ", 1));
	_1adeb27d7_anonFuncScope((*_self_.alloc)._field_sc, (*(_101633_m)), _101654_ident);
	if (((*((*((*(_101633_m))))._field_Func))._field_Scope != nullptr)) {
		_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ae0983e5_funcIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dee04_FnIns> _102628_f, jule::Str _102639_ident) {
	_1ae095986_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_102628_f), false, _102639_ident);
	_1ae097290_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_102628_f));
	_1ae0906b7_write(_self_, jule::Str::lit(" ", 1));
	_1adeb2a90_funcScope((*_self_.alloc)._field_sc, _102628_f);
	if (((*(_102628_f))._field_Scope != nullptr)) {
		_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ae09869d_func(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dbd46_Fn>* _103626_f) {
	{
		auto expr = &((*((*(_103626_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b553cb91:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dee04_FnIns> _103715_ins = *it;
			{
				_1ae0983e5_funcIns(_self_, _103715_ins, jule::Str());
			}
			_iter_next_1b553cb91:;
			++it;
			goto _iter_begin_1b553cb91;
		}
		_iter_end_1b553cb91:;
	};
}



inline void _1ae098a11_funcTrait(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _104227_s, jule::Ptr<_1ac4dee04_FnIns>* _104247_f) {
	(*((*(_104247_f))))._field_Scope=nullptr;
	_1b097ade7_StrBuilder _10457_nident = static__1b097b1e4_New(30LL);;
	_1b0984be2_WriteStr(&_10457_nident, jule::Str::lit("__jule_trait_method_", 20));
	_1b0984be2_WriteStr(&_10457_nident, _1aa11ab75_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_104247_f)))), 15LL));
	_1b0984be2_WriteStr(&_10457_nident, jule::Str::lit("_", 1));
	_1b0984be2_WriteStr(&_10457_nident, _1aa11ab75_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_104227_s)))), 15LL));
	jule::Ptr<_1ac63d2d8_TypeKind> _10517_k = (*((*((*(_104247_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_104247_f))))._field_Params[0LL]))._field_Kind=_1ae08c8c3_generalGCPtr;
	_1ae0983e5_funcIns(_self_, (*(_104247_f)), _1b09854d9_Str(&_10457_nident));
	(*((*((*(_104247_f))))._field_Params[0LL]))._field_Kind=_10517_k;
}



inline __jule_tuple_x_1ac4dee04_FnIns__jule_tuple_bool _1ae098d52_findTraitMetMap(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4dbd46_Fn>* _105737_m) {
	__jule_tuple_x_1ac4dee04_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac4dee04_FnIns> _10587_mins = (*((*(_105737_m))))._field_Instances[0LL];;
	{
		_1b4d6dcb9_mapIterator it = _1b4d65d38_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1b554346b:;
		__jule_tuple_px_1ac4dee04_FnIns__jule_tuple_psuintptr __iterator_result = _1b4d6e4a1_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1ac4dee04_FnIns> _105912_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_105912_f))._field_Decl))._field_Public == (*((*(_105737_m))))._field_Public) && ((*(*(_105912_f))._field_Decl.alloc)._field_Ident == (*((*(_105737_m))))._field_Ident)) && _1ac4e0a5e_EqualFn(_105912_f, &(_10587_mins)))) {
					__jule_func_result.__jule_result_arg0 = _105912_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b554346b:;
			goto _iter_begin_1b554346b;
		}
		_iter_end_1b554346b:;
	};
	__jule_func_result.__jule_result_arg0 = _10587_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1ae0991b5_traitWrapper(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5008a4_Trait>* _106934_t, jule::Ptr<_1ac4dbd46_Fn>* _106950_m) {
	_julec_label_1b5545b99:;
	{
		auto expr = &((*((*(_106934_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5545d53:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _107115_imp = *it;
			{
				jule::Ptr<_1ac4dee04_FnIns> _10728_mepf;
				jule::Bool _107214_exist;
				({
					__jule_tuple_x_1ac4dee04_FnIns__jule_tuple_bool __jule_assign_result = _1ae098d52_findTraitMetMap(_self_, _106950_m);
					_10728_mepf = __jule_assign_result.__jule_result_arg0;
					_107214_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_107214_exist) {
					jule::Slice<jule::Uintptr> _10759_vals = _1b4d6551e_get((*_self_.alloc)._field_traitMetMap, _10728_mepf);;
					{
						auto expr = &(_10759_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b5547d33:;
						if (it != expr_end) {
							jule::Uintptr _107612_val = *it;
							{
								if ((_107612_val == static_cast<jule::Uintptr>(_107115_imp))) {
									goto _iter_next_1b5545d53;
								};
							}
							_iter_next_1b5547d33:;
							++it;
							goto _iter_begin_1b5547d33;
						}
						_iter_end_1b5547d33:;
					};
					(*_1b4d65673_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10728_mepf))=jule::append(_10759_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_107115_imp); __jule_collection; }));
				} else {
					(*_1b4d65673_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10728_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_107115_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_107115_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b5548a6a:;
					if (it != expr_end) {
						jule::Ptr<_1ac4ca4d8_StructIns> _108616_ins = *it;
						{
							_1ae098a11_funcTrait(_self_, &(_108616_ins), &(_10728_mepf));
							;
							jule::Ptr<_1ac4dbd46_Fn> _10909_sm = _1ac4cb583_FindMethod(_108616_ins.ptr(), (*((*(_106950_m))))._field_Ident, false);;
							if (((_10909_sm == nullptr) || ((*(_10909_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1ae090b6d_addIndent(_self_);
							_1ae0906b7_write(_self_, jule::Str::lit("{\n", 2));
							_1ae091069_indent(_self_);
							if (((*((*(_106950_m))))._field_Exceptional || (!(_1ac4dc2ec_IsVoid((*(_106950_m)).ptr()))))) {
								_1ae0906b7_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1adeccb32_func(&((*_self_.alloc)._field_Buf), &(_10909_sm));
							_1ae0906b7_write(_self_, jule::Str::lit("(", 1));
							_1ae0906b7_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1ae0a3488_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _108616_ins);
							_1ae0906b7_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _11075_ptr = (!(_1ac4dac57_IsRef((*((*(_106950_m))))._field_Params[0LL].ptr())));;
							if (_11075_ptr) {
								_1ae0906b7_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_106950_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1b5550a83:;
								if (it != expr_end) {
									jule::Ptr<_1ac4da372_Param> _111112_mp = *it;
									{
										_1ae0906b7_write(_self_, jule::Str::lit(", ", 2));
										static__1adecd4e5_param(&((*_self_.alloc)._field_Buf), &(_111112_mp));
									}
									_iter_next_1b5550a83:;
									++it;
									goto _iter_begin_1b5550a83;
								}
								_iter_end_1b5550a83:;
							};
							_1ae0906b7_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1ae090d6b_doneIndent(_self_);
						}
						_iter_next_1b5548a6a:;
						++it;
						goto _iter_begin_1b5548a6a;
					}
					_iter_end_1b5548a6a:;
				};
			}
			_iter_next_1b5545d53:;
			++it;
			goto _iter_begin_1b5545d53;
		}
		_iter_end_1b5545d53:;
	};
}



inline void _1ae0993b3_traitWrappers(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ad292b1d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ac55ac0b_Package>*>((void*)__jule_anon_1b5552656, jule::Ptr<__jule_anon_1b5552656_ctx>::make(__jule_anon_1b5552656_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b5552656_ctx_handler));
}



inline void _1ae099726_traitDataMethods(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5008a4_Trait>* _113638_t, jule::Ptr<_1ac4ca4d8_StructIns> _113649_s) {
	_1ad2939ba_IterTraitMethods(_113638_t, jule::__new_closure<void,jule::Ptr<_1ac4dbd46_Fn>*>((void*)__jule_anon_1b55539cb, jule::Ptr<__jule_anon_1b55539cb_ctx>::make(__jule_anon_1b55539cb_ctx{._self_=_self_,._113649_s=_113649_s}).as<jule::Uintptr>(), __jule_anon_1b55539cb_ctx_handler));
}



inline void _1ae099b44_traitData(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac5008a4_Trait>* _115331_t, jule::I64 _115342_i, jule::Ptr<_1ac4ca4d8_StructIns>* _115355_s) {
	_1b097ade7_StrBuilder _11547_ident = static__1b097b1e4_New((*((*(_115331_t))))._field_Ident.len());;
	static__1adecd209_traitDecl(&(_11547_ident), (*(_115331_t)));
	_1ae0906b7_write(_self_, jule::Str::lit("static ", 7));
	_1ae090970_writeBytes(_self_, _1b0985e8a_Buf(&_11547_ident));
	_1ae0906b7_write(_self_, jule::Str::lit("MptrData ", 9));
	_1ae090970_writeBytes(_self_, _1b0985e8a_Buf(&_11547_ident));
	_1ae0906b7_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1ae0906b7_write(_self_, _1aa11b307_Itoa(_115342_i));
	_1ae0906b7_write(_self_, jule::Str::lit(" {\n", 3));
	_1ae090b6d_addIndent(_self_);
	_1ae091069_indent(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1ae0906b7_write(_self_, _1aa11b307_Itoa(_1ae091a3c_pushDealloc(_self_, jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_115355_s)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)}))));
	_1ae0906b7_write(_self_, jule::Str::lit(",\n", 2));
	_1ae099726_traitDataMethods(_self_, _115331_t, (*(_115355_s)));
	_1ae090d6b_doneIndent(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1ae099d42_traitDatas(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ad292b1d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ac55ac0b_Package>*>((void*)__jule_anon_1b5561489, jule::Ptr<__jule_anon_1b5561489_ctx>::make(__jule_anon_1b5561489_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b5561489_ctx_handler));
}



inline void _1ae09a040_globalDecls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5560d29:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _119015_v = *it;
			{
				_1ae0a51d2_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_119015_v))._field_Kind))._field_Kind);
				_1ae0906b7_write(_self_, jule::Str::lit(" ", 1));
				static__1adece194_var(&((*_self_.alloc)._field_Buf), _119015_v);
				_1ae0906b7_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b5560d29:;
			++it;
			goto _iter_begin_1b5560d29;
		}
		_iter_end_1b5560d29:;
	};
}



inline void _1ae09a23d_decls(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ae093c5e_structurePlainDecls(_self_);
	_1ae0952b0_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1b098596d_Len(&(*_self_.alloc)._field_Buf);
	_1ae0954ad_structureMethodDecls(_self_);
	_1ae096613_funcDecls(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
	_1ae096ab9_traitDataTypes(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1b098596d_Len(&(*_self_.alloc)._field_Buf);
	_1ae0993b3_traitWrappers(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
	_1ae099d42_traitDatas(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1b098596d_Len(&(*_self_.alloc)._field_Buf);
	_1ae09a040_globalDecls(_self_);
}



inline void _1ae09a4e6_structureMethods(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _121638_s) {
	{
		auto expr = &((*((*(_121638_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b556b274:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _121715_f = *it;
			{
				_1ae09869d_func(_self_, &(_121715_f));
				_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1b556b274:;
			++it;
			goto _iter_begin_1b556b274;
		}
		_iter_end_1b556b274:;
	};
}



inline void _1ae09a79e_structureIns(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4ca4d8_StructIns>* _122334_s) {
	;
	_1ae094a51_structureOperators(_self_, _122334_s, false);
	_1ae09a4e6_structureMethods(_self_, _122334_s);
}



inline void _1ae09aa57_structure(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac4c767d_Struct>* _122931_s) {
	{
		auto expr = &((*((*(_122931_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b556d74e:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ca4d8_StructIns> _123015_ins = *it;
			{
				_1ae09a79e_structureIns(_self_, &(_123015_ins));
				_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1b556d74e:;
			++it;
			goto _iter_begin_1b556d74e;
		}
		_iter_end_1b556d74e:;
	};
}



inline void _1ae09ac55_structures(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b556de8b:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _123715_s = *it;
			{
				if (((*(_123715_s))._field_Token != nullptr)) {
					_1ae09aa57_structure(_self_, &(_123715_s));
					_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1b556de8b:;
			++it;
			goto _iter_begin_1b556de8b;
		}
		_iter_end_1b556de8b:;
	};
}



inline void _1ae09ae53_funcs(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ad292b1d_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ac55ac0b_Package>*>((void*)__jule_anon_1b5571ab5, jule::Ptr<__jule_anon_1b5571ab5_ctx>::make(__jule_anon_1b5571ab5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b5571ab5_ctx_handler));
}



inline void _1ae09b20b_pushInit(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, jule::Ptr<_1ac55ac0b_Package>* _126830_pkg) {
	_1ad292e4d_IterFiles(_126830_pkg, jule::__new_closure<void,jule::Ptr<_1ac604d93_SymbolTable>*>((void*)__jule_anon_1b557308e, jule::Ptr<__jule_anon_1b557308e_ctx>::make(__jule_anon_1b557308e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b557308e_ctx_handler));
}



inline void _1ae09b409_anonHashes(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_julec_label_1b55778ce:;
	jule::Slice<jule::Ptr<_1ae08d495_anonHash>> _12857_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12857_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b557945d:;
		if (it != expr_end) {
			jule::Ptr<_1ae08d495_anonHash> _128715_h = *it;
			{
				_1ae098082_anonFuncIns(_self_, &((*(_128715_h))._field_expr), (*_128715_h.alloc)._field_ident);
			}
			_iter_next_1b557945d:;
			++it;
			goto _iter_begin_1b557945d;
		}
		_iter_end_1b557945d:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1b55778ce;
	};
}



inline void _1ae09b607_initGlobals(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b557a97b:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _129615_v = *it;
			{
				_1b0984e9a_WriteByte(&(*(_self_))._field_Buf, 9LLU);
				static__1adece194_var(&((*_self_.alloc)._field_Buf), _129615_v);
				_1ae0906b7_write(_self_, jule::Str::lit(" = ", 3));
				_1adec49e7_model((*_self_.alloc)._field_ec, (*((*((*(_129615_v))._field_Value))._field_Data))._field_Model);
				_1ae0906b7_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b557a97b:;
			++it;
			goto _iter_begin_1b557a97b;
		}
		_iter_end_1b557a97b:;
	};
}



inline void _1ae09b805_initCaller(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ae0906b7_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1ae090b6d_addIndent(_self_);
	_1ad292b1d_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1ac55ac0b_Package>*>((void*)__jule_anon_1b557e430, jule::Ptr<__jule_anon_1b557e430_ctx>::make(__jule_anon_1b557e430_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b557e430_ctx_handler));
	_1ae090d6b_doneIndent(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1ae09ba03_end(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ae0906b7_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
	_1ae09b607_initGlobals(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_1b03a0d6c_Test) {
		_1ae0906b7_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1ae0906b7_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1ae0906b7_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1ae09bd66_insertBuf(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_, _1b097ade7_StrBuilder* _133931_buf, jule::I64 _133948_pos) {
	if ((_1b098596d_Len(_133931_buf) > 0LL)) {
		jule::Slice<jule::U8> _13418_head = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_1b098596d_Len(&(*(_self_))._field_Buf) + _1b098596d_Len(_133931_buf))); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
		(_13418_head).append(_1b0985e8a_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _133948_pos));;
		(_13418_head).append(_1b0985e8a_Buf(_133931_buf));;
		(_13418_head).append(_1b0985e8a_Buf(&(*_self_.alloc)._field_Buf).slice(_133948_pos));;
		{
			_1b0986243_SetBuf(&(*_self_.alloc)._field_Buf, _13418_head);
		};
	};
}



inline void _1ae09c064_implementRC(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1ae0983e5_funcIns(_self_, (*(_1ac8cc38a_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAddAtomic", 12)))))._field_Instances[0LL], jule::Str::lit("__jule_RCAdd", 12));
		_1ae0983e5_funcIns(_self_, (*(_1ac8cc38a_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoadAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCLoad", 13));
		_1ae0983e5_funcIns(_self_, (*(_1ac8cc38a_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDropAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1ae0983e5_funcIns(_self_, (*(_1ac8cc38a_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAdd", 6)))))._field_Instances[0LL], jule::Str());
		_1ae0983e5_funcIns(_self_, (*(_1ac8cc38a_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoad", 7)))))._field_Instances[0LL], jule::Str());
		_1ae0983e5_funcIns(_self_, (*(_1ac8cc38a_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDrop", 7)))))._field_Instances[0LL], jule::Str());
	};
}



inline void _1ae09c262_serializeHead(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ae0937a8_prepareStructures(_self_);
	_1ae093049_head(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("\n", 1));
	_1ae09a23d_decls(_self_);
	_1ae09bd66_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1b098596d_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1b098596d_Len(&(*_self_.alloc)._field_resultDecls);
	_1ae0906b7_write(_self_, jule::Str::lit("\n", 1));
	_1ae09ac55_structures(_self_);
	_1ae09ae53_funcs(_self_);
	_1ae09b805_initCaller(_self_);
	_1ae0906b7_write(_self_, jule::Str::lit("\n\n", 2));
	_1ae09b409_anonHashes(_self_);
	_1ae09c064_implementRC(_self_);
	_1ae09bd66_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1b098596d_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1b098596d_Len(&(*_self_.alloc)._field_deallocObj);
	_1ae09bd66_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1b098596d_Len(&(*_self_.alloc)._field_anyObj);
	_1ae09bd66_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1b098596d_Len(&(*_self_.alloc)._field_anonObj);
	_1ae09bd66_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1b098596d_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1ae09c460_Serialize(jule::Ptr<_1ae08ee9c_ObjectCoder> _self_) {
	_1ae09c262_serializeHead(_self_);
	_1ae09ba03_end(_self_);
}








inline jule::Bool _1ae09e396_customType_eq(_1ae09e396_customType *_self_, _1ae09e396_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1ae09e792_Str(_1ae09e396_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1ae09ead3_Equal(jule::Ptr<_1ae09e396_customType> _self_, jule::Ptr<_1ac63d2d8_TypeKind> _4418_k) {
	return false;;
}








inline jule::Bool _1ae09eece_typeCoder_eq(_1ae09eece_typeCoder *_self_, _1ae09eece_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1ae09eece_typeCoder> static__1ae0a052e_new(jule::Ptr<_1ae08ee9c_ObjectCoder>* _6921_oc) {
	jule::Ptr<_1ae09eece_typeCoder> _707_tc = jule::new_ptr<_1ae09eece_typeCoder>(_1ae09eece_typeCoder{._field_oc=(*(_6921_oc)), ._field_rc=jule::Ptr<_1ae0a7ab9_resultCoder>(nullptr)});;
	(*(_707_tc))._field_rc=static__1ae0a80c5_new(&(_707_tc));
	return _707_tc;;
}



inline void _1ae0a0892_toType(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _7627_buf, jule::Str _7648_id) {
	if ((_7648_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_7648_id=_1aa11d46e_RealKindOf(_7648_id);
	};
	_1b0984be2_WriteStr(_7627_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7648_id[0LL]) && (_7648_id[0LL] <= 122LLU))) {
		_1b0984e9a_WriteByte(_7627_buf, (jule::U8)(_7648_id[0LL] - 32LLU));
	} else {
		_1b0984e9a_WriteByte(_7627_buf, _7648_id[0LL]);
	};
	_1b0984be2_WriteStr(_7627_buf, _7648_id.slice(1LL));
}



inline void _1ae0a0c05_prim(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _9025_buf, jule::Ptr<_1ac646401_Prim> _9042_p) {
	_1ae0a0892_toType(_self_, _9025_buf, (*(_9042_p))._field_Kind);
}



inline void _1ae0a1068_tuple(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _9526_buf, jule::Ptr<_1ac64b4e4_Tuple> _9547_t) {
	_1b0984be2_WriteStr(_9526_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9547_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55a0eac:;
		if (it != expr_end) {
			jule::I64 _978_i = it - expr->begin();
			jule::Ptr<_1ac63d2d8_TypeKind> _9715_tk = *it;
			{
				_1ae0a51d2_kind(_self_, _9526_buf, _9715_tk);
				if ((((*(_9547_t))._field_Types.len() - _978_i) > 1LL)) {
					_1b0984e9a_WriteByte(_9526_buf, ',');
				};
			}
			_iter_next_1b55a0eac:;
			++it;
			_978_i++;
			goto _iter_begin_1b55a0eac;
		}
		_iter_end_1b55a0eac:;
	};
	_1b0984e9a_WriteByte(_9526_buf, '>');
}



inline void _1ae0a13cb_asSptr(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem) {
	_1b0984be2_WriteStr(_10727_buf, jule::Str::lit("jule::Ptr<", 10));
	_1b0984939_Write(_10727_buf, _10744_elem);
	_1b0984e9a_WriteByte(_10727_buf, '>');
}



inline void _1ae0a173e_sptr(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _11425_buf, jule::Ptr<_1ac649e2c_Sptr> _11446_sptr) {
	_1b0984be2_WriteStr(_11425_buf, jule::Str::lit("jule::Ptr<", 10));
	_1ae0a51d2_kind(_self_, _11425_buf, (*(_11446_sptr))._field_Elem);
	_1b0984e9a_WriteByte(_11425_buf, '>');
}



inline void _1ae0a1aa2_ptr(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _12124_buf, jule::Ptr<_1ac64d6e4_Ptr> _12145_p) {
	;
	if (_1ac64e261_IsUnsafe(_12145_p.ptr())) {
		_1b0984be2_WriteStr(_12124_buf, jule::Str::lit("void*", 5));
	} else {
		_1ae0a51d2_kind(_self_, _12124_buf, (*(_12145_p))._field_Elem);
		_1b0984be2_WriteStr(_12124_buf, jule::Str::lit("*", 1));
	};
}



inline void _1ae0a1e15_enumDecl(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _13229_buf, jule::Ptr<_1ac5030b0_Enum> _13250_e) {
	_1ae0a51d2_kind(_self_, _13229_buf, (*((*(_13250_e))._field_Kind))._field_Kind);
}



inline void _1ae0a2278_typeEnumDecl(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _13733_buf, jule::Ptr<_1ac5047ba_TypeEnum> _13754_e) {
	_1b0984be2_WriteStr(_13733_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1ae0a25db_asSlice(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _14128_buf, jule::Ptr<_1ac63d2d8_TypeKind> _14149_elem) {
	_1b0984be2_WriteStr(_14128_buf, jule::Str::lit("jule::Slice<", 12));
	_1ae0a51d2_kind(_self_, _14128_buf, _14149_elem);
	_1b0984e9a_WriteByte(_14128_buf, '>');
}



inline void _1ae0a294e_slice(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _14826_buf, jule::Ptr<_1ac64a900_Slc> _14847_s) {
	_1ae0a25db_asSlice(_self_, _14826_buf, (*(_14847_s))._field_Elem);
}



inline void _1ae0a2cb2_mapType(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _15328_buf, jule::Ptr<_1ac64c094_Map> _15349_m) {
	jule::Ptr<_1ac4c767d_Struct> _1547_s = _1ac8cc984_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1ac4ca4d8_StructIns> _1557_ins = _1ad29a0a9_FindStructGenericInstance(&(_1547_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_15349_m))._field_Key; (*it++) = (*_15349_m.alloc)._field_Val; __jule_collection; }));;
	_1b0984be2_WriteStr(_15328_buf, jule::Str::lit("jule::Ptr<", 10));
	static__1adecdabc_structureIns(_15328_buf, &(_1557_ins));
	_1b0984be2_WriteStr(_15328_buf, jule::Str::lit(">", 1));
}



inline void _1ae0a3488_structureIns(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _16733_buf, jule::Ptr<_1ac4ca4d8_StructIns> _16754_s) {
	if ((!((*((*(_16754_s))._field_Decl))._field_Binded))) {
		static__1adecdabc_structureIns(_16733_buf, &(_16754_s));
		return;;
	};
	jule::Ptr<_1ac4a5b9a_Directive> _1723_d = _1ad2980eb_FindDirective(&((*(*(_16754_s))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1723_d != nullptr)) {
		_1b0984939_Write(_16733_buf, _1ae09c7e5_concatAllParts((*_1723_d.alloc)._field_Args));
		_1b0984be2_WriteStr(_16733_buf, jule::Str::lit("::", 2));
	};
	static__1adecdabc_structureIns(_16733_buf, &(_16754_s));
	if (((*_16754_s.alloc)._field_Generics.len() > 0LL)) {
		_1b0984e9a_WriteByte(_16733_buf, '<');
		{
			auto expr = &((*_16754_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b55b46a7:;
			if (it != expr_end) {
				jule::I64 _1809_i = it - expr->begin();
				jule::Ptr<_1ac63b902_InsGeneric> _18016_g = *it;
				{
					_1ae0a51d2_kind(_self_, _16733_buf, (*(_18016_g))._field_Kind);
					if ((((*_16754_s.alloc)._field_Generics.len() - _1809_i) > 1LL)) {
						_1b0984e9a_WriteByte(_16733_buf, ',');
					};
				}
				_iter_next_1b55b46a7:;
				++it;
				_1809_i++;
				goto _iter_begin_1b55b46a7;
			}
			_iter_end_1b55b46a7:;
		};
		_1b0984e9a_WriteByte(_16733_buf, '>');
	};
}



inline void _1ae0a37eb_array(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _19126_buf, jule::Ptr<_1ac64cc21_Arr> _19147_a) {
	_1b0984be2_WriteStr(_19126_buf, jule::Str::lit("jule::Array<", 12));
	_1ae0a51d2_kind(_self_, _19126_buf, (*(_19147_a))._field_Elem);
	_1b0984e9a_WriteByte(_19126_buf, ',');
	_1b0984be2_WriteStr(_19126_buf, _1aa11b307_Itoa((*_19147_a.alloc)._field_N));
	_1b0984e9a_WriteByte(_19126_buf, '>');
}



inline void _1ae0a3ec2_paramIns(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _21429_buf, jule::Ptr<_1ac4ddc9e_ParamIns>* _21451_p) {
	if ((*((*((*(_21451_p))))._field_Decl))._field_Variadic) {
		_1b0984be2_WriteStr(_21429_buf, jule::Str::lit("jule::Slice<", 12));
		_1ae0a51d2_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
		_1b0984e9a_WriteByte(_21429_buf, '>');
	} else {
		_1ae0a51d2_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
	};
	if ((*((*((*(_21451_p))))._field_Decl))._field_Reference) {
		_1b0984e9a_WriteByte(_21429_buf, '*');
	};
}



inline void _1ae0a4698_funcInsResult(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _24634_s, jule::Ptr<_1ac4dee04_FnIns>* _24654_f) {
	if (_1ac4dc2ec_IsVoid((*((*(_24654_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
			_1b0984be2_WriteStr(_24634_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1b0984be2_WriteStr(_24634_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
		_1b0984be2_WriteStr(_24634_s, jule::Str::lit("jule::Exceptional<", 18));
		_1ae0aa182_codeMut1((*(_self_))._field_rc.ptr(), _24634_s, &((*((*(_24654_f))))._field_Result));
		_1b0984e9a_WriteByte(_24634_s, '>');
		return;;
	};
	_1ae0aa182_codeMut1((*(_self_))._field_rc, _24634_s, &((*((*(_24654_f))))._field_Result));
}



inline void _1ae0a4a0b_anonFunc(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _26429_buf, jule::Ptr<_1ac4dee04_FnIns> _26450_f) {
	if ((((*(_26450_f))._field_Result != nullptr) && (_1ac6427b5_Tup((*(_26450_f))._field_Result) != nullptr))) {
		_1ae092477_pushResultIns((*(_self_))._field_oc, &(_26450_f));
	};
	_1ae0a4698_funcInsResult(_self_, _26429_buf, &(_26450_f));
	if (((*_26450_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_1b0984e9a_WriteByte(_26429_buf, ',');
	{
		auto expr = &((*_26450_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55c5ee3:;
		if (it != expr_end) {
			jule::I64 _2738_i = it - expr->begin();
			jule::Ptr<_1ac4ddc9e_ParamIns> _27315_param = *it;
			{
				if (_1ac4da9c1_IsSelf((*(_27315_param))._field_Decl.ptr())) {
					goto _iter_next_1b55c5ee3;
				};
				_1ae0a3ec2_paramIns(_self_, _26429_buf, &(_27315_param));
				if ((((*_26450_f.alloc)._field_Params.len() - _2738_i) > 1LL)) {
					_1b0984e9a_WriteByte(_26429_buf, ',');
				};
			}
			_iter_next_1b55c5ee3:;
			++it;
			_2738_i++;
			goto _iter_begin_1b55c5ee3;
		}
		_iter_end_1b55c5ee3:;
	};
}



inline void _1ae0a4d6e_func(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _28525_buf, jule::Ptr<_1ac4dee04_FnIns> _28546_f) {
	_1b0984be2_WriteStr(_28525_buf, jule::Str::lit("jule::Fn<", 9));
	_1ae0a4a0b_anonFunc(_self_, _28525_buf, _28546_f);
	_1b0984e9a_WriteByte(_28525_buf, '>');
}



inline void _1ae0a51d2_kind(_1ae09eece_typeCoder* _self_, _1b097ade7_StrBuilder* _29225_buf, jule::Ptr<_1ac63d2d8_TypeKind> _29246_k) {
	{
		
		if ((_1ac642012_Struct(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9535:;
			{
				_1ae0a3488_structureIns(_self_, _29225_buf, _1ac642012_Struct(_29246_k));
				return;;
			}
		}
		else if (_1ac63e185_Binded(_29246_k.ptr())) {
			_case_begin_1b55c95ce:;
			{
				_1b0984be2_WriteStr(_29225_buf, (*_29246_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1ac64098e_Prim(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9645:;
			{
				_1ae0a0c05_prim(_self_, _29225_buf, _1ac64098e_Prim(_29246_k));
				return;;
			}
		}
		else if ((_1ac6427b5_Tup(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c96ab:;
			{
				_1ae0a1068_tuple(_self_, _29225_buf, _1ac6427b5_Tup(_29246_k));
				return;;
			}
		}
		else if ((_1ac640c25_Sptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9722:;
			{
				_1ae0a173e_sptr(_self_, _29225_buf, _1ac640c25_Sptr(_29246_k));
				return;;
			}
		}
		else if ((_1ac640eab_Ptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9799:;
			{
				_1ae0a1aa2_ptr(_self_, _29225_buf, _1ac640eab_Ptr(_29246_k));
				return;;
			}
		}
		else if ((_1ac641242_Enum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9821:;
			{
				_1ae0a1e15_enumDecl(_self_, _29225_buf, _1ac641242_Enum(_29246_k));
				return;;
			}
		}
		else if ((_1ac6414c8_TypeEnum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9898:;
			{
				_1ae0a2278_typeEnumDecl(_self_, _29225_buf, _1ac6414c8_TypeEnum(_29246_k));
				return;;
			}
		}
		else if ((_1ac6419e5_Slc(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9920:;
			{
				_1ae0a294e_slice(_self_, _29225_buf, _1ac6419e5_Slc(_29246_k));
				return;;
			}
		}
		else if ((_1ac64252e_Map(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9997:;
			{
				_1ae0a2cb2_mapType(_self_, _29225_buf, _1ac64252e_Map(_29246_k));
				return;;
			}
		}
		else if ((_1ac642298_Trait(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9a1e:;
			{
				_1b0984be2_WriteStr(_29225_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1ac64175e_Arr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9a96:;
			{
				_1ae0a37eb_array(_self_, _29225_buf, _1ac64175e_Arr(_29246_k));
				return;;
			}
		}
		else if ((_1ac641c7b_Fn(_29246_k.ptr()) != nullptr)) {
			_case_begin_1b55c9b1d:;
			{
				_1ae0a4d6e_func(_self_, _29225_buf, _1ac641c7b_Fn(_29246_k));
				return;;
			}
		}
		_match_end_1b55c9348:;
	};
	{
		auto &_match_expr{ (*(_29246_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data29)) {
			_case_begin_1b55c9ba6:;
			{
				_1b0984be2_WriteStr(_29225_buf, (*((*(_29246_k))._field_Kind.cast_ptr<_1ae09e396_customType>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data29)))._field_kind);
			}
		}
		else {
			_case_begin_1b55d3396:;
			{
				_1b0984be2_WriteStr(_29225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1b55d3330:;
	};
}








inline jule::Bool _1ae0a7ab9_resultCoder_eq(_1ae0a7ab9_resultCoder *_self_, _1ae0a7ab9_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1ae0a7ab9_resultCoder> static__1ae0a80c5_new(jule::Ptr<_1ae09eece_typeCoder>* _36021_tc) {
	return jule::new_ptr<_1ae0a7ab9_resultCoder>(_1ae0a7ab9_resultCoder{._field_tc=(*(_36021_tc))});;
}



inline void _1ae0a8438_ptr(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _36424_s, jule::Ptr<_1ac64d6e4_Ptr> _36443_p) {
	_1b0984be2_WriteStr(_36424_s, jule::Str::lit("p", 1));
	_1ae0a9d1e_codeMut(_self_, _36424_s, &((*(_36443_p))._field_Elem));
}



inline void _1ae0a879b_sptr(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _36925_s, jule::Ptr<_1ac649e2c_Sptr> _36944_p) {
	_1b0984be2_WriteStr(_36925_s, jule::Str::lit("x", 1));
	_1ae0a9d1e_codeMut(_self_, _36925_s, &((*(_36944_p))._field_Elem));
}



inline void _1ae0a8b0e_mapType(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _37428_s, jule::Ptr<_1ac64c094_Map> _37447_p) {
	_1b0984be2_WriteStr(_37428_s, jule::Str::lit("m", 1));
	_1ae0a9d1e_codeMut(_self_, _37428_s, &((*(_37447_p))._field_Key));
	_1ae0a9d1e_codeMut(_self_, _37428_s, &((*_37447_p.alloc)._field_Val));
}



inline void _1ae0a8e72_slice(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _38026_s, jule::Ptr<_1ac64a900_Slc> _38045_slc) {
	_1b0984be2_WriteStr(_38026_s, jule::Str::lit("s", 1));
	_1ae0a9d1e_codeMut(_self_, _38026_s, &((*(_38045_slc))._field_Elem));
}



inline void _1ae0a92d5_arr(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _38524_s, jule::Ptr<_1ac64cc21_Arr> _38543_arr) {
	_1b0984be2_WriteStr(_38524_s, jule::Str::lit("a", 1));
	_1b0984be2_WriteStr(_38524_s, _1aa11b03d_FmtInt(static_cast<jule::I64>((*(_38543_arr))._field_N), 16LL));
	_1ae0a9d1e_codeMut(_self_, _38524_s, &((*_38543_arr.alloc)._field_Elem));
}



inline void _1ae0a9648_func(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _39125_s, jule::Ptr<_1ac4dee04_FnIns> _39144_f) {
	_1b0984be2_WriteStr(_39125_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_39144_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55da854:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ddc9e_ParamIns> _39315_p = *it;
			{
				if ((*((*(_39315_p))._field_Decl))._field_Reference) {
					_1b0984be2_WriteStr(_39125_s, jule::Str::lit("r", 1));
				};
				_1ae0a9d1e_codeMut(_self_, _39125_s, &((*_39315_p.alloc)._field_Kind));
			}
			_iter_next_1b55da854:;
			++it;
			goto _iter_begin_1b55da854;
		}
		_iter_end_1b55da854:;
	};
	if (((*_39144_f.alloc)._field_Result != nullptr)) {
		_1ae0a9d1e_codeMut(_self_, _39125_s, &((*_39144_f.alloc)._field_Result));
	};
}



inline void _1ae0a99ab_tup(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _40424_s, jule::Ptr<_1ac64b4e4_Tuple> _40443_tup) {
	{
		auto expr = &((*(_40443_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55dced8:;
		if (it != expr_end) {
			jule::Ptr<_1ac63d2d8_TypeKind> _40515_t = *it;
			{
				_1b0984be2_WriteStr(_40424_s, jule::Str::lit("__jule_tuple_", 13));
				_1ae0a9d1e_codeMut(_self_, _40424_s, &(_40515_t));
			}
			_iter_next_1b55dced8:;
			++it;
			goto _iter_begin_1b55dced8;
		}
		_iter_end_1b55dced8:;
	};
}



inline void _1ae0a9d1e_codeMut(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _41128_s, jule::Ptr<_1ac63d2d8_TypeKind>* _41148_t) {
	if (_1ac63e185_Binded((*(_41148_t)).ptr())) {
		_1b0984be2_WriteStr(_41128_s, jule::Str::lit("b", 1));
		_1b0984be2_WriteStr(_41128_s, (*((*(_41148_t))))._field_BindIdent);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41148_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data28)) {
			_case_begin_1b55de67c:;
			{
				_1ae0a8438_ptr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac64d6e4_Ptr>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23)) {
			_case_begin_1b55e031a:;
			{
				_1ae0a879b_sptr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac649e2c_Sptr>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data26)) {
			_case_begin_1b55e0381:;
			{
				_1ae0a8b0e_mapType(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac64c094_Map>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data24)) {
			_case_begin_1b55e03e7:;
			{
				_1ae0a8e72_slice(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac64a900_Slc>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data27)) {
			_case_begin_1b55e045d:;
			{
				_1ae0a92d5_arr(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac64cc21_Arr>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1)) {
			_case_begin_1b55e089d:;
			{
				_1ae0a9648_func(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac4dee04_FnIns>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data3)) {
			_case_begin_1b55e0914:;
			{
				jule::Ptr<_1ac5030b0_Enum> _4314_te = (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac5030b0_Enum>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data3);;
				static__1adecc3e5_toOut(_41128_s, (*(_4314_te))._field_Ident, static_cast<jule::Uintptr>(_4314_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4)) {
			_case_begin_1b55e097a:;
			{
				jule::Ptr<_1ac5047ba_TypeEnum> _4344_te = (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac5047ba_TypeEnum>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data4);;
				static__1adecc3e5_toOut(_41128_s, (*(_4344_te))._field_Ident, static_cast<jule::Uintptr>(_4344_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)) {
			_case_begin_1b55e09e1:;
			{
				jule::Ptr<_1ac4ca4d8_StructIns> _4378_si = (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac4ca4d8_StructIns>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0);;
				static__1adecdabc_structureIns(_41128_s, &(_4378_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data2)) {
			_case_begin_1b55e0a57:;
			{
				jule::Ptr<_1ac5008a4_Trait> _4408_trt = (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac5008a4_Trait>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data2);;
				static__1adecd209_traitDecl(_41128_s, _4408_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)) {
			_case_begin_1b55e0abd:;
			{
				_1b0984be2_WriteStr(_41128_s, (*((*((*(_41148_t))))._field_Kind.cast_ptr<_1ac646401_Prim>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data25)) {
			_case_begin_1b55e0b34:;
			{
				_1ae0a99ab_tup(_self_, _41128_s, (*((*(_41148_t))))._field_Kind.cast_ptr<_1ac64b4e4_Tuple>((jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1b55e02a4:;
			{
				__jule_panic_s(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:447:4"));;
			}
		}
		_match_end_1b55e023d:;
	};
}



inline void _1ae0aa182_codeMut1(_1ae0a7ab9_resultCoder* _self_, _1b097ade7_StrBuilder* _45129_s, jule::Ptr<_1ac63d2d8_TypeKind>* _45149_t) {
	jule::Ptr<_1ac64b4e4_Tuple> _4527_tup = _1ac6427b5_Tup((*(_45149_t)).ptr());;
	if ((_4527_tup != nullptr)) {
		_1ae0a99ab_tup(_self_, _45129_s, _4527_tup);
	} else {
		_1ae0a51d2_kind((*(_self_))._field_tc.ptr(), _45129_s, (*(_45149_t)));
	};
}



inline jule::Slice<jule::U8> _1ae0aa490_code(_1ae0a7ab9_resultCoder* _self_, jule::Ptr<_1ac63d2d8_TypeKind>* _46025_t) {
	_1b097ade7_StrBuilder _4617_s = static__1b097b1e4_New(20LL);;
	_1ae0a9d1e_codeMut(_self_, &(_4617_s), _46025_t);
	return _1b0985e8a_Buf(&_4617_s);;
}








inline jule::Bool _1b55eb8cb_Flag_eq(_1b55eb8cb_Flag *_self_, _1b55eb8cb_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b55ebd93_Name(_1b55eb8cb_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b55ebee7_What(_1b55eb8cb_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b55ec14b_Reset(_1b55eb8cb_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b55ec2a0_Short(_1b55eb8cb_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b560056c_Flag_eq(_1b560056c_Flag *_self_, _1b560056c_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b56001e8_Name(_1b560056c_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b5600858_What(_1b560056c_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b560099b_Reset(_1b560056c_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b5600ade_Short(_1b560056c_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b5603c79_Flag_eq(_1b5603c79_Flag *_self_, _1b5603c79_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b5603905_Name(_1b5603c79_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b5604065_What(_1b5603c79_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b56041a8_Reset(_1b5603c79_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b56042eb_Short(_1b5603c79_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b56074ca_Flag_eq(_1b56074ca_Flag *_self_, _1b56074ca_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b5607156_Name(_1b56074ca_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b56077b6_What(_1b56074ca_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b5607909_Reset(_1b56074ca_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b5607a4c_Short(_1b56074ca_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1b560abd7_Flag_eq(_1b560abd7_Flag *_self_, _1b560abd7_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1b560a863_Name(_1b560abd7_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b560aec3_What(_1b560abd7_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b560b116_Reset(_1b560abd7_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b560b259_Short(_1b560abd7_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1add23aee_FlagSet> static__1add23e1d_New(void) {
	return jule::new_ptr<_1add23aee_FlagSet>(_1add23aee_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1add243c4_FindFlag(_1add23aee_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5615a5a:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1add2202b_CommonFlagMptrData*)_7215_flag.safe_type())->_1adce0b98_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1b5615a5a:;
			++it;
			goto _iter_begin_1b5615a5a;
		}
		_iter_end_1b5615a5a:;
	};
	return nullptr;;
}



inline jule::Trait _1add24715_FindFlagShort(_1add23aee_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5616275:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1add2202b_CommonFlagMptrData*)_8215_flag.safe_type())->_1adce0dc9_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1b5616275:;
			++it;
			goto _iter_begin_1b5616275;
		}
		_iter_end_1b5616275:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1add24cdc_Parse(_1add23aee_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1add265b3_argParser _1167_ap = _1add265b3_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1add27ae2_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1b560abd7_Flag> _1b4544c65_addFlagCommon(_1add23aee_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1add243c4_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1add24715_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1b560abd7_Flag> _1407_flag = jule::new_ptr<_1b560abd7_Flag>(_1b560abd7_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1b56074ca_Flag> _1b454dd3a_addFlagCommon(_1add23aee_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1add243c4_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1add24715_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1b56074ca_Flag> _1407_flag = jule::new_ptr<_1b56074ca_Flag>(_1b56074ca_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1b4542537_AddVar(_1add23aee_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1b560abd7_Flag> _1717_flag = _1b4544c65_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1b454b651_AddVar(_1add23aee_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1b56074ca_Flag> _1717_flag = _1b454dd3a_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1b561d9a8_parseInteger(_1add265b3_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1b5621a11:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1b0966ec1_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1b5621758:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1b0966ec1_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1b562111a:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1b0966ec1_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1b5621181:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1b56211e7:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b56210a4:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b5620e94:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1b5626582_parseInteger(_1add265b3_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1b5629673:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1b0966ec1_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1b56293ba:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1b0966ec1_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1b5628c7c:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1b0966ec1_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1b5628ce3:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1b5628d59:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b5628c16:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b5628b06:;
	};
	return __jule_func_result;;
}



inline jule::Str _1add26e10_getData(_1add265b3_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1add27185_processFlag(_1add265b3_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data3)) {
			_case_begin_1b561ab5e:;
			{
				jule::Ptr<_1b56074ca_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1b56074ca_Flag>((jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1b561aae8:;
	};
	jule::Str _2203_data = _1add26e10_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1add2202b_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1adce0b98_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data0)) {
			_case_begin_1b561ca62:;
			{
				jule::Ptr<_1b55eb8cb_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1b55eb8cb_Flag>((jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1b561d9a8_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1b56224b2, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1add2202b_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1adce0b98_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data1)) {
			_case_begin_1b561c4bd:;
			{
				jule::Ptr<_1b560056c_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1b560056c_Flag>((jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b5626582_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1b562a124, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1add2202b_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1adce0b98_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data2)) {
			_case_begin_1b561cac8:;
			{
				jule::Ptr<_1b5603c79_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1b5603c79_Flag>((jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1a9d44d99_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1add2202b_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1adce0b98_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data4)) {
			_case_begin_1b561cb3e:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1b560abd7_Flag>((jule::Trait::Type*)&_1add2202b_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1b561c303:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1add2743d_singleDash(_1add265b3_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1b5630998:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1add24715_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + __jule_strFromRune(_25710_r)), &__jule_any_type4)};
				};
				({
					auto except = _1add27185_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1b5630998:;
			it += len;
			goto _iter_begin_1b5630998;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1add276e6_doubleDash(_1add265b3_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _2707_flag = _1add243c4_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1add27185_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1add278e4_tryArg(_1add265b3_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1add276e6_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1add2743d_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1add27ae2_parse(_1add265b3_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1add278e4_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1b5635706:;
	}
	_iter_end_1b5635706:;;
	return jule::VoidExceptional{};
}











inline jule::Ptr<_1b0ad3ea6_Cmd> static__1b0ad43e6_New(jule::Str _2616_path) {
	return jule::new_ptr<_1b0ad3ea6_Cmd>(_1b0ad3ea6_Cmd{._field_attrs=_1b03959cc_cmdAttrs{._field_pid=-1LL}, ._field_path=_2616_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1b0ad45e4_Spawn(_1b0ad3ea6_Cmd* _self_) {
	return _1b039677a_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1b0ad4a78_Wait(_1b0ad3ea6_Cmd* _self_) {
	return _1b0396c0e_wait(_self_);
}



inline jule::VoidExceptional _1b039677a_spawn(_1b0ad3ea6_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		__jule_panic_s(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:83:4"));;
	};
	jule::Str _853_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _867_pipe;;
	if ((pipe((&(_867_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	if ((_1e271802b_Fcntl(static_cast<jule::I64>(_867_pipe[1LL]), F_SETFD, (fcntl(static_cast<jule::I64>(_867_pipe[1LL]), F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_1e2744871_Close(static_cast<jule::I64>(_867_pipe[0LL]));
		_1e2744871_Close(static_cast<jule::I64>(_867_pipe[1LL]));
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1ae2810d3:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ae280214:;
			{
				_1e2744871_Close(static_cast<jule::I64>(_867_pipe[0LL]));
				jule::Slice<jule::Str> _1018_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
				_1018_args[0LL]=_853_path;
				(_1018_args).append((*(_self_))._field_Args);;
				({
					auto except = _1b03964e4_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_1b03962b3_execvp(&(_853_path), &(_1018_args));
				jule::Str _1064_code = _1b0391c81_Itoa(_1e1a5ce10_GetLastErrno());;
				{
					_1e2744c28_Write(static_cast<jule::I64>(_867_pipe[1LL]), (&(_1064_code[0LL])), static_cast<jule::U64>(_1064_code.len()));
				};
				_1e2744871_Close(static_cast<jule::I64>(_867_pipe[1LL]));
				_1b0397eeb_Exit(1LL);
			}
		}
		else {
			_case_begin_1ae27b034:;
			{
				_1e2744871_Close(static_cast<jule::I64>(_867_pipe[1LL]));
				jule::Array<jule::U8,16> _11212_buf = ({ auto __jule_collection = jule::Array<jule::U8,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
				jule::I64 _1134_n = _1e2744497_Read(static_cast<jule::I64>(_867_pipe[0LL]), (&(_11212_buf[0LL])), static_cast<jule::U64>(16LLU));;
				_1e2744871_Close(static_cast<jule::I64>(_867_pipe[0LL]));
				if ((_1134_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _1175_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b0388140_AtoiBp((&(_11212_buf[0LL])), _1134_n);
						_1175_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_1b039755b_processErrorFromCode(_1175_code), &__jule_any_type0)};
				};
			}
		}
		_match_end_1ae27ce04:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1b0396c0e_wait(_1b0ad3ea6_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		__jule_panic_s(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:135:4"));;
	};
	jule::I64 _1377_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_1377_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_1b03977ae_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>{.result=WEXITSTATUS(_1377_stat)};;
}







inline __jule_tuple_x_1ad29028b_IR__jule_tuple_s_1b08b6838_Log static__1ad290764_Build(jule::Str _2918_path, jule::I64 _2929_flags) {
	__jule_tuple_x_1ad29028b_IR__jule_tuple_s_1b08b6838_Log __jule_func_result;
	jule::Ptr<_1ad28c8e8_JuleImporter> _307_importer = static__1ad28cd27_New(_1ad292216_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1ac4a4869_AST>> _327_files;
	jule::Slice<_1b08b6838_Log> _3218_logs;
	({
		__jule_tuple_sx_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad28e312_ImportPackage(_307_importer.ptr(), _2918_path, true);
		_327_files = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Str _363_root = _2918_path;;
	if ((_327_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac4a4869_AST> _447_firstFile = _327_files[0LL];;
	_1ad2924be_pushRuntimeToAST(&(_447_firstFile));
	jule::Ptr<_1ac55ac0b_Package> _477_pkg;
	({
		__jule_tuple_x_1ac55ac0b_Package__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ac660492_AnalyzePackage(_327_files, jule::Trait(_307_importer, (jule::Trait::Type*)&_1ac554a4b_Importer_mptr_data0), _2929_flags);
		_477_pkg = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad29028b_IR> _527_ir = jule::new_ptr<_1ad29028b_IR>(_1ad29028b_IR{._field_Root=_363_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_477_pkg, ._field_Runtime=jule::Ptr<_1ac557cd5_ImportInfo>(nullptr), ._field_Used=_1ad28d0ad_AllPackages(_307_importer), ._field_Ordered=_1ad29a708_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1ac4c767d_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr)}});;
	(*(_527_ir))._field_Passes=_1ad292007_getAllUniquePasses(&((*_527_ir.alloc)._field_Main), (*_527_ir.alloc)._field_Used);
	(*_527_ir.alloc)._field_Runtime=(*((*(_477_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _527_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ad290c4d_appendStructs(_1ad29028b_IR* _self_, jule::Ptr<_1ac55ac0b_Package>* _6730_p, jule::Slice<jule::Ptr<_1ac4c767d_Struct>>* _6754_buffer) {
	{
		auto expr = &((*((*(_6730_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44c56da:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _6815_f = *it;
			{
				{
					auto expr = &((*(_6815_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b44c6147:;
					if (it != expr_end) {
						jule::Ptr<_1ac4c767d_Struct> _6916_s = *it;
						{
							if ((!((*(_6916_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1ac4c767d_Struct>> &__jule_push_dest = (*(_6754_buffer)); __jule_push_dest.push(_6916_s); };
							};
						}
						_iter_next_1b44c6147:;
						++it;
						goto _iter_begin_1b44c6147;
					}
					_iter_end_1b44c6147:;
				};
			}
			_iter_next_1b44c56da:;
			++it;
			goto _iter_begin_1b44c56da;
		}
		_iter_end_1b44c56da:;
	};
}



inline jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _1ad290ed4_GetAllStructures(_1ad29028b_IR* _self_) {
	jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _8011_buffer = nullptr;;
	_1ad290c4d_appendStructs(_self_, &((*(_self_))._field_Main), &(_8011_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44c7302:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _8215_u = *it;
			{
				if ((!((*(_8215_u))._field_Binded))) {
					_1ad290c4d_appendStructs(_self_, &((*_8215_u.alloc)._field_Package), &(_8011_buffer));
				};
			}
			_iter_next_1b44c7302:;
			++it;
			goto _iter_begin_1b44c7302;
		}
		_iter_end_1b44c7302:;
	};
	return _8011_buffer;;
}



inline void _1ad291347_appendGlobals(_1ad29028b_IR* _self_, jule::Ptr<_1ac55ac0b_Package>* _9030_p, jule::Slice<jule::Ptr<_1ac5a2527_Var>>* _9054_buffer) {
	{
		auto expr = &((*((*(_9030_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44c8985:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _9115_f = *it;
			{
				{
					auto expr = &((*(_9115_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b44c93e2:;
					if (it != expr_end) {
						jule::Ptr<_1ac5a2527_Var> _9216_v = *it;
						{
							if (((((*(_9216_v))._field_Token != nullptr) && (!((*_9216_v.alloc)._field_Binded))) && (!((*_9216_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1ac5a2527_Var>> &__jule_push_dest = (*(_9054_buffer)); __jule_push_dest.push(_9216_v); };
							};
						}
						_iter_next_1b44c93e2:;
						++it;
						goto _iter_begin_1b44c93e2;
					}
					_iter_end_1b44c93e2:;
				};
			}
			_iter_next_1b44c8985:;
			++it;
			goto _iter_begin_1b44c8985;
		}
		_iter_end_1b44c8985:;
	};
}



inline jule::Slice<jule::Ptr<_1ac5a2527_Var>> _1ad2915cd_GetAllGlobals(_1ad29028b_IR* _self_) {
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _10311_buffer = nullptr;;
	_1ad291347_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10311_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44cad1c:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _10515_u = *it;
			{
				if ((!((*(_10515_u))._field_Binded))) {
					_1ad291347_appendGlobals(_self_, &((*_10515_u.alloc)._field_Package), &(_10311_buffer));
				};
			}
			_iter_next_1b44cad1c:;
			++it;
			goto _iter_begin_1b44cad1c;
		}
		_iter_end_1b44cad1c:;
	};
	return _10311_buffer;;
}



inline void _1ad2917cb_Order(_1ad29028b_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1ad2915cd_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1ad290ed4_GetAllStructures(_self_);
	_1b44cc923_order((*(_self_))._field_Ordered._field_Globals);
	_1b44cd506_order((*(_self_))._field_Ordered._field_Structs);
}







inline void _1e26c7bbc_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1e2708505_BytePtrToStr(jule::U8* _6524_s) {
	if ((_6524_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _696_n = 0LL;;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {};
	};
	if ((_696_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_696_n, _696_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_696_n=0LL;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {
			{
				_766_buf[_696_n]=_6524_s[_696_n];
			}
		_iter_next_1add50cd5:;
		}
		_iter_end_1add50cd5:;;
	};
	return __jule_bytesToStr(_766_buf);;
}



inline jule::Slice<jule::U8> _1e270878b_StrToBytes(jule::Str _8915_s) {
	{
		auto expr = &(_8915_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1add512d0:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::U8 *_909_b = it;
			{
				if (((*(_909_b)) == 0LLU)) {
					jule::Slice<jule::U8> _928_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_906_i + 1LL), (_906_i + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
					jule::copy(_928_bytes, _8915_s.slice(0LL, _928_bytes.len()));
					return _928_bytes;;
				};
			}
			_iter_next_1add512d0:;
			++it;
			_906_i++;
			goto _iter_begin_1add512d0;
		}
		_iter_end_1add512d0:;
	};
	jule::Slice<jule::U8> _976_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_8915_s.len() + 1LL), (_8915_s.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_976_bytes, _8915_s);
	return _976_bytes;;
}



inline jule::I64 _1e1a5ce10_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _1e271802b_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return fcntl(_5410_handle, _5423_cmd, _5433_arg);;
}



inline jule::I64 _1e27183a0_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return stat(((char*)(_5916_path)), _5933_stat);;
}



inline jule::I64 _1e27187ce_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return open(((char*)(_6416_path)), _6429_flag, _6440_mode);;
}



inline jule::U8* _1e2718b53_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _1e271914d_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _1e2719329_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _1e27195c1_Closedir(DIR* _8124_dir) {
	return closedir(_8124_dir);;
}



inline jule::I64 _1e2719ec8_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return mkdir(((char*)(_9017_path)), _9030_mode);;
}



inline jule::I64 _1e271a292_Rmdir(jule::U8* _9517_path) {
	return rmdir(((char*)(_9517_path)));;
}



inline jule::I64 _1e271a55b_Unlink(jule::U8* _9818_path) {
	return unlink(((char*)(_9818_path)));;
}



inline jule::I64 _1e2744497_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _1e2744871_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _1e2744c28_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1e2744e59_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _1e2756ed2_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1adda7aea_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1e2763384_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1adda7aea_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1e276361a_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1e2756ed2_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1e27638d4_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline __jule_tuple_i32__jule_tuple_int _1c7ec89c1_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1c7ec7739_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_1c7ec7cde_acceptRange _1962_accept = _1c7ec8185_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1c7ec8d12_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1c7ec7739_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_1c7ec7cde_acceptRange _2432_accept = _1c7ec8185_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1c7ec9362_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1c7ecaa7d_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1adde90c0;
			};
		}
	_iter_next_1adde90c0:;
	}
	_iter_end_1adde90c0:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec8d12_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1c7ec9dac_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1c7eca231_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1c7eca231_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1ade08354:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1ade07012:;
			{
				_41242_r=128LL;
				goto _case_begin_1ade07078;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1ade07078:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1ade067a3:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1ade0672b:;
	};
}



inline jule::I64 _1c7eca7b4_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1ae1cca79;
			};
			jule::U8 _4823_x = _1c7ec7739_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1ae1cca79;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1ae1cca79;
			};
			_1c7ec7cde_acceptRange _4923_accept = _1c7ec8185_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1ae1cca79:;
	}
	_iter_end_1ae1cca79:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c7ecaa7d_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _20a3cac92_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _20a3d3629_Len64(_6119_x));;
}



inline jule::I64 _20a3cbbd8_TrailingZeros(jule::U64 _8318_x) {
	;
	return _20a3cc887_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _20a3cc5bd_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_20a3cb3d0__DE_BRUIJN32_TAB[static_cast<jule::I64>(((jule::U32)((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _20a3cc887_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_20a3cb974__DE_BRUIJN64_TAB[static_cast<jule::I64>(((jule::U64)((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _20a3d3360_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x=(_35214_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x=(_35214_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _20a3d3629_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x=(_36614_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x=(_36614_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x=(_36614_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _20a3d43b6_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _20a3d5bc0_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (jule::U64)(_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = (jule::U64)((jule::U64)(_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(jule::U64)(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _1c7ed03bd__coSpawn(_1319_func, _1334_args);;
}



inline jule::I64 _20b30d09c_randInt(jule::U64 _716_seed, jule::I64 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U64 _172_p2 = static_cast<jule::U64>(_162_p1);;
	return ({ jule::I64 __jule_x = static_cast<jule::I64>((({ jule::U64 __jule_x = _172_p2; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I64 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1ae340a33_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1ae3427d2:;
	}
	_iter_end_1ae3427d2:;;
	return true;;
}

inline jule::Bool _1ae38e0e2_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1ae3907db:;
	}
	_iter_end_1ae3907db:;;
	return true;;
}

inline jule::Bool _1b2935d06_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1b29374ab:;
	}
	_iter_end_1b29374ab:;;
	return true;;
}

inline jule::Bool _1b4d1b717_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1b4d1d472:;
	}
	_iter_end_1b4d1d472:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void _1e2749458__handleRW(jule::Slice<jule::U8>* _1615_b) {
	if (((*(_1615_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1615_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2520_buf) {
	if ((_2520_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1c7ecd3ee_handleRW(&(_2520_buf));
	return _1e2744c28_Write(static_cast<jule::I64>(_1e27172b1_STDOUT), (&(_2520_buf[0LL])), static_cast<jule::U64>(_2520_buf.len()));;
}



inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3620_buf) {
	if ((_3620_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1c7ecd3ee_handleRW(&(_3620_buf));
	return _1e2744c28_Write(static_cast<jule::I64>(_1e271759c_STDERR), (&(_3620_buf[0LL])), static_cast<jule::U64>(_3620_buf.len()));;
}



inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf) {
	if ((_4718_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1c7ecd3ee_handleRW(&(_4718_buf));
	return _1e2744c28_Write(static_cast<jule::I64>(_1e2716e81_STDIN), (&(_4718_buf[0LL])), static_cast<jule::U64>(_4718_buf.len()));;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n) {
	__jule_writeStderr(_1e2763384_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1adda7aea_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_1e2763384_StrBytes(jule::Str::lit("\n", 1)));
	_1e2744e59_Exit(2LL);
}



inline jule::U64 _1ae172623_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo) {
	jule::U64 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U64 _1ae1727dd_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo) {
	jule::U64 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Str _1e276a820_executable(void) {
	jule::Slice<jule::U8> _146_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4096LL, 4096LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::Str _152_p = jule::Str::lit("/proc/self/exe", 14);;
	jule::I64 _162_n = readlink(((char*)((&(_152_p[0LL])))), ((char*)((&(_146_buf[0LL])))), _146_buf.len());;
	if ((_162_n != -1LL)) {
		(_146_buf).mut_slice(0LL, _162_n);;
		return _1e27638d4_StrFromBytes(_146_buf);;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_linux.jule:21:2"));;
}



inline jule::U64* __jule_RCNew(void) {
	;
	;
	jule::U64* _256_p = ((jule::U64*)(malloc(8LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p) {
	return _1ae172623_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U64* _6328_p) {
	_1ae1727dd_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p) {
	return (_1ae1727dd_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U64* _9219_p) {
	free(_9219_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I64>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1ae178d33:;
	}
	_iter_end_1ae178d33:;;
	jule::I64 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1ae179570:;
	}
	_iter_end_1ae179570:;;
	return _1e27638d4_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _522_n = _1e2774a8d_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _1e27638d4_StrFromBytes(_516_buf);;
}



inline jule::I64 _1e2774a8d_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I64 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1ae17e553:;
	}
	_iter_end_1ae17e553:;;
	jule::I64 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_1e2775c37_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	jule::I64 _842_n = 26LL;;
	jule::Slice<jule::U8> _856_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_842_n, _842_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _866_j = 0LL;;
	if ((_8017_f < 0LL)) {
		_856_buf[0LL]='-';
		(_866_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _932_intPart = static_cast<jule::U64>(_8017_f);;
	_866_j+=_1e2774a8d_u64ToBuf(_856_buf.slice(_866_j), _932_intPart);
	_856_buf[_866_j]='.';
	jule::F64 _976_fracPart = (_8017_f - static_cast<jule::F64>(_932_intPart));;
	jule::I64 _986_i = 0LL;;
	for (; (_986_i < 4LL); (_986_i)++) {
		{
			_976_fracPart*=10LL;
			jule::I64 _1013_digit = static_cast<jule::I64>(_976_fracPart);;
			(_866_j)++;
			_856_buf[_866_j]=static_cast<jule::U8>(('0' + _1013_digit));
			_976_fracPart-=static_cast<jule::F64>(_1013_digit);
		}
	_iter_next_1ae184c2e:;
	}
	_iter_end_1ae184c2e:;;
	for (; (_866_j >= 0LL); (_866_j)--) {
		{
			if ((_856_buf[_866_j] != '0')) {
				goto _iter_end_1ae185aba;
			};
		}
	_iter_next_1ae185aba:;
	}
	_iter_end_1ae185aba:;;
	if ((_856_buf[_866_j] != '.')) {
		(_866_j)++;
	};
	(_856_buf).mut_slice(0LL, _866_j);;
	return _1e27638d4_StrFromBytes(_856_buf);;
}



inline jule::Str _1b5656edb_arrToStr(jule::Slice<jule::U8> _12316_x) {
	jule::Slice<jule::U8> _1246_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1246_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_12316_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b56582a6:;
		if (it != expr_end) {
			jule::I64 _1266_i = it - expr->begin();
			jule::U8 *_1269_z = it;
			{
				if ((_1266_i > 0LL)) {
					(_1246_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1246_buf).append(_1ac2b58ab_toStr((*(_1269_z))));;
			}
			_iter_next_1b56582a6:;
			++it;
			_1266_i++;
			goto _iter_begin_1b56582a6;
		}
		_iter_end_1b56582a6:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1246_buf; __jule_push_dest.push(']'); };
	return _1e27638d4_StrFromBytes(_1246_buf);;
}



inline jule::Str _1b564bd7c_structToStr(_1b097ade7_StrBuilder _15619_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1b564edb3:;
				{
					;
					{
						
{
							_case_begin_1b565104b:;
							{
								;
								;
							}
						}
						_match_end_1b5650c2c:;
					};
				}
			}
			_match_end_1b564e456:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1776_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1776_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1b5652e2c:;
				{
					(_1776_buf).append(_1b5653713_toStr(_15619_x._field_buf));;
				}
			}
			_match_end_1b5652d83:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1776_buf; __jule_push_dest.push('}'); };
	return _1e27638d4_StrFromBytes(_1776_buf);;
}



inline jule::Str _1ac29eaa4_toStr(jule::Any _19713_x) {
	;
	{
		
{
			_case_begin_1ac2a0cd6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ac2a0be8:;
	};
	{
		
{
			_case_begin_1ac2a1303:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _19713_x.type->to_str(_19713_x.data.alloc);;
			}
		}
		_match_end_1ac2a118d:;
	};
}

inline jule::Str _1ac2a1c82_toStr(jule::Str _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2a302a:;
			{
				return _19713_x;;
			}
		}
		_match_end_1ac2a2eb4:;
	};
}

inline jule::Str _1ac2a24d0_toStr(jule::I64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2a5a55:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1ac2a5967:;
	};
}

inline jule::Str _1ac2a7282_toStr(jule::I8 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2a84d6:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1ac2a83e8:;
	};
}

inline jule::Str _1ac2a4eb6_toStr(jule::I16 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2aae67:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1ac2aad79:;
	};
}

inline jule::Str _1ac2ac694_toStr(jule::I32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2ad981:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1ac2ad893:;
	};
}

inline jule::Str _1ac2b017a_toStr(jule::I64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2b149a:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1ac2b13ac:;
	};
}

inline jule::Str _1ac2b2bc7_toStr(jule::U64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2b3ea3:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1ac2b3d3d:;
	};
}

inline jule::Str _1ac2b06db_toStr(jule::Uintptr _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2b63e5:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1ac2b6280:;
	};
}

inline jule::Str _1ac2b58ab_toStr(jule::U8 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2b8837:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1ac2b86c2:;
	};
}

inline jule::Str _1ac2b7ced_toStr(jule::U16 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2bac79:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1ac2bab14:;
	};
}

inline jule::Str _1ac2ba240_toStr(jule::U32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2bd1bb:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1ac2bd056:;
	};
}

inline jule::Str _1ac2bc682_toStr(jule::U64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2c0751:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1ac2c05db:;
	};
}

inline jule::Str _1ac2c0a5e_toStr(jule::F32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ac2c2c5e:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_19713_x));;
			}
		}
		_match_end_1ac2c2a72:;
	};
}

inline jule::Str _1ac2c0dd3_toStr(jule::F64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ae334dac:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_19713_x));;
			}
		}
		_match_end_1ae334c03:;
	};
}

inline jule::Str _1ac2aca6d_toStr(jule::Bool _19713_x) {
	;
	;
	{
		
{
			_case_begin_1ae336c5a:;
			{
				return __jule_boolToStr(_19713_x);;
			}
		}
		_match_end_1ae3369d5:;
	};
}

inline jule::Str _1ae336dc0_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ae3389c6:;
			{
				return _1ac2a24d0_toStr(_19713_x);;
			}
		}
		_match_end_1ae3377a5:;
	};
}

inline jule::Str _1ae23ec0c_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ae241703:;
			{
				return _1ac2a24d0_toStr(_19713_x);;
			}
		}
		_match_end_1ae241109:;
	};
}

inline jule::Str _1ae278460_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1ae279e56:;
			{
				return _1ac2a24d0_toStr(_19713_x);;
			}
		}
		_match_end_1ae27985c:;
	};
}

inline jule::Str _1b2c1449c_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b2c15e93:;
			{
				return _1ac2a24d0_toStr(_19713_x);;
			}
		}
		_match_end_1b2c15899:;
	};
}

inline jule::Str _1b34aae96_toStr(jule::Ptr<_1ac4c33e3_Impl> _19713_x) {
	;
	{
		
{
			_case_begin_1b34ac151:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b34ac063:;
	};
	;
	{
		
{
			_case_begin_1b34acb02:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b34ac7c2:;
	};
}

inline jule::Str _1b34ab24e_toStr(jule::Ptr<_1ac4bd29a_TypeAliasDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b34b08e6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b34b0808:;
	};
	;
	{
		
{
			_case_begin_1b34b1397:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b34b1067:;
	};
}

inline jule::Str _1b34ada7b_toStr(jule::Ptr<_1ac4c2546_StructDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b34b44dd:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b34b4400:;
	};
	;
	{
		
{
			_case_begin_1b34b4e8e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b34b4b5e:;
	};
}

inline jule::Str _1b34b5e07_toStr(jule::Ptr<_1ac4b843d_FnDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b34b8228:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b34b813a:;
	};
	;
	{
		
{
			_case_begin_1b34b8bc9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b34b8899:;
	};
}

inline jule::Str _1b34b99ee_toStr(jule::Ptr<_1ac4c2c83_TraitDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b34bbd20:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b34bbc32:;
	};
	;
	{
		
{
			_case_begin_1b34bc7c1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b34bc491:;
	};
}

inline jule::Str _1b34bd5e6_toStr(jule::Ptr<_1ac4b95e8_VarDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b34c0917:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b34c0829:;
	};
	;
	{
		
{
			_case_begin_1b34c13b8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b34c1088:;
	};
}

inline jule::Str _1ae285093_toStr(jule::Ptr<_1ac4c08eb_EnumDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b29583bc:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b29582ce:;
	};
	;
	{
		
{
			_case_begin_1b2958d6d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2958a4e:;
	};
}

inline jule::Str _1b2959bc6_toStr(jule::Ptr<_1ac4c1886_TypeEnumDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b295c0a2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b295beb4:;
	};
	;
	{
		
{
			_case_begin_1b295ca53:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b295c723:;
	};
}

inline jule::Str _1b297c19e_toStr(jule::Ptr<_1ac4c4757_Field> _19713_x) {
	;
	{
		
{
			_case_begin_1b297d38c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b297d29e:;
	};
	;
	{
		
{
			_case_begin_1b297dd3d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b297da0d:;
	};
}

inline jule::Str _1b298e36a_toStr(jule::Ptr<_1aa1293c0_Const> _19713_x) {
	;
	{
		
{
			_case_begin_1b2990558:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b299046a:;
	};
	;
	{
		
{
			_case_begin_1b2991009:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2990bc9:;
	};
}

inline jule::Str _1b29954c5_toStr(jule::Ptr<_1ac5a2527_Var> _19713_x) {
	;
	{
		
{
			_case_begin_1b29970ba:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2996ecc:;
	};
	;
	{
		
{
			_case_begin_1b2997a6b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b299773b:;
	};
}

inline jule::Str _1b29ab8e8_toStr(jule::Ptr<_1ac502543_EnumItem> _19713_x) {
	;
	{
		
{
			_case_begin_1b29acac5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b29ac9d7:;
	};
	;
	{
		
{
			_case_begin_1b29ad576:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b29ad246:;
	};
}

inline jule::Str _1b29bd014_toStr(jule::Ptr<_1ac4da372_Param> _19713_x) {
	;
	{
		
{
			_case_begin_1b29be202:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b29be114:;
	};
	;
	{
		
{
			_case_begin_1b29beba3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b29be873:;
	};
}

inline jule::Str _1b29e4aeb_toStr(jule::Ptr<_1ac4c767d_Struct> _19713_x) {
	;
	{
		
{
			_case_begin_1b29e5cd9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b29e5beb:;
	};
	;
	{
		
{
			_case_begin_1b29e678a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b29e645a:;
	};
}

inline jule::Str _1b29e7318_toStr(jule::Ptr<_1ac5008a4_Trait> _19713_x) {
	;
	{
		
{
			_case_begin_1b29e97d2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b29e96e4:;
	};
	;
	{
		
{
			_case_begin_1b29ea283:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b29e9e53:;
	};
}

inline jule::Str _1b29eaa8b_toStr(jule::Ptr<_1ac5030b0_Enum> _19713_x) {
	;
	{
		
{
			_case_begin_1b29ed055:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b29ece67:;
	};
	;
	{
		
{
			_case_begin_1b29eda06:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b29ed6c6:;
	};
}

inline jule::Str _1b29ee30e_toStr(jule::Ptr<_1ac5047ba_TypeEnum> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a017c8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a016da:;
	};
	;
	{
		
{
			_case_begin_1b2a02279:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a01e49:;
	};
}

inline jule::Str _1b2a06e60_toStr(jule::Ptr<_1ac4dbd46_Fn> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a080c6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a07ed8:;
	};
	;
	{
		
{
			_case_begin_1b2a08a77:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a08747:;
	};
}

inline jule::Str _1b3563eb6_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b35659e0:;
			{
				return _1ac2a1c82_toStr(_19713_x);;
			}
		}
		_match_end_1b35653e6:;
	};
}

inline jule::Str _1b35abc89_toStr(jule::Ptr<_1ac63c4e6_TypeAlias> _19713_x) {
	;
	{
		
{
			_case_begin_1b35ad142:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b35ad054:;
	};
	;
	{
		
{
			_case_begin_1b35adae3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b35ad7b3:;
	};
}

inline jule::Str _1b2a54dd1_toStr(jule::Ptr<_1ac4a6d88_IdentTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a5608b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a55e9d:;
	};
	;
	{
		
{
			_case_begin_1b2a56a3c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a5670c:;
	};
}

inline jule::Str _1b2a6c24a_toStr(jule::Ptr<_1ac4d4dd8_TupleExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a6d25c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a6d16e:;
	};
	;
	{
		
{
			_case_begin_1b2a6dc0d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a6d8cd:;
	};
}

inline jule::Str _1b2a6e6d1_toStr(jule::Ptr<_1ac4ab6a6_TupleExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a720c9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a71edb:;
	};
	;
	{
		
{
			_case_begin_1b2a72a7a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a7274a:;
	};
}

inline jule::Str _1b2a7e5d1_toStr(jule::Ptr<_1ac4b522b_AssignSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a806d1:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a805e3:;
	};
	;
	{
		
{
			_case_begin_1b2a81182:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a80d52:;
	};
}

inline jule::Str _1b2a82727_toStr(jule::Ptr<_1ac4aaab2_Expr> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a83849:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a82260:;
	};
	;
	{
		
{
			_case_begin_1b2a847b2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a83eba:;
	};
}

inline jule::Str _1b2a84905_toStr(jule::Ptr<_1ac538557_Postfix> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a86c37:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a86b49:;
	};
	;
	{
		
{
			_case_begin_1b2a876d8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a873b9:;
	};
}

inline jule::Str _1b2a87595_toStr(jule::Ptr<_1ac538a0d_Assign> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a88530:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a88442:;
	};
	;
	{
		
{
			_case_begin_1b2a8a2ac:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a89e6b:;
	};
}

inline jule::Str _1b2a850cb_toStr(jule::Ptr<_1ac538eb4_MultiAssign> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a8b104:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a8b016:;
	};
	;
	{
		
{
			_case_begin_1b2a8cd81:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a8ca40:;
	};
}

inline jule::Str _1b2a8b7db_toStr(jule::Ptr<_1ac60a55d_Data> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a8dd4e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a8dc61:;
	};
	;
	{
		
{
			_case_begin_1b2a90b42:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a9079b:;
	};
}

inline jule::Str _1b2a913e5_toStr(jule::Ptr<_1ac4d17ca_FnCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b2a93859:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2a9376b:;
	};
	;
	{
		
{
			_case_begin_1b2a9430a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2a93eca:;
	};
}

inline jule::Str _1b36d35a8_toStr(jule::Ptr<_1ac537a1d_Label> _19713_x) {
	;
	{
		
{
			_case_begin_1b36d4763:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b36d4675:;
	};
	;
	{
		
{
			_case_begin_1b36d5214:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b36d4dd4:;
	};
}

inline jule::Str _1b3701ecd_toStr(jule::Ptr<_1ac534ec1_Scope> _19713_x) {
	;
	{
		
{
			_case_begin_1b37031bb:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37030cd:;
	};
	;
	{
		
{
			_case_begin_1b3703b6c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b370383c:;
	};
}

inline jule::Str _1b370b449_toStr(jule::Ptr<_1ac4d7a45_BuiltinErrorCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b370c604:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b370c516:;
	};
	;
	{
		
{
			_case_begin_1b370d0a5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b370cc75:;
	};
}

inline jule::Str _1b3710ad0_toStr(jule::Ptr<_1ac4d8a57_BackendEmitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3711b58:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3711a6a:;
	};
	;
	{
		
{
			_case_begin_1b3712609:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37122c9:;
	};
}

inline jule::Str _1b37112b7_toStr(jule::Ptr<_1ac4d67be_BuiltinAppendCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b37136c6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37135d8:;
	};
	;
	{
		
{
			_case_begin_1b3715453:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3715123:;
	};
}

inline jule::Str _1b3716751_toStr(jule::Ptr<_1ac4d52b2_BuiltinOutCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b371629a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37161ac:;
	};
	;
	{
		
{
			_case_begin_1b3718027:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3717bd6:;
	};
}

inline jule::Str _1b3717dd4_toStr(jule::Ptr<_1ac4d568b_BuiltinOutlnCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3718d6e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3718c81:;
	};
	;
	{
		
{
			_case_begin_1b371aaeb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b371a7aa:;
	};
}

inline jule::Str _1b371a9a8_toStr(jule::Ptr<_1ac4d5e3e_BuiltinPanicCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b371b943:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b371b855:;
	};
	;
	{
		
{
			_case_begin_1b371d6c0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b371d37e:;
	};
}

inline jule::Str _1b371d57c_toStr(jule::Ptr<_1ac4d766b_BuiltinCopyCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b371e517:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b371e429:;
	};
	;
	{
		
{
			_case_begin_1b3721294:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3720e53:;
	};
}

inline jule::Str _1b3721151_toStr(jule::Ptr<_1ac4d7292_BuiltinDeleteCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b37220db:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3721eed:;
	};
	;
	{
		
{
			_case_begin_1b3723d68:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3723a27:;
	};
}

inline jule::Str _1b3723c25_toStr(jule::Ptr<_1ac4d8d54_FreeExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b372494b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b372485d:;
	};
	;
	{
		
{
			_case_begin_1b3726b5c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37263a9:;
	};
}

inline jule::Str _1b372e626_toStr(jule::Ptr<_1ac535b09_Conditional> _19713_x) {
	;
	{
		
{
			_case_begin_1b3730814:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3730726:;
	};
	;
	{
		
{
			_case_begin_1b37312b5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3730e85:;
	};
}

inline jule::Str _1b373a005_toStr(jule::Ptr<_1ac535e06_InfIter> _19713_x) {
	;
	{
		
{
			_case_begin_1b2996b36:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2996a37:;
	};
	;
	{
		
{
			_case_begin_1b373b765:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b373ad19:;
	};
}

inline jule::Str _1b374046c_toStr(jule::Ptr<_1ac5363ac_WhileIter> _19713_x) {
	;
	{
		
{
			_case_begin_1b374165a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b374156c:;
	};
	;
	{
		
{
			_case_begin_1b374210b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3741ccb:;
	};
}

inline jule::Str _1b275279e_toStr(jule::Ptr<_1ac536d08_RangeIter> _19713_x) {
	;
	{
		
{
			_case_begin_1b275398c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b275389e:;
	};
	;
	{
		
{
			_case_begin_1b275443d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b275410d:;
	};
}

inline jule::Str _1b27624d4_toStr(jule::Ptr<_1ac4baa6c_WhileKind> _19713_x) {
	;
	{
		
{
			_case_begin_1b276368e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b27635a1:;
	};
	;
	{
		
{
			_case_begin_1b2764140:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2763d10:;
	};
}

inline jule::Str _1b2765163_toStr(jule::Ptr<_1ac4bb474_RangeKind> _19713_x) {
	;
	{
		
{
			_case_begin_1b27674ea:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b276740c:;
	};
	;
	{
		
{
			_case_begin_1b2767e9b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b2767b6b:;
	};
}

inline jule::Str _1b27819cb_toStr(jule::Ptr<_1ac53718d_ContSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b2782bb9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b2782acb:;
	};
	;
	{
		
{
			_case_begin_1b278366a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b278333a:;
	};
}

inline jule::Str _1b278a8a3_toStr(jule::Ptr<_1ac53817d_GotoSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b278ba91:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b278b9a3:;
	};
	;
	{
		
{
			_case_begin_1b278c542:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b278c212:;
	};
}

inline jule::Str _1b27c19b6_toStr(jule::Ptr<_1ac4ac3cc_IdentExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b27c2b82:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b27c2a94:;
	};
	;
	{
		
{
			_case_begin_1b27c3633:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b27c3303:;
	};
}

inline jule::Str _1b27d6624_toStr(jule::Ptr<_1ac4d215a_IndexingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b27d77ce:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b27d76e1:;
	};
	;
	{
		
{
			_case_begin_1b27d8280:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b27d7e50:;
	};
}

inline jule::Str _1b3781d3d_toStr(jule::Ptr<_1ac539701_Match> _19713_x) {
	;
	{
		
{
			_case_begin_1b378302b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3782e3d:;
	};
	;
	{
		
{
			_case_begin_1b37839cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b378369c:;
	};
}

inline jule::Str _1b3796171_toStr(jule::Ptr<_1ac53a922_FallSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b3797a02:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3797914:;
	};
	;
	{
		
{
			_case_begin_1b37984a3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3798173:;
	};
}

inline jule::Str _1b37b2247_toStr(jule::Ptr<_1ac537567_BreakSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b37b3435:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37b3347:;
	};
	;
	{
		
{
			_case_begin_1b37b3dd6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37b3aa6:;
	};
}

inline jule::Str _1b37b88e1_toStr(jule::Ptr<_1ac53acb8_RetSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b37b9ace:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37b99e1:;
	};
	;
	{
		
{
			_case_begin_1b37ba580:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37ba250:;
	};
}

inline jule::Str _1b37c3368_toStr(jule::Ptr<_1ac4b679e_ScopeTree> _19713_x) {
	;
	{
		
{
			_case_begin_1b37c4512:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37c4424:;
	};
	;
	{
		
{
			_case_begin_1b37c4eb3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37c4b83:;
	};
}

inline jule::Str _1b37c8109_toStr(jule::Ptr<_1ac4bca5d_Conditional> _19713_x) {
	;
	{
		
{
			_case_begin_1b37c925e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37c9171:;
	};
	;
	{
		
{
			_case_begin_1b37c9c10:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37c98d0:;
	};
}

inline jule::Str _1b37c835c_toStr(jule::Ptr<_1ac4ba242_Iter> _19713_x) {
	;
	{
		
{
			_case_begin_1b37cc44e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37cc361:;
	};
	;
	{
		
{
			_case_begin_1b37cce00:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37ccac0:;
	};
}

inline jule::Str _1b37ca5a1_toStr(jule::Ptr<_1ac4bbc27_ContSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b37d063e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37d0551:;
	};
	;
	{
		
{
			_case_begin_1b37d10e0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37d0cb0:;
	};
}

inline jule::Str _1b37cd791_toStr(jule::Ptr<_1ac4b3d62_LabelSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b37d22de:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37d2201:;
	};
	;
	{
		
{
			_case_begin_1b37d406b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37d3c3b:;
	};
}

inline jule::Str _1b37d5655_toStr(jule::Ptr<_1ac4b423b_GotoSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b37d67aa:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37d66bc:;
	};
	;
	{
		
{
			_case_begin_1b37d725b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37d6e2b:;
	};
}

inline jule::Str _1b37d7d3e_toStr(jule::Ptr<_1ac4be06a_MatchCase> _19713_x) {
	;
	{
		
{
			_case_begin_1b37da22b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37da13d:;
	};
	;
	{
		
{
			_case_begin_1b37dabcc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37da89c:;
	};
}

inline jule::Str _1b37d80c5_toStr(jule::Ptr<_1ac4b4538_FallSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b37dd41b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37dd32d:;
	};
	;
	{
		
{
			_case_begin_1b37dddbc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37dda8c:;
	};
}

inline jule::Str _1b37db56d_toStr(jule::Ptr<_1ac4bb84d_BreakSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b37e160b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37e151d:;
	};
	;
	{
		
{
			_case_begin_1b37e20ac:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37e1c7c:;
	};
}

inline jule::Str _1b37de75d_toStr(jule::Ptr<_1ac4b99c2_RetSt> _19713_x) {
	;
	{
		
{
			_case_begin_1b37e47eb:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37e470d:;
	};
	;
	{
		
{
			_case_begin_1b37e529c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37e4e6c:;
	};
}

inline jule::Str _1b37e294d_toStr(jule::Ptr<_1ac4ab486_UseExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b37e79db:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b37e78ed:;
	};
	;
	{
		
{
			_case_begin_1b37e848c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b37e815c:;
	};
}

inline jule::Str _1b39d9b9a_toStr(jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b39daeed:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b39dae10:;
	};
	;
	{
		
{
			_case_begin_1b39db99e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b39db66e:;
	};
}

inline jule::Str _1b39da42b_toStr(jule::Ptr<_1ac4cebc4_UnaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b39deb06:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b39dea18:;
	};
	;
	{
		
{
			_case_begin_1b39e05a7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b39e0277:;
	};
}

inline jule::Str _1b3a1ed34_toStr(jule::Ptr<_1ac4dee04_FnIns> _19713_x) {
	;
	{
		
{
			_case_begin_1b3a21022:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3a20e34:;
	};
	;
	{
		
{
			_case_begin_1b3a219c3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3a21693:;
	};
}

inline jule::Str _1b3be347a_toStr(jule::Ptr<_1ac4a9297_MapTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b3be4635:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3be4547:;
	};
	;
	{
		
{
			_case_begin_1b3be50d6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3be4ca6:;
	};
}

inline jule::Str _1b3be8cdd_toStr(jule::Ptr<_1ac4a7eaa_TupleTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b3be9e98:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3be9daa:;
	};
	;
	{
		
{
			_case_begin_1b2b6c9dd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3608885:;
	};
}

inline jule::Str _1b3c0bc13_toStr(jule::Ptr<_1ac4a8a49_ArrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b3c0cdce:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3c0cce1:;
	};
	;
	{
		
{
			_case_begin_1b3c0d880:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3c0d550:;
	};
}

inline jule::Str _1b3c13137_toStr(jule::Ptr<_1ac4a7bad_SlcTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b3c14303:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3c14215:;
	};
	;
	{
		
{
			_case_begin_1b3c14ca4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3c14974:;
	};
}

inline jule::Str _1b3c1968d_toStr(jule::Ptr<_1ac4a82a7_PtrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b3c1a859:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3c1a76b:;
	};
	;
	{
		
{
			_case_begin_1b3c1b30a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3c1aeca:;
	};
}

inline jule::Str _1b3c20793_toStr(jule::Ptr<_1ac4a7828_SptrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b3c2195e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3c21871:;
	};
	;
	{
		
{
			_case_begin_1b3c22410:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3c220d0:;
	};
}

inline jule::Str _1b3c70c33_toStr(jule::Ptr<_1ac4ad048_VariadicExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b3c71d44:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3c71c56:;
	};
	;
	{
		
{
			_case_begin_1b3c727e5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3c724b5:;
	};
}

inline jule::Str _1b3c76992_toStr(jule::Ptr<_1ac4d1ba4_SliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3c786a8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3c785ba:;
	};
	;
	{
		
{
			_case_begin_1b3c79159:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3c78d29:;
	};
}

inline jule::Str _1b3c91814_toStr(jule::Ptr<_1ac4b02d1_FieldExprPair> _19713_x) {
	;
	{
		
{
			_case_begin_1b3c929be:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3c928d1:;
	};
	;
	{
		
{
			_case_begin_1b3c93470:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3c93140:;
	};
}

inline jule::Str _1b3c9a312_toStr(jule::Ptr<_1ac4b18dc_KeyValPair> _19713_x) {
	;
	{
		
{
			_case_begin_1b3c9b4bc:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3c9b3ce:;
	};
	;
	{
		
{
			_case_begin_1b3c9be6d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3c9bb3d:;
	};
}

inline jule::Str _1b3d019ea_toStr(jule::Ptr<_1ac4ae7db_FnCallExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b3d02ba5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3d02ab7:;
	};
	;
	{
		
{
			_case_begin_1b3d03656:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3d03326:;
	};
}

inline jule::Str _1b3d34786_toStr(jule::Ptr<_1ac4d0895_AllocStructLitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3d35974:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3d35886:;
	};
	;
	{
		
{
			_case_begin_1b3d36425:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3d360e5:;
	};
}

inline jule::Str _1b3d4915d_toStr(jule::Ptr<_1ac4d0e28_CastingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3d4a34b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3d4a25d:;
	};
	;
	{
		
{
			_case_begin_1b3d4acec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3d4a9bc:;
	};
}

inline jule::Str _1b3d61a27_toStr(jule::Ptr<_1ac4d4712_StructStaticIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3d62b38:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3d62a4a:;
	};
	;
	{
		
{
			_case_begin_1b3d635d9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3d632a9:;
	};
}

inline jule::Str _1b3d641de_toStr(jule::Ptr<_1ac4adbc5_SubIdentExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b3d679c8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3d678da:;
	};
	;
	{
		
{
			_case_begin_1b3d68479:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3d68149:;
	};
}

inline jule::Str _1b3d70e10_toStr(jule::Ptr<_1ac4d0598_StructLitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3d720ba:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3d71ecc:;
	};
	;
	{
		
{
			_case_begin_1b3d72a6b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3d7273b:;
	};
}

inline jule::Str _1b3d9145d_toStr(jule::Ptr<_1ac4d86d3_RuneExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3d9264b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3d9255d:;
	};
	;
	{
		
{
			_case_begin_1b3d930ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3d92cbc:;
	};
}

inline jule::Str _1b3db9079_toStr(jule::Ptr<_1ac4ca4d8_StructIns> _19713_x) {
	;
	{
		
{
			_case_begin_1b3dba267:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3dba179:;
	};
	;
	{
		
{
			_case_begin_1b3dbac18:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3dba8d8:;
	};
}

inline jule::Str _1b3e09240_toStr(jule::Ptr<_1ac63d2d8_TypeKind> _19713_x) {
	;
	{
		
{
			_case_begin_1b3e0a3c8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3e0a2da:;
	};
	;
	{
		
{
			_case_begin_1b3e0ad79:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3e0aa49:;
	};
}

inline jule::Str _1b3e2b361_toStr(jule::Ptr<_1ac4d4adb_ArrayExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3e2c54e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3e2c461:;
	};
	;
	{
		
{
			_case_begin_1b3e2d000:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3e2cbc0:;
	};
}

inline jule::Str _1b3e65301_toStr(jule::Ptr<_1ac4a7152_SubIdentTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b3e664de:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3e66401:;
	};
	;
	{
		
{
			_case_begin_1b2ba32e8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b36088eb:;
	};
}

inline jule::Str _1b360a755_toStr(jule::Ptr<_1ac4acb6e_UnaryExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b360b57a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b360b2e4:;
	};
	;
	{
		
{
			_case_begin_1b360c416:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b360b646:;
	};
}

inline jule::Str _1b3614495_toStr(jule::Ptr<_1ac4a677d_TypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b3614a39:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b361494b:;
	};
	;
	{
		
{
			_case_begin_1b36154da:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b36151bb:;
	};
}

inline jule::Str _1b36190b0_toStr(jule::Ptr<_1ac4ad7eb_NsSelectionExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b361ba41:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b361b953:;
	};
	;
	{
		
{
			_case_begin_1b361c4e2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b361c1b2:;
	};
}

inline jule::Str _1b3620ade_toStr(jule::Ptr<_1ac4a752b_NamespaceTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1b3621ccc:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3621bde:;
	};
	;
	{
		
{
			_case_begin_1b362277d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b362244d:;
	};
}

inline jule::Str _1b365b641_toStr(jule::Ptr<_1ac4d3447_SlicingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b365c7c9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b365c6db:;
	};
	;
	{
		
{
			_case_begin_1b365d27a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b365ce4a:;
	};
}

inline jule::Str _1b402405d_toStr(jule::Ptr<_1ac4b2118_SliceExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b4025218:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b402512a:;
	};
	;
	{
		
{
			_case_begin_1b4025bb9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4025889:;
	};
}

inline jule::Str _1b40920a9_toStr(jule::Ptr<_1ac4d39ca_TraitSubIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4093297:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b40931a9:;
	};
	;
	{
		
{
			_case_begin_1b4093c48:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4093918:;
	};
}

inline jule::Str _1b3abdd7d_toStr(jule::Ptr<_1ac4d2db4_MapExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3ac0a0b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3ac091d:;
	};
	;
	{
		
{
			_case_begin_1b3ac14ac:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3ac117c:;
	};
}

inline jule::Str _1b4161dd2_toStr(jule::Ptr<_1ac4d2611_AnonFnExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b41630c0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4162ed2:;
	};
	;
	{
		
{
			_case_begin_1b4163a71:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4163741:;
	};
}

inline jule::Str _1b4168e94_toStr(jule::Ptr<_1ac4aad7b_RangeExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b416a14e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b416a061:;
	};
	;
	{
		
{
			_case_begin_1b416ab00:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b416a7c0:;
	};
}

inline jule::Str _1b416924c_toStr(jule::Ptr<_1ac4aba4c_LitExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b416da48:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b416d95a:;
	};
	;
	{
		
{
			_case_begin_1b416e4e9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b416e1b9:;
	};
}

inline jule::Str _1b4170561_toStr(jule::Ptr<_1ac4abe26_UnsafeExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b417372e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4173641:;
	};
	;
	{
		
{
			_case_begin_1b41741d0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4173da0:;
	};
}

inline jule::Str _1b4172b6d_toStr(jule::Ptr<_1ac4b2a75_IndexingExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b4176e19:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4176d2b:;
	};
	;
	{
		
{
			_case_begin_1b41778ba:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b417758a:;
	};
}

inline jule::Str _1b417041d_toStr(jule::Ptr<_1ac4b31d5_SlicingExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b417a0d7:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4179ee9:;
	};
	;
	{
		
{
			_case_begin_1b417aa88:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b417a758:;
	};
}

inline jule::Str _1b417b14e_toStr(jule::Ptr<_1ac4ad422_CastExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b417d2a5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b417d1b7:;
	};
	;
	{
		
{
			_case_begin_1b417dc56:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b417d926:;
	};
}

inline jule::Str _1b417e31c_toStr(jule::Ptr<_1ac4b0b0b_StructLit> _19713_x) {
	;
	{
		
{
			_case_begin_1b4181c04:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4181b16:;
	};
	;
	{
		
{
			_case_begin_1b41826a5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4182375:;
	};
}

inline jule::Str _1b41857b8_toStr(jule::Ptr<_1ac4b10b2_BraceLit> _19713_x) {
	;
	{
		
{
			_case_begin_1b4186dc4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4186cc5:;
	};
	;
	{
		
{
			_case_begin_1b4187d3c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4187545:;
	};
}

inline jule::Str _1b4186049_toStr(jule::Ptr<_1ac4ae17b_BinaryExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1b418a823:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b418a735:;
	};
	;
	{
		
{
			_case_begin_1b418b2c4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b418ae94:;
	};
}

inline jule::Str _1b43160a8_toStr(jule::Ptr<_1ac4ce7ea_BinaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3a5b018:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b418bbba:;
	};
	;
	{
		
{
			_case_begin_1b418e382:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b418e690:;
	};
}

inline jule::Str _1b4127628_toStr(jule::Ptr<_1ac4d5a65_BuiltinNewCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4128816:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4128728:;
	};
	;
	{
		
{
			_case_begin_1b41292b7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4128e87:;
	};
}

inline jule::Str _1b413d023_toStr(jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b413e211:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b413e123:;
	};
	;
	{
		
{
			_case_begin_1b413ebb2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b413e882:;
	};
}

inline jule::Str _1b4599a12_toStr(jule::Ptr<_1ac4d6abb_BuiltinLenCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b459ac00:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b459ab12:;
	};
	;
	{
		
{
			_case_begin_1b459b6a1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b459b371:;
	};
}

inline jule::Str _1b45b4631_toStr(jule::Ptr<_1ac4d6db8_BuiltinCapCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b45b581e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b45b5731:;
	};
	;
	{
		
{
			_case_begin_1b45b62c0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b45b5e90:;
	};
}

inline jule::Str _1b3e9eb76_toStr(jule::Ptr<_1ac4d7d42_SizeofExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3ea0c98:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3ea0baa:;
	};
	;
	{
		
{
			_case_begin_1b3ea1749:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3ea1419:;
	};
}

inline jule::Str _1b3ea8b80_toStr(jule::Ptr<_1ac4d84e6_AlignofExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b3ea9ca2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b3ea9bb4:;
	};
	;
	{
		
{
			_case_begin_1b3eaa753:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b3eaa423:;
	};
}

inline jule::Str _1b44b1e9b_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b44b3981:;
			{
				return _1ac2a1c82_toStr(_19713_x);;
			}
		}
		_match_end_1b44b3387:;
	};
}

inline jule::Str _1b491a0a2_toStr(jule::Ptr<_1ac738559_ExceptionalForwardingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b491b290:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b491b1a2:;
	};
	;
	{
		
{
			_case_begin_1b491bc41:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b491b911:;
	};
}

inline jule::Str _1b49526e4_toStr(jule::Ptr<_1ac73ae52_StrRuneIter> _19713_x) {
	;
	{
		
{
			_case_begin_1b49538d2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b49537e4:;
	};
	;
	{
		
{
			_case_begin_1b4954383:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4954053:;
	};
}

inline jule::Str _1b495a158_toStr(jule::Ptr<_1ac739b43_MutSlicingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b495b346:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b495b258:;
	};
	;
	{
		
{
			_case_begin_1b495bce7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b495b9b7:;
	};
}

inline jule::Str _1b498037b_toStr(jule::Ptr<_1ac73aa78_AppendToSliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4981569:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b498147b:;
	};
	;
	{
		
{
			_case_begin_1b498201a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4981bda:;
	};
}

inline jule::Str _1b4982bca_toStr(jule::Ptr<_1ac73a69e_PushToSliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4985194:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b49850a6:;
	};
	;
	{
		
{
			_case_begin_1b4985b45:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4985815:;
	};
}

inline jule::Str _1b49907cb_toStr(jule::Ptr<_1ac7388de_SwapExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b49919b9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b49918cb:;
	};
	;
	{
		
{
			_case_begin_1b499246a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b499213a:;
	};
}

inline jule::Str _1b4c99b5c_toStr(jule::Ptr<_1ac738cb8_EmptyCompareExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4c9ad4a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4c9ac5c:;
	};
	;
	{
		
{
			_case_begin_1b4c9b7eb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4c9b4bb:;
	};
}

inline jule::Str _1b4c9c8da_toStr(jule::Ptr<_1ac7395b0_StrCompExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4c9eda4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4c9ecb6:;
	};
	;
	{
		
{
			_case_begin_1b4ca0855:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4ca0525:;
	};
}

inline jule::Str _1b4cd5ec8_toStr(jule::Ptr<_1ac739e40_UnsafeBinaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4cd71b6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4cd70c8:;
	};
	;
	{
		
{
			_case_begin_1b4cd7b67:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4cd7837:;
	};
}

inline jule::Str _1b4cde377_toStr(jule::Ptr<_1ac73b24e_UnsafeDerefExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4ce0565:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4ce0477:;
	};
	;
	{
		
{
			_case_begin_1b4ce1016:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4ce0bd6:;
	};
}

inline jule::Str _1b4ce5d1d_toStr(jule::Ptr<_1ac73913c_RefExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4ce700b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4ce6e1d:;
	};
	;
	{
		
{
			_case_begin_1b4ce79ac:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4ce767c:;
	};
}

inline jule::Str _1b4cea3b6_toStr(jule::Ptr<_1ac4d0202_StructArgExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4ceb5a4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4ceb4b6:;
	};
	;
	{
		
{
			_case_begin_1b4cec055:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4cebc25:;
	};
}

inline jule::Str _1b4d01b81_toStr(jule::Ptr<_1ac73b54b_UnsafeCastingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4d02d6e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4d02c81:;
	};
	;
	{
		
{
			_case_begin_1b4d03820:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4d034e0:;
	};
}

inline jule::Str _1b4d109e7_toStr(jule::Ptr<_1ac73a2c5_UnsafeIndexingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1b4d11bd5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b4d11ae7:;
	};
	;
	{
		
{
			_case_begin_1b4d12686:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b4d12356:;
	};
}

inline jule::Str _1b5285048_toStr(jule::Ptr<jule::Str> _19713_x) {
	;
	{
		
{
			_case_begin_1b528618c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b528609e:;
	};
	;
	{
		
{
			_case_begin_1b5286b3d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1b528680d:;
	};
}

inline jule::Str _1b5646dbb_toStr(_1b097ade7_StrBuilder _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b564a2ba:;
			{
				return _1b564bd7c_structToStr(_19713_x);;
			}
		}
		_match_end_1b5649d47:;
	};
}

inline jule::Str _1b5653713_toStr(jule::Slice<jule::U8> _19713_x) {
	;
	{
		
{
			_case_begin_1b5654aaa:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1b56547d0:;
	};
	;
	{
		
{
			_case_begin_1b5655418:;
			{
				return _1b5656edb_arrToStr(_19713_x);;
			}
		}
		_match_end_1b565523c:;
	};
}

inline jule::Str _1b564da3d_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b564a51d:;
			{
				return _1ac2a1c82_toStr(_19713_x);;
			}
		}
		_match_end_1b5654291:;
	};
}

inline jule::Str _1b5655b55_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1b565bd59:;
			{
				return _1ac2a1c82_toStr(_19713_x);;
			}
		}
		_match_end_1b56528dd:;
	};
}



inline void _1e2775c37_rev(jule::Slice<jule::U8> _25012_b) {
	jule::I64 _2516_i = 0LL;;
	for (; (_2516_i < (_25012_b.len() >> 1LL)); (_2516_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _25012_b[((_25012_b.len() - 1LL) - _2516_i)];
				jule::U8 _1___jule_assign_arg = _25012_b[_2516_i];
				_25012_b[_2516_i] = ___jule_assign_arg;
				_25012_b[((_25012_b.len() - 1LL) - _2516_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1ae187539:;
	}
	_iter_end_1ae187539:;;
}



inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I64 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I64 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1ae18900d:;
	}
	_iter_end_1ae18900d:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _1e27638d4_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, ({ jule::I64 __jule_x = _4415_runes.len(); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae18cd14:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_1c7ec9dac_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1ae18cd14:;
			++it;
			goto _iter_begin_1ae18cd14;
		}
		_iter_end_1ae18cd14:;
	};
	return _1e27638d4_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _1c7eca7b4_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I64 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec8d12_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1ae18e002:;
	}
	_iter_end_1ae18e002:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _1e27638d4_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_1c7ec9dac_AppendRune(_846_buf, _8316_r);
	return _1e27638d4_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1adda7aea_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec89c1_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec89c1_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline void _1c7ecd3ee_handleRW(jule::Slice<jule::U8>* _814_b) {
	_1e2749458__handleRW(_814_b);
}



inline jule::Slice<jule::Str> _1c7ecd9c6_args(void) {
	jule::Slice<jule::Str> _86_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_86_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae194755:;
		if (it != expr_end) {
			jule::I64 _96_i = it - expr->begin();
			{
				{
					jule::U8* _118_arg = __jule_argv[_96_i];;
					_86_args[_96_i]=_1e2756ed2_Str(_118_arg, _1c7ecdee3_strlen(_118_arg));
				};
			}
			_iter_next_1ae194755:;
			++it;
			_96_i++;
			goto _iter_begin_1ae194755;
		}
		_iter_end_1ae194755:;
	};
	return _86_args;;
}



inline jule::I64 _1c7ecdee3_strlen(jule::U8* _3122_p) {
	jule::I64 __jule_func_result = 0;
	for (; ((*(_3122_p)) != 0LLU); (_3122_p)++) {
		{
			(__jule_func_result)++;
		}
	_iter_next_1ae196614:;
	}
	_iter_end_1ae196614:;;
	return __jule_func_result;;
}



inline jule::Bool _1c7ed03bd__coSpawn(void* _1520_func, void* _1535_args) {
	pthread_t _166_t;;
	if ((pthread_create((&(_166_t)), nullptr, (void*(*)(void*))(_1520_func), _1535_args) != 0LL)) {
		return false;;
	};
	pthread_detach(_166_t);
	return true;;
}



inline jule::U64 _20a2e33d5_hash128to64(_20a2e302d_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _20a2e36e3_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__20a2de887_DecodeU64(_5312_bytes);;
}



inline jule::U32 _20a2e39ac_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__20a2dde5d_DecodeU32(_5412_bytes);;
}



inline jule::U64 _20a2e3ced_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _20a2e413e_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _20a2e33d5_hash128to64(_20a2e302d_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _20a2e44b3_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _20a2e48e2_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _20a2e4d76_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_20a2e36e3_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _20a2e36e3_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_20a2e44b3_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_20a2e44b3_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _20a2e48e2_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_20a2e39ac_fetch32(_7517_bytes));;
		return _20a2e48e2_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_20a2e39ac_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I64 _963_z = (_7532_n + (static_cast<jule::I64>(_943_c) << 2LL));;
		return (jule::U64)(_20a2e3ced_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _20a2e302d_u128 _20a2e522d_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _20a2e302d_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I64 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_20a2e3ced_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _20a2e4d76_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_20a2e3ced_shiftMix((jule::U64)(_1046_a + _20a2e36e3_fetch64(_10319_bytes)));
		} else {
			_1076_d=_20a2e3ced_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_20a2e413e_hashLen16((jule::U64)(_20a2e36e3_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_20a2e413e_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _20a2e36e3_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_20a2e3ced_shiftMix((jule::U64)(_20a2e36e3_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_20a2e3ced_shiftMix((jule::U64)(_20a2e36e3_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1ae1ac8c2;
				};
			}
		_iter_next_1ae1ac8c2:;
		}
		_iter_end_1ae1ac8c2:;;
	};
	_1046_a=_20a2e413e_hashLen16(_1046_a, _1066_c);
	_1056_b=_20a2e413e_hashLen16(_1076_d, _1056_b);
	return _20a2e302d_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_20a2e413e_hashLen16(_1056_b, _1046_a)};;
}



inline _20a2e302d_u128 _20a2e587c_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_20a2e44b3_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_20a2e44b3_rotate64(_14563_a, 44LLU);
	return _20a2e302d_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _20a2e302d_u128 _20a2e5cab_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _20a2e587c_weakHashLen32WithSeeds(_20a2e36e3_fetch64(_15529_bytes), _20a2e36e3_fetch64(_15529_bytes.slice(8LL)), _20a2e36e3_fetch64(_15529_bytes.slice(16LL)), _20a2e36e3_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _20a2e302d_u128 _20a2e61da_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _20a2e302d_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _20a2e522d_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I64 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_20a2e302d_u128 _16910_v = _20a2e302d_u128{._field_hi=0, ._field_lo=0};;
	_20a2e302d_u128 _17010_w = _20a2e302d_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_20a2e44b3_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _20a2e36e3_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_20a2e44b3_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _20a2e36e3_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_20a2e44b3_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_20a2e44b3_rotate64((jule::U64)(_1716_x + _20a2e36e3_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_20a2e44b3_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _20a2e36e3_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_20a2e44b3_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _20a2e36e3_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _20a2e36e3_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_20a2e44b3_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_20a2e5cab_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_20a2e5cab_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _20a2e36e3_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_20a2e44b3_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _20a2e36e3_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_20a2e44b3_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _20a2e36e3_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _20a2e36e3_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_20a2e44b3_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_20a2e5cab_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_20a2e5cab_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _20a2e36e3_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1ac280c3e;
			};
		}
	_iter_next_1ac280c3e:;
	}
	_iter_end_1ac280c3e:;;
	_1716_x+=(jule::U64)(_20a2e44b3_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _20a2e44b3_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _20a2e44b3_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I64 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_20a2e44b3_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_20a2e36e3_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _20a2e36e3_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_20a2e5cab_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1ac28b189:;
	}
	_iter_end_1ac28b189:;;
	_1716_x=_20a2e413e_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_20a2e413e_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _20a2e302d_u128{._field_hi=(jule::U64)(_20a2e413e_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_20a2e413e_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _20a2e64a4_hash(jule::Slice<jule::U8> _23413_bytes) {
	_20a2e302d_u128 _2356_sum = _20a2e302d_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_20a2e61da_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _20a2e302d_u128{._field_hi=_20a2e36e3_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_20a2e36e3_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_20a2e61da_hashWithSeed(_23413_bytes, _23413_bytes.len(), _20a2e302d_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _20a2e33d5_hash128to64(_2356_sum);;
}



inline jule::U64 _20a3da202_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _20a3dab1a_hasZeroByte((_20a3dada1_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _20a3da510_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _20a3dab1a_hasZeroByte((_20a3dada1_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _20a3da7c9_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_20a3cc887_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _20a3dab1a_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _20a3dada1_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I64 _20a3db16a_numGroups(jule::I64 _7914_n) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=({ jule::I64 __jule_x = ((_7914_n + 4LL) - 1LL); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _20a3db379_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac296095:;
		if (it != expr_end) {
			jule::I64 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1ac296095:;
			++it;
			_886_i++;
			goto _iter_begin_1ac296095;
		}
		_iter_end_1ac296095:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _20a3db753_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _20a3dba50_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups) {
	return _20a3dbdc4_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _20a3dbdc4_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline jule::I64 _1ae70ae42_getLastOsError(void) {
	jule::I64 _302_err = _1e1a5ce10_GetLastErrno();;
	{
		auto &_match_expr{ _302_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ac29c079:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ac29b93b:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1ac29b9a2:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1ac29ba29:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ac29baa1:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ac29bc6b:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ac29bcd2:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1ac29b72c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ac29b83c:;
	};
}



inline jule::Slice<jule::Str> _1ae739080_Args(void) {
	return _1c7ecd9c6_args();;
}



inline jule::Exceptional<jule::Str> _1ae7394e2_WorkingDir(void) {
	return _1ae73a4b0_getwd();
}



inline jule::Exceptional<jule::Str> _1ae73a4b0_getwd(void) {
	jule::U8* _116_buf = _1e2718b53_Getcwd(nullptr, 0LLU);;
	if ((_116_buf == nullptr)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1ae70ae42_getLastOsError(), &__jule_any_type0)};
	};
	jule::Str _152_pwd = _1e2708505_BytePtrToStr(_116_buf);;
	{
		_1e26c7bbc_Free(_116_buf);
	};
	return jule::Exceptional<jule::Str>{.result=_152_pwd};;
}



inline jule::Bool _1c80963c9_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1b091ac44__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1b0924764_isExcludingLatin(_1c80a03a0_Letter, _7613_r);;
}



inline jule::Bool _1b0923ad7_is16(jule::Slice<_1b0921d49_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b2684ca8:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_1b0921d49_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1b2684ca8:;
				++it;
				_1937_i++;
				goto _iter_begin_1b2684ca8;
			}
			_iter_end_1b2684ca8:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ({ jule::I64 __jule_x = (_2096_hi - _2086_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_1b0921d49_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1b2683adc:;
	}
	_iter_end_1b2683adc:;;
	return false;;
}



inline jule::Bool _1b0923e5b_is32(jule::Slice<_1b0922377_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b268b188:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_1b0922377_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1b268b188:;
				++it;
				_2307_i++;
				goto _iter_begin_1b268b188;
			}
			_iter_end_1b268b188:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ({ jule::I64 __jule_x = (_2466_hi - _2456_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_1b0922377_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1b2687daa:;
	}
	_iter_end_1b2687daa:;;
	return false;;
}



inline jule::Bool _1b0924764_isExcludingLatin(jule::Ptr<_1b09227ea_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1b0921d49_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1b0923ad7_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1b0922377_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1b0923e5b_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1b09249a6_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1b091ac44__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1b0924764_isExcludingLatin(_1c80a6670_Upper, _29512_r);;
}



inline jule::I32 _1b092519e_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_1b0921893_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_1b0921893_CaseRange> _1b0925523_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1b0921893_CaseRange> _33329_caseRange) {
	jule::I64 _3356_lo = 0LL;;
	jule::I64 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I64 _3383_m = static_cast<jule::I64>((static_cast<jule::U64>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_1b0921893_CaseRange> _3397_cr = ((jule::Ptr<_1b0921893_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*_3397_cr.alloc)._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1b269c93b:;
	}
	_iter_end_1b269c93b:;;
	return nullptr;;
}



inline jule::I32 _1b09257dc_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I64>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_1b091ca26_asciiFold[static_cast<jule::I64>(_37015_r)]);;
	};
	jule::I64 _3806_lo = 0LL;;
	jule::I64 _3816_hi = _1b091cd12_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I64 _3833_m = static_cast<jule::I64>((static_cast<jule::U64>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_1b091cd12_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1b26a1d5d:;
	}
	_iter_end_1b26a1d5d:;;
	if (((_3806_lo < _1b091cd12_caseOrbit.len()) && (static_cast<jule::I32>(_1b091cd12_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_1b091cd12_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_1b0921893_CaseRange> _3972_cr = _1b0925523_lookupCaseRange(_37015_r, _1b091a66c_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _1b092519e_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _1b092519e_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::I64 _1b0965d5a_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1b26ac451:;
	}
	_iter_end_1b26ac451:;;
	return -1LL;;
}



inline jule::I64 _1b0966487_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b26ac808:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1b26ac808:;
			++it;
			_706_i++;
			goto _iter_begin_1b26ac808;
		}
		_iter_end_1b26ac808:;
	};
	return -1LL;;
}



inline jule::I64 _1b096680b_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1b0965d5a_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1b0966b08_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I64 __jule_x = jule::MAX_I64; jule::I64 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1b097ade7_StrBuilder _186_ss = static__1b097b1e4_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1b0984be2_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1b26caa46:;
	}
	_iter_end_1b26caa46:;;
	return _1b09854d9_Str(&_186_ss);;
}



inline jule::Bool _1b0966ec1_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1b0967345_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _1b09677eb_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1b0966ec1_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1b26ce709:;
	}
	_iter_end_1b26ce709:;;
	return -1LL;;
}



inline jule::I64 _1b0967b3c_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1b09677eb_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _1b096806b_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1b26d195e:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1b26d1277;
					};
				}
			_iter_next_1b26d31d0:;
			}
			_iter_end_1b26d31d0:;;
			return _636_j;;
		}
	_iter_next_1b26d1277:;
	}
	_iter_end_1b26d1277:;;
	return -1LL;;
}



inline jule::I64 _1b09683e0_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1b096806b_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _1b0969bc7_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1b096680b_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _1b096a04b_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec8d12_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1b26da33b:;
	}
	_iter_end_1b26da33b:;;
	return -1LL;;
}



inline jule::I64 _1b096a975_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec8d12_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1b096a04b_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1b26dd64c:;
	}
	_iter_end_1b26dd64c:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1b096b118_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _1b09677eb_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1b26e3861;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1b26e3861:;
	}
	_iter_end_1b26e3861:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _1b096b48c_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_1b09677eb_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _1b096c009_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_1b096a975_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _1b096c37d_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2686_n = 0LL;;
	jule::I64 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2713_j = _1b09677eb_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1b26e83d2;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1b26e83d2:;
	}
	_iter_end_1b26e83d2:;;
	return _2686_n;;
}



inline jule::Str _1b096c867_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2892_m = _1b096c37d_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_1b097ade7_StrBuilder _2976_ss = static__1b097b1e4_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3003_j = _1b09677eb_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1b26ebeb8;
			};
			_1b0984be2_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_1b0984be2_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1b26ebeb8:;
	}
	_iter_end_1b26ebeb8:;;
	_1b0984be2_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _1b09854d9_Str(&_2976_ss);;
}



inline jule::Str _1b096d5e3_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I64 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec8d12_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1b096a04b_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1b2701e35:;
	}
	_iter_end_1b2701e35:;;
	return jule::Str();;
}



inline jule::Str _1b096d967_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I64 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec9362_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1b096a04b_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1b2703a4c:;
	}
	_iter_end_1b2703a4c:;;
	return jule::Str();;
}



inline jule::Str _1b096dcdb_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _1b096d5e3_TrimLeft(_1b096d967_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Str _1b096e160_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep) {
	{
		auto _match_expr{ _3759_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b2705433:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b2705b4d:;
			{
				return _3759_parts[0LL];;
			}
		}
		_match_end_1b2705ab5:;
	};
	jule::I64 _3826_n = 0LL;;
	{
		auto expr = &(_3759_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2705c08:;
		if (it != expr_end) {
			jule::Str *_3839_part = it;
			{
				_3826_n+=(*(_3839_part)).len();
				(_3826_n)++;
			}
			_iter_next_1b2705c08:;
			++it;
			goto _iter_begin_1b2705c08;
		}
		_iter_end_1b2705c08:;
	};
	_1b097ade7_StrBuilder _3876_s = static__1b097b1e4_New((_3826_n + 1LL));;
	_1b0984be2_WriteStr(&_3876_s, _3759_parts[0LL]);
	{
		auto expr = _3759_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b2707710:;
		if (it != expr_end) {
			jule::Str *_3899_part = it;
			{
				_1b0984be2_WriteStr(&_3876_s, _37523_sep);
				_1b0984be2_WriteStr(&_3876_s, (*(_3899_part)));
			}
			_iter_next_1b2707710:;
			++it;
			goto _iter_begin_1b2707710;
		}
		_iter_end_1b2707710:;
	};
	return _1b09854d9_Str(&_3876_s);;
}



inline jule::Bool _1b09872cc_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I64 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1b270a8ab;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1b270aa10;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1b270aa10;
			};
			return false;;
		}
	_iter_next_1b270aa10:;
	}
	_iter_end_1b270aa10:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1b270a8ab:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1b270d64a:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I64 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec8d12_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1b270d64a;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1b270d64a;
					};
					return false;;
				};
				jule::I32 _1237_r = _1b09257dc_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_1b09257dc_SimpleFold(_1237_r);
					}
				_iter_next_1b2713188:;
				}
				_iter_end_1b2713188:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1b270d64a;
				};
				return false;;
			}
			_iter_next_1b270d64a:;
			it += len;
			goto _iter_begin_1b270d64a;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Str _1b0988762_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _1b098b5cd_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1b098b006_IsPathSep(_1102_originalPath[0LL])) && _1b098b006_IsPathSep(_1102_originalPath[1LL]))) {
			return _1b0988d39_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1b098b006_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_1b09878c6_lazyBuff _1286_out = _1b09878c6_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1b0988146_append(&_1286_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1b098b006_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1b2721839:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1b098b006_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1b271e54b:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1b098b006_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1b271e5b2:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1b27258e8:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1b098b006_IsPathSep(_1b0987d8d_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1b2726179:;
									}
									_iter_end_1b2726179:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1b2725992:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1b0988146_append(&_1286_out, 47LLU);
									};
									_1b0988146_append(&_1286_out, '.');
									_1b0988146_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1b2725541:;
						};
					}
				}
				else {
					_case_begin_1b271e4d5:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1b0988146_append(&_1286_out, 47LLU);
						};
						;
						for (; ((_1336_r < _1272_n) && (!(_1b098b006_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1b0988146_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1b27208c1:;
						}
						_iter_end_1b27208c1:;;
					}
				}
				_match_end_1b271e1d8:;
			};
		}
	_iter_next_1b271dbee:;
	}
	_iter_end_1b271dbee:;;
	if ((_1286_out._field_w == 0LL)) {
		_1b0988146_append(&_1286_out, '.');
	};
	return _1b0988d39_FromSlash(_1b09883cc_string(&_1286_out));;
}



inline jule::Str _1b0988d39_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1b098917a_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1b098bba5_join(_2269_elem);;
}



inline jule::Str _1b0989411_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1b098b006_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1b2729b83:;
	}
	_iter_end_1b2729b83:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1b09896ca_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1b098b91e_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1b0989994_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1b098b006_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1b272b019:;
	}
	_iter_end_1b272b019:;;
	(_25213_path).mut_slice(_1b098a0b0_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1b098b006_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1b272b437:;
	}
	_iter_end_1b272b437:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1b0989d6d_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1b098a0b0_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1b098b006_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1b272e8e1:;
	}
	_iter_end_1b272e8e1:;;
	jule::Str _2892_dir = _1b0988762_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1b098a0b0_VolumeName(jule::Str _30115_path) {
	return _1b0988d39_FromSlash(_30115_path.slice(0LL, _1b098b5cd_volumeNameLen(_30115_path)));;
}



inline jule::Bool _1b098b006_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1b098b314_IsAbs(jule::Str _5310_path) {
	return _1b0966ec1_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _1b098b5cd_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1b098b91e_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1b098b314_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1b0988762_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _672_wd = ({
		auto except = _1ae7394e2_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1b098bba5_join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _672_wd; (*it++) = _638_path; __jule_collection; }));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1b098bba5_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae227b4b:;
		if (it != expr_end) {
			jule::I64 _746_i = it - expr->begin();
			jule::Str *_749_e = it;
			{
				if (!((*(_749_e))).empty()) {
					return _1b0988762_Clean(_1b096e160_Join(_739_elem.slice(_746_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1ae227b4b:;
			++it;
			_746_i++;
			goto _iter_begin_1ae227b4b;
		}
		_iter_end_1ae227b4b:;
	};
	return jule::Str();;
}



inline jule::I64 _1ae6689c6_getLastFsError(void) {
	jule::I64 _722_err = _1e1a5ce10_GetLastErrno();;
	{
		auto &_match_expr{ _722_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ae235a27:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ae235928:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1ae235351:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1ae2353b7:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ae23542d:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ae2354a5:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1ae23552c:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ae2355a4:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ae235bc0:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ae235c47:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ae235cbe:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ae235d46:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ae235dbd:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ae235e45:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ae235ebc:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1ae236044:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ae2360bb:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ae236143:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ae2361ba:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ae236242:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1ae2362b9:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ae236341:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ae2363b8:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ae236440:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ae2364b7:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1ae23653e:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1ae2365b6:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1ae23663d:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1ae2351ca:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ae2352da:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1b0388140_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _86_neg = ((*(_722_b)) == '-');;
	if (_86_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>((jule::U8)((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1ae261d3e:;
	}
	_iter_end_1ae261d3e:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_86_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _1b0391c81_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1b039208e_Utoa(static_cast<jule::U64>((-(_89_x)))));;
	};
	return _1b039208e_Utoa(static_cast<jule::U64>(_89_x));;
}



inline jule::Str _1b039208e_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _206_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _216_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _233_q = (_1613_x / 10LLU);;
			_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _1613_x) - (jule::U64)(_233_q * 10LLU)));
			(_216_i)++;
			_1613_x=_233_q;
		}
	_iter_next_1ae26887e:;
	}
	_iter_end_1ae26887e:;;
	_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)('0' + _1613_x));
	(_206_buf).mut_slice(0LL, (_216_i + 1LL));;
	_1b03922c0_rev(&(_206_buf));
	return _1e27638d4_StrFromBytes(_206_buf);;
}



inline void _1b03922c0_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I64 _366_i = 0LL;;
	for (; (_366_i < ((*(_3513_b)).len() >> 1LL)); (_366_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_366_i];
				(*(_3513_b))[_366_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1ae26c487:;
	}
	_iter_end_1ae26c487:;;
}



inline jule::Slice<char*> _1b0395e3e_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s, jule::Slice<jule::Slice<jule::U8>>* _3540_bargs) {
	jule::Slice<char*> _366_cs = ({ auto __jule_collection = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = nullptr; __jule_collection; });;
	(*(_3540_bargs))=({ auto __jule_collection = jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3525_s)).len(), (*(_3525_s)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::U8>(nullptr); __jule_collection; });
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b247cc7c:;
		if (it != expr_end) {
			jule::I64 _386_i = it - expr->begin();
			jule::Str *_389_arg = it;
			{
				jule::Slice<jule::U8> _397_barg = _1e270878b_StrToBytes((*(_389_arg)));;
				(*(_3540_bargs))[_386_i]=_397_barg;
				_366_cs[_386_i]=((char*)((&(_397_barg[0LL]))));
			}
			_iter_next_1b247cc7c:;
			++it;
			_386_i++;
			goto _iter_begin_1b247cc7c;
		}
		_iter_end_1b247cc7c:;
	};
	_366_cs[(_366_cs.len() - 1LL)]=nullptr;
	return _366_cs;;
}



inline jule::I64 _1b03962b3_execvp(jule::Str* _4712_file, jule::Slice<jule::Str>* _4724_argv) {
	jule::Slice<jule::Slice<jule::U8>> _486_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _492_cargv = _1b0395e3e_strSliceToCstrSlice(_4724_argv, &(_486_bargs));;
	jule::Slice<jule::U8> _502_s = _1e270878b_StrToBytes((*(_4712_file)));;
	{
		return execvp(((char*)((&(_502_s[0LL])))), (char*const*)(&(_492_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _1b03964e4_setenv(jule::Slice<jule::Str>* _5612_envv) {
	;
	{
		auto expr = _5612_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b24801d0:;
		if (it != expr_end) {
			jule::Str *_589_env = it;
			{
				jule::I64 _593_i = _1b0966487_FindByteStr((*(_589_env)), '=');;
				if ((_593_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				{
					jule::Slice<jule::U8> _644_key = _1e270878b_StrToBytes((*(_589_env)).slice(0LL, _593_i));;
					if ((((*(_589_env)).len() - _593_i) == 1LL)) {
						jule::Str _665_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_644_key[0LL])))), ((char*)((&(_665_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					} else {
						jule::Slice<jule::U8> _715_val = _1e270878b_StrToBytes((*(_589_env)).slice((_593_i + 1LL)));;
						if ((setenv(((char*)((&(_644_key[0LL])))), ((char*)((&(_715_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					};
				};
			}
			_iter_next_1b24801d0:;
			++it;
			goto _iter_begin_1b24801d0;
		}
		_iter_end_1b24801d0:;
	};
	return jule::VoidExceptional{};
}



inline jule::I64 _1b039755b_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1b2482116:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b248217c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1b2486ba9:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1b24868bd:;
	};
}



inline jule::I64 _1b03977ae_getLastProcessError(void) {
	return _1b039755b_processErrorFromCode(_1e1a5ce10_GetLastErrno());;
}



inline void _1b0397eeb_Exit(jule::I64 _109_code) {
	_1e2744e59_Exit(_109_code);
}



inline jule::Str _1b039822c_Executable(void) {
	return _1e276a820_executable();;
}



inline jule::Bool _1b08a92a9_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1b08a9584_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1b08a7010_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b24a866a:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1b24a866a:;
			++it;
			goto _iter_begin_1b24a866a;
		}
		_iter_end_1b24a866a:;
	};
	return false;;
}



inline jule::Bool _1b08a984d_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1b08a8cc0_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b24a94b2:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1b24a94b2:;
			++it;
			goto _iter_begin_1b24a94b2;
		}
		_iter_end_1b24a94b2:;
	};
	{
		auto expr = &(_1b08a8ece_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b24a93b3:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1b24a93b3:;
			++it;
			goto _iter_begin_1b24a93b3;
		}
		_iter_end_1b24a93b3:;
	};
	return false;;
}



inline jule::Str _1b08b6c9a_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args) {
	return _1b08b773a_applyFmt(_3229_fmt, _32222_args);;
}



inline jule::Str _1b08b70a8_argToStr(jule::Any _32613_arg) {
	{
		auto &_match_expr{ _32613_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b24ab75b:;
			{
				return _32613_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1b24aba03:;
			{
				return __jule_strFromByte(_32613_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b24aba69:;
			{
				return __jule_strFromRune(_32613_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1b24ab98c:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1b24ab926:;
	};
}



inline jule::I64 _1b08b7372_findNextFmt(jule::Str _33916_fmt) {
	{
		auto expr = &(_33916_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b24aae42:;
		if (it != expr_end) {
			jule::I64 _3406_i = it - expr->begin();
			jule::U8 *_3409_b = it;
			{
				if (((*(_3409_b)) == '@')) {
					return _3406_i;;
				};
			}
			_iter_next_1b24aae42:;
			++it;
			_3406_i++;
			goto _iter_begin_1b24aae42;
		}
		_iter_end_1b24aae42:;
	};
	return -1LL;;
}



inline jule::Str _1b08b773a_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args) {
	_1b097ade7_StrBuilder _3496_s = static__1b097b1e4_New(32LL);;
	{
		auto expr = &(_34827_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b24ae4b7:;
		if (it != expr_end) {
			jule::Any *_3509_arg = it;
			{
				jule::I64 _3513_i = _1b08b7372_findNextFmt(_34817_fmt);;
				if ((_3513_i == -1LL)) {
					goto _iter_end_1b24ae4b7;
				};
				_1b0984be2_WriteStr(&_3496_s, _34817_fmt.slice(0LL, _3513_i));
				_1b0984be2_WriteStr(&_3496_s, _1b08b70a8_argToStr((*(_3509_arg))));
				(_34817_fmt).mut_slice((_3513_i + 1LL));;
			}
			_iter_next_1b24ae4b7:;
			++it;
			goto _iter_begin_1b24ae4b7;
		}
		_iter_end_1b24ae4b7:;
	};
	_1b0984be2_WriteStr(&_3496_s, _34817_fmt);
	return _1b09854d9_Str(&_3496_s);;
}



inline jule::Bool _1b08b863c_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _1b08b9a5b_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _1b08b9d69_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _1b08ba133_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _1b08ba474_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _1b08ba70a_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _1b08ba9c4_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _1b08bac8d_IsUnix(jule::Str _5511_os) {
	return (_1b08b9d69_IsDarwin(_5511_os) || _1b08ba133_IsLinux(_5511_os));;
}



inline jule::Bool _1b08bb167_Is32Bit(jule::Str _5812_arch) {
	return _1b08ba474_IsI386(_5812_arch);;
}



inline jule::Bool _1b08bb3a9_Is64Bit(jule::Str _6112_arch) {
	return (_1b08ba70a_IsAmd64(_6112_arch) || _1b08ba9c4_IsArm64(_6112_arch));;
}



inline void _1b0399580_init(void) {
	jule::Str _256_path = _1b039822c_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1b0398ace_PathWd=({
			auto except = _1ae7394e2_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1b0398826_PathExec=_1b0989d6d_Dir(_256_path);
		_1b0398529_PathStdlib=_1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _1b0398826_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_1b0398dcb_PathApi=_1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _1b0398826_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1a9ceac0c_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1a9ceb01a_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1a9ceb2d4_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1a9ceb625_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1a9cedb88_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1b27ed2b7:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1a9d04ae5_IsInf(_4714_f, 0LL) || _1a9d04463_IsNaN(_4714_f)) {
			_case_begin_1b27ed361:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1b27ed1c9:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a9d04dae_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1a9ceb2d4_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1a9ceb625_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1a9d04155_NaN(void) {
	return _1a9ceb625_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1a9d04463_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1a9d0472c_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1a9ceb625_F64FromBits(9218868437227405312LLU);;
	};
	return _1a9ceb625_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1a9d04ae5_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1a9d04dae_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1a9d07268_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1a9d06883_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a9d04463_IsNaN(_1118_x) || _1a9d04ae5_IsInf(_1118_x, 1LL)) {
			_case_begin_1b2839589:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1b2839633:;
			{
				return _1a9d04155_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1b2839699:;
			{
				return _1a9d0472c_Inf(-1LL);;
			}
		}
		_match_end_1b28394bd:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a9cedb88_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1a9d07268_Abs(jule::F64 _438_x) {
	return _1a9ceb625_F64FromBits((_1a9ceb2d4_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1a9d0dd41_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1a9d07268_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1b289c223:;
		}
		_iter_end_1b289c223:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1a9d0e649_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a9cedb88_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1a9d06883_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1a9d380e0_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _1e27638d4_StrFromBytes(_1a9d386c8_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1a9d3ba83_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1a9d386c8_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a9d36dd0_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1b2c19d32:;
			{
				_886_bits=static_cast<jule::U64>(_1a9ceac0c_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1a9d36dd0_floatInfo>)((&(_1a9d372cb_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b2c19a68:;
			{
				_886_bits=_1a9ceb2d4_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1a9d36dd0_floatInfo>)((&(_1a9d375c8_f64info))));
			}
		}
		else {
			_case_begin_1b2c18825:;
			{
				__jule_panic_s(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1b2c196e4:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (jule::U64)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>(({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1b2c1db7c:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1b2c203ba:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1b2c204a8:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1b2c1ec49:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1b2c1eb39:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b2c1dc6a:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1b2c1cd35:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1b2c1cecd:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1a9d3ac08_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1a9d3b38a_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1a9d37a5c_decimalSlice _1376_digs = _1a9d37a5c_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1aa112de2_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b2c23148:;
				{
					_8758_prec=_1a9d3ba83_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b2c2428c:;
				{
					_8758_prec=_1a9d3ba83_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b2c24303:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1b2c23368:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b2c2628e:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b2c2635a:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1b2c25ce9:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1b2c25e09:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1a9d45729_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1a9d45bbe_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1a9d38dd2_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1a9d395a8_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1a9d38dd2_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1a9d36dd0_floatInfo* _18824_flt) {
	_1aa116bc6_decimal _1896_d = _1aa116bc6_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1aa1170b1_assign(&_1896_d, _1882_mant);
	_1aa117369_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1a9d37a5c_decimalSlice _1926_digs = _1a9d37a5c_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1a9d399c6_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1a9d37a5c_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b2c2c21d:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b2c2d021:;
				{
					_18733_prec=_1a9d3ba83_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b2c2d087:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1b2c2cd89:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b2c2be43:;
				{
					_1aa117b83_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b2c2bea9:;
				{
					_1aa117b83_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b2c2c020:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1aa117b83_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1b2c2e572:;
		};
		_1926_digs=_1a9d37a5c_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1a9d395a8_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1a9d395a8_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1a9d37a5c_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1b2c3270c:;
			{
				return _1a9d3a06a_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b2c32773:;
			{
				return _1a9d3a554_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1b2c327d9:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1a9d3a06a_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1a9d3a554_fmtF(_22418_dst, _22447_neg, _2252_digs, _1a9d3ba83_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1b2c32652:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1a9d399c6_roundShortest(_1aa116bc6_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1a9d36dd0_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1aa116bc6_decimal _2926_upper = _1aa116bc6_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1aa1170b1_assign(&_2926_upper, (jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1aa117369_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1aa116bc6_decimal _3116_lower = _1aa116bc6_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1aa1170b1_assign(&_3116_lower, (jule::U64)(({ jule::U64 __jule_x = _3026_mantlo; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1aa117369_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1b2c3d916;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1b2c436b8:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1b2c43762:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1b2c437c8:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1b2c435db:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1b2c4617c:;
					{
						_1aa117b83_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1b2c46226:;
					{
						_1aa117622_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1b2c4628c:;
					{
						_1aa1178ca_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1b2c4383e:;
			};
		}
	_iter_next_1b2c3d916:;
	}
	_iter_end_1b2c3d916:;;
}



inline jule::Slice<jule::U8> _1a9d3a06a_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1a9d37a5c_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1a9d3b70e_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1b2c4a170:;
		}
		_iter_end_1b2c4a170:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1b2c4c859:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1b2c4ca13:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1b2c4c2c6:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _4306_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1b2c4c172:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1a9d3a554_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1a9d37a5c_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1a9d3b70e_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1b2c5162c:;
		}
		_iter_end_1b2c5162c:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1b2c5293b:;
		}
		_iter_end_1b2c5293b:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1a9d3ac08_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1a9d36dd0_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aa11be73_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aa11be73_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1a9d3b38a_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1a9d36dd0_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1b2c57732:;
	}
	_iter_end_1b2c57732:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>(({ jule::I64 __jule_x = _51126_prec; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1b2c5cb55:;
		}
		_iter_end_1b2c5cb55:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1b2c5e6c3:;
		}
		_iter_end_1b2c5e6c3:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1a9d3c721_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1b2c5ba55:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1b2c62176:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1b2c617b3:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1b2c6162b:;
	};
	return _51113_dst;;
}



inline jule::I64 _1a9d3b70e_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1a9d3ba83_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1a9d3c721_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1a970dbe7_ConvError _1a9d3cb94_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1a970dbe7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1b2c6790c:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1b2c67841:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1a9d3c721_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1b2c693ae:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a9d3c721_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1b2c6949c:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a9d3c721_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1b2c6905c:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1b2c68ee6:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1b2c68e19:;
					};
				};
			}
		}
		else {
			_case_begin_1b2c66c5d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1b2c672e1:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1b2c6d3c4:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1b2c6d0a5:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1b2c68611:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1b2c6d03e:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1b2c6d11b:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b2c68ac8:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1b2c6e518:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2c704b4:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1b2c7177e:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1a9d3c721_lower(_1099_c)) && (_1a9d3c721_lower(_1099_c) <= 'z'))) {
						_case_begin_1b2c716b3:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1a9d3c721_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1b2c712a6:;
						{
							goto _iter_next_1b2c704b4;
						}
					}
					else {
						_case_begin_1b2c71240:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1b2c711b8:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1b2c704b4:;
			++it;
			goto _iter_begin_1b2c704b4;
		}
		_iter_end_1b2c704b4:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1a9d3d0c3_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1a970dbe7_ConvError __jule_assign_result = _1a9d3cb94_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1a9d3d579_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1a970dbe7_ConvError __jule_assign_result = _1a9d3cb94_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = static_cast<jule::U64>((_17240_bitSize - 1LL)); ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1a9d3e239_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1a9ceb625_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _20a3cac92_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U64 __jule_y = static_cast<jule::U64>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a3d5bc0_Mul64(_4122_man, _1a9d400a3_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a3d5bc0_Mul64(_4122_man, _1a9d400a3_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1a9ceb625_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a9d3e6ac_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1a9ceb01a_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _20a3cac92_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U64 __jule_y = static_cast<jule::U64>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a3d5bc0_Mul64(_11022_man, _1a9d400a3_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a3d5bc0_Mul64(_11022_man, _1a9d400a3_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1a9ceb01a_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1a9d4148e_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1b2c95451:;
	}
	_iter_end_1b2c95451:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a9d4179c_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1b2c98dd3:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1b2c98e5a;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1b2c98e5a:;
			{
				jule::I64 _887_caseN = _1a9d4148e_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1a9d0472c_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1b2c98ec1:;
			{
				if ((_1a9d4148e_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1a9d04155_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b2c98d39:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a9d41a66_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1b2c9e1d5:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1b2c9e5d1:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1b2c9e16e:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1a9d3c721_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1b2ca4581:;
					{
						goto _iter_next_1b2ca3a14;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1b2ca462a:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1b2ca8244;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1b2ca3a14;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1b2ca4691:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1b2ca3a14;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b2ca3a14;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1a9d3c721_lower(_1383_c))) && (_1a9d3c721_lower(_1383_c) <= 'f'))) {
					_case_begin_1b2ca4707:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1a9d3c721_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b2ca3a14;
					}
				}
				_match_end_1b2ca4493:;
			};
			goto _iter_end_1b2ca3a14;
		}
	_iter_next_1b2ca3a14:;
	}
	_iter_end_1b2ca3a14:;;
	_julec_label_1b2ca8244:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1a9d3c721_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1b2cab8eb;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1b2cab8eb:;
		}
		_iter_end_1b2cab8eb:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1a9d435b2_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U64 __jule_y = _1a9d375c8_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1b2cb4926:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1b2cb498c:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1a9d42979_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1a9d42979_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1b2cb4a03:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1a9d42979_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b2cb4838:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a9d439e1_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U64 __jule_y = _1a9d372cb_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1b2cb8b8e:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1b2cb8c05:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1a9d42ca9_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1a9d42ca9_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1b2cb8c6b:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1a9d42ca9_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b2cb8aa1:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a970dbe7_ConvError _1a9d44085_atofHex(_1a9d36dd0_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1a970dbe7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1b2cbc544:;
	}
	_iter_end_1b2cbc544:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((jule::U64)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1b2cbe821:;
	}
	_iter_end_1b2cbe821:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1b2cbebea:;
	}
	_iter_end_1b2cbebea:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1a9d36dd0_floatInfo_eq(&(*(_55613_flt)), _1a9d372cb_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a9ceb01a_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1a9ceb625_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a970dbe7_ConvError _1a9d4445e_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a970dbe7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a9d4179c_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a9d41a66_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a970dbe7_ConvError __jule_assign_result = _1a9d44085_atofHex(&(_1a9d372cb_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a9d439e1_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a9d3e6ac_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a9d3e6ac_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1aa116bc6_decimal _6676_d = _1aa116bc6_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1a9d4222b_set(&_6676_d, _1e2763384_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a9d4256c_floatBits(&_6676_d, &(_1a9d372cb_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1a9ceb01a_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a970dbe7_ConvError _1a9d446a1_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a970dbe7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a9d4179c_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a9d41a66_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a970dbe7_ConvError __jule_assign_result = _1a9d44085_atofHex(&(_1a9d375c8_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a9d435b2_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a9d3e239_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a9d3e239_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1aa116bc6_decimal _7246_d = _1aa116bc6_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1a9d4222b_set(&_7246_d, _1e2763384_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a9d4256c_floatBits(&_7246_d, &(_1a9d375c8_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1a9ceb625_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a970dbe7_ConvError _1a9d44a25_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a970dbe7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a970dbe7_ConvError __jule_assign_result = _1a9d4445e_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a9d446a1_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1a9d44d99_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a970dbe7_ConvError __jule_assign_result = _1a9d44a25_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1a9d45729_ryuFtoaFixed32(_1a9d37a5c_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _20a3d3360_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U64 __jule_y = static_cast<jule::U64>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1aa113178_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa114a70_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1aa115323_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _942_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U64 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1a9d4650a_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1a9d45bbe_ryuFtoaFixed64(_1a9d37a5c_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _20a3d3629_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U64 __jule_y = static_cast<jule::U64>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1aa113178_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa114e9e_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1aa115323_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _1662_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U64 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1a9d4650a_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1a9d4650a_formatDecimal(_1a9d37a5c_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1a9d46010_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1b2d04b53:;
	}
	_iter_end_1b2d04b53:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((jule::U64)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1b2d07d10:;
	}
	_iter_end_1b2d07d10:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1b2d0d7c7:;
	}
	_iter_end_1b2d0d7c7:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1aa112de2_ryuFtoaShortest(_1a9d37a5c_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1a9d36dd0_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_20a3cc887_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U64 __jule_y = static_cast<jule::U64>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1aa113ec0_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1aa113871_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1aa113ec0_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1aa113178_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1a9d36dd0_floatInfo_eq(&(*(_26168_flt)), _1a9d372cb_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa114a70_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa114a70_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa114a70_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa114e9e_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa114e9e_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa114e9e_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1aa115323_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1aa115323_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1aa115323_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _3252_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1aa113ec0_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1aa113178_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1aa113442_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1aa113871_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1a9d36dd0_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1aa113ec0_ryuDigits(_1a9d37a5c_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1aa1155dc_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1aa1155dc_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1aa1155dc_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1aa114641_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1aa114641_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1b2d2b619:;
		}
		_iter_end_1b2d2b619:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((jule::U64)(9LL - _4287_n));
		_1aa114641_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1b2d2c1ca:;
	}
	_iter_end_1b2d2c1ca:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1b2d2e001:;
	}
	_iter_end_1b2d2e001:;;
}



inline void _1aa114641_ryuDigits32(_1a9d37a5c_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1b2d31894;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1b2d31894:;
	}
	_iter_end_1b2d31894:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1b2d37955:;
	}
	_iter_end_1b2d37955:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1aa114a70_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1a9d400a3_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a3d5bc0_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1aa113442_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1aa114e9e_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1a9d400a3_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1aa113442_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a3d5bc0_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a3d5bc0_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _20a3d43b6_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1aa115323_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1b2d459c9:;
	}
	_iter_end_1b2d459c9:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1aa1155dc_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1aa118524_trim(_1aa116bc6_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1b2d48e50:;
	}
	_iter_end_1b2d48e50:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1aa118810_rightShift(_1aa116bc6_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; (({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U64)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1b2d4c140:;
				}
				_iter_end_1b2d4c140:;;
				goto _iter_end_1b2d4aa56;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1b2d4aa56:;
	}
	_iter_end_1b2d4aa56:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (jule::U64)(static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _28432_k; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1b2d4d53c:;
	}
	_iter_end_1b2d4d53c:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U64)(_2896_n * 10LLU);
		}
	_iter_next_1b2d508d5:;
	}
	_iter_end_1b2d508d5:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1aa118524_trim(_28420_a);
}



inline jule::Bool _1aa118cb6_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1b2d5361e:;
	}
	_iter_end_1b2d5361e:;;
	return false;;
}



inline void _1aa11906e_leftShift(_1aa116bc6_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1aa1165dd_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1aa118cb6_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1aa1165dd_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U64 __jule_x = (jule::U64)(static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U64 __jule_y = _35231_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1b2d56b3e:;
	}
	_iter_end_1b2d56b3e:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1b2d591c4:;
	}
	_iter_end_1b2d591c4:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1aa118524_trim(_35219_a);
}



inline jule::Bool _1aa1193e3_shouldRoundUp(_1aa116bc6_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1aa11ab75_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1aa11b648_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aa11be73_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1aa11b03d_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1aa11b648_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aa11be73_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1aa11b307_Itoa(jule::I64 _819_i) {
	return _1aa11b03d_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1aa11b648_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1e27638d4_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1aa11b8ce_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1aa11be73_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1b2d953db:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ({ jule::U64 __jule_x = (_1547_us % 100LL); jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1b2d96e9d:;
				}
				_iter_end_1b2d96e9d:;;
				jule::U64 _1643_is = ({ jule::U64 __jule_x = _1547_us; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1aa11b8ce_isPowerOfTwo(_10541_base)) {
			_case_begin_1b2d95ae5:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_20a3cbbd8_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (jule::U64)(static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1b2d9ea77:;
				}
				_iter_end_1b2d9ea77:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1b2d94451:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1b2d951bb:;
				}
				_iter_end_1b2d951bb:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1b2d9473c:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1e27638d4_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline jule::Str _1aa11d46e_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1b2db0a11:;
			{
				return _1aa11c98a_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1b2db443d:;
			{
				return _1aa11cc43_SysUint;;
			}
		}
		else {
			_case_begin_1b2db1517:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1b2db466e:;
	};
}



inline jule::I64 _1aa11d738_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1b2db540b:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1b2db586d:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1b2db58d4:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1b2db5472:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1b2db54d8:;
			{
				return _1aa11c68d_BitSize;;
			}
		}
		else {
			_case_begin_1b2db5780:;
			{
				return -1LL;;
			}
		}
		_match_end_1b2db5351:;
	};
}



inline jule::Str _1aa11da79_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b2db8860:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b2db8662:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b2db86c8:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b2db88c6:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1b2db8574:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b2db8156:;
	};
}



inline jule::Str _1aa11dd10_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b2dba125:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b2dba18b:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b2dba202:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b2dba268:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1b2db894d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b2db9c3a:;
	};
}



inline jule::Str _1aa11e0c9_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1b2dbbb3d:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b2dbb90c:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1b2db8c4a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b2dbb500:;
	};
}



inline jule::Bool _1aa11ebce_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1a9d44d99_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1aa11ee98_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1b2dc1a77:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b2dc0bdb:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b2dc14b1:;
	};
}



inline jule::I64 _1aa120262_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1b2dc278c:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1b2dc1d1e:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1b2dc1d85:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b2dc1ca8:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b2dc236e:;
	};
}



inline jule::I64 _1aa12052b_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1b2dc4371:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1b2dc355c:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1b2dc35c3:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b2dc34e6:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b2dc3947:;
	};
}



inline void _1aa1206c4_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1b039943c_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1b2dc4c9a:;
				{
					_1aa11c68d_BitSize=64LLU;
					_1aa11c98a_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1aa11cc43_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1b2dc53c7:;
				{
					_1aa11c68d_BitSize=32LLU;
					_1aa11c98a_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1aa11cc43_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1b2dc52d9:;
		};
	};
}



inline void _1aa12084a_init(void) {
	_1aa1206c4_UpdateTarget();
}



inline jule::I64 _1aa1244a8_MinI(jule::Str _6113_k) {
	_6113_k=_1aa11d46e_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1b2dc784c:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1b2dc7b5a:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1b2dc7bc1:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1b2dc7c37:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1b2dc4706:;
			{
				return 0LL;;
			}
		}
		_match_end_1b2dc47c2:;
	};
}



inline jule::I64 _1aa1247b6_MaxI(jule::Str _7913_k) {
	_7913_k=_1aa11d46e_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1b2dc9277:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1b2dc95da:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1b2dc9662:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1b2dc96d9:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1b2dc8bd3:;
			{
				return 0LL;;
			}
		}
		_match_end_1b2dc8b6c:;
	};
}



inline jule::U64 _1aa124a80_MaxU(jule::Str _9713_k) {
	_9713_k=_1aa11d46e_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1b2dcac07:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1b2dcb06a:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1b2dcb0e2:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1b2dcb169:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1b2dca663:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b2dca5ec:;
	};
}



inline jule::F64 _1aa124dc1_Min(jule::Str _11512_k) {
	_11512_k=_1aa11d46e_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1aa1244a8_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1b2dcd743:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1b2dccb93:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1b2dcce07:;
			{
				return 0LL;;
			}
		}
		_match_end_1b2dccb2c:;
	};
}



inline jule::F64 _1aa125157_Max(jule::Str _13312_k) {
	_13312_k=_1aa11d46e_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1aa1247b6_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1aa124a80_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1b2dd0c51:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1b2dd0129:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1b2dd0415:;
			{
				return 0LL;;
			}
		}
		_match_end_1b2dd00b3:;
	};
}



inline jule::Bool _1aa12817c_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1aa12848a_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1aa128754_IsInt(jule::Str _4610_k) {
	return (_1aa12817c_IsSigInt(_4610_k) || _1aa12848a_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1aa128a95_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1aa128d2b_IsNum(jule::Str _5610_k) {
	return (_1aa128754_IsInt(_5610_k) || _1aa128a95_IsFloat(_5610_k));;
}



inline jule::Bool _1aa1290e5_IsSigNum(jule::Str _6113_k) {
	return (_1aa12817c_IsSigInt(_6113_k) || _1aa128a95_IsFloat(_6113_k));;
}



inline void _1aa1333da_lshiftUnsig(_1aa1293c0_Const* _59021_c, _1aa1293c0_Const* _59032_x) {
	jule::U64 _5912_l = _1aa12bd2e_AsU64(_59021_c);;
	jule::U64 _5922_r = _1aa12bd2e_AsU64(_59032_x);;
	_1aa12c626_SetU64(_59021_c, ({ jule::U64 __jule_x = _5912_l; jule::U64 __jule_y = _5922_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1aa13371a_rshiftUnsig(_1aa1293c0_Const* _59621_c, _1aa1293c0_Const* _59632_x) {
	jule::U64 _5972_l = _1aa12bd2e_AsU64(_59621_c);;
	jule::U64 _5982_r = _1aa12bd2e_AsU64(_59632_x);;
	_1aa12c626_SetU64(_59621_c, ({ jule::U64 __jule_x = _5972_l; jule::U64 __jule_y = _5982_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Bool _1ac491a10_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1ac3e2686_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2eee006:;
		if (it != expr_end) {
			jule::U64 *_3359_op = it;
			{
				if ((_33414_id == (*(_3359_op)))) {
					return true;;
				};
			}
			_iter_next_1b2eee006:;
			++it;
			goto _iter_begin_1b2eee006;
		}
		_iter_end_1b2eee006:;
	};
	return false;;
}



inline jule::Bool _1ac491d1d_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1ac3e29b6_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2eee534:;
		if (it != expr_end) {
			jule::U64 *_3459_op = it;
			{
				if ((_34412_id == (*(_3459_op)))) {
					return true;;
				};
			}
			_iter_next_1b2eee534:;
			++it;
			goto _iter_begin_1b2eee534;
		}
		_iter_end_1b2eee534:;
	};
	return false;;
}



inline jule::Bool _1ac492428_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1ac4926ae_IsRawStr(_36410_k)));;
}



inline jule::Bool _1ac4926ae_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1ac492978_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1ac49335d_IsFloat(jule::Str _38012_k) {
	if (_1b0966ec1_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1b096c009_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1b096c009_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1ac493627_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3932_b = _38810_k[0LL];;
	return ((_3932_b == '.') || (('0' <= _3932_b) && (_3932_b <= '9')));;
}



inline jule::Bool _1ac493baa_IsIgnoreIdent(jule::Str _40318_ident) {
	return (_40318_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1ac493e74_IsAnonIdent(jule::Str _40616_ident) {
	return (_40616_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1ac494507_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1ac3e239a_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3006b24:;
		if (it != expr_end) {
			jule::I32 *_4209_cr = it;
			{
				if ((_41912_r == (*(_4209_cr)))) {
					return true;;
				};
			}
			_iter_next_1b3006b24:;
			++it;
			goto _iter_begin_1b3006b24;
		}
		_iter_end_1b3006b24:;
	};
	return false;;
}



inline jule::Bool _1ac494a02_IsLetter(jule::I32 _42913_r) {
	return _1c80963c9_IsLetter(_42913_r);;
}



inline jule::Bool _1ac494e75_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1ac49523e_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1ac495508_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1ac4957c2_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1b300a72c:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1b300a7c6:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1b300a84d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b300a6b6:;
			{
				return false;;
			}
		}
		_match_end_1b300a4c9:;
	};
}



inline jule::Bool _1ac495a8b_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1ac495d55_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1ac48a7a6_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b300d4dd:;
		if (it != expr_end) {
			jule::U64 *_4869_op = it;
			{
				if ((_48516_id == (*(_4869_op)))) {
					return true;;
				};
			}
			_iter_next_1b300d4dd:;
			++it;
			goto _iter_begin_1b300d4dd;
		}
		_iter_end_1b300d4dd:;
	};
	return false;;
}



inline jule::Bool _1ac49611e_IsAssignOp(jule::U64 _49515_id) {
	if (_1ac495d55_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1ac48aa92_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b300e302:;
		if (it != expr_end) {
			jule::U64 *_4999_op = it;
			{
				if ((_49515_id == (*(_4999_op)))) {
					return true;;
				};
			}
			_iter_next_1b300e302:;
			++it;
			goto _iter_begin_1b300e302;
		}
		_iter_end_1b300e302:;
	};
	return false;;
}



inline jule::Ptr<_1ac496a59_File> _1ac497e34_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1ac496a59_File>(_1ac496a59_File{._field_Path=_5715_path, ._field_Data=jule::Slice<jule::U8>(nullptr), ._field_Tokens=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr)});;
}



inline _1b08b6838_Log _1ac49995d_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1ac496a59_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1b08b6838_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1b08b6c9a_Logf(_10043_fmt, _10056_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1ac499d26_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b301987e:;
		if (it != expr_end) {
			jule::I64 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1b301987e:;
			++it;
			_1146_i++;
			goto _iter_begin_1b301987e;
		}
		_iter_end_1b301987e:;
	};
	return true;;
}



inline jule::Str _1ac49a19a_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1ac494e75_IsDecimal(_1286_b))))) {
				goto _iter_end_1b301c81b;
			};
		}
	_iter_next_1b301c81b:;
	}
	_iter_end_1b301c81b:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1ac49a563_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1ac49a19a_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1ac49a8d7_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1b301e642:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1ac494e75_IsDecimal(_1683_b)) {
					_case_begin_1b30206dc:;
					{
						goto _iter_next_1b301e4ee;
					}
				}
				else if (_1ac49c268_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1b3020786:;
					{
						return _1ac49a563_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1b3020665:;
					{
						goto _iter_end_1b301e4ee;
					}
				}
				_match_end_1b30205dd:;
			};
		}
	_iter_next_1b301e4ee:;
	}
	_iter_end_1b301e4ee:;;
	return jule::Str();;
}



inline jule::Str _1ac49ac5b_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1ac49a19a_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1ac49b0d0_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1ac49a19a_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1ac49b564_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1ac49a19a_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1ac494e75_IsDecimal(_2013_b))))) {
				goto _iter_end_1b302335a;
			};
		}
	_iter_next_1b302335a:;
	}
	_iter_end_1b302335a:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1ac49b7a6_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2176_i = 0LL;;
	_julec_label_1b30254e4:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1b302625e:;
					{
						__jule_func_result = _1ac49b564_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1b3026308:;
					{
						goto _iter_next_1b3025637;
					}
				}
				else if (_1ac49bde4_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1b302636e:;
					{
						__jule_func_result = _1ac49a19a_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1ac494e75_IsDecimal(_2203_b)))) {
					_case_begin_1b30263d5:;
					{
						goto _iter_end_1b3025637;
					}
				}
				_match_end_1b3026171:;
			};
		}
	_iter_next_1b3025637:;
	}
	_iter_end_1b3025637:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1ac49ba70_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1ac499d26_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1ac49523e_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1b3028b13;
			};
		}
	_iter_next_1b3028b13:;
	}
	_iter_end_1b3028b13:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1ac49bde4_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1ac49c268_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1ac49c5dc_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1b302b9a1:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1ac494e75_IsDecimal(_2763_b)) {
					_case_begin_1b302c6b6:;
					{
						goto _iter_next_1b302b51c;
					}
				}
				else if (_1ac49c268_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1b302c760:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1b302c63e:;
					{
						goto _iter_end_1b302b51c;
					}
				}
				_match_end_1b302c5b7:;
			};
		}
	_iter_next_1b302b51c:;
	}
	_iter_end_1b302b51c:;;
	return false;;
}



inline jule::Bool _1ac49c961_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1b302d6b7:;
			{
				goto _case_begin_1b302d376;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1b302d376:;
			{
				goto _case_begin_1b302d750;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1b302d750:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b302d2cc:;
			{
				return true;;
			}
		}
		_match_end_1b302d200:;
	};
}



inline jule::Bool _1ac49ccd5_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1b30302e0:;
			{
				goto _case_begin_1b3030356;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1b3030356:;
			{
				goto _case_begin_1b30303bc;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1b30303bc:;
			{
				goto _case_begin_1b3030444;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1b3030444:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b3030224:;
			{
				return true;;
			}
		}
		_match_end_1b302ecc3:;
	};
}



inline jule::Str _1ac49d2d0_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I64 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1ac49b564_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1ac49bde4_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1ac49a19a_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1ac495508_IsOctal(_3393_b))))) {
				goto _iter_end_1b3033b95;
			};
		}
	_iter_next_1b3033b95:;
	}
	_iter_end_1b3033b95:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1ac49d4ab_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3696_i = 2LL;;
	_julec_label_1b303845d:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1ac49c961_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1b30390c9:;
					{
						__jule_func_result = _1ac49b0d0_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1ac49ccd5_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1b3039173:;
					{
						__jule_func_result = _1ac49ac5b_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1ac49c268_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1b30391d9:;
					{
						__jule_func_result = _1ac49a563_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1ac49c5dc_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1b3039250:;
					{
						__jule_func_result = _1ac49a8d7_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1ac4957c2_IsHex(_3723_b))))) {
					_case_begin_1b30392b6:;
					{
						goto _iter_end_1b3038507;
					}
				}
				_match_end_1b3038eca:;
			};
		}
	_iter_next_1b3038507:;
	}
	_iter_end_1b3038507:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1ac49d80d_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1ac4957c2_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1b303adcd:;
	}
	_iter_end_1b303adcd:;;
	__jule_func_result=__jule_bytesToStr((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1ac49dac7_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1ac49d80d_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1ac49dd91_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1ac49d80d_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1ac49e15a_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1ac49d80d_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1ac49e424_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1ac495508_IsOctal((*(_42616_txt))[1LL]))) || (!(_1ac495508_IsOctal((*(_42616_txt))[2LL])))) || (!(_1ac495508_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1b08b6838_Log> _1ac4a4418_Lex(jule::Ptr<_1ac496a59_File> _80612_f, jule::I64 _80622_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1ac49eb94_lex _8116_lex = _1ac49eb94_lex{._field_mode=_80622_mode, ._field_tokens=jule::Slice<jule::Ptr<_1ac4912c3_Token>>(nullptr), ._field_file=_80612_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1b08b6838_Log>(nullptr)};;
	_1ac4a29dd_newLine(&_8116_lex);
	_1ac4a07bb_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1ac574373_FindModuleFile(jule::Slice<jule::Ptr<_1ae66a753_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30be2e6:;
		if (it != expr_end) {
			jule::Ptr<_1ae66a753_DirEntry> *_149_d = it;
			{
				if (((!(_1ae66eb20_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*((*(_149_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1b30be2e6:;
			++it;
			goto _iter_begin_1b30be2e6;
		}
		_iter_end_1b30be2e6:;
	};
	return false;;
}



inline jule::Str _1ac57462b_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1ae66a753_DirEntry>> _277_dirents = ({
				auto except = static__1b098c2e3_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1b30c0490;
				} jule::Slice<jule::Ptr<_1ae66a753_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1ac574373_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_1b0989d6d_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1b30c0490;
			};
		}
	_iter_next_1b30c0490:;
	}
	_iter_end_1b30c0490:;;
	return jule::Str();;
}



inline jule::Slice<_1b08b6838_Log> _1ac5748e5_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__1ae66d107_Read(_1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4721_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1b08b6838_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b08b6838_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _1b096dcdb_Trim(_1e276361a_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1b08b6838_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1b08b6838_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1ac575242_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec8d12_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1b09249a6_IsUpper(_142_r);;
}



inline jule::Bool _1ac5c3ed8_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1ac5de113_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1ac5dec6d_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec8d12_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1ac5de322_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1ac5de663_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30cb7ed:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1b30cb7ed;
				};
			}
			_iter_next_1b30cb7ed:;
			++it;
			goto _iter_begin_1b30cb7ed;
		}
		_iter_end_1b30cb7ed:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1ac5e0114_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec8d12_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1c7ec9dac_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1b30cc9b9:;
	}
	_iter_end_1b30cc9b9:;;
	return _1e27638d4_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1ac5de8e9_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1b30d0bed:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b30d1407:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b30d146d:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1b30d14d4:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1b30d154a:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b30d15c2:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1b30d1649:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1b30d16c1:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1b30d1748:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1b30d17c0:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1b30d1270:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1ac5dec6d_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1ac5de8e9_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1b30d6440:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1a9d3d0c3_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b30d671a:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1a9d3d0c3_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b30d6792:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1a9d3d0c3_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1b30d5010:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1a9d3d0c3_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1b30d5252:;
	};
}



inline void _1ac5e0114_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1ac5dec6d_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1c7ec9dac_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1ac723434_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I64 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec89c1_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1b31120a3:;
	}
	_iter_end_1b31120a3:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ac7237ec_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _292_start = (*(_2824_i));;
	jule::I64 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I64 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c7ec89c1_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1b3114a34:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1b3114ca9:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1b3114979:;
			};
		}
	_iter_next_1b3113ca8:;
	}
	_iter_end_1b3113ca8:;;
	return nullptr;;
}



inline void _1ac723ad8_FmtByDefault(_1b097ade7_StrBuilder* _4822_buf, jule::Any* _4840_arg) {
	if (((*(_4840_arg)) == nullptr)) {
		_1b0984be2_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4840_arg)) };
		
		if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1b3114072:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1a9d380e0_FmtFloat(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F32>(&__jule_any_type137)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b3116d66:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1a9d380e0_FmtFloat((*(_4840_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1b3116dcc:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1aa11b03d_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I8>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1b31163a4:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1aa11b03d_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I16>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b311641a:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1aa11b03d_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b3116481:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1aa11b03d_FmtInt((*(_4840_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1b31164e7:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1aa11ab75_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1b3116edc:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1aa11ab75_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U16>(&__jule_any_type140)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1b3117053:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1aa11ab75_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U32>(&__jule_any_type141)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b31170b9:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1aa11ab75_FmtUint((*(_4840_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b3117130:;
			{
				_1b0984be2_WriteStr(_4822_buf, (*(_4840_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b3117196:;
			{
				if ((*(_4840_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1b0984be2_WriteStr(_4822_buf, jule::Str::lit("true", 4));
				} else {
					_1b0984be2_WriteStr(_4822_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1b3115d10:;
			{
				_1b0984be2_WriteStr(_4822_buf, _1ac29eaa4_toStr((*(_4840_arg))));
			}
		}
		_match_end_1b3115c99:;
	};
}



inline void _1ac724006_applyFmtByDefault(_1b097ade7_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args) {
	jule::Any _882_arg = _8757_args[(*(_8749_j))];;
	((*(_8749_j)))++;
	_1ac723ad8_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1ac724424_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1b097ade7_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1ac724006_applyFmtByDefault(_9536_buf, _9558_j, _9566_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_1b0984be2_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1b0984939_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Slice<jule::U8> _1ac724798_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _1e2763384_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1216_i = _1ac723434_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1256_j = 0LL;;
	jule::I64 _1266_last = 0LL;;
	_1b097ade7_StrBuilder _1276_buf = static__1b097b1e4_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1ac723434_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			_1b0984939_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
			jule::Slice<jule::U8> _1307_format = _1ac7237ec_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1b312423b;
			};
			_1ac724424_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				_1b0984939_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1b312423b;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1b312423b:;
	}
	_iter_end_1b312423b:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		_1b0984939_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
	};
	return _1b0985e8a_Buf(&_1276_buf);;
}



inline jule::Str _1ac7267bc_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1e27638d4_StrFromBytes(_1ac724798_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac15ae05_runtimeFindFn(jule::Ptr<_1ac557cd5_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1ac4dbd46_Fn> _126_f = _1ac5593e1_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1ac4c767d_Struct> _1ac15b455_runtimeFindStruct(jule::Ptr<_1ac557cd5_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1ac4c767d_Struct> _256_f = _1ac558ee5_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 101) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1ac4e21d1_parameterUsesGenerics(jule::Ptr<_1ac4ddc9e_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>* _39546_generics) {
	if (_1ac4da9c1_IsSelf((*((*(_39531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1ac65948b_kindUsesGenerics(&((*((*(_39531_p))))._field_Kind), _39546_generics);;
}



inline jule::Ptr<_1ac6459e9_TypeSymbol> _1ac4e490e_buildType(jule::Ptr<_1ac4a677d_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=_9418_t, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr)});;
}



inline jule::Ptr<_1ac60b6d5_Value> _1ac4e4c1c_buildExpr(jule::Ptr<_1ac4aaab2_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=_10318_expr, ._field_Data=jule::Ptr<_1ac60a55d_Data>(nullptr)});;
}



inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac4e4ed6_buildTypeAlias(jule::Ptr<_1ac4bd29a_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1ac63c4e6_TypeAlias>(_1ac63c4e6_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1ac4e490e_buildType((*_11223_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1ac4c4757_Field> _1ac4e5327_buildField(jule::Ptr<_1ac4c1b50_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1ac4c4757_Field>(_1ac4c4757_Field{._field_Owner=jule::Ptr<_1ac4c767d_Struct>(nullptr), ._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1ac4e490e_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1ac4c4757_Field>> _1ac4e55ad_buildFields(jule::Slice<jule::Ptr<_1ac4c1b50_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1ac4c4757_Field>> _1356_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4c4757_Field>>::alloc(0LL, (*(_13421_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4c4757_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b34465d5:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c1b50_FieldDecl> _13614_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac4c4757_Field>> &__jule_push_dest = _1356_fields; __jule_push_dest.push(_1ac4e5327_buildField(_13614_decl)); };
			}
			_iter_next_1b34465d5:;
			++it;
			goto _iter_begin_1b34465d5;
		}
		_iter_end_1b34465d5:;
	};
	return _1356_fields;;
}



inline jule::Ptr<_1ac4c767d_Struct> _1ac4e5877_buildStruct(jule::Ptr<_1ac4c2546_StructDecl> _14220_decl) {
	return jule::new_ptr<_1ac4c767d_Struct>(_1ac4c767d_Struct{._field_sema=jule::Ptr<_1ac578256_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1ac4c767d_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1ac4c767d_Struct>>(nullptr), ._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1ac4e55ad_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1ac5008a4_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1ac4ca4d8_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1ac4da372_Param> _1ac4e5b41_buildParam(jule::Ptr<_1ac4b6edb_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1ac4da372_Param>(_1ac4da372_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1ac4e490e_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1ac4da372_Param>> _1ac4e601a_buildParams(jule::Slice<jule::Ptr<_1ac4b6edb_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1ac4da372_Param>> _1666_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4da372_Param>>::alloc(0LL, (*(_16521_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4da372_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b344a60b:;
		if (it != expr_end) {
			jule::Ptr<_1ac4b6edb_ParamDecl> _16714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac4da372_Param>> &__jule_push_dest = _1666_params; __jule_push_dest.push(_1ac4e5b41_buildParam(_16714_decl)); };
			}
			_iter_next_1b344a60b:;
			++it;
			goto _iter_begin_1b344a60b;
		}
		_iter_end_1b344a60b:;
	};
	return _1666_params;;
}



inline jule::Ptr<_1ac4d9b57_RetType> _1ac4e625c_buildRetType(jule::Ptr<_1ac4a9671_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac4d9b57_RetType>(_1ac4d9b57_RetType{._field_Kind=_1ac4e490e_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac4e6526_buildFunc(jule::Ptr<_1ac4b843d_FnDecl> _18318_decl) {
	return jule::new_ptr<_1ac4dbd46_Fn>(_1ac4dbd46_Fn{._field_sema=jule::Ptr<_1ac578256_sema>(nullptr), ._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1ac4e625c_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1ac4e601a_buildParams(&((*_18318_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1ac4c767d_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1ac4dee04_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1ac4dbd46_Fn>> _1ac4e67e0_buildMethods(jule::Slice<jule::Ptr<_1ac4b843d_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1ac4dbd46_Fn>> _2026_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>::alloc(0LL, (*(_20122_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4dbd46_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3450688:;
		if (it != expr_end) {
			jule::Ptr<_1ac4b843d_FnDecl> _20314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac4dbd46_Fn>> &__jule_push_dest = _2026_methods; __jule_push_dest.push(_1ac4e6526_buildFunc(_20314_decl)); };
			}
			_iter_next_1b3450688:;
			++it;
			goto _iter_begin_1b3450688;
		}
		_iter_end_1b3450688:;
	};
	return _2026_methods;;
}



inline jule::Slice<jule::Ptr<_1ac6459e9_TypeSymbol>> _1ac4e6aa9_buildTraitInherits(jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1ac6459e9_TypeSymbol>> _2106_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac6459e9_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac6459e9_TypeSymbol>(nullptr); __jule_collection; });;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b34517cc:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a677d_TypeDecl> _21114_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac6459e9_TypeSymbol>> &__jule_push_dest = _2106_symbols; __jule_push_dest.push(_1ac4e490e_buildType(_21114_it)); };
			}
			_iter_next_1b34517cc:;
			++it;
			goto _iter_begin_1b34517cc;
		}
		_iter_end_1b34517cc:;
	};
	return _2106_symbols;;
}



inline jule::Ptr<_1ac5008a4_Trait> _1ac4e6d73_buildTrait(jule::Ptr<_1ac4c2c83_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1ac5008a4_Trait>(_1ac5008a4_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1ac4e6aa9_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1ac4e67e0_buildMethods(&((*_21719_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1ac4c767d_Struct>>(nullptr)});;
}



inline jule::Ptr<_1ac502543_EnumItem> _1ac4e713c_buildEnumItem(jule::Ptr<_1ac4bed3a_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1ac502543_EnumItem>(_1ac502543_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1ac4e4c1c_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1ac502543_EnumItem>> _1ac4e7406_buildEnumItems(jule::Slice<jule::Ptr<_1ac4bed3a_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1ac502543_EnumItem>> _2366_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac502543_EnumItem>>::alloc(0LL, (*(_23524_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac502543_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3454a44:;
		if (it != expr_end) {
			jule::Ptr<_1ac4bed3a_EnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac502543_EnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1ac4e713c_buildEnumItem(_23714_decl)); };
			}
			_iter_next_1b3454a44:;
			++it;
			goto _iter_begin_1b3454a44;
		}
		_iter_end_1b3454a44:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1ac5030b0_Enum> _1ac4e7901_buildEnum(jule::Ptr<_1ac4c08eb_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1ac5030b0_Enum>(_1ac5030b0_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1ac4e490e_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1ac4e7406_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1ac5041e3_TypeEnumItem> _1ac4e7acc_buildTypeEnumItem(jule::Ptr<_1ac4c1226_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1ac5041e3_TypeEnumItem>(_1ac5041e3_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1ac4e490e_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1ac5041e3_TypeEnumItem>> _1ac4e7d74_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ac4c1226_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1ac5041e3_TypeEnumItem>> _2626_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5041e3_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5041e3_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3457cab:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c1226_TypeEnumItemDecl> _26314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac5041e3_TypeEnumItem>> &__jule_push_dest = _2626_items; __jule_push_dest.push(_1ac4e7acc_buildTypeEnumItem(_26314_decl)); };
			}
			_iter_next_1b3457cab:;
			++it;
			goto _iter_begin_1b3457cab;
		}
		_iter_end_1b3457cab:;
	};
	return _2626_items;;
}



inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac4e813d_buildTypeEnum(jule::Ptr<_1ac4c1886_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1ac5047ba_TypeEnum>(_1ac5047ba_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1ac4e7d74_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac4e8407_buildVar(jule::Ptr<_1ac4b95e8_VarDecl> _27817_decl) {
	return jule::new_ptr<_1ac5a2527_Var>(_1ac5a2527_Var{._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1ac4e490e_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1ac4e4c1c_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1ac4e33ad_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1ac5a2527_Var>> _1ac4e86c1_buildVars(jule::Slice<jule::Ptr<_1ac4b95e8_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1ac5a2527_Var>> _2966_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac5a2527_Var>>::alloc(0LL, _29518_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac5a2527_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b345c5c9:;
		if (it != expr_end) {
			jule::Ptr<_1ac4b95e8_VarDecl> _29714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac5a2527_Var>> &__jule_push_dest = _2966_vars; __jule_push_dest.push(_1ac4e8407_buildVar(_29714_decl)); };
			}
			_iter_next_1b345c5c9:;
			++it;
			goto _iter_begin_1b345c5c9;
		}
		_iter_end_1b345c5c9:;
	};
	return _2966_vars;;
}



inline jule::Ptr<_1ac5306e7_Impl> _1ac4e898a_buildImpl(jule::Ptr<_1ac4c33e3_Impl> _30318_decl) {
	return jule::new_ptr<_1ac5306e7_Impl>(_1ac5306e7_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1ac4e67e0_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1ac4e86c1_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1ac4eed9d_isImplicitImport(jule::Ptr<_1ac557cd5_ImportInfo> _78821_imp) {
	return ((*(_78821_imp))._field_Token == nullptr);;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac52acca_buildAsComptimeMethodData(jule::Ptr<_1ac4dee04_FnIns>* _203035_f) {
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac557cd5_ImportInfo> _1ac52aed9_findComptimePackage(jule::Ptr<_1ac578256_sema>* _203829_s) {
	return _1ac57872e_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1ac557cd5_ImportInfo>>((void*)__jule_anon1b29772ed, nullptr, nullptr));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac52b35d_buildComptimeTypeInfoData(jule::Ptr<_1ac578256_sema>* _204435_s, jule::Ptr<_1ac63d2d8_TypeKind>* _204450_t) {
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac577ac4_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac52b69e_buildComptimeValue(jule::Ptr<_1ac60a55d_Data>* _205228_d) {
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac51d1eb_comptimeValue>(_1ac51d1eb_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Str _1ac52e691_toStrConstraints(jule::Ptr<_1ac63b902_InsGeneric> _14321_g) {
	_1b097ade7_StrBuilder _1446_sb = static__1b097b1e4_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2a44464:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1ac63d2d8_TypeKind> *_1459_c = it;
			{
				_1b0984be2_WriteStr(&_1446_sb, _1ac63d6d4_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_1b0984be2_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1b2a44464:;
			++it;
			_1456_i++;
			goto _iter_begin_1b2a44464;
		}
		_iter_end_1b2a44464:;
	};
	return _1b09854d9_Str(&_1446_sb);;
}



inline jule::Bool _1ac52ea59_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1ac63d2d8_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1b2a46323:;
			{
				jule::Ptr<_1ac646401_Prim> _1573_prim = _1ac64098e_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1aa1290e5_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1b2a46389:;
			{
				jule::Ptr<_1ac646401_Prim> _1633_prim = _1ac64098e_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1aa12848a_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1b2a46400:;
			{
				jule::Ptr<_1ac646401_Prim> _1693_prim = _1ac64098e_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1aa128a95_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1b2a46477:;
			{
				jule::Ptr<_1ac646401_Prim> _1753_prim = _1ac64098e_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1aa128d2b_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1b2a46653:;
			{
				return _1ac63ebbe_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1b2a466b9:;
			{
				return (!(_1ac63ebbe_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1b2a46730:;
			{
				return _1ac63e938_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1b2a46796:;
			{
				return _1ac63ee55_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1b2a44c39:;
			{
				return false;;
			}
		}
		_match_end_1b2a461be:;
	};
}



inline jule::Bool _1ac52ed23_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1ac52ca57_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2a4c2a2:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1b2a4c2a2:;
			++it;
			goto _iter_begin_1b2a4c2a2;
		}
		_iter_end_1b2a4c2a2:;
	};
	return false;;
}



inline jule::Ptr<_1ac53c25e_scopeChecker> _1ac53292a_newScopeCheckerBase(jule::Ptr<_1ac578256_sema>* _5829_s, jule::Ptr<_1ac4dee04_FnIns> _5843_owner) {
	return jule::new_ptr<_1ac53c25e_scopeChecker>(_1ac53c25e_scopeChecker{._field_calledFrom=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_parent=jule::Ptr<_1ac53c25e_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1ac604d93_SymbolTable>(_1ac604d93_SymbolTable{._field_File=jule::Ptr<_1ac496a59_File>(nullptr), ._field_Passes=jule::Slice<_1ac4e459b_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1ac4c767d_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1ac5008a4_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1ac5030b0_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1ac5047ba_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1ac5306e7_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_tree=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1ac5a2527_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1ac53b26e_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1ac53817d_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1ac53c25e_scopeChecker> _1ac532ce3_newScopeChecker(jule::Ptr<_1ac578256_sema>* _6625_s, jule::Ptr<_1ac4dee04_FnIns> _6639_owner) {
	jule::Ptr<_1ac53c25e_scopeChecker> _676_base = _1ac53292a_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_676_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ac53b26e_scopeLabel>>>(nullptr);
	(*_676_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ac53817d_GotoSt>>>(nullptr);
	return _676_base;;
}



inline jule::Ptr<_1ac53b26e_scopeLabel> _1ac533167_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1ac53c25e_scopeChecker> _7637_scope) {
	jule::Ptr<_1ac53b26e_scopeLabel> _776_label = _1ac54162b_findLabelScope(_7637_scope, _7621_ident);;
	while ((_776_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_776_label=_1ac54162b_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1b2a67e38:;
	}
	_iter_end_1b2a67e38:;;
	return _776_label;;
}



inline jule::Slice<jule::Ptr<_1ac60a55d_Data>> _1ac5334a8_getDatasFromTupleData(jule::Ptr<_1ac60a55d_Data>* _8831_d) {
	if ((_1ac6427b5_Tup((*((*(_8831_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_8831_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type83) {
				_case_begin_1b2a6c6ce:;
				{
					return (*((*((*(_8831_d))))._field_Model.unsafe_cast_ptr<_1ac4d4dd8_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1b2a69c81:;
				{
					jule::Ptr<_1ac64b4e4_Tuple> _948_t = _1ac6427b5_Tup((*((*(_8831_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1ac60a55d_Data>> _958_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac60a55d_Data>>::alloc(0LL, (*(_948_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac60a55d_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_948_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b2a6b579:;
						if (it != expr_end) {
							jule::Ptr<_1ac63d2d8_TypeKind> _9616_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1ac60a55d_Data>> &__jule_push_dest = _958_r; __jule_push_dest.push(jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_9616_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})); };
							}
							_iter_next_1b2a6b579:;
							++it;
							goto _iter_begin_1b2a6b579;
						}
						_iter_end_1b2a6b579:;
					};
					return _958_r;;
				}
			}
			_match_end_1b2a69c1a:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac60a55d_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8831_d)); __jule_collection; });;
	};
}



inline jule::Bool _1ac533c28_checkMut(jule::Ptr<_1ac578256_sema>* _12318_s, jule::Ptr<_1ac60a55d_Data>* _12329_left, jule::Ptr<_1ac60a55d_Data> _12346_right, jule::Ptr<_1ac4912c3_Token> _12360_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_12329_left))))._field_Mutable))) {
			_case_begin_1b2a75c37:;
			{
				_1ac57b15a_pushErr((*(_12318_s)).ptr(), _12360_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_12346_right != nullptr) && (!((*_12346_right.alloc)._field_Mutable))) && _1ac63ebbe_Mutable((*_12346_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1b2a76144:;
			{
				if ((((*(_12360_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1ac642012_Struct((*(_12346_right))._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1ac57b15a_pushErr((*(_12318_s)).ptr(), _12360_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_12346_right))._field_Kind), &__jule_any_type4); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b2a75bc1:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b2a75b16:;
	};
}



inline jule::Bool _1ac534212_checkAssign(jule::Ptr<_1ac578256_sema>* _14221_s, jule::Ptr<_1ac60a55d_Data>* _14236_left, jule::Ptr<_1ac60a55d_Data> _14253_right, jule::Ptr<_1ac4912c3_Token> _14267_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac4dee04_FnIns> _1432_f = _1ac641c7b_Fn((*((*(_14236_left))))._field_Kind.ptr());;
	if ((((_1432_f != nullptr) && ((*_1432_f.alloc)._field_Decl != nullptr)) && (*(*(_1432_f))._field_Decl.alloc)._field_Global)) {
		_1ac57b15a_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1ac60ae98_IsConst((*(_14236_left)).ptr())) {
			_case_begin_1b2a7b8ca:;
			{
				_1ac57b15a_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1ac57b4bd_pushSuggestion((*(_14221_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_14236_left))))._field_Lvalue))) {
			_case_begin_1b2a7b974:;
			{
				_1ac57b15a_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1ac533c28_checkMut(_14221_s, _14236_left, _14253_right, _14267_op)))) {
			_case_begin_1b2a7b9eb:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b2a7b864:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b2a7b710:;
	};
}



inline jule::Bool _1ac5345db_isValidAstStForNextSt(jule::Any* _16431_n) {
	{
		auto &_match_expr{ (*(_16431_n)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b2a6e46c:;
			{
				return (!((*((*(_16431_n)).cast_ptr<_1ac4b522b_AssignSt>(&__jule_any_type65)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b2a7e04d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b2a7de2c:;
			{
				return false;;
			}
		}
		_match_end_1b2a7ba84:;
	};
}



inline jule::Bool _1ac53482d_isValidStForNextSt(jule::Any* _17524_st) {
	{
		auto &_match_expr{ (*(_17524_st)) };
		
		if (_match_expr.type == &__jule_any_type49 || _match_expr.type == &__jule_any_type50 || _match_expr.type == &__jule_any_type53) {
			_case_begin_1b2a7e2b2:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b2a855e8:;
			{
				{
					auto &_match_expr{ (*((*(_17524_st)).cast_ptr<_1ac60a55d_Data>(&__jule_any_type31)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type40) {
						_case_begin_1b2a90d0c:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b2a91e95:;
						{
							return false;;
						}
					}
					_match_end_1b2a91e2e:;
				};
			}
		}
		else {
			_case_begin_1b2a81c32:;
			{
				return false;;
			}
		}
		_match_end_1b2a8377d:;
	};
}



inline jule::U64 _1ac54e9ad_removeEqFromOp(jule::U64 _216619_op) {
	{
		auto &_match_expr{ _216619_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b2a95608:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b2a919ab:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b2a91a22:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b2a9566e:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b2a956d5:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b2a95839:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b2a958a0:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b2a95916:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b2a8d3ae:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b2a8d425:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1b2a9210a:;
			{
				return _216619_op;;
			}
		}
		_match_end_1b2a91c31:;
	};
}



inline void _1ac54ebde_makeComptimeRange(jule::Ptr<_1ac60a55d_Data>* _219527_d) {
	{
		
		if ((_1ac642cd2_comptimeStructFields((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a9489e:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5071e6_comptimeRange>(_1ac5071e6_comptimeRange{._field_kind=jule::Trait(_1ac642cd2_comptimeStructFields((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data5)});
			}
		}
		else if ((_1ac6432ee_comptimeEnumFields((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a99277:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5071e6_comptimeRange>(_1ac5071e6_comptimeRange{._field_kind=jule::Trait(_1ac6432ee_comptimeEnumFields((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data5)});
			}
		}
		else if ((_1ac6440be_comptimeTypeInfos((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a992dd:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5071e6_comptimeRange>(_1ac5071e6_comptimeRange{._field_kind=jule::Trait(_1ac6440be_comptimeTypeInfos((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data5)});
			}
		}
		else if ((_1ac64381b_comptimeParams((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a94915:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5071e6_comptimeRange>(_1ac5071e6_comptimeRange{._field_kind=jule::Trait(_1ac64381b_comptimeParams((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data5)});
			}
		}
		else if ((_1ac6445db_comptimeStatics((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a9497b:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5071e6_comptimeRange>(_1ac5071e6_comptimeRange{._field_kind=jule::Trait(_1ac6445db_comptimeStatics((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data5)});
			}
		}
		else if ((_1ac645642_comptimeFiles((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a949e2:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5071e6_comptimeRange>(_1ac5071e6_comptimeRange{._field_kind=jule::Trait(_1ac645642_comptimeFiles((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data5)});
			}
		}
		else if ((_1ac645125_comptimeDecls((*((*(_219527_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2a9984e:;
			{
				(*((*(_219527_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5071e6_comptimeRange>(_1ac5071e6_comptimeRange{._field_kind=jule::Trait(_1ac645125_comptimeDecls((*((*(_219527_d))))._field_Kind), (jule::Trait::Type*)&_1ac506ec6_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1b2a94838:;
			{
				(*((*(_219527_d))))._field_Decl=true;
			}
		}
		_match_end_1b2a98e47:;
	};
}



inline jule::Bool _1ac54eea8_canComptimeMatch(jule::Ptr<_1ac60a55d_Data>* _221826_d) {
	if ((!(_1ac603e91_isGoodValueToInfer(_221826_d)))) {
		return false;;
	};
	return (_1ac60ae98_IsConst((*(_221826_d)).ptr()) || (_1ac644355_comptimeTypeInfo((*((*(_221826_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1ac550272_stmtIsDef(jule::Any* _222615_stmt) {
	{
		auto &_match_expr{ (*(_222615_stmt)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b36b3d2a:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b36b6415:;
			{
				jule::Ptr<_1ac538eb4_MultiAssign> _22313_ma = (*(_222615_stmt)).cast_ptr<_1ac538eb4_MultiAssign>(&__jule_any_type53);;
				return ((*(_22313_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1b36b5ec5:;
			{
				return false;;
			}
		}
		_match_end_1b36b5e3c:;
	};
}



inline jule::I64 _1ac5505e6_countMatchType(jule::Ptr<_1ac539701_Match>* _223820_m, jule::Ptr<_1ac63d2d8_TypeKind>* _223832_t) {
	jule::I64 _22396_n = 0LL;;
	_julec_label_1b36b7a98:;
	{
		auto expr = &((*((*(_223820_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b36b7eb6:;
		if (it != expr_end) {
			jule::Ptr<_1ac53a229_Case> *_22419_c = it;
			{
				if (((*(_22419_c)) == nullptr)) {
					goto _iter_next_1b36b7eb6;
				};
				{
					auto expr = &((*((*(_22419_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b36b8cb9:;
					if (it != expr_end) {
						jule::Ptr<_1ac60a55d_Data> *_224510_expr = it;
						{
							if (((*(_224510_expr)) == nullptr)) {
								goto _iter_end_1b36b7eb6;
							};
							if (_1ac63da25_Equal((*(_223832_t)), (*((*(_224510_expr))))._field_Model.cast_ptr<_1ac63d2d8_TypeKind>(&__jule_any_type86))) {
								(_22396_n)++;
							};
						}
						_iter_next_1b36b8cb9:;
						++it;
						goto _iter_begin_1b36b8cb9;
					}
					_iter_end_1b36b8cb9:;
				};
			}
			_iter_next_1b36b7eb6:;
			++it;
			goto _iter_begin_1b36b7eb6;
		}
		_iter_end_1b36b7eb6:;
	};
	return _22396_n;;
}



inline jule::Ptr<_1ac604d93_SymbolTable> _1ac554d8c_findVarFileInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _4430_files, jule::Ptr<_1ac5a2527_Var>* _4454_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39bd255:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _4514_f = *it;
			{
				if ((_1ac607439_findVar1(_4514_f.ptr(), _4454_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1b39bd255:;
			++it;
			goto _iter_begin_1b39bd255;
		}
		_iter_end_1b39bd255:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac555310_findVarInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _5526_files, jule::Str* _5550_ident, jule::Bool _5562_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39be50e:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _5614_f = *it;
			{
				jule::Ptr<_1ac5a2527_Var> _577_v = _1ac6057ab_FindVar(_5614_f.ptr(), (*(_5550_ident)), _5562_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1b39be50e:;
			++it;
			goto _iter_begin_1b39be50e;
		}
		_iter_end_1b39be50e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac55573e_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _6732_files, jule::Str* _6756_ident, jule::Bool _6768_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39c0ab5:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _6814_f = *it;
			{
				jule::Ptr<_1ac63c4e6_TypeAlias> _697_ta = _1ac605ba7_FindTypeAlias(_6814_f.ptr(), (*(_6756_ident)), _6768_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1b39c0ab5:;
			++it;
			goto _iter_begin_1b39c0ab5;
		}
		_iter_end_1b39c0ab5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac4c767d_Struct> _1ac555be5_findStructInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _7929_files, jule::Str* _7953_ident, jule::Bool _7965_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39c20e4:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _8014_f = *it;
			{
				jule::Ptr<_1ac4c767d_Struct> _817_s = _1ac6060a3_FindStruct(_8014_f.ptr(), (*(_7953_ident)), _7965_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1b39c20e4:;
			++it;
			goto _iter_begin_1b39c20e4;
		}
		_iter_end_1b39c20e4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac5560e1_findFnInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _9125_files, jule::Str* _9149_ident, jule::Bool _9161_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39c3623:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _9214_file = *it;
			{
				jule::Ptr<_1ac4dbd46_Fn> _937_f = _1ac60649e_FindFn(_9214_file.ptr(), (*(_9149_ident)), _9161_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1b39c3623:;
			++it;
			goto _iter_begin_1b39c3623;
		}
		_iter_end_1b39c3623:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5008a4_Trait> _1ac556465_findTraitInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _10328_files, jule::Str* _10352_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39c4514:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _10414_f = *it;
			{
				jule::Ptr<_1ac5008a4_Trait> _1057_t = _1ac6067e0_FindTrait(_10414_f.ptr(), (*(_10352_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1b39c4514:;
			++it;
			goto _iter_begin_1b39c4514;
		}
		_iter_end_1b39c4514:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5030b0_Enum> _1ac5567d9_findEnumInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _11527_files, jule::Str* _11551_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39c5e3e:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _11614_f = *it;
			{
				jule::Ptr<_1ac5030b0_Enum> _1177_e = _1ac606b31_FindEnum(_11614_f.ptr(), (*(_11551_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1b39c5e3e:;
			++it;
			goto _iter_begin_1b39c5e3e;
		}
		_iter_end_1b39c5e3e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac5047ba_TypeEnum> _1ac556c6d_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _12731_files, jule::Str* _12755_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39c7292:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _12814_f = *it;
			{
				jule::Ptr<_1ac5047ba_TypeEnum> _1297_e = _1ac606e72_FindTypeEnum(_12814_f.ptr(), (*(_12755_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1b39c7292:;
			++it;
			goto _iter_begin_1b39c7292;
		}
		_iter_end_1b39c7292:;
	};
	return nullptr;;
}



inline jule::Any _1ac557125_defByIdentPackage(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _13827_files, jule::Str* _13851_ident, jule::Bool _13863_binded) {
	{
		auto expr = _13827_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39c3bb7:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _13914_file = *it;
			{
				jule::Any _1407_def = _1ac608292_defByIdent(_13914_file.ptr(), _13851_ident, _13863_binded);;
				if ((_1407_def != nullptr)) {
					return _1407_def;;
				};
			}
			_iter_next_1b39c3bb7:;
			++it;
			goto _iter_begin_1b39c3bb7;
		}
		_iter_end_1b39c3bb7:;
	};
	return nullptr;;
}



inline jule::Bool _1ac55d1d6_isStdPackage(jule::Str* _36918_f, jule::Str _36926_p) {
	return _1b0966ec1_HasPrefix((*(_36918_f)), _1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1b0398529_PathStdlib; (*it++) = _36926_p; __jule_collection; })));;
}



inline jule::Bool _1ac575819_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b39d968e:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b39d9705:;
			{
				jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _187_model = (*(_1328_m)).cast_ptr<_1ac4d436b_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_187_model))._field_Field != nullptr) && _1ac575819_isValidModelForRef(&((*((*_187_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b39d976b:;
			{
				jule::Ptr<_1ac4cebc4_UnaryExprModel> _217_unary = (*(_1328_m)).cast_ptr<_1ac4cebc4_UnaryExprModel>(&__jule_any_type112);;
				if (((*((*(_217_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1ac640eab_Ptr((*((*_217_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1ac640c25_Sptr((*((*(_217_unary))._field_Expr))._field_Kind) == nullptr)) {
					return false;;
				};
				return _1ac575819_isValidModelForRef(&((*(*(_217_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b39d97d2:;
			{
				jule::Ptr<_1ac4d215a_IndexingExprModel> _357_indexing = (*(_1328_m)).cast_ptr<_1ac4d215a_IndexingExprModel>(&__jule_any_type52);;
				if ((_1ac64175e_Arr((*((*(_357_indexing))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1ac575819_isValidModelForRef(&((*(*(_357_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1b39d9282:;
			{
				return false;;
			}
		}
		_match_end_1b39d8d64:;
	};
}



inline _1b08b6838_Log _1ac575cc0_compilerErr(jule::Ptr<_1ac4912c3_Token>* _4717_token, jule::Bool _4732_line, jule::Str _4744_fmt, jule::Slice<jule::Any> _4757_args) {
	_1b08b6838_Log _486_log = _1b08b6838_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4717_token))))._field_Row, ._field_Column=(*((*(_4717_token))))._field_Column, ._field_Path=(*((*((*(_4717_token))))._field_File))._field_Path, ._field_Text=_1b08b6c9a_Logf(_4744_fmt, _4757_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4732_line) {
		_486_log._field_Line=_1ac497a9e_GetRow((*((*(_4717_token))))._field_File, (*((*(_4717_token))))._field_Row);
	};
	return _486_log;;
}



inline jule::Bool _1ac576144_impIsLookupable(jule::Ptr<_1ac557cd5_ImportInfo>* _6121_i, jule::Str* _6138_ident) {
	if ((*((*(_6121_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_6121_i))))._field_ImportAll))) {
		if (((*((*(_6121_i))))._field_Selected.len() > 0LL)) {
			return _1ac55a69a_existIdent((*(_6121_i)).ptr(), (*(_6138_ident)));;
		};
	};
	return (*((*(_6121_i))))._field_ImportAll;;
}



inline void _1ac576474_appendRetVars(jule::Slice<jule::Ptr<_1ac5a2527_Var>>* _7323_dest, jule::Ptr<_1ac4dee04_FnIns>* _7342_f) {
	if ((_1ac4dc2ec_IsVoid((*((*(_7342_f))))._field_Decl.ptr()) || ((*((*(_7342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _786_types = _1ac4e1136_Types((*(_7342_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_7342_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39eb66d:;
		if (it != expr_end) {
			jule::I64 _797_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> _7914_ident = *it;
			{
				if ((_1ac493baa_IsIgnoreIdent((*(_7914_ident))._field_Kind) || _1ac493e74_IsAnonIdent((*_7914_ident.alloc)._field_Kind))) {
					goto _iter_next_1b39eb66d;
				};
				{ jule::Slice<jule::Ptr<_1ac5a2527_Var>> &__jule_push_dest = (*(_7323_dest)); __jule_push_dest.push(jule::new_ptr<_1ac5a2527_Var>(_1ac5a2527_Var{._field_Scope=(*((*(_7342_f))))._field_Scope, ._field_Token=_7914_ident, ._field_Ident=(*_7914_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=_786_types[_797_i]}), ._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_RetOrder=_797_i, ._field_Depends=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr)})); };
			}
			_iter_next_1b39eb66d:;
			++it;
			_797_i++;
			goto _iter_begin_1b39eb66d;
		}
		_iter_end_1b39eb66d:;
	};
	if ((((*(*((*((*(_7342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_7323_dest)).len() == 1LL))) {
		(*((*(_7323_dest))[((*(_7323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1ac576760_appendParamVars(jule::Slice<jule::Ptr<_1ac5a2527_Var>>* _10325_dest, jule::Ptr<_1ac4dee04_FnIns>* _10344_f) {
	if (((*((*(_10344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a01013:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ddc9e_ParamIns> _10814_p = *it;
			{
				if ((_1ac493baa_IsIgnoreIdent((*((*(_10814_p))._field_Decl))._field_Ident) || _1ac493e74_IsAnonIdent((*(*(_10814_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1b3a01013;
				};
				jule::Ptr<_1ac5a2527_Var> _1137_v = jule::new_ptr<_1ac5a2527_Var>(_1ac5a2527_Var{._field_Scope=(*((*(_10344_f))))._field_Scope, ._field_Token=(*(*(_10814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_10814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_10814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_10814_p))._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr)}), ._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr)});;
				{
					
					if (_1ac4da9c1_IsSelf((*(_10814_p))._field_Decl)) {
						_case_begin_1b3a04de6:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_10344_f))))._field_Owner, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)});
							(*_1137_v.alloc)._field_Reference=(!(_1ac4dac57_IsRef((*(_10814_p))._field_Decl)));
							if (_1ac4dac57_IsRef((*(_10814_p))._field_Decl)) {
								((*(_1137_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1137_v))._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1ac649e2c_Sptr>(_1ac649e2c_Sptr{._field_Elem=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=(*(*((*(_1137_v))._field_Kind))._field_Kind.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1137_v))._field_Kind))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_10814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1b3a04ac7:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac64a900_Slc>(_1ac64a900_Slc{._field_Elem=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=(*((*_10814_p.alloc)._field_Kind))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_10814_p))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1b3a04a61:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=(*_10814_p.alloc)._field_Kind;
						}
					}
					_match_end_1b3a0492e:;
				};
				{ jule::Slice<jule::Ptr<_1ac5a2527_Var>> &__jule_push_dest = (*(_10325_dest)); __jule_push_dest.push(_1137_v); };
			}
			_iter_next_1b3a01013:;
			++it;
			goto _iter_begin_1b3a01013;
		}
		_iter_end_1b3a01013:;
	};
}



inline void _1ac576a4b_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>* _16334_dest, jule::Ptr<_1ac4dee04_FnIns>* _16359_f) {
	jule::I64 _1646_size = (*((*(_16359_f))))._field_Generics.len();;
	if (((*((*((*(_16359_f))))._field_Decl))._field_Owner != nullptr)) {
		_1646_size+=(*(*((*((*(_16359_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1646_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16359_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a0d350:;
		if (it != expr_end) {
			jule::I64 _1737_i = it - expr->begin();
			jule::Ptr<_1ac63b902_InsGeneric> _17314_g = *it;
			{
				if ((_17314_g == nullptr)) {
					goto _iter_next_1b3a0d350;
				};
				jule::Ptr<_1ac4b3988_GenericDecl> _1777_decl = (*(*((*(_16359_f))))._field_Decl.alloc)._field_Generics[_1737_i];;
				{ jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> &__jule_push_dest = (*(_16334_dest)); __jule_push_dest.push(jule::new_ptr<_1ac63c4e6_TypeAlias>(_1ac63c4e6_TypeAlias{._field_Scope=(*(*((*(_16359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1777_decl.alloc)._field_Token, ._field_Ident=(*(_1777_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=(*(_17314_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1b3a0d350:;
			++it;
			_1737_i++;
			goto _iter_begin_1b3a0d350;
		}
		_iter_end_1b3a0d350:;
	};
	if (((*(*((*(_16359_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1ac4ca4d8_StructIns> _1897_owner = (*((*(_16359_f))))._field_Owner;;
		{
			auto expr = &((*_1897_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3a0ebe2:;
			if (it != expr_end) {
				jule::I64 _1908_i = it - expr->begin();
				jule::Ptr<_1ac63b902_InsGeneric> _19015_g = *it;
				{
					jule::Ptr<_1ac4b3988_GenericDecl> _1918_decl = (*((*(_1897_owner))._field_Decl))._field_Generics[_1908_i];;
					{ jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>> &__jule_push_dest = (*(_16334_dest)); __jule_push_dest.push(jule::new_ptr<_1ac63c4e6_TypeAlias>(_1ac63c4e6_TypeAlias{._field_Scope=(*(*((*(_16359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1918_decl.alloc)._field_Token, ._field_Ident=(*(_1918_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=(*(_19015_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1b3a0ebe2:;
				++it;
				_1908_i++;
				goto _iter_begin_1b3a0ebe2;
			}
			_iter_end_1b3a0ebe2:;
		};
	};
}



inline jule::Ptr<_1ac604d93_SymbolTable> _1ac576dc0_findFile(jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>* _20418_files, jule::Ptr<_1ac496a59_File>* _20442_handler) {
	{
		auto expr = _20418_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a13cc3:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _20514_fl = *it;
			{
				if (((*(_20514_fl))._field_File == (*(_20442_handler)))) {
					return _20514_fl;;
				};
			}
			_iter_next_1b3a13cc3:;
			++it;
			goto _iter_begin_1b3a13cc3;
		}
		_iter_end_1b3a13cc3:;
	};
	return nullptr;;
}



inline void _1ac577376_pushSuggestion(_1b08b6838_Log* _21330_log, jule::Str _21341_fmt, jule::Slice<jule::Any> _21354_args) {
	(*(_21330_log))._field_Suggestion=_1b08b6c9a_Logf(_21341_fmt, _21354_args);
}



inline void _1ac5a07ab_pushImplemented(jule::Ptr<_1ac5008a4_Trait> _300524_t, jule::Ptr<_1ac4c767d_Struct>* _300540_d) {
	_julec_label_1b3a13894:;
	{
		
		if (((*(_300524_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1b3a169eb:;
			{
				{
					auto expr = &((*_300524_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a17458:;
					if (it != expr_end) {
						jule::Ptr<_1ac4c767d_Struct> _300910_s = *it;
						{
							if ((_300910_s == (*(_300540_d)))) {
								goto _match_end_1b3a15e7e;
							};
						}
						_iter_next_1b3a17458:;
						++it;
						goto _iter_begin_1b3a17458;
					}
					_iter_end_1b3a17458:;
				};
				goto _case_begin_1b3a16039;
			}
		}
		else {
			_case_begin_1b3a16039:;
			{
				(*(_300524_t))._field_Implemented=jule::append((*_300524_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4c767d_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_300540_d)); __jule_collection; }));
			}
		}
		_match_end_1b3a15e7e:;
	};
	{
		auto expr = &((*(_300524_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a17d71:;
		if (it != expr_end) {
			jule::Ptr<_1ac6459e9_TypeSymbol> _301814_i = *it;
			{
				_1ac5a07ab_pushImplemented(_1ac642298_Trait((*(_301814_i))._field_Kind.ptr()), _300540_d);
			}
			_iter_next_1b3a17d71:;
			++it;
			goto _iter_begin_1b3a17d71;
		}
		_iter_end_1b3a17d71:;
	};
}



inline void _1ac5a0a97_pushImplements(jule::Ptr<_1ac4c767d_Struct>* _302324_s, jule::Ptr<_1ac5008a4_Trait> _302340_t) {
	_julec_label_1b3a17106:;
	{
		
		if (((*((*(_302324_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1b3a1958c:;
			{
				{
					auto expr = &((*((*(_302324_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a19ee9:;
					if (it != expr_end) {
						jule::Ptr<_1ac5008a4_Trait> _302710_b = *it;
						{
							if ((_302710_b == _302340_t)) {
								goto _match_end_1b3a18a20;
							};
						}
						_iter_next_1b3a19ee9:;
						++it;
						goto _iter_begin_1b3a19ee9;
					}
					_iter_end_1b3a19ee9:;
				};
				goto _case_begin_1b3a18aca;
			}
		}
		else {
			_case_begin_1b3a18aca:;
			{
				{ jule::Slice<jule::Ptr<_1ac5008a4_Trait>> &__jule_push_dest = (*((*(_302324_s))))._field_Implements; __jule_push_dest.push(_302340_t); };
			}
		}
		_match_end_1b3a18a20:;
	};
	{
		auto expr = &((*(_302340_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a1a912:;
		if (it != expr_end) {
			jule::Ptr<_1ac6459e9_TypeSymbol> _303614_i = *it;
			{
				_1ac5a0a97_pushImplements(_302324_s, _1ac642298_Trait((*(_303614_i))._field_Kind.ptr()));
			}
			_iter_next_1b3a1a912:;
			++it;
			goto _iter_begin_1b3a1a912;
		}
		_iter_end_1b3a1a912:;
	};
}



inline void _1ac5a0ee8_pushRuntimeToStr(jule::Ptr<_1ac578256_sema>* _304126_s, jule::Ptr<_1ac63d2d8_TypeKind>* _304141_t, jule::Ptr<_1ac4912c3_Token>* _304160_token, jule::Ptr<_1ac4e308e_ReferenceStack> _30426_refers) {
	if ((((*((*((*(_304126_s))))._field_meta))._field_runtime == nullptr) || _1ac63e41b_IsNil((*(_304141_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _30466_f = _1ac4dd353_instanceForce(_1ac15ae05_runtimeFindFn(&((*(*((*(_304126_s))))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_30466_f))._field_Generics=jule::append((*_30466_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac63b902_InsGeneric>(_1ac63b902_InsGeneric{._field_Kind=(*(_304141_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>(nullptr)}); __jule_collection; }));
	jule::Bool _30482_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac599596_checkGenericFn((*(_304126_s)), &(_30466_f), _304160_token);
		_30482_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_30482_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:3050:3"));;
	};
	if ((_30426_refers != nullptr)) {
		_1ac4e3da3_Push(_30426_refers, jule::Any(_30466_f, &__jule_any_type7));
	};
}



inline jule::Bool _1ac5e08b7_traitHasReferenceReceiver(jule::Ptr<_1ac5008a4_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ba3737:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> *_299_f = it;
			{
				if ((*((*(_299_f))))._field_Statically) {
					goto _iter_next_1b3ba3737;
				};
				jule::Ptr<_1ac4da372_Param> _353_p = (*(*(_299_f)).alloc)._field_Params[0LL];;
				if ((_1ac4dac57_IsRef(_353_p.ptr()) && _1ac4da9c1_IsSelf(_353_p))) {
					return true;;
				};
			}
			_iter_next_1b3ba3737:;
			++it;
			goto _iter_begin_1b3ba3737;
		}
		_iter_end_1b3ba3737:;
	};
	return false;;
}



inline jule::Bool _1ac5e0c4c_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1ac60a55d_Data>* _4333_d) {
	jule::Str _442_value = _1a9d380e0_FmtFloat(_1aa12c0b5_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1aa11ebce_CheckBitFloat(_442_value, _1aa11d738_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1ac5e10c1_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1ac60a55d_Data>* _4830_d) {
	jule::F64 _492_min = _1aa124dc1_Min(_4818_kind);;
	jule::F64 _502_max = _1aa125157_Max(_4818_kind);;
	{
		
		if (_1aa12de0d_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1b3ba72b8:;
			{
				jule::F64 _533_x = _1aa12b812_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _543_i;
				jule::F64 _546_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a9d0dd41_Modf(_533_x);
					_543_i = __jule_assign_result.__jule_result_arg0;
					_546_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_546_frac != 0LL)) {
					return false;;
				};
				return ((_543_i >= _492_min) && (_543_i <= _502_max));;
			}
		}
		else if (_1aa12d65a_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1b3ba732e:;
			{
				jule::F64 _603_x = _1aa12c0b5_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_603_x <= _502_max)) {
					return true;;
				};
			}
		}
		else if (_1aa12d3c4_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1b3ba73a6:;
			{
				jule::F64 _653_x = _1aa12c0b5_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_492_min <= _653_x) && (_653_x <= _502_max));;
			}
		}
		_match_end_1b3ba7197:;
	};
	return false;;
}



inline jule::Bool _1ac5e1489_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1ac60a55d_Data>* _7132_d) {
	jule::F64 _722_max = _1aa125157_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && (_7120_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1ac5c3ed8_IsAscii(static_cast<jule::I32>(_1aa12acc8_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1aa12de0d_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1b3bad038:;
			{
				jule::F64 _793_x = _1aa12b812_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_793_x < 0LL)) {
					return false;;
				};
				jule::F64 _833_i;
				jule::F64 _836_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a9d0dd41_Modf(_793_x);
					_833_i = __jule_assign_result.__jule_result_arg0;
					_836_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_836_frac != 0LL)) {
					return false;;
				};
				return (_833_i <= _722_max);;
			}
		}
		else if (_1aa12d65a_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1b3bad09e:;
			{
				jule::F64 _893_x = _1aa12c0b5_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_893_x <= _722_max)) {
					return true;;
				};
			}
		}
		else if (_1aa12d3c4_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1b3bad115:;
			{
				jule::F64 _943_x = _1aa12c0b5_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _943_x) && (_943_x <= _722_max));;
			}
		}
		_match_end_1b3bac5dc:;
	};
	return false;;
}



inline jule::Bool _1ac5e180d_intAssignable(jule::Str _10018_kind, jule::Ptr<_1ac60a55d_Data>* _10030_d) {
	{
		
		if (_1aa12817c_IsSigInt(_10018_kind)) {
			_case_begin_1b3bb2b64:;
			{
				return _1ac5e10c1_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1aa12848a_IsUnsigInt(_10018_kind)) {
			_case_begin_1b3bb2bec:;
			{
				return _1ac5e1489_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1b3bb268b:;
			{
				return false;;
			}
		}
		_match_end_1b3bb25ae:;
	};
}



inline void _1ac5ecd03_checkMutRiskOfStructLit(jule::Ptr<_1ac578256_sema>* _92133_s, jule::Ptr<_1ac4d0598_StructLitExprModel>* _92144_m) {
	{
		auto expr = &((*((*(_92144_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3bb3cca:;
		if (it != expr_end) {
			jule::Ptr<_1ac4d0202_StructArgExprModel> *_9229_arg = it;
			{
				if ((*((*((*((*(_9229_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1b3bb3cca;
				};
				if (((!((*((*(*(_9229_arg)).alloc)._field_Expr))._field_Mutable)) && _1ac63ebbe_Mutable((*(*((*(_9229_arg))))._field_Expr.alloc)._field_Kind.ptr()))) {
					_1ac57b15a_pushErr((*(_92133_s)).ptr(), (*(*(_9229_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*((*(_9229_arg))))._field_Expr))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1b3bb3cca:;
			++it;
			goto _iter_begin_1b3bb3cca;
		}
		_iter_end_1b3bb3cca:;
	};
}



inline jule::Ptr<_1ac63d2d8_TypeKind> _1ac603b3e_lenKind(void) {
	return _1ac728e0c_primInt;;
}



inline jule::Bool _1ac603e91_isGoodValueToInfer(jule::Ptr<_1ac60a55d_Data>* _142624_d) {
	return (!(_1ac60a97b_IsNil((*(_142624_d)).ptr())));;
}



inline jule::Ptr<_1ac4a5b9a_Directive> _1ac634a60_findDirective(jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _440223_directives, jule::Str _440254_d) {
	{
		auto expr = _440223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d26789:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a5b9a_Directive> _440314_dr = *it;
			{
				if (((*((*(_440314_dr))._field_Tag))._field_Kind == _440254_d)) {
					return _440314_dr;;
				};
			}
			_iter_next_1b3d26789:;
			++it;
			goto _iter_begin_1b3d26789;
		}
		_iter_end_1b3d26789:;
	};
	return nullptr;;
}



inline jule::Any _1ac634e28_findBuiltinsImport(jule::Str* _441124_ident, jule::Ptr<_1ac557cd5_ImportInfo> _441136_imp) {
	return _1ac72c51a_findPackageBuiltinDef(&((*(_441136_imp))._field_LinkPath), _441124_ident);;
}



inline void _1ac635159_fitBitsize(jule::Ptr<_1ac60a55d_Data>* _442020_d) {
	jule::Ptr<_1ac646401_Prim> _44216_prim = _1ac64098e_Prim((*((*(_442020_d))))._field_Kind.ptr());;
	jule::I64 _44222_z = _1aa11d738_BitsizeOf(_1ac646775_Str(_44216_prim.ptr()));;
	{
		
		if (_1aa12d3c4_IsI64((*((*(_442020_d))))._field_Constant.ptr())) {
			_case_begin_1b3d29ccb:;
			{
				jule::I64 _44253_k = _1aa120262_BitsizeOfInt(_1aa12acc8_ReadI64((*((*(_442020_d))))._field_Constant));;
				if (((_44253_k > _44222_z) || _1aa12848a_IsUnsigInt((*_44216_prim.alloc)._field_Kind))) {
					(*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind=_1aa11da79_IntFromBits(_44253_k);
					(*((*(_442020_d))))._field_Kind=(*((*(_1ac72b261_findBuiltinTypeAlias((*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1aa12d65a_IsU64((*((*(_442020_d))))._field_Constant.ptr())) {
			_case_begin_1b3d29d42:;
			{
				jule::I64 _44313_k = _1aa12052b_BitsizeOfUint(_1aa12b05e_ReadU64((*((*(_442020_d))))._field_Constant));;
				if (((_44313_k > _44222_z) || _1aa12817c_IsSigInt((*_44216_prim.alloc)._field_Kind))) {
					(*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind=_1aa11dd10_UintFromBits(_44313_k);
					(*((*(_442020_d))))._field_Kind=(*((*(_1ac72b261_findBuiltinTypeAlias((*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1aa12de0d_IsF64((*((*(_442020_d))))._field_Constant.ptr())) {
			_case_begin_1b3d29db9:;
			{
				if ((_44222_z == 64LLU)) {
					return;;
				};
				jule::I64 _44413_k = _1aa11ee98_BitsizeOfFloat(_1aa12b812_ReadF64((*((*(_442020_d))))._field_Constant));;
				if ((_44413_k > _44222_z)) {
					(*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind=_1aa11e0c9_FloatFromBits(_44413_k);
					(*((*(_442020_d))))._field_Kind=(*((*(_1ac72b261_findBuiltinTypeAlias((*(*((*(_442020_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1b3d29baa:;
	};
}



inline void _1ac635489_makeStructLitAlloc(jule::Ptr<_1ac60a55d_Data>* _444928_d, jule::Ptr<_1ac4d0598_StructLitExprModel>* _444943_lit) {
	(*((*(_444928_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac649e2c_Sptr>(_1ac649e2c_Sptr{._field_Elem=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_444943_lit))))._field_Strct, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23)});
	(*((*(_444928_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d0895_AllocStructLitExprModel>(_1ac4d0895_AllocStructLitExprModel{._field_Lit=(*(_444943_lit))}), &__jule_any_type114);
}



inline jule::Ptr<_1ac5a2527_Var> _1ac63580d_buildErrorVar(jule::Ptr<_1ac534ec1_Scope>* _446023_s, jule::Ptr<_1ac4ae7db_FnCallExpr>* _446039_fc) {
	return jule::new_ptr<_1ac5a2527_Var>(_1ac5a2527_Var{._field_Scope=(*(_446023_s)), ._field_Token=(*((*(_446039_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_Kind, ._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr)});;
}



inline jule::Any _1ac635b82_findBuiltinsSema(jule::Str* _447522_ident, jule::Ptr<_1ac578256_sema> _447538_s) {
	{
		auto expr = &((*((*(_447538_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d39181:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _447614_imp = *it;
			{
				if (((*(_447614_imp))._field_ImportAll || _1ac55a69a_existIdent(_447614_imp, (*(_447522_ident))))) {
					jule::Any _44788_def = _1ac634e28_findBuiltinsImport(_447522_ident, _447614_imp);;
					if ((_44788_def != nullptr)) {
						return _44788_def;;
					};
				};
			}
			_iter_next_1b3d39181:;
			++it;
			goto _iter_begin_1b3d39181;
		}
		_iter_end_1b3d39181:;
	};
	jule::Str _44866_ppath = _1ac497241_Dir((*(*(_447538_s))._field_file.alloc)._field_File.ptr());;
	if (_1b0966ec1_HasPrefix(_44866_ppath, _1b0398529_PathStdlib)) {
		(_44866_ppath).mut_slice(_1b0398529_PathStdlib.len());;
		_44866_ppath=(jule::Str::lit("std", 3) + _1b096c867_Replace(_44866_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _1ac72c51a_findPackageBuiltinDef(&(_44866_ppath), _447522_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1ac635e4b_isOkForShifting(jule::Ptr<_1ac60a55d_Data>* _450025_d) {
	if (_1ac60ae98_IsConst((*(_450025_d)).ptr())) {
		{
			
			if (_1aa12d3c4_IsI64((*((*(_450025_d))))._field_Constant.ptr())) {
				_case_begin_1b3d3c63a:;
				{
					return (_1aa12acc8_ReadI64((*((*(_450025_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1aa12d65a_IsU64((*((*(_450025_d))))._field_Constant.ptr())) {
				_case_begin_1b3d3c6d4:;
				{
					return true;;
				}
			}
			else if (_1aa12de0d_IsF64((*((*(_450025_d))))._field_Constant.ptr())) {
				_case_begin_1b3d3c75b:;
				{
					return (_1aa12b812_ReadF64((*((*(_450025_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1b3d3c5a2:;
				{
					return false;;
				}
			}
			_match_end_1b3d3c4c5:;
		};
	};
	jule::Ptr<_1ac646401_Prim> _45132_prim = _1ac64098e_Prim((*((*(_450025_d))))._field_Kind.ptr());;
	return ((_45132_prim != nullptr) && _1aa128754_IsInt(_1ac646775_Str(_45132_prim)));;
}



inline jule::Bool _1ac636325_isInstancedStruct(jule::Ptr<_1ac4ca4d8_StructIns> _451722_s) {
	return ((*((*(_451722_s))._field_Decl))._field_Generics.len() == (*_451722_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1ac636622_isPtrArithmeticCompatible(jule::Ptr<_1ac60a55d_Data>* _452135_l, jule::Ptr<_1ac60a55d_Data>* _452150_r) {
	jule::Ptr<_1ac64d6e4_Ptr> _45222_ptr = _1ac640eab_Ptr((*((*(_452150_r))))._field_Kind.ptr());;
	if ((_45222_ptr != nullptr)) {
		return _1ac63da25_Equal((*(_1ac640eab_Ptr((*((*(_452135_l))))._field_Kind)))._field_Elem, (*_45222_ptr.alloc)._field_Elem);;
	};
	if ((_1ac60ae98_IsConst((*(_452150_r)).ptr()) && (*((*(_452150_r))))._field_untyped)) {
		return (_1ac5e180d_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _452150_r) || _1ac5e180d_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _452150_r));;
	};
	_1ac5e1ce7_typeCompatibilityChecker _45316_tcc = _1ac5e1ce7_typeCompatibilityChecker{._field_s=jule::Ptr<_1ac578256_sema>(nullptr), ._field_dest=_1ac728e0c_primInt, ._field_src=(*((*(_452150_r))))._field_Kind, ._field_errorToken=jule::Ptr<_1ac4912c3_Token>(nullptr)};;
	if (_1ac5e34e1_check(&_45316_tcc)) {
		return true;;
	};
	_45316_tcc._field_dest=_1ac728a44_primUint;
	return _1ac5e34e1_check(&_45316_tcc);;
}



inline void _1ac636b2d_applyRuntimeToStr(jule::Ptr<_1ac578256_sema>* _454227_s, jule::Ptr<_1ac63d2d8_TypeKind>* _454242_from, jule::Ptr<_1ac63d2d8_TypeKind>* _454264_to, jule::Ptr<_1ac4912c3_Token>* _45437_token, jule::Ptr<_1ac4e308e_ReferenceStack> _454326_refers) {
	jule::Ptr<_1ac646401_Prim> _45442_prim = _1ac64098e_Prim((*(_454264_to)).ptr());;
	if ((_45442_prim != nullptr)) {
		if (_1ac649b52_IsAny(_45442_prim)) {
			_1ac5a0ee8_pushRuntimeToStr(_454227_s, _454242_from, _45437_token, _454326_refers);
		};
		return;;
	};
	if ((_1ac6414c8_TypeEnum((*(_454264_to)).ptr()) != nullptr)) {
		_1ac5a0ee8_pushRuntimeToStr(_454227_s, _454242_from, _45437_token, _454326_refers);
		return;;
	};
}



inline void _1ac637139_applyCastKindModel(jule::Ptr<_1ac578256_sema>* _455728_s, jule::Ptr<_1ac60a55d_Data>* _455743_d, jule::Ptr<_1ac63d2d8_TypeKind>* _455758_t, jule::Ptr<_1ac4912c3_Token>* _45587_token, jule::Ptr<_1ac4e308e_ReferenceStack> _455826_refers) {
	_1ac636b2d_applyRuntimeToStr(_455728_s, &((*((*(_455743_d))))._field_Kind), _455758_t, _45587_token, _455826_refers);
	(*((*(_455743_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d0e28_CastingExprModel>(_1ac4d0e28_CastingExprModel{._field_Token=(*(_45587_token)), ._field_Expr=jule::new_ptr<_1ac60a55d_Data>((*((*(_455743_d))))), ._field_Kind=(*(_455758_t)), ._field_ExprKind=(*((*(_455743_d))))._field_Kind}), &__jule_any_type95);
}



inline void _1ac637645_applyCastKind(jule::Ptr<_1ac578256_sema>* _456823_s, jule::Ptr<_1ac60a55d_Data>* _456838_d, jule::Ptr<_1ac63d2d8_TypeKind>* _456853_t, jule::Ptr<_1ac4912c3_Token>* _45697_token, jule::Ptr<_1ac4e308e_ReferenceStack> _456926_refers) {
	_1ac637139_applyCastKindModel(_456823_s, _456838_d, _456853_t, _45697_token, _456926_refers);
	(*((*(_456838_d))))._field_Kind=(*(_456853_t));
}



inline jule::Ptr<_1ac60a55d_Data> _1ac637854_buildVoidData(void) {
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac727b75_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Str _1ac637d3d_checkDataForIntegerIndexing(jule::Ptr<_1ac578256_sema>* _458037_s, jule::Ptr<_1ac60a55d_Data>* _458052_d, jule::Ptr<_1ac4912c3_Token>* _45817_token, jule::Ptr<_1ac4e308e_ReferenceStack> _458126_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_458052_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1ac64098e_Prim((*((*(_458052_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1b3d4d904:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1aa128754_IsInt(_1ac646775_Str(_1ac64098e_Prim((*((*(_458052_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1b3d4d96a:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1ac60ae98_IsConst((*(_458052_d)).ptr())) {
			_case_begin_1b3d4d9d1:;
			{
				if ((_1aa12c0b5_AsF64((*((*(_458052_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1ac64098e_Prim((*((*(_458052_d))))._field_Kind.ptr()) == nullptr) || _1ac60ae98_IsConst((*(_458052_d)).ptr()) || (_1aa11d46e_RealKindOf(_1ac646775_Str(_1ac64098e_Prim((*((*(_458052_d))))._field_Kind).ptr())) != _1aa11d46e_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1b3d4da47:;
			{
				_1ac637645_applyCastKind(_458037_s, _458052_d, &(_1ac728e0c_primInt), _45817_token, _458126_refers);
			}
		}
		_match_end_1b3d4d4d6:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1ac638349_applyCastModelByEnum(jule::Ptr<_1ac578256_sema>* _460630_s, jule::Ptr<_1ac60a55d_Data>* _460645_d, jule::Ptr<_1ac5030b0_Enum> _460659_e, jule::Ptr<_1ac4912c3_Token>* _46077_token, jule::Ptr<_1ac4e308e_ReferenceStack> _460726_refers) {
	if ((_460659_e == nullptr)) {
		return;;
	};
	_1ac637139_applyCastKindModel(_460630_s, _460645_d, &((*((*(_460659_e))._field_Kind))._field_Kind), _46077_token, _460726_refers);
}



inline void _1ac638866_castConstByType(jule::Str* _461421_t, jule::Ptr<_1ac60a55d_Data>* _461434_d) {
	{
		
		if (_1aa12817c_IsSigInt((*(_461421_t)))) {
			_case_begin_1b3d547c8:;
			{
				{
					auto _match_expr{ _1aa11d738_BitsizeOf(_1aa11d46e_RealKindOf((*(_461421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b3d553ab:;
						{
							_1aa12c36d_SetI64((*((*(_461434_d))))._field_Constant.ptr(), _1aa12ba98_AsI64((*((*(_461434_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b3d55433:;
						{
							_1aa12c36d_SetI64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1aa12ba98_AsI64((*((*(_461434_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b3d55499:;
						{
							_1aa12c36d_SetI64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1aa12ba98_AsI64((*((*(_461434_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b3d55510:;
						{
							_1aa12c36d_SetI64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1aa12ba98_AsI64((*((*(_461434_d))))._field_Constant))));
						}
					}
					_match_end_1b3d5507b:;
				};
			}
		}
		else if (_1aa12848a_IsUnsigInt((*(_461421_t)))) {
			_case_begin_1b3d54872:;
			{
				{
					auto _match_expr{ _1aa11d738_BitsizeOf(_1aa11d46e_RealKindOf((*(_461421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b3d54d28:;
						{
							_1aa12c626_SetU64((*((*(_461434_d))))._field_Constant.ptr(), _1aa12bd2e_AsU64((*((*(_461434_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b3d59613:;
						{
							_1aa12c626_SetU64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1aa12bd2e_AsU64((*((*(_461434_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b3d59679:;
						{
							_1aa12c626_SetU64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1aa12bd2e_AsU64((*((*(_461434_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b3d596e0:;
						{
							_1aa12c626_SetU64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1aa12bd2e_AsU64((*((*(_461434_d))))._field_Constant))));
						}
					}
					_match_end_1b3d5959c:;
				};
			}
		}
		else if (_1aa128a95_IsFloat((*(_461421_t)))) {
			_case_begin_1b3d548d8:;
			{
				{
					auto _match_expr{ _1aa11d738_BitsizeOf(_1aa11d46e_RealKindOf((*(_461421_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b3d5580c:;
						{
							_1aa12ce40_SetF64((*((*(_461434_d))))._field_Constant.ptr(), _1aa12c0b5_AsF64((*((*(_461434_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b3d5d727:;
						{
							_1aa12ce40_SetF64((*((*(_461434_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1aa12c0b5_AsF64((*((*(_461434_d))))._field_Constant))));
						}
					}
					_match_end_1b3d5d68e:;
				};
			}
		}
		_match_end_1b3d54674:;
	};
}



inline void _1ac638a42_updateModelToGenericIns(jule::Any* _464833_m, jule::Ptr<_1ac4dee04_FnIns>* _464852_f) {
	{
		auto &_match_expr{ (*(_464833_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b3d5d9e1:;
			{
				(*(_464833_m))=jule::Any((*(_464852_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b3d59a86:;
			{
				(*((*(_464833_m)).cast_ptr<_1ac4d436b_StructSubIdentExprModel>(&__jule_any_type100)))._field_Method=(*(_464852_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b3d5da57:;
			{
				(*((*(_464833_m)).cast_ptr<_1ac4d4712_StructStaticIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_464852_f));
			}
		}
		_match_end_1b3d59b63:;
	};
}



inline jule::Bool _1ac638db6_pushSubIdentFromExpr(jule::Any _465929_expr, jule::Ptr<_1ac4a7152_SubIdentTypeDecl>* _465950_t) {
	{
		auto &_match_expr{ _465929_expr };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b3d649d6:;
			{
				jule::Ptr<_1ac4ac3cc_IdentExpr> _46627_e = _465929_expr.unsafe_cast_ptr<_1ac4ac3cc_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1ac4a6d88_IdentTypeDecl>> &__jule_push_dest = (*((*(_465950_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ac4a6d88_IdentTypeDecl>(_1ac4a6d88_IdentTypeDecl{._field_Token=(*(_46627_e))._field_Token, ._field_Ident=(*_46627_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b3d61d24:;
			{
				jule::Ptr<_1ac4adbc5_SubIdentExpr> _46687_e = _465929_expr.unsafe_cast_ptr<_1ac4adbc5_SubIdentExpr>();;
				if ((!(_1ac638db6_pushSubIdentFromExpr((*((*(_46687_e))._field_Expr))._field_Kind, _465950_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1ac4a6d88_IdentTypeDecl>> &__jule_push_dest = (*((*(_465950_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ac4a6d88_IdentTypeDecl>(_1ac4a6d88_IdentTypeDecl{._field_Token=(*_46687_e.alloc)._field_Ident, ._field_Ident=(*((*_46687_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ac4a677d_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1b3d61cad:;
			{
				return false;;
			}
		}
		_match_end_1b3d61c47:;
	};
	return true;;
}



inline jule::Str _1ac639180_constoa(jule::Ptr<_1aa1293c0_Const>* _468213_c) {
	{
		
		if (_1aa12d3c4_IsI64((*(_468213_c)).ptr())) {
			_case_begin_1b3d6aa20:;
			{
				return _1aa11b03d_FmtInt(_1aa12acc8_ReadI64((*(_468213_c)).ptr()), 10LL);;
			}
		}
		else if (_1aa12d65a_IsU64((*(_468213_c)).ptr())) {
			_case_begin_1b3d69579:;
			{
				return _1aa11ab75_FmtUint(_1aa12b05e_ReadU64((*(_468213_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1b3d6b1e6:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b3d689a7:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac639724_evalEnumStatic(jule::Ptr<_1ac578256_sema>* _469324_s, jule::Ptr<_1ac5030b0_Enum>* _469339_enm, jule::Ptr<_1ac502543_EnumItem>* _469356_item, jule::Ptr<_1ac4912c3_Token>* _46947_token, jule::Ptr<_1ac4e308e_ReferenceStack> _469426_refers) {
	jule::Ptr<_1ac60a55d_Data> _46956_d = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_469339_enm)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
	if (((*(_469356_item)) != nullptr)) {
		(*(_46956_d))._field_Constant=jule::new_ptr<_1aa1293c0_Const>((*(*((*((*((*(_469356_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46956_d.alloc)._field_Model=jule::Any((*_46956_d.alloc)._field_Constant, &__jule_any_type20);
		_1ac638349_applyCastModelByEnum(_469324_s, &(_46956_d), (*(_469339_enm)), _46947_token, _469426_refers);
	};
	return _46956_d;;
}



inline jule::Ptr<_1ac4d0598_StructLitExprModel> _1ac6399dd_isLitBased(jule::Any* _471120_m) {
	{
		auto &_match_expr{ (*(_471120_m)) };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b3d70a69:;
			{
				return (*(_471120_m)).cast_ptr<_1ac4d0598_StructLitExprModel>(&__jule_any_type97);;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b3d70ad0:;
			{
				return (*((*(_471120_m)).cast_ptr<_1ac4d0895_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b3d70b46:;
			{
				jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _47187_ssi = (*(_471120_m)).cast_ptr<_1ac4d436b_StructSubIdentExprModel>(&__jule_any_type100);;
				return _1ac6399dd_isLitBased(&((*((*(_47187_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b3d70bac:;
			{
				jule::Ptr<_1ac4d0e28_CastingExprModel> _47217_c = (*(_471120_m)).cast_ptr<_1ac4d0e28_CastingExprModel>(&__jule_any_type95);;
				return _1ac6399dd_isLitBased(&((*((*(_47217_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1b3d70618:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3d705a2:;
	};
}



inline void _1ac639cc9_makeImplicitDeref(jule::Ptr<_1ac60a55d_Data>* _472827_d, jule::Ptr<_1ac4912c3_Token> _472841_baseToken) {
	jule::Ptr<_1ac4cebc4_UnaryExprModel> _47296_unary = jule::new_ptr<_1ac4cebc4_UnaryExprModel>(_1ac4cebc4_UnaryExprModel{._field_Expr=jule::new_ptr<_1ac60a55d_Data>((*((*(_472827_d))))), ._field_Op=jule::new_ptr<_1ac4912c3_Token>((*(_472841_baseToken)))});;
	(*((*(_47296_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_47296_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_472827_d))))._field_Model=jule::Any(_47296_unary, &__jule_any_type112);
}



inline void _1b362e04d_updateRefer(jule::Ptr<_1ac4e308e_ReferenceStack> _473923_ref, jule::Ptr<_1ac4dee04_FnIns>* _473946_old, jule::Ptr<_1ac4dee04_FnIns>* _473959_new) {
	{
		auto expr = &((*(_473923_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b36309ab:;
		if (it != expr_end) {
			jule::I64 _47406_i = it - expr->begin();
			jule::Any _47409_sym = *it;
			{
				if ((jule::Any((*(_473946_old)), &__jule_any_type7) == _47409_sym)) {
					(*(_473923_ref))._field_buffer[_47406_i]=jule::Any((*(_473959_new)), &__jule_any_type7);
				};
			}
			_iter_next_1b36309ab:;
			++it;
			_47406_i++;
			goto _iter_begin_1b36309ab;
		}
		_iter_end_1b36309ab:;
	};
}



inline void _1ac63a45b_makeVariadic(jule::Ptr<_1ac60a55d_Data>* _474722_d, jule::Ptr<_1ac63d2d8_TypeKind> _474736_elem) {
	(*((*(_474722_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=(*_474736_elem.alloc)._field_BindIdent, ._field_Generic=(*(_474736_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_474736_elem.alloc)._field_Kind});
}



inline jule::Bool _1ac63a88a_isVarCaptured(jule::Ptr<_1ac53c25e_scopeChecker> _476118_r, jule::Ptr<_1ac53c25e_scopeChecker> _476140_s, jule::Ptr<_1ac5a2527_Var> _476158_v) {
	if (((*(_476158_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_476140_s))._field_scope == (*_476158_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_476140_s.alloc)._field_parent == nullptr) || (_476140_s == _476118_r))) {
				goto _iter_end_1b3d79c93;
			};
			_476140_s=(*_476140_s.alloc)._field_parent;
		}
	_iter_next_1b3d79c93:;
	}
	_iter_end_1b3d79c93:;;
	return true;;
}



inline jule::Bool _1ac65948b_kindUsesGenerics(jule::Ptr<_1ac63d2d8_TypeKind>* _175726_k, jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>* _175741_generics) {
	{
		auto expr = _175741_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b419a4e2:;
		if (it != expr_end) {
			jule::Ptr<_1ac4b3988_GenericDecl> *_17589_g = it;
			{
				if (static__1ac659090_exist(&((*((*(_17589_g))))._field_Ident), _175726_k)) {
					return true;;
				};
			}
			_iter_next_1b419a4e2:;
			++it;
			goto _iter_begin_1b419a4e2;
		}
		_iter_end_1b419a4e2:;
	};
	return false;;
}



inline jule::Bool _1ac659854_hasDirective(jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _176722_directives, jule::Str _176753_tag) {
	{
		auto expr = _176722_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b419acc8:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a5b9a_Directive> _176814_dr = *it;
			{
				if (((*((*(_176814_dr))._field_Tag))._field_Kind == _176753_tag)) {
					return true;;
				};
			}
			_iter_next_1b419acc8:;
			++it;
			goto _iter_begin_1b419acc8;
		}
		_iter_end_1b419acc8:;
	};
	return false;;
}



inline jule::Bool _1ac659b1d_canGetPtr(jule::Ptr<_1ac60a55d_Data>* _177619_d) {
	return (*((*(_177619_d))))._field_Lvalue;;
}



inline jule::Bool _1ac659e5e_isValidForSptrType(jule::Ptr<_1ac63d2d8_TypeKind>* _177928_t) {
	jule::Ptr<_1ac4ca4d8_StructIns> _17806_s = _1ac642012_Struct((*(_177928_t)).ptr());;
	if ((((_17806_s != nullptr) && ((*_17806_s.alloc)._field_Decl != nullptr)) && (*(*(_17806_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1ac65a1e5_isValidForRef(jule::Ptr<_1ac63d2d8_TypeKind>* _178823_t) {
	return (_1ac641c7b_Fn((*(_178823_t)).ptr()) == nullptr);;
}



inline jule::Bool _1ac65a4ae_isBuiltinStrConvertable(jule::Ptr<_1ac63d2d8_TypeKind>* _179133_t) {
	return ((((!(_1ac63e6a2_Void((*(_179133_t)).ptr()))) && (_1ac641c7b_Fn((*(_179133_t)).ptr()) == nullptr)) && (_1ac6427b5_Tup((*(_179133_t)).ptr()) == nullptr)) && (!(_1ac642a4b_comptime((*(_179133_t)).ptr()))));;
}



inline jule::Str _1ac65a778_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _179527_tokens) {
	if ((((*(_179527_tokens)).len() == 1LL) && ((*((*(_179527_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17996_n = 0LL;;
	{
		auto expr = _179527_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b41a10ca:;
		if (it != expr_end) {
			jule::Ptr<_1ac4912c3_Token> *_18009_token = it;
			{
				_17996_n+=(*((*(_18009_token))))._field_Kind.len();
				_17996_n+=2LL;
			}
			_iter_next_1b41a10ca:;
			++it;
			goto _iter_begin_1b41a10ca;
		}
		_iter_end_1b41a10ca:;
	};
	_1b097ade7_StrBuilder _18046_s = static__1b097b1e4_New(_17996_n);;
	{
		auto expr = _179527_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b419e8d1:;
		if (it != expr_end) {
			jule::I64 _18056_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> *_18059_token = it;
			{
				_1b0984be2_WriteStr(&_18046_s, (*((*(_18059_token))))._field_Kind);
				if ((((*(_179527_tokens)).len() - _18056_i) > 1LL)) {
					_1b0984be2_WriteStr(&_18046_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1b419e8d1:;
			++it;
			_18056_i++;
			goto _iter_begin_1b419e8d1;
		}
		_iter_end_1b419e8d1:;
	};
	return _1b09854d9_Str(&_18046_s);;
}



inline jule::Ptr<_1ac646401_Prim> _1ac65ab52_buildPrimType(jule::Str _181418_kind) {
	return jule::new_ptr<_1ac646401_Prim>(_1ac646401_Prim{._field_Kind=_181418_kind});;
}



inline void _1ac65b3a0_applyImplicitCast(jule::Ptr<_1ac578256_sema>* _184227_s, jule::Ptr<_1ac63d2d8_TypeKind>* _184242_dest, jule::Ptr<_1ac60a55d_Data>* _184264_d, jule::Ptr<_1ac4912c3_Token>* _18437_token, jule::Ptr<_1ac4e308e_ReferenceStack> _184326_refers) {
	if (_1ac63e41b_IsNil((*((*(_184264_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1ac646401_Prim> _18472_destPrim = _1ac64098e_Prim((*(_184242_dest)).ptr());;
	if (((_18472_destPrim != nullptr) && _1ac649b52_IsAny(_18472_destPrim))) {
		jule::Ptr<_1ac646401_Prim> _18493_prim = _1ac64098e_Prim((*((*(_184264_d))))._field_Kind);;
		if (((_18493_prim == nullptr) || (!(_1ac649b52_IsAny(_18493_prim.ptr()))))) {
			_1ac637645_applyCastKind(_184227_s, _184264_d, _184242_dest, _18437_token, _184326_refers);
		};
		return;;
	};
	jule::Ptr<_1ac5008a4_Trait> _18562_dt = _1ac642298_Trait((*(_184242_dest)).ptr());;
	if ((_18562_dt != nullptr)) {
		jule::Ptr<_1ac5008a4_Trait> _18583_bt = _1ac642298_Trait((*((*(_184264_d))))._field_Kind);;
		if (((_18583_bt == nullptr) || (_18583_bt != _18562_dt))) {
			_1ac637139_applyCastKindModel(_184227_s, _184264_d, _184242_dest, _18437_token, _184326_refers);
			return;;
		};
	};
	if (((_1ac6414c8_TypeEnum((*(_184242_dest)).ptr()) != nullptr) && (_1ac6414c8_TypeEnum((*((*(_184264_d))))._field_Kind) == nullptr))) {
		_1ac637139_applyCastKindModel(_184227_s, _184264_d, _184242_dest, _18437_token, _184326_refers);
		return;;
	};
}



inline jule::Bool _1ac65b669_validTypeForXof(jule::Ptr<_1ac63d2d8_TypeKind>* _187125_t) {
	return ((!(_1ac63e6a2_Void((*(_187125_t)).ptr()))) && (_1ac641c7b_Fn((*(_187125_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1ac604d93_SymbolTable__jule_tuple_s_1b08b6838_Log _1ac65e77c_buildSymbols(jule::Ptr<_1ac4a4869_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1ac4e9051_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1ac604d93_SymbolTable__jule_tuple_s_1b08b6838_Log __jule_func_result;
	jule::Ptr<_1ac4e9051_symbolBuilder> _176_sb = jule::new_ptr<_1ac4e9051_symbolBuilder>(_1ac4e9051_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_errors=jule::Slice<_1b08b6838_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1ac604d93_SymbolTable>(nullptr)});;
	_1ac4ee9d5_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1ac65eaac_collectImplicitImports(jule::Ptr<_1ac578256_sema>* _3132_s, jule::Ptr<_1ac604d93_SymbolTable>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b40c8e7b:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1ac4eed9d_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1b40c8e7b;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std::runtime", 12)) {
						_case_begin_1b40ca169:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1b40c970c:;
						{
							__jule_panic_s(jule::Str::lit("implementation mistake in implicit import collection, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1b40c9ca1:;
				};
			}
			_iter_next_1b40c8e7b:;
			++it;
			goto _iter_begin_1b40c8e7b;
		}
		_iter_end_1b40c8e7b:;
	};
}



inline __jule_tuple_x_1ac55ac0b_Package__jule_tuple_s_1b08b6838_Log _1ac65eedb_analyzePackage(jule::Slice<jule::Ptr<_1ac4a4869_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags) {
	__jule_tuple_x_1ac55ac0b_Package__jule_tuple_s_1b08b6838_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac604d93_SymbolTable>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b40cb3bd:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a4869_AST> _4814_f = *it;
			{
				jule::Ptr<_1ac604d93_SymbolTable> _497_table;
				jule::Slice<_1b08b6838_Log> _4918_errors;
				({
					__jule_tuple_x_1ac604d93_SymbolTable__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ac65e77c_buildSymbols(&(_4814_f), _4544_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1b40cb3bd:;
			++it;
			goto _iter_begin_1b40cb3bd;
		}
		_iter_end_1b40cb3bd:;
	};
	jule::Ptr<_1ac578256_sema> _566_sema = jule::new_ptr<_1ac578256_sema>(_1ac578256_sema{._field_errors=jule::Slice<_1b08b6838_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1ac604d93_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1ac604d93_SymbolTable>(nullptr), ._field_flags=(*(_4565_flags)), ._field_meta=jule::new_ptr<_1ac57762e_commonSemaMeta>(_1ac57762e_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1ac5170e6_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1ac557cd5_ImportInfo>(nullptr)})});;
	jule::Ptr<_1ac604d93_SymbolTable> _636_firstTable = _476_tables[0LL];;
	_1ac65eaac_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1ac59d974_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac55ac0b_Package> _716_pkg = jule::new_ptr<_1ac55ac0b_Package>(_1ac55ac0b_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ac55ac0b_Package__jule_tuple_s_1b08b6838_Log _1ac660492_AnalyzePackage(jule::Slice<jule::Ptr<_1ac4a4869_AST>> _9523_files, jule::Trait _9542_importer, jule::I64 _9562_flags) {
	__jule_tuple_x_1ac55ac0b_Package__jule_tuple_s_1b08b6838_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1ac65eedb_analyzePackage(&(_9523_files), &(_9542_importer), &(_9562_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ac72725c_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1b40d5e66:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _2914_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac72ccbd_builtinCallerOut), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1b40d5ecc:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _3214_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac72d1ec_builtinCallerOutln), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1b40d6043:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _3514_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac72d62b_builtinCallerNew), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1b40d60ba:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _3814_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac72da5a_builtinCallerPanic), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1b40d6263:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _4114_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac72e1ba_builtinCallerMake), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1b40d62c9:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _4414_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac72e4d9_builtinCallerAppend), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1b40d6340:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _4714_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac72ee02_builtinCallerCopy), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1b40d63b7:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _5014_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac731596_builtinCallerLen), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1b40d64e9:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _5314_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac731d49_builtinCallerCap), ._field_reloaded=false});;
				return _5314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1b40d6560:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _5614_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac732762_builtinCallerDelete), ._field_reloaded=false});;
				return _5614_f;;
			}
		}
		else {
			_case_begin_1b40d597c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b40d5ce0:;
	};
}



inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac72756a_primTypeAlias(jule::Ptr<_1ac63d2d8_TypeKind>* _6323_k) {
	return jule::new_ptr<_1ac63c4e6_TypeAlias>(_1ac63c4e6_TypeAlias{._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=(*(_6323_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1ac5a2527_Var> _1ac72ae20_findBuiltinVar(jule::Str* _9120_ident) {
	{
		auto &_match_expr{ (*(_9120_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1b40dce07:;
			{
				static jule::Ptr<_1ac5a2527_Var> _9414_v = jule::new_ptr<_1ac5a2527_Var>(_1ac5a2527_Var{._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=_1ac727878_primNil}), ._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aa12a668_NewNil()})}), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr)});;
				return _9414_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1b40dcea1:;
			{
				static jule::Ptr<_1ac5a2527_Var> _10914_v = jule::new_ptr<_1ac5a2527_Var>(_1ac5a2527_Var{._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aa129dc6_NewBool(true)})}), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr)});;
				return _10914_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1b40dd028:;
			{
				static jule::Ptr<_1ac5a2527_Var> _12214_v = jule::new_ptr<_1ac5a2527_Var>(_1ac5a2527_Var{._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1ac72b261_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ac60b6d5_Value>(_1ac60b6d5_Value{._field_Expr=jule::Ptr<_1ac4aaab2_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aa129dc6_NewBool(false)})}), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ac5a2527_Var>>(nullptr)});;
				return _12214_v;;
			}
		}
		else {
			_case_begin_1b40dc632:;
			{
				return nullptr;;
			}
		}
		_match_end_1b40d74d9:;
	};
}



inline jule::Ptr<_1ac63c4e6_TypeAlias> _1ac72b261_findBuiltinTypeAlias(jule::Str _13925_ident) {
	{
		auto &_match_expr{ _13925_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1b40e2d41:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _14214_t = _1ac72756a_primTypeAlias(&(_1ac727e2d_primAny));;
				return _14214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1b40e2ea6:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _14514_t = _1ac72756a_primTypeAlias(&(_1ac72822a_primStr));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1b40e301c:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _14814_t = _1ac72756a_primTypeAlias(&(_1ac7284d3_primBool));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1b40e30e9:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _15114_t = _1ac72756a_primTypeAlias(&(_1ac72878b_primUintptr));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1b40e3160:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _15414_t = _1ac72756a_primTypeAlias(&(_1ac728a44_primUint));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1b40e31c6:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _15714_t = _1ac72756a_primTypeAlias(&(_1ac728e0c_primInt));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1b40e323c:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _16014_t = _1ac72756a_primTypeAlias(&(_1ac72914e_primI8));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1b40e32a3:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _16314_t = _1ac72756a_primTypeAlias(&(_1ac7293e6_primI16));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1b40e3380:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _16614_t = _1ac72756a_primTypeAlias(&(_1ac729957_primI64));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1b40e3407:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _16914_t = _1ac72756a_primTypeAlias(&(_1ac729eb8_primU16));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1b40e347e:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _17214_t = _1ac72756a_primTypeAlias(&(_1ac72a271_primU32));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1b40e3506:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _17514_t = _1ac72756a_primTypeAlias(&(_1ac72a75a_primU64));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b40e357d:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _17814_t = _1ac72756a_primTypeAlias(&(_1ac72a99c_primF32));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b40e3605:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _18114_t = _1ac72756a_primTypeAlias(&(_1ac72abab_primF64));;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1b40e367c:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _18414_t = _1ac72756a_primTypeAlias(&(_1ac729c10_primU8));;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1b40e3704:;
			{
				static jule::Ptr<_1ac63c4e6_TypeAlias> _18714_t = _1ac72756a_primTypeAlias(&(_1ac72969e_primI32));;
				return _18714_t;;
			}
		}
		else {
			_case_begin_1b40dd567:;
			{
				return nullptr;;
			}
		}
		_match_end_1b40dd644:;
	};
}



inline jule::Any _1ac72b4e7_findBuiltinDef(jule::Str* _19420_ident) {
	jule::Ptr<_1ac5a2527_Var> _1956_v = _1ac72ae20_findBuiltinVar(_19420_ident);;
	if ((_1956_v != nullptr)) {
		return jule::Any(_1956_v, &__jule_any_type8);;
	};
	jule::Ptr<_1ac4dee04_FnIns> _1996_f = _1ac72725c_findBuiltinFunc(_19420_ident);;
	if ((_1996_f != nullptr)) {
		return jule::Any(_1996_f, &__jule_any_type7);;
	};
	jule::Ptr<_1ac63c4e6_TypeAlias> _2036_ta = _1ac72b261_findBuiltinTypeAlias((*(_19420_ident)));;
	if ((_2036_ta != nullptr)) {
		return jule::Any(_2036_ta, &__jule_any_type27);;
	};
	return nullptr;;
}



inline jule::Any _1ac72b7b1_findBuiltinDefStdDebug(jule::Str* _21028_ident) {
	{
		auto &_match_expr{ (*(_21028_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1b40ece4a:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _21314_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac735ac8_builtinCallerStdDebugOut), ._field_reloaded=false});;
				return jule::Any(_21314_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1b40ed346:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _21614_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac736007_builtinCallerStdDebugOutln), ._field_reloaded=false});;
				return jule::Any(_21614_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b40eb81c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b40ebc7e:;
	};
}



inline jule::Any _1ac72ba7a_findBuiltinDefStdMem(jule::Str* _22326_ident) {
	{
		auto &_match_expr{ (*(_22326_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1b40ecee4:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _22614_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac73490c_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22614_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1b40eebb6:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _22914_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac734d3b_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1b40ed07c:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _23214_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac73526a_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b40ed3ce:;
			{
				return nullptr;;
			}
		}
		_match_end_1b40ee90d:;
	};
}



inline jule::Any _1ac72be54_findBuiltinDefStdComptime(jule::Str* _23931_ident) {
	{
		auto &_match_expr{ (*(_23931_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1b410014a:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _24214_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac732b91_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_24214_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1b4102180:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _24514_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac7330c0_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_24514_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1b4102207:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _24814_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac733741_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1b41001c2:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _25114_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac733b70_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_25114_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1b4100249:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _25414_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac73409e_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_25414_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1b4102328:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _25714_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ac4dbd46_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac7344cd_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_25714_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b40ed0e3:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4101dd8:;
	};
}



inline jule::Any _1ac72c196_findBuiltinDefStdJuleIntegrated(jule::Str* _26437_ident) {
	{
		auto &_match_expr{ (*(_26437_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1b41025c0:;
			{
				static jule::Ptr<_1ac4dee04_FnIns> _26714_f = jule::new_ptr<_1ac4dee04_FnIns>(_1ac4dee04_FnIns{._field_Owner=jule::Ptr<_1ac4ca4d8_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1ac4dbd46_Fn>(_1ac4dbd46_Fn{._field_sema=jule::Ptr<_1ac578256_sema>(nullptr), ._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac4b3988_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac4b3988_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1ac4d9b57_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4da372_Param>>(nullptr), ._field_Owner=jule::Ptr<_1ac4c767d_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1ac4dee04_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1ac63b902_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac4ddc9e_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ac534ec1_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac4e308e_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ac60a55d_Data>,jule::Ptr<_1ac60c285_eval>*,jule::Ptr<_1ac4ae7db_FnCallExpr>*,jule::Ptr<_1ac60a55d_Data>*>(_1ac735699_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_26714_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b41023b1:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41064a3:;
	};
}



inline jule::Any _1ac72c51a_findPackageBuiltinDef(jule::Str* _27927_linkPath, jule::Str* _27943_ident) {
	{
		auto &_match_expr{ (*(_27927_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1b4108494:;
			{
				return _1ac72be54_findBuiltinDefStdComptime(_27943_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1b410850a:;
			{
				return _1ac72b7b1_findBuiltinDefStdDebug(_27943_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1b41081a8:;
			{
				return _1ac72ba7a_findBuiltinDefStdMem(_27943_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1b410821e:;
			{
				return _1ac72c196_findBuiltinDefStdJuleIntegrated(_27943_ident);;
			}
		}
		else {
			_case_begin_1b4107b58:;
			{
				return nullptr;;
			}
		}
		_match_end_1b410696a:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac72c88e_builtinCallerError(jule::Ptr<_1ac60c285_eval>* _29428_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _29443_fc) {
	if (((*((*(_29443_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_29428_e)).ptr(), (*((*(_29443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_29443_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_29428_e)).ptr(), (*((*((*(_29443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _3026_expr = _1ac62b0ea_evalExpr((*(_29428_e)), (*((*(_29443_fc))))._field_Args[0LL]);;
	if ((_3026_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac4912c3_Token> _3076_token = (*((*((*(_29443_fc))))._field_Args[0LL]))._field_Token;;
	if (_1ac60a97b_IsNil(_3026_expr.ptr())) {
		_1ac60c818_pushErr((*(_29428_e)).ptr(), _3076_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1ac58895e_checkValidityForInitExpr((*((*(_29428_e))))._field_s, true, false, &(_1ac727e2d_primAny), &(_3026_expr), &(_3076_token))))) {
		return nullptr;;
	};
	_1ac636b2d_applyRuntimeToStr(&((*((*(_29428_e))))._field_s), &((*(_3026_expr))._field_Kind), &(_1ac727e2d_primAny), &(_3076_token), _1ac61081b_getOwnerRefers((*(_29428_e)).ptr()));
	jule::Ptr<_1ac60a55d_Data> _3206_d = _1ac637854_buildVoidData();;
	(*(_3206_d))._field_Model=jule::Any(jule::new_ptr<_1ac4d7a45_BuiltinErrorCallExprModel>(_1ac4d7a45_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1ac4dee04_FnIns>(nullptr), ._field_Err=_3026_expr}), &__jule_any_type30);
	return _3206_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac72ccbd_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _32526_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _32541_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	if (((*((*(_32541_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_32526_e)).ptr(), (*((*(_32541_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_32541_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_32526_e)).ptr(), (*((*((*(_32541_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("out", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac4aaab2_Expr> _3346_arg = (*((*(_32541_fc))))._field_Args[0LL];;
	jule::Ptr<_1ac60a55d_Data> _3356_expr = _1ac62b0ea_evalExpr((*(_32526_e)), _3346_arg);;
	if ((_3356_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac65a4ae_isBuiltinStrConvertable(&((*(_3356_expr))._field_Kind))))) {
		_1ac60c818_pushErr((*(_32526_e)).ptr(), (*(_3346_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ac5a0ee8_pushRuntimeToStr(&((*((*(_32526_e))))._field_s), &((*(_3356_expr))._field_Kind), &((*_3346_arg.alloc)._field_Token), _1ac61081b_getOwnerRefers((*(_32526_e)).ptr()));
	jule::Ptr<_1ac60a55d_Data> _3476_d = _1ac637854_buildVoidData();;
	(*(_3476_d))._field_Model=jule::Any(jule::new_ptr<_1ac4d52b2_BuiltinOutCallExprModel>(_1ac4d52b2_BuiltinOutCallExprModel{._field_Expr=_3356_expr, ._field_Debug=false}), &__jule_any_type34);
	return _3476_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac72d1ec_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _35228_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _35243_fc, jule::Ptr<_1ac60a55d_Data>* _35265_d) {
	(*(_35265_d))=_1ac72ccbd_builtinCallerOut(nullptr, _35228_e, _35243_fc, _35265_d);
	if (((*(_35265_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_35265_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d568b_BuiltinOutlnCallExprModel>(_1ac4d568b_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_35265_d))))._field_Model.cast_ptr<_1ac4d52b2_BuiltinOutCallExprModel>(&__jule_any_type34)))._field_Expr, ._field_Debug=false}), &__jule_any_type35);
	return (*(_35265_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac72d62b_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _36426_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _36441_fc, jule::Ptr<_1ac60a55d_Data>* _36463_d) {
	if (((*((*(_36441_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_36426_e)).ptr(), (*((*(_36441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_36441_fc))))._field_Args.len() > 2LL)) {
		_1ac60c818_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _3736_t = _1ac62a627_eval1((*(_36426_e)), (*((*(_36441_fc))))._field_Args[0LL]);;
	if ((_3736_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3736_t))._field_Decl))) {
		_1ac60c818_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1ac659e5e_isValidForSptrType(&((*(_3736_t))._field_Kind))))) {
		jule::Ptr<_1ac4ca4d8_StructIns> _3847_s = _1ac642012_Struct((*(_3736_t))._field_Kind.ptr());;
		if ((((_3847_s != nullptr) && ((*_3847_s.alloc)._field_Decl != nullptr)) && (*(*(_3847_s))._field_Decl.alloc)._field_Binded)) {
			_1ac60c818_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_36463_d))))._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac649e2c_Sptr>(_1ac649e2c_Sptr{._field_Elem=(*(_3736_t))._field_Kind}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23)});
	if (((*((*(_36441_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ac63d2d8_TypeKind> _3987_old = (*((*(_36426_e))))._field_prefix;;
		(*((*(_36426_e))))._field_prefix=(*(_3736_t))._field_Kind;
		jule::Ptr<_1ac60a55d_Data> _4017_init = _1ac62b0ea_evalExpr((*(_36426_e)), (*((*(_36441_fc))))._field_Args[1LL]);;
		(*((*(_36426_e))))._field_prefix=_3987_old;
		if ((_4017_init != nullptr)) {
			jule::Ptr<_1ac4912c3_Token> _4068_token = (*((*((*(_36441_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1ac58895e_checkValidityForInitExpr((*((*(_36426_e))))._field_s, (!((*((*(_36426_e))))._field_immutable)), false, &((*(_3736_t))._field_Kind), &(_4017_init), &(_4068_token));
			_1ac5841c9_checkAssignType((*((*(_36426_e))))._field_s, false, &((*(_3736_t))._field_Kind), &(_4017_init), _4068_token, _1ac61081b_getOwnerRefers((*(_36426_e)).ptr()));
			(*((*(_36463_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d5a65_BuiltinNewCallExprModel>(_1ac4d5a65_BuiltinNewCallExprModel{._field_Kind=(*(_3736_t))._field_Kind, ._field_Init=(*_4017_init.alloc)._field_Model}), &__jule_any_type115);
		};
	} else {
		(*((*(_36463_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d5a65_BuiltinNewCallExprModel>(_1ac4d5a65_BuiltinNewCallExprModel{._field_Kind=(*(_3736_t))._field_Kind, ._field_Init=jule::Any(nullptr)}), &__jule_any_type115);
	};
	return (*(_36463_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac72da5a_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _42628_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _42643_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	if (((*((*(_42643_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_42628_e)).ptr(), (*((*(_42643_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_42643_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_42628_e)).ptr(), (*((*((*(_42643_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _4356_expr = _1ac62b0ea_evalExpr((*(_42628_e)), (*((*(_42643_fc))))._field_Args[0LL]);;
	if ((_4356_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ac64098e_Prim((*(_4356_expr))._field_Kind.ptr()) == nullptr) || (!(_1ac6498bb_IsStr(_1ac64098e_Prim((*(_4356_expr))._field_Kind).ptr()))))) {
		_1ac60c818_pushErr((*(_42628_e)).ptr(), (*((*(_42643_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac60a55d_Data> _4446_d = _1ac637854_buildVoidData();;
	(*(_4446_d))._field_Model=jule::Any(jule::new_ptr<_1ac4d5e3e_BuiltinPanicCallExprModel>(_1ac4d5e3e_BuiltinPanicCallExprModel{._field_Token=(*((*(_42643_fc))))._field_Token, ._field_Expr=(*(_4356_expr))._field_Model}), &__jule_any_type36);
	return _4446_d;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac72e1ba_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _45227_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _45242_fc, jule::Ptr<_1ac60a55d_Data>* _45264_d) {
	if (((*((*(_45242_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_45242_fc))))._field_Args.len() == 1LL)) {
			_1ac60c818_pushErr((*(_45227_e)).ptr(), (*((*(_45242_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1ac60c818_pushErr((*(_45227_e)).ptr(), (*((*(_45242_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_45242_fc))))._field_Args.len() > 3LL)) {
		_1ac60c818_pushErr((*(_45227_e)).ptr(), (*((*((*(_45242_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac60a55d_Data> _4656_t = _1ac62a2d6_evalExprKind((*(_45227_e)), (*((*((*(_45242_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4656_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4656_t))._field_Decl))) {
		_1ac60c818_pushErr((*(_45227_e)).ptr(), (*((*((*(_45242_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1ac6419e5_Slc((*(_4656_t))._field_Kind.ptr()) == nullptr)) {
		_1ac60c818_pushErr((*(_45227_e)).ptr(), (*((*((*(_45242_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_4656_t))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_45264_d))))._field_Kind=(*(_4656_t))._field_Kind;
	jule::Ptr<_1ac60a55d_Data> _4806_lenExpr = _1ac62b0ea_evalExpr(_1ac58376c_evalp((*((*(_45227_e))))._field_s, (*((*(_45227_e))))._field_lookup, (*(_4656_t))._field_Kind), (*((*(_45242_fc))))._field_Args[1LL]);;
	if ((_4806_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1ac61658b_checkIntegerIndexingByData((*(_45227_e)).ptr(), &(_4806_lenExpr), (*((*((*(_45242_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1ac4d63e5_BuiltinMakeCallExprModel> _4876_model = jule::new_ptr<_1ac4d63e5_BuiltinMakeCallExprModel>(_1ac4d63e5_BuiltinMakeCallExprModel{._field_Kind=(*(_4656_t))._field_Kind, ._field_Len=(*(_4806_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_45264_d))))._field_Model=jule::Any(_4876_model, &__jule_any_type116);
	if (((*((*(_45242_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1ac60a55d_Data> _4937_capExpr = _1ac62b0ea_evalExpr(_1ac58376c_evalp((*((*(_45227_e))))._field_s, (*((*(_45227_e))))._field_lookup, (*(_4656_t))._field_Kind), (*((*(_45242_fc))))._field_Args[2LL]);;
		if ((_4937_capExpr == nullptr)) {
			return (*(_45264_d));;
		};
		_1ac61658b_checkIntegerIndexingByData((*(_45227_e)).ptr(), &(_4937_capExpr), (*((*((*(_45242_fc))))._field_Args[2LL]))._field_Token);
		(*(_4876_model))._field_Cap=(*(_4937_capExpr))._field_Model;
	};
	return (*(_45264_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac72e4d9_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _50329_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _50344_fc, jule::Ptr<_1ac60a55d_Data>* _50366_d) {
	if (((*((*(_50344_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_50344_fc))))._field_Args.len() == 1LL)) {
			_1ac60c818_pushErr((*(_50329_e)).ptr(), (*((*(_50344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1ac60c818_pushErr((*(_50329_e)).ptr(), (*((*(_50344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac4aaab2_Expr> _5136_firstArg = (*((*(_50344_fc))))._field_Args[0LL];;
	jule::Ptr<_1ac60a55d_Data> _5146_t = _1ac62b0ea_evalExpr((*(_50329_e)), _5136_firstArg);;
	if ((_5146_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac64a900_Slc> _5196_s = _1ac6419e5_Slc((*(_5146_t))._field_Kind.ptr());;
	if ((_5196_s == nullptr)) {
		_1ac60c818_pushErr((*(_50329_e)).ptr(), (*(_5136_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1ac58895e_checkValidityForInitExpr((*((*(_50329_e))))._field_s, true, false, &((*(_5146_t))._field_Kind), &(_5146_t), &((*_5136_firstArg.alloc)._field_Token))) {
		_1ac5841c9_checkAssignType((*((*(_50329_e))))._field_s, false, &((*(_5146_t))._field_Kind), &(_5146_t), (*_5136_firstArg.alloc)._field_Token, _1ac61081b_getOwnerRefers((*(_50329_e)).ptr()));
	};
	jule::Ptr<_1ac63d2d8_TypeKind> _5346_prefix = (*((*(_50329_e))))._field_prefix;;
	(*((*(_50329_e))))._field_prefix=(*(_5146_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_50329_e))))._field_prefix=_5346_prefix;
	});;
	(*(_50366_d))=jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=(*(_5146_t))._field_Kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});
	jule::Ptr<_1ac4aaab2_Expr> _5426_secondArg = (*((*(_50344_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5426_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b414c7b3:;
			{
				if (((*((*(_50344_fc))))._field_Args.len() > 2LL)) {
					_1ac60c818_pushErr((*(_50329_e)).ptr(), (*((*((*(_50344_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ac60a55d_Data> _5497_e1 = _1ac62b0ea_evalExpr((*(_50329_e)), (*((*(_5426_secondArg))._field_Kind.unsafe_cast_ptr<_1ac4ad048_VariadicExpr>()))._field_Expr);;
				if ((_5497_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1ac64098e_Prim((*(_5196_s))._field_Elem.ptr()) != nullptr) && _1ac647d2b_IsU8(_1ac64098e_Prim((*(_5196_s))._field_Elem).ptr()))) {
					if (((_1ac64098e_Prim((*(_5497_e1))._field_Kind) != nullptr) && _1ac6498bb_IsStr(_1ac64098e_Prim((*(_5497_e1))._field_Kind).ptr()))) {
						_1ac63a45b_makeVariadic(&(_5497_e1), _1ac729c10_primU8);
						(*((*(_50366_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d67be_BuiltinAppendCallExprModel>(_1ac4d67be_BuiltinAppendCallExprModel{._field_Dest=(*(_5146_t))._field_Model, ._field_Elements=(*(_5497_e1))._field_Model}), &__jule_any_type33);
						return (*(_50366_d));;
					};
				};
				if ((!(_1ac640708_Variadicable((*(_5497_e1))._field_Kind)))) {
					_1ac60c818_pushErr((*(_50329_e)).ptr(), (*(_5426_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_5497_e1))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1ac63a45b_makeVariadic(&(_5497_e1), (*(_5196_s))._field_Elem);
				(*(*(_5497_e1))._field_Kind.alloc)._field_Variadic=false;
				if (_1ac58895e_checkValidityForInitExpr((*((*(_50329_e))))._field_s, true, false, &((*(_5196_s))._field_Elem), &(_5497_e1), &((*_5426_secondArg.alloc)._field_Token))) {
					(*(*(_5497_e1))._field_Kind.alloc)._field_Variadic=true;
					_1ac5841c9_checkAssignType((*((*(_50329_e))))._field_s, false, &((*(_5196_s))._field_Elem), &(_5497_e1), (*_5426_secondArg.alloc)._field_Token, _1ac61081b_getOwnerRefers((*(_50329_e)).ptr()));
				} else {
					(*(*(_5497_e1))._field_Kind.alloc)._field_Variadic=true;
				};
				(*((*(_50366_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d67be_BuiltinAppendCallExprModel>(_1ac4d67be_BuiltinAppendCallExprModel{._field_Dest=(*(_5146_t))._field_Model, ._field_Elements=(*(_5497_e1))._field_Model}), &__jule_any_type33);
				return (*(_50366_d));;
			}
		}
		_match_end_1b414c73b:;
	};
	jule::Ptr<_1ac60a55d_Data> _5926_e1 = _1ac62b0ea_evalExpr((*(_50329_e)), _5426_secondArg);;
	if ((_5926_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac4d1ba4_SliceExprModel> _5976_slice = jule::new_ptr<_1ac4d1ba4_SliceExprModel>(_1ac4d1ba4_SliceExprModel{._field_ElemKind=(*(_5196_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_50344_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_50344_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b41598be:;
		if (it != expr_end) {
			jule::Ptr<_1ac4aaab2_Expr> _60114_arg = *it;
			{
				_5926_e1=_1ac62b0ea_evalExpr((*(_50329_e)), _60114_arg);
				if ((_5926_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5926_e1))._field_Kind.alloc)._field_Variadic) {
					_1ac60c818_pushErr((*(_50329_e)).ptr(), (*(_60114_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1ac58895e_checkValidityForInitExpr((*((*(_50329_e))))._field_s, true, false, &((*(_5196_s))._field_Elem), &(_5926_e1), &((*_60114_arg.alloc)._field_Token))) {
					_1ac5841c9_checkAssignType((*((*(_50329_e))))._field_s, false, &((*(_5196_s))._field_Elem), &(_5926_e1), (*_60114_arg.alloc)._field_Token, _1ac61081b_getOwnerRefers((*(_50329_e)).ptr()));
				};
				(*(_5976_slice))._field_Elems=jule::append((*_5976_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5926_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1b41598be:;
			++it;
			goto _iter_begin_1b41598be;
		}
		_iter_end_1b41598be:;
	};
	(*((*(_50366_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d67be_BuiltinAppendCallExprModel>(_1ac4d67be_BuiltinAppendCallExprModel{._field_Dest=(*(_5146_t))._field_Model, ._field_Elements=jule::Any(_5976_slice, &__jule_any_type79)}), &__jule_any_type33);
	return (*(_50366_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac72e9c3_callerCopySlice(jule::Ptr<_1ac60a55d_Data>* _62325_dest, jule::Ptr<_1ac60c285_eval>* _62343_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _62358_fc, jule::Ptr<_1ac60a55d_Data>* _62380_d) {
	if ((!((*((*(_62325_dest))))._field_Mutable))) {
		_1ac60c818_pushErr((*(_62343_e)).ptr(), (*((*((*(_62358_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac60a55d_Data> _6286_src = _1ac62b0ea_evalExpr((*(_62343_e)), (*((*(_62358_fc))))._field_Args[1LL]);;
	if ((_6286_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac64a900_Slc> _6326_slc = _1ac6419e5_Slc((*(_6286_src))._field_Kind.ptr());;
	if ((_6326_slc != nullptr)) {
		if (((!((*(_6286_src))._field_Mutable)) && _1ac63ebbe_Mutable((*_6326_slc.alloc)._field_Elem.ptr()))) {
			_1ac60c818_pushErr((*(_62343_e)).ptr(), (*((*((*(_62358_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1ac63da25_Equal((*((*(_62325_dest))))._field_Kind, (*(_6286_src))._field_Kind)))) {
			_1ac60c818_pushErr((*(_62343_e)).ptr(), (*((*((*(_62358_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_62325_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_6286_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1ac646401_Prim> _6423_destPrim = _1ac64098e_Prim((*(_1ac6419e5_Slc((*((*(_62325_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1ac646401_Prim> _6433_prim = _1ac64098e_Prim((*(_6286_src))._field_Kind);;
		if (((((_6423_destPrim == nullptr) || (_6433_prim == nullptr)) || (!(_1ac6498bb_IsStr(_6433_prim.ptr())))) || (!(_1ac647d2b_IsU8(_6423_destPrim.ptr()))))) {
			_1ac60c818_pushErr((*(_62343_e)).ptr(), (*((*((*(_62358_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*((*(_62325_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_6286_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	};
	(*((*(_62380_d))))._field_Kind=_1ac603b3e_lenKind();
	(*((*(_62380_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d766b_BuiltinCopyCallExprModel>(_1ac4d766b_BuiltinCopyCallExprModel{._field_Dest=(*(_62325_dest)), ._field_Src=_6286_src}), &__jule_any_type37);
	return (*(_62380_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac72ee02_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _65727_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _65742_fc, jule::Ptr<_1ac60a55d_Data>* _65764_d) {
	if (((*((*(_65742_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_65742_fc))))._field_Args.len() == 1LL)) {
			_1ac60c818_pushErr((*(_65727_e)).ptr(), (*((*(_65742_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1ac60c818_pushErr((*(_65727_e)).ptr(), (*((*(_65742_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_65742_fc))))._field_Args.len() > 2LL)) {
		_1ac60c818_pushErr((*(_65727_e)).ptr(), (*((*((*(_65742_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _6706_dest = _1ac62b0ea_evalExpr((*(_65727_e)), (*((*(_65742_fc))))._field_Args[0LL]);;
	{
		
		if ((_6706_dest == nullptr)) {
			_case_begin_1b45971d5:;
			{
				return nullptr;;
			}
		}
		else if ((_1ac6419e5_Slc((*(_6706_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b4597ed8:;
			{
				return _1ac72e9c3_callerCopySlice(&(_6706_dest), _65727_e, _65742_fc, _65764_d);;
			}
		}
		else {
			_case_begin_1b4596d1c:;
			{
				_1ac60c818_pushErr((*(_65727_e)).ptr(), (*((*((*(_65742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b459516c:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac730276_callerLenSlice(jule::Ptr<_1ac60a55d_Data>* _68224_expr, jule::Ptr<_1ac60a55d_Data>* _68242_d) {
	(*((*(_68242_d))))._field_Kind=_1ac603b3e_lenKind();
	(*((*(_68242_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d6abb_BuiltinLenCallExprModel>(_1ac4d6abb_BuiltinLenCallExprModel{._field_Expr=(*(_68224_expr))}), &__jule_any_type117);
	return (*(_68242_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac7305ea_callerLenMap(jule::Ptr<_1ac60a55d_Data>* _69022_expr, jule::Ptr<_1ac60a55d_Data>* _69040_d) {
	(*((*(_69040_d))))._field_Kind=_1ac603b3e_lenKind();
	(*((*(_69040_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d6abb_BuiltinLenCallExprModel>(_1ac4d6abb_BuiltinLenCallExprModel{._field_Expr=(*(_69022_expr))}), &__jule_any_type117);
	return (*(_69040_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac73096e_callerLenArr(jule::Ptr<_1ac60a55d_Data>* _69822_expr, jule::Ptr<_1ac60a55d_Data>* _69840_d) {
	(*((*(_69840_d))))._field_Kind=_1ac603b3e_lenKind();
	(*((*(_69840_d))))._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>((*(_1ac64175e_Arr((*((*(_69822_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_69840_d))))._field_Model=jule::Any((*((*(_69840_d))))._field_Constant, &__jule_any_type20);
	return (*(_69840_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac730ce3_callerLenStr(jule::Ptr<_1ac60a55d_Data>* _70522_expr, jule::Ptr<_1ac60a55d_Data>* _70540_d) {
	(*((*(_70540_d))))._field_Kind=_1ac603b3e_lenKind();
	if (_1ac60ae98_IsConst((*(_70522_expr)).ptr())) {
		(*((*(_70540_d))))._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>(_1aa12b57b_ReadStr((*((*(_70522_expr))))._field_Constant.ptr()).len()));
		(*((*(_70540_d))))._field_Model=jule::Any((*((*(_70540_d))))._field_Constant, &__jule_any_type20);
	} else {
		(*((*(_70540_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d6abb_BuiltinLenCallExprModel>(_1ac4d6abb_BuiltinLenCallExprModel{._field_Expr=(*(_70522_expr))}), &__jule_any_type117);
	};
	return (*(_70540_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac731167_callerLenComptime(jule::Ptr<_1ac60a55d_Data>* _71827_d, jule::I64 _71837_n) {
	(*((*(_71827_d))))._field_Kind=_1ac603b3e_lenKind();
	(*((*(_71827_d))))._field_Constant=static__1aa129843_NewI64(static_cast<jule::I64>(_71837_n));
	(*((*(_71827_d))))._field_Model=jule::Any((*((*(_71827_d))))._field_Constant, &__jule_any_type20);
	return (*(_71827_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac731596_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _72526_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _72541_fc, jule::Ptr<_1ac60a55d_Data>* _72563_d) {
	if (((*((*(_72541_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_72526_e)).ptr(), (*((*(_72541_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_72541_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_72526_e)).ptr(), (*((*((*(_72541_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _7336_dest = _1ac62aca9_evalExpr1((*(_72526_e)), (*((*(_72541_fc))))._field_Args[0LL]);;
	{
		
		if ((_7336_dest == nullptr)) {
			_case_begin_1b45a739e:;
			{
				return nullptr;;
			}
		}
		else if ((_1ac6419e5_Slc((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b45a81a2:;
			{
				return _1ac730276_callerLenSlice(&(_7336_dest), _72563_d);;
			}
		}
		else if ((_1ac64175e_Arr((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b45a8218:;
			{
				return _1ac73096e_callerLenArr(&(_7336_dest), _72563_d);;
			}
		}
		else if ((_1ac64252e_Map((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b45a704c:;
			{
				return _1ac7305ea_callerLenMap(&(_7336_dest), _72563_d);;
			}
		}
		else if (((_1ac64098e_Prim((*(_7336_dest))._field_Kind.ptr()) != nullptr) && _1ac6498bb_IsStr(_1ac64098e_Prim((*(_7336_dest))._field_Kind).ptr()))) {
			_case_begin_1b45a70b3:;
			{
				return _1ac730ce3_callerLenStr(&(_7336_dest), _72563_d);;
			}
		}
		else if ((_1ac642cd2_comptimeStructFields((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b45a7129:;
			{
				return _1ac731167_callerLenComptime(_72563_d, (*(_1ac642cd2_comptimeStructFields((*(_7336_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1ac6432ee_comptimeEnumFields((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b45a7190:;
			{
				return _1ac731167_callerLenComptime(_72563_d, (*(_1ac6432ee_comptimeEnumFields((*(_7336_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1ac6440be_comptimeTypeInfos((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b45a8306:;
			{
				return _1ac731167_callerLenComptime(_72563_d, (*(_1ac6440be_comptimeTypeInfos((*(_7336_dest))._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1ac64381b_comptimeParams((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b45a836c:;
			{
				return _1ac731167_callerLenComptime(_72563_d, (*(_1ac64381b_comptimeParams((*(_7336_dest))._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1ac6445db_comptimeStatics((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b45a83d3:;
			{
				return _1ac731167_callerLenComptime(_72563_d, (*(_1ac6445db_comptimeStatics((*(_7336_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1ac645642_comptimeFiles((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b45a8449:;
			{
				return _1ac731167_callerLenComptime(_72563_d, (*(_1ac645642_comptimeFiles((*(_7336_dest))._field_Kind)))._field_files.len());;
			}
		}
		else if ((_1ac645125_comptimeDecls((*(_7336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b45a84b0:;
			{
				return _1ac731167_callerLenComptime(_72563_d, (*(_1ac645125_comptimeDecls((*(_7336_dest))._field_Kind)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1b45a6ed6:;
			{
				_1ac60c818_pushErr((*(_72526_e)).ptr(), (*((*((*(_72541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b45a5336:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac73191a_callerCapSlice(jule::Ptr<_1ac60a55d_Data>* _76524_expr, jule::Ptr<_1ac60a55d_Data>* _76542_d) {
	(*((*(_76542_d))))._field_Kind=_1ac603b3e_lenKind();
	(*((*(_76542_d))))._field_Model=jule::Any(jule::new_ptr<_1ac4d6db8_BuiltinCapCallExprModel>(_1ac4d6db8_BuiltinCapCallExprModel{._field_Expr=(*(_76524_expr))}), &__jule_any_type118);
	return (*(_76542_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac731d49_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _77326_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _77341_fc, jule::Ptr<_1ac60a55d_Data>* _77363_d) {
	if (((*((*(_77341_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_77326_e)).ptr(), (*((*(_77341_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_77341_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_77326_e)).ptr(), (*((*((*(_77341_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _7816_dest = _1ac62b0ea_evalExpr((*(_77326_e)), (*((*(_77341_fc))))._field_Args[0LL]);;
	{
		
		if ((_7816_dest == nullptr)) {
			_case_begin_1b2e02e4e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7816_dest))._field_Decl) {
			_case_begin_1b2e05a56:;
			{
				_1ac60c818_pushErr((*(_77326_e)).ptr(), (*((*((*(_77341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ac6419e5_Slc((*(_7816_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2e05abc:;
			{
				return _1ac73191a_callerCapSlice(&(_7816_dest), _77363_d);;
			}
		}
		else {
			_case_begin_1b45ba736:;
			{
				_1ac60c818_pushErr((*(_77326_e)).ptr(), (*((*((*(_77341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b45b77ee:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac732333_callerDeleteMap(jule::Ptr<_1ac60c285_eval>* _79625_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _79640_fc, jule::Ptr<_1ac60a55d_Data>* _79662_expr, jule::Ptr<_1ac60a55d_Data>* _79680_d) {
	if ((!((*((*(_79662_expr))))._field_Mutable))) {
		_1ac60c818_pushErr((*(_79625_e)).ptr(), (*((*((*(_79640_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_79680_d))=_1ac637854_buildVoidData();
	jule::Ptr<_1ac4d7292_BuiltinDeleteCallExprModel> _8016_model = jule::new_ptr<_1ac4d7292_BuiltinDeleteCallExprModel>(_1ac4d7292_BuiltinDeleteCallExprModel{._field_Dest=(*(_79662_expr)), ._field_Key=jule::Ptr<_1ac60a55d_Data>(nullptr)});;
	if (((*((*(_79640_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ac60a55d_Data> _8057_key = _1ac62b0ea_evalExpr((*(_79625_e)), (*((*(_79640_fc))))._field_Args[1LL]);;
		{
			
			if ((_8057_key == nullptr)) {
				_case_begin_1b31a837a:;
				{
					return nullptr;;
				}
			}
			else if ((*(_8057_key))._field_Decl) {
				_case_begin_1b31ceb21:;
				{
					_1ac60c818_pushErr((*(_79625_e)).ptr(), (*((*((*(_79640_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1b31d0270:;
				{
					;
					jule::Ptr<_1ac63d2d8_TypeKind> _8148_keyType = (*(_1ac64252e_Map((*((*(_79662_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1ac5841c9_checkAssignType((*((*(_79625_e))))._field_s, false, &(_8148_keyType), &(_8057_key), (*((*((*(_79640_fc))))._field_Args[1LL]))._field_Token, _1ac61081b_getOwnerRefers((*(_79625_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1b31d38d3:;
		};
		(*(_8016_model))._field_Key=_8057_key;
	};
	(*((*(_79680_d))))._field_Model=jule::Any(_8016_model, &__jule_any_type38);
	return (*(_79680_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac732762_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _82529_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _82544_fc, jule::Ptr<_1ac60a55d_Data>* _82566_d) {
	if (((*((*(_82544_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_82529_e)).ptr(), (*((*(_82544_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_82544_fc))))._field_Args.len() > 2LL)) {
		_1ac60c818_pushErr((*(_82529_e)).ptr(), (*((*((*(_82544_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _8336_dest = _1ac62b0ea_evalExpr((*(_82529_e)), (*((*(_82544_fc))))._field_Args[0LL]);;
	{
		
		if ((_8336_dest == nullptr)) {
			_case_begin_1b3e6ccba:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8336_dest))._field_Decl) {
			_case_begin_1b3e6dabd:;
			{
				_1ac60c818_pushErr((*(_82529_e)).ptr(), (*((*((*(_82544_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ac64252e_Map((*(_8336_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3e6db34:;
			{
				return _1ac732333_callerDeleteMap(_82529_e, _82544_fc, &(_8336_dest), _82566_d);;
			}
		}
		else {
			_case_begin_1b3e6c902:;
			{
				_1ac60c818_pushErr((*(_82529_e)).ptr(), (*((*((*(_82544_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b3e6ac52:;
	};
}



inline jule::Ptr<_1ac60a55d_Data> _1ac732b91_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _84840_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _84855_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	if (((*((*(_84855_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_84840_e)).ptr(), (*((*(_84855_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_84855_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_84840_e)).ptr(), (*((*((*(_84855_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _8576_d = _1ac62a2d6_evalExprKind((*(_84840_e)), (*((*((*(_84855_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8576_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _8612_f = _1ac641c7b_Fn((*(_8576_d))._field_Kind.ptr());;
	if ((_8612_f != nullptr)) {
		if (_1ac4e13bc_IsBuiltin(_8612_f)) {
			_1ac60c818_pushErr((*(_84840_e)).ptr(), (*((*((*(_84855_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8612_f.alloc)._field_Generics.len() != (*((*_8612_f.alloc)._field_Decl))._field_Generics.len())) {
			_1ac60c818_pushErr((*(_84840_e)).ptr(), (*((*((*(_84855_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _8722_s = _1ac642012_Struct((*(_8576_d))._field_Kind);;
	if (((_8722_s != nullptr) && ((*_8722_s.alloc)._field_Generics.len() != (*((*_8722_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1ac60c818_pushErr((*(_84840_e)).ptr(), (*((*((*(_84855_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1ac642a4b_comptime((*(_8576_d))._field_Kind)) {
		_1ac60c818_pushErr((*(_84840_e)).ptr(), (*((*((*(_84855_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_8576_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1ac52b35d_buildComptimeTypeInfoData(&((*((*(_84840_e))))._field_s), &((*(_8576_d))._field_Kind));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac7330c0_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _88441_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _88456_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	if (((*((*(_88456_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_88441_e)).ptr(), (*((*(_88456_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_88456_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_88441_e)).ptr(), (*((*((*(_88456_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _8926_d = _1ac62b0ea_evalExpr((*(_88441_e)), (*((*(_88456_fc))))._field_Args[0LL]);;
	if ((_8926_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac603e91_isGoodValueToInfer(&(_8926_d))))) {
		_1ac60c818_pushErr((*(_88441_e)).ptr(), (*((*((*(_88456_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_8926_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1ac52b69e_buildComptimeValue(&(_8926_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac733741_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _90438_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _90453_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	if (((*((*(_90453_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_90438_e)).ptr(), (*((*((*(_90453_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1aa1293c0_Const> _9086_constant = static__1aa129843_NewI64(static_cast<jule::I64>((*((*((*(_90453_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac728e0c_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9086_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9086_constant});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac733b70_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _91638_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _91653_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	if (((*((*(_91653_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_91638_e)).ptr(), (*((*((*(_91653_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac5228c6_comptimeFile>(_1ac5228c6_comptimeFile{._field_file=(*((*((*(_91638_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac73409e_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _92939_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _92954_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	if (((*((*(_92954_fc))))._field_Args.len() > 0LL)) {
		_1ac60c818_pushErr((*(_92939_e)).ptr(), (*((*((*(_92954_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac520e57_comptimeFiles>(_1ac520e57_comptimeFiles{._field_files=(*((*((*(_92939_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac7344cd_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _94243_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _94258_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	if (((*((*(_94258_fc))))._field_Args.len() > 2LL)) {
		_1ac60c818_pushErr((*(_94243_e)).ptr(), (*((*((*(_94258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_94258_fc))))._field_Args.len() == 0LL)) {
		_1ac60c818_pushErr((*(_94243_e)).ptr(), (*((*(_94258_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_94258_fc))))._field_Args.len() == 1LL)) {
		_1ac60c818_pushErr((*(_94243_e)).ptr(), (*((*(_94258_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_94258_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b3e8c1b3:;
			{
				goto _match_end_1b3e8d48e;
			}
		}
		else {
			_case_begin_1b3e8d516:;
			{
				_1ac60c818_pushErr((*(_94243_e)).ptr(), (*((*((*(_94258_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ac60cb7b_pushSuggestion((*(_94243_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b3e8d48e:;
	};
	jule::Ptr<_1ac4912c3_Token> _9636_ident = (*((*((*((*(_94258_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1ac4ac3cc_IdentExpr>(&__jule_any_type51)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_94243_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0)) {
			_case_begin_1b3e90a9b:;
			{
				goto _match_end_1b3e90ccc;
			}
		}
		else {
			_case_begin_1b3e90d43:;
			{
				_1ac60c818_pushErr((*(_94243_e)).ptr(), (*((*(_94258_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1b3e90ccc:;
	};
	jule::Ptr<_1ac53c25e_scopeChecker> _9726_sc = (*((*(_94243_e))))._field_lookup.cast_ptr<_1ac53c25e_scopeChecker>((jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data0);;
	jule::Ptr<_1ac63c4e6_TypeAlias> _9736_alias = jule::new_ptr<_1ac63c4e6_TypeAlias>(_1ac63c4e6_TypeAlias{._field_Scope=(*(_9726_sc))._field_tree, ._field_Public=_1ac575242_IsPub((*(_9636_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9636_ident, ._field_Ident=(*_9636_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1ac6459e9_TypeSymbol>(_1ac6459e9_TypeSymbol{._field_Decl=jule::Ptr<_1ac4a677d_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1ac63d2d8_TypeKind>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>(nullptr)});;
	jule::Ptr<_1ac60a55d_Data> _9836_t = _1ac62a627_eval1((*(_94243_e)), (*((*(_94258_fc))))._field_Args[1LL]);;
	if ((_9836_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9836_t))._field_Decl) {
		(*((*(_9736_alias))._field_Kind))._field_Kind=(*(_9836_t))._field_Kind;
	} else {
		jule::Ptr<_1ac5170e6_comptimeTypeInfo> _9907_cti = _1ac644355_comptimeTypeInfo((*(_9836_t))._field_Kind.ptr());;
		if ((_9907_cti == nullptr)) {
			_1ac60c818_pushErr((*(_94243_e)).ptr(), (*((*((*(_94258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1ac60cb7b_pushSuggestion((*(_94243_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9736_alias))._field_Kind))._field_Kind=(*(_9907_cti))._field_base;
	};
	_1ac5423c9_checkTypeAlias(_9726_sc, &(_9736_alias));
	return _1ac637854_buildVoidData();;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac73490c_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _100235_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _100250_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<_1ac60a55d_Data> _10036_result = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac728a44_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
	if (((*((*(_100250_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_100235_e)).ptr(), (*((*(_100250_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10036_result;;
	};
	if (((*((*(_100250_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_100235_e)).ptr(), (*((*((*(_100250_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _10156_d = _1ac62a2d6_evalExprKind((*(_100235_e)), (*((*((*(_100250_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10156_d == nullptr)) {
		return _10036_result;;
	};
	if ((!(_1ac65b669_validTypeForXof(&((*(_10156_d))._field_Kind))))) {
		_1ac60c818_pushErr((*(_100235_e)).ptr(), (*((*((*(_100250_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_10156_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10036_result))._field_Model=jule::Any(jule::new_ptr<_1ac4d7d42_SizeofExprModel>(_1ac4d7d42_SizeofExprModel{._field_Expr=(*(_10156_d))._field_Model}), &__jule_any_type119);
	return _10036_result;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac734d3b_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _102736_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _102751_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<_1ac60a55d_Data> _10286_result = jule::new_ptr<_1ac60a55d_Data>(_1ac60a55d_Data{._field_untyped=false, ._field_Kind=_1ac728a44_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa1293c0_Const>(nullptr)});;
	if (((*((*(_102751_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_102736_e)).ptr(), (*((*(_102751_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10286_result;;
	};
	if (((*((*(_102751_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_102736_e)).ptr(), (*((*((*(_102751_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _10406_d = _1ac62a2d6_evalExprKind((*(_102736_e)), (*((*((*(_102751_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10406_d == nullptr)) {
		return _10286_result;;
	};
	if ((!(_1ac65b669_validTypeForXof(&((*(_10406_d))._field_Kind))))) {
		_1ac60c818_pushErr((*(_102736_e)).ptr(), (*((*((*(_102751_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac63d6d4_Str((*(_10406_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10286_result))._field_Model=jule::Any(jule::new_ptr<_1ac4d84e6_AlignofExprModel>(_1ac4d84e6_AlignofExprModel{._field_Expr=(*(_10406_d))._field_Model}), &__jule_any_type120);
	return _10286_result;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac73526a_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _105233_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _105248_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	if (((*((*(_105248_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_105233_e)).ptr(), (*((*(_105248_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_105248_fc))))._field_Args.len() > 1LL)) {
		_1ac60c818_pushErr((*(_105233_e)).ptr(), (*((*((*(_105248_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1ac60a55d_Data> _10616_d = _1ac62b0ea_evalExpr((*(_105233_e)), (*((*(_105248_fc))))._field_Args[0LL]);;
	if ((_10616_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac640472_GC((*(_10616_d))._field_Kind.ptr())))) {
		_1ac60c818_pushErr((*(_105233_e)).ptr(), (*((*((*(_105248_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac60a55d_Data> _10706_result = _1ac637854_buildVoidData();;
	(*(_10706_result))._field_Model=jule::Any(jule::new_ptr<_1ac4d8d54_FreeExprModel>(_1ac4d8d54_FreeExprModel{._field_Expr=(*(_10616_d))._field_Model}), &__jule_any_type39);
	return _10706_result;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac735699_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _107544_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _107559_fc, jule::Ptr<_1ac60a55d_Data>* _107581_d) {
	if ((!(_1ac60d30d_isUnsafe((*(_107544_e)).ptr())))) {
		_1ac60c818_pushErr((*(_107544_e)).ptr(), (*((*(_107559_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_107559_fc))))._field_Args.len() < 1LL)) {
		_1ac60c818_pushErr((*(_107544_e)).ptr(), (*((*(_107559_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac60a55d_Data> _10856_argd = _1ac62b0ea_evalExpr((*(_107544_e)), (*((*(_107559_fc))))._field_Args[0LL]);;
	if ((_10856_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1ac64098e_Prim((*(_10856_argd))._field_Kind.ptr()) == nullptr) || (!(_1ac6498bb_IsStr(_1ac64098e_Prim((*(_10856_argd))._field_Kind).ptr()))))) {
		_1ac60c818_pushErr((*(_107544_e)).ptr(), (*((*((*(_107559_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1ac63d6d4_Str((*(_10856_argd))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1ac60ae98_IsConst(_10856_argd.ptr()))) || (!(_1aa12db77_IsStr((*(_10856_argd))._field_Constant.ptr()))))) {
		_1ac60c818_pushErr((*(_107544_e)).ptr(), (*((*((*(_107559_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac60a55d_Data> _11006_r = _1ac637854_buildVoidData();;
	jule::Ptr<_1ac4dee04_FnIns> _11026_f = _1ac641c7b_Fn((*((*(_107581_d))))._field_Kind);;
	if (((*(_11026_f))._field_Generics.len() > 0LL)) {
		(*(_11006_r))._field_Kind=(*((*(_11026_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1ac4d8a57_BackendEmitExprModel> _11076_model = jule::new_ptr<_1ac4d8a57_BackendEmitExprModel>(_1ac4d8a57_BackendEmitExprModel{._field_Code=_1aa12b57b_ReadStr((*(_10856_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_107559_fc))))._field_Args.len() > 1LL)) {
		(*(_11076_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_107559_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_107559_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b3ebcd5e:;
			if (it != expr_end) {
				jule::Ptr<_1ac4aaab2_Expr> _111315_arg = *it;
				{
					_10856_argd=_1ac62a627_eval1((*(_107544_e)), _111315_arg);
					if ((_10856_argd == nullptr)) {
						return nullptr;;
					};
					(*_11076_model.alloc)._field_Exprs=jule::append((*_11076_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10856_argd))._field_Model; __jule_collection; }));
				}
				_iter_next_1b3ebcd5e:;
				++it;
				goto _iter_begin_1b3ebcd5e;
			}
			_iter_end_1b3ebcd5e:;
		};
	};
	(*_11006_r.alloc)._field_Model=jule::Any(_11076_model, &__jule_any_type32);
	return _11006_r;;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac735ac8_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _112634_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _112649_fc, jule::Ptr<_1ac60a55d_Data>* _112671_d) {
	(*(_112671_d))=_1ac72ccbd_builtinCallerOut(nullptr, _112634_e, _112649_fc, _112671_d);
	if (((*(_112671_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_112671_d))))._field_Model.cast_ptr<_1ac4d52b2_BuiltinOutCallExprModel>(&__jule_any_type34)))._field_Debug=true;
	return (*(_112671_d));;
}



inline jule::Ptr<_1ac60a55d_Data> _1ac736007_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _113536_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _113551_fc, jule::Ptr<_1ac60a55d_Data>* _113573_d) {
	(*(_113573_d))=_1ac72d1ec_builtinCallerOutln(nullptr, _113536_e, _113551_fc, _113573_d);
	if (((*(_113573_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_113573_d))))._field_Model.cast_ptr<_1ac4d568b_BuiltinOutlnCallExprModel>(&__jule_any_type35)))._field_Debug=true;
	return (*(_113573_d));;
}



inline jule::Ptr<_1ad20bd0c_FileInfo> _1ad20eace_ParseFile(jule::Ptr<_1ac496a59_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad20bd0c_FileInfo> _276_finf = jule::new_ptr<_1ad20bd0c_FileInfo>(_1ad20bd0c_FileInfo{._field_Ast=jule::Ptr<_1ac4a4869_AST>(nullptr), ._field_Errors=jule::Slice<_1b08b6838_Log>(nullptr)});;
	({
		__jule_tuple_x_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log __jule_assign_result = _1ad255b9c_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log _1ad255b9c_parseFileset(jule::Ptr<_1ac496a59_File> _5521_f) {
	__jule_tuple_x_1ac4a4869_AST__jule_tuple_s_1b08b6838_Log __jule_func_result;
	jule::Ptr<_1ad2767d3_parser> _566_p = jule::new_ptr<_1ad2767d3_parser>(_1ad2767d3_parser{._field_ast=jule::Ptr<_1ac4a4869_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>(nullptr), ._field_errors=jule::Slice<_1b08b6838_Log>(nullptr), ._field_ep=jule::Ptr<_1ad265bbd_exprBuilder>(nullptr)});;
	_1ad28766d_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac4b679e_ScopeTree> _1ad256670_newScope(void) {
	return jule::new_ptr<_1ac4b679e_ScopeTree>(_1ac4b679e_ScopeTree{._field_Parent=jule::Ptr<_1ac4b679e_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1ac4b613e_Stmt>(nullptr), ._field_End=jule::Ptr<_1ac4912c3_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1ad2569c2_isSt(jule::Ptr<_1ac4912c3_Token> _499_current, jule::Ptr<_1ac4912c3_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ad256d46_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1ac4912c3_Token> _613_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_613_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1ac491d1d_IsBinOp((*_613_prev.alloc)._field_Id) && ((*_613_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1ad25720e_nextStPos(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _696_braceN = 0LL;;
	jule::I64 _706_i = _6833_start;;
	for (; (_706_i < (*(_6815_tokens)).len()); (_706_i)++) {
		{
			jule::Bool _727_ok = false;;
			jule::Bool _737_terminated = false;;
			jule::Ptr<_1ac4912c3_Token> _743_tok = (*(_6815_tokens))[_706_i];;
			{
				auto &_match_expr{ (*(_743_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b473a411:;
					{
						if (((_696_braceN == 0LL) && (_706_i > _6833_start))) {
							if ((!(_1ad256d46_prevIsIncompleteExpr(_6815_tokens, &(_706_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad2569c2_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
									_727_ok = __jule_assign_result.__jule_result_arg0;
									_737_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_727_ok) {
									goto _julec_label_1b473e0a2;
								};
							};
						};
						(_696_braceN)++;
						goto _iter_next_1b4738e9d;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b473a653:;
					{
						(_696_braceN)--;
						if (((_696_braceN == 0LL) && ((_706_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad2569c2_isSt((*(_6815_tokens))[(_706_i + 1LL)], _743_tok);
								_727_ok = __jule_assign_result.__jule_result_arg0;
								_737_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_727_ok) {
								(_706_i)++;
								goto _julec_label_1b473e0a2;
							};
						};
						goto _iter_next_1b4738e9d;
					}
				}
				_match_end_1b473a5a9:;
			};
			if ((_696_braceN != 0LL)) {
				goto _iter_next_1b4738e9d;
			};
			if ((_706_i > _6833_start)) {
				if (_1ad256d46_prevIsIncompleteExpr(_6815_tokens, &(_706_i))) {
					goto _iter_next_1b4738e9d;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad2569c2_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad2569c2_isSt(_743_tok, _743_tok);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_727_ok))) {
				goto _iter_next_1b4738e9d;
			};
			_julec_label_1b473e0a2:;
			if (_737_terminated) {
				(_706_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _706_i;
			__jule_func_result.__jule_result_arg1 = _737_terminated;
			return __jule_func_result;;
		}
	_iter_next_1b4738e9d:;
	}
	_iter_end_1b4738e9d:;;
	__jule_func_result.__jule_result_arg0 = _706_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ac4912c3_Token__jule_tuple_bool _1ad257583_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1ac4912c3_Token>> _13028_tokens) {
	__jule_tuple_sx_1ac4912c3_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1312_start = (*(_13016_i));;
	jule::Bool _1326_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad25720e_nextStPos(&(_13028_tokens), _1312_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1326_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1ac4912c3_Token>> _1346_stTokens = _13028_tokens.slice(_1312_start, (*(_13016_i)));;
	if (_1326_terminated) {
		if ((_1346_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1ad257583_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1346_stTokens).mut_slice(0LL, (_1346_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1346_stTokens;
	__jule_func_result.__jule_result_arg1 = _1326_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1ad2578b3_stmt>> _1ad257c6a_splitStmts(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1ad2578b3_stmt>> _1526_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad2578b3_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad2578b3_stmt>(nullptr); __jule_collection; });;
	jule::I64 _1536_pos = 0LL;;
	while ((_1536_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1ac4912c3_Token>> _1557_stmt;
			jule::Bool _15513_terminated;
			({
				__jule_tuple_sx_1ac4912c3_Token__jule_tuple_bool __jule_assign_result = _1ad257583_skipSt(&(_1536_pos), (*(_15120_tokens)));
				_1557_stmt = __jule_assign_result.__jule_result_arg0;
				_15513_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1ad2578b3_stmt>> &__jule_push_dest = _1526_stmts; __jule_push_dest.push(jule::new_ptr<_1ad2578b3_stmt>(_1ad2578b3_stmt{._field_tokens=_1557_stmt, ._field_terminated=_15513_terminated})); };
		}
	_iter_next_1b4742d20:;
	}
	_iter_end_1b4742d20:;;
	return _1526_stmts;;
}



inline jule::Bool _1ad2713c1_isTypeOp(jule::U64* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U64>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U64>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1ad2716ce_isTypeRange(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _90021_tokens) {
	jule::Bool _9016_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4818da2:;
		if (it != expr_end) {
			jule::I64 _9026_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> _9029_token = *it;
			{
				if (((*(_9029_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_9016_op) {
						return true;;
					};
					jule::I64 _9078_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1ac4912c3_Token>> _9088_lTokens = (*(_90021_tokens)).slice(_9026_i);;
					{
						auto expr = &(_9088_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b481a766:;
						if (it != expr_end) {
							jule::Ptr<_1ac4912c3_Token> _90911_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90911_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1b481b019:;
										{
											(_9078_rangeN)++;
											goto _iter_next_1b481a766;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1b481b404:;
										{
											(_9078_rangeN)--;
											goto _iter_next_1b481a766;
										}
									}
									_match_end_1b481b305:;
								};
								if ((_9078_rangeN == 0LL)) {
									return _1ad2713c1_isTypeOp(&((*(_90911_lToken))._field_Id));;
								};
							}
							_iter_next_1b481a766:;
							++it;
							goto _iter_begin_1b481a766;
						}
						_iter_end_1b481a766:;
					};
					return true;;
				};
				if ((!(_1ad2713c1_isTypeOp(&((*_9029_token.alloc)._field_Id))))) {
					return false;;
				};
				_9016_op=true;
			}
			_iter_next_1b4818da2:;
			++it;
			_9026_i++;
			goto _iter_begin_1b4818da2;
		}
		_iter_end_1b4818da2:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ac4912c3_Token>> _1ad271998_getBlockExpr(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _93322_tokens) {
	jule::I64 _9346_braceN = 0LL;;
	jule::I64 _9356_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4819a95:;
		if (it != expr_end) {
			jule::I64 _9366_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> _9369_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9369_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1b481e10a:;
						{
							if (((((*(_93322_tokens)).len() - _9366_i) > 1LL) && ((*((*(_93322_tokens))[(_9366_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9356_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b481e193:;
						{
							if (((_9346_braceN > 0LL) || (_9356_skipToNextBraceClose > 0LL))) {
								if ((_9356_skipToNextBraceClose > 0LL)) {
									(_9356_skipToNextBraceClose)--;
								};
								(_9346_braceN)++;
								goto _match_end_1b481e03e;
							};
							return (*(_93322_tokens)).slice(0LL, _9366_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b481e209:;
						{
							(_9346_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b481e270:;
						{
							(_9346_braceN)--;
						}
					}
					_match_end_1b481e03e:;
				};
			}
			_iter_next_1b4819a95:;
			++it;
			_9366_i++;
			goto _iter_begin_1b4819a95;
		}
		_iter_end_1b4819a95:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token _1ad271d61_splitDelim(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _96520_tokens, jule::U64 _96538_delim) {
	__jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token __jule_func_result;
	jule::I64 _9666_func = -1LL;;
	jule::I64 _9676_rangeN = 0LL;;
	jule::I64 _9686_i = 0LL;;
	for (; (_9686_i < (*(_96520_tokens)).len()); (_9686_i)++) {
		{
			jule::Ptr<_1ac4912c3_Token> _9703_token = (*(_96520_tokens))[_9686_i];;
			{
				auto &_match_expr{ (*(_9703_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1b4823c58:;
					{
						_9666_func=_9676_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b4823cd0:;
					{
						(_9676_rangeN)++;
						goto _iter_next_1b482243d;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b4823d46:;
					{
						(_9676_rangeN)--;
						if ((_9666_func == _9676_rangeN)) {
							_9666_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9686_i) > 1LL) && ((*((*(_96520_tokens))[(_9686_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9686_i)++;
								goto _iter_next_1b482243d;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1b4823dac:;
					{
						(_9676_rangeN)--;
					}
				}
				_match_end_1b48239c2:;
			};
			if ((((*(_9703_token))._field_Id == _96538_delim) && (_9676_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1ac4912c3_Token>> _9948_l = (*(_96520_tokens)).slice(0LL, _9686_i);;
				jule::Slice<jule::Ptr<_1ac4912c3_Token>> _9958_r = (*(_96520_tokens)).slice((_9686_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9948_l;
				__jule_func_result.__jule_result_arg1 = _9958_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1b482243d:;
	}
	_iter_end_1b482243d:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1ad27212a_findLowestPrecOp(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _100422_tokens) {
	jule::U8 _10096_prec = 255LLU;;
	jule::I64 _10106_precPos = -1LL;;
	jule::I64 _10126_braceN = 0LL;;
	jule::Bool _10136_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4829049:;
		if (it != expr_end) {
			jule::I64 _10146_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> *_10149_token = it;
			{
				{
					auto &_match_expr{ (*((*(_10149_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b4829ce7:;
						{
							_10136_skipToNextBraceOpen=false;
							goto _case_begin_1b4829d80;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b4829d80:;
						{
							(_10126_braceN)++;
							goto _iter_next_1b4829049;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b4829de6:;
						{
							(_10126_braceN)--;
							goto _iter_next_1b4829049;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1b4829e5c:;
						{
							_10136_skipToNextBraceOpen=true;
							goto _iter_next_1b4829049;
						}
					}
					_match_end_1b4829c2b:;
				};
				{
					
					if (_10136_skipToNextBraceOpen) {
						_case_begin_1b482b524:;
						{
							goto _iter_next_1b4829049;
						}
					}
					else if ((_10146_i == 0LL)) {
						_case_begin_1b482b6bc:;
						{
							goto _iter_next_1b4829049;
						}
					}
					else if ((_10126_braceN > 0LL)) {
						_case_begin_1b482b733:;
						{
							goto _iter_next_1b4829049;
						}
					}
					else if ((!(_1ac491d1d_IsBinOp((*((*(_10149_token))))._field_Id)))) {
						_case_begin_1b482b799:;
						{
							goto _iter_next_1b4829049;
						}
					}
					_match_end_1b482b4ad:;
				};
				jule::Ptr<_1ac4912c3_Token> _10433_left = (*(_100422_tokens))[(_10146_i - 1LL)];;
				if ((_1ac491a10_IsUnaryOp((*(_10433_left))._field_Id) || ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1b4829049;
				};
				if (((_10146_i > 1LL) && ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1ac4912c3_Token> _10514_lleft = (*(_100422_tokens))[(_10146_i - 2LL)];;
					if (((*(_10514_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_10149_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_10149_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1b4829049;
						};
					};
				};
				jule::U8 _10603_p = _1ac49167a_Prec((*(_10149_token)));;
				if (((_10603_p != 0LLU) && (_10603_p <= _10096_prec))) {
					_10096_prec=_10603_p;
					_10106_precPos=_10146_i;
				};
			}
			_iter_next_1b4829049:;
			++it;
			_10146_i++;
			goto _iter_begin_1b4829049;
		}
		_iter_end_1b4829049:;
	};
	return _10106_precPos;;
}



inline jule::Ptr<_1ac4ac3cc_IdentExpr> _1ad2723e4_buildIdentExpr(jule::Ptr<_1ac4912c3_Token>* _106924_token) {
	return jule::new_ptr<_1ac4ac3cc_IdentExpr>(_1ac4ac3cc_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1ac4912c3_Token__jule_tuple_int _1ad2726ad_getRangeExprTokens(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _107728_tokens) {
	__jule_tuple_sx_1ac4912c3_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10786_rangeN = 0LL;;
	jule::I64 _10796_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10796_i >= 0LL); (_10796_i)--) {
		{
			jule::Ptr<_1ac4912c3_Token> _10813_tok = (*(_107728_tokens))[_10796_i];;
			{
				auto &_match_expr{ (*(_10813_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b483364c:;
					{
						(_10786_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b483397c:;
					{
						(_10786_rangeN)--;
					}
				}
				_match_end_1b48336c4:;
			};
			if ((_10786_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10796_i);
				__jule_func_result.__jule_result_arg1 = _10786_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1b4832b24:;
	}
	_iter_end_1b4832b24:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10786_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1ad272a87_isAnonFnHead(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b483542e:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1b483585d;
				};
				goto _case_begin_1b48359a1;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b48359a1:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1b483585d;
				};
				return true;;
			}
		}
		_match_end_1b483585d:;
	};
	return false;;
}



inline jule::Bool _1ad27378b_checkAssignTokens(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1ac495a8b_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b48ce880:;
		if (it != expr_end) {
			jule::Ptr<_1ac4912c3_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b48d0045:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b48d03ca:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1b48d02cb:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1b48d1530:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1b48d15b8:;
						{
							goto _iter_next_1b48ce880;
						}
					}
					else if (_1ac49611e_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1b48d162e:;
						{
							return true;;
						}
					}
					_match_end_1b48d1486:;
				};
			}
			_iter_next_1b48ce880:;
			++it;
			goto _iter_begin_1b48ce880;
		}
		_iter_end_1b48ce880:;
	};
	return false;;
}



inline _1b08b6838_Log _1ad274957_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1ac496a59_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1b08b6838_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1b08b6c9a_Logf(_5143_fmt, _5156_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1ac4912c3_Token>> _1ad274e85_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1ac4912c3_Token> _732_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_732_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _786_rangeN = 1LL;;
	jule::I64 _792_start = (*(_6915_i));;
	for (; ((_786_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1ac4912c3_Token> _813_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_813_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1b48d6689:;
					{
						(_786_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1b48d69ec:;
					{
						(_786_rangeN)--;
					}
				}
				_match_end_1b48d6964:;
			};
		}
	_iter_next_1b48d428b:;
	}
	_iter_end_1b48d428b:;;
	return (*(_6959_tokens)).slice(_792_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token _1ad27524e_rangeLast(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _9919_tokens) {
	__jule_tuple_sx_1ac4912c3_Token__jule_tuple_sx_1ac4912c3_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1032_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1032_first != static_cast<jule::U64>(73LLU)) && (_1032_first != static_cast<jule::U64>(76LLU))) && (_1032_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1096_braceN = 0LL;;
	jule::I64 _1106_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1106_i >= 0LL); (_1106_i)--) {
		{
			jule::Ptr<_1ac4912c3_Token> _1123_token = (*(_9919_tokens))[_1106_i];;
			{
				auto &_match_expr{ (*(_1123_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b48da869:;
					{
						(_1096_braceN)++;
						goto _iter_next_1b48d9ba9;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b48dab99:;
					{
						(_1096_braceN)--;
					}
				}
				_match_end_1b48da8e1:;
			};
			if ((_1096_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1106_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1106_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1b48d9ba9:;
	}
	_iter_end_1b48d9ba9:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log _1ad275705_parts(jule::Slice<jule::Ptr<_1ac4912c3_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1ac4912c3_Token__jule_tuple_s_1b08b6838_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1416_rangeN = 0LL;;
	jule::I64 _1426_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b48dda37:;
		if (it != expr_end) {
			jule::I64 _1436_i = it - expr->begin();
			jule::Ptr<_1ac4912c3_Token> _1439_token = *it;
			{
				{
					auto &_match_expr{ (*(_1439_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b48dea6b:;
						{
							(_1416_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b48deae3:;
						{
							(_1416_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1b48deb59:;
						{
							if ((_1416_rangeN > 0LL)) {
								goto _iter_next_1b48dda37;
							};
							if ((_13746_exprMust && ((_1436_i - _1426_last) <= 0LL))) {
								_1b08b6838_Log _1545_err = _1ad274957_makeErr((*(_1439_token))._field_Row, (*_1439_token.alloc)._field_Column, &((*_1439_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_1b08b6838_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1545_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last, _1436_i)); };
							_1426_last=(_1436_i + 1LL);
						}
					}
					_match_end_1b48de9a0:;
				};
			}
			_iter_next_1b48dda37:;
			++it;
			_1436_i++;
			goto _iter_begin_1b48dda37;
		}
		_iter_end_1b48dda37:;
	};
	if ((_1426_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ac4912c3_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1ad27598b_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1b48e319b:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b48e3245:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b48e32bc:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1b48de472:;
			{
				return _16720_left;;
			}
		}
		_match_end_1b48de54e:;
	};
}



inline _1b08b6838_Log _1ad275dba_compilerErr(jule::Ptr<_1ac4912c3_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _1b08b6838_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_1b08b6c9a_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1ac497a9e_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1ad276261_pushSuggestion(_1b08b6838_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_1b08b6c9a_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1ac4a677d_TypeDecl> _1ad288174_buildVoidType(void) {
	return jule::new_ptr<_1ac4a677d_TypeDecl>(_1ac4a677d_TypeDecl{._field_Token=jule::Ptr<_1ac4912c3_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1ac9600dd_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1b44623ad:;
			{
				__jule_func_result.__jule_result_arg0=_1b08b9a5b_IsWindows(_1b0399184_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1b4462424:;
			{
				__jule_func_result.__jule_result_arg0=_1b08b9d69_IsDarwin(_1b0399184_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1b446208e:;
			{
				__jule_func_result.__jule_result_arg0=_1b08ba133_IsLinux(_1b0399184_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1b4462105:;
			{
				__jule_func_result.__jule_result_arg0=_1b08bac8d_IsUnix(_1b0399184_Os);
			}
		}
		else {
			_case_begin_1b44619ea:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b4461e6d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ac960231_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1b4464921:;
			{
				__jule_func_result.__jule_result_arg0=_1b08ba474_IsI386(_1b039943c_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1b4464987:;
			{
				__jule_func_result.__jule_result_arg0=_1b08ba70a_IsAmd64(_1b039943c_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1b4464602:;
			{
				__jule_func_result.__jule_result_arg0=_1b08ba9c4_IsArm64(_1b039943c_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1b4464668:;
			{
				__jule_func_result.__jule_result_arg0=_1b08bb3a9_Is64Bit(_1b039943c_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1b44646ce:;
			{
				__jule_func_result.__jule_result_arg0=_1b08bb167_Is32Bit(_1b039943c_Arch);
			}
		}
		else {
			_case_begin_1b446405d:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b44644d1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac9603c9_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1b0989994_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _1b0989411_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _1b0969bc7_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9600dd_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac960231_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_1b0969bc7_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9600dd_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac960231_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac960231_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9600dd_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac9600dd_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1ac97b060_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1b0399184_Os); };
	if (_1b08bac8d_IsUnix(_1b0399184_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1ac97b2d5_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1b039943c_Arch); };
	if (_1b08bb3a9_Is64Bit(_1b039943c_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1b08bb167_Is32Bit(_1b039943c_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1ac97b5c1_initVars(jule::Slice<jule::Str>* _5518_vars, _1ac97ac41_CompileInfo* _5532_info) {
	_1ac97b060_setOsVars(_5518_vars);
	_1ac97b2d5_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1b44708b6:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1b4470355:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1b44702de:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1b44703ee:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1b44718a6:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1b447191c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1b447181d:;
	};
}



inline jule::Slice<jule::U8> _1ad28c101_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1ae66d107_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(_1ac2a1c82_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_1b0397eeb_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1b08b6838_Log _1ad28c40e_flatCompilerErr(jule::Str _4120_text) {
	return _1b08b6838_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_4120_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1ac4dbd46_Fn> _1ac8cc38a_RuntimeFindFn(jule::Ptr<_1ac557cd5_ImportInfo>* _1823_runtime, jule::Str _1845_ident) {
	;
	jule::Ptr<_1ac4dbd46_Fn> _206_f = _1ac5593e1_FindFn((*(_1823_runtime)).ptr(), _1845_ident, false);;
	if ((_206_f == nullptr)) {
		jule::outln(_1b44b1e9b_toStr(_1845_ident));
		__jule_panic_s(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: julec/obj/runtime.jule:23:3"));;
	};
	return _206_f;;
}



inline jule::Ptr<_1ac4c767d_Struct> _1ac8cc984_RuntimeFindStruct(jule::Ptr<_1ac557cd5_ImportInfo>* _3327_runtime, jule::Str _3349_ident) {
	;
	jule::Ptr<_1ac4c767d_Struct> _356_f = _1ac558ee5_FindStruct((*(_3327_runtime)).ptr(), _3349_ident, false);;
	if ((_356_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 101) + jule::Str("\nlocation: julec/obj/runtime.jule:37:3"));;
	};
	return _356_f;;
}



inline void _1ad291b3e_pushPasses(jule::Ptr<_1ac55ac0b_Package>* _12220_p, jule::Slice<jule::Str>* _12244_passes) {
	{
		auto expr = &((*((*(_12220_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44b3ba1:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _12314_f = *it;
			{
				_julec_label_1b44b4322:;
				{
					auto expr = &((*(_12314_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b44b4751:;
					if (it != expr_end) {
						_1ac4e459b_Pass _12510_pass = *it;
						{
							if ((_12510_pass._field_Text).empty()) {
								goto _iter_next_1b44b4751;
							};
							{
								auto expr = _12244_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b44b6786:;
								if (it != expr_end) {
									jule::Str _12911_cpass = *it;
									{
										if ((_12911_cpass == _12510_pass._field_Text)) {
											goto _iter_next_1b44b4751;
										};
									}
									_iter_next_1b44b6786:;
									++it;
									goto _iter_begin_1b44b6786;
								}
								_iter_end_1b44b6786:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12244_passes)); __jule_push_dest.push(_12510_pass._field_Text); };
						}
						_iter_next_1b44b4751:;
						++it;
						goto _iter_begin_1b44b4751;
					}
					_iter_end_1b44b4751:;
				};
			}
			_iter_next_1b44b3ba1:;
			++it;
			goto _iter_begin_1b44b3ba1;
		}
		_iter_end_1b44b3ba1:;
	};
}



inline jule::Slice<jule::Str> _1ad292007_getAllUniquePasses(jule::Ptr<_1ac55ac0b_Package>* _13928_pkg, jule::Slice<jule::Ptr<_1ac557cd5_ImportInfo>> _13953_uses) {
	jule::Slice<jule::Str> _14010_passes = nullptr;;
	_1ad291b3e_pushPasses(_13928_pkg, &(_14010_passes));
	{
		auto expr = &(_13953_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44b76dd:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _14314_u = *it;
			{
				if ((!((*(_14314_u))._field_Binded))) {
					_1ad291b3e_pushPasses(&((*_14314_u.alloc)._field_Package), &(_14010_passes));
				};
			}
			_iter_next_1b44b76dd:;
			++it;
			goto _iter_begin_1b44b76dd;
		}
		_iter_end_1b44b76dd:;
	};
	return _14010_passes;;
}



inline _1ac97ac41_CompileInfo _1ad292216_buildCompileInfo(void) {
	_1ac97ac41_CompileInfo _1536_info = _1ac97ac41_CompileInfo{._field_Prod=_1b03a1730_Production, ._field_Test=_1b03a0d6c_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _1b039debe_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1b44b8a0d:;
			{
				_1536_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1b44b8b51:;
			{
				_1536_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1b44b8ada:;
	};
	{
		auto &_match_expr{ _1b03a05ca_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1b44b8bd9:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1b44b9921:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1b44b9190:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1b44b9c1d:;
	};
	return _1536_info;;
}



inline void _1ad2924be_pushRuntimeToAST(jule::Ptr<_1ac4a4869_AST>* _17826_f) {
	jule::Ptr<_1ac4be884_UseDecl> _1796_decl = jule::new_ptr<_1ac4be884_UseDecl>(_1ac4be884_UseDecl{._field_Token=nullptr, ._field_LinkPath=jule::Str::lit("std::runtime", 12), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=nullptr, ._field_Binded=false, ._field_Std=true});;
	{ jule::Slice<jule::Ptr<_1ac4be884_UseDecl>> &__jule_push_dest = (*((*(_17826_f))))._field_UseDecls; __jule_push_dest.push(_1796_decl); };
	if (((*((*(_17826_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17826_f))))._field_UseDecls[((*((*(_17826_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17826_f))))._field_UseDecls[0LL];
		(*((*(_17826_f))))._field_UseDecls[0LL]=_1796_decl;
	};
}



inline void _1ad292b1d_IterPackages(jule::Ptr<_1ad29028b_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1ac55ac0b_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44d23ea:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1b44d23ea:;
			++it;
			goto _iter_begin_1b44d23ea;
		}
		_iter_end_1b44d23ea:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1ad292e4d_IterFiles(jule::Ptr<_1ac55ac0b_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1ac604d93_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44da799:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _1714_file = *it;
			{
				_1634_f(&(_1714_file));
			}
			_iter_next_1b44da799:;
			++it;
			goto _iter_begin_1b44da799;
		}
		_iter_end_1b44da799:;
	};
}



inline void _1ad2932e4_iterTraitInheritMethods(jule::Ptr<_1ac5008a4_Trait>* _2233_base, jule::Ptr<_1ac5008a4_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1ac4dbd46_Fn>*> _2263_f) {
	_1ad293712_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44db8dd:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _2414_m = *it;
			{
				if ((!(_1ad298838_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2263_f(&(_2414_m));
				};
			}
			_iter_next_1b44db8dd:;
			++it;
			goto _iter_begin_1b44db8dd;
		}
		_iter_end_1b44db8dd:;
	};
}



inline void _1ad293712_iterTraitInheritMethods1(jule::Ptr<_1ac5008a4_Trait>* _3134_base, jule::Ptr<_1ac5008a4_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1ac4dbd46_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44dcc85:;
		if (it != expr_end) {
			jule::Ptr<_1ac6459e9_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1ac5008a4_Trait> _337_t2 = _1ac642298_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1ad2932e4_iterTraitInheritMethods(_3134_base, &(_337_t2), _3164_f);
			}
			_iter_next_1b44dcc85:;
			++it;
			goto _iter_begin_1b44dcc85;
		}
		_iter_end_1b44dcc85:;
	};
}



inline void _1ad2939ba_IterTraitMethods(jule::Ptr<_1ac5008a4_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1ac4dbd46_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44de22b:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _4014_m = *it;
			{
				_3937_f(&(_4014_m));
			}
			_iter_next_1b44de22b:;
			++it;
			goto _iter_begin_1b44de22b;
		}
		_iter_end_1b44de22b:;
	};
	_1ad293712_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1ad295c53_IsForwarded(jule::Ptr<_1ac534ec1_Scope>* _2417_s) {
	jule::Any _252_last = (*((*(_2417_s))))._field_Stmts[((*((*(_2417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _252_last };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b451422e:;
			{
				{
					auto &_match_expr{ (*(_252_last.cast_ptr<_1ac60a55d_Data>(&__jule_any_type31)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1b4514471:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b45150dc:;
						{
							return false;;
						}
					}
					_match_end_1b4515076:;
				};
			}
		}
		else {
			_case_begin_1b45143a5:;
			{
				return true;;
			}
		}
		_match_end_1b451433e:;
	};
}



inline jule::Bool _1ad296061_IsExprComesFromBind(jule::Ptr<_1ac60a55d_Data>* _4025_d) {
	{
		auto &_match_expr{ (*((*(_4025_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4515b37:;
			{
				return (*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1ac5a2527_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b4515d46:;
			{
				return (*((*((*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1ac4d436b_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1b4514b9c:;
			{
				return false;;
			}
		}
		_match_end_1b4514b36:;
	};
}



inline jule::Bool _1ad29632a_IsAny(jule::Ptr<_1ac63d2d8_TypeKind>* _5215_t) {
	if ((_1ac6414c8_TypeEnum((*(_5215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1ac646401_Prim> _562_prim = _1ac64098e_Prim((*(_5215_t)).ptr());;
	return ((_562_prim != nullptr) && _1ac649b52_IsAny(_562_prim));;
}



inline jule::Bool _1ad29666b_IsClosure(jule::Ptr<_1ac4d2611_AnonFnExprModel>* _6115_m) {
	return ((*((*(_6115_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1ad296902_IsOpMethod(jule::Ptr<_1ac4dbd46_Fn>* _6416_m) {
	if ((((*((*(_6416_m))))._field_Generics.len() > 0LL) || ((*((*(_6416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _682_mi = (*((*(_6416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1ad296c76_IsTraitMethod(jule::Ptr<_1ac4ca4d8_StructIns>* _8023_owner, jule::Ptr<_1ac4dee04_FnIns>* _8043_f) {
	{
		auto expr = &((*((*((*(_8023_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a2c725:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> _8114_t = *it;
			{
				if ((_1ac501586_FindMethod(_8114_t.ptr(), (*((*((*(_8043_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1b4a2c725:;
			++it;
			goto _iter_begin_1b4a2c725;
		}
		_iter_end_1b4a2c725:;
	};
	return false;;
}



inline jule::Bool _1ad2970ea_IsStdPackage(jule::Str _9417_f, jule::Str _9425_p) {
	return _1b0966ec1_HasPrefix(_9417_f, _1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1b0398529_PathStdlib; (*it++) = _9425_p; __jule_collection; })));;
}



inline jule::Ptr<_1ac4a5b9a_Directive> _1ad2980eb_FindDirective(jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a2e89d:;
		if (it != expr_end) {
			jule::Ptr<_1ac4a5b9a_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1b4a2e89d:;
			++it;
			goto _iter_begin_1b4a2e89d;
		}
		_iter_end_1b4a2e89d:;
	};
	return nullptr;;
}



inline jule::Bool _1ad2984b4_HasDirective(jule::Slice<jule::Ptr<_1ac4a5b9a_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1ad2980eb_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::Bool _1ad298838_ContainsTraitMethod(jule::Ptr<_1ac5008a4_Trait>* _2629_t, jule::Str* _2641_ident) {
	{
		auto expr = &((*((*(_2629_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a314d7:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _279_m = *it;
			{
				if (((*(_279_m))._field_Ident == (*(_2641_ident)))) {
					return true;;
				};
			}
			_iter_next_1b4a314d7:;
			++it;
			goto _iter_begin_1b4a314d7;
		}
		_iter_end_1b4a314d7:;
	};
	return false;;
}



inline jule::I64 _1ad298eed_FindTraitTypeOffsetS(jule::Ptr<_1ac5008a4_Trait> _3925_t, jule::Ptr<_1ac4ca4d8_StructIns> _3940_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a331ed:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> *_449_si = it;
			{
				if (((*(_3940_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b4a340de:;
						if (it != expr_end) {
							jule::Ptr<_1ac4ca4d8_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3940_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1b4a340de:;
							++it;
							goto _iter_begin_1b4a340de;
						}
						_iter_end_1b4a340de:;
					};
					goto _iter_end_1b4a331ed;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1b4a331ed:;
			++it;
			goto _iter_begin_1b4a331ed;
		}
		_iter_end_1b4a331ed:;
	};
	return -1LL;;
}



inline jule::I64 _1ad299372_FindTraitTypeOffset(jule::Ptr<_1ac5008a4_Trait> _6224_t, jule::Ptr<_1ac63d2d8_TypeKind> _6239_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1ac4ca4d8_StructIns> _6610_s = nullptr;;
	if ((_1ac640c25_Sptr(_6239_k.ptr()) != nullptr)) {
		_6239_k=(*(_1ac640c25_Sptr(_6239_k)))._field_Elem;
	};
	_6610_s=_1ac642012_Struct(_6239_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1ad298eed_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ad2997a1_FindOperator(jule::Ptr<_1ac4ca4d8_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary) {
	{
		auto &_match_expr{ _7837_op };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b4a37b09:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b4a3790b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b4a37972:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b4a37b70:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b4a37be7:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b4a37c6e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b4a37d90:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b4a37e06:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b4a37e6c:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b4a37ed3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b4a38049:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b4a380c1:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b4a38148:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b4a381c0:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b4a38247:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b4a382be:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b4a38346:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b4a383bd:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b4a38445:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b4a384bc:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b4a38544:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b4a385bb:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b4a38643:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b4a386ba:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b4a38742:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1b4a37543:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4a37675:;
	};
}



inline jule::Ptr<_1ac4dee04_FnIns> _1ad299b25_FindFnGenericInstance(jule::Ptr<_1ac4dbd46_Fn>* _14731_f, jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _14739_generics) {
	_julec_label_1b4a422ea:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a45188:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dee04_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4a45a90:;
					if (it != expr_end) {
						jule::I64 _1507_i = it - expr->begin();
						{
							if ((!(_1ac63da25_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Kind, _14739_generics[_1507_i])))) {
								goto _iter_next_1b4a45188;
							};
						}
						_iter_next_1b4a45a90:;
						++it;
						_1507_i++;
						goto _iter_begin_1b4a45a90;
					}
					_iter_end_1b4a45a90:;
				};
				return _14914_ins;;
			}
			_iter_next_1b4a45188:;
			++it;
			goto _iter_begin_1b4a45188;
		}
		_iter_end_1b4a45188:;
	};
	__jule_panic_s(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1ac4ca4d8_StructIns> _1ad29a0a9_FindStructGenericInstance(jule::Ptr<_1ac4c767d_Struct>* _16335_s, jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>> _16347_generics) {
	_julec_label_1b4a46013:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a47289:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ca4d8_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4a47b91:;
					if (it != expr_end) {
						jule::I64 _1667_i = it - expr->begin();
						{
							if ((!(_1ac63da25_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Kind, _16347_generics[_1667_i])))) {
								goto _iter_next_1b4a47289;
							};
						}
						_iter_next_1b4a47b91:;
						++it;
						_1667_i++;
						goto _iter_begin_1b4a47b91;
					}
					_iter_end_1b4a47b91:;
				};
				return _16514_ins;;
			}
			_iter_next_1b4a47289:;
			++it;
			goto _iter_begin_1b4a47289;
		}
		_iter_end_1b4a47289:;
	};
	__jule_panic_s(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Bool _1b44d02e9_isOrdered(jule::Ptr<_1ac5a2527_Var>* _1418_t, jule::Slice<jule::Ptr<_1ac5a2527_Var>> _1425_s) {
	_julec_label_1b44d272a:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44d2b7b:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1b44d3484:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1b44d2b7b;
							};
						}
					}
					_match_end_1b44d340c:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b44d3b6b:;
					if (it != expr_end) {
						jule::Ptr<_1ac5a2527_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1b44d2b7b;
							};
						}
						_iter_next_1b44d3b6b:;
						++it;
						goto _iter_begin_1b44d3b6b;
					}
					_iter_end_1b44d3b6b:;
				};
				return false;;
			}
			_iter_next_1b44d2b7b:;
			++it;
			goto _iter_begin_1b44d2b7b;
		}
		_iter_end_1b44d2b7b:;
	};
	return true;;
}

inline jule::Bool _1b44d6069_isOrdered(jule::Ptr<_1ac4c767d_Struct>* _1418_t, jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _1425_s) {
	_julec_label_1b44d8456:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44d88a7:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b44d8ec3:;
					if (it != expr_end) {
						jule::Ptr<_1ac4c767d_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1b44d88a7;
							};
						}
						_iter_next_1b44d8ec3:;
						++it;
						goto _iter_begin_1b44d8ec3;
					}
					_iter_end_1b44d8ec3:;
				};
				return false;;
			}
			_iter_next_1b44d88a7:;
			++it;
			goto _iter_begin_1b44d88a7;
		}
		_iter_end_1b44d88a7:;
	};
	return true;;
}



inline void _1b44cc923_order(jule::Slice<jule::Ptr<_1ac5a2527_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1b44ccdda:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1b44cdb77:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1ac5a2527_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1b44ced65:;
				if (it != expr_end) {
					jule::Ptr<_1ac5a2527_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1b44ce22c;
						};
					}
					_iter_next_1b44ced65:;
					++it;
					goto _iter_begin_1b44ced65;
				}
				_iter_end_1b44ced65:;
			};
			if (_1b44d02e9_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1b44ce22c:;
	}
	_iter_end_1b44ce22c:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1b44ccdda;
	};
}

inline void _1b44cd506_order(jule::Slice<jule::Ptr<_1ac4c767d_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1b44ce491:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1b44d31cb:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1ac4c767d_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1b44d5ad5:;
				if (it != expr_end) {
					jule::Ptr<_1ac4c767d_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1b44d4e9c;
						};
					}
					_iter_next_1b44d5ad5:;
					++it;
					goto _iter_begin_1b44d5ad5;
				}
				_iter_end_1b44d5ad5:;
			};
			if (_1b44d6069_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1b44d4e9c:;
	}
	_iter_end_1b44d4e9c:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1b44ce491;
	};
}



inline void _1ad3d8abb_EliminateDefines(jule::Ptr<_1ad29028b_IR>* _40226_ir) {
	jule::Ptr<_1ad3d56cd_ObjectDeadCode> _4036_ocd = static__1ad3d5c50_new(_40226_ir);;
	_1ad3d8813_elimanate(_4036_ocd);
}



inline void _1ad3dca37_eliminateDeadCodeOfScope(jule::Ptr<_1ac534ec1_Scope> _23833_s) {
	jule::Slice<jule::Ptr<_1ac537a1d_Label>> _2392_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac537a1d_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac537a1d_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1ac53817d_GotoSt>> _2402_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac53817d_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac53817d_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1ad3d9803_scopeDeadCode> _2416_sdc = jule::new_ptr<_1ad3d9803_scopeDeadCode>(_1ad3d9803_scopeDeadCode{._field_parent=jule::Ptr<_1ad3d9803_scopeDeadCode>(nullptr), ._field_s=_23833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ac537a1d_Label>>>)((&(_2392_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ac53817d_GotoSt>>>)((&(_2402_gotos)))), ._field_except=false});;
	{
		_1ad3dc73a_optimizeStmts(_2416_sdc);
	};
}



inline void _1ad3dccac_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ac4dbd46_Fn>>* _25033_funcs) {
	{
		auto expr = _25033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4ac99c0:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _25114_func = *it;
			{
				{
					auto expr = &((*(_25114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4acc473:;
					if (it != expr_end) {
						jule::Ptr<_1ac4dee04_FnIns> _25215_ins = *it;
						{
							_1ad3dca37_eliminateDeadCodeOfScope((*(_25215_ins))._field_Scope);
						}
						_iter_next_1b4acc473:;
						++it;
						goto _iter_begin_1b4acc473;
					}
					_iter_end_1b4acc473:;
				};
			}
			_iter_next_1b4ac99c0:;
			++it;
			goto _iter_begin_1b4ac99c0;
		}
		_iter_end_1b4ac99c0:;
	};
}



inline void _1ad3dcedd_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1ac4c767d_Struct>>* _25937_structs) {
	{
		auto expr = _25937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4acc3da:;
		if (it != expr_end) {
			jule::Ptr<_1ac4c767d_Struct> _26014_s = *it;
			{
				{
					auto expr = &((*(_26014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4acd584:;
					if (it != expr_end) {
						jule::Ptr<_1ac4ca4d8_StructIns> _26115_ins = *it;
						{
							_1ad3dccac_eliminateScopeFunctions(&((*(_26115_ins))._field_Methods));
						}
						_iter_next_1b4acd584:;
						++it;
						goto _iter_begin_1b4acd584;
					}
					_iter_end_1b4acd584:;
				};
			}
			_iter_next_1b4acc3da:;
			++it;
			goto _iter_begin_1b4acc3da;
		}
		_iter_end_1b4acc3da:;
	};
}



inline void _1ad3dd296_eliminateFunctionsScopePackage(jule::Ptr<_1ac55ac0b_Package>* _26740_pkg) {
	{
		auto expr = &((*((*(_26740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4ace343:;
		if (it != expr_end) {
			jule::Ptr<_1ac604d93_SymbolTable> _26814_f = *it;
			{
				_1ad3dccac_eliminateScopeFunctions(&((*(_26814_f))._field_Funcs));
				_1ad3dcedd_eliminateScopeStructMethods(&((*_26814_f.alloc)._field_Structs));
			}
			_iter_next_1b4ace343:;
			++it;
			goto _iter_begin_1b4ace343;
		}
		_iter_end_1b4ace343:;
	};
}



inline void _1ad3dd494_eliminateScopePackage(jule::Ptr<_1ac55ac0b_Package>* _27431_pkg) {
	_1ad3dd296_eliminateFunctionsScopePackage(_27431_pkg);
}



inline void _1ad3dd6c5_EliminateScopes(jule::Ptr<_1ad29028b_IR>* _27925_ir) {
	jule::I64 _2806_i = ((*((*(_27925_ir))))._field_Used.len() - 1LL);;
	for (; (_2806_i >= 0LL); (_2806_i)--) {
		{
			jule::Ptr<_1ac557cd5_ImportInfo> _2827_u = (*((*(_27925_ir))))._field_Used[_2806_i];;
			if ((!((*(_2827_u))._field_Binded))) {
				_1ad3dd494_eliminateScopePackage(&((*_2827_u.alloc)._field_Package));
			};
		}
	_iter_next_1b4ad0a4d:;
	}
	_iter_end_1b4ad0a4d:;;
	_1ad3dd494_eliminateScopePackage(&((*((*(_27925_ir))))._field_Main));
}



inline jule::Uintptr _1ac7362b0_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1ac736678_equalConst(jule::Ptr<_1aa1293c0_Const> _2115_l, jule::Ptr<_1aa1293c0_Const> _2126_r) {
	{
		
		if (_1aa12d3c4_IsI64(_2115_l.ptr())) {
			_case_begin_1b4b48368:;
			{
				return (_1aa12d3c4_IsI64(_2126_r.ptr()) && (_1aa12acc8_ReadI64(_2115_l) == _1aa12acc8_ReadI64(_2126_r)));;
			}
		}
		else if (_1aa12d65a_IsU64(_2115_l.ptr())) {
			_case_begin_1b4b483ce:;
			{
				return (_1aa12d65a_IsU64(_2126_r.ptr()) && (_1aa12b05e_ReadU64(_2115_l) == _1aa12b05e_ReadU64(_2126_r)));;
			}
		}
		else if (_1aa12de0d_IsF64(_2115_l.ptr())) {
			_case_begin_1b4b48445:;
			{
				return (_1aa12de0d_IsF64(_2126_r.ptr()) && (_1aa12b812_ReadF64(_2115_l) == _1aa12b812_ReadF64(_2126_r)));;
			}
		}
		else if (_1aa12db77_IsStr(_2115_l.ptr())) {
			_case_begin_1b4b484bc:;
			{
				return (_1aa12db77_IsStr(_2126_r.ptr()) && (_1aa12b57b_ReadStr(_2115_l) == _1aa12b57b_ReadStr(_2126_r)));;
			}
		}
		else if (_1aa12d8e1_IsBool(_2115_l.ptr())) {
			_case_begin_1b4b48544:;
			{
				return (_1aa12d8e1_IsBool(_2126_r.ptr()) && (_1aa12b2e5_ReadBool(_2115_l) == _1aa12b2e5_ReadBool(_2126_r)));;
			}
		}
		else if (_1aa12e194_IsNil(_2115_l.ptr())) {
			_case_begin_1b4b486a9:;
			{
				return _1aa12e194_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1b4b4827a:;
			{
				return false;;
			}
		}
		_match_end_1b4b47a1b:;
	};
}



inline jule::Bool _1ac7369ec_equalCasting(jule::Ptr<_1ac4d0e28_CastingExprModel> _4017_l, jule::Ptr<_1ac4d0e28_CastingExprModel> _4039_r) {
	if ((!(_1ac63da25_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1ac737932_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*(_4039_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1ac736db5_equalUnary(jule::Ptr<_1ac4cebc4_UnaryExprModel> _4715_l, jule::Ptr<_1ac4cebc4_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*(_4715_l))._field_Op.alloc)._field_Kind != (*(*(_4735_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1ac737932_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*(_4735_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1ac737239_equalIndexing(jule::Ptr<_1ac4d215a_IndexingExprModel> _5418_l, jule::Ptr<_1ac4d215a_IndexingExprModel> _5441_r) {
	return (_1ac737932_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1ac737932_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*(_5441_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1ac7375ad_equalBinary(jule::Ptr<_1ac4ce7ea_BinaryExprModel> _5916_l, jule::Ptr<_1ac4ce7ea_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*(_5916_l))._field_Op.alloc)._field_Kind != (*(*(_5937_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1ac737932_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*(_5937_r))._field_Left.alloc)._field_Model) && _1ac737932_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*(_5937_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1ac737932_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1ac7362b0_typeData(&(_7016_l)) != _1ac7362b0_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4b57036:;
			{
				return (_7016_l.unsafe_cast_ptr<_1ac5a2527_Var>() == _7030_r.cast_ptr<_1ac5a2527_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b4b57ac5:;
			{
				jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _783_li = _7016_l.unsafe_cast_ptr<_1ac4d436b_StructSubIdentExprModel>();;
				jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _793_ri = _7030_r.cast_ptr<_1ac4d436b_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_783_li))._field_Field == (*(_793_ri))._field_Field) && _1ac737932_equalModels((*((*_783_li.alloc)._field_Expr))._field_Model, (*(*(_793_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b4b57b3b:;
			{
				return _1ac736678_equalConst(_7016_l.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20), _7030_r.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b4b576eb:;
			{
				return _1ac7369ec_equalCasting(_7016_l.cast_ptr<_1ac4d0e28_CastingExprModel>(&__jule_any_type95), _7030_r.cast_ptr<_1ac4d0e28_CastingExprModel>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b4b57762:;
			{
				return _1ac736db5_equalUnary(_7016_l.cast_ptr<_1ac4cebc4_UnaryExprModel>(&__jule_any_type112), _7030_r.cast_ptr<_1ac4cebc4_UnaryExprModel>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b4b577c8:;
			{
				return _1ac737239_equalIndexing(_7016_l.cast_ptr<_1ac4d215a_IndexingExprModel>(&__jule_any_type52), _7030_r.cast_ptr<_1ac4d215a_IndexingExprModel>(&__jule_any_type52));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b4b5783e:;
			{
				return _1ac7375ad_equalBinary(_7016_l.cast_ptr<_1ac4ce7ea_BinaryExprModel>(&__jule_any_type113), _7030_r.cast_ptr<_1ac4ce7ea_BinaryExprModel>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1b4b57685:;
			{
				return false;;
			}
		}
		_match_end_1b4b57278:;
	};
}



inline void _1ac73d54d_possibleNilRemove(jule::Ptr<_1ac73c56e_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1ac73cd55_removeVar((*(_7827_n)).ptr(), _1ac73e021_getNilVar(_7837_m));
	};
}



inline jule::Bool _1ac73d916_isGuaranteedNonNilExpr(jule::Ptr<_1ac73c56e_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b2e07959:;
			{
				return true;;
			}
		}
		_match_end_1b2e078e3:;
	};
	return (((*(_8432_n)) != nullptr) && _1ac73d196_isSafe((*(_8432_n)).ptr(), _1ac73e021_getNilVar(_8442_m)));;
}



inline jule::Bool _1ac73dbd0_isNilValidType(jule::Ptr<_1ac63d2d8_TypeKind> _9223_t) {
	return (_1ac640c25_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1ac73e021_getNilVar(jule::Any _9414_m) {
	if ((!(_1ad2b20e3_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b2e09032:;
			{
				jule::Ptr<_1ac5a2527_Var> _1003_v = _9414_m.unsafe_cast_ptr<_1ac5a2527_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1ac5a2527_Var>());;
				};
				return _1ac73e021_getNilVar((*((*((*_1003_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b2e09483:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1ac4d436b_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1b2e08ebb:;
	};
	return 0LLU;;
}



inline jule::Bool _1ad2a1a61_isConstantValidConditionalCase(jule::Ptr<_1ac5353de_If>* _68736_i) {
	{
		auto &_match_expr{ (*((*(_68736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b490592d:;
			{
				jule::Ptr<_1aa1293c0_Const> _6903_c = (*((*(_68736_i))))._field_Expr.unsafe_cast_ptr<_1aa1293c0_Const>();;
				return (_1aa12d8e1_IsBool(_6903_c.ptr()) && _1aa12b2e5_ReadBool(_6903_c));;
			}
		}
		_match_end_1b49060e3:;
	};
	return false;;
}



inline jule::Bool _1ad2a1d6e_isUnreachableExpr(jule::Any* _69623_expr) {
	{
		auto &_match_expr{ (*(_69623_expr)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b49068c9:;
			{
				jule::Ptr<_1aa1293c0_Const> _6993_c = (*(_69623_expr)).cast_ptr<_1aa1293c0_Const>(&__jule_any_type20);;
				return (_1aa12d8e1_IsBool(_6993_c.ptr()) && (!(_1aa12b2e5_ReadBool(_6993_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b49059b6:;
			{
				jule::Ptr<_1ac4ce7ea_BinaryExprModel> _7023_m = (*(_69623_expr)).cast_ptr<_1ac4ce7ea_BinaryExprModel>(&__jule_any_type113);;
				if (((*((*(_7023_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1ad2a1d6e_isUnreachableExpr(&((*((*_7023_m.alloc)._field_Left))._field_Model)) || _1ad2a1d6e_isUnreachableExpr(&((*((*_7023_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1b4907325:;
	};
	return false;;
}



inline jule::Bool _1ad2a2138_isConstantValidMatchCase(jule::Ptr<_1ac53a229_Case>* _71130_case) {
	{
		auto expr = &((*((*(_71130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b490aadc:;
		if (it != expr_end) {
			jule::Ptr<_1ac60a55d_Data> *_7129_expr = it;
			{
				if (((_1ac60ae98_IsConst((*(_7129_expr)).ptr()) && _1aa12d8e1_IsBool((*(*(_7129_expr)).alloc)._field_Constant.ptr())) && _1aa12b2e5_ReadBool((*((*(_7129_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1b490aadc:;
			++it;
			goto _iter_begin_1b490aadc;
		}
		_iter_end_1b490aadc:;
	};
	return false;;
}



inline jule::Bool _1ad2a2479_isUnreachableConditionalCase(jule::Ptr<_1ac5353de_If>* _72034_i) {
	return _1ad2a1d6e_isUnreachableExpr(&((*((*(_72034_i))))._field_Expr));;
}



inline jule::Bool _1ad2a2710_isUnreachableMatchCase(jule::Ptr<_1ac53a229_Case>* _72428_case) {
	{
		auto expr = &((*((*(_72428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b490cb00:;
		if (it != expr_end) {
			jule::Ptr<_1ac60a55d_Data> *_7259_expr = it;
			{
				if ((!(_1ad2a1d6e_isUnreachableExpr(&((*((*(_7259_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1b490cb00:;
			++it;
			goto _iter_begin_1b490cb00;
		}
		_iter_end_1b490cb00:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1ad2a7bdd_checkForBitShiftOpt(jule::Ptr<_1ac4ce300_OperandExprModel>* _59625_l, jule::Ptr<_1ac4ce300_OperandExprModel>* _59648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1aa128754_IsInt(_1ac63d6d4_Str((*((*(_59625_l))))._field_Kind.ptr())))) || (!(_1aa128754_IsInt(_1ac63d6d4_Str((*((*(_59648_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1aa12bd2e_AsU64((*((*(_59648_r))))._field_Model.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _6042_j = _1a9d0e649_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _6052_z = static_cast<jule::U64>(_6042_j);;
	if ((static_cast<jule::F64>(_6052_z) != _6042_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _6052_z;
	return __jule_func_result;;
}



inline jule::Bool _1ad2a80a6_areSameLvalueExprModel(jule::Any* _61328_l, jule::Any* _61343_r) {
	{
		auto &_match_expr{ (*(_61328_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4c7e5d1:;
			{
				return ((*(_61343_r)) == (*(_61328_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b4c7e3e4:;
			{
				{
					auto &_match_expr{ (*(_61343_r)) };
					
					if (_match_expr.type == &__jule_any_type100) {
						_case_begin_1b4c80538:;
						{
							goto _match_end_1b4c7ed62;
						}
					}
					else {
						_case_begin_1b4c7edc8:;
						{
							return false;;
						}
					}
					_match_end_1b4c7ed62:;
				};
				jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _6263_lsi = (*(_61328_l)).cast_ptr<_1ac4d436b_StructSubIdentExprModel>(&__jule_any_type100);;
				jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _6273_rsi = (*(_61343_r)).cast_ptr<_1ac4d436b_StructSubIdentExprModel>(&__jule_any_type100);;
				if (((*(_6263_lsi))._field_Field != (*(_6273_rsi))._field_Field)) {
					return false;;
				};
				return _1ad2a80a6_areSameLvalueExprModel(&((*((*_6263_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6273_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b4c7e658:;
			{
				{
					auto &_match_expr{ (*(_61343_r)) };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1b4c82826:;
						{
							jule::Ptr<_1ac4cebc4_UnaryExprModel> _6394_ul = (*(_61328_l)).cast_ptr<_1ac4cebc4_UnaryExprModel>(&__jule_any_type112);;
							jule::Ptr<_1ac4cebc4_UnaryExprModel> _6404_ur = (*(_61343_r)).cast_ptr<_1ac4cebc4_UnaryExprModel>(&__jule_any_type112);;
							if ((((*((*(_6394_ul))._field_Op))._field_Id != (*(*(_6404_ur))._field_Op.alloc)._field_Id) || ((*(*(_6394_ul))._field_Op.alloc)._field_Kind != (*(*(_6404_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1ad2a80a6_areSameLvalueExprModel(&((*((*_6394_ul.alloc)._field_Expr))._field_Model), &((*(*(_6404_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1b4c81c65:;
				};
			}
		}
		_match_end_1b4c7e56a:;
	};
	return false;;
}



inline void _1ad2aa273_possibleDynamicRemove(jule::Ptr<_1ad2a91d9_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1ad2a99c0_removeVar((*(_8131_d)).ptr(), _1ad2aad01_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1ad2aa581_isDynamicValidType(jule::Ptr<_1ac63d2d8_TypeKind> _8727_t) {
	return _1ad29632a_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1ac63d2d8_TypeKind> _1ad2aa9b0_isTypeGuaranteedDynamicData(jule::Ptr<_1ad2a91d9_dynamic>* _8937_dy, jule::Ptr<_1ac63d2d8_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _902_isAny = _1ad29632a_IsAny(&(_8955_t));;
	if (((!(_902_isAny)) && (_1ac642298_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_902_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b4b69455:;
			{
				jule::Ptr<_1ac4d0e28_CastingExprModel> _997_cem = _8973_m.unsafe_cast_ptr<_1ac4d0e28_CastingExprModel>();;
				return _1ad2aa9b0_isTypeGuaranteedDynamicData(_8937_dy, (*(_997_cem))._field_ExprKind, (*((*_997_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1b4b699c7:;
	};
	jule::Uintptr _1022_var = _1ad2aad01_getDynamicVar(_8973_m);;
	if ((_1022_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b6b358:;
		if (it != expr_end) {
			_1ad2a8d98_dynamicVar _10614_v = *it;
			{
				if ((_10614_v._field_var == _1022_var)) {
					return _10614_v._field_kind;;
				};
			}
			_iter_next_1b4b6b358:;
			++it;
			goto _iter_begin_1b4b6b358;
		}
		_iter_end_1b4b6b358:;
	};
	return nullptr;;
}



inline jule::Uintptr _1ad2aad01_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1ad2b3ac8_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4b6ba2e:;
			{
				jule::Ptr<_1ac5a2527_Var> _1203_v = _11418_m.unsafe_cast_ptr<_1ac5a2527_Var>();;
				if ((!((*(_1203_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1ac5a2527_Var>());;
				};
				return _1ad2aad01_getDynamicVar((*((*((*_1203_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b4b6c6ab:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1ac4d436b_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b4b6baa6:;
			{
				jule::Ptr<_1ac4cebc4_UnaryExprModel> _1313_uem = _11418_m.unsafe_cast_ptr<_1ac4cebc4_UnaryExprModel>();;
				if (((*((*(_1313_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1ad2aad01_getDynamicVar((*((*_1313_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1b4b6b9b8:;
	};
	return 0LLU;;
}



inline jule::Bool _1ad2ae860_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1ad2b009c_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1ad2aec28_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b7bb71:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1ad2b009c_fitsSize((*(_909_m)), _8934_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1b4b7bb71:;
			++it;
			_906_i++;
			goto _iter_begin_1b4b7bb71;
		}
		_iter_end_1b4b7bb71:;
	};
	return -1LL;;
}



inline jule::Bool _1ad2b009c_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1ac7362b0_typeData(&(_9813_e1)) != _1ac7362b0_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b4b7d700:;
			{
				jule::Ptr<_1aa1293c0_Const> _1043_exprConst = _9828_e2.cast_ptr<_1aa1293c0_Const>(&__jule_any_type20);;
				return ((_1aa12c0b5_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1aa130cbc_GtEq(_9813_e1.unsafe_cast_ptr<_1aa1293c0_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4b7d766:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b4b7d7cc:;
			{
				jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1ac4d436b_StructSubIdentExprModel>();;
				jule::Ptr<_1ac4d436b_StructSubIdentExprModel> _1103_ssi2 = _9828_e2.cast_ptr<_1ac4d436b_StructSubIdentExprModel>(&__jule_any_type100);;
				return (_1ac737932_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b4b7d37b:;
			{
				jule::Ptr<_1ac4cebc4_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1ac4cebc4_UnaryExprModel>();;
				jule::Ptr<_1ac4cebc4_UnaryExprModel> _1143_uem2 = _9828_e2.cast_ptr<_1ac4cebc4_UnaryExprModel>(&__jule_any_type112);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1ad2b009c_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1b4b7d315:;
			{
				return false;;
			}
		}
		_match_end_1b4b7d249:;
	};
}



inline void _1ad2b03cc_possibleBoundaryRemove(jule::Ptr<_1ad2ad7e8_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b7db62:;
		if (it != expr_end) {
			_1ad2ad4a7_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4b856a2:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1ac737932_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1b4b856a2;
							};
						}
						_iter_next_1b4b856a2:;
						++it;
						_1277_i++;
						goto _iter_begin_1b4b856a2;
					}
					_iter_end_1b4b856a2:;
				};
			}
			_iter_next_1b4b7db62:;
			++it;
			goto _iter_begin_1b4b7db62;
		}
		_iter_end_1b4b7db62:;
	};
}



inline jule::Bool _1ad2b0696_isBoundaryRiskyType(jule::Ptr<_1ac63d2d8_TypeKind> _13628_t) {
	return (_1ac64175e_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1ad2b0960_isBoundaryValidType(jule::Ptr<_1ac63d2d8_TypeKind> _14128_t) {
	return ((_1ac6419e5_Slc(_14128_t.ptr()) != nullptr) || (_1ac64175e_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1ad2b0c29_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1ad2b20e3_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4b87a6c:;
			{
				jule::Ptr<_1ac5a2527_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1ac5a2527_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1ac5a2527_Var>());;
				};
				return _1ad2b0c29_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b4b88001:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1ac4d436b_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b4b87ad3:;
			{
				jule::Ptr<_1ac4cebc4_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1ac4cebc4_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1ad2b0c29_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1b4b87e24:;
	};
	return 0LLU;;
}



inline void _1ad2b3ca4_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1ad2b1488_Copy=_332_l1;
	_1ad2b1785_Deadcode=_332_l1;
	_1ad2b1a3d_Append=_332_l1;
	_1ad2b1d3a_Math=_332_l1;
	_1ad2b20e3_Access=_332_l1;
	_1ad2b239b_Inline=_332_l1;
	_1ad2b2654_Ptr=_332_l1;
	_1ad2b2a1c_Cond=_332_l1;
	_1ad2b2c5e_Str=_332_l1;
	_1ad2b3006_Slice=_332_l1;
	_1ad2b32ae_Assign=_332_l1;
	_1ad2b3567_Exceptional=_332_l1;
	_1ad2b3820_Iter=_332_l1;
	_1ad2b3ac8_Dynamic=_332_l1;
}



inline void _1ad3e1dc1_detectEnabled(void) {
	_1ad3deb8d_exprEnabled=(((_1ad2b2654_Ptr || _1ad2b1d3a_Math) || _1ad2b20e3_Access) || _1ad2b2a1c_Cond);
	_1ad3dedd0_scopeEnabled=((((((((_1ad2b2a1c_Cond || _1ad2b1a3d_Append) || _1ad2b1488_Copy) || _1ad2b2c5e_Str) || _1ad2b3006_Slice) || _1ad2b32ae_Assign) || _1ad2b3567_Exceptional) || _1ad2b3820_Iter) || _1ad2b3ac8_Dynamic);
}



inline void _1ad41902a_Throw(jule::Str _910_msg) {
	jule::outln(_1ac2a1c82_toStr(_910_msg));
	_1b0397eeb_Exit(1LL);
}



inline jule::U64 _1ae08537c_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1adeb2e25_isCopyOptimizable(jule::Ptr<_1ac60a55d_Data>* _119123_expr) {
	if ((!((*((*(_119123_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_119123_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b4e3948e:;
			{
				return false;;
			}
		}
		_match_end_1b4e39428:;
	};
	return true;;
}



inline jule::Bool _1adeb32dd_isIterCopyOptimizable(jule::Ptr<_1ac60a55d_Data>* _120227_expr, jule::Ptr<_1ac5a2527_Var>* _120241_v) {
	if (((!((*((*(_120227_expr))))._field_Lvalue)) && (!(_1ac63ebbe_Mutable((*((*(_120227_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_120241_v))))._field_Mutable)) && (!((*((*(_120227_expr))))._field_Mutable)));;
}



inline jule::Bool _1adeb371c_captureVarHandling(jule::Ptr<_1ae08ee9c_ObjectCoder>* _120928_oc, jule::Ptr<_1ac4d2611_AnonFnExprModel>* _120951_m, jule::Ptr<_1ac5a2527_Var>* _120977_v) {
	{
		auto expr = &((*((*(_120951_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4e3b65b:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _12109_cv = *it;
			{
				if ((_12109_cv == (*(_120977_v)))) {
					_1ae0906b7_write((*(_120928_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1adece194_var(&((*((*(_120928_oc))))._field_Buf), (*(_120977_v)));
					return true;;
				};
			}
			_iter_next_1b4e3b65b:;
			++it;
			goto _iter_begin_1b4e3b65b;
		}
		_iter_end_1b4e3b65b:;
	};
	return false;;
}



inline jule::Str _1adec6048_decomposeCommonEsq(jule::U8 _197423_b) {
	{
		auto &_match_expr{ _197423_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b431be6b:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b431bcd4:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b431bd4a:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b431b83e:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b431b8a5:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b431b92c:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b431b9a4:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b431ba2b:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b431bed2:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b431c048:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1b431930e:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b431b784:;
	};
}



inline jule::Str _1adec6356_sbtoa(jule::U8 _200110_b) {
	if ((_200110_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_200110_b < 128LLU)) {
		jule::Str _20063_seq = _1adec6048_decomposeCommonEsq(_200110_b);;
		if (!(_20063_seq).empty()) {
			return _20063_seq;;
		};
		if (((32LL <= _200110_b) && (_200110_b <= 126LLU))) {
			return __jule_strFromByte(_200110_b);;
		};
	};
	jule::Str _20142_seq = _1aa11ab75_FmtUint(static_cast<jule::U64>(_200110_b), 8LL);;
	if ((_20142_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _20142_seq);;
	};
	return (jule::Str::lit("\\", 1) + _20142_seq);;
}



inline void _1adec6642_cstrBytes(_1b097ade7_StrBuilder* _202119_s, jule::Str _202134_ctx) {
	{
		auto expr = &(_202134_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b505e31c:;
		if (it != expr_end) {
			jule::U8 *_20229_b = it;
			{
				_1b0984be2_WriteStr(_202119_s, _1adec6356_sbtoa((*(_20229_b))));
			}
			_iter_next_1b505e31c:;
			++it;
			goto _iter_begin_1b505e31c;
		}
		_iter_end_1b505e31c:;
	};
}



inline void _1adec6972_cstrLit(_1b097ade7_StrBuilder* _202717_s, jule::Str _202732_ctx) {
	_1b0984e9a_WriteByte(_202717_s, '\"');
	_1adec6642_cstrBytes(_202717_s, _202732_ctx);
	_1b0984e9a_WriteByte(_202717_s, '\"');
}



inline void _1adec6d18_ftoa(_1b097ade7_StrBuilder* _203314_s, jule::F64 _203329_f, jule::I64 _203337_bitsize) {
	if ((_203337_bitsize != 32LL)) {
		if ((_203329_f == static_cast<jule::F64>(static_cast<jule::I64>(_203329_f)))) {
			_1adec7104_itoa(_203314_s, static_cast<jule::I64>(_203329_f));
			return;;
		};
		if ((_203329_f == static_cast<jule::F64>(static_cast<jule::U64>(_203329_f)))) {
			_1adec73e0_utoa(_203314_s, static_cast<jule::U64>(_203329_f));
			return;;
		};
	};
	jule::Str _20442_m = _1a9d380e0_FmtFloat(_203329_f, 'f', -1LL, _203337_bitsize);;
	_1b0984be2_WriteStr(_203314_s, _20442_m);
	if ((!(_1b096b48c_Contains(_20442_m, jule::Str::lit(".", 1))))) {
		_1b0984be2_WriteStr(_203314_s, jule::Str::lit(".0", 2));
	};
}



inline void _1adec7104_itoa(_1b097ade7_StrBuilder* _205114_s, jule::I64 _205129_x) {
	{
		
		if ((_205129_x == jule::MAX_I64)) {
			_case_begin_1b50638b5:;
			{
				_1b0984be2_WriteStr(_205114_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_205129_x == jule::MIN_I64)) {
			_case_begin_1b506395e:;
			{
				_1b0984be2_WriteStr(_205114_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1b5063794:;
	};
	_1b0984be2_WriteStr(_205114_s, _1aa11b03d_FmtInt(_205129_x, 10LL));
	if (_1b08bb3a9_Is64Bit(jule::Str::lit("amd64", 5))) {
		_1b0984e9a_WriteByte(_205114_s, 'L');
	};
	_1b0984e9a_WriteByte(_205114_s, 'L');
}



inline void _1adec73e0_utoa(_1b097ade7_StrBuilder* _206814_s, jule::U64 _206829_x) {
	{
		
		if ((_206829_x == jule::MAX_U64)) {
			_case_begin_1b5065a4e:;
			{
				_1b0984be2_WriteStr(_206814_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1b506590b:;
	};
	_1b0984be2_WriteStr(_206814_s, _1aa11ab75_FmtUint(_206829_x, 10LL));
	if (_1b08bb3a9_Is64Bit(jule::Str::lit("amd64", 5))) {
		_1b0984e9a_WriteByte(_206814_s, 'L');
	};
	_1b0984be2_WriteStr(_206814_s, jule::Str::lit("LU", 2));
}



inline void _1adec7a3e_operatorOverloadingBinary(_1b097ade7_StrBuilder* _208235_buf, jule::Ptr<_1ac4ca4d8_StructIns>* _208257_s, jule::Str* _208273_l, jule::Str* _20833_r, jule::U64 _208311_op, jule::Str _208324_kind) {
	;
	jule::Ptr<_1ac4dee04_FnIns> _20856_f = static_cast<jule::Ptr<_1ac4dee04_FnIns>>(nullptr);;
	if ((_208311_op == static_cast<jule::U64>(51LLU))) {
		_20856_f=_1ad2997a1_FindOperator(_208257_s, static_cast<jule::U64>(50LLU), false);
		_1b0984e9a_WriteByte(_208235_buf, '!');
	} else {
		_20856_f=_1ad2997a1_FindOperator(_208257_s, _208311_op, false);
	};
	if ((_20856_f == nullptr)) {
		if (((_208311_op == static_cast<jule::U64>(50LLU)) || (_208311_op == static_cast<jule::U64>(51LLU)))) {
			static__1adecdabc_structureIns(_208235_buf, _208257_s);
			_1b0984be2_WriteStr(_208235_buf, jule::Str::lit("_eq", 3));
			goto _julec_label_1b5069558;
		};
		__jule_panic_s(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2099:3"));;
	};
	static__1adecce1d_funcIns(_208235_buf, &(_20856_f));
	_julec_label_1b5069558:;
	_1b0984be2_WriteStr(_208235_buf, jule::Str::lit("(&", 2));
	_1b0984be2_WriteStr(_208235_buf, (*(_208273_l)));
	_1b0984be2_WriteStr(_208235_buf, jule::Str::lit(", ", 2));
	_1b0984be2_WriteStr(_208235_buf, (*(_20833_r)));
	_1b0984e9a_WriteByte(_208235_buf, ')');
}



inline jule::Slice<jule::U8> _1ae09c7e5_concatAllParts(jule::Slice<jule::Ptr<_1ac4912c3_Token>> _140919_parts) {
	jule::I64 _14106_n = 0LL;;
	{
		auto expr = &(_140919_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5455ea5:;
		if (it != expr_end) {
			jule::Ptr<_1ac4912c3_Token> *_14119_part = it;
			{
				_14106_n+=(*((*(_14119_part))))._field_Kind.len();
			}
			_iter_next_1b5455ea5:;
			++it;
			goto _iter_begin_1b5455ea5;
		}
		_iter_end_1b5455ea5:;
	};
	if ((_14106_n == 0LL)) {
		return nullptr;;
	};
	_1b097ade7_StrBuilder _14176_s = static__1b097b1e4_New(_14106_n);;
	{
		auto expr = &(_140919_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5454da5:;
		if (it != expr_end) {
			jule::Ptr<_1ac4912c3_Token> *_14189_p = it;
			{
				_1b0984be2_WriteStr(&_14176_s, (*((*(_14189_p))))._field_Kind);
			}
			_iter_next_1b5454da5:;
			++it;
			goto _iter_begin_1b5454da5;
		}
		_iter_end_1b5454da5:;
	};
	return _1b0985e8a_Buf(&_14176_s);;
}



inline jule::Bool _1ae09cb03_isHeadDecl(jule::Ptr<_1ac4dbd46_Fn>* _142520_m) {
	if ((((*((*(_142520_m))))._field_Generics.len() > 0LL) || ((*((*(_142520_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1ad296902_IsOpMethod(_142520_m)) {
		return true;;
	};
	jule::Ptr<_1ac4dee04_FnIns> _14326_mi = (*((*(_142520_m))))._field_Instances[0LL];;
	;
	return static__1ac5a3b22_Dispose(_1ac4cb583_FindMethod((*(_14326_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1ae09cdbc_defaultEq(jule::Ptr<_1ac4ca4d8_StructIns>* _143815_s) {
	return ((*((*(_143815_s))))._field_Comparable && ((*((*(_143815_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1ae0ac085_ableToInit(jule::Ptr<_1ac63d2d8_TypeKind>* _46820_t) {
	return (!(_1ac63e185_Binded((*(_46820_t)).ptr())));;
}



inline jule::Bool _1ae0ac360_shouldInitialized(jule::Ptr<_1ac63d2d8_TypeKind>* _47527_t) {
	if ((!(_1ae0ac085_ableToInit(_47527_t)))) {
		return false;;
	};
	jule::Ptr<_1ac646401_Prim> _4792_prim = _1ac64098e_Prim((*(_47527_t)).ptr());;
	if ((_4792_prim != nullptr)) {
		return ((!(_1ac649b52_IsAny(_4792_prim))) && (!(_1ac6498bb_IsStr(_4792_prim))));;
	};
	{
		
		if ((_1ac640c25_Sptr((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1b5596a52:;
			{
				return false;;
			}
		}
		else if ((_1ac64252e_Map((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1b55977cd:;
			{
				return false;;
			}
		}
		else if ((_1ac6419e5_Slc((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1b5596ada:;
			{
				return false;;
			}
		}
		else if ((_1ac642298_Trait((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1b5596b51:;
			{
				return false;;
			}
		}
		else if ((_1ac641c7b_Fn((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1b5597965:;
			{
				return false;;
			}
		}
		else if ((_1ac64175e_Arr((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1b55979cb:;
			{
				jule::Ptr<_1ac64cc21_Arr> _4957_arr = _1ac64175e_Arr((*(_47527_t)).ptr());;
				return _1ae0ac085_ableToInit(&((*(_4957_arr))._field_Elem));;
			}
		}
		else if ((_1ac642012_Struct((*(_47527_t)).ptr()) != nullptr)) {
			_case_begin_1b5597a42:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b5596953:;
			{
				return true;;
			}
		}
		_match_end_1b5596d3d:;
	};
}



inline void _1b03a2b60_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_1ac2a1c82_toStr(_3022_msg));
}



inline void _1b03a2dd5_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1b03a2b60_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _1b03a2984_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1b03a2984_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5644d0e:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1b5644d0e:;
			++it;
			goto _iter_begin_1b5644d0e;
		}
		_iter_end_1b5644d0e:;
	};
	_1b097ade7_StrBuilder _496_s = static__1b097b1e4_New(32LL);;
	;
	{
		auto expr = &(_1b03a2984_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5645ded:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_1b0984be2_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_1b0984be2_WriteStr(&_496_s, _1b0966b08_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_1b0984be2_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_1b0984e9a_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1b5645ded:;
			++it;
			_516_i++;
			goto _iter_begin_1b5645ded;
		}
		_iter_end_1b5645ded:;
	};
	jule::outln(_1b5646dbb_toStr(_496_s));
}



inline void _1b03a3116_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1b03a2b60_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(_1ac2a1c82_toStr(jule::Str::lit("jule0.1.0", 9)));
}



inline void _1b03a3325_toolDistos(void) {
	jule::out(_1ac2a1c82_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::out(_1b564da3d_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::out(_1ac2a1c82_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1b564da3d_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::out(_1ac2a1c82_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1b564da3d_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::outln(_1ac2a1c82_toStr(jule::Str()));
}



inline void _1b03a348a_toolDistarch(void) {
	jule::out(_1ac2a1c82_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::out(_1b5655b55_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::out(_1ac2a1c82_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1b5655b55_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::out(_1ac2a1c82_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1b5655b55_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::outln(_1ac2a1c82_toStr(jule::Str()));
}



inline void _1b03a3688_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(_1ac2a1c82_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1b03a2b60_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1b565e301:;
			{
				_1b03a3325_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1b565ca08:;
			{
				_1b03a348a_toolDistarch();
			}
		}
		else {
			_case_begin_1b565c80a:;
			{
				_1b03a2b60_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1b565c8d7:;
	};
}



inline void _1b03a38b9_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1b03a2b60_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(_1ac2a1c82_toStr(jule::Str::lit("julec version: jule0.1.0", 24)));
	jule::outln(_1ac2a1c82_toStr(jule::Str::lit("architecture: amd64", 19)));
	jule::outln(_1ac2a1c82_toStr(jule::Str::lit("operating system: linux", 23)));
	jule::outln(_1ac2a1c82_toStr((jule::Str::lit("default compiler: ", 18) + _1b039debe_Compiler)));
	jule::outln(_1ac2a1c82_toStr((jule::Str::lit("default C++ standard: ", 22) + _1b03a05ca_CppStd)));
}



inline void _1b03a3c0a_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(_1ac2a1c82_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1b03a2b60_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1b5662cb6:;
			{
				({
					auto except = static__1ae66d49d_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1b03a2b60_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b5662106:;
			{
				_1b03a2b60_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1b5662722:;
	};
}



inline jule::Bool _1b03a3e4c_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1b566425c:;
			{
				_1b03a2dd5_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1b56642c3:;
			{
				_1b03a3116_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1b5664339:;
			{
				_1b03a3688_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1b5663a31:;
			{
				_1b03a38b9_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1b5663a97:;
			{
				_1b03a3c0a_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b5662898:;
			{
				return false;;
			}
		}
		_match_end_1b566336b:;
	};
	return true;;
}



inline void _1b03a40e5_showInfo(void) {
	jule::outln(_1ac2a1c82_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _1ae739080_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1b03a40e5_showInfo();
		return;;
	};
	if (_1b03a3e4c_processCommand(&(_1896_args))) {
		return;;
	};
	_1add2c498_compileCommand(&(_1896_args));
}



inline void _1add293b8_init(void) {
	_1b039debe_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1ae66c623_File> _1add29682_openOutput(jule::Str* _4316_path) {
	jule::Str _442_dir = _1b0989d6d_Dir((*(_4316_path)));;
	({
		auto except = static__1ae66b3d0_Of(_442_dir);
		if (!except.ok()) {
			({
				auto except = static__1b098c524_Create(_442_dir);
				if (!except.ok()) {
					_1ad41902a_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1ae66cd3d_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1ad41902a_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1add2982a_clearObjects(void) {
	({
		auto except = static__1ae6698d9_Remove(_1add2a980_getCompilePath());
		if (!except.ok()) {
			jule::outln(_1ac2a1c82_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__1b098c755_Remove(_1add28b7b_OutDir);
}



inline void _1add29b38_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1b0ad3ea6_Cmd> _736_cmd = static__1b0ad43e6_New(_7214_compiler);;
	(*(_736_cmd))._field_Args=_1b096b118_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1b0ad45e4_Spawn(_736_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b4527330:;
					{
						static__1ad415400_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b4527396:;
					{
						static__1ad415400_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b4526d13:;
					{
						static__1ad415400_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1b4526e23:;
			};
			_1ad41902a_Throw(jule::Str());
		}
	});
	jule::I64 _862_status = ({
		auto except = _1b0ad4a78_Wait(_736_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:12"));
		(except.result);
	});;
	if ((_862_status != 0LL)) {
		jule::Str _883_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _1b039debe_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ad415400_Print(jule::Str::lit("\033[31m", 5), _883_errorMessage);
		_1ad41902a_Throw(jule::Str());
	};
	_1add2982a_clearObjects();
}



inline jule::Bool _1add29e02_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1002_offset = _1b0969bc7_FindLastByte(_9920_path, '.');;
	if ((_1002_offset == -1LL)) {
		return false;;
	};
	return _1b08a984d_IsValidCppExt(_9920_path.slice(_1002_offset));;
}



inline void _1add2a133_pushCompCmdClang(_1b097ade7_StrBuilder* _10726_cmd) {
	_1b0984be2_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1b0984be2_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1b03a05ca_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b452a674:;
			{
				_1b0984be2_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b452b367:;
			{
				_1b0984be2_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b452b3cd:;
			{
				_1b0984be2_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1b452b246:;
	};
	_1b0984e9a_WriteByte(_10726_cmd, ' ');
	if (_1b03a1730_Production) {
		_1b0984be2_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1b0984be2_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1b0984be2_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1b0984be2_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1b0984be2_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1add2a364_pushCompCmdGcc(_1b097ade7_StrBuilder* _13324_cmd) {
	_1b0984be2_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1b0984be2_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1b03a05ca_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b452c81e:;
			{
				_1b0984be2_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b452c885:;
			{
				_1b0984be2_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b452e39d:;
			{
				_1b0984be2_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1b452e27c:;
	};
	_1b0984e9a_WriteByte(_13324_cmd, ' ');
	if (_1b03a1730_Production) {
		_1b0984be2_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1b0984be2_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1b0984be2_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1b0984be2_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1add2a7e8_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1ad29028b_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1603_compiler = &(_1b03a03bb_CompilerPath);;
	_1b097ade7_StrBuilder _1616_cmd = static__1b097b1e4_New(64LL);;
	{
		auto &_match_expr{ _1b039debe_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b453248e:;
			{
				_1add2a364_pushCompCmdGcc(&(_1616_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b45325c1:;
			{
				_1add2a133_pushCompCmdClang(&(_1616_cmd));
			}
		}
		_match_end_1b4532082:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4532879:;
		if (it != expr_end) {
			jule::Ptr<_1ac557cd5_ImportInfo> *_1719_u = it;
			{
				if (((*((*(_1719_u))))._field_Binded && _1add29e02_isCppSourceFile((*(*(_1719_u)).alloc)._field_Path))) {
					_1b0984be2_WriteStr(&_1616_cmd, (*(*(_1719_u)).alloc)._field_Path);
					_1b0984e9a_WriteByte(&_1616_cmd, ' ');
				};
			}
			_iter_next_1b4532879:;
			++it;
			goto _iter_begin_1b4532879;
		}
		_iter_end_1b4532879:;
	};
	if (!(_1add2920e_Out).empty()) {
		_1b0984be2_WriteStr(&_1616_cmd, jule::Str::lit("-o ", 3));
		_1b0984be2_WriteStr(&_1616_cmd, _1add2920e_Out);
		_1b0984e9a_WriteByte(&_1616_cmd, ' ');
	};
	_1b0984be2_WriteStr(&_1616_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b453541a:;
		if (it != expr_end) {
			jule::Str *_1869_pass = it;
			{
				_1b0984e9a_WriteByte(&_1616_cmd, ' ');
				_1b0984be2_WriteStr(&_1616_cmd, (*(_1869_pass)));
			}
			_iter_next_1b453541a:;
			++it;
			goto _iter_begin_1b453541a;
		}
		_iter_end_1b453541a:;
	};
	if ((_1b0399184_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		_1b0984be2_WriteStr(&_1616_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1603_compiler));
	__jule_func_result.__jule_result_arg1 = _1b09854d9_Str(&_1616_cmd);
	return __jule_func_result;;
}



inline jule::Str _1add2a980_getCompilePath(void) {
	return _1b098917a_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1add28b7b_OutDir; (*it++) = _1add28e56_OutName; __jule_collection; }));;
}



inline void _1add2abb1_applyTargetIndependentOptimizations(jule::Ptr<_1ad29028b_IR>* _20545_ir) {
	jule::Ptr<_1ad3e00bc_Optimizer> _2066_opt = static__1ad3e0573_New(_20545_ir);;
	_1ad3e1b5c_Optimize(_2066_opt.ptr());
}



inline void _1add2ad59_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1b039debe_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b4537d13:;
			{
				_1ad41902a_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b4537c47:;
			{
				if ((_1b03a03bb_CompilerPath).empty()) {
					_1b03a03bb_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b4537906:;
			{
				if ((_1b03a03bb_CompilerPath).empty()) {
					_1b03a03bb_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b4536ce0:;
			{
				_1ad41902a_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1b039debe_Compiler));
			}
		}
		_match_end_1b453773b:;
	};
}



inline void _1add2b068_checkTargetArch(jule::Str _22720_arch) {
	if ((((_22720_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_22720_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_22720_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1ad41902a_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1add2b299_checkTargetOs(jule::Str _23518_os) {
	if ((((_23518_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_23518_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_23518_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1ad41902a_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1add2b4ca_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1ad41902a_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2482_parts = _1b096b118_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2482_parts.len() != 2LL)) {
		_1ad41902a_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2532_os;
	jule::Str _2536_arch;
	({
		jule::Str ___jule_assign_arg = _2482_parts[0LL];
		jule::Str _1___jule_assign_arg = _2482_parts[1LL];
		_2532_os = ___jule_assign_arg;
		_2536_arch = _1___jule_assign_arg;
	});
	if ((!_2532_os.equal("native", 6))) {
		_1add2b299_checkTargetOs(_2532_os);
		_1b0399184_Os=_2532_os;
	};
	if ((!_2536_arch.equal("native", 6))) {
		_1add2b068_checkTargetArch(_2536_arch);
		_1b039943c_Arch=_2536_arch;
	};
	_1aa1206c4_UpdateTarget();
}



inline void _1add2b70b_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1ad41902a_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1b453ec71:;
			{
				goto _match_end_1b453e5de;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1b453ed1a:;
			{
				_1ad2b3ca4_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1b453e446:;
			{
				_1ad41902a_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1b453e5de:;
	};
}



inline void _1add2bac4_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1b03a05ca_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b4540b2e:;
			{
				goto _match_end_1b4540601;
			}
		}
		else {
			_case_begin_1b453e655:;
			{
				_1ad41902a_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1b03a05ca_CppStd));
			}
		}
		_match_end_1b4540601:;
	};
}



inline jule::Slice<jule::Str> _1add2bc8e_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2936_opt = jule::Str::lit("L0", 2);;
	jule::Str _2946_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1add23aee_FlagSet> _2966_fs = static__1add23e1d_New();;
	_1b4542537_AddVar(_2966_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2936_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1b4542537_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2946_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1b4542537_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1add2920e_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1b03a080b_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1b03a0ab4_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1b4542537_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1b039debe_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1b4542537_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1b03a03bb_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1b03a1730_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1b03a1125_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1b03a14dd_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1b4542537_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1b03a05ca_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b1488_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b1785_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b1a3d_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b1d3a_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b20e3_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b239b_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b2654_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b2a1c_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b2c5e_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b3006_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b32ae_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b3567_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b3820_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1b454b651_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1ad2b3ac8_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3246_content = ({
		auto except = _1add24cdc_Parse(_2966_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1ad41902a_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1add2ad59_checkCompilerFlag();
	_1add2bac4_checkCppStdFlag();
	_1add2b4ca_checkTargetFlag(&(_2946_target));
	_1add2b70b_checkOptFlag(&(_2936_opt));
	return _3246_content;;
}



inline void _1add2be9d_setupSemaFlags(jule::I64* _33724_flags) {
	if (_1b03a080b_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1ad29028b_IR> _1add2c267_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3442_content = _1add2bc8e_checkFlags(_34313_args);;
	jule::I64 _3466_semaFlags = static_cast<jule::I64>(0LL);;
	_1add2be9d_setupSemaFlags(&(_3466_semaFlags));
	if ((_3442_content.len() == 0LL)) {
		_1ad41902a_Throw(_1b08b6c9a_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3442_content.len() > 1LL)) {
		_1ad41902a_Throw((jule::Str::lit("undefined content: ", 19) + _3442_content[1LL]));
	};
	jule::Str _3546_path;
	jule::Bool _35412_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b09896ca_Abs(_3442_content[0LL]);
		_3546_path = __jule_assign_result.__jule_result_arg0;
		_35412_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35412_ok))) {
		_1ad41902a_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1ae66e713_Status> _3602_inf = ({
		auto except = static__1ae66b3d0_Of(_1b0398529_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ad41902a_Throw(_1b08b6c9a_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_1ae66e713_Status>(nullptr);});
	});;
	if ((!(_1ae66eb20_IsDir(_3602_inf.ptr())))) {
		_1ad41902a_Throw(_1b08b6c9a_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ad29028b_IR> _3686_ir;
	jule::Slice<_1b08b6838_Log> _36810_logs;
	({
		__jule_tuple_x_1ad29028b_IR__jule_tuple_s_1b08b6838_Log __jule_assign_result = static__1ad290764_Build(_3546_path, _3466_semaFlags);
		_3686_ir = __jule_assign_result.__jule_result_arg0;
		_36810_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3686_ir == nullptr) && (_36810_logs == nullptr))) {
		_1ad41902a_Throw(_1b08b6c9a_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3546_path, &__jule_any_type4); __jule_collection; })));
	};
	if ((_36810_logs != nullptr)) {
		static__1ad41859b_PrintLogs(&(_36810_logs));
		_1ad41902a_Throw(jule::Str());
	};
	return _3686_ir;;
}



inline void _1add2c498_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_1b03a0d6c_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1ad29028b_IR> _3896_ir = _1add2c267_buildIr(_38324_args);;
	;
	if ((!(_1b03a0d6c_Test))) {
		jule::Ptr<_1ac4dbd46_Fn> _3947_main = _1ac55c2c3_FindFn((*(_3896_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3947_main == nullptr)) {
			_1ad41902a_Throw(_1b08b6c9a_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1add2abb1_applyTargetIndependentOptimizations(&(_3896_ir));
	_1ad2917cb_Order(_3896_ir);
	jule::Str _4052_compPath = _1add2a980_getCompilePath();;
	jule::Str _4062_compiler;
	jule::Str _40612_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1add2a7e8_genCompileCmd(_4052_compPath, &(_3896_ir));
		_4062_compiler = __jule_assign_result.__jule_result_arg0;
		_40612_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ae08ee9c_ObjectCoder> _4086_oc = static__1ae09040e_New(&(_3896_ir), _1ae08cb9d_SerializationInfo{._field_Compiler=_4062_compiler, ._field_CompilerCommand=_40612_compilerCmd});;
	if (_1b03a0d6c_Test) {
		jule::Ptr<_1adec8a84_TestCoder> _4137_tc = static__1adec903a_New(&(_4086_oc));;
		_1adeca3b0_Serialize(_4137_tc);
	} else {
		_1ae09c460_Serialize(_4086_oc);
	};
	jule::Ptr<_1ae66c623_File> _4196_file = _1add29682_openOutput(&(_4052_compPath));;
	({
		auto except = _1ae669d6d_Write(_4196_file.ptr(), _1b0985e8a_Buf(&(*(_4086_oc))._field_Buf));
		if (!except.ok()) {
			_1ad41902a_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1ae66dbda_Close(_4196_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:2"));
	});
	if ((!(_1b03a0ab4_Transpilation))) {
		_1add29b38_compileIr(_4062_compiler, _40612_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1b0399580_init();
	_1aa12084a_init();
	_1add293b8_init();

}

inline jule::Bool __jule_anon1b34285ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4ddc9e_ParamIns> _25021_p1, jule::Ptr<_1ac4ddc9e_ParamIns> _25036_p2) {
	if (((*((*(_25021_p1))._field_Decl))._field_Mutable != (*(*(_25036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1ac4da9c1_IsSelf((*(_25021_p1))._field_Decl)) {
		if ((!(_1ac4da9c1_IsSelf((*(_25036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1ac4dac57_IsRef((*(_25021_p1))._field_Decl) != _1ac4dac57_IsRef((*(_25036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Reference != (*(*(_25036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_25036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1ac63da25_Equal((*_25021_p1.alloc)._field_Kind, (*(_25036_p2))._field_Kind);;
}

inline jule::Bool __jule_anon_1b3482b2c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac557cd5_ImportInfo> _49935_spkg) {
	jule::Ptr<__jule_anon_1b3482b2c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3482b2c_ctx>();
	return ((!(_1ac4eed9d_isImplicitImport(_49935_spkg))) && ((*((*(__jule_closure_ctx.alloc->_49828_pkg))))._field_Path == (*(_49935_spkg))._field_Path));;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2983a24(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _6521_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _6536_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2983a24_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2983a24_ctx>();
	return _1ac508956__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b29859e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _7221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _7236_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b29859e3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b29859e3_ctx>();
	return _1ac508d52__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b299c91c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _17821_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _17836_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b299c91c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b299c91c_ctx>();
	return _1ac50bb79__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b299e897(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _18521_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _18536_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b299e897_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b299e897_ctx>();
	return _1ac50c075__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b29b0d2b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _28321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _28336_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b29b0d2b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b29b0d2b_ctx>();
	return _1ac50ed8b__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b29c767d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _40221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _40236_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b29c767d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b29c767d_ctx>();
	return _1ac512bc4__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b29c9608(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _40921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _40936_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b29c9608_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b29c9608_ctx>();
	return _1ac5134bb__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b29cb583(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _41621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _41636_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b29cb583_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b29cb583_ctx>();
	return _1ac5130c0__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3522848(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _97421_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _97436_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3522848_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3522848_ctx>();
	return _1ac517e2c__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3524817(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _98121_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _98136_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3524817_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3524817_ctx>();
	return _1ac518328__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3526792(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _98821_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _98836_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3526792_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3526792_ctx>();
	return _1ac518b20__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b352871c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _99521_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _99536_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b352871c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b352871c_ctx>();
	return _1ac51901b__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b352a697(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _100221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _100236_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b352a697_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b352a697_ctx>();
	return _1ac519417__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b352c622(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _100921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _100936_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b352c622_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b352c622_ctx>();
	return _1ac519813__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b352e59c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _101621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _101636_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b352e59c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b352e59c_ctx>();
	return _1ac519c0e__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3531527(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _102321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _102336_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3531527_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3531527_ctx>();
	return _1ac51a10a__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3533727(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _103021_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _103036_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3533727_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3533727_ctx>();
	return _1ac51a506__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b35356a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _103721_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _103736_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b35356a2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b35356a2_ctx>();
	return _1ac51cad0__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b353762c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _104421_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _104436_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b353762c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b353762c_ctx>();
	return _1ac51b9e1__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b35395a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _105121_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _105136_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b35395a7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b35395a7_ctx>();
	return _1ac51a902__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b353b532(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _105821_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _105836_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b353b532_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b353b532_ctx>();
	return _1ac51aced__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b353d4ac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _106521_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _106536_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b353d4ac_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b353d4ac_ctx>();
	return _1ac51b1e9__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3540437(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _107221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _107236_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3540437_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3540437_ctx>();
	return _1ac51b5e5__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b35423b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _107921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _107936_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b35423b2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b35423b2_ctx>();
	return _1ac51bddc__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b354433c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _108621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _108636_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b354433c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b354433c_ctx>();
	return _1ac51c2d8__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b35462b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _109321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _109336_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b35462b7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b35462b7_ctx>();
	return _1ac51c6d4__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3548242(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _110021_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _110036_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3548242_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3548242_ctx>();
	return _1ac518724__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3579383(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _126221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _126236_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3579383_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3579383_ctx>();
	return _1ac51de55__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b357b30d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _126921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _126936_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b357b30d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b357b30d_ctx>();
	return _1ac51e351__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b357d288(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _127621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _127636_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b357d288_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b357d288_ctx>();
	return _1ac51e74c__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3580213(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _128321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _128336_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3580213_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3580213_ctx>();
	return _1ac51eb48__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b358218d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _129021_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _129036_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b358218d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b358218d_ctx>();
	return _1ac520044__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3584118(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _129721_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _129736_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3584118_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3584118_ctx>();
	return _1ac520440__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b3586093(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _130421_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _130436_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b3586093_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b3586093_ctx>();
	return _1ac52083b__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b359ad00(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _142921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _142936_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b359ad00_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b359ad00_ctx>();
	return _1ac5235db__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b359cc7a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _143621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _143636_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b359cc7a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b359cc7a_ctx>();
	return _1ac5239d7__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b359ec05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _144321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _144336_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b359ec05_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b359ec05_ctx>();
	return _1ac523dd3__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a2cbab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _194921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _194936_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a2cbab_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a2cbab_ctx>();
	return _1ac527832__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a2eb7a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _195621_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _195636_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a2eb7a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a2eb7a_ctx>();
	return _1ac527c2d__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a31b05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _196321_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _196336_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a31b05_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a31b05_ctx>();
	return _1ac528129__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a33a80(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _197021_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _197036_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a33a80_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a33a80_ctx>();
	return _1ac528525__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a35a0a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _197721_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _197736_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a35a0a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a35a0a_ctx>();
	return _1ac528921__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a37985(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _198421_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _198436_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a37985_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a37985_ctx>();
	return _1ac528d1c__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a39910(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _199121_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _199136_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a39910_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a39910_ctx>();
	return _1ac529218__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a3b88a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _199821_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _199836_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a3b88a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a3b88a_ctx>();
	return _1ac529614__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a3da8a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _200521_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _200536_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a3da8a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a3da8a_ctx>();
	return _1ac529a10__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a40a15(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _201221_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _201236_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a40a15_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a40a15_ctx>();
	return _1ac529e0b__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1ac60a55d_Data> __jule_anon_1b2a42990(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac60c285_eval>* _201921_e, jule::Ptr<_1ac4ae7db_FnCallExpr>* _201936_fc, jule::Ptr<_1ac60a55d_Data>* ) {
	jule::Ptr<__jule_anon_1b2a42990_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a42990_ctx>();
	return _1ac52a307__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1b2a4dc65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac578256_sema>* _6415_sema, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1b2a4dc65_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2a4dc65_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2a4ed65:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1ac4b3988_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1ac63b902_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1b2a4ed65;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac63d2d8_TypeKind>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2a52b04:;
					if (it != expr_end) {
						jule::Ptr<_1ac4a677d_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1ac63d2d8_TypeKind> _7310_kind = _1ac5810d8_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1ac65d98a_Lookup_mptr_data3), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type77) {
										_case_begin_1b2a5495d:;
										{
											jule::Ptr<_1ac4a6d88_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1ac4a6d88_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1ac52ed23_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1b2a55189;
											};
										}
									}
									_match_end_1b2a548d6:;
								};
								return false;;
							};
							_julec_label_1b2a55189:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac63d2d8_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1b2a52b04:;
						++it;
						goto _iter_begin_1b2a52b04;
					}
					_iter_end_1b2a52b04:;
				};
			}
			_iter_next_1b2a4ed65:;
			++it;
			_659_i++;
			goto _iter_begin_1b2a4ed65;
		}
		_iter_end_1b2a4ed65:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1b32acd53(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac578256_sema>* _103742_sema) {
	jule::Ptr<__jule_anon_1b32acd53_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b32acd53_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_103047_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b32add76:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ddc9e_ParamIns> _103916_p = *it;
			{
				if ((!(_1ac4da9c1_IsSelf((*(_103916_p))._field_Decl.ptr())))) {
					(*_103916_p.alloc)._field_Kind=_1ac5859b1_buildNonGenericTypeKind((*(_103742_sema)), &((*((*(*(_103916_p))._field_Decl.alloc)._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_103111_generics), __jule_closure_ctx.alloc->_103063_ignored);
					__jule_func_result=(__jule_func_result && ((*_103916_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1b32add76:;
			++it;
			goto _iter_begin_1b32add76;
		}
		_iter_end_1b32add76:;
	};
	if ((!(_1ac4dc2ec_IsVoid((*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Result=_1ac5859b1_buildNonGenericTypeKind((*(_103742_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_103047_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_103111_generics), __jule_closure_ctx.alloc->_103063_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1b32c5d6b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac578256_sema>* _114042_sema) {
	jule::Ptr<__jule_anon_1b32c5d6b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b32c5d6b_ctx>();
	return __jule_closure_ctx.alloc->_113346_algo(_114042_sema, &(__jule_closure_ctx.alloc->_11387_generics));;
}

inline jule::Bool __jule_anon_1b32ca656(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac578256_sema>* _115637_sema, jule::Slice<jule::Ptr<_1ac63c4e6_TypeAlias>>* _115655_generics) {
	jule::Ptr<__jule_anon_1b32ca656_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b32ca656_ctx>();
	jule::Bool _11578_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b32cbaec:;
		if (it != expr_end) {
			jule::Ptr<_1ac4ddc9e_ParamIns> _115816_p = *it;
			{
				if (_1ac4da9c1_IsSelf((*(_115816_p))._field_Decl.ptr())) {
					if (((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner == nullptr)) {
						goto _iter_next_1b32cbaec;
					};
					if (_1ac4dac57_IsRef((*(_115816_p))._field_Decl)) {
						(*_115816_p.alloc)._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac649e2c_Sptr>(_1ac649e2c_Sptr{._field_Elem=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23)});
					} else {
						(*_115816_p.alloc)._field_Kind=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner, (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data0)});
					};
				} else {
					(*(_115816_p))._field_Kind=_1ac582738_buildTypeWithGenerics((*(_115637_sema)), &((*((*((*_115816_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_115655_generics)), (*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Refers);
					if (((*_115816_p.alloc)._field_Kind != nullptr)) {
						_1ac58770a_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_115816_p));
					} else {
						_11578_ok=false;
					};
				};
			}
			_iter_next_1b32cbaec:;
			++it;
			goto _iter_begin_1b32cbaec;
		}
		_iter_end_1b32cbaec:;
	};
	if ((!(_1ac4dc2ec_IsVoid((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Result=_1ac582738_buildTypeWithGenerics((*(_115637_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_115237_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_115655_generics)), (*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Refers);
		_11578_ok=(((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Result != nullptr) && _11578_ok);
	};
	return _11578_ok;;
}

inline jule::Bool __jule_anon_1b402bb7b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac557cd5_ImportInfo> _191843_imp) {
	jule::Ptr<__jule_anon_1b402bb7b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b402bb7b_ctx>();
	if ((((*__jule_closure_ctx.alloc->_191635_s.alloc)._field_Ns.len() == 1LL) && ((*(_191843_imp))._field_Alias == __jule_closure_ctx.alloc->_19173_path))) {
		return true;;
	};
	return (((*_191843_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_19173_path) && _1ac55a931_isAccessibleViaSelection(_191843_imp));;
}

inline jule::Str __jule_anon1b4223438(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _87319_def) {
	{
		auto &_match_expr{ (*(_87319_def)) };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b4224538:;
			{
				return (*((*(_87319_def)).cast_ptr<_1ac63c4e6_TypeAlias>(&__jule_any_type27)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b422435c:;
			{
				return (*((*(_87319_def)).cast_ptr<_1ac4c767d_Struct>(&__jule_any_type23)))._field_Ident;;
			}
		}
		else {
			_case_begin_1b4223e1c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b4223da6:;
	};
}

inline jule::Bool __jule_anon_1b42a81d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac557cd5_ImportInfo> _156043_imp) {
	jule::Ptr<__jule_anon_1b42a81d2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b42a81d2_ctx>();
	if ((((*__jule_closure_ctx.alloc->_155836_decl.alloc)._field_Idents.len() == 1LL) && ((*(_156043_imp))._field_Alias == __jule_closure_ctx.alloc->_15593_path))) {
		return true;;
	};
	return (((*_156043_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15593_path) && _1ac55a931_isAccessibleViaSelection(_156043_imp));;
}

inline void __jule_anon_1b4aa30c5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _22131_file) {
	jule::Ptr<__jule_anon_1b4aa30c5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b4aa30c5_ctx>();
	{
		auto expr = &((*((*(_22131_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4aa3a43:;
		if (it != expr_end) {
			jule::Ptr<_1ac5a2527_Var> _22216_v = *it;
			{
				if (_1ad2984b4_HasDirective(&((*(_22216_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1b4a98c69_isLive(__jule_closure_ctx.alloc->_self_, &(_22216_v))))) {
						_1b4a99121_pushLive(__jule_closure_ctx.alloc->_self_, _22216_v);
						_1ad3d6877_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_22216_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1b4aa3a43:;
			++it;
			goto _iter_begin_1b4aa3a43;
		}
		_iter_end_1b4aa3a43:;
	};
	{
		auto expr = &((*((*(_22131_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4aa5bcc:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _23016_f = *it;
			{
				if (_1ad2984b4_HasDirective(&((*(_23016_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_23016_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b4aa64c4:;
						if (it != expr_end) {
							jule::Ptr<_1ac4dee04_FnIns> _23218_ins = *it;
							{
								if ((!(_1b4a66e13_isLive(__jule_closure_ctx.alloc->_self_, &(_23218_ins))))) {
									_1b4a67320_pushLive(__jule_closure_ctx.alloc->_self_, _23218_ins);
									_1ad3d6877_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_23218_ins))._field_Refers));
								};
							}
							_iter_next_1b4aa64c4:;
							++it;
							goto _iter_begin_1b4aa64c4;
						}
						_iter_end_1b4aa64c4:;
					};
				};
			}
			_iter_next_1b4aa5bcc:;
			++it;
			goto _iter_begin_1b4aa5bcc;
		}
		_iter_end_1b4aa5bcc:;
	};
}

inline void __jule_anon_1b4b11067(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr) {
	jule::Ptr<__jule_anon_1b4b11067_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b4b11067_ctx>();
	{
		auto &_match_expr{ (*(_2636_expr)) };
		
		if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b4b119b3:;
			{
				jule::Ptr<_1ac4d17ca_FnCallExprModel> _299_m = (*(_2636_expr)).cast_ptr<_1ac4d17ca_FnCallExprModel>(&__jule_any_type40);;
				if (((*(_299_m))._field_Except != nullptr)) {
					{
						_1ad3da0c8_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_299_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b4b11809:;
			{
				jule::Ptr<_1ac4d2611_AnonFnExprModel> _349_m = (*(_2636_expr)).cast_ptr<_1ac4d2611_AnonFnExprModel>(&__jule_any_type102);;
				_1ad3dca37_eliminateDeadCodeOfScope((*((*(_349_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1b4b1193b:;
	};
}

inline void __jule_anon_1b4b6275b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _56447_m) {
	jule::Ptr<__jule_anon_1b4b6275b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b4b6275b_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_56447_m));
	};
	{
		auto &_match_expr{ (*(_56447_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b4b630db:;
			{
				{
					_1ad2a5d51_binary(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1ac4ce7ea_BinaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b4b6333e:;
			{
				{
					_1ad2a6109_unary(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1ac4cebc4_UnaryExprModel>(&__jule_any_type112));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b4b63152:;
			{
				{
					_1ad2a63b2_structureLit(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1ac4d0598_StructLitExprModel>(&__jule_any_type97));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b4b631b8:;
			{
				{
					_1ad2a666a_casting(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1ac4d0e28_CastingExprModel>(&__jule_any_type95));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b4b6322e:;
			{
				{
					_1ad2a703e_funcCall(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1ac4d17ca_FnCallExprModel>(&__jule_any_type40));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b4b63a48:;
			{
				{
					_1ad2a72e7_indexing(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1ac4d215a_IndexingExprModel>(&__jule_any_type52));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b4b63aae:;
			{
				{
					_1ad2a75a0_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1ac4d2611_AnonFnExprModel>(&__jule_any_type102));
				};
			}
		}
		_match_end_1b4b62edc:;
	};
}

inline void __jule_anon_1b4e51055(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b4e51055_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b4e51055_ctx>();
	if (__jule_closure_ctx.alloc->_1377_ref) {
		_1ae0906b7_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1ae0906b7_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1b4e54a5e(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b4e54a5e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b4e54a5e_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12936_it))))._field_KeyB.alloc)._field_Reference) {
			_1ae0906b7_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1ae0906b7_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1b4e75145(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b4e75145_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b4e75145_ctx>();
	_1ae0906b7_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1b4e77631(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b4e77631_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b4e77631_ctx>();
	_1ae0906b7_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1b4e915e5(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b4e915e5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b4e915e5_ctx>();
	_1ae0906b7_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1b502b2a6(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b502b2a6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b502b2a6_ctx>();
	_1ae0906b7_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1b5032444(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b5032444_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b5032444_ctx>();
	_1adeba944_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_77630_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1b4c4a404(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac5a2527_Var> _115267_v) {
	jule::Ptr<__jule_anon_1b4c4a404_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b4c4a404_ctx>();
	return _1adeb371c_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_114634_m), &(_115267_v));;
}

inline void __jule_anon_1b5516582(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _88638_pkg) {
	jule::Ptr<__jule_anon_1b5516582_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b5516582_ctx>();
	_1ad292e4d_IterFiles(_88638_pkg, jule::__new_closure<void,jule::Ptr<_1ac604d93_SymbolTable>*>((void*)__jule_anon_1b55174b7, jule::Ptr<__jule_anon_1b55174b7_ctx>::make(__jule_anon_1b55174b7_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b55174b7_ctx_handler));
}

inline void __jule_anon_1b5517a7d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn>* _89936_m) {
	jule::Ptr<__jule_anon_1b5517a7d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b5517a7d_ctx>();
	jule::Ptr<_1ac4dee04_FnIns> _9008_ins = (*((*(_89936_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_9008_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b551ac6d:;
		if (it != expr_end) {
			jule::I64 _9019_i = it - expr.begin();
			jule::Ptr<_1ac4ddc9e_ParamIns> _90116_ip = *it;
			{
				if (_1ac493e74_IsAnonIdent((*((*(_90116_ip))._field_Decl))._field_Ident)) {
					(*(*(_90116_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1aa11b307_Itoa(_9019_i));
				};
			}
			_iter_next_1b551ac6d:;
			++it;
			_9019_i++;
			goto _iter_begin_1b551ac6d;
		}
		_iter_end_1b551ac6d:;
	};
	_1ae092730_pushResult(__jule_closure_ctx.alloc->_self_, _89936_m);
	_1ae096415_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _89936_m);
}

inline void __jule_anon_1b551d215(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _91238_pkg) {
	jule::Ptr<__jule_anon_1b551d215_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b551d215_ctx>();
	_1ad292e4d_IterFiles(_91238_pkg, jule::__new_closure<void,jule::Ptr<_1ac604d93_SymbolTable>*>((void*)__jule_anon_1b551e128, jule::Ptr<__jule_anon_1b551e128_ctx>::make(__jule_anon_1b551e128_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b551e128_ctx_handler));
}

inline void __jule_anon_1b552d8b8(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b552d8b8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b552d8b8_ctx>();
	_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1adec49e7_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_97924_v))._field_Value))._field_Data.alloc)._field_Model);
	_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1b55309a8(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b55309a8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b55309a8_ctx>();
	_1adeba944_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_97924_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1b55331b4(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b55331b4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b55331b4_ctx>();
	_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1b553435d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b553435d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b553435d_ctx>();
	_1adec5bb3_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_97924_v))._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1b5552656(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _112238_pkg) {
	jule::Ptr<__jule_anon_1b5552656_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b5552656_ctx>();
	_1ad292e4d_IterFiles(_112238_pkg, jule::__new_closure<void,jule::Ptr<_1ac604d93_SymbolTable>*>((void*)__jule_anon_1b5553558, jule::Ptr<__jule_anon_1b5553558_ctx>::make(__jule_anon_1b5553558_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b5553558_ctx_handler));
}

inline void __jule_anon_1b55539cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn>* _113736_m) {
	jule::Ptr<__jule_anon_1b55539cb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b55539cb_ctx>();
	_1ae091069_indent(__jule_closure_ctx.alloc->_self_);
	_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1adeccb32_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _113736_m);
	_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1ac4dee04_FnIns> _11424_mepf;
	jule::Bool _114210_exist;
	({
		__jule_tuple_x_1ac4dee04_FnIns__jule_tuple_bool __jule_assign_result = _1ae098d52_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _113736_m);
		_11424_mepf = __jule_assign_result.__jule_result_arg0;
		_114210_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_114210_exist))) {
		__jule_panic_s(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1144:5"));;
	};
	_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, _1aa11ab75_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_11424_mepf)), 15LL));
	_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, _1aa11ab75_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_113649_s)), 15LL));
	_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1b5561489(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _117438_pkg) {
	jule::Ptr<__jule_anon_1b5561489_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b5561489_ctx>();
	_1ad292e4d_IterFiles(_117438_pkg, jule::__new_closure<void,jule::Ptr<_1ac604d93_SymbolTable>*>((void*)__jule_anon_1b556239c, jule::Ptr<__jule_anon_1b556239c_ctx>::make(__jule_anon_1b556239c_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b556239c_ctx_handler));
}

inline void __jule_anon_1b5571ab5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _124638_pkg) {
	jule::Ptr<__jule_anon_1b5571ab5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b5571ab5_ctx>();
	_1ad292e4d_IterFiles(_124638_pkg, jule::__new_closure<void,jule::Ptr<_1ac604d93_SymbolTable>*>((void*)__jule_anon_1b55729c8, jule::Ptr<__jule_anon_1b55729c8_ctx>::make(__jule_anon_1b55729c8_ctx{._124638_pkg=_124638_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b55729c8_ctx_handler));
}

inline void __jule_anon_1b557308e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _126931_file) {
	jule::Ptr<__jule_anon_1b557308e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b557308e_ctx>();
	{
		auto expr = &((*((*(_126931_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b55772e6:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _127016_f = *it;
			{
				if ((*(_127016_f))._field_Ident.equal("init", 4)) {
					_1ae091069_indent(__jule_closure_ctx.alloc->_self_);
					static__1adeccb32_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_127016_f));
					_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1b55772e6:;
			++it;
			goto _iter_begin_1b55772e6;
		}
		_iter_end_1b55772e6:;
	};
}

inline void __jule_anon_1b557e430(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac55ac0b_Package>* _130838_pkg) {
	jule::Ptr<__jule_anon_1b557e430_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b557e430_ctx>();
	_1ae09b20b_pushInit(__jule_closure_ctx.alloc->_self_, _130838_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1b56224b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1a9d3d579_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1b562a124(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1a9d3d0c3_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1b29772ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac557cd5_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1b55174b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _88732_file) {
	jule::Ptr<__jule_anon_1b55174b7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b55174b7_ctx>();
	{
		auto expr = &((*((*(_88732_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5517e46:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _88817_f = *it;
			{
				if (((!((*(_88817_f))._field_Binded)) && ((*_88817_f.alloc)._field_Token != nullptr))) {
					_1ae092730_pushResult(__jule_closure_ctx.alloc->_self_, &(_88817_f));
					_1ae09615c_funcDecl(__jule_closure_ctx.alloc->_self_, &(_88817_f), false);
				};
			}
			_iter_next_1b5517e46:;
			++it;
			goto _iter_begin_1b5517e46;
		}
		_iter_end_1b5517e46:;
	};
}

inline void __jule_anon_1b551e128(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _91332_file) {
	jule::Ptr<__jule_anon_1b551e128_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b551e128_ctx>();
	{
		auto expr = &((*((*(_91332_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b551eaa7:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> _91417_t = *it;
			{
				if (((*(_91417_t))._field_Token == nullptr)) {
					goto _iter_next_1b551eaa7;
				};
				_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1adecd209_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _91417_t);
				_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1ae090b6d_addIndent(__jule_closure_ctx.alloc->_self_);
				_1ae091069_indent(__jule_closure_ctx.alloc->_self_);
				_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1ae0968bb_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_91417_t));
				_1ae090d6b_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1ae091069_indent(__jule_closure_ctx.alloc->_self_);
				_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1b551eaa7:;
			++it;
			goto _iter_begin_1b551eaa7;
		}
		_iter_end_1b551eaa7:;
	};
}

inline void __jule_anon_1b5553558(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _112332_file) {
	jule::Ptr<__jule_anon_1b5553558_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b5553558_ctx>();
	{
		auto expr = &((*((*(_112332_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5553ed7:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> _112417_t = *it;
			{
				if (((*(_112417_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1b5553ed7;
				};
				_1ad2939ba_IterTraitMethods(&(_112417_t), jule::__new_closure<void,jule::Ptr<_1ac4dbd46_Fn>*>((void*)__jule_anon_1b5555549, jule::Ptr<__jule_anon_1b5555549_ctx>::make(__jule_anon_1b5555549_ctx{._self_=__jule_closure_ctx.alloc->_self_,._112417_t=_112417_t}).as<jule::Uintptr>(), __jule_anon_1b5555549_ctx_handler));
			}
			_iter_next_1b5553ed7:;
			++it;
			goto _iter_begin_1b5553ed7;
		}
		_iter_end_1b5553ed7:;
	};
}

inline void __jule_anon_1b556239c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _117532_file) {
	jule::Ptr<__jule_anon_1b556239c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b556239c_ctx>();
	{
		auto expr = &((*((*(_117532_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5562d2b:;
		if (it != expr_end) {
			jule::Ptr<_1ac5008a4_Trait> _117617_t = *it;
			{
				jule::I64 _117710_i = 0LL;;
				{
					auto expr = &((*(_117617_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b5563b62:;
					if (it != expr_end) {
						jule::Ptr<_1ac4c767d_Struct> _117818_s = *it;
						{
							{
								auto expr = &((*(_117818_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b5564514:;
								if (it != expr_end) {
									jule::Ptr<_1ac4ca4d8_StructIns> _117919_ins = *it;
									{
										_1ae099b44_traitData(__jule_closure_ctx.alloc->_self_, &(_117617_t), _117710_i, &(_117919_ins));
										(_117710_i)++;
									}
									_iter_next_1b5564514:;
									++it;
									goto _iter_begin_1b5564514;
								}
								_iter_end_1b5564514:;
							};
						}
						_iter_next_1b5563b62:;
						++it;
						goto _iter_begin_1b5563b62;
					}
					_iter_end_1b5563b62:;
				};
			}
			_iter_next_1b5562d2b:;
			++it;
			goto _iter_begin_1b5562d2b;
		}
		_iter_end_1b5562d2b:;
	};
}

inline void __jule_anon_1b55729c8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac604d93_SymbolTable>* _124732_file) {
	jule::Ptr<__jule_anon_1b55729c8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b55729c8_ctx>();
	{
		auto expr = &((*((*(_124732_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5573457:;
		if (it != expr_end) {
			jule::Ptr<_1ac4dbd46_Fn> _124817_f = *it;
			{
				if (((!(_1b03a0d6c_Test)) && _1ad2984b4_HasDirective(&((*(_124817_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1b5573457;
				};
				if (((*(__jule_closure_ctx.alloc->_124638_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_124817_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1b5574d93:;
							{
								goto _iter_next_1b5573457;
							}
						}
						_match_end_1b5574cd8:;
					};
				};
				if (((!((*_124817_f.alloc)._field_Binded)) && ((*_124817_f.alloc)._field_Token != nullptr))) {
					_1ae09869d_func(__jule_closure_ctx.alloc->_self_, &(_124817_f));
					_1ae0906b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1b5573457:;
			++it;
			goto _iter_begin_1b5573457;
		}
		_iter_end_1b5573457:;
	};
}

inline void __jule_anon_1b5555549(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac4dbd46_Fn>* _112839_m) {
	jule::Ptr<__jule_anon_1b5555549_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b5555549_ctx>();
	_1ae0991b5_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_112417_t), _112839_m);
}

inline void __jule_RCAdd(jule::U64* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U64 __jule_RCLoad(jule::U64* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U64* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_1b03a2984_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1add28b7b_OutDir = jule::Str::lit("dist", 4);
	_1add28e56_OutName = jule::Str::lit("ir.cpp", 6);
	_1add2920e_Out = jule::Str();
	_1e2716e81_STDIN = 0LLU;
	_1e27172b1_STDOUT = 1LLU;
	_1e271759c_STDERR = 2LLU;
	_1c7ec7739_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1c7ec8185_acceptRanges = ({ auto __jule_collection = jule::Array<_1c7ec7cde_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1c7ec7cde_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1c7ec7cde_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1c7ec7cde_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1c7ec7cde_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1c7ec7cde_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1c7ec7cde_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_20a3cb3d0__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_20a3cb974__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_1c80984a8__L = jule::new_ptr<_1b09227ea_RangeTable>(_1b09227ea_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1b0921d49_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _1b0921d49_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1b0922377_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _1b0922377_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _1b0922377_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _1b0922377_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _1b0922377_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _1b0922377_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _1b0922377_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _1b0922377_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _1b0922377_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_1c80993bb__LU = jule::new_ptr<_1b09227ea_RangeTable>(_1b09227ea_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1b0921d49_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _1b0921d49_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _1b0921d49_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1b0922377_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _1b0922377_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1b0922377_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _1b0922377_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_1c80a03a0_Letter = _1c80984a8__L;
	_1c80a6670_Upper = _1c80993bb__LU;
	_1b091a958__CaseRanges = ({ auto __jule_collection = jule::Slice<_1b0921893_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _1b0921893_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1b0921893_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_1b091ac44__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_1b091ca26_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_1b091cd12_caseOrbit = ({ auto __jule_collection = jule::Slice<_1b0921398_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _1b0921398_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _1b0921398_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _1b0921398_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _1b0921398_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _1b0921398_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _1b0921398_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _1b0921398_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _1b0921398_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _1b0921398_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _1b0921398_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _1b0921398_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _1b0921398_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _1b0921398_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _1b0921398_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _1b0921398_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _1b0921398_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _1b0921398_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _1b0921398_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _1b0921398_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _1b0921398_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _1b0921398_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _1b0921398_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _1b0921398_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _1b0921398_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _1b0921398_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _1b0921398_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _1b0921398_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _1b0921398_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _1b0921398_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _1b0921398_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _1b0921398_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _1b0921398_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _1b0921398_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _1b0921398_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _1b0921398_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _1b0921398_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _1b0921398_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _1b0921398_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _1b0921398_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _1b0921398_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _1b0921398_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _1b0921398_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _1b0921398_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _1b0921398_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _1b0921398_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _1b0921398_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _1b0921398_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _1b0921398_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _1b0921398_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _1b0921398_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _1b0921398_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _1b0921398_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _1b0921398_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _1b0921398_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _1b0921398_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _1b0921398_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _1b0921398_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _1b0921398_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _1b0921398_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _1b0921398_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _1b0921398_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _1b0921398_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _1b0921398_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _1b0921398_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _1b0921398_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _1b0921398_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _1b0921398_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _1b0921398_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _1b0921398_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _1b0921398_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _1b0921398_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _1b0921398_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _1b0921398_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _1b0921398_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _1b0921398_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _1b0921398_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _1b0921398_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _1b0921398_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _1b0921398_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _1b0921398_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _1b0921398_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _1b0921398_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _1b0921398_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _1b0921398_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _1b0921398_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _1b0921398_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _1b0921398_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _1b0921398_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_1b08a7010_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1b08a8cc0_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1b08a8ece_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_1b0398529_PathStdlib = jule::Str();
	_1b0398826_PathExec = jule::Str();
	_1b0398ace_PathWd = jule::Str();
	_1b0398dcb_PathApi = jule::Str();
	_1b0399184_Os = jule::Str::lit("linux", 5);
	_1b039943c_Arch = jule::Str::lit("amd64", 5);
	_1b039debe_Compiler = jule::Str();
	_1b03a03bb_CompilerPath = jule::Str();
	_1b03a05ca_CppStd = jule::Str::lit("cpp17", 5);
	_1b03a080b_Shadowing = false;
	_1b03a0ab4_Transpilation = false;
	_1b03a0d6c_Test = false;
	_1b03a1125_RC = true;
	_1b03a14dd_Safety = true;
	_1b03a1730_Production = false;
	_1a9d372cb_f32info = _1a9d36dd0_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1a9d375c8_f64info = _1a9d36dd0_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1a9d400a3_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1a9d41db8_powtab = ({ auto __jule_collection = jule::Slice<jule::I64>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1a9d42979_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1a9d42ca9_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1a9d46010_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1aa1165dd_leftCheats = ({ auto __jule_collection = jule::Slice<_1aa1161ae_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1aa1161ae_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1aa1161ae_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1aa1161ae_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1aa11c68d_BitSize = 0LL;
	_1aa11c98a_SysInt = jule::Str();
	_1aa11cc43_SysUint = jule::Str();
	_1ac3e239a_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1ac3e2686_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U64,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(68LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(65LLU); __jule_collection; });
	_1ac3e29b6_BinOps = ({ auto __jule_collection = jule::Array<jule::U64,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(63LLU); (*it++) = static_cast<jule::U64>(64LLU); (*it++) = static_cast<jule::U64>(65LLU); (*it++) = static_cast<jule::U64>(66LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(56LLU); (*it++) = static_cast<jule::U64>(57LLU); (*it++) = static_cast<jule::U64>(69LLU); (*it++) = static_cast<jule::U64>(70LLU); (*it++) = static_cast<jule::U64>(53LLU); (*it++) = static_cast<jule::U64>(52LLU); (*it++) = static_cast<jule::U64>(54LLU); (*it++) = static_cast<jule::U64>(55LLU); (*it++) = static_cast<jule::U64>(50LLU); (*it++) = static_cast<jule::U64>(51LLU); __jule_collection; });
	_1ac48a7a6_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(58LLU); (*it++) = static_cast<jule::U64>(59LLU); __jule_collection; });
	_1ac48aa92_AssignOps = ({ auto __jule_collection = jule::Array<jule::U64,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(71LLU); (*it++) = static_cast<jule::U64>(40LLU); (*it++) = static_cast<jule::U64>(41LLU); (*it++) = static_cast<jule::U64>(43LLU); (*it++) = static_cast<jule::U64>(42LLU); (*it++) = static_cast<jule::U64>(44LLU); (*it++) = static_cast<jule::U64>(46LLU); (*it++) = static_cast<jule::U64>(45LLU); (*it++) = static_cast<jule::U64>(49LLU); (*it++) = static_cast<jule::U64>(48LLU); (*it++) = static_cast<jule::U64>(47LLU); __jule_collection; });
	_1ac4990de_keywords = ({ auto __jule_collection = jule::Array<_1ac498bb0_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U64>(6LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U64>(2LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U64>(7LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U64>(9LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U64>(10LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U64>(11LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U64>(12LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U64>(13LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U64>(14LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U64>(16LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U64>(18LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U64>(20LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U64>(21LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U64>(22LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U64>(23LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U64>(24LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U64>(25LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U64>(26LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U64>(27LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U64>(28LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U64>(29LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U64>(30LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U64>(31LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U64>(32LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U64>(33LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U64>(34LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U64>(36LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U64>(37LLU)}; __jule_collection; });
	_1ac49941e_basicOps = ({ auto __jule_collection = jule::Array<_1ac498bb0_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U64>(19LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U64>(38LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U64>(8LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U64>(3LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U64>(5LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U64>(39LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U64>(17LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U64>(40LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U64>(41LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U64>(42LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U64>(43LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U64>(44LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U64>(45LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U64>(46LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U64>(47LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U64>(48LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U64>(49LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U64>(50LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U64>(51LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U64>(52LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U64>(53LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U64>(54LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U64>(55LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U64>(56LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U64>(57LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U64>(58LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U64>(59LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U64>(60LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U64>(61LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U64>(62LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U64>(63LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U64>(64LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U64>(65LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U64>(66LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U64>(67LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U64>(68LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U64>(69LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U64>(70LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U64>(71LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U64>(35LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U64>(72LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U64>(73LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U64>(76LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U64>(77LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U64>(74LLU)}; (*it++) = _1ac498bb0_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U64>(75LLU)}; __jule_collection; });
	_1ac52ca57_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1ac727878_primNil = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1ac727b75_primVoid = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac727e2d_primAny = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac72822a_primStr = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac7284d3_primBool = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac72878b_primUintptr = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac728a44_primUint = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac728e0c_primInt = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac72914e_primI8 = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac7293e6_primI16 = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac72969e_primI32 = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac729957_primI64 = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac729c10_primU8 = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac729eb8_primU16 = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac72a271_primU32 = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac72a75a_primU64 = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac72a99c_primF32 = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ac72abab_primF64 = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac65ab52_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)});
	_1ad2ab472_emptyData = jule::new_ptr<_1ad2abd68_data>(_1ad2abd68_data{._field_boundary=jule::Ptr<_1ad2ad7e8_boundary>(nullptr), ._field_nils=jule::Ptr<_1ac73c56e_nils>(nullptr), ._field_dynamic=jule::Ptr<_1ad2a91d9_dynamic>(nullptr)});
	_1ad2b1488_Copy = false;
	_1ad2b1785_Deadcode = false;
	_1ad2b1a3d_Append = false;
	_1ad2b1d3a_Math = false;
	_1ad2b20e3_Access = false;
	_1ad2b239b_Inline = false;
	_1ad2b2654_Ptr = false;
	_1ad2b2a1c_Cond = false;
	_1ad2b2c5e_Str = false;
	_1ad2b3006_Slice = false;
	_1ad2b32ae_Assign = false;
	_1ad2b3567_Exceptional = false;
	_1ad2b3820_Iter = false;
	_1ad2b3ac8_Dynamic = false;
	_1ad3deb8d_exprEnabled = false;
	_1ad3dedd0_scopeEnabled = false;
	_1ae082027_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1adea9290_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1ae08c8c3_generalGCPtr = jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac649e2c_Sptr>(_1ac649e2c_Sptr{._field_Elem=jule::new_ptr<_1ac63d2d8_TypeKind>(_1ac63d2d8_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac646401_Prim>(_1ac646401_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1ac63cd32_Kind_mptr_data23)});
	_1b091a66c_CaseRanges = _1b091a958__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}