// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 2/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <time.h>

struct _1c0058b25_Importer{};
struct _1c0108de5_Kind{};
struct _1c0124e55_Lookup{};
struct _233aec512_CommonFlag{};
struct _200a3008d_Range16;
struct _200a30511_Range32;
struct _200a30984_RangeTable;
struct _1d639d85a_acceptRange;
struct _1d63a707d_lazyBuff;
struct _23214d823_DirEntry;
struct _23208b860_Directory;
struct _233937270_File;
struct _233937638_Status;
struct _231eeeeee_Cmd;
struct _1d6435804_Log;
struct _1d675d511_Token;
struct _1d676389b_File;
struct _1d6765903_kindPair;
struct _1d6771359_lex;
struct _1be3621a4_Ast;
struct _1be362e30_Node;
struct _1be36332b_Directive;
struct _1be396a24_TypeDecl;
struct _1be3970da_IdentTypeDecl;
struct _1be397739_SubIdentTypeDecl;
struct _1be397ae1_NamespaceTypeDecl;
struct _1be397dcc_SptrTypeDecl;
struct _1be3982c8_SlcTypeDecl;
struct _1be3985b4_TupleTypeDecl;
struct _1be3988a0_PtrTypeDecl;
struct _1be399032_ArrTypeDecl;
struct _1be399780_MapTypeDecl;
struct _1be399b37_RetTypeDecl;
struct _1be39b045_Expr;
struct _1be39b331_RangeExpr;
struct _1be39b8d6_UseExpr;
struct _1be39bbc2_TupleExpr;
struct _1be39c079_LitExpr;
struct _1be39c783_UnsafeExpr;
struct _1be39cb3a_CoExpr;
struct _1be39d0ad_IdentExpr;
struct _1be39d7b7_UnaryExpr;
struct _1be39db6e_VariadicExpr;
struct _1be39e026_CastExpr;
struct _1be39e3cd_NsSelectionExpr;
struct _1be39e851_SubIdentExpr;
struct _1be39ecc4_BinopExpr;
struct _1be3a0313_FnCallExpr;
struct _1be3a0c92_FieldExprPair;
struct _1be3a14e0_StructLit;
struct _1be3a1963_BraceLit;
struct _1be3a247a_KeyValPair;
struct _1be3a28ed_SliceExpr;
struct _1be3a328e_IndexingExpr;
struct _1be3a3899_SlicingExpr;
struct _1be3a3b85_Constraint;
struct _1be3a4108_GenericDecl;
struct _1be3a44b0_LabelSt;
struct _1be3a4867_GotoSt;
struct _1be3a4b53_FallSt;
struct _1be3a525d_AssignLeft;
struct _1be3a579c_AssignSt;
struct _1be3a6737_Stmt;
struct _1be3a6d42_ScopeTree;
struct _1be3a7518_ParamDecl;
struct _1be3a8838_FnDecl;
struct _1be3a9817_VarDecl;
struct _1be3a9bbe_RetSt;
struct _1be3aa32e_Iter;
struct _1be3aab04_WhileKind;
struct _1be3ab495_RangeKind;
struct _1be3ab84c_BreakSt;
struct _1be3abc04_ContSt;
struct _1be3ac177_If;
struct _1be3ac52e_Else;
struct _1be3ac9a2_Conditional;
struct _1be3ad178_TypeAliasDecl;
struct _1be3ad5eb_Case;
struct _1be3adcc2_MatchCase;
struct _1be3ae564_UseDecl;
struct _1be3ae9d7_EnumItemDecl;
struct _1be3b0510_EnumDecl;
struct _1be3b1016_TypeEnumItemDecl;
struct _1be3b1214_TypeEnumDecl;
struct _1be3b1764_FieldDecl;
struct _1be3b20c2_StructDecl;
struct _1be3b26cc_TraitDecl;
struct _1be3b2cd7_Impl;
struct _1be3e8c63_Const;
struct _1beb1953d_floatInfo;
struct _1bea1b341_decimalSlice;
struct _1c0044490_leftCheat;
struct _1c0044803_decimal;
struct _1be37971b_Field;
struct _1be388b7b_Operators;
struct _1be387251_Struct;
struct _1be38e8b8_FieldIns;
struct _1be457277_OperandExprModel;
struct _1be457464_BinopExprModel;
struct _1be457651_UnaryExprModel;
struct _1be45783d_StructArgExprModel;
struct _1be457a2a_StructLitExprModel;
struct _1be457c17_AllocStructLitExprModel;
struct _1be457e04_CastingExprModel;
struct _1be4580e1_FnCallExprModel;
struct _1be4582cd_SliceExprModel;
struct _1be4584ba_IndexingExprModel;
struct _1be4586a7_AnonFnExprModel;
struct _1be458894_KeyValPairExprModel;
struct _1be458a81_MapExprModel;
struct _1be458c6d_SlicingExprModel;
struct _1be458e5a_TraitSubIdentExprModel;
struct _1be459378_StructSubIdentExprModel;
struct _1be459565_StructStaticIdentExprModel;
struct _1be459752_ArrayExprModel;
struct _1be45993e_CommonIdentExprModel;
struct _1be459b2b_CommonSubIdentExprModel;
struct _1be459d18_TupleExprModel;
struct _1be45a005_BuiltinOutCallExprModel;
struct _1be45a1e2_BuiltinOutlnCallExprModel;
struct _1be45a3ce_BuiltinCloneCallExprModel;
struct _1be45a5bb_BuiltinNewCallExprModel;
struct _1be45a7a8_BuiltinPanicCallExprModel;
struct _1be45a995_BuiltinAssertCallExprModel;
struct _1be45ab82_BuiltinMakeCallExprModel;
struct _1be45ad6e_BuiltinAppendCallExprModel;
struct _1be45b05b_BuiltinCopyCallExprModel;
struct _1be45b248_BuiltinErrorCallExprModel;
struct _1be459147_SizeofExprModel;
struct _1be45b8a8_AlignofExprModel;
struct _1be45ba95_RuneExprModel;
struct _1be45bc82_IntegratedToStrExprModel;
struct _1be45be6e_BackendEmitExprModel;
struct _1be45c15b_FreeExprModel;
struct _1be45c6de_RetType;
struct _1be45cda4_Param;
struct _1be45e6e1_Fn;
struct _1be4614c3_ParamIns;
struct _1be462392_FnIns;
struct _1be465263_ReferenceStack;
struct _1be46662c_Pass;
struct _1be46aac6_symbolBuilder;
struct _1be47159e_Trait;
struct _1be472bee_EnumItem;
struct _1be4736e4_Enum;
struct _1be474728_TypeEnumItem;
struct _1be474cde_TypeEnum;
struct _1be48c8d9_constraintChecker;
struct _1be50ab22_Impl;
struct _1c00487b3_Scope;
struct _1c00489a0_If;
struct _1c0048b8c_Else;
struct _1c0048d79_Conditional;
struct _1c0049066_InfIter;
struct _1c0049253_WhileIter;
struct _1c0049440_RangeIter;
struct _1c004962c_ContSt;
struct _1c0049819_BreakSt;
struct _1c0049a06_Label;
struct _1c0049be3_GotoSt;
struct _1c0049dd0_Postfix;
struct _1c004a0bc_Assign;
struct _1c004a2a9_MultiAssign;
struct _1c004a496_Match;
struct _1c004a9e6_Case;
struct _1c004ad15_FallSt;
struct _1c004b002_RetSt;
struct _1c004b1de_scopeLabel;
struct _1c004b3cb_scopeGoto;
struct _1c004b5b8_scopeChecker;
struct _1c0055715_directiveChecker;
struct _1c005b3a8_ImportInfo;
struct _1c005e312_Package;
struct _1c0064504_Sema;
struct _1c007d70a_missingRetChecker;
struct _1c00803bb_IterRelation;
struct _1c0081334_Var;
struct _1c0081d5c_FuncPattern;
struct _1c00b71e4_typeCompatibilityChecker;
struct _1c00b8d1c_assignTypeChecker;
struct _1c00ba736_dynamicTypeAnnotation;
struct _1c00c0032_fnCallArgChecker;
struct _1c00c293b_structLitChecker;
struct _1c00c4520_rangeChecker;
struct _1c00c6676_retTypeChecker;
struct _1c00c8524_SymbolTable;
struct _1c00cd282_Data;
struct _1c00ce30a_Value;
struct _1c00ced00_Eval;
struct _1c00eb03b_unaryEval;
struct _1c00eccc9_binaryEval;
struct _1c0107ae7_InsGeneric;
struct _1c0108631_TypeAlias;
struct _1c0109324_TypeKind;
struct _1c010d47c_TypeSymbol;
struct _1c010dceb_Prim;
struct _1c0112580_Sptr;
struct _1c0112edc_Slc;
struct _1c0113a6a_Tuple;
struct _1c0114593_Map;
struct _1c0115187_Arr;
struct _1c0115ae4_Ptr;
struct _1c0116a3a_referencer;
struct _1c011784e_typeChecker;
struct _1c0120060_identTypeLookup;
struct _1c097c34a_FileInfo;
struct _1c09c5a9c_stmt;
struct _1c09c63c7_scopeParser;
struct _1c09d27e0_exprBuilder;
struct _1c09de148_assignInfo;
struct _1c09e2976_parser;
struct _1c0a03a53_typeBuilder;
struct _1c02b7db7_CompileInfo;
struct _1c02b921a_directiveEval;
struct _1c065a589_JuleImporter;
struct _1c07bb112_OrderedDefines;
struct _1c079c29c_defineOrderer;
struct _1c0ad5706_liveTable;
struct _1c0b1733c_scopeDeadCode;
struct _1c0b1b297_exprDeadCode;
struct _1bcbe5088_UnsafeBinopExprModel;
struct _1d6d06746_UnsafeIndexingExprModel;
struct _1bcc09ed2_PushToSliceExprModel;
struct _1bca4c7e7_MutSlicingExprModel;
struct _1bcaab15d_StrInsertBeginExprModel;
struct _1d6cec495_scopeOptimizer;
struct _1bca3bebd_exprOptimizer;
struct _1c0ae0aeb_Optimizer;
struct _1c0b35646_AnsiEscape;
struct _1c0b36c30_Logger;
struct _1c1210517_AbsTime;
struct _1c1210baa_Time;
struct _1c118a5a2_scopeCoder;
struct _1c11930e3_exprCoder;
struct _1c11a0ee1_deriveCoder;
struct _1c11a2421_TestCoder;
struct _1c11a4a72_identCoder;
struct _1c1215ece_SerializationInfo;
struct _1c12161bb_traitHash;
struct _1c121bde7_customType;
struct _1c121c6de_typeCoder;
struct _1c3936774_Flag;
struct _1c393a437_Flag;
struct _1c393de1e_Flag;
struct _1c394294a_Flag;
struct _1c3946432_Flag;
struct _1bd8ead15_FlagSet;
struct _1c0977e39_IR;
struct _1be3b359b_StructIns;
struct _1c0ad59c0_ObjectDeadCode;
struct _1c12163a8_ObjectCoder;
struct _1bd9076d4_argParser;
struct _200a3008d_Range16 {
	jule::U16 _field_Lo = jule::U16();
	jule::U16 _field_Hi = jule::U16();
	jule::U16 _field_Stride = jule::U16();
	

	_200a3008d_Range16(void) = default;

	inline bool operator==(_200a3008d_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_200a3008d_Range16 _other) { return !this->operator==(_other); }


};
struct _200a30511_Range32 {
	jule::U32 _field_Lo = jule::U32();
	jule::U32 _field_Hi = jule::U32();
	jule::U32 _field_Stride = jule::U32();
	

	_200a30511_Range32(void) = default;

	inline bool operator==(_200a30511_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_200a30511_Range32 _other) { return !this->operator==(_other); }


};
struct _200a30984_RangeTable {
	jule::Slice<_200a3008d_Range16> _field_R16 = jule::Slice<_200a3008d_Range16>();
	jule::Slice<_200a30511_Range32> _field_R32 = jule::Slice<_200a30511_Range32>();
	jule::I64 _field_LatinOffset = jule::I64();
	

	_200a30984_RangeTable(void) = default;

	inline bool operator==(_200a30984_RangeTable _other) {
		return 
			this->_field_R16 == _other._field_R16 &&
			this->_field_R32 == _other._field_R32 &&
			this->_field_LatinOffset == _other._field_LatinOffset;
	}

	inline bool operator!=(_200a30984_RangeTable _other) { return !this->operator==(_other); }


};
struct _1d639d85a_acceptRange {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_1d639d85a_acceptRange(void) = default;

	inline bool operator==(_1d639d85a_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1d639d85a_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _1d63a7501_index(_1d63a707d_lazyBuff*, jule::I64);
inline void _1d63a7776_append(_1d63a707d_lazyBuff*, jule::U8);
inline jule::Str _1d63a79da_string(_1d63a707d_lazyBuff*);
struct _1d63a707d_lazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_volAndPath = jule::Str();
	jule::I64 _field_volLen = jule::I64();
	

	_1d63a707d_lazyBuff(void) = default;

	inline bool operator==(_1d63a707d_lazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_volAndPath == _other._field_volAndPath &&
			this->_field_volLen == _other._field_volLen;
	}

	inline bool operator!=(_1d63a707d_lazyBuff _other) { return !this->operator==(_other); }


};
struct _23214d823_DirEntry {
	jule::Str _field_Name = jule::Str();
	jule::Ptr<_233937638_Status> _field_Stat = jule::Ptr<_233937638_Status>();
	

	_23214d823_DirEntry(void) = default;

	inline bool operator==(_23214d823_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_23214d823_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_23214d823_DirEntry>>> static__1d63ab67b_Read(jule::Str);
inline jule::VoidExceptional static__1d63ab88a_Create(jule::Str);
inline jule::VoidExceptional static__1d63aba99_Remove(jule::Str);
struct _23208b860_Directory {
	

	_23208b860_Directory(void) = default;

	inline bool operator==(_23208b860_Directory _other) { return true; }

	inline bool operator!=(_23208b860_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_233937270_File>> static__232092e93_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__232093cc9_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _232095858_Write(_233937270_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _23209633c_Read(_233937270_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_233937270_File> static__23214c635_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_233937270_File>> static__23214c811_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__23214e89b_Read(jule::Str);
inline jule::VoidExceptional static__232150490_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _2321517b0_Seek(_233937270_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _23214da10_Close(_233937270_File*);
struct _233937270_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_233937270_File(void) = default;

	inline bool operator==(_233937270_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_233937270_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_233937638_Status>> static__2320979c0_Of(jule::Str);
inline jule::Bool _2320909eb_IsDir(_233937638_Status*);
inline jule::Bool _23209105c_IsReg(_233937638_Status*);
struct _233937638_Status {
	jule::U64 _field_Mode = jule::U64();
	jule::U64 _field_Size = jule::U64();
	

	_233937638_Status(void) = default;

	inline bool operator==(_233937638_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_233937638_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_231eeeeee_Cmd> static__23200042d_New(jule::Str);
inline jule::Exceptional<jule::I64> _232000692_Spawn(_231eeeeee_Cmd*);
inline jule::Exceptional<jule::I64> _2320035eb_spawn(_231eeeeee_Cmd*);
struct _231eeeeee_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_Args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_Env = jule::Slice<jule::Str>();
	

	_231eeeeee_Cmd(void) = default;

	inline bool operator==(_231eeeeee_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_Args == _other._field_Args &&
			this->_field_Env == _other._field_Env;
	}

	inline bool operator!=(_231eeeeee_Cmd _other) { return !this->operator==(_other); }


};
struct _1d6435804_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_Text = jule::Str();
	jule::Str _field_Line = jule::Str();
	jule::Str _field_Suggestion = jule::Str();
	

	_1d6435804_Log(void) = default;

	inline bool operator==(_1d6435804_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1d6435804_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1d675d8b8_Prec(_1d675d511_Token*);
struct _1d675d511_Token {
	jule::Ptr<_1d676389b_File> _field_File = jule::Ptr<_1d676389b_File>();
	jule::I64 _field_Row = jule::I64();
	jule::I64 _field_Column = jule::I64();
	jule::Str _field_Kind = jule::Str();
	jule::U64 _field_Id = 0LLU;
	

	_1d675d511_Token(void) = default;

	inline bool operator==(_1d675d511_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1d675d511_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d6763ca8_IsOk(_1d676389b_File*);
inline void _1d676402d_Fill(_1d676389b_File*, jule::Slice<jule::U8>);
inline jule::Str _1d6764292_Dir(_1d676389b_File*);
inline jule::Str _1d6764506_Name(_1d676389b_File*);
inline jule::Uintptr _1d676476a_Addr(_1d676389b_File*);
inline jule::Str _1d6764a78_GetRow(_1d676389b_File*, jule::I64);
struct _1d676389b_File {
	jule::Str _field_Path = jule::Str();
	jule::Slice<jule::U8> _field_Data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_Tokens = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	

	_1d676389b_File(void) = default;

	inline bool operator==(_1d676389b_File _other) {
		return 
			this->_field_Path == _other._field_Path &&
			this->_field_Data == _other._field_Data &&
			this->_field_Tokens == _other._field_Tokens;
	}

	inline bool operator!=(_1d676389b_File _other) { return !this->operator==(_other); }


};
struct _1d6765903_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1d6765903_kindPair(void) = default;

	inline bool operator==(_1d6765903_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1d6765903_kindPair _other) { return !this->operator==(_other); }


};
inline void _1d67718ed_pushErr(_1d6771359_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1d6771c1c_pushErrTok(_1d6771359_lex*, jule::Ptr<_1d675d511_Token>&, jule::Str);
inline void _1d6771de8_lex(_1d6771359_lex*);
inline jule::Str _1d6772206_id(_1d6771359_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1d677246a_resume(_1d6771359_lex*);
inline void _1d67726e0_lexLineComment(_1d6771359_lex*, jule::Ptr<_1d675d511_Token>&);
inline void _1d6772965_lexRangeComment(_1d6771359_lex*, jule::Ptr<_1d675d511_Token>&);
inline jule::Str _1d6772c73_num(_1d6771359_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1d6773081_escapeSeq(_1d6771359_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1d6773438_getRune(_1d6771359_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1d6773746_lexRune(_1d6771359_lex*, jule::Slice<jule::U8>&);
inline jule::Str _1d67739aa_lexStr(_1d6771359_lex*);
inline jule::Bool _1d6773c1e_isFirstTokenOfLine(_1d6771359_lex*);
inline void _1d6773dea_newLine(_1d6771359_lex*);
inline jule::Bool _1d67743e5_isOp(_1d6771359_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_1d675d511_Token>&);
inline jule::Bool _1d677479c_lexBasicOps(_1d6771359_lex*, jule::Slice<jule::U8>, jule::Ptr<_1d675d511_Token>&);
inline jule::Bool _1d6774b54_lexId(_1d6771359_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Bool _1d677500b_lexNum(_1d6771359_lex*, jule::Slice<jule::U8>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Ptr<_1d675d511_Token> _1d6775270_token(_1d6771359_lex*);
struct _1d6771359_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	jule::Ptr<_1d676389b_File> _field_file = jule::Ptr<_1d676389b_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_1d6435804_Log> _field_errors = jule::Slice<_1d6435804_Log>();
	

	_1d6771359_lex(void) = default;

	inline bool operator==(_1d6771359_lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1d6771359_lex _other) { return !this->operator==(_other); }


};
struct _1be3621a4_Ast {
	jule::Ptr<_1d676389b_File> _field_File = jule::Ptr<_1d676389b_File>();
	jule::Slice<jule::Ptr<_1be36332b_Directive>> _field_TopDirectives = jule::Slice<jule::Ptr<_1be36332b_Directive>>();
	jule::Slice<jule::Ptr<_1be3ae564_UseDecl>> _field_UseDecls = jule::Slice<jule::Ptr<_1be3ae564_UseDecl>>();
	jule::Slice<_1be362e30_Node> _field_Nodes = jule::Slice<_1be362e30_Node>();
	

	_1be3621a4_Ast(void) = default;

	inline bool operator==(_1be3621a4_Ast _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_TopDirectives == _other._field_TopDirectives &&
			this->_field_UseDecls == _other._field_UseDecls &&
			this->_field_Nodes == _other._field_Nodes;
	}

	inline bool operator!=(_1be3621a4_Ast _other) { return !this->operator==(_other); }


};
struct _1be362e30_Node {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1be362e30_Node(void) = default;

	inline bool operator==(_1be362e30_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1be362e30_Node _other) { return !this->operator==(_other); }


};
struct _1be36332b_Directive {
	jule::Ptr<_1d675d511_Token> _field_Tag = jule::Ptr<_1d675d511_Token>();
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_Args = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	

	_1be36332b_Directive(void) = default;

	inline bool operator==(_1be36332b_Directive _other) {
		return 
			this->_field_Tag == _other._field_Tag &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1be36332b_Directive _other) { return !this->operator==(_other); }


};
struct _1be396a24_TypeDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1be396a24_TypeDecl(void) = default;

	inline bool operator==(_1be396a24_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1be396a24_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be39744d_IsPrim(_1be3970da_IdentTypeDecl*);
struct _1be3970da_IdentTypeDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _field_Generics = jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>();
	

	_1be3970da_IdentTypeDecl(void) = default;

	inline bool operator==(_1be3970da_IdentTypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1be3970da_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1be397739_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1be3970da_IdentTypeDecl>> _field_Idents = jule::Slice<jule::Ptr<_1be3970da_IdentTypeDecl>>();
	

	_1be397739_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1be397739_SubIdentTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1be397739_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1be397ae1_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_Idents = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	jule::Ptr<_1be396a24_TypeDecl> _field_Kind = jule::Ptr<_1be396a24_TypeDecl>();
	

	_1be397ae1_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1be397ae1_NamespaceTypeDecl _other) {
		return 
			this->_field_Idents == _other._field_Idents &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1be397ae1_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1be397dcc_SptrTypeDecl {
	jule::Ptr<_1be396a24_TypeDecl> _field_Elem = jule::Ptr<_1be396a24_TypeDecl>();
	

	_1be397dcc_SptrTypeDecl(void) = default;

	inline bool operator==(_1be397dcc_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1be397dcc_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1be3982c8_SlcTypeDecl {
	jule::Ptr<_1be396a24_TypeDecl> _field_Elem = jule::Ptr<_1be396a24_TypeDecl>();
	

	_1be3982c8_SlcTypeDecl(void) = default;

	inline bool operator==(_1be3982c8_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1be3982c8_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1be3985b4_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _field_Types = jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>();
	

	_1be3985b4_TupleTypeDecl(void) = default;

	inline bool operator==(_1be3985b4_TupleTypeDecl _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1be3985b4_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be398c02_IsUnsafe(_1be3988a0_PtrTypeDecl*);
struct _1be3988a0_PtrTypeDecl {
	jule::Ptr<_1be396a24_TypeDecl> _field_Elem = jule::Ptr<_1be396a24_TypeDecl>();
	

	_1be3988a0_PtrTypeDecl(void) = default;

	inline bool operator==(_1be3988a0_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1be3988a0_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be39940b_AutoSized(_1be399032_ArrTypeDecl*);
struct _1be399032_ArrTypeDecl {
	jule::Ptr<_1be396a24_TypeDecl> _field_Elem = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Ptr<_1be39b045_Expr> _field_Size = jule::Ptr<_1be39b045_Expr>();
	

	_1be399032_ArrTypeDecl(void) = default;

	inline bool operator==(_1be399032_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1be399032_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1be399780_MapTypeDecl {
	jule::Ptr<_1be396a24_TypeDecl> _field_Key = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Ptr<_1be396a24_TypeDecl> _field_Val = jule::Ptr<_1be396a24_TypeDecl>();
	

	_1be399780_MapTypeDecl(void) = default;

	inline bool operator==(_1be399780_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1be399780_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1be399b37_RetTypeDecl {
	jule::Ptr<_1be396a24_TypeDecl> _field_Kind = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_Idents = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	

	_1be399b37_RetTypeDecl(void) = default;

	inline bool operator==(_1be399b37_RetTypeDecl _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1be399b37_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1be39b045_Expr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Kind = jule::Any();
	

	_1be39b045_Expr(void) = default;

	inline bool operator==(_1be39b045_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1be39b045_Expr _other) { return !this->operator==(_other); }


};
struct _1be39b331_RangeExpr {
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be39b331_RangeExpr(void) = default;

	inline bool operator==(_1be39b331_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be39b331_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1be39b8d6_UseExpr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be39b8d6_UseExpr(void) = default;

	inline bool operator==(_1be39b8d6_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be39b8d6_UseExpr _other) { return !this->operator==(_other); }


};
struct _1be39bbc2_TupleExpr {
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _field_Expr = jule::Slice<jule::Ptr<_1be39b045_Expr>>();
	

	_1be39bbc2_TupleExpr(void) = default;

	inline bool operator==(_1be39bbc2_TupleExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be39bbc2_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be39c3cb_IsNil(_1be39c079_LitExpr*);
struct _1be39c079_LitExpr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Value = jule::Str();
	

	_1be39c079_LitExpr(void) = default;

	inline bool operator==(_1be39c079_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1be39c079_LitExpr _other) { return !this->operator==(_other); }


};
struct _1be39c783_UnsafeExpr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be39c783_UnsafeExpr(void) = default;

	inline bool operator==(_1be39c783_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be39c783_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1be39cb3a_CoExpr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be39cb3a_CoExpr(void) = default;

	inline bool operator==(_1be39cb3a_CoExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be39cb3a_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be39d410_IsSelf(_1be39d0ad_IdentExpr*);
struct _1be39d0ad_IdentExpr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	

	_1be39d0ad_IdentExpr(void) = default;

	inline bool operator==(_1be39d0ad_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1be39d0ad_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1be39d7b7_UnaryExpr {
	jule::Ptr<_1d675d511_Token> _field_Op = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be39d7b7_UnaryExpr(void) = default;

	inline bool operator==(_1be39d7b7_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be39d7b7_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1be39db6e_VariadicExpr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be39db6e_VariadicExpr(void) = default;

	inline bool operator==(_1be39db6e_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be39db6e_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1be39e026_CastExpr {
	jule::Ptr<_1be396a24_TypeDecl> _field_Kind = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be39e026_CastExpr(void) = default;

	inline bool operator==(_1be39e026_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be39e026_CastExpr _other) { return !this->operator==(_other); }


};
struct _1be39e3cd_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_Ns = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	jule::Ptr<_1d675d511_Token> _field_Ident = jule::Ptr<_1d675d511_Token>();
	

	_1be39e3cd_NsSelectionExpr(void) = default;

	inline bool operator==(_1be39e3cd_NsSelectionExpr _other) {
		return 
			this->_field_Ns == _other._field_Ns &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1be39e3cd_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1be39e851_SubIdentExpr {
	jule::Bool _field_IsSelf = jule::Bool();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1d675d511_Token> _field_Ident = jule::Ptr<_1d675d511_Token>();
	

	_1be39e851_SubIdentExpr(void) = default;

	inline bool operator==(_1be39e851_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1be39e851_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1be39ecc4_BinopExpr {
	jule::Ptr<_1be39b045_Expr> _field_Left = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1be39b045_Expr> _field_Right = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1d675d511_Token> _field_Op = jule::Ptr<_1d675d511_Token>();
	

	_1be39ecc4_BinopExpr(void) = default;

	inline bool operator==(_1be39ecc4_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1be39ecc4_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3a0676_Unhandled(_1be3a0313_FnCallExpr*);
inline jule::Bool _1be3a08da_Ignored(_1be3a0313_FnCallExpr*);
struct _1be3a0313_FnCallExpr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _field_Args = jule::Slice<jule::Ptr<_1be39b045_Expr>>();
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Exception = jule::Ptr<_1be3a6d42_ScopeTree>();
	

	_1be3a0313_FnCallExpr(void) = default;

	inline bool operator==(_1be3a0313_FnCallExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Exception == _other._field_Exception;
	}

	inline bool operator!=(_1be3a0313_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3a10e4_IsTargeted(_1be3a0c92_FieldExprPair*);
struct _1be3a0c92_FieldExprPair {
	jule::Ptr<_1d675d511_Token> _field_Field = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be3a0c92_FieldExprPair(void) = default;

	inline bool operator==(_1be3a0c92_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be3a0c92_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1be3a14e0_StructLit {
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be396a24_TypeDecl> _field_Kind = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1be39b045_Expr>>();
	

	_1be3a14e0_StructLit(void) = default;

	inline bool operator==(_1be3a14e0_StructLit _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1be3a14e0_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3a20d4_IsEmpty(_1be3a1963_BraceLit*);
struct _1be3a1963_BraceLit {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1be39b045_Expr>>();
	

	_1be3a1963_BraceLit(void) = default;

	inline bool operator==(_1be3a1963_BraceLit _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1be3a1963_BraceLit _other) { return !this->operator==(_other); }


};
struct _1be3a247a_KeyValPair {
	jule::Ptr<_1be39b045_Expr> _field_Key = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1be39b045_Expr> _field_Val = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1d675d511_Token> _field_Colon = jule::Ptr<_1d675d511_Token>();
	

	_1be3a247a_KeyValPair(void) = default;

	inline bool operator==(_1be3a247a_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1be3a247a_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3a2c50_IsEmpty(_1be3a28ed_SliceExpr*);
struct _1be3a28ed_SliceExpr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1be39b045_Expr>>();
	

	_1be3a28ed_SliceExpr(void) = default;

	inline bool operator==(_1be3a28ed_SliceExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1be3a28ed_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1be3a328e_IndexingExpr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1be39b045_Expr> _field_Index = jule::Ptr<_1be39b045_Expr>();
	

	_1be3a328e_IndexingExpr(void) = default;

	inline bool operator==(_1be3a328e_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1be3a328e_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1be3a3899_SlicingExpr {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1be39b045_Expr> _field_Start = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1be39b045_Expr> _field_To = jule::Ptr<_1be39b045_Expr>();
	

	_1be3a3899_SlicingExpr(void) = default;

	inline bool operator==(_1be3a3899_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1be3a3899_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1be3a3b85_Constraint {
	jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _field_Mask = jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>();
	

	_1be3a3b85_Constraint(void) = default;

	inline bool operator==(_1be3a3b85_Constraint _other) {
		return 
			this->_field_Mask == _other._field_Mask;
	}

	inline bool operator!=(_1be3a3b85_Constraint _other) { return !this->operator==(_other); }


};
struct _1be3a4108_GenericDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1be3a3b85_Constraint> _field_Constraint = jule::Ptr<_1be3a3b85_Constraint>();
	

	_1be3a4108_GenericDecl(void) = default;

	inline bool operator==(_1be3a4108_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1be3a4108_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1be3a44b0_LabelSt {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1be3a44b0_LabelSt(void) = default;

	inline bool operator==(_1be3a44b0_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1be3a44b0_LabelSt _other) { return !this->operator==(_other); }


};
struct _1be3a4867_GotoSt {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_Label = jule::Ptr<_1d675d511_Token>();
	

	_1be3a4867_GotoSt(void) = default;

	inline bool operator==(_1be3a4867_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1be3a4867_GotoSt _other) { return !this->operator==(_other); }


};
struct _1be3a4b53_FallSt {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	

	_1be3a4b53_FallSt(void) = default;

	inline bool operator==(_1be3a4b53_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1be3a4b53_FallSt _other) { return !this->operator==(_other); }


};
struct _1be3a525d_AssignLeft {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be3a525d_AssignLeft(void) = default;

	inline bool operator==(_1be3a525d_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be3a525d_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1be3a579c_AssignSt {
	jule::Bool _field_Declarative = jule::Bool();
	jule::Ptr<_1d675d511_Token> _field_Setter = jule::Ptr<_1d675d511_Token>();
	jule::Slice<jule::Ptr<_1be3a525d_AssignLeft>> _field_Left = jule::Slice<jule::Ptr<_1be3a525d_AssignLeft>>();
	jule::Ptr<_1be39b045_Expr> _field_Right = jule::Ptr<_1be39b045_Expr>();
	

	_1be3a579c_AssignSt(void) = default;

	inline bool operator==(_1be3a579c_AssignSt _other) {
		return 
			this->_field_Declarative == _other._field_Declarative &&
			this->_field_Setter == _other._field_Setter &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1be3a579c_AssignSt _other) { return !this->operator==(_other); }


};
struct _1be3a6737_Stmt {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Data = jule::Any();
	

	_1be3a6737_Stmt(void) = default;

	inline bool operator==(_1be3a6737_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1be3a6737_Stmt _other) { return !this->operator==(_other); }


};
struct _1be3a6d42_ScopeTree {
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Parent = jule::Ptr<_1be3a6d42_ScopeTree>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<_1be3a6737_Stmt> _field_Stmts = jule::Slice<_1be3a6737_Stmt>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	

	_1be3a6d42_ScopeTree(void) = default;

	inline bool operator==(_1be3a6d42_ScopeTree _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1be3a6d42_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3a787b_IsSelf(_1be3a7518_ParamDecl*);
inline jule::Bool _1be3a7ae0_IsRef(_1be3a7518_ParamDecl*);
struct _1be3a7518_ParamDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1be396a24_TypeDecl> _field_Kind = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Str _field_Ident = jule::Str();
	

	_1be3a7518_ParamDecl(void) = default;

	inline bool operator==(_1be3a7518_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1be3a7518_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3a8b8a_IsAnon(_1be3a8838_FnDecl*);
struct _1be3a8838_FnDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1be36332b_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1be36332b_Directive>>();
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Scope = jule::Ptr<_1be3a6d42_ScopeTree>();
	jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>();
	jule::Ptr<_1be399b37_RetTypeDecl> _field_Result = jule::Ptr<_1be399b37_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1be3a7518_ParamDecl>> _field_Params = jule::Slice<jule::Ptr<_1be3a7518_ParamDecl>>();
	

	_1be3a8838_FnDecl(void) = default;

	inline bool operator==(_1be3a8838_FnDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params;
	}

	inline bool operator!=(_1be3a8838_FnDecl _other) { return !this->operator==(_other); }


};
struct _1be3a9817_VarDecl {
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Scope = jule::Ptr<_1be3a6d42_ScopeTree>();
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Slice<jule::Ptr<_1be36332b_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1be36332b_Directive>>();
	jule::Ptr<_1be396a24_TypeDecl> _field_Kind = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be3a9817_VarDecl(void) = default;

	inline bool operator==(_1be3a9817_VarDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be3a9817_VarDecl _other) { return !this->operator==(_other); }


};
struct _1be3a9bbe_RetSt {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be3a9bbe_RetSt(void) = default;

	inline bool operator==(_1be3a9bbe_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be3a9bbe_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3aa681_IsInf(_1be3aa32e_Iter*);
struct _1be3aa32e_Iter {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Kind = jule::Any();
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Scope = jule::Ptr<_1be3a6d42_ScopeTree>();
	

	_1be3aa32e_Iter(void) = default;

	inline bool operator==(_1be3aa32e_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1be3aa32e_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3aae56_IsWhileNext(_1be3aab04_WhileKind*);
struct _1be3aab04_WhileKind {
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1d675d511_Token> _field_NextToken = jule::Ptr<_1d675d511_Token>();
	

	_1be3aab04_WhileKind(void) = default;

	inline bool operator==(_1be3aab04_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1be3aab04_WhileKind _other) { return !this->operator==(_other); }


};
struct _1be3ab495_RangeKind {
	jule::Ptr<_1d675d511_Token> _field_InToken = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1be3a9817_VarDecl> _field_KeyA = jule::Ptr<_1be3a9817_VarDecl>();
	jule::Ptr<_1be3a9817_VarDecl> _field_KeyB = jule::Ptr<_1be3a9817_VarDecl>();
	

	_1be3ab495_RangeKind(void) = default;

	inline bool operator==(_1be3ab495_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1be3ab495_RangeKind _other) { return !this->operator==(_other); }


};
struct _1be3ab84c_BreakSt {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_Label = jule::Ptr<_1d675d511_Token>();
	

	_1be3ab84c_BreakSt(void) = default;

	inline bool operator==(_1be3ab84c_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1be3ab84c_BreakSt _other) { return !this->operator==(_other); }


};
struct _1be3abc04_ContSt {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_Label = jule::Ptr<_1d675d511_Token>();
	

	_1be3abc04_ContSt(void) = default;

	inline bool operator==(_1be3abc04_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1be3abc04_ContSt _other) { return !this->operator==(_other); }


};
struct _1be3ac177_If {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Scope = jule::Ptr<_1be3a6d42_ScopeTree>();
	

	_1be3ac177_If(void) = default;

	inline bool operator==(_1be3ac177_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1be3ac177_If _other) { return !this->operator==(_other); }


};
struct _1be3ac52e_Else {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Scope = jule::Ptr<_1be3a6d42_ScopeTree>();
	

	_1be3ac52e_Else(void) = default;

	inline bool operator==(_1be3ac52e_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1be3ac52e_Else _other) { return !this->operator==(_other); }


};
struct _1be3ac9a2_Conditional {
	jule::Ptr<_1be3ac177_If> _field_Head = jule::Ptr<_1be3ac177_If>();
	jule::Slice<jule::Ptr<_1be3ac177_If>> _field_Tail = jule::Slice<jule::Ptr<_1be3ac177_If>>();
	jule::Ptr<_1be3ac52e_Else> _field_Default = jule::Ptr<_1be3ac52e_Else>();
	

	_1be3ac9a2_Conditional(void) = default;

	inline bool operator==(_1be3ac9a2_Conditional _other) {
		return 
			this->_field_Head == _other._field_Head &&
			this->_field_Tail == _other._field_Tail &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1be3ac9a2_Conditional _other) { return !this->operator==(_other); }


};
struct _1be3ad178_TypeAliasDecl {
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Scope = jule::Ptr<_1be3a6d42_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1be396a24_TypeDecl> _field_Kind = jule::Ptr<_1be396a24_TypeDecl>();
	

	_1be3ad178_TypeAliasDecl(void) = default;

	inline bool operator==(_1be3ad178_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1be3ad178_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1be3ad5eb_Case {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Scope = jule::Ptr<_1be3a6d42_ScopeTree>();
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _field_Exprs = jule::Slice<jule::Ptr<_1be39b045_Expr>>();
	

	_1be3ad5eb_Case(void) = default;

	inline bool operator==(_1be3ad5eb_Case _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1be3ad5eb_Case _other) { return !this->operator==(_other); }


};
struct _1be3adcc2_MatchCase {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	jule::Slice<jule::Ptr<_1be3ad5eb_Case>> _field_Cases = jule::Slice<jule::Ptr<_1be3ad5eb_Case>>();
	jule::Ptr<_1be3ac52e_Else> _field_Default = jule::Ptr<_1be3ac52e_Else>();
	

	_1be3adcc2_MatchCase(void) = default;

	inline bool operator==(_1be3adcc2_MatchCase _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1be3adcc2_MatchCase _other) { return !this->operator==(_other); }


};
struct _1be3ae564_UseDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Full = jule::Bool();
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_Selected = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	

	_1be3ae564_UseDecl(void) = default;

	inline bool operator==(_1be3ae564_UseDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Full == _other._field_Full &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std;
	}

	inline bool operator!=(_1be3ae564_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3aed39_AutoExpr(_1be3ae9d7_EnumItemDecl*);
struct _1be3ae9d7_EnumItemDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	

	_1be3ae9d7_EnumItemDecl(void) = default;

	inline bool operator==(_1be3ae9d7_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be3ae9d7_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3b0a93_DefaultTyped(_1be3b0510_EnumDecl*);
struct _1be3b0510_EnumDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1be396a24_TypeDecl> _field_Kind = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Slice<jule::Ptr<_1be3ae9d7_EnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1be3ae9d7_EnumItemDecl>>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	

	_1be3b0510_EnumDecl(void) = default;

	inline bool operator==(_1be3b0510_EnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1be3b0510_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1be3b1016_TypeEnumItemDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1be396a24_TypeDecl> _field_Kind = jule::Ptr<_1be396a24_TypeDecl>();
	

	_1be3b1016_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1be3b1016_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1be3b1016_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1be3b1214_TypeEnumDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1be3b1016_TypeEnumItemDecl>> _field_Items = jule::Slice<jule::Ptr<_1be3b1016_TypeEnumItemDecl>>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	

	_1be3b1214_TypeEnumDecl(void) = default;

	inline bool operator==(_1be3b1214_TypeEnumDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items &&
			this->_field_End == _other._field_End;
	}

	inline bool operator!=(_1be3b1214_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1be3b1764_FieldDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1be396a24_TypeDecl> _field_Kind = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Ptr<_1be39b045_Expr> _field_Default = jule::Ptr<_1be39b045_Expr>();
	

	_1be3b1764_FieldDecl(void) = default;

	inline bool operator==(_1be3b1764_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1be3b1764_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1be3b20c2_StructDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1be3b1764_FieldDecl>> _field_Fields = jule::Slice<jule::Ptr<_1be3b1764_FieldDecl>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1be36332b_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1be36332b_Directive>>();
	jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>();
	

	_1be3b20c2_StructDecl(void) = default;

	inline bool operator==(_1be3b20c2_StructDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1be3b20c2_StructDecl _other) { return !this->operator==(_other); }


};
struct _1be3b26cc_TraitDecl {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Slice<jule::Ptr<_1be3a8838_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1be3a8838_FnDecl>>();
	

	_1be3b26cc_TraitDecl(void) = default;

	inline bool operator==(_1be3b26cc_TraitDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Methods == _other._field_Methods;
	}

	inline bool operator!=(_1be3b26cc_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be3b314a_IsTraitImpl(_1be3b2cd7_Impl*);
inline jule::Bool _1be3b33ae_IsStructImpl(_1be3b2cd7_Impl*);
struct _1be3b2cd7_Impl {
	jule::Ptr<_1d675d511_Token> _field_End = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be396a24_TypeDecl> _field_Base = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Ptr<_1be396a24_TypeDecl> _field_Dest = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Slice<jule::Ptr<_1be3a8838_FnDecl>> _field_Methods = jule::Slice<jule::Ptr<_1be3a8838_FnDecl>>();
	jule::Slice<jule::Ptr<_1be3a9817_VarDecl>> _field_Statics = jule::Slice<jule::Ptr<_1be3a9817_VarDecl>>();
	

	_1be3b2cd7_Impl(void) = default;

	inline bool operator==(_1be3b2cd7_Impl _other) {
		return 
			this->_field_End == _other._field_End &&
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1be3b2cd7_Impl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be3e8c63_Const> static__1be44dcda_NewI64(jule::I64);
inline jule::Ptr<_1be3e8c63_Const> static__1be44de1c_NewU64(jule::U64);
inline jule::Ptr<_1be3e8c63_Const> static__1be44e0a4_NewBool(jule::Bool);
inline jule::Ptr<_1be3e8c63_Const> static__1be44e34b_NewStr(jule::Str);
inline jule::Ptr<_1be3e8c63_Const> static__1be44e5e3_NewF64(jule::F64);
inline jule::Ptr<_1be3e8c63_Const> static__1be44e7e1_NewNil(void);
inline jule::I64 _1be44edda_ReadI64(_1be3e8c63_Const*);
inline jule::U64 _1be45014e_ReadU64(_1be3e8c63_Const*);
inline jule::Bool _1be4503b3_ReadBool(_1be3e8c63_Const*);
inline jule::Str _1be450627_ReadStr(_1be3e8c63_Const*);
inline jule::F64 _1be45088b_ReadF64(_1be3e8c63_Const*);
inline jule::I64 _1be450b00_AsI64(_1be3e8c63_Const*);
inline jule::U64 _1be450d64_AsU64(_1be3e8c63_Const*);
inline jule::F64 _1be4510c8_AsF64(_1be3e8c63_Const*);
inline void _1be45134d_SetI64(_1be3e8c63_Const*, jule::I64);
inline void _1be4515c3_SetU64(_1be3e8c63_Const*, jule::U64);
inline void _1be451848_SetBool(_1be3e8c63_Const*, jule::Bool);
inline void _1be451abd_SetStr(_1be3e8c63_Const*, jule::Str);
inline void _1be451d43_SetF64(_1be3e8c63_Const*, jule::F64);
inline void _1be45201e_SetNil(_1be3e8c63_Const*);
inline jule::Bool _1be452283_IsI64(_1be3e8c63_Const*);
inline jule::Bool _1be4524e7_IsU64(_1be3e8c63_Const*);
inline jule::Bool _1be45275b_IsBool(_1be3e8c63_Const*);
inline jule::Bool _1be4529c0_IsStr(_1be3e8c63_Const*);
inline jule::Bool _1be452c34_IsF64(_1be3e8c63_Const*);
inline jule::Bool _1be452e98_IsNil(_1be3e8c63_Const*);
inline jule::Bool _1be4532a6_AreSameTypes(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be4535b4_And(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be4538c2_Or(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be453bd0_Eq(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be453edd_Lt(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be4542eb_LtEq(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be454609_Gt(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be454917_GtEq(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be454c25_Add(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be455033_Sub(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be455341_Mul(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be45564e_Div(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be45595c_Mod(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be455c6a_BitwiseAnd(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be456078_BitwiseOr(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be456386_Xor(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be456694_Lshift(_1be3e8c63_Const*, _1be3e8c63_Const);
inline jule::Bool _1be4569a2_Rshift(_1be3e8c63_Const*, _1be3e8c63_Const);
struct _1be3e8c63_Const {
	jule::Any _field_data = jule::Any();
	

	_1be3e8c63_Const(void) = default;

	inline jule::Bool operator==(_1be3e8c63_Const _other) { return _1be453bd0_Eq(this, _other); }

	inline bool operator!=(_1be3e8c63_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1be3e8c63_Const _other) { return _1be454609_Gt(this, _other); }

	inline jule::Bool operator>=(_1be3e8c63_Const _other) { return _1be454917_GtEq(this, _other); }

	inline jule::Bool operator<(_1be3e8c63_Const _other) { return _1be453edd_Lt(this, _other); }

	inline jule::Bool operator<=(_1be3e8c63_Const _other) { return _1be4542eb_LtEq(this, _other); }


};
struct _1beb1953d_floatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();
	

	_1beb1953d_floatInfo(void) = default;

	inline bool operator==(_1beb1953d_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1beb1953d_floatInfo _other) { return !this->operator==(_other); }


};
struct _1bea1b341_decimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	

	_1bea1b341_decimalSlice(void) = default;

	inline bool operator==(_1bea1b341_decimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1bea1b341_decimalSlice _other) { return !this->operator==(_other); }


};
struct _1c0044490_leftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();
	

	_1c0044490_leftCheat(void) = default;

	inline bool operator==(_1c0044490_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1c0044490_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1bedac4d4_set(_1c0044803_decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1bea31400_floatBits(_1c0044803_decimal*, _1beb1953d_floatInfo&);
inline void _1c00449e0_assign(_1c0044803_decimal*, jule::U64);
inline void _1c0044b22_shift(_1c0044803_decimal*, jule::I64);
inline void _1c0044c54_roundDown(_1c0044803_decimal*, jule::I64);
inline void _1c0044d86_roundUp(_1c0044803_decimal*, jule::I64);
inline void _1c0044eb8_round(_1c0044803_decimal*, jule::I64);
inline jule::U64 _1c00450ea_roundedInteger(_1c0044803_decimal*);
struct _1c0044803_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1c0044803_decimal(void) = default;

	inline bool operator==(_1c0044803_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1c0044803_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be38e8b8_FieldIns> _1be368562_instance(jule::Ptr<_1be37971b_Field>);
struct _1be37971b_Field {
	jule::Ptr<_1be387251_Struct> _field_Owner = jule::Ptr<_1be387251_Struct>();
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1c010d47c_TypeSymbol> _field_Kind = jule::Ptr<_1c010d47c_TypeSymbol>();
	jule::Ptr<_1be39b045_Expr> _field_Default = jule::Ptr<_1be39b045_Expr>();
	

	_1be37971b_Field(void) = default;

	inline bool operator==(_1be37971b_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1be37971b_Field _other) { return !this->operator==(_other); }


};
struct _1be388b7b_Operators {
	jule::Ptr<_1be462392_FnIns> _field_Eq = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Gt = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_GtEq = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Lt = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_LtEq = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Shl = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Shr = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Add = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Sub = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Div = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Mul = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Mod = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_BitAnd = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_BitOr = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_BitXor = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Neg = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_Pos = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_BitNot = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_AddAssign = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_SubAssign = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_DivAssign = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_MulAssign = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_ModAssign = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_ShlAssign = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_ShrAssign = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_BitOrAssign = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_BitAndAssign = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be462392_FnIns> _field_BitXorAssign = jule::Ptr<_1be462392_FnIns>();
	

	_1be388b7b_Operators(void) = default;

	inline bool operator==(_1be388b7b_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1be388b7b_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be3b359b_StructIns> _1be36e656_instance(jule::Ptr<_1be387251_Struct>);
inline jule::Ptr<_1be3b359b_StructIns> _1be3738be_appendInstance(_1be387251_Struct*, jule::Ptr<_1be3b359b_StructIns>&);
inline jule::Ptr<_1be45e6e1_Fn> _1be37666e_FindMethod(_1be387251_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0081334_Var> _1be377681_FindStatic(_1be387251_Struct*, jule::Str);
inline jule::Ptr<_1be37971b_Field> _1be376ac0_FindField(_1be387251_Struct*, jule::Str);
inline jule::Bool _1be378d9c_IsImplements(_1be387251_Struct*, jule::Ptr<_1be47159e_Trait>);
inline jule::Bool _1be3782a8_IsDerives(_1be387251_Struct*, jule::Str);
inline jule::Bool _1be37c059_IsUses(_1be387251_Struct*, jule::Ptr<_1be387251_Struct>);
inline jule::Bool _1be37c71e_HasRefAccessible(_1be387251_Struct*);
struct _1be387251_Struct {
	jule::Ptr<_1c0064504_Sema> _field_sema = jule::Ptr<_1c0064504_Sema>();
	jule::Slice<jule::Ptr<_1be387251_Struct>> _field_Depends = jule::Slice<jule::Ptr<_1be387251_Struct>>();
	jule::Slice<jule::Ptr<_1be387251_Struct>> _field_Uses = jule::Slice<jule::Ptr<_1be387251_Struct>>();
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1be37971b_Field>> _field_Fields = jule::Slice<jule::Ptr<_1be37971b_Field>>();
	jule::Slice<jule::Ptr<_1be45e6e1_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1be45e6e1_Fn>>();
	jule::Slice<jule::Ptr<_1c0081334_Var>> _field_Statics = jule::Slice<jule::Ptr<_1c0081334_Var>>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Slice<jule::Ptr<_1be36332b_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1be36332b_Directive>>();
	jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>();
	jule::Slice<jule::Ptr<_1be47159e_Trait>> _field_Implements = jule::Slice<jule::Ptr<_1be47159e_Trait>>();
	jule::Slice<jule::Ptr<_1be3b359b_StructIns>> _field_Instances = jule::Slice<jule::Ptr<_1be3b359b_StructIns>>();
	

	_1be387251_Struct(void) = default;

	inline bool operator==(_1be387251_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Depends == _other._field_Depends &&
			this->_field_Uses == _other._field_Uses &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Implements == _other._field_Implements &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1be387251_Struct _other) { return !this->operator==(_other); }


};
struct _1be38e8b8_FieldIns {
	jule::Ptr<_1be37971b_Field> _field_Decl = jule::Ptr<_1be37971b_Field>();
	jule::Ptr<_1c0109324_TypeKind> _field_Kind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Ptr<_1c00cd282_Data> _field_Default = jule::Ptr<_1c00cd282_Data>();
	

	_1be38e8b8_FieldIns(void) = default;

	inline bool operator==(_1be38e8b8_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1be38e8b8_FieldIns _other) { return !this->operator==(_other); }


};
struct _1be457277_OperandExprModel {
	jule::Ptr<_1c0109324_TypeKind> _field_Kind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Any _field_Model = jule::Any();
	

	_1be457277_OperandExprModel(void) = default;

	inline bool operator==(_1be457277_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1be457277_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1be457464_BinopExprModel {
	jule::Ptr<_1be457277_OperandExprModel> _field_Left = jule::Ptr<_1be457277_OperandExprModel>();
	jule::Ptr<_1be457277_OperandExprModel> _field_Right = jule::Ptr<_1be457277_OperandExprModel>();
	jule::Ptr<_1d675d511_Token> _field_Op = jule::Ptr<_1d675d511_Token>();
	

	_1be457464_BinopExprModel(void) = default;

	inline bool operator==(_1be457464_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1be457464_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1be457651_UnaryExprModel {
	jule::Ptr<_1c00cd282_Data> _field_Expr = jule::Ptr<_1c00cd282_Data>();
	jule::Ptr<_1d675d511_Token> _field_Op = jule::Ptr<_1d675d511_Token>();
	

	_1be457651_UnaryExprModel(void) = default;

	inline bool operator==(_1be457651_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1be457651_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1be45783d_StructArgExprModel {
	jule::Ptr<_1be38e8b8_FieldIns> _field_Field = jule::Ptr<_1be38e8b8_FieldIns>();
	jule::Any _field_Expr = jule::Any();
	

	_1be45783d_StructArgExprModel(void) = default;

	inline bool operator==(_1be45783d_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be45783d_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1be457a2a_StructLitExprModel {
	jule::Ptr<_1be3b359b_StructIns> _field_Strct = jule::Ptr<_1be3b359b_StructIns>();
	jule::Slice<jule::Ptr<_1be45783d_StructArgExprModel>> _field_Args = jule::Slice<jule::Ptr<_1be45783d_StructArgExprModel>>();
	

	_1be457a2a_StructLitExprModel(void) = default;

	inline bool operator==(_1be457a2a_StructLitExprModel _other) {
		return 
			this->_field_Strct == _other._field_Strct &&
			this->_field_Args == _other._field_Args;
	}

	inline bool operator!=(_1be457a2a_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1be457c17_AllocStructLitExprModel {
	jule::Ptr<_1be457a2a_StructLitExprModel> _field_Lit = jule::Ptr<_1be457a2a_StructLitExprModel>();
	

	_1be457c17_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1be457c17_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1be457c17_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1be457e04_CastingExprModel {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1c0109324_TypeKind> _field_Kind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Ptr<_1c0109324_TypeKind> _field_ExprKind = jule::Ptr<_1c0109324_TypeKind>();
	

	_1be457e04_CastingExprModel(void) = default;

	inline bool operator==(_1be457e04_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1be457e04_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1be4580e1_FnCallExprModel {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be462392_FnIns> _field_Func = jule::Ptr<_1be462392_FnIns>();
	jule::Bool _field_IsCo = jule::Bool();
	jule::Any _field_Expr = jule::Any();
	jule::Slice<jule::Any> _field_Args = jule::Slice<jule::Any>();
	jule::Ptr<_1c00487b3_Scope> _field_Except = jule::Ptr<_1c00487b3_Scope>();
	jule::Bool _field_Assigned = jule::Bool();
	

	_1be4580e1_FnCallExprModel(void) = default;

	inline bool operator==(_1be4580e1_FnCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Func == _other._field_Func &&
			this->_field_IsCo == _other._field_IsCo &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Args == _other._field_Args &&
			this->_field_Except == _other._field_Except &&
			this->_field_Assigned == _other._field_Assigned;
	}

	inline bool operator!=(_1be4580e1_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be4582cd_SliceExprModel {
	jule::Ptr<_1c0109324_TypeKind> _field_ElemKind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1be4582cd_SliceExprModel(void) = default;

	inline bool operator==(_1be4582cd_SliceExprModel _other) {
		return 
			this->_field_ElemKind == _other._field_ElemKind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1be4582cd_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1be4584ba_IndexingExprModel {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1c00cd282_Data> _field_Expr = jule::Ptr<_1c00cd282_Data>();
	jule::Ptr<_1c00cd282_Data> _field_Index = jule::Ptr<_1c00cd282_Data>();
	

	_1be4584ba_IndexingExprModel(void) = default;

	inline bool operator==(_1be4584ba_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1be4584ba_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1be4586a7_AnonFnExprModel {
	jule::Ptr<_1be462392_FnIns> _field_Func = jule::Ptr<_1be462392_FnIns>();
	jule::Bool _field_Global = jule::Bool();
	

	_1be4586a7_AnonFnExprModel(void) = default;

	inline bool operator==(_1be4586a7_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1be4586a7_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1be458894_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any();
	jule::Any _field_Val = jule::Any();
	

	_1be458894_KeyValPairExprModel(void) = default;

	inline bool operator==(_1be458894_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1be458894_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1be458a81_MapExprModel {
	jule::Ptr<_1c0109324_TypeKind> _field_KeyKind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Ptr<_1c0109324_TypeKind> _field_ValKind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Slice<jule::Ptr<_1be458894_KeyValPairExprModel>> _field_Entries = jule::Slice<jule::Ptr<_1be458894_KeyValPairExprModel>>();
	

	_1be458a81_MapExprModel(void) = default;

	inline bool operator==(_1be458a81_MapExprModel _other) {
		return 
			this->_field_KeyKind == _other._field_KeyKind &&
			this->_field_ValKind == _other._field_ValKind &&
			this->_field_Entries == _other._field_Entries;
	}

	inline bool operator!=(_1be458a81_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1be458c6d_SlicingExprModel {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1be458c6d_SlicingExprModel(void) = default;

	inline bool operator==(_1be458c6d_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1be458c6d_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1be458e5a_TraitSubIdentExprModel {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1be45e6e1_Fn> _field_Method = jule::Ptr<_1be45e6e1_Fn>();
	jule::Ptr<_1be47159e_Trait> _field_Trt = jule::Ptr<_1be47159e_Trait>();
	

	_1be458e5a_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1be458e5a_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1be458e5a_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1be459378_StructSubIdentExprModel {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1c00cd282_Data> _field_Expr = jule::Ptr<_1c00cd282_Data>();
	jule::Ptr<_1c0109324_TypeKind> _field_ExprKind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Ptr<_1be462392_FnIns> _field_Method = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be38e8b8_FieldIns> _field_Field = jule::Ptr<_1be38e8b8_FieldIns>();
	

	_1be459378_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1be459378_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field;
	}

	inline bool operator!=(_1be459378_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1be459565_StructStaticIdentExprModel {
	jule::Ptr<_1be3b359b_StructIns> _field_Structure = jule::Ptr<_1be3b359b_StructIns>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1be462392_FnIns> _field_Method = jule::Ptr<_1be462392_FnIns>();
	

	_1be459565_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1be459565_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1be459565_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1be459752_ArrayExprModel {
	jule::Ptr<_1c0115187_Arr> _field_Kind = jule::Ptr<_1c0115187_Arr>();
	jule::Slice<jule::Any> _field_Elems = jule::Slice<jule::Any>();
	

	_1be459752_ArrayExprModel(void) = default;

	inline bool operator==(_1be459752_ArrayExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1be459752_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1be45993e_CommonIdentExprModel {
	jule::Str _field_Ident = jule::Str();
	

	_1be45993e_CommonIdentExprModel(void) = default;

	inline bool operator==(_1be45993e_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1be45993e_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1be459b2b_CommonSubIdentExprModel {
	jule::Ptr<_1c0109324_TypeKind> _field_ExprKind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	

	_1be459b2b_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1be459b2b_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1be459b2b_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1be459d18_TupleExprModel {
	jule::Slice<jule::Ptr<_1c00cd282_Data>> _field_Datas = jule::Slice<jule::Ptr<_1c00cd282_Data>>();
	

	_1be459d18_TupleExprModel(void) = default;

	inline bool operator==(_1be459d18_TupleExprModel _other) {
		return 
			this->_field_Datas == _other._field_Datas;
	}

	inline bool operator!=(_1be459d18_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1be45a005_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1be45a005_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1be45a005_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1be45a005_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be45a1e2_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any();
	jule::Bool _field_Debug = jule::Bool();
	

	_1be45a1e2_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1be45a1e2_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1be45a1e2_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be45a3ce_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1be45a3ce_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1be45a3ce_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be45a3ce_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be45a5bb_BuiltinNewCallExprModel {
	jule::Ptr<_1c0109324_TypeKind> _field_Kind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Any _field_Init = jule::Any();
	

	_1be45a5bb_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1be45a5bb_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1be45a5bb_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be45a7a8_BuiltinPanicCallExprModel {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Expr = jule::Any();
	

	_1be45a7a8_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1be45a7a8_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be45a7a8_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be45a995_BuiltinAssertCallExprModel {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Log = jule::Str();
	

	_1be45a995_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1be45a995_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1be45a995_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be45ab82_BuiltinMakeCallExprModel {
	jule::Ptr<_1c0109324_TypeKind> _field_Kind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Any _field_Len = jule::Any();
	jule::Any _field_Cap = jule::Any();
	

	_1be45ab82_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1be45ab82_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1be45ab82_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be45ad6e_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Elements = jule::Any();
	

	_1be45ad6e_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1be45ad6e_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1be45ad6e_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be45b05b_BuiltinCopyCallExprModel {
	jule::Ptr<_1c00cd282_Data> _field_Dest = jule::Ptr<_1c00cd282_Data>();
	jule::Ptr<_1c00cd282_Data> _field_Src = jule::Ptr<_1c00cd282_Data>();
	

	_1be45b05b_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1be45b05b_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1be45b05b_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be45b248_BuiltinErrorCallExprModel {
	jule::Ptr<_1be462392_FnIns> _field_Func = jule::Ptr<_1be462392_FnIns>();
	jule::Any _field_Err = jule::Any();
	

	_1be45b248_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1be45b248_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1be45b248_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1be459147_SizeofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1be459147_SizeofExprModel(void) = default;

	inline bool operator==(_1be459147_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be459147_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1be45b8a8_AlignofExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1be45b8a8_AlignofExprModel(void) = default;

	inline bool operator==(_1be45b8a8_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be45b8a8_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1be45ba95_RuneExprModel {
	jule::I32 _field_Code = jule::I32();
	

	_1be45ba95_RuneExprModel(void) = default;

	inline bool operator==(_1be45ba95_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1be45ba95_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1be45bc82_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1be45bc82_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1be45bc82_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be45bc82_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1be45be6e_BackendEmitExprModel {
	jule::Str _field_Code = jule::Str();
	jule::Slice<jule::Any> _field_Exprs = jule::Slice<jule::Any>();
	

	_1be45be6e_BackendEmitExprModel(void) = default;

	inline bool operator==(_1be45be6e_BackendEmitExprModel _other) {
		return 
			this->_field_Code == _other._field_Code &&
			this->_field_Exprs == _other._field_Exprs;
	}

	inline bool operator!=(_1be45be6e_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1be45c15b_FreeExprModel {
	jule::Any _field_Expr = jule::Any();
	

	_1be45c15b_FreeExprModel(void) = default;

	inline bool operator==(_1be45c15b_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1be45c15b_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1be45c6de_RetType {
	jule::Ptr<_1c010d47c_TypeSymbol> _field_Kind = jule::Ptr<_1c010d47c_TypeSymbol>();
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_Idents = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	

	_1be45c6de_RetType(void) = default;

	inline bool operator==(_1be45c6de_RetType _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Idents == _other._field_Idents;
	}

	inline bool operator!=(_1be45c6de_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be4614c3_ParamIns> _1be45d26c_instance(jule::Ptr<_1be45cda4_Param>);
inline jule::Bool _1be45d4d1_IsSelf(_1be45cda4_Param*);
inline jule::Bool _1be45d745_IsRef(_1be45cda4_Param*);
struct _1be45cda4_Param {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1c010d47c_TypeSymbol> _field_Kind = jule::Ptr<_1c010d47c_TypeSymbol>();
	jule::Str _field_Ident = jule::Str();
	

	_1be45cda4_Param(void) = default;

	inline bool operator==(_1be45cda4_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1be45cda4_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be45eb53_IsVoid(_1be45e6e1_Fn*);
inline jule::Bool _1be45edb7_IsMethod(_1be45e6e1_Fn*);
inline jule::Bool _1be46012b_IsEntryPoint(_1be45e6e1_Fn*);
inline jule::Bool _1be460390_IsInit(_1be45e6e1_Fn*);
inline jule::Bool _1be460604_IsAnon(_1be45e6e1_Fn*);
inline jule::Bool _1be460868_AnyVar(_1be45e6e1_Fn*);
inline jule::Ptr<_1be462392_FnIns> _1be460acc_instanceForce(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Ptr<_1be462392_FnIns> _1be460d41_instance(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Ptr<_1be462392_FnIns> _1be46111b_appendInstance(_1be45e6e1_Fn*, jule::Ptr<_1be462392_FnIns>&);
struct _1be45e6e1_Fn {
	jule::Ptr<_1c0064504_Sema> _field_sema = jule::Ptr<_1c0064504_Sema>();
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Global = jule::Bool();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Exceptional = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1be36332b_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1be36332b_Directive>>();
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Scope = jule::Ptr<_1be3a6d42_ScopeTree>();
	jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>> _field_Generics = jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>();
	jule::Ptr<_1be45c6de_RetType> _field_Result = jule::Ptr<_1be45c6de_RetType>();
	jule::Slice<jule::Ptr<_1be45cda4_Param>> _field_Params = jule::Slice<jule::Ptr<_1be45cda4_Param>>();
	jule::Ptr<_1be387251_Struct> _field_Owner = jule::Ptr<_1be387251_Struct>();
	jule::Slice<jule::Ptr<_1be462392_FnIns>> _field_Instances = jule::Slice<jule::Ptr<_1be462392_FnIns>>();
	

	_1be45e6e1_Fn(void) = default;

	inline bool operator==(_1be45e6e1_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_Token == _other._field_Token &&
			this->_field_Global == _other._field_Global &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Exceptional == _other._field_Exceptional &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Result == _other._field_Result &&
			this->_field_Params == _other._field_Params &&
			this->_field_Owner == _other._field_Owner &&
			this->_field_Instances == _other._field_Instances;
	}

	inline bool operator!=(_1be45e6e1_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1be46189c_Str(_1be4614c3_ParamIns*);
struct _1be4614c3_ParamIns {
	jule::Ptr<_1be45cda4_Param> _field_Decl = jule::Ptr<_1be45cda4_Param>();
	jule::Ptr<_1c0109324_TypeKind> _field_Kind = jule::Ptr<_1c0109324_TypeKind>();
	

	_1be4614c3_ParamIns(void) = default;

	inline bool operator==(_1be4614c3_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1be4614c3_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1be4626c2_Str(_1be462392_FnIns*);
inline jule::Bool _1be4629d0_Equals(jule::Ptr<_1be462392_FnIns>, jule::Ptr<_1c0109324_TypeKind>);
inline jule::Bool _1be462e42_EqualsFn(jule::Ptr<_1be462392_FnIns>, jule::Ptr<_1be462392_FnIns>&);
inline jule::Bool _1be463250_equalsTrait(jule::Ptr<_1be462392_FnIns>, jule::Ptr<_1be462392_FnIns>&);
inline jule::Slice<jule::Ptr<_1c0109324_TypeKind>> _1be4634b4_Types(_1be462392_FnIns*);
inline jule::Bool _1be463728_IsBuiltin(_1be462392_FnIns*);
inline jule::Bool _1be46398c_IsAnon(_1be462392_FnIns*);
inline jule::Bool _1be463c9a_Same(_1be462392_FnIns*, jule::Ptr<_1be462392_FnIns>);
inline jule::Str _1be4640a8_GetKindStr(_1be462392_FnIns*, jule::Bool);
struct _1be462392_FnIns {
	jule::Ptr<_1be3b359b_StructIns> _field_Owner = jule::Ptr<_1be3b359b_StructIns>();
	jule::Ptr<_1be45e6e1_Fn> _field_Decl = jule::Ptr<_1be45e6e1_Fn>();
	jule::Slice<jule::Ptr<_1c0107ae7_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1c0107ae7_InsGeneric>>();
	jule::Slice<jule::Ptr<_1be4614c3_ParamIns>> _field_Params = jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>();
	jule::Ptr<_1c0109324_TypeKind> _field_Result = jule::Ptr<_1c0109324_TypeKind>();
	jule::Ptr<_1c00487b3_Scope> _field_Scope = jule::Ptr<_1c00487b3_Scope>();
	jule::Ptr<_1be465263_ReferenceStack> _field_Refers = jule::Ptr<_1be465263_ReferenceStack>();
	jule::Bool _field_Anon = jule::Bool();
	jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1be462392_FnIns(void) = default;

	inline bool operator==(_1be462392_FnIns _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Params == _other._field_Params &&
			this->_field_Result == _other._field_Result &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Anon == _other._field_Anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1be462392_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be465263_ReferenceStack> static__1be46554e_new(void);
inline jule::I64 _1be4658d4_Len(_1be465263_ReferenceStack*);
inline jule::Any _1be465be2_At(_1be465263_ReferenceStack*, jule::I64);
inline void _1be465e67_Push(_1be465263_ReferenceStack*, jule::Any);
inline jule::Bool _1c2c3bc56_Exist(_1be465263_ReferenceStack*, jule::Ptr<_1be462392_FnIns>);
inline jule::Bool _1c2c516d8_Exist(_1be465263_ReferenceStack*, jule::Ptr<_1c0081334_Var>);
inline jule::Bool _1c2a0403a_Exist(_1be465263_ReferenceStack*, jule::Ptr<_1be3b359b_StructIns>);
inline jule::Bool _1c304a273_Exist(_1be465263_ReferenceStack*, jule::Ptr<_1be47159e_Trait>);
struct _1be465263_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1be465263_ReferenceStack(void) = default;

	inline bool operator==(_1be465263_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1be465263_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1be46662c_Pass {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Text = jule::Str();
	

	_1be46662c_Pass(void) = default;

	inline bool operator==(_1be46662c_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1be46662c_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1be46aac6_symbolBuilder> _1be46b07c_getRoot(jule::Ptr<_1be46aac6_symbolBuilder>);
inline void _1be46b445_pushErr(_1be46aac6_symbolBuilder*, jule::Ptr<_1d675d511_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1be46b80d_pushErrText(_1be46aac6_symbolBuilder*, jule::Ptr<_1d675d511_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1be46bb2c_pushSuggestion(_1be46aac6_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1be46bed4_checkCppUseDeclPath(_1be46aac6_symbolBuilder*, jule::Ptr<_1be3ae564_UseDecl>&, jule::Str);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1be46c2ae_buildCppHeaderImport(_1be46aac6_symbolBuilder*, jule::Ptr<_1be3ae564_UseDecl>&);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1be46c5bc_buildStdImport(_1be46aac6_symbolBuilder*, jule::Ptr<_1be3ae564_UseDecl>&);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1be46c8ca_buildIdentImport(jule::Ptr<_1be46aac6_symbolBuilder>, jule::Ptr<_1be3ae564_UseDecl>&);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1be46cbd8_buildImport(jule::Ptr<_1be46aac6_symbolBuilder>, jule::Ptr<_1be3ae564_UseDecl>&);
inline jule::Bool _1be46cee6_checkDuplicateUseDecl(_1be46aac6_symbolBuilder*, jule::Ptr<_1c005b3a8_ImportInfo>&);
inline void _1be46d315_implImportSelections(_1be46aac6_symbolBuilder*, jule::Ptr<_1c005b3a8_ImportInfo>&, jule::Ptr<_1be3ae564_UseDecl>&);
inline jule::Str _1be46d623_getAsLinkPath(jule::Ptr<_1be46aac6_symbolBuilder>, jule::Str);
inline void _1be46d9db_pushCycleError(jule::Ptr<_1be46aac6_symbolBuilder>, jule::Ptr<_1be46aac6_symbolBuilder>&, jule::Str, jule::Str&);
inline void _1be46dda4_pushCrossCycleError(jule::Ptr<_1be46aac6_symbolBuilder>, jule::Ptr<_1be46aac6_symbolBuilder>&, jule::Ptr<_1c005b3a8_ImportInfo>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Bool _1be46e25b_checkImportCycles(jule::Ptr<_1be46aac6_symbolBuilder>, jule::Ptr<_1c005b3a8_ImportInfo>, jule::Ptr<_1be3ae564_UseDecl>&);
inline void _1be46e646_checkPackageAccessibility(_1be46aac6_symbolBuilder*, jule::Ptr<_1be3ae564_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1be46ea0e_importPackage(jule::Ptr<_1be46aac6_symbolBuilder>, jule::Ptr<_1c005b3a8_ImportInfo>&, jule::Ptr<_1be3ae564_UseDecl>&);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1be46ed1c_importUseDecl(jule::Ptr<_1be46aac6_symbolBuilder>, jule::Ptr<_1be3ae564_UseDecl>&);
inline void _1be46eee8_importUseDecls(jule::Ptr<_1be46aac6_symbolBuilder>);
inline void _1be47026d_appendNode(_1be46aac6_symbolBuilder*, _1be362e30_Node&);
inline void _1be470449_appendNodes(_1be46aac6_symbolBuilder*);
inline void _1be4706be_pushDirectivePass(_1be46aac6_symbolBuilder*, jule::Ptr<_1be36332b_Directive>&);
inline void _1be47089a_appendTopDirectives(_1be46aac6_symbolBuilder*);
inline void _1be470a76_build(jule::Ptr<_1be46aac6_symbolBuilder>);
struct _1be46aac6_symbolBuilder {
	jule::Ptr<_1be46aac6_symbolBuilder> _field_owner = jule::Ptr<_1be46aac6_symbolBuilder>();
	jule::Trait<_1c0058b25_Importer> _field_importer = jule::Trait<_1c0058b25_Importer>();
	jule::Slice<_1d6435804_Log> _field_errors = jule::Slice<_1d6435804_Log>();
	jule::Ptr<_1be3621a4_Ast> _field_ast = jule::Ptr<_1be3621a4_Ast>();
	jule::Ptr<_1c00c8524_SymbolTable> _field_table = jule::Ptr<_1c00c8524_SymbolTable>();
	

	_1be46aac6_symbolBuilder(void) = default;

	inline bool operator==(_1be46aac6_symbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1be46aac6_symbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1be47199a_Str(_1be47159e_Trait*);
inline jule::Bool _1be471ca8_Equals(jule::Ptr<_1be47159e_Trait>, jule::Ptr<_1c0109324_TypeKind>);
inline jule::Bool _1be47211b_IsBuiltin(_1be47159e_Trait*);
inline jule::Ptr<_1be45e6e1_Fn> _1be472429_FindMethod(_1be47159e_Trait*, jule::Str);
struct _1be47159e_Trait {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1be45e6e1_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1be45e6e1_Fn>>();
	jule::Slice<jule::Ptr<_1be387251_Struct>> _field_Implemented = jule::Slice<jule::Ptr<_1be387251_Struct>>();
	

	_1be47159e_Trait(void) = default;

	inline bool operator==(_1be47159e_Trait _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Implemented == _other._field_Implemented;
	}

	inline bool operator!=(_1be47159e_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be4730d9_AutoExpr(_1be472bee_EnumItem*);
struct _1be472bee_EnumItem {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1c00ce30a_Value> _field_Value = jule::Ptr<_1c00ce30a_Value>();
	

	_1be472bee_EnumItem(void) = default;

	inline bool operator==(_1be472bee_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1be472bee_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1be473a57_Str(_1be4736e4_Enum*);
inline jule::Bool _1be473d65_Equals(jule::Ptr<_1be4736e4_Enum>, jule::Ptr<_1c0109324_TypeKind>);
inline jule::Ptr<_1be472bee_EnumItem> _1be4742a5_FindItem(_1be4736e4_Enum*, jule::Str);
struct _1be4736e4_Enum {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1c010d47c_TypeSymbol> _field_Kind = jule::Ptr<_1c010d47c_TypeSymbol>();
	jule::Slice<jule::Ptr<_1be472bee_EnumItem>> _field_Items = jule::Slice<jule::Ptr<_1be472bee_EnumItem>>();
	

	_1be4736e4_Enum(void) = default;

	inline bool operator==(_1be4736e4_Enum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1be4736e4_Enum _other) { return !this->operator==(_other); }


};
struct _1be474728_TypeEnumItem {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1c010d47c_TypeSymbol> _field_Kind = jule::Ptr<_1c010d47c_TypeSymbol>();
	

	_1be474728_TypeEnumItem(void) = default;

	inline bool operator==(_1be474728_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1be474728_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1be47511e_Str(_1be474cde_TypeEnum*);
inline jule::Bool _1be47542c_Equals(jule::Ptr<_1be474cde_TypeEnum>, jule::Ptr<_1c0109324_TypeKind>);
inline jule::Ptr<_1be474728_TypeEnumItem> _1be475828_FindItem(_1be474cde_TypeEnum*, jule::Str);
struct _1be474cde_TypeEnum {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_Public = jule::Bool();
	jule::Str _field_Ident = jule::Str();
	jule::Slice<jule::Ptr<_1be474728_TypeEnumItem>> _field_Items = jule::Slice<jule::Ptr<_1be474728_TypeEnumItem>>();
	

	_1be474cde_TypeEnum(void) = default;

	inline bool operator==(_1be474cde_TypeEnum _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Items == _other._field_Items;
	}

	inline bool operator!=(_1be474cde_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1c0064504_Sema>&,jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>&)> _1be4a2b63_readyFn(jule::Ptr<_1be48c8d9_constraintChecker>);
inline jule::Bool _1be4b9b9c_readyFi(jule::Ptr<_1be48c8d9_constraintChecker>);
inline jule::Bool _1be4d4546_readySi(jule::Ptr<_1be48c8d9_constraintChecker>);
inline jule::Bool _1be4d638e_ready(jule::Ptr<_1be48c8d9_constraintChecker>);
inline jule::Bool _1be4d757c_check(jule::Ptr<_1be48c8d9_constraintChecker>);
struct _1be48c8d9_constraintChecker {
	jule::Ptr<_1c0064504_Sema> _field_s = jule::Ptr<_1c0064504_Sema>();
	jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>> _field_genericsD = jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>();
	jule::Slice<jule::Ptr<_1c0107ae7_InsGeneric>> _field_generics = jule::Slice<jule::Ptr<_1c0107ae7_InsGeneric>>();
	jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _field_genericsA = jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>();
	jule::Ptr<_1be462392_FnIns> _field_fi = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be3b359b_StructIns> _field_si = jule::Ptr<_1be3b359b_StructIns>();
	jule::Ptr<_1d675d511_Token> _field_et = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_uniq = jule::Bool();
	

	_1be48c8d9_constraintChecker(void) = default;

	inline bool operator==(_1be48c8d9_constraintChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_genericsD == _other._field_genericsD &&
			this->_field_generics == _other._field_generics &&
			this->_field_genericsA == _other._field_genericsA &&
			this->_field_fi == _other._field_fi &&
			this->_field_si == _other._field_si &&
			this->_field_et == _other._field_et &&
			this->_field_uniq == _other._field_uniq;
	}

	inline bool operator!=(_1be48c8d9_constraintChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be4daaad_IsTraitImpl(_1be50ab22_Impl*);
inline jule::Bool _1be4db30b_IsStructImpl(_1be50ab22_Impl*);
struct _1be50ab22_Impl {
	jule::Ptr<_1be396a24_TypeDecl> _field_Base = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Ptr<_1be396a24_TypeDecl> _field_Dest = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Slice<jule::Ptr<_1be45e6e1_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1be45e6e1_Fn>>();
	jule::Slice<jule::Ptr<_1c0081334_Var>> _field_Statics = jule::Slice<jule::Ptr<_1c0081334_Var>>();
	

	_1be50ab22_Impl(void) = default;

	inline bool operator==(_1be50ab22_Impl _other) {
		return 
			this->_field_Base == _other._field_Base &&
			this->_field_Dest == _other._field_Dest &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Statics == _other._field_Statics;
	}

	inline bool operator!=(_1be50ab22_Impl _other) { return !this->operator==(_other); }


};
struct _1c00487b3_Scope {
	jule::Ptr<_1c00487b3_Scope> _field_Parent = jule::Ptr<_1c00487b3_Scope>();
	jule::Bool _field_Unsafety = jule::Bool();
	jule::Bool _field_Deferred = jule::Bool();
	jule::Slice<jule::Any> _field_Stmts = jule::Slice<jule::Any>();
	

	_1c00487b3_Scope(void) = default;

	inline bool operator==(_1c00487b3_Scope _other) {
		return 
			this->_field_Parent == _other._field_Parent &&
			this->_field_Unsafety == _other._field_Unsafety &&
			this->_field_Deferred == _other._field_Deferred &&
			this->_field_Stmts == _other._field_Stmts;
	}

	inline bool operator!=(_1c00487b3_Scope _other) { return !this->operator==(_other); }


};
struct _1c00489a0_If {
	jule::Any _field_Expr = jule::Any();
	jule::Ptr<_1c00487b3_Scope> _field_Scope = jule::Ptr<_1c00487b3_Scope>();
	

	_1c00489a0_If(void) = default;

	inline bool operator==(_1c00489a0_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c00489a0_If _other) { return !this->operator==(_other); }


};
struct _1c0048b8c_Else {
	jule::Ptr<_1c00487b3_Scope> _field_Scope = jule::Ptr<_1c00487b3_Scope>();
	

	_1c0048b8c_Else(void) = default;

	inline bool operator==(_1c0048b8c_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0048b8c_Else _other) { return !this->operator==(_other); }


};
struct _1c0048d79_Conditional {
	jule::Slice<jule::Ptr<_1c00489a0_If>> _field_Elifs = jule::Slice<jule::Ptr<_1c00489a0_If>>();
	jule::Ptr<_1c0048b8c_Else> _field_Default = jule::Ptr<_1c0048b8c_Else>();
	

	_1c0048d79_Conditional(void) = default;

	inline bool operator==(_1c0048d79_Conditional _other) {
		return 
			this->_field_Elifs == _other._field_Elifs &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c0048d79_Conditional _other) { return !this->operator==(_other); }


};
struct _1c0049066_InfIter {
	jule::Ptr<_1c00487b3_Scope> _field_Scope = jule::Ptr<_1c00487b3_Scope>();
	

	_1c0049066_InfIter(void) = default;

	inline bool operator==(_1c0049066_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0049066_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1be50ad0e_IsWhileNext(_1c0049253_WhileIter*);
struct _1c0049253_WhileIter {
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Next = jule::Any();
	jule::Ptr<_1c00487b3_Scope> _field_Scope = jule::Ptr<_1c00487b3_Scope>();
	

	_1c0049253_WhileIter(void) = default;

	inline bool operator==(_1c0049253_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1c0049253_WhileIter _other) { return !this->operator==(_other); }


};
struct _1c0049440_RangeIter {
	jule::Ptr<_1c00cd282_Data> _field_Expr = jule::Ptr<_1c00cd282_Data>();
	jule::Ptr<_1c00487b3_Scope> _field_Scope = jule::Ptr<_1c00487b3_Scope>();
	jule::Ptr<_1c0081334_Var> _field_KeyA = jule::Ptr<_1c0081334_Var>();
	jule::Ptr<_1c0081334_Var> _field_KeyB = jule::Ptr<_1c0081334_Var>();
	

	_1c0049440_RangeIter(void) = default;

	inline bool operator==(_1c0049440_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1c0049440_RangeIter _other) { return !this->operator==(_other); }


};
struct _1c004962c_ContSt {
	jule::Uintptr _field_It = jule::Uintptr();
	

	_1c004962c_ContSt(void) = default;

	inline bool operator==(_1c004962c_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1c004962c_ContSt _other) { return !this->operator==(_other); }


};
struct _1c0049819_BreakSt {
	jule::Uintptr _field_It = jule::Uintptr();
	jule::Uintptr _field_Mtch = jule::Uintptr();
	

	_1c0049819_BreakSt(void) = default;

	inline bool operator==(_1c0049819_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1c0049819_BreakSt _other) { return !this->operator==(_other); }


};
struct _1c0049a06_Label {
	jule::Str _field_Ident = jule::Str();
	

	_1c0049a06_Label(void) = default;

	inline bool operator==(_1c0049a06_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0049a06_Label _other) { return !this->operator==(_other); }


};
struct _1c0049be3_GotoSt {
	jule::Str _field_Ident = jule::Str();
	

	_1c0049be3_GotoSt(void) = default;

	inline bool operator==(_1c0049be3_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1c0049be3_GotoSt _other) { return !this->operator==(_other); }


};
struct _1c0049dd0_Postfix {
	jule::Any _field_Expr = jule::Any();
	jule::Str _field_Op = jule::Str();
	

	_1c0049dd0_Postfix(void) = default;

	inline bool operator==(_1c0049dd0_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c0049dd0_Postfix _other) { return !this->operator==(_other); }


};
struct _1c004a0bc_Assign {
	jule::Ptr<_1be457277_OperandExprModel> _field_L = jule::Ptr<_1be457277_OperandExprModel>();
	jule::Ptr<_1be457277_OperandExprModel> _field_R = jule::Ptr<_1be457277_OperandExprModel>();
	jule::Ptr<_1d675d511_Token> _field_Op = jule::Ptr<_1d675d511_Token>();
	

	_1c004a0bc_Assign(void) = default;

	inline bool operator==(_1c004a0bc_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1c004a0bc_Assign _other) { return !this->operator==(_other); }


};
struct _1c004a2a9_MultiAssign {
	jule::Slice<jule::Any> _field_L = jule::Slice<jule::Any>();
	jule::Any _field_R = jule::Any();
	

	_1c004a2a9_MultiAssign(void) = default;

	inline bool operator==(_1c004a2a9_MultiAssign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R;
	}

	inline bool operator!=(_1c004a2a9_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c004a8b4_IsGenericTypeMatch(_1c004a496_Match*);
struct _1c004a496_Match {
	jule::Ptr<_1c00cd282_Data> _field_Expr = jule::Ptr<_1c00cd282_Data>();
	jule::Bool _field_TypeMatch = jule::Bool();
	jule::Slice<jule::Ptr<_1c004a9e6_Case>> _field_Cases = jule::Slice<jule::Ptr<_1c004a9e6_Case>>();
	jule::Ptr<_1c004a9e6_Case> _field_Default = jule::Ptr<_1c004a9e6_Case>();
	

	_1c004a496_Match(void) = default;

	inline bool operator==(_1c004a496_Match _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_TypeMatch == _other._field_TypeMatch &&
			this->_field_Cases == _other._field_Cases &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1c004a496_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c004abd3_isDefault(_1c004a9e6_Case*);
struct _1c004a9e6_Case {
	jule::Ptr<_1c004a496_Match> _field_Owner = jule::Ptr<_1c004a496_Match>();
	jule::Ptr<_1c00487b3_Scope> _field_Scope = jule::Ptr<_1c00487b3_Scope>();
	jule::Slice<jule::Ptr<_1c00cd282_Data>> _field_Exprs = jule::Slice<jule::Ptr<_1c00cd282_Data>>();
	jule::Ptr<_1c004a9e6_Case> _field_Next = jule::Ptr<_1c004a9e6_Case>();
	

	_1c004a9e6_Case(void) = default;

	inline bool operator==(_1c004a9e6_Case _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_Exprs == _other._field_Exprs &&
			this->_field_Next == _other._field_Next;
	}

	inline bool operator!=(_1c004a9e6_Case _other) { return !this->operator==(_other); }


};
struct _1c004ad15_FallSt {
	jule::Uintptr _field_DestCase = jule::Uintptr();
	

	_1c004ad15_FallSt(void) = default;

	inline bool operator==(_1c004ad15_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1c004ad15_FallSt _other) { return !this->operator==(_other); }


};
struct _1c004b002_RetSt {
	jule::Ptr<_1be462392_FnIns> _field_Func = jule::Ptr<_1be462392_FnIns>();
	jule::Slice<jule::Ptr<_1c0081334_Var>> _field_Vars = jule::Slice<jule::Ptr<_1c0081334_Var>>();
	jule::Any _field_Expr = jule::Any();
	

	_1c004b002_RetSt(void) = default;

	inline bool operator==(_1c004b002_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c004b002_RetSt _other) { return !this->operator==(_other); }


};
struct _1c004b1de_scopeLabel {
	jule::Ptr<_1d675d511_Token> _field_token = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1c0049a06_Label> _field_label = jule::Ptr<_1c0049a06_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1c004b5b8_scopeChecker> _field_scope = jule::Ptr<_1c004b5b8_scopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1c004b1de_scopeLabel(void) = default;

	inline bool operator==(_1c004b1de_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1c004b1de_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1c004b3cb_scopeGoto {
	jule::Ptr<_1be3a4867_GotoSt> _field_gt = jule::Ptr<_1be3a4867_GotoSt>();
	jule::Ptr<_1c004b5b8_scopeChecker> _field_scope = jule::Ptr<_1c004b5b8_scopeChecker>();
	jule::I64 _field_pos = jule::I64();
	

	_1c004b3cb_scopeGoto(void) = default;

	inline bool operator==(_1c004b3cb_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c004b3cb_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c004b7a5_FindPackage(_1c004b5b8_scopeChecker*, jule::Str);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c004b8d7_SelectPackage(_1c004b5b8_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)>);
inline jule::Ptr<_1c0081334_Var> _1c004ba19_FindVar(_1c004b5b8_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0108631_TypeAlias> _1c004bb4b_FindTypeAlias(_1c004b5b8_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1be387251_Struct> _1c004bc7d_FindStruct(_1c004b5b8_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1be45e6e1_Fn> _1c004bdb0_FindFn(_1c004b5b8_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1be47159e_Trait> _1c004bee2_FindTrait(_1c004b5b8_scopeChecker*, jule::Str);
inline jule::Ptr<_1be4736e4_Enum> _1c004c124_FindEnum(_1c004b5b8_scopeChecker*, jule::Str);
inline jule::Ptr<_1be474cde_TypeEnum> _1c004c256_FindTypeEnum(_1c004b5b8_scopeChecker*, jule::Str);
inline jule::Bool _1c004c388_isUnsafe(jule::Ptr<_1c004b5b8_scopeChecker>);
inline jule::Bool _1c004c4ba_isRoot(_1c004b5b8_scopeChecker*);
inline void _1c004c5ec_stop(_1c004b5b8_scopeChecker*);
inline jule::Bool _1c004c72e_stopped(_1c004b5b8_scopeChecker*);
inline jule::Bool _1c004c861_isDeferred(jule::Ptr<_1c004b5b8_scopeChecker>);
inline jule::Ptr<_1c004b5b8_scopeChecker> _1c004c993_getRoot(jule::Ptr<_1c004b5b8_scopeChecker>);
inline jule::Ptr<_1c004b5b8_scopeChecker> _1c004cac5_getHardRoot(jule::Ptr<_1c004b5b8_scopeChecker>);
inline jule::Ptr<_1c0049a06_Label> _1c004cc07_findLabel(_1c004b5b8_scopeChecker*, jule::Str);
inline jule::Ptr<_1c004b1de_scopeLabel> _1c004cd39_findLabelScope(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Str);
inline jule::Ptr<_1c004b1de_scopeLabel> _1c004ce6b_findLabelAll(_1c004b5b8_scopeChecker*, jule::Str);
inline jule::Bool _1c004d09d_isDuplicatedIdent(_1c004b5b8_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1c004d1d0_checkVarDecl(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a9817_VarDecl>);
inline void _1c004d312_checkTypeAliasDecl(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3ad178_TypeAliasDecl>);
inline jule::Ptr<_1c00487b3_Scope> _1c004d444_getChild(_1c004b5b8_scopeChecker*);
inline void _1c004d576_checkChildSsc(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a6d42_ScopeTree>&, jule::Ptr<_1c00487b3_Scope>&, jule::Ptr<_1c004b5b8_scopeChecker>&);
inline jule::Ptr<_1c00487b3_Scope> _1c004d6a8_checkChildSc(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a6d42_ScopeTree>&, jule::Ptr<_1c004b5b8_scopeChecker>&);
inline jule::Ptr<_1c00487b3_Scope> _1c004d7da_checkChild(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a6d42_ScopeTree>&);
inline void _1c004d91c_checkAnonScope(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a6d42_ScopeTree>);
inline void _1c004da4e_processErrorCall(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>&, jule::Ptr<_1d675d511_Token>);
inline void _1c004db81_checkExpr(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be39b045_Expr>);
inline void _1c004dcb3_checkCoExpr(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be39cb3a_CoExpr>);
inline jule::Ptr<_1c00489a0_If> _1c004dde5_checkIf(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3ac177_If>);
inline jule::Ptr<_1c0048b8c_Else> _1c004e027_checkElse(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3ac52e_Else>);
inline void _1c004e159_checkConditional(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3ac9a2_Conditional>);
inline void _1c004e28b_checkIterScopeSsc(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Uintptr, jule::Ptr<_1be3a6d42_ScopeTree>, jule::Ptr<_1c00487b3_Scope>&, jule::Ptr<_1c004b5b8_scopeChecker>);
inline jule::Ptr<_1c00487b3_Scope> _1c004e3bd_checkIterScopeSc(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Uintptr, jule::Ptr<_1be3a6d42_ScopeTree>, jule::Ptr<_1c004b5b8_scopeChecker>);
inline jule::Ptr<_1c00487b3_Scope> _1c004e500_checkIterScope(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Uintptr, jule::Ptr<_1be3a6d42_ScopeTree>&);
inline void _1c004e632_checkInfIter(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3aa32e_Iter>&);
inline void _1c004e764_checkWhileIter(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3aa32e_Iter>&);
inline void _1c004e896_checkRangeIter(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3aa32e_Iter>&);
inline void _1c004e9c8_checkIter(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3aa32e_Iter>);
inline jule::Bool _1c004eb0a_checkValidContLabel(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Uintptr);
inline jule::Bool _1c004ec3c_checkValidBreakLabel(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1c004962c_ContSt> _1c004ed6e_checkContValidScope(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3abc04_ContSt>);
inline void _1c004eea1_checkCont(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3abc04_ContSt>);
inline void _1c00500d3_checkLabel(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a44b0_LabelSt>);
inline void _1c0050215_pushGoto(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a4867_GotoSt>);
inline void _1c0050347_checkPostfix(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a579c_AssignSt>);
inline jule::Bool _1c0050479_isNewAssignIdent(_1c004b5b8_scopeChecker*, jule::Str);
inline jule::Bool _1c00505ab_checkStructureAssignOp(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3b359b_StructIns>&, jule::Ptr<_1be3a579c_AssignSt>&, jule::Ptr<_1c00cd282_Data>&);
inline void _1c00506dd_checkSingleAssign(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a579c_AssignSt>&);
inline void _1c0050820_processEndPartOfMultiAssign(_1c004b5b8_scopeChecker*, jule::Ptr<_1c004a2a9_MultiAssign>, jule::Ptr<_1be3a579c_AssignSt>, jule::Ptr<_1be3a525d_AssignLeft>, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1c00cd282_Data>);
inline void _1c0050952_checkRetMultiAssign(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a579c_AssignSt>&);
inline void _1c0050a84_checkMultiAssign(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a579c_AssignSt>&);
inline void _1c0050bb6_checkAssignSt(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a579c_AssignSt>);
inline jule::Ptr<_1c00487b3_Scope> _1c0050ce8_checkCaseScope(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1c004a9e6_Case>&, jule::Ptr<_1be3a6d42_ScopeTree>&);
inline jule::Ptr<_1c004a9e6_Case> _1c0050e2a_checkCase(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1c004a496_Match>, jule::I64, jule::Ptr<_1be3ad5eb_Case>, jule::Ptr<_1c00cd282_Data>);
inline void _1c005114a_checkCases(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3adcc2_MatchCase>&, jule::Ptr<_1c004a496_Match>, jule::Ptr<_1c00cd282_Data>);
inline jule::Ptr<_1c004a9e6_Case> _1c0051502_checkDefault(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1c004a496_Match>, jule::Ptr<_1be3ac52e_Else>);
inline void _1c0051777_checkComptimePanic(_1c004b5b8_scopeChecker*, jule::Ptr<_1c00487b3_Scope>&);
inline void _1c0051a96_pushTypeMatch(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1c004a496_Match>, jule::Ptr<_1be3adcc2_MatchCase>&);
inline void _1c0051d1b_checkTypeMatch(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3adcc2_MatchCase>&);
inline void _1c0052091_checkCommonMatch(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3adcc2_MatchCase>&);
inline void _1c0052316_checkMatch(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3adcc2_MatchCase>);
inline void _1c005258b_checkFall(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a4b53_FallSt>);
inline jule::Ptr<_1c0049819_BreakSt> _1c0052899_checkBreakWithLabel(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3ab84c_BreakSt>);
inline jule::Ptr<_1c0049819_BreakSt> _1c0052ba7_checkPlainBreak(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3ab84c_BreakSt>);
inline void _1c0052e2c_checkBreak(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3ab84c_BreakSt>);
inline void _1c00531a2_checkRet(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a9bbe_RetSt>);
inline void _1c0053427_checkUseExpr(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be39b8d6_UseExpr>);
inline void _1c005369c_checkNode(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Any&);
inline void _1c0053878_checkResult(jule::Ptr<_1c004b5b8_scopeChecker>);
inline void _1c0053a54_checkTree(jule::Ptr<_1c004b5b8_scopeChecker>);
inline void _1c0053d73_checkGoto(_1c004b5b8_scopeChecker*, jule::Ptr<_1c004b3cb_scopeGoto>&, jule::Ptr<_1c004b1de_scopeLabel>&);
inline void _1c005404e_checkGotos(_1c004b5b8_scopeChecker*);
inline void _1c005422a_checkLabels(_1c004b5b8_scopeChecker*);
inline void _1c0054406_checkVars(_1c004b5b8_scopeChecker*);
inline void _1c00545d2_checkAliases(_1c004b5b8_scopeChecker*);
inline void _1c0054901_check(jule::Ptr<_1c004b5b8_scopeChecker>, jule::Ptr<_1be3a6d42_ScopeTree>&, jule::Ptr<_1c00487b3_Scope>&);
inline jule::Ptr<_1c004b5b8_scopeChecker> _1c0054b65_newChildChecker(jule::Ptr<_1c004b5b8_scopeChecker>);
struct _1c004b5b8_scopeChecker {
	jule::Ptr<_1d675d511_Token> _field_calledFrom = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1c0064504_Sema> _field_s = jule::Ptr<_1c0064504_Sema>();
	jule::Ptr<_1be462392_FnIns> _field_owner = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1c004b5b8_scopeChecker> _field_parent = jule::Ptr<_1c004b5b8_scopeChecker>();
	jule::I64 _field_childIndex = jule::I64();
	jule::Ptr<_1c00c8524_SymbolTable> _field_table = jule::Ptr<_1c00c8524_SymbolTable>();
	jule::Ptr<_1c00487b3_Scope> _field_scope = jule::Ptr<_1c00487b3_Scope>();
	jule::Ptr<_1be3a6d42_ScopeTree> _field_tree = jule::Ptr<_1be3a6d42_ScopeTree>();
	jule::Ptr<_1be462392_FnIns> _field_result = jule::Ptr<_1be462392_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1c004b1de_scopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1c004b1de_scopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1c004b3cb_scopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1c004b3cb_scopeGoto>>>();
	jule::I64 _field_i = jule::I64();
	

	_1c004b5b8_scopeChecker(void) = default;

	inline bool operator==(_1c004b5b8_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c004b5b8_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1c0055b55_checkCdef(_1c0055715_directiveChecker*, jule::Ptr<_1be36332b_Directive>&);
inline void _1c0055dca_checkTypedef(_1c0055715_directiveChecker*, jule::Ptr<_1be36332b_Directive>&);
inline void _1c0056150_checkDerive(_1c0055715_directiveChecker*, jule::Ptr<_1be36332b_Directive>&);
inline void _1c00563c5_checkNamespace(_1c0055715_directiveChecker*, jule::Ptr<_1be36332b_Directive>&);
inline void _1c005664a_checkDeprecated(_1c0055715_directiveChecker*, jule::Ptr<_1be36332b_Directive>&);
inline void _1c00568c0_checkTest(_1c0055715_directiveChecker*, jule::Ptr<_1be36332b_Directive>&);
inline void _1c0056b45_checkDirective(_1c0055715_directiveChecker*, jule::Ptr<_1be36332b_Directive>&);
inline void _1c0056d21_check(_1c0055715_directiveChecker*);
struct _1c0055715_directiveChecker {
	jule::Ptr<_1c0064504_Sema> _field_s = jule::Ptr<_1c0064504_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1be36332b_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1be36332b_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1c0055715_directiveChecker(void) = default;

	inline bool operator==(_1c0055715_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1c0055715_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c005b8c5_FindPackage(_1c005b3a8_ImportInfo*, jule::Str);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c005bbd3_SelectPackage(_1c005b3a8_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)>);
inline jule::Ptr<_1c0081334_Var> _1c005c08a_FindVar(_1c005b3a8_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0108631_TypeAlias> _1c005c442_FindTypeAlias(_1c005b3a8_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1be387251_Struct> _1c005c7e9_FindStruct(_1c005b3a8_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1be45e6e1_Fn> _1c005cba1_FindFn(_1c005b3a8_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1be47159e_Trait> _1c005ceae_FindTrait(_1c005b3a8_ImportInfo*, jule::Str);
inline jule::Ptr<_1be4736e4_Enum> _1c005d2bc_FindEnum(_1c005b3a8_ImportInfo*, jule::Str);
inline jule::Ptr<_1be474cde_TypeEnum> _1c005d5ca_FindTypeEnum(_1c005b3a8_ImportInfo*, jule::Str);
inline jule::Bool _1c005d971_isLookupable(_1c005b3a8_ImportInfo*, jule::Str);
inline jule::Bool _1c005dc7e_existIdent(_1c005b3a8_ImportInfo*, jule::Str);
inline jule::Bool _1c005e015_isAccessibleViaSelection(_1c005b3a8_ImportInfo*);
struct _1c005b3a8_ImportInfo {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Path = jule::Str();
	jule::Str _field_LinkPath = jule::Str();
	jule::Str _field_Ident = jule::Str();
	jule::Str _field_Alias = jule::Str();
	jule::Bool _field_Duplicate = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Std = jule::Bool();
	jule::Bool _field_ImportAll = jule::Bool();
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_Selected = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	jule::Ptr<_1c005e312_Package> _field_Package = jule::Ptr<_1c005e312_Package>();
	jule::I64 _field_ModId = jule::I64();
	

	_1c005b3a8_ImportInfo(void) = default;

	inline bool operator==(_1c005b3a8_ImportInfo _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Path == _other._field_Path &&
			this->_field_LinkPath == _other._field_LinkPath &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Alias == _other._field_Alias &&
			this->_field_Duplicate == _other._field_Duplicate &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Std == _other._field_Std &&
			this->_field_ImportAll == _other._field_ImportAll &&
			this->_field_Selected == _other._field_Selected &&
			this->_field_Package == _other._field_Package &&
			this->_field_ModId == _other._field_ModId;
	}

	inline bool operator!=(_1c005b3a8_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c005e7da_FindPackage(_1c005e312_Package*, jule::Str);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c005eae8_SelectPackage(_1c005e312_Package*, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)>);
inline jule::Ptr<_1c0081334_Var> _1c005eea0_FindVar(_1c005e312_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0108631_TypeAlias> _1c0060357_FindTypeAlias(_1c005e312_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1be387251_Struct> _1c006070e_FindStruct(_1c005e312_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1be45e6e1_Fn> _1c0060ab6_FindFn(_1c005e312_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1be47159e_Trait> _1c0060dc4_FindTrait(_1c005e312_Package*, jule::Str);
inline jule::Ptr<_1be4736e4_Enum> _1c00611d2_FindEnum(_1c005e312_Package*, jule::Str);
inline jule::Ptr<_1be474cde_TypeEnum> _1c00614e0_FindTypeEnum(_1c005e312_Package*, jule::Str);
struct _1c005e312_Package {
	jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>> _field_Files = jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>();
	

	_1c005e312_Package(void) = default;

	inline bool operator==(_1c005e312_Package _other) {
		return 
			this->_field_Files == _other._field_Files;
	}

	inline bool operator!=(_1c005e312_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c0064a21_FindPackage(_1c0064504_Sema*, jule::Str);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c0064d2e_SelectPackage(_1c0064504_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)>);
inline jule::Ptr<_1c0081334_Var> _1c00651d6_FindVar(_1c0064504_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0108631_TypeAlias> _1c006558d_FindTypeAlias(_1c0064504_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1be387251_Struct> _1c0065945_FindStruct(_1c0064504_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1be45e6e1_Fn> _1c0065cec_FindFn(_1c0064504_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1be47159e_Trait> _1c006610a_FindTrait(_1c0064504_Sema*, jule::Str);
inline jule::Ptr<_1be4736e4_Enum> _1c0066418_FindEnum(_1c0064504_Sema*, jule::Str);
inline jule::Ptr<_1be474cde_TypeEnum> _1c0066726_FindTypeEnum(_1c0064504_Sema*, jule::Str);
inline jule::Bool _1c0066a78_isFlag(_1c0064504_Sema*, jule::I64);
inline void _1c0066ced_setCurrentFile(_1c0064504_Sema*, jule::Ptr<_1c00c8524_SymbolTable>);
inline void _1c00671b6_pushErr(_1c0064504_Sema*, jule::Ptr<_1d675d511_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c00674d5_pushSugggestion(_1c0064504_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c006788c_isAccessibleDefine(_1c0064504_Sema*, jule::Bool, jule::Ptr<_1d675d511_Token>);
inline jule::Bool _1c0067cdd_isDuplicatedIdent(_1c0064504_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1c006810c_checkDirectives(jule::Ptr<_1c0064504_Sema>, jule::Slice<jule::Ptr<_1be36332b_Directive>>&, jule::Any);
inline jule::Bool _1c006855d_checkGenericQuantity(_1c0064504_Sema*, jule::I64, jule::I64, jule::Ptr<_1d675d511_Token>);
inline jule::Bool _1c0068937_isDuplicatedImportSelection(_1c0064504_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1c0068d00_getImportDef(_1c0064504_Sema*, jule::Str, jule::Ptr<_1c005b3a8_ImportInfo>&);
inline jule::Bool _1c006910d_checkImportSelections(_1c0064504_Sema*, jule::Ptr<_1c005b3a8_ImportInfo>&);
inline jule::Bool _1c006941b_isUseAliasDuplication(_1c0064504_Sema*, jule::Ptr<_1c005b3a8_ImportInfo>&);
inline jule::Bool _1c0069729_checkImport(_1c0064504_Sema*, jule::Ptr<_1c005b3a8_ImportInfo>&);
inline void _1c0069905_checkImports(_1c0064504_Sema*);
inline void _1c0069ad1_implFileImpls(jule::Ptr<_1c0064504_Sema>);
inline void _1c0069cac_implImpls(jule::Ptr<_1c0064504_Sema>);
inline void _1c0069e88_checkEnums(jule::Ptr<_1c0064504_Sema>);
inline _1c011784e_typeChecker _1c006a3d9_typeChecker(jule::Ptr<_1c0064504_Sema>, jule::Trait<_1c0124e55_Lookup>, jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>, jule::Ptr<_1c0116a3a_referencer>);
inline jule::Ptr<_1c0109324_TypeKind> _1c006a8d4_buildTypeWithRefers(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be396a24_TypeDecl>&, jule::Trait<_1c0124e55_Lookup>, jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>, jule::Ptr<_1c0116a3a_referencer>);
inline jule::Bool _1c006adce_checkTypeWithRefers(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1c010d47c_TypeSymbol>&, jule::Trait<_1c0124e55_Lookup>, jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>, jule::Ptr<_1c0116a3a_referencer>);
inline jule::Ptr<_1be48c8d9_constraintChecker> _1c006b143_constraintChecker(jule::Ptr<_1c0064504_Sema>);
inline jule::Bool _1c006b4ea_checkType(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1c010d47c_TypeSymbol>&, jule::Trait<_1c0124e55_Lookup>);
inline jule::Ptr<_1c0109324_TypeKind> _1c006b94b_buildTypeWithGenerics(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be396a24_TypeDecl>&, jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>, jule::Ptr<_1be465263_ReferenceStack>);
inline jule::Ptr<_1c0109324_TypeKind> _1c006bc59_buildType(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be396a24_TypeDecl>&);
inline jule::Ptr<_1c0109324_TypeKind> _1c006c067_selectType(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be396a24_TypeDecl>&);
inline jule::Ptr<_1c00ced00_Eval> _1c006c4b8_evalpd(jule::Ptr<_1c0064504_Sema>, jule::Trait<_1c0124e55_Lookup>, jule::Ptr<_1c0109324_TypeKind>, jule::Ptr<_1c0081334_Var>);
inline jule::Ptr<_1c00ced00_Eval> _1c006c870_evalp(jule::Ptr<_1c0064504_Sema>, jule::Trait<_1c0124e55_Lookup>, jule::Ptr<_1c0109324_TypeKind>);
inline jule::Ptr<_1c00ced00_Eval> _1c006cb7d_eval(jule::Ptr<_1c0064504_Sema>, jule::Trait<_1c0124e55_Lookup>);
inline jule::Bool _1c006d178_checkAssignType(jule::Ptr<_1c0064504_Sema>, jule::Bool, jule::Ptr<_1c0109324_TypeKind>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1d675d511_Token>);
inline jule::Bool _1c006d5c9_checkTypeCompatibility(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1c0109324_TypeKind>&, jule::Ptr<_1c0109324_TypeKind>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Ptr<_1c0109324_TypeKind> _1c006d9a3_buildNonGenericTypeKind(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be396a24_TypeDecl>&, jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>&);
inline void _1c006dc5b_buildFnNonGenericTypeKinds(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be462392_FnIns>&);
inline jule::Ptr<_1be462392_FnIns> _1c006e07a_getTraitCheckFnKind(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be45e6e1_Fn>&);
inline jule::Bool _1c006e4cb_checkConstraintsFn(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be462392_FnIns>&, jule::Ptr<_1d675d511_Token>&, jule::Ptr<_1be462392_FnIns>);
inline jule::Bool _1c006e92c_checkConstraintsStruct(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be3b359b_StructIns>&, jule::Ptr<_1d675d511_Token>&, jule::Ptr<_1be3b359b_StructIns>);
inline jule::Bool _1c006ecd4_fnEnvironment(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be462392_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1c0064504_Sema>&,jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>&)>);
inline void _1c0070059_checkFnParamKind(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be4614c3_ParamIns>&);
inline jule::Bool _1c0070367_reloadFnInsTypes(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be462392_FnIns>);
inline jule::Bool _1c00707da_checkRefValidityForInitExpr(jule::Ptr<_1c0064504_Sema>, jule::Bool, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Bool _1c0070db2_checkValidityForInitExpr(jule::Ptr<_1c0064504_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1c0109324_TypeKind>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Bool _1c007127a_checkTypeAliasDeclKind(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1c0108631_TypeAlias>&, jule::Trait<_1c0124e55_Lookup>);
inline void _1c0071599_checkTypeAliasDecl(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1c0108631_TypeAlias>&, jule::Trait<_1c0124e55_Lookup>);
inline void _1c007181e_checkTypeAliasDeclDup(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1c0108631_TypeAlias>&);
inline jule::Bool _1c0071a83_checkTypeAliasDecls(jule::Ptr<_1c0064504_Sema>);
inline void _1c21ec7ab_checkEnumItemsDup(_1c0064504_Sema*, jule::Slice<jule::Ptr<_1be472bee_EnumItem>>);
inline void _1c2208289_checkEnumItemsDup(_1c0064504_Sema*, jule::Slice<jule::Ptr<_1be474728_TypeEnumItem>>);
inline void _1c007207d_checkEnumItemsStr(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be4736e4_Enum>&);
inline void _1c0072303_checkEnumItemsInt(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be4736e4_Enum>&);
inline void _1c0072578_checkEnumDecl(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be4736e4_Enum>&);
inline void _1c00727ed_checkTypeEnumDecl(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be474cde_TypeEnum>&);
inline jule::Bool _1c0072a62_checkEnumDecls(jule::Ptr<_1c0064504_Sema>);
inline jule::Bool _1c0072cc6_checkTypeEnumDecls(jule::Ptr<_1c0064504_Sema>);
inline jule::Bool _1c00730d4_checkDeclGenerics(_1c0064504_Sema*, jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>&);
inline jule::Bool _1c00733e2_checkFnDeclParamsDup(_1c0064504_Sema*, jule::Ptr<_1be45e6e1_Fn>&);
inline jule::Bool _1c0073700_checkFnDeclResultDup(_1c0064504_Sema*, jule::Ptr<_1be45e6e1_Fn>&);
inline void _1c0073975_checkFnDeclPrototype(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be45e6e1_Fn>&);
inline void _1c0073bea_checkTraitDeclMethod(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be45e6e1_Fn>&);
inline void _1c0073e70_checkTraitDeclMethods(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be47159e_Trait>&);
inline void _1c00741e5_checkTraitDecl(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be47159e_Trait>&);
inline jule::Bool _1c0074459_checkTraitDecls(jule::Ptr<_1c0064504_Sema>);
inline jule::Bool _1c0074811_checkTraitImplMethods(_1c0064504_Sema*, jule::Ptr<_1be47159e_Trait>&, jule::Ptr<_1be50ab22_Impl>&);
inline jule::Bool _1c0074bb8_implToStruct(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be387251_Struct>&, jule::Ptr<_1be50ab22_Impl>&);
inline void _1c0074e3d_implTrait(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be50ab22_Impl>&);
inline void _1c00751b3_implStruct(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be50ab22_Impl>&);
inline void _1c0075438_implImpl(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be50ab22_Impl>&);
inline void _1c0075757_checkVarDecl(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1c0081334_Var>&, jule::Trait<_1c0124e55_Lookup>);
inline void _1c00759cc_checkGlobalVarDecl(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1c0081334_Var>&);
inline jule::Bool _1c0075c41_checkGlobalDecls(jule::Ptr<_1c0064504_Sema>);
inline jule::Bool _1c00760e8_checkStructTraitImpl(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be387251_Struct>&, jule::Ptr<_1be47159e_Trait>&);
inline jule::Bool _1c0076406_checkStructImpls(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be387251_Struct>&);
inline jule::Bool _1c0076714_checkStructFields(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be387251_Struct>&);
inline void _1c0076989_checkStructDecl(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be387251_Struct>&);
inline jule::Bool _1c0076bed_checkStructDecls(jule::Ptr<_1c0064504_Sema>);
inline void _1c0076e73_checkFnDecl(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be45e6e1_Fn>&);
inline jule::Bool _1c00771d7_checkFnDecls(jule::Ptr<_1c0064504_Sema>);
inline void _1c00775a0_pushCycleError(_1c0064504_Sema*, jule::Ptr<_1be387251_Struct>&, jule::Ptr<_1be387251_Struct>&, jule::Str&);
inline jule::Bool _1c0077a01_checkCrossCycle(_1c0064504_Sema*, jule::Ptr<_1be387251_Struct>&, jule::Ptr<_1be387251_Struct>&, jule::Str&);
inline jule::Bool _1c0077e74_checkStructDeriveIllegalCycles(_1c0064504_Sema*, jule::Str, jule::Ptr<_1be387251_Struct>&, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00782b5_checkStructInsDeriveClone(_1c0064504_Sema*, jule::Ptr<_1be3b359b_StructIns>);
inline void _1c00784a2_checkPackageDecls(jule::Ptr<_1c0064504_Sema>);
inline void _1c00787e3_checkDataForTypeInference(_1c0064504_Sema*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1d675d511_Token>&);
inline void _1c0078a79_checkVar(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1c0081334_Var>&);
inline void _1c0078d98_checkTypeVar(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1c0081334_Var>&, jule::Trait<_1c0124e55_Lookup>);
inline void _1c0079074_checkGlobalTypes(jule::Ptr<_1c0064504_Sema>);
inline jule::Ptr<_1be462392_FnIns> _1c007942b_readyToCheckFn(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be3b359b_StructIns>&, jule::Ptr<_1be45e6e1_Fn>&);
inline void _1c007974a_checkTypeMethod(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be3b359b_StructIns>&, jule::Ptr<_1be45e6e1_Fn>&);
inline jule::Ptr<_1be462392_FnIns> _1c0079b9b_checkStructInsOp(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be3b359b_StructIns>&, jule::Ptr<_1be45e6e1_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>);
inline jule::Bool _1c007a053_checkStructEnv(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be3b359b_StructIns>&, jule::Ptr<_1d675d511_Token>);
inline jule::Bool _1c007a40a_precheckStructIns(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be3b359b_StructIns>&, jule::Ptr<_1d675d511_Token>);
inline void _1c007a680_checkStructIns(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c007a905_checkTypeStruct(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be387251_Struct>&);
inline void _1c007aad1_checkStructTypes(jule::Ptr<_1c0064504_Sema>);
inline void _1c007ad78_checkStructInsOperators(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be3b359b_StructIns>);
inline void _1c007b10e_precheckStructType(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be387251_Struct>&);
inline void _1c007b2da_precheckStructTypes(jule::Ptr<_1c0064504_Sema>);
inline void _1c007b560_checkRets(_1c0064504_Sema*, jule::Ptr<_1be462392_FnIns>&);
inline void _1c007b87e_checkFnInsSc(_1c0064504_Sema*, jule::Ptr<_1be462392_FnIns>&, jule::Ptr<_1c004b5b8_scopeChecker>&);
inline void _1c007bb9d_checkFnInsCaller(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be462392_FnIns>&, jule::Ptr<_1d675d511_Token>);
inline void _1c007be23_checkFnIns(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be462392_FnIns>&);
inline void _1c007c198_checkTypeFn(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be45e6e1_Fn>&);
inline void _1c007c41d_checkTestFn(_1c0064504_Sema*, jule::Ptr<_1be462392_FnIns>&);
inline void _1c007c693_precheckTypeFn(jule::Ptr<_1c0064504_Sema>, jule::Ptr<_1be45e6e1_Fn>&);
inline void _1c007c86e_precheckFnTypes(jule::Ptr<_1c0064504_Sema>);
inline void _1c007ca4a_checkFnTypes(jule::Ptr<_1c0064504_Sema>);
inline void _1c007cc26_checkPackageTypes(jule::Ptr<_1c0064504_Sema>);
inline void _1c007ce02_setFileSemaFields(jule::Ptr<_1c0064504_Sema>);
inline void _1c007d0cd_setSemaFields(jule::Ptr<_1c0064504_Sema>);
inline void _1c007d353_check(jule::Ptr<_1c0064504_Sema>, jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>&);
struct _1c0064504_Sema {
	jule::Slice<_1d6435804_Log> _field_errors = jule::Slice<_1d6435804_Log>();
	jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>();
	jule::Ptr<_1c00c8524_SymbolTable> _field_file = jule::Ptr<_1c00c8524_SymbolTable>();
	jule::I64 _field_flags = 0LL;
	

	_1c0064504_Sema(void) = default;

	inline bool operator==(_1c0064504_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1c0064504_Sema _other) { return !this->operator==(_other); }


};
inline _1c007d70a_missingRetChecker static__1c007dac3_new(void);
inline jule::Bool _1c007dd9d_checkConditional(_1c007d70a_missingRetChecker*, jule::Ptr<_1c0048d79_Conditional>);
inline jule::Bool _1c007e1ab_checkMatch(_1c007d70a_missingRetChecker*, jule::Ptr<_1c004a496_Match>);
inline jule::Bool _1c007e4b9_checkInfIter(_1c007d70a_missingRetChecker*, jule::Ptr<_1c0049066_InfIter>);
inline jule::Bool _1c007e7c7_checkScope(_1c007d70a_missingRetChecker*, jule::Ptr<_1c00487b3_Scope>);
inline jule::Bool _1c007ead5_check(_1c007d70a_missingRetChecker*, jule::Ptr<_1c00487b3_Scope>);
struct _1c007d70a_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1c007d70a_missingRetChecker(void) = default;

	inline bool operator==(_1c007d70a_missingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1c007d70a_missingRetChecker _other) { return !this->operator==(_other); }


};
struct _1c00803bb_IterRelation {
	jule::Ptr<_1c0081334_Var> _field_Range = jule::Ptr<_1c0081334_Var>();
	

	_1c00803bb_IterRelation(void) = default;

	inline bool operator==(_1c00803bb_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1c00803bb_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c00816db_IsInitialized(_1c0081334_Var*);
inline jule::Bool _1c0081950_IsTypeInferred(_1c0081334_Var*);
struct _1c0081334_Var {
	jule::Ptr<_1c00487b3_Scope> _field_Scope = jule::Ptr<_1c00487b3_Scope>();
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Constant = jule::Bool();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Statically = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Ptr<_1c010d47c_TypeSymbol> _field_Kind = jule::Ptr<_1c010d47c_TypeSymbol>();
	jule::Ptr<_1c00ce30a_Value> _field_Value = jule::Ptr<_1c00ce30a_Value>();
	jule::Ptr<_1be465263_ReferenceStack> _field_Refers = jule::Ptr<_1be465263_ReferenceStack>();
	jule::Slice<jule::Ptr<_1be36332b_Directive>> _field_Directives = jule::Slice<jule::Ptr<_1be36332b_Directive>>();
	jule::Ptr<_1c00803bb_IterRelation> _field_IterRelation = jule::Ptr<_1c00803bb_IterRelation>();
	jule::Slice<jule::Ptr<_1c0081334_Var>> _field_Depends = jule::Slice<jule::Ptr<_1c0081334_Var>>();
	

	_1c0081334_Var(void) = default;

	inline bool operator==(_1c0081334_Var _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Constant == _other._field_Constant &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Public == _other._field_Public &&
			this->_field_Used == _other._field_Used &&
			this->_field_Statically == _other._field_Statically &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Value == _other._field_Value &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Directives == _other._field_Directives &&
			this->_field_IterRelation == _other._field_IterRelation &&
			this->_field_Depends == _other._field_Depends;
	}

	inline bool operator!=(_1c0081334_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1c00824cd_Dispose(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0082775_Str(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0082ab6_logical(jule::Ptr<_1be45e6e1_Fn>&, jule::Str);
inline jule::Bool static__1c0082d5d_Eq(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0083105_Gt(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c008339c_GtEq(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0083644_Lt(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c00838db_LtEq(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0083c2c_result(jule::Ptr<_1be45e6e1_Fn>&, jule::Str);
inline jule::Bool static__1c0083ec4_Shl(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c008426b_Shr(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0084513_Add(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c00847aa_Sub(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0084a52_Div(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0084ce9_Mul(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0085091_Mod(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0085338_BitAnd(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c00855d0_BitOr(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0085877_BitXor(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0085bb8_unary(jule::Ptr<_1be45e6e1_Fn>&, jule::Str);
inline jule::Bool static__1c0085e60_Neg(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0086207_Pos(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c008649e_BitNot(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c00867e0_assign(jule::Ptr<_1be45e6e1_Fn>&, jule::Str);
inline jule::Bool static__1c0086a87_AddAssign(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0086d2e_SubAssign(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c00870c6_DivAssign(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c008736d_MulAssign(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0087615_ModAssign(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c00878ac_ShlAssign(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0087b54_ShrAssign(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0087deb_BitOrAssign(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c0088193_BitAndAssign(jule::Ptr<_1be45e6e1_Fn>);
inline jule::Bool static__1c008843a_BitXorAssign(jule::Ptr<_1be45e6e1_Fn>);
struct _1c0081d5c_FuncPattern {
	

	_1c0081d5c_FuncPattern(void) = default;

	inline bool operator==(_1c0081d5c_FuncPattern _other) { return true; }

	inline bool operator!=(_1c0081d5c_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1c00b7711_pushErr(_1c00b71e4_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c00b7975_checkTrait(_1c00b71e4_typeCompatibilityChecker*);
inline jule::Bool _1c00b7bd9_checkPtr(_1c00b71e4_typeCompatibilityChecker*);
inline jule::Bool _1c00b7e4d_checkPrim(_1c00b71e4_typeCompatibilityChecker*);
inline jule::Bool _1c00b8305_typeEnum(_1c00b71e4_typeCompatibilityChecker*, jule::Ptr<_1be474cde_TypeEnum>&, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00b8569_checkTypeEnum(_1c00b71e4_typeCompatibilityChecker*);
inline jule::Bool _1c00b87cd_check(_1c00b71e4_typeCompatibilityChecker*);
struct _1c00b71e4_typeCompatibilityChecker {
	jule::Ptr<_1c0064504_Sema> _field_s = jule::Ptr<_1c0064504_Sema>();
	jule::Ptr<_1c0109324_TypeKind> _field_dest = jule::Ptr<_1c0109324_TypeKind>();
	jule::Ptr<_1c0109324_TypeKind> _field_src = jule::Ptr<_1c0109324_TypeKind>();
	jule::Ptr<_1d675d511_Token> _field_errorToken = jule::Ptr<_1d675d511_Token>();
	

	_1c00b71e4_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1c00b71e4_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1c00b71e4_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1c00b927e_pushErr(_1c00b8d1c_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c00b94e3_checkValidity(_1c00b8d1c_assignTypeChecker*);
inline jule::Bool _1c00b9757_checkConst(_1c00b8d1c_assignTypeChecker*);
inline jule::Bool _1c00b99bb_isPrim(_1c00b8d1c_assignTypeChecker*);
inline jule::Bool _1c00b9c30_checkCompatibility(_1c00b8d1c_assignTypeChecker*);
inline jule::Bool _1c00b9e94_check(_1c00b8d1c_assignTypeChecker*);
struct _1c00b8d1c_assignTypeChecker {
	jule::Ptr<_1c0064504_Sema> _field_s = jule::Ptr<_1c0064504_Sema>();
	jule::Ptr<_1c0109324_TypeKind> _field_dest = jule::Ptr<_1c0109324_TypeKind>();
	jule::Ptr<_1c00cd282_Data> _field_d = jule::Ptr<_1c00cd282_Data>();
	jule::Ptr<_1d675d511_Token> _field_errorToken = jule::Ptr<_1d675d511_Token>();
	

	_1c00b8d1c_assignTypeChecker(void) = default;

	inline bool operator==(_1c00b8d1c_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1c00b8d1c_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c25c1eb0_annotateConstraintElem(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c25c15ec_annotateConstraintElem(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c25c3896_annotateConstraintElem(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c25c7009_annotateConstraintElem(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bb11b_annotateConstraintMap(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bb429_annotateConstraintTup(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bb737_annotateConstraintFn(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bba67_annotateConstraintIdent(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bbd86_annotateConstraint(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline void _1c00bc1a5_pushGeneric(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&, jule::I64);
inline jule::Bool _1c00bc4b3_annotatePrim(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bc7c1_annotateArr(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bcace_annotateSlc(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bce86_checkMapKey(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bd294_annotateMap(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bd5a2_annotateFn(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bd8b0_annotatePtr(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bdbbd_annotateSptr(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00bdecb_annotateStruct(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00be2d9_annotateAny(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00be5e7_annotateKind(_1c00ba736_dynamicTypeAnnotation*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c00be85b_annotate(_1c00ba736_dynamicTypeAnnotation*);
struct _1c00ba736_dynamicTypeAnnotation {
	jule::Ptr<_1c00ced00_Eval> _field_e = jule::Ptr<_1c00ced00_Eval>();
	jule::Ptr<_1be462392_FnIns> _field_f = jule::Ptr<_1be462392_FnIns>();
	jule::Ptr<_1be4614c3_ParamIns> _field_p = jule::Ptr<_1be4614c3_ParamIns>();
	jule::Ptr<_1c00cd282_Data> _field_a = jule::Ptr<_1c00cd282_Data>();
	jule::Ptr<_1d675d511_Token> _field_errorToken = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1c0109324_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1be396a24_TypeDecl> _field_c = jule::Ptr<_1be396a24_TypeDecl>();
	

	_1c00ba736_dynamicTypeAnnotation(void) = default;

	inline bool operator==(_1c00ba736_dynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_k == _other._field_k &&
			this->_field_c == _other._field_c;
	}

	inline bool operator!=(_1c00ba736_dynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1c00c0582_pushErrToken(_1c00c0032_fnCallArgChecker*, jule::Ptr<_1d675d511_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c00c08a1_pushErr(_1c00c0032_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1be4614c3_ParamIns>> _1c00c0b15_getParams(_1c00c0032_fnCallArgChecker*);
inline jule::Bool _1c00c0e23_checkCounts(_1c00c0032_fnCallArgChecker*, jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>&);
inline jule::Bool _1c00c1374_checkArg(_1c00c0032_fnCallArgChecker*, jule::Ptr<_1be4614c3_ParamIns>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Bool _1c00c172b_push(_1c00c0032_fnCallArgChecker*, jule::Ptr<_1be4614c3_ParamIns>&, jule::Ptr<_1be39b045_Expr>);
inline jule::Bool _1c00c1ad3_pushVariadic(_1c00c0032_fnCallArgChecker*, jule::Ptr<_1be4614c3_ParamIns>&, jule::I64);
inline jule::Bool _1c00c1de1_checkArgs(_1c00c0032_fnCallArgChecker*, jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>&);
inline jule::Bool _1c00c2177_checkDynamicTypeAnnotation(_1c00c0032_fnCallArgChecker*);
inline jule::Bool _1c00c23ec_check(_1c00c0032_fnCallArgChecker*);
struct _1c00c0032_fnCallArgChecker {
	jule::Ptr<_1c00ced00_Eval> _field_e = jule::Ptr<_1c00ced00_Eval>();
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _field_args = jule::Slice<jule::Ptr<_1be39b045_Expr>>();
	jule::Ptr<_1d675d511_Token> _field_errorToken = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be462392_FnIns> _field_f = jule::Ptr<_1be462392_FnIns>();
	jule::Bool _field_dynamicAnnotation = jule::Bool();
	jule::Slice<jule::Any> _field_argModels = jule::Slice<jule::Any>();
	

	_1c00c0032_fnCallArgChecker(void) = default;

	inline bool operator==(_1c00c0032_fnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_f == _other._field_f &&
			this->_field_dynamicAnnotation == _other._field_dynamicAnnotation &&
			this->_field_argModels == _other._field_argModels;
	}

	inline bool operator!=(_1c00c0032_fnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1c00c2e47_pushErr(_1c00c293b_structLitChecker*, jule::Ptr<_1d675d511_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c00c3266_pushSugggestion(_1c00c293b_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1c00c362e_pushMatch(_1c00c293b_structLitChecker*, jule::Ptr<_1be38e8b8_FieldIns>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1d675d511_Token>&);
inline void _1c00c394d_checkPair(_1c00c293b_structLitChecker*, jule::Ptr<_1be3a0c92_FieldExprPair>&, jule::Slice<jule::Ptr<_1be39b045_Expr>>&);
inline jule::Bool _1c00c3c5b_readyExprs(_1c00c293b_structLitChecker*, jule::Slice<jule::Ptr<_1be39b045_Expr>>&);
inline void _1c00c3ed1_check(_1c00c293b_structLitChecker*, jule::Slice<jule::Ptr<_1be39b045_Expr>>&);
struct _1c00c293b_structLitChecker {
	jule::Ptr<_1c00ced00_Eval> _field_e = jule::Ptr<_1c00ced00_Eval>();
	jule::Ptr<_1d675d511_Token> _field_errorToken = jule::Ptr<_1d675d511_Token>();
	jule::Ptr<_1be3b359b_StructIns> _field_s = jule::Ptr<_1be3b359b_StructIns>();
	jule::Slice<jule::Ptr<_1be45783d_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1be45783d_StructArgExprModel>>();
	

	_1c00c293b_structLitChecker(void) = default;

	inline bool operator==(_1c00c293b_structLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1c00c293b_structLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c0081334_Var> _1c00c49b5_buildVar(_1c00c4520_rangeChecker*, jule::Ptr<_1be3a9817_VarDecl>&);
inline void _1c00c4b91_setSizeKey(_1c00c4520_rangeChecker*);
inline void _1c00c5059_checkRangeExprValidity(_1c00c4520_rangeChecker*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c0081334_Var>&, jule::Ptr<_1c0109324_TypeKind>&);
inline void _1c00c5235_checkSlice(_1c00c4520_rangeChecker*);
inline void _1c00c5411_checkArray(_1c00c4520_rangeChecker*);
inline void _1c00c55dc_checkMapKeyA(_1c00c4520_rangeChecker*);
inline void _1c00c57b8_checkMapKeyB(_1c00c4520_rangeChecker*);
inline void _1c00c5994_checkMap(_1c00c4520_rangeChecker*);
inline void _1c00c5b70_checkStr(_1c00c4520_rangeChecker*);
inline jule::Bool _1c00c5dd4_check(_1c00c4520_rangeChecker*);
struct _1c00c4520_rangeChecker {
	jule::Ptr<_1c004b5b8_scopeChecker> _field_sc = jule::Ptr<_1c004b5b8_scopeChecker>();
	jule::Ptr<_1be3ab495_RangeKind> _field_rang = jule::Ptr<_1be3ab495_RangeKind>();
	jule::Ptr<_1c0049440_RangeIter> _field_Kind = jule::Ptr<_1c0049440_RangeIter>();
	jule::Ptr<_1c00cd282_Data> _field_d = jule::Ptr<_1c00cd282_Data>();
	

	_1c00c4520_rangeChecker(void) = default;

	inline bool operator==(_1c00c4520_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1c00c4520_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1c00c6b2c_prepareTypes(_1c00c6676_retTypeChecker*);
inline void _1c00c6da2_prepareExprs(_1c00c6676_retTypeChecker*, jule::Ptr<_1be39b045_Expr>&);
inline void _1c00c707d_retVars(_1c00c6676_retTypeChecker*);
inline void _1c00c7259_checkExprs(_1c00c6676_retTypeChecker*);
inline jule::Bool _1c00c7567_check(_1c00c6676_retTypeChecker*, jule::Ptr<_1be39b045_Expr>&);
struct _1c00c6676_retTypeChecker {
	jule::Ptr<_1c004b5b8_scopeChecker> _field_sc = jule::Ptr<_1c004b5b8_scopeChecker>();
	jule::Ptr<_1be462392_FnIns> _field_f = jule::Ptr<_1be462392_FnIns>();
	jule::Slice<jule::Ptr<_1c0109324_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1c0109324_TypeKind>>();
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1be39b045_Expr>>();
	jule::Slice<jule::Ptr<_1c0081334_Var>> _field_vars = jule::Slice<jule::Ptr<_1c0081334_Var>>();
	jule::Ptr<_1d675d511_Token> _field_errorToken = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_model = jule::Any();
	

	_1c00c6676_retTypeChecker(void) = default;

	inline bool operator==(_1c00c6676_retTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1c00c6676_retTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c00c8a41_FindPackage(_1c00c8524_SymbolTable*, jule::Str);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c00c8d4e_SelectPackage(_1c00c8524_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)>);
inline jule::Ptr<_1c0081334_Var> _1c00c9206_FindVar(_1c00c8524_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1c0108631_TypeAlias> _1c00c95ad_FindTypeAlias(_1c00c8524_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1be387251_Struct> _1c00c9965_FindStruct(_1c00c8524_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1be45e6e1_Fn> _1c00c9d1c_FindFn(_1c00c8524_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1be47159e_Trait> _1c00ca12a_FindTrait(_1c00c8524_SymbolTable*, jule::Str);
inline jule::Ptr<_1be4736e4_Enum> _1c00ca438_FindEnum(_1c00c8524_SymbolTable*, jule::Str);
inline jule::Ptr<_1be474cde_TypeEnum> _1c00ca746_FindTypeEnum(_1c00c8524_SymbolTable*, jule::Str);
inline jule::Ptr<_1c0081334_Var> _1c00cacb8_findVar(_1c00c8524_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1c0108631_TypeAlias> _1c00cb219_findTypeAlias(_1c00c8524_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1c00cb5c1_defByIdent(_1c00c8524_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1c00cba22_isDuplicatedIdent(_1c00c8524_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1c00c8524_SymbolTable {
	jule::Ptr<_1d676389b_File> _field_File = jule::Ptr<_1d676389b_File>();
	jule::Slice<_1be46662c_Pass> _field_Passes = jule::Slice<_1be46662c_Pass>();
	jule::Slice<jule::Ptr<_1c005b3a8_ImportInfo>> _field_Imports = jule::Slice<jule::Ptr<_1c005b3a8_ImportInfo>>();
	jule::Slice<jule::Ptr<_1c0081334_Var>> _field_Vars = jule::Slice<jule::Ptr<_1c0081334_Var>>();
	jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _field_TypeAliases = jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>();
	jule::Slice<jule::Ptr<_1be387251_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1be387251_Struct>>();
	jule::Slice<jule::Ptr<_1be45e6e1_Fn>> _field_Funcs = jule::Slice<jule::Ptr<_1be45e6e1_Fn>>();
	jule::Slice<jule::Ptr<_1be47159e_Trait>> _field_Traits = jule::Slice<jule::Ptr<_1be47159e_Trait>>();
	jule::Slice<jule::Ptr<_1be4736e4_Enum>> _field_Enums = jule::Slice<jule::Ptr<_1be4736e4_Enum>>();
	jule::Slice<jule::Ptr<_1be474cde_TypeEnum>> _field_TypeEnums = jule::Slice<jule::Ptr<_1be474cde_TypeEnum>>();
	jule::Slice<jule::Ptr<_1be50ab22_Impl>> _field_Impls = jule::Slice<jule::Ptr<_1be50ab22_Impl>>();
	

	_1c00c8524_SymbolTable(void) = default;

	inline bool operator==(_1c00c8524_SymbolTable _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Imports == _other._field_Imports &&
			this->_field_Vars == _other._field_Vars &&
			this->_field_TypeAliases == _other._field_TypeAliases &&
			this->_field_Structs == _other._field_Structs &&
			this->_field_Funcs == _other._field_Funcs &&
			this->_field_Traits == _other._field_Traits &&
			this->_field_Enums == _other._field_Enums &&
			this->_field_TypeEnums == _other._field_TypeEnums &&
			this->_field_Impls == _other._field_Impls;
	}

	inline bool operator!=(_1c00c8524_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c00cd66c_IsNil(_1c00cd282_Data*);
inline jule::Bool _1c00cd8d1_IsVoid(_1c00cd282_Data*);
inline jule::Bool _1c00cdb45_IsConst(_1c00cd282_Data*);
inline jule::Bool _1c00cde53_GoodOperand(_1c00cd282_Data*, jule::Ptr<_1c00cd282_Data>&);
struct _1c00cd282_Data {
	jule::Ptr<_1c0109324_TypeKind> _field_Kind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Bool _field_Reference = jule::Bool();
	jule::Bool _field_Lvalue = jule::Bool();
	jule::Bool _field_IsRune = jule::Bool();
	jule::Any _field_Model = jule::Any();
	jule::Bool _field_Decl = jule::Bool();
	jule::Ptr<_1be3e8c63_Const> _field_Constant = jule::Ptr<_1be3e8c63_Const>();
	

	_1c00cd282_Data(void) = default;

	inline bool operator==(_1c00cd282_Data _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1c00cd282_Data _other) { return !this->operator==(_other); }


};
struct _1c00ce30a_Value {
	jule::Ptr<_1be39b045_Expr> _field_Expr = jule::Ptr<_1be39b045_Expr>();
	jule::Ptr<_1c00cd282_Data> _field_Data = jule::Ptr<_1c00cd282_Data>();
	

	_1c00ce30a_Value(void) = default;

	inline bool operator==(_1c00ce30a_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1c00ce30a_Value _other) { return !this->operator==(_other); }


};
inline void _1c00d030b_pushErr(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c00d062a_pushSugggestion(_1c00ced00_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1c00d0806_allowBuiltin(_1c00ced00_Eval*);
inline void _1c00d09d2_disallowBuiltin(_1c00ced00_Eval*);
inline jule::Bool _1c00d0c46_isUnsafe(_1c00ced00_Eval*);
inline jule::Bool _1c00d0eaa_isGlobal(_1c00ced00_Eval*);
inline jule::Bool _1c00d1285_applyNumericPrefix(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1c00d14e9_litNil(_1c00ced00_Eval*);
inline jule::Ptr<_1c00cd282_Data> _1c00d1807_litStr(_1c00ced00_Eval*, jule::Ptr<_1be39c079_LitExpr>&);
inline jule::Ptr<_1c00cd282_Data> _1c00d1b15_litBool(_1c00ced00_Eval*, jule::Ptr<_1be39c079_LitExpr>&);
inline jule::Ptr<_1c00cd282_Data> _1c00d1e23_litRune(_1c00ced00_Eval*, jule::Ptr<_1be39c079_LitExpr>&);
inline jule::Ptr<_1c00cd282_Data> _1c00d2231_litFloat(_1c00ced00_Eval*, jule::Ptr<_1be39c079_LitExpr>&);
inline jule::Ptr<_1c00cd282_Data> _1c00d253e_litInt(_1c00ced00_Eval*, jule::Ptr<_1be39c079_LitExpr>&);
inline jule::Ptr<_1c00cd282_Data> _1c00d284c_litNum(_1c00ced00_Eval*, jule::Ptr<_1be39c079_LitExpr>&);
inline jule::Ptr<_1c00cd282_Data> _1c00d2b5a_evalLit(_1c00ced00_Eval*, jule::Ptr<_1be39c079_LitExpr>);
inline jule::Any _1c00d2e68_findBuiltins(_1c00ced00_Eval*, jule::Str);
inline jule::Any _1c00d3320_getDef(_1c00ced00_Eval*, jule::Str, jule::Bool);
inline void _1c2c39429_pushReference(_1c00ced00_Eval*, jule::Ptr<_1be462392_FnIns>&);
inline void _1c2c4e131_pushReference(_1c00ced00_Eval*, jule::Ptr<_1c0081334_Var>&);
inline void _1c2a016ec_pushReference(_1c00ced00_Eval*, jule::Ptr<_1be3b359b_StructIns>&);
inline jule::Ptr<_1c00cd282_Data> _1c00d38a3__evalEnum(_1c00ced00_Eval*, jule::Ptr<_1be4736e4_Enum>);
inline jule::Ptr<_1c00cd282_Data> _1c00d3c5a_evalEnum(_1c00ced00_Eval*, jule::Ptr<_1be4736e4_Enum>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00d4068__evalTypeEnum(_1c00ced00_Eval*, jule::Ptr<_1be474cde_TypeEnum>);
inline jule::Ptr<_1c00cd282_Data> _1c00d4420_evalTypeEnum(_1c00ced00_Eval*, jule::Ptr<_1be474cde_TypeEnum>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00d472d__evalStruct(_1c00ced00_Eval*, jule::Ptr<_1be3b359b_StructIns>);
inline jule::Ptr<_1c00cd282_Data> _1c00d4ad5_evalStruct(_1c00ced00_Eval*, jule::Ptr<_1be3b359b_StructIns>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00d4de3_evalFnIns(_1c00ced00_Eval*, jule::Ptr<_1be462392_FnIns>);
inline void _1c00d5212_checkDeprecated(_1c00ced00_Eval*, jule::Slice<jule::Ptr<_1be36332b_Directive>>&, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00d55b9_evalFn(_1c00ced00_Eval*, jule::Ptr<_1be45e6e1_Fn>, jule::Ptr<_1d675d511_Token>);
inline void _1c00d5982_pushIllegalCycleError(_1c00ced00_Eval*, jule::Ptr<_1c0081334_Var>&, jule::Ptr<_1c0081334_Var>&, jule::Str&);
inline jule::Bool _1c00d5d39_checkCrossCycle(_1c00ced00_Eval*, jule::Ptr<_1c0081334_Var>&, jule::Str&);
inline jule::Bool _1c00d61e1_checkIllegalCycles(_1c00ced00_Eval*, jule::Ptr<_1c0081334_Var>&, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00d6598_evalVar(_1c00ced00_Eval*, jule::Ptr<_1c0081334_Var>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00d6950_evalTypeAlias(_1c00ced00_Eval*, jule::Ptr<_1c0108631_TypeAlias>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00d6d07_evalDef(_1c00ced00_Eval*, jule::Any, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00d7115_evalIdent(_1c00ced00_Eval*, jule::Ptr<_1be39d0ad_IdentExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00d7423_evalUnary(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be39d7b7_UnaryExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00d7731_evalVariadic(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be39db6e_VariadicExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00d7a3e_evalUnsafe(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be39c783_UnsafeExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00d7d4c_evalArr(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a28ed_SliceExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00d829d_evalExpSlc(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a28ed_SliceExpr>, jule::Ptr<_1c0109324_TypeKind>, jule::Any);
inline jule::Ptr<_1c00cd282_Data> _1c00d85ab_evalSliceExpr(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a28ed_SliceExpr>);
inline void _1c00d88ec_checkIntegerIndexingByData(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1d675d511_Token>);
inline void _1c00d8cc6_indexingPtr(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be3a328e_IndexingExpr>&);
inline void _1c00d918e_indexingArr(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be3a328e_IndexingExpr>&);
inline void _1c00d9557_indexingSlc(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be3a328e_IndexingExpr>&);
inline void _1c00d9920_indexingMap(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be3a328e_IndexingExpr>&);
inline void _1c00d9cd8_indexingStr(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be3a328e_IndexingExpr>&);
inline void _1c00da1a1_toIndexing(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be3a328e_IndexingExpr>&);
inline jule::Bool _1c00da624_pushGenericsFromExprSubIdent(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be39e851_SubIdentExpr>&, jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>&, jule::Ptr<_1be39b045_Expr>&);
inline jule::Bool _1c00da9dc_pushGenericsFromData(jule::Ptr<_1c00ced00_Eval>, jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>&, jule::Ptr<_1be39b045_Expr>&);
inline void _1c00dad2d_evalIdentDeclFromIndexing(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be3a328e_IndexingExpr>&);
inline jule::Bool _1c00db290_checkGenericFn(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be462392_FnIns>&, jule::Ptr<_1d675d511_Token>&, jule::Any&);
inline void _1c00db5d1_evalFnGenericFromIndexing(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be3a328e_IndexingExpr>&);
inline jule::Ptr<_1c00cd282_Data> _1c00db900_evalIndexing(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a328e_IndexingExpr>);
inline std::tuple<jule::Ptr<_1c00cd282_Data>,jule::Ptr<_1c00cd282_Data>> _1c00dbc0d_evalSlicingExprs(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a3899_SlicingExpr>&);
inline void _1c00dbe83_slicingArr(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&);
inline void _1c00dc34b_slicingStr(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&);
inline void _1c00dc7ad_checkSlicing(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be3a3899_SlicingExpr>&);
inline jule::Ptr<_1c00cd282_Data> _1c00dcabb_evalSlicing(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a3899_SlicingExpr>);
inline void _1c00dce84_castPtr(_1c00ced00_Eval*, jule::Ptr<_1c0109324_TypeKind>, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline void _1c00dd34c_castStruct(_1c00ced00_Eval*, jule::Ptr<_1c0109324_TypeKind>, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline void _1c00dd715_castRef(_1c00ced00_Eval*, jule::Ptr<_1c0109324_TypeKind>, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline void _1c00ddacd_castSlc(_1c00ced00_Eval*, jule::Ptr<_1c0109324_TypeKind>, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline void _1c00dddec_castStr(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline void _1c00de2b5_castInt(_1c00ced00_Eval*, jule::Ptr<_1c0109324_TypeKind>, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline void _1c00de67d_castNum(_1c00ced00_Eval*, jule::Ptr<_1c0109324_TypeKind>, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline void _1c00dea46_castPrim(_1c00ced00_Eval*, jule::Ptr<_1c0109324_TypeKind>, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline void _1c00ded65_castConstant(_1c00ced00_Eval*, jule::Ptr<_1c0109324_TypeKind>&, jule::Ptr<_1c00cd282_Data>&);
inline void _1c00e022d_castTypeEnum(_1c00ced00_Eval*, jule::Ptr<_1c0109324_TypeKind>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Ptr<_1c00cd282_Data> _1c00e067e_evalCastByTypeNData(_1c00ced00_Eval*, jule::Ptr<_1c0109324_TypeKind>, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e0ad0_evalCastT(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1c0109324_TypeKind>&, jule::Ptr<_1be39b045_Expr>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Ptr<_1c00cd282_Data> _1c00e0ddd_evalCast(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be39e026_CastExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00e11eb_evalNsSelection(_1c00ced00_Eval*, jule::Ptr<_1be39e3cd_NsSelectionExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00e164c_evalStructLitExplicit(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3b359b_StructIns>, jule::Slice<jule::Ptr<_1be39b045_Expr>>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e195a_evalStructLit(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a14e0_StructLit>);
inline _1c011784e_typeChecker _1c00e1bbe_typeChecker(_1c00ced00_Eval*);
inline jule::Ptr<_1c00cd282_Data> _1c00e1ecc_evalType(_1c00ced00_Eval*, jule::Ptr<_1be396a24_TypeDecl>);
inline void _1c00e22eb_callTypeFn(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline void _1c00e261a_callBuiltinFn(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline void _1c00e295b_checkFnOfConcurrentCall(_1c00ced00_Eval*, jule::Ptr<_1be462392_FnIns>&, jule::Ptr<_1d675d511_Token>);
inline void _1c00e2d57_processExceptionalHandler(_1c00ced00_Eval*, jule::Ptr<_1be462392_FnIns>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline void _1c00e3187_callFn(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1c00e3495_evalFnCall(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a0313_FnCallExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00e384c_evalEnumStatic(_1c00ced00_Eval*, jule::Ptr<_1be4736e4_Enum>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e3c04_evalTypeEnumStatic(_1c00ced00_Eval*, jule::Ptr<_1be474cde_TypeEnum>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e40ab_evalStructStatic(_1c00ced00_Eval*, jule::Ptr<_1be3b359b_StructIns>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e450c_evalTraitSubIdent(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1be47159e_Trait>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e4a07_evalStructSubIdent(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1be3b359b_StructIns>, jule::Ptr<_1be39e851_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1c00cd282_Data> _1c00e4dae_evalSliceSubIdent(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e5266_evalArraySubIdent(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e561d_evalMapSubIdent(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e59c5_evalStrSubIdent(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e5cd3_evalIntTypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e60e1_evalUintTypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e63ee_evalI8TypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e670c_evalI16TypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e6a1a_evalI32TypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e6d28_evalI64TypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e7136_evalU8TypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e7444_evalU16TypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e7752_evalU32TypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e7a60_evalU64TypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e7d6d_evalF32TypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e817b_evalF64TypeStatic(_1c00ced00_Eval*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e8533_evalPrimStatic(_1c00ced00_Eval*, jule::Str, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1c00cd282_Data> _1c00e88da_evalTypeStatic(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1be39e851_SubIdentExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00e8c92_evalObjSubIdent(_1c00ced00_Eval*, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1be39e851_SubIdentExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00e90a0_evalSubIdent(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be39e851_SubIdentExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00e93ad_evalTuple(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be39bbc2_TupleExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00e9765_evalMap(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1c0114593_Map>, jule::Ptr<_1be3a1963_BraceLit>);
inline jule::Ptr<_1c00cd282_Data> _1c00e9a73_evalBraceLit(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a1963_BraceLit>);
inline jule::Ptr<_1c00cd282_Data> _1c00e9d81_evalAnonFn(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be3a8838_FnDecl>);
inline jule::Ptr<_1c00cd282_Data> _1c00ea18e_evalBinop(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be39ecc4_BinopExpr>);
inline jule::Ptr<_1c00cd282_Data> _1c00ea49c_evalExprKind(jule::Ptr<_1c00ced00_Eval>, jule::Any);
inline jule::Ptr<_1c00cd282_Data> _1c00ea7aa_eval(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be39b045_Expr>);
inline jule::Ptr<_1c00cd282_Data> _1c00eaab8_evalExpr(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1be39b045_Expr>);
struct _1c00ced00_Eval {
	jule::Ptr<_1c0064504_Sema> _field_s = jule::Ptr<_1c0064504_Sema>();
	jule::Trait<_1c0124e55_Lookup> _field_lookup = jule::Trait<_1c0124e55_Lookup>();
	jule::Ptr<_1c0109324_TypeKind> _field_prefix = jule::Ptr<_1c0109324_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Ptr<_1c0081334_Var> _field_owner = jule::Ptr<_1c0081334_Var>();
	jule::Ptr<_1be38e8b8_FieldIns> _field_field = jule::Ptr<_1be38e8b8_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1c00ced00_Eval(void) = default;

	inline bool operator==(_1c00ced00_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1c00ced00_Eval _other) { return !this->operator==(_other); }


};
inline _1c00eb03b_unaryEval static__1c00eb4e2_new(jule::Ptr<_1c00ced00_Eval>);
inline void _1c00eb6bd_minus(_1c00eb03b_unaryEval*);
inline void _1c00eb899_plus(_1c00eb03b_unaryEval*);
inline void _1c00eba75_caret(_1c00eb03b_unaryEval*);
inline void _1c00ebc51_excl(_1c00eb03b_unaryEval*);
inline void _1c00ebe2c_star(_1c00eb03b_unaryEval*);
inline void _1c00ec108_amper(_1c00eb03b_unaryEval*);
inline void _1c00ec2d4_typeDecl(_1c00eb03b_unaryEval*);
inline void _1c00ec4b0_evalData(_1c00eb03b_unaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c00ec78a_eval(_1c00eb03b_unaryEval*, jule::Ptr<_1be39d7b7_UnaryExpr>);
struct _1c00eb03b_unaryEval {
	jule::Ptr<_1c00ced00_Eval> _field_e = jule::Ptr<_1c00ced00_Eval>();
	jule::Ptr<_1c00cd282_Data> _field_d = jule::Ptr<_1c00cd282_Data>();
	jule::Ptr<_1be39d7b7_UnaryExpr> _field_u = jule::Ptr<_1be39d7b7_UnaryExpr>();
	

	_1c00eb03b_unaryEval(void) = default;

	inline bool operator==(_1c00eb03b_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1c00eb03b_unaryEval _other) { return !this->operator==(_other); }


};
inline _1c00eccc9_binaryEval static__1c00ed390_newPlain(jule::Ptr<_1c00ced00_Eval>);
inline _1c00eccc9_binaryEval static__1c00ed6d1_new(jule::Ptr<_1c00ced00_Eval>, jule::Ptr<_1d675d511_Token>);
inline jule::Bool _1c00ed945_checkTypeCompatibility(_1c00eccc9_binaryEval*);
inline jule::Bool _1c00edbdc_checkStructCommonOperatorCompatibility(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c00ede84_evalNil(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c00ee1e8_evalEnum(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c00ee45c_evalTypeEnum(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c00ee6c1_evalSptr(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c00ee935_evalPtr(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c00eeb99_evalArr(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c00eee0d_evalSlc(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c0100172_evalFn(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c01003d6_evalStruct(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c010064a_evalTrait(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c01008ae_evalAny(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c0100b23_evalBool(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c0100d87_evalStr(_1c00eccc9_binaryEval*);
inline void _1c0101063_setTypeToGreater(_1c00eccc9_binaryEval*);
inline void _1c01012a5_checkModData(_1c00eccc9_binaryEval*, jule::Ptr<_1c00cd282_Data>&);
inline void _1c0101481_mod(_1c00eccc9_binaryEval*);
inline jule::Bool _1c0101838_numbersAreCompatibile(_1c00eccc9_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1c00cd282_Data> _1c0101a9c_evalFloat(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c0101d11_evalInt(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c0102075_evalPrim(_1c00eccc9_binaryEval*);
inline jule::Ptr<_1c00cd282_Data> _1c01022d9_evalOp(_1c00eccc9_binaryEval*);
inline void _1c010255e_evalConst(_1c00eccc9_binaryEval*, jule::Ptr<_1c00cd282_Data>&);
inline void _1c01027d4_checkData(_1c00eccc9_binaryEval*, jule::Ptr<_1c00cd282_Data>&);
inline void _1c01029b0_checkDatas(_1c00eccc9_binaryEval*);
inline void _1c0102c35_setModel(_1c00eccc9_binaryEval*, jule::Ptr<_1c00cd282_Data>&);
inline void _1c0102eaa_postEval(_1c00eccc9_binaryEval*, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1c0103362_solveExplicit(_1c00eccc9_binaryEval*, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1c0103670_eval(_1c00eccc9_binaryEval*, jule::Ptr<_1be39ecc4_BinopExpr>&);
struct _1c00eccc9_binaryEval {
	jule::Ptr<_1c00ced00_Eval> _field_e = jule::Ptr<_1c00ced00_Eval>();
	jule::Ptr<_1c00cd282_Data> _field_l = jule::Ptr<_1c00cd282_Data>();
	jule::Ptr<_1c00cd282_Data> _field_r = jule::Ptr<_1c00cd282_Data>();
	jule::Ptr<_1d675d511_Token> _field_op = jule::Ptr<_1d675d511_Token>();
	

	_1c00eccc9_binaryEval(void) = default;

	inline bool operator==(_1c00eccc9_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1c00eccc9_binaryEval _other) { return !this->operator==(_other); }


};
struct _1c0107ae7_InsGeneric {
	jule::Ptr<_1c0109324_TypeKind> _field_Kind = jule::Ptr<_1c0109324_TypeKind>();
	jule::Slice<jule::Ptr<_1c0109324_TypeKind>> _field_Constraint = jule::Slice<jule::Ptr<_1c0109324_TypeKind>>();
	

	_1c0107ae7_InsGeneric(void) = default;

	inline bool operator==(_1c0107ae7_InsGeneric _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1c0107ae7_InsGeneric _other) { return !this->operator==(_other); }


};
struct _1c0108631_TypeAlias {
	jule::Ptr<_1be3a6d42_ScopeTree> _field_Scope = jule::Ptr<_1be3a6d42_ScopeTree>();
	jule::Bool _field_Public = jule::Bool();
	jule::Bool _field_CppLinked = jule::Bool();
	jule::Bool _field_Used = jule::Bool();
	jule::Bool _field_Generic = jule::Bool();
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Str _field_Ident = jule::Str();
	jule::Ptr<_1c010d47c_TypeSymbol> _field_Kind = jule::Ptr<_1c010d47c_TypeSymbol>();
	jule::Slice<jule::Any> _field_Refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _field_Generics = jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>();
	

	_1c0108631_TypeAlias(void) = default;

	inline bool operator==(_1c0108631_TypeAlias _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Used == _other._field_Used &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Generics == _other._field_Generics;
	}

	inline bool operator!=(_1c0108631_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1c0109720_Str(_1c0109324_TypeKind*);
inline jule::Bool _1c0109a2d_Equals(jule::Ptr<_1c0109324_TypeKind>, jule::Ptr<_1c0109324_TypeKind>);
inline jule::Bool _1c0109ed4_CppLinked(_1c0109324_TypeKind*);
inline jule::Bool _1c010a248_IsNil(_1c0109324_TypeKind*);
inline jule::Bool _1c010a4ac_Void(_1c0109324_TypeKind*);
inline jule::Bool _1c010a721_Mutable(_1c0109324_TypeKind*);
inline jule::Bool _1c010a985_NilCompatible(_1c0109324_TypeKind*);
inline jule::Bool _1c010abe9_PerformsRC(_1c0109324_TypeKind*);
inline jule::Bool _1c010ae5d_SupportsCloning(_1c0109324_TypeKind*);
inline jule::Bool _1c010b1c2_Variadicable(_1c0109324_TypeKind*);
inline jule::Ptr<_1c010dceb_Prim> _1c010b436_Prim(_1c0109324_TypeKind*);
inline jule::Ptr<_1c0112580_Sptr> _1c010b69a_Sptr(_1c0109324_TypeKind*);
inline jule::Ptr<_1c0115ae4_Ptr> _1c010b90e_Ptr(_1c0109324_TypeKind*);
inline jule::Ptr<_1be4736e4_Enum> _1c010bb73_Enum(_1c0109324_TypeKind*);
inline jule::Ptr<_1be474cde_TypeEnum> _1c010bdd7_TypeEnum(_1c0109324_TypeKind*);
inline jule::Ptr<_1c0115187_Arr> _1c010c14b_Arr(_1c0109324_TypeKind*);
inline jule::Ptr<_1c0112edc_Slc> _1c010c3b0_Slc(_1c0109324_TypeKind*);
inline jule::Ptr<_1be462392_FnIns> _1c010c624_Fn(_1c0109324_TypeKind*);
inline jule::Ptr<_1be3b359b_StructIns> _1c010c888_Struct(_1c0109324_TypeKind*);
inline jule::Ptr<_1be47159e_Trait> _1c010caec_Trait(_1c0109324_TypeKind*);
inline jule::Ptr<_1c0114593_Map> _1c010cd61_Map(_1c0109324_TypeKind*);
inline jule::Ptr<_1c0113a6a_Tuple> _1c010d0c5_Tup(_1c0109324_TypeKind*);
struct _1c0109324_TypeKind {
	jule::Str _field_CppIdent = jule::Str();
	jule::Bool _field_Generic = jule::Bool();
	jule::Bool _field_Variadic = jule::Bool();
	jule::Trait<_1c0108de5_Kind> _field_Kind = jule::Trait<_1c0108de5_Kind>();
	

	_1c0109324_TypeKind(void) = default;

	inline bool operator==(_1c0109324_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c0109324_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c010d834_checked(_1c010d47c_TypeSymbol*);
inline void _1c010da10_removeKind(_1c010d47c_TypeSymbol*);
struct _1c010d47c_TypeSymbol {
	jule::Ptr<_1be396a24_TypeDecl> _field_Decl = jule::Ptr<_1be396a24_TypeDecl>();
	jule::Ptr<_1c0109324_TypeKind> _field_Kind = jule::Ptr<_1c0109324_TypeKind>();
	

	_1c010d47c_TypeSymbol(void) = default;

	inline bool operator==(_1c010d47c_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c010d47c_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1c010e15e_Str(_1c010dceb_Prim*);
inline jule::Bool _1c010e46c_Equals(jule::Ptr<_1c010dceb_Prim>, jule::Ptr<_1c0109324_TypeKind>);
inline jule::Bool _1c010e8e0_IsConstraint(_1c010dceb_Prim*);
inline jule::Bool _1c010eb54_IsI8(_1c010dceb_Prim*);
inline jule::Bool _1c010edb8_IsI16(_1c010dceb_Prim*);
inline jule::Bool _1c011012c_IsI32(_1c010dceb_Prim*);
inline jule::Bool _1c0110391_IsI64(_1c010dceb_Prim*);
inline jule::Bool _1c0110605_IsU8(_1c010dceb_Prim*);
inline jule::Bool _1c0110869_IsU16(_1c010dceb_Prim*);
inline jule::Bool _1c0110acd_IsU32(_1c010dceb_Prim*);
inline jule::Bool _1c0110d42_IsU64(_1c010dceb_Prim*);
inline jule::Bool _1c01110a6_IsF32(_1c010dceb_Prim*);
inline jule::Bool _1c011131a_IsF64(_1c010dceb_Prim*);
inline jule::Bool _1c011157e_IsInt(_1c010dceb_Prim*);
inline jule::Bool _1c01117e3_IsUint(_1c010dceb_Prim*);
inline jule::Bool _1c0111a57_IsUintptr(_1c010dceb_Prim*);
inline jule::Bool _1c0111cbb_IsBool(_1c010dceb_Prim*);
inline jule::Bool _1c0112030_IsStr(_1c010dceb_Prim*);
inline jule::Bool _1c0112294_IsAny(_1c010dceb_Prim*);
struct _1c010dceb_Prim {
	jule::Str _field_Kind = jule::Str();
	

	_1c010dceb_Prim(void) = default;

	inline bool operator==(_1c010dceb_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1c010dceb_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1c01128e3_Str(_1c0112580_Sptr*);
inline jule::Bool _1c0112c01_Equals(jule::Ptr<_1c0112580_Sptr>, jule::Ptr<_1c0109324_TypeKind>);
struct _1c0112580_Sptr {
	jule::Ptr<_1c0109324_TypeKind> _field_Elem = jule::Ptr<_1c0109324_TypeKind>();
	

	_1c0112580_Sptr(void) = default;

	inline bool operator==(_1c0112580_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0112580_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1c01134e8_Str(_1c0112edc_Slc*);
inline jule::Bool _1c0113806_Equals(jule::Ptr<_1c0112edc_Slc>, jule::Ptr<_1c0109324_TypeKind>);
struct _1c0112edc_Slc {
	jule::Ptr<_1c0109324_TypeKind> _field_Elem = jule::Ptr<_1c0109324_TypeKind>();
	

	_1c0112edc_Slc(void) = default;

	inline bool operator==(_1c0112edc_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0112edc_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1c0113dcd_Str(_1c0113a6a_Tuple*);
inline jule::Bool _1c01141db_Equals(jule::Ptr<_1c0113a6a_Tuple>, jule::Ptr<_1c0109324_TypeKind>);
struct _1c0113a6a_Tuple {
	jule::Slice<jule::Ptr<_1c0109324_TypeKind>> _field_Types = jule::Slice<jule::Ptr<_1c0109324_TypeKind>>();
	

	_1c0113a6a_Tuple(void) = default;

	inline bool operator==(_1c0113a6a_Tuple _other) {
		return 
			this->_field_Types == _other._field_Types;
	}

	inline bool operator!=(_1c0113a6a_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1c0114906_Str(_1c0114593_Map*);
inline jule::Bool _1c0114c14_Equals(jule::Ptr<_1c0114593_Map>, jule::Ptr<_1c0109324_TypeKind>);
struct _1c0114593_Map {
	jule::Ptr<_1c0109324_TypeKind> _field_Key = jule::Ptr<_1c0109324_TypeKind>();
	jule::Ptr<_1c0109324_TypeKind> _field_Val = jule::Ptr<_1c0109324_TypeKind>();
	

	_1c0114593_Map(void) = default;

	inline bool operator==(_1c0114593_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1c0114593_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1c01154ea_Str(_1c0115187_Arr*);
inline jule::Bool _1c0115808_Equals(jule::Ptr<_1c0115187_Arr>, jule::Ptr<_1c0109324_TypeKind>);
struct _1c0115187_Arr {
	jule::Bool _field_Auto = jule::Bool();
	jule::I64 _field_N = jule::I64();
	jule::Ptr<_1c0109324_TypeKind> _field_Elem = jule::Ptr<_1c0109324_TypeKind>();
	

	_1c0115187_Arr(void) = default;

	inline bool operator==(_1c0115187_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0115187_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1c0115e57_Str(_1c0115ae4_Ptr*);
inline jule::Bool _1c0116265_Equals(jule::Ptr<_1c0115ae4_Ptr>, jule::Ptr<_1c0109324_TypeKind>);
inline jule::Bool _1c01165b7_IsUnsafe(_1c0115ae4_Ptr*);
struct _1c0115ae4_Ptr {
	jule::Ptr<_1c0109324_TypeKind> _field_Elem = jule::Ptr<_1c0109324_TypeKind>();
	

	_1c0115ae4_Ptr(void) = default;

	inline bool operator==(_1c0115ae4_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1c0115ae4_Ptr _other) { return !this->operator==(_other); }


};
struct _1c0116a3a_referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1c0116a3a_referencer(void) = default;

	inline bool operator==(_1c0116a3a_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1c0116a3a_referencer _other) { return !this->operator==(_other); }


};
inline void _1c0118058_pushErr(_1c011784e_typeChecker*, jule::Ptr<_1d675d511_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c0118234_allowBuiltin(_1c011784e_typeChecker*);
inline void _1c0118410_disallowBuiltin(_1c011784e_typeChecker*);
inline jule::Ptr<_1c010dceb_Prim> _1c011871d_buildPrim(_1c011784e_typeChecker*, jule::Ptr<_1be3970da_IdentTypeDecl>&);
inline void _1c30455ae_pushReference(_1c011784e_typeChecker*, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c304864a_pushReference(_1c011784e_typeChecker*, jule::Ptr<_1be47159e_Trait>&);
inline void _1c0118c18_pushReferenceByKind(_1c011784e_typeChecker*, jule::Ptr<_1c0109324_TypeKind>&);
inline void _1c01190d1_pushCycleError(_1c011784e_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1c0119488_checkCrossCycle(_1c011784e_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1c0119840_checkIllegalCycles(_1c011784e_typeChecker*, jule::Ptr<_1be3970da_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1c0108de5_Kind> _1c0119be7_fromTypeAlias(_1c011784e_typeChecker*, jule::Ptr<_1be3970da_IdentTypeDecl>&, jule::Ptr<_1c0108631_TypeAlias>&);
inline jule::Ptr<_1be4736e4_Enum> _1c011a09e_fromEnum(_1c011784e_typeChecker*, jule::Ptr<_1be3970da_IdentTypeDecl>&, jule::Ptr<_1be4736e4_Enum>&);
inline jule::Ptr<_1be474cde_TypeEnum> _1c011a456_fromTypeEnum(_1c011784e_typeChecker*, jule::Ptr<_1be3970da_IdentTypeDecl>&, jule::Ptr<_1be474cde_TypeEnum>&);
inline jule::Ptr<_1be47159e_Trait> _1c011a80d_fromTrait(_1c011784e_typeChecker*, jule::Ptr<_1be3970da_IdentTypeDecl>&, jule::Ptr<_1be47159e_Trait>&);
inline jule::Bool _1c011abb5_checkStructIns(_1c011784e_typeChecker*, jule::Ptr<_1be3b359b_StructIns>&, jule::Ptr<_1d675d511_Token>&);
inline void _1c011ae5c_appendUsedStructReference(_1c011784e_typeChecker*, jule::Ptr<_1be387251_Struct>&);
inline jule::Ptr<_1be3b359b_StructIns> _1c011b325_buildStructInstance(_1c011784e_typeChecker*, jule::Ptr<_1be3970da_IdentTypeDecl>&, jule::Ptr<_1be387251_Struct>&);
inline jule::Ptr<_1be3b359b_StructIns> _1c011b6cc_fromStruct(_1c011784e_typeChecker*, jule::Ptr<_1be3970da_IdentTypeDecl>&, jule::Ptr<_1be387251_Struct>&);
inline jule::Trait<_1c0108de5_Kind> _1c011b9da_getDef(_1c011784e_typeChecker*, jule::Ptr<_1be3970da_IdentTypeDecl>&);
inline jule::Trait<_1c0108de5_Kind> _1c011bce8_buildIdent(_1c011784e_typeChecker*, jule::Ptr<_1be3970da_IdentTypeDecl>);
inline jule::Trait<_1c0108de5_Kind> _1c011c106_buildSubIdent(_1c011784e_typeChecker*, jule::Ptr<_1be397739_SubIdentTypeDecl>);
inline jule::Ptr<_1c0112580_Sptr> _1c011c414_buildSptrFromType(_1c011784e_typeChecker*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Ptr<_1c0112580_Sptr> _1c011c722_buildSptr(_1c011784e_typeChecker*, jule::Ptr<_1be397dcc_SptrTypeDecl>);
inline jule::Ptr<_1c0115ae4_Ptr> _1c011ca30_buildPtrFromType(_1c011784e_typeChecker*, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Ptr<_1c0115ae4_Ptr> _1c011cd3d_buildPtr(_1c011784e_typeChecker*, jule::Ptr<_1be3988a0_PtrTypeDecl>);
inline jule::Ptr<_1c0112edc_Slc> _1c011d14b_buildSlc(_1c011784e_typeChecker*, jule::Ptr<_1be3982c8_SlcTypeDecl>);
inline jule::Ptr<_1c0115187_Arr> _1c011d459_buildArr(_1c011784e_typeChecker*, jule::Ptr<_1be399032_ArrTypeDecl>);
inline jule::Ptr<_1c0114593_Map> _1c011d767_buildMap(_1c011784e_typeChecker*, jule::Ptr<_1be399780_MapTypeDecl>);
inline jule::Ptr<_1c0113a6a_Tuple> _1c011da75_buildTuple(_1c011784e_typeChecker*, jule::Ptr<_1be3985b4_TupleTypeDecl>);
inline jule::Bool _1c011dd83_checkFnTypes(_1c011784e_typeChecker*, jule::Ptr<_1be462392_FnIns>&);
inline jule::Ptr<_1be462392_FnIns> _1c011e191_buildFn(_1c011784e_typeChecker*, jule::Ptr<_1be3a8838_FnDecl>);
inline jule::Trait<_1c0108de5_Kind> _1c011e49e_buildByNamespace(_1c011784e_typeChecker*, jule::Ptr<_1be397ae1_NamespaceTypeDecl>);
inline jule::Ptr<_1c0109324_TypeKind> _1c011e7ac_build(_1c011784e_typeChecker*, jule::Any&);
inline jule::Ptr<_1c0109324_TypeKind> _1c011eaba_checkDecl(_1c011784e_typeChecker*, jule::Ptr<_1be396a24_TypeDecl>&);
inline void _1c011ed40_check(_1c011784e_typeChecker*, jule::Ptr<_1c010d47c_TypeSymbol>&);
struct _1c011784e_typeChecker {
	jule::Ptr<_1c0064504_Sema> _field_s = jule::Ptr<_1c0064504_Sema>();
	jule::Trait<_1c0124e55_Lookup> _field_rootLookup = jule::Trait<_1c0124e55_Lookup>();
	jule::Trait<_1c0124e55_Lookup> _field_lookup = jule::Trait<_1c0124e55_Lookup>();
	jule::Ptr<_1c0116a3a_referencer> _field_referencer = jule::Ptr<_1c0116a3a_referencer>();
	jule::Ptr<_1be465263_ReferenceStack> _field_refers = jule::Ptr<_1be465263_ReferenceStack>();
	jule::Ptr<_1d675d511_Token> _field_errorToken = jule::Ptr<_1d675d511_Token>();
	jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>> _field_ignoreGenerics = jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>();
	jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _field_useGenerics = jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>();
	jule::Bool _field_notPlain = jule::Bool();
	jule::Bool _field_disBuiltin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1c0108631_TypeAlias> _field_ownerAlias = jule::Ptr<_1c0108631_TypeAlias>();
	jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _field_bannedGenerics = jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1c011784e_typeChecker(void) = default;

	inline bool operator==(_1c011784e_typeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_rootLookup == _other._field_rootLookup &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_errorToken == _other._field_errorToken &&
			this->_field_ignoreGenerics == _other._field_ignoreGenerics &&
			this->_field_useGenerics == _other._field_useGenerics &&
			this->_field_notPlain == _other._field_notPlain &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_selection == _other._field_selection &&
			this->_field_ownerAlias == _other._field_ownerAlias &&
			this->_field_bannedGenerics == _other._field_bannedGenerics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1c011784e_typeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1c01204a0_identTypeDecl(jule::Str&, jule::Ptr<_1be3970da_IdentTypeDecl>);
inline jule::Bool static__1c01207e1_exist(jule::Str&, jule::Any&);
struct _1c0120060_identTypeLookup {
	

	_1c0120060_identTypeLookup(void) = default;

	inline bool operator==(_1c0120060_identTypeLookup _other) { return true; }

	inline bool operator!=(_1c0120060_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1c097c34a_FileInfo {
	jule::Ptr<_1be3621a4_Ast> _field_Ast = jule::Ptr<_1be3621a4_Ast>();
	jule::Slice<_1d6435804_Log> _field_Errors = jule::Slice<_1d6435804_Log>();
	

	_1c097c34a_FileInfo(void) = default;

	inline bool operator==(_1c097c34a_FileInfo _other) {
		return 
			this->_field_Ast == _other._field_Ast &&
			this->_field_Errors == _other._field_Errors;
	}

	inline bool operator!=(_1c097c34a_FileInfo _other) { return !this->operator==(_other); }


};
struct _1c09c5a9c_stmt {
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1c09c5a9c_stmt(void) = default;

	inline bool operator==(_1c09c5a9c_stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1c09c5a9c_stmt _other) { return !this->operator==(_other); }


};
inline void _1c09c6a59_stop(_1c09c63c7_scopeParser*);
inline jule::Bool _1c09c6cbd_stopped(_1c09c63c7_scopeParser*);
inline jule::Bool _1c09c7032_finished(_1c09c63c7_scopeParser*);
inline jule::Bool _1c09c7296_isLastSt(_1c09c63c7_scopeParser*);
inline void _1c09c75b5_pushErr(_1c09c63c7_scopeParser*, jule::Ptr<_1d675d511_Token>, jule::Str);
inline void _1c09c78d4_pushSuggestion(_1c09c63c7_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1c09c7b59_insertAsNext(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1c09c5a9c_stmt> _1c09c7dbd_next(_1c09c63c7_scopeParser*);
inline jule::Ptr<_1be3a6d42_ScopeTree> _1c09c8275_buildScope(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1be3a9817_VarDecl> _1c09c8583_buildVarSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3a9bbe_RetSt> _1c09c8891_buildRetSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3aa32e_Iter> _1c09c8b9e_buildWhileNextIter(_1c09c63c7_scopeParser*, jule::Ptr<_1c09c5a9c_stmt>&);
inline jule::Ptr<_1be3aab04_WhileKind> _1c09c8eac_buildWhileIterKind(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c09c92ba_getRangeKindKeysTokens(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3a9817_VarDecl> _1c09c95c8_buildRangeKindKey(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Slice<jule::Ptr<_1be3a9817_VarDecl>> _1c09c98d6_buildRangeKindKeys(_1c09c63c7_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>&);
inline void _1c09c9c27_setupRangeKindKeysPlain(_1c09c63c7_scopeParser*, jule::Ptr<_1be3ab495_RangeKind>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09ca079_setupRangeKindKeysExplicit(_1c09c63c7_scopeParser*, jule::Ptr<_1be3ab495_RangeKind>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09ca3a9_setupRangeKindKeys(_1c09c63c7_scopeParser*, jule::Ptr<_1be3ab495_RangeKind>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3ab495_RangeKind> _1c09ca80a_buildRangeIterKind(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Any _1c09cabb2_buildCommonIterKind(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Ptr<_1be3aa32e_Iter> _1c09caec0_buildCommonIter(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3aa32e_Iter> _1c09cb2cd_buildIterSt(_1c09c63c7_scopeParser*, jule::Ptr<_1c09c5a9c_stmt>&);
inline jule::Ptr<_1be3ab84c_BreakSt> _1c09cb5db_buildBreakSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3abc04_ContSt> _1c09cb8e9_buildContSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3ac177_If> _1c09cbc07_buildIf(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3ac52e_Else> _1c09cc015_buildElse(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3ac9a2_Conditional> _1c09cc323_buildIfElseChain(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be39cb3a_CoExpr> _1c09cc631_buildCoCallSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a4867_GotoSt> _1c09cc93e_buildGotoSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3a4b53_FallSt> _1c09ccc4c_buildFallSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3ad178_TypeAliasDecl> _1c09cd05a_buildTypeAliasSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09cd4bc_pushCaseExpr(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>, jule::Ptr<_1d675d511_Token>, jule::Bool, jule::Slice<jule::Ptr<_1be39b045_Expr>>&);
inline jule::Slice<jule::Ptr<_1be39b045_Expr>> _1c09cd874_buildCaseExprs(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Bool);
inline jule::Ptr<_1be3a6d42_ScopeTree> _1c09cdb82_buildCaseScope(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline std::tuple<jule::Ptr<_1be3ad5eb_Case>,jule::Bool> _1c09ce039_buildCase(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1be3ad5eb_Case>>,jule::Ptr<_1be3ac52e_Else>> _1c09ce3e1_buildCases(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>, jule::Bool);
inline jule::Ptr<_1be3adcc2_MatchCase> _1c09ce6ee_buildMatchCase(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a6d42_ScopeTree> _1c09cea0c_buildScopeSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a44b0_LabelSt> _1c09ced1a_buildLabelSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1c09d0128_buildIdSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1c09de148_assignInfo> _1c09d0436_buildAssignInfo(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3a525d_AssignLeft> _1c09d0744_buildAssignL(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Slice<jule::Ptr<_1be3a525d_AssignLeft>> _1c09d0a52_buildAssignLs(_1c09c63c7_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>&);
inline std::tuple<jule::Ptr<_1be3a579c_AssignSt>,jule::Bool> _1c09d0d60_buildPlainAssign(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline std::tuple<jule::Ptr<_1be3a579c_AssignSt>,jule::Bool> _1c09d116d_buildDeclAssign(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline std::tuple<jule::Ptr<_1be3a579c_AssignSt>,jule::Bool> _1c09d147b_buildAssignSt(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be39b8d6_UseExpr> _1c09d1789_buildUseExpr(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Any _1c09d1a97_buildSt(_1c09c63c7_scopeParser*, jule::Ptr<_1c09c5a9c_stmt>&);
inline void _1c09d1db6_build(_1c09c63c7_scopeParser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Ptr<_1be3a6d42_ScopeTree>&);
struct _1c09c63c7_scopeParser {
	jule::Ptr<_1c09e2976_parser> _field_p = jule::Ptr<_1c09e2976_parser>();
	jule::Ptr<_1be3a6d42_ScopeTree> _field_s = jule::Ptr<_1be3a6d42_ScopeTree>();
	jule::Slice<jule::Ptr<_1c09c5a9c_stmt>> _field_stmts = jule::Slice<jule::Ptr<_1c09c5a9c_stmt>>();
	jule::I64 _field_pos = jule::I64();
	

	_1c09c63c7_scopeParser(void) = default;

	inline bool operator==(_1c09c63c7_scopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1c09c63c7_scopeParser _other) { return !this->operator==(_other); }


};
inline void _1c09d30d7_pushErr(_1c09d27e0_exprBuilder*, jule::Ptr<_1d675d511_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c09d3406_pushSuggestion(_1c09d27e0_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1be39bbc2_TupleExpr> _1c09d3714_buildTuple(_1c09d27e0_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>&);
inline jule::Ptr<_1be39c079_LitExpr> _1c09d3a22_buildLit(_1c09d27e0_exprBuilder*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1be396a24_TypeDecl> _1c09d3d30_buildPrimitiveType(_1c09d27e0_exprBuilder*, jule::Ptr<_1d675d511_Token>&);
inline jule::Any _1c09d413d_buildSingle(_1c09d27e0_exprBuilder*, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1be39d0ad_IdentExpr> _1c09d444b_buildCppLinkedIdent(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be39d7b7_UnaryExpr> _1c09d4759_buildUnary(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be39e851_SubIdentExpr> _1c09d4a67_buildObjSubIdent(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be39e3cd_NsSelectionExpr> _1c09d4d75_buildNsSubIdent(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be396a24_TypeDecl> _1c09d5183_buildType(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Any _1c09d5491_buildSubIdent(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be39db6e_VariadicExpr> _1c09d579e_buildVariadic(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Any _1c09d5aac_buildOpRight(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be39b331_RangeExpr> _1c09d5ddc_buildBetweenParentheses(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be39e026_CastExpr> _1c09d620b_tryBuildCast(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09d65c4_pushArg(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1be39b045_Expr>>&, jule::Slice<jule::Ptr<_1d675d511_Token>>, jule::Ptr<_1d675d511_Token>);
inline jule::Slice<jule::Ptr<_1be39b045_Expr>> _1c09d68d2_buildArgs(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _1c09d6be0_buildCallGenerics(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a0313_FnCallExpr> _1c09d7141_buildFnCall(_1c09d27e0_exprBuilder*, jule::Ptr<_1d675d511_Token>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Any _1c09d744e_buildParenthesesRange(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be39c783_UnsafeExpr> _1c09d775c_buildUnsafeExpr(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a8838_FnDecl> _1c09d7a6a_buildAnonFn(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Any _1c09d7d78_buildUnsafe(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09d8241_pushRangeLitPart(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>, jule::Ptr<_1d675d511_Token>, jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c09d8571_getBraceRangeLitExprParts(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a0c92_FieldExprPair> _1c09d8890_buildFieldExprPair(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be39b045_Expr> _1c09d8b9d_buildStructLitExpr(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Slice<jule::Ptr<_1be39b045_Expr>> _1c09d8eab_buildStructLitExprs(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3a14e0_StructLit> _1c09d92db_buildTypedStructLiteral(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be39b045_Expr> _1c09d960a_buildBraceLitPart(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3a1963_BraceLit> _1c09d9918_buildBraceLit(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Any _1c09d9c26_buildBraceRange(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c09da034_getEnumerableParts(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a28ed_SliceExpr> _1c09da342_buildSlice(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a328e_IndexingExpr> _1c09da793_buildIndexing(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>, jule::Slice<jule::Ptr<_1d675d511_Token>>, jule::Ptr<_1d675d511_Token>);
inline jule::Ptr<_1be3a3899_SlicingExpr> _1c09dad37_buildSlicing(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Ptr<_1d675d511_Token>&, jule::Ptr<_1d675d511_Token>);
inline jule::Any _1c09db145_buildBracketRange(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Any _1c09db453_buildData(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Any _1c09db80a_buildBinop(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::I64);
inline jule::Any _1c09dbb18_build(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Any _1c09dbe26_buildKind(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be39b045_Expr> _1c09dc234_buildFromTokens(_1c09d27e0_exprBuilder*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
struct _1c09d27e0_exprBuilder {
	jule::Ptr<_1c09e2976_parser> _field_p = jule::Ptr<_1c09e2976_parser>();
	

	_1c09d27e0_exprBuilder(void) = default;

	inline bool operator==(_1c09d27e0_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1c09d27e0_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1c09de148_assignInfo {
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_l = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_r = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	jule::Ptr<_1d675d511_Token> _field_setter = jule::Ptr<_1d675d511_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1c09de148_assignInfo(void) = default;

	inline bool operator==(_1c09de148_assignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1c09de148_assignInfo _other) { return !this->operator==(_other); }


};
inline void _1c09e2ca6_stop(_1c09e2976_parser*);
inline jule::Bool _1c09e301a_stopped(_1c09e2976_parser*);
inline void _1c09e33d3_pushErr(_1c09e2976_parser*, jule::Ptr<_1d675d511_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1c09e3702_pushSuggestion(_1c09e2976_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1be39b045_Expr> _1c09e3a10_buildExpr(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be36332b_Directive> _1c09e3d1d_buildDirective(_1c09e2976_parser*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline void _1c09e4093_pushDirective(_1c09e2976_parser*, jule::Ptr<_1be36332b_Directive>);
inline jule::Ptr<_1be3a6d42_ScopeTree> _1c09e444a_buildScope(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Ptr<_1d675d511_Token>);
inline std::tuple<jule::Ptr<_1be396a24_TypeDecl>,jule::Bool> _1c09e489b__buildType(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_1be396a24_TypeDecl>,jule::Bool> _1c09e4cec_buildType(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1be3ad178_TypeAliasDecl> _1c09e510a_buildTypeAliasDecl(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09e5429_buildVarTypeAndExpr(jule::Ptr<_1c09e2976_parser>, jule::Ptr<_1be3a9817_VarDecl>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09e5748_buildVarCommon(jule::Ptr<_1c09e2976_parser>, jule::Ptr<_1be3a9817_VarDecl>&, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline void _1c09e5b11_buildVarBegin(_1c09e2976_parser*, jule::Ptr<_1be3a9817_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3a9817_VarDecl> _1c09e5e1e_buildVar(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a4108_GenericDecl> _1c09e622c_buildGeneric(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>> _1c09e65d4_buildGenerics(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Ptr<_1d675d511_Token>&);
inline jule::Ptr<_1be3a7518_ParamDecl> _1c09e68e2_buildSelfParam(_1c09e2976_parser*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline void _1c09e6caa_paramTypeBegin(_1c09e2976_parser*, jule::Ptr<_1be3a7518_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09e70c9_buildParamType(jule::Ptr<_1c09e2976_parser>, jule::Ptr<_1be3a7518_ParamDecl>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09e73e8_buildParamBody(jule::Ptr<_1c09e2976_parser>, jule::Ptr<_1be3a7518_ParamDecl>&, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a7518_ParamDecl> _1c09e7706_buildParam(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline void _1c09e797b_checkParams(_1c09e2976_parser*, jule::Slice<jule::Ptr<_1be3a7518_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1be3a7518_ParamDecl>> _1c09e7d33_buildParams(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1be399b37_RetTypeDecl>,jule::Bool> _1c09e81da_buildMultiRetType(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_1be399b37_RetTypeDecl>,jule::Bool> _1c09e8592_buildRetType(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::I64&);
inline jule::Ptr<_1be3a8838_FnDecl> _1c09e89e3_buildFnPrototype(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1be3a8838_FnDecl> _1c09e8e44_buildFn(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1d675d511_Token>> _1c09e9252_getUseDeclSelectors(_1c09e2976_parser*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline void _1c09e9571_buildCppUseDecl(_1c09e2976_parser*, jule::Ptr<_1be3ae564_UseDecl>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09e9890_buildStdUseDecl(_1c09e2976_parser*, jule::Ptr<_1be3ae564_UseDecl>&, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline void _1c09e9bae_buildIdentUseDecl(_1c09e2976_parser*, jule::Ptr<_1be3ae564_UseDecl>&, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline void _1c09e9ecd_parseUseDecl(_1c09e2976_parser*, jule::Ptr<_1be3ae564_UseDecl>&, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3ae564_UseDecl> _1c09ea385_buildUseDecl(_1c09e2976_parser*, jule::Slice<jule::Ptr<_1d675d511_Token>>, jule::Bool);
inline jule::Ptr<_1be396a24_TypeDecl> _1c09ea73c_buildTypeEnumItemKind(jule::Ptr<_1c09e2976_parser>, jule::I64&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Slice<jule::Ptr<_1be3b1016_TypeEnumItemDecl>> _1c09eaa4a_buildTypeEnumItems(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3b1214_TypeEnumDecl> _1c09ead58_buildTypeEnumDecl(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be39b045_Expr> _1c09eb210_buildEnumItemExpr(jule::Ptr<_1c09e2976_parser>, jule::I64&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Slice<jule::Ptr<_1be3ae9d7_EnumItemDecl>> _1c09eb51d_buildEnumItems(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3b0510_EnumDecl> _1c09eb82b_buildEnumDecl(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Any _1c09ebb39_buildNodeEnumDecl(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3b1764_FieldDecl> _1c09ebe47_buildField(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Slice<jule::Ptr<_1be3b1764_FieldDecl>> _1c09ec255_buildStructDeclFields(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3b20c2_StructDecl> _1c09ec563_buildStructDecl(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09ec7d8_checkMethodReceiver(_1c09e2976_parser*, jule::Ptr<_1be3a8838_FnDecl>&);
inline jule::Slice<jule::Ptr<_1be3a8838_FnDecl>> _1c09ecae6_buildTraitMethods(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3b26cc_TraitDecl> _1c09ece04_buildTraitDecl(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3a8838_FnDecl> _1c09ed212_buildCppLinkFn(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3a9817_VarDecl> _1c09ed520_buildCppLinkVar(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3b20c2_StructDecl> _1c09ed82d_buildCppLinkStruct(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3ad178_TypeAliasDecl> _1c09edb3b_buildCppLinkTypeAlias(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be3ae564_UseDecl> _1c09ede49_buildCppLinkUse(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Any _1c09ee257_buildCppLink(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3a8838_FnDecl> _1c09ee565_getMethod(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c09ee884_parseImplBody(jule::Ptr<_1c09e2976_parser>, jule::Ptr<_1be3b2cd7_Impl>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be3b2cd7_Impl> _1c09eeb92_buildImpl(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Any _1c09eeea0_buildNodeData(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c0a00225_applyFnMeta(_1c09e2976_parser*, jule::Ptr<_1be3a8838_FnDecl>&);
inline void _1c0a0049a_applyMeta(_1c09e2976_parser*, _1be362e30_Node&);
inline void _1c0a00720_pushUseDecl(jule::Ptr<_1c09e2976_parser>, jule::Ptr<_1be3ae564_UseDecl>&);
inline jule::Bool _1c0a00a2d_pushMetaNodes(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline _1be362e30_Node _1c0a00d3b_parseNode(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c0a010b1_appendNode(jule::Ptr<_1c09e2976_parser>, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c0a01523_removeRange(_1c09e2976_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Slice<jule::I64>&);
inline void _1c0a018db_pushWrongOrderCloseErr(_1c09e2976_parser*, jule::Ptr<_1d675d511_Token>&, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Slice<jule::I64>&);
inline void _1c0a01d4d_pushRangeClose(_1c09e2976_parser*, jule::Ptr<_1d675d511_Token>, jule::Str, jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Slice<jule::I64>&);
inline void _1c0a020c3_checkRanges(_1c09e2976_parser*, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline void _1c0a02348_parse(jule::Ptr<_1c09e2976_parser>, jule::Ptr<_1d676389b_File>&);
struct _1c09e2976_parser {
	jule::Ptr<_1be3621a4_Ast> _field_ast = jule::Ptr<_1be3621a4_Ast>();
	jule::Slice<jule::Ptr<_1be36332b_Directive>> _field_directives = jule::Slice<jule::Ptr<_1be36332b_Directive>>();
	jule::Slice<_1d6435804_Log> _field_errors = jule::Slice<_1d6435804_Log>();
	

	_1c09e2976_parser(void) = default;

	inline bool operator==(_1c09e2976_parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1c09e2976_parser _other) { return !this->operator==(_other); }


};
inline void _1c0a040e7_pushErr(_1c0a03a53_typeBuilder*, jule::Ptr<_1d675d511_Token>, jule::Str);
inline void _1c0a04416_pushSuggestion(_1c0a03a53_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a0467a_buildPrim(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a048de_buildNamespace(_1c0a03a53_typeBuilder*);
inline jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _1c0a04b53_buildGenerics(_1c0a03a53_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c0a04db7_identGenerics(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a0512b_buildIdent(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a05390_buildCppLink(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a05604_buildFn(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a05868_buildPtr(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a05acc_buildSptr(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a05d41_buildOp(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a060a5_buildSlc(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a06319_buildArr(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a066c1_buildMap(_1c0a03a53_typeBuilder*, jule::I64, jule::I64);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a06935_buildEnumerable(_1c0a03a53_typeBuilder*);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a06b99_step(_1c0a03a53_typeBuilder*);
inline std::tuple<jule::Ptr<_1be396a24_TypeDecl>,jule::Bool> _1c0a06e0d_build(_1c0a03a53_typeBuilder*);
struct _1c0a03a53_typeBuilder {
	jule::Ptr<_1c09e2976_parser> _field_p = jule::Ptr<_1c09e2976_parser>();
	jule::Slice<jule::Ptr<_1d675d511_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1c0a03a53_typeBuilder(void) = default;

	inline bool operator==(_1c0a03a53_typeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1c0a03a53_typeBuilder _other) { return !this->operator==(_other); }


};
struct _1c02b7db7_CompileInfo {
	jule::Bool _field_Prod = jule::Bool();
	jule::Bool _field_Test = jule::Bool();
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1c02b7db7_CompileInfo(void) = default;

	inline bool operator==(_1c02b7db7_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1c02b7db7_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1c02b976a_pushErr(_1c02b921a_directiveEval*, jule::Ptr<_1d675d511_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c02b9b22_splitOperans(_1c02b921a_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Bool _1c02b9e30_evalDirectiveIdent(_1c02b921a_directiveEval*, jule::Str);
inline jule::Bool _1c02ba23d_evalDirectivePart(_1c02b921a_directiveEval*, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Bool _1c02ba4a2_eval(_1c02b921a_directiveEval*);
struct _1c02b921a_directiveEval {
	jule::Slice<_1d6435804_Log> _field_logs = jule::Slice<_1d6435804_Log>();
	jule::Ptr<_1be36332b_Directive> _field_d = jule::Ptr<_1be36332b_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1c02b921a_directiveEval(void) = default;

	inline bool operator==(_1c02b921a_directiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1c02b921a_directiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c065a589_JuleImporter> static__1c01da9aa_New(_1c02b7db7_CompileInfo);
inline jule::Slice<jule::Ptr<_1c005b3a8_ImportInfo>> _1c01ea448_AllPackages(_1c065a589_JuleImporter*);
inline void _1c020d8bd_SetModPath(_1c065a589_JuleImporter*, jule::Str);
inline jule::Str _1c064a029_GetModPath(_1c065a589_JuleImporter*);
inline jule::Str _1c0651c01_ModById(_1c065a589_JuleImporter*, jule::I64);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c079e733_GetImport(_1c065a589_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1be3621a4_Ast>>,jule::Slice<_1d6435804_Log>> _1c07a895c_ImportPackage(_1c065a589_JuleImporter*, jule::Str, jule::Bool);
inline void _1c07c11b1_Imported(_1c065a589_JuleImporter*, jule::Ptr<_1c005b3a8_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1d6435804_Log>> _1c07cb650_isPassBuildDirectives(_1c065a589_JuleImporter*, jule::Ptr<_1be3621a4_Ast>&);
struct _1c065a589_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1c005b3a8_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1c005b3a8_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1c065a589_JuleImporter(void) = default;

	inline bool operator==(_1c065a589_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1c065a589_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1c07bb112_OrderedDefines {
	jule::Slice<jule::Ptr<_1be387251_Struct>> _field_Structs = jule::Slice<jule::Ptr<_1be387251_Struct>>();
	jule::Slice<jule::Ptr<_1c0081334_Var>> _field_Globals = jule::Slice<jule::Ptr<_1c0081334_Var>>();
	

	_1c07bb112_OrderedDefines(void) = default;

	inline bool operator==(_1c07bb112_OrderedDefines _other) {
		return 
			this->_field_Structs == _other._field_Structs &&
			this->_field_Globals == _other._field_Globals;
	}

	inline bool operator!=(_1c07bb112_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c3581c93_isCommonOrdered(jule::Slice<jule::Ptr<_1be387251_Struct>>&, jule::Ptr<_1be387251_Struct>);
inline jule::Bool _1c358a153_isCommonOrdered(jule::Slice<jule::Ptr<_1c0081334_Var>>&, jule::Ptr<_1c0081334_Var>);
inline void _1c357ccd3_orderCommon(jule::Slice<jule::Ptr<_1be387251_Struct>>&);
inline void _1c357d003_orderCommon(jule::Slice<jule::Ptr<_1c0081334_Var>>&);
inline void static__1c08e942c_orderStructures(jule::Slice<jule::Ptr<_1be387251_Struct>>&);
inline void static__1c091801c_orderVars(jule::Slice<jule::Ptr<_1c0081334_Var>>&);
struct _1c079c29c_defineOrderer {
	

	_1c079c29c_defineOrderer(void) = default;

	inline bool operator==(_1c079c29c_defineOrderer _other) { return true; }

	inline bool operator!=(_1c079c29c_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1c0ad5706_liveTable {
	jule::Slice<jule::Ptr<_1c0081334_Var>> _field_vars = jule::Slice<jule::Ptr<_1c0081334_Var>>();
	jule::Slice<jule::Ptr<_1be462392_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1be462392_FnIns>>();
	jule::Slice<jule::Ptr<_1be3b359b_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1be3b359b_StructIns>>();
	jule::Slice<jule::Ptr<_1be47159e_Trait>> _field_traits = jule::Slice<jule::Ptr<_1be47159e_Trait>>();
	

	_1c0ad5706_liveTable(void) = default;

	inline bool operator==(_1c0ad5706_liveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1c0ad5706_liveTable _other) { return !this->operator==(_other); }


};
inline void _1c0b17815_optimizeChild(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c00487b3_Scope>&);
inline void _1c0b17aac_optimizeBodyChildExceptional(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c00487b3_Scope>&);
inline void _1c0b17d43_optimizeBodyChild(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c00487b3_Scope>&);
inline void _1c0b180b8_optimizeExprModel(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Any&);
inline void _1c0b18294_eliminateFollowed(_1c0b1733c_scopeDeadCode*);
inline void _1c0b18519_pushGoto(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c0049be3_GotoSt>);
inline void _1c0b1878e_pushLabel(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c0049a06_Label>);
inline void _1c0b18a14_optimizeRangeIter(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c0049440_RangeIter>);
inline void _1c0b18c89_optimizeWhileIter(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c0049253_WhileIter>);
inline void _1c0b1900e_optimizeInfIter(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c0049066_InfIter>);
inline void _1c0b19284_optimizeConditional(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c0048d79_Conditional>);
inline void _1c0b19509_optimizeMatch(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c004a496_Match>);
inline void _1c0b1977e_optimizeAssign(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c004a0bc_Assign>);
inline void _1c0b19a04_optimizeMultiAssign(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Ptr<_1c004a2a9_MultiAssign>);
inline void _1c0b19c79_optimizeStmt(jule::Ptr<_1c0b1733c_scopeDeadCode>, jule::Any);
inline void _1c0b19e55_optimizeStmts(jule::Ptr<_1c0b1733c_scopeDeadCode>);
struct _1c0b1733c_scopeDeadCode {
	jule::Ptr<_1c0b1733c_scopeDeadCode> _field_parent = jule::Ptr<_1c0b1733c_scopeDeadCode>();
	jule::Ptr<_1c00487b3_Scope> _field_s = jule::Ptr<_1c00487b3_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();
	jule::Ptr<jule::Slice<jule::Ptr<_1c0049a06_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1c0049a06_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1c0049be3_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1c0049be3_GotoSt>>>();
	jule::Bool _field_except = jule::Bool();
	

	_1c0b1733c_scopeDeadCode(void) = default;

	inline bool operator==(_1c0b1733c_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1c0b1733c_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1c0b1b297_exprDeadCode static__1c0b1b891_new(jule::Ptr<_1c0b1733c_scopeDeadCode>&);
inline void _1c0b1bb16_binary(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be457464_BinopExprModel>);
inline void _1c0b1bd8b_unary(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be457651_UnaryExprModel>);
inline void _1c0b1c111_structureLit(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be457a2a_StructLitExprModel>);
inline void _1c0b1c386_allocStructure(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be457c17_AllocStructLitExprModel>);
inline void _1c0b1c60b_casting(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be457e04_CastingExprModel>);
inline void _1c0b1c881_args(_1c0b1b297_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _1c0b1cb06_funcCall(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be4580e1_FnCallExprModel>);
inline void _1c0b1cd7b_slice(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be4582cd_SliceExprModel>);
inline void _1c0b1d101_array(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be459752_ArrayExprModel>);
inline void _1c0b1d376_indexing(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be4584ba_IndexingExprModel>);
inline void _1c0b1d5eb_anonFunc(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be4586a7_AnonFnExprModel>);
inline void _1c0b1d871_map(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be458a81_MapExprModel>);
inline void _1c0b1dae6_slicing(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be458c6d_SlicingExprModel>);
inline void _1c0b1dd6b_traitSub(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be458e5a_TraitSubIdentExprModel>);
inline void _1c0b1e0e1_structureSub(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be459378_StructSubIdentExprModel>);
inline void _1c0b1e366_commonSub(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be459b2b_CommonSubIdentExprModel>);
inline void _1c0b1e5db_tuple(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be459d18_TupleExprModel>);
inline void _1c0b1e861_newCall(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel>);
inline void _1c0b1ead6_outCall(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45a005_BuiltinOutCallExprModel>);
inline void _1c0b1ed5b_outlnCall(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>);
inline void _1c0b200d1_panicCall(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>);
inline void _1c0b20356_assertCall(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45a995_BuiltinAssertCallExprModel>);
inline void _1c0b205cb_errorCall(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>);
inline void _1c0b20851_makeCall(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>);
inline void _1c0b20ac6_appendCall(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>);
inline void _1c0b20d4b_cloneCall(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel>);
inline void _1c0b210c1_sizeof(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be459147_SizeofExprModel>);
inline void _1c0b21346_alignof(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45b8a8_AlignofExprModel>);
inline void _1c0b215bb_integratedToStr(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45bc82_IntegratedToStrExprModel>);
inline void _1c0b21841_free(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45c15b_FreeExprModel>);
inline void _1c0b21ab6_backendEmit(_1c0b1b297_exprDeadCode*, jule::Ptr<_1be45be6e_BackendEmitExprModel>);
inline void _1c0b21d3b_optimize(_1c0b1b297_exprDeadCode*, jule::Any&);
struct _1c0b1b297_exprDeadCode {
	jule::Ptr<_1c0b1733c_scopeDeadCode> _field_s = jule::Ptr<_1c0b1733c_scopeDeadCode>();
	

	_1c0b1b297_exprDeadCode(void) = default;

	inline bool operator==(_1c0b1b297_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1c0b1b297_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1bcbe5088_UnsafeBinopExprModel {
	jule::Ptr<_1be457464_BinopExprModel> _field_Node = jule::Ptr<_1be457464_BinopExprModel>();
	

	_1bcbe5088_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1bcbe5088_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1bcbe5088_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1d6d06746_UnsafeIndexingExprModel {
	jule::Ptr<_1be4584ba_IndexingExprModel> _field_Node = jule::Ptr<_1be4584ba_IndexingExprModel>();
	

	_1d6d06746_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1d6d06746_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1d6d06746_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1bcc09ed2_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Ptr<_1be4582cd_SliceExprModel> _field_Elems = jule::Ptr<_1be4582cd_SliceExprModel>();
	

	_1bcc09ed2_PushToSliceExprModel(void) = default;

	inline bool operator==(_1bcc09ed2_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1bcc09ed2_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1bca4c7e7_MutSlicingExprModel {
	jule::Ptr<_1d675d511_Token> _field_Token = jule::Ptr<_1d675d511_Token>();
	jule::Any _field_Expr = jule::Any();
	jule::Any _field_Left = jule::Any();
	jule::Any _field_Right = jule::Any();
	

	_1bca4c7e7_MutSlicingExprModel(void) = default;

	inline bool operator==(_1bca4c7e7_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1bca4c7e7_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1bcaab15d_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any();
	jule::Any _field_Expr = jule::Any();
	

	_1bcaab15d_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1bcaab15d_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1bcaab15d_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d6cec495_scopeOptimizer> static__1d6d09a57_new(jule::Ptr<_1c00487b3_Scope>);
inline void _1d6d0c7c4_setCurrentStmt(_1d6cec495_scopeOptimizer*, jule::Any);
inline void _1d6d14248_optimizeData(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c00cd282_Data>);
inline void _1bca3b6d7_optimizeVar(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c0081334_Var>);
inline void _1bca4082e_optimizeConditional(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c0048d79_Conditional>);
inline void _1bca615ec_buildDefaultConstatTrueCase(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c004a9e6_Case>, jule::I64&, jule::Ptr<_1c004a496_Match>&);
inline void _1bca7e7d5_optimizeMatch(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c004a496_Match>);
inline void _1bca80572_optimizeRangeIter(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c0049440_RangeIter>);
inline void _1bca85ea1_optimizeWhileIter(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c0049253_WhileIter>);
inline jule::Bool _1bca8749c_substr(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c004a0bc_Assign>);
inline jule::Bool _1bca8802a_strInsert(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c004a0bc_Assign>);
inline jule::Bool _1bca8c6d3_strAssign(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c004a0bc_Assign>);
inline void _1bca912ca_optimizeAssign(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c004a0bc_Assign>);
inline void _1bca9bb43_optimizeMultiAssign(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c004a2a9_MultiAssign>);
inline void _1bcacb1c2_optimizeRet(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c004b002_RetSt>);
inline void _1bcad263a_optimizeStmt(_1d6cec495_scopeOptimizer*, jule::Any);
inline void _1bcb1b762_optimizeChild(_1d6cec495_scopeOptimizer*, jule::Ptr<_1c00487b3_Scope>);
inline void _1bcb22290_optimize(_1d6cec495_scopeOptimizer*);
struct _1d6cec495_scopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1c00487b3_Scope> _field_scope = jule::Ptr<_1c00487b3_Scope>();
	

	_1d6cec495_scopeOptimizer(void) = default;

	inline bool operator==(_1d6cec495_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d6cec495_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1bcbc4e69_optimize(jule::Any&);
inline jule::Bool _1bcbd0bcd_strCond(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be457464_BinopExprModel>);
inline void _1bcbdb469_binary(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be457464_BinopExprModel>);
inline void _1bcbe8c07_unary(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be457651_UnaryExprModel>);
inline void _1bcc03c9a_structureLit(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be457a2a_StructLitExprModel>);
inline void _1bcc305bd_allocStructure(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be457c17_AllocStructLitExprModel>);
inline void _1d6d10ac4_casting(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be457e04_CastingExprModel>);
inline void _1d6d0ddd0_args(_1bca3bebd_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _1bca27b46_scope(_1bca3bebd_exprOptimizer*, jule::Ptr<_1c00487b3_Scope>&);
inline void _1bcb6b3e9_funcCall(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be4580e1_FnCallExprModel>);
inline void _1bcbe056c_slice(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be4582cd_SliceExprModel>);
inline void _1bca90230_array(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be459752_ArrayExprModel>);
inline void _1bca560b4_indexing(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be4584ba_IndexingExprModel>);
inline void _1bcc3bb4b_anonFunc(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be4586a7_AnonFnExprModel>);
inline void _1bcc3c531_map(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be458a81_MapExprModel>);
inline void _1bcc3ce16_slicing(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be458c6d_SlicingExprModel>);
inline void _1bcc3e269_traitSub(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be458e5a_TraitSubIdentExprModel>);
inline void _1bcc43e3e_structureSub(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be459378_StructSubIdentExprModel>);
inline void _1bcc44824_commonSub(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be459b2b_CommonSubIdentExprModel>);
inline void _1bcc45209_tuple(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be459d18_TupleExprModel>);
inline void _1bcc45ade_newCall(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel>);
inline void _1bcc464c4_outCall(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45a005_BuiltinOutCallExprModel>);
inline void _1bcc46da9_outlnCall(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>);
inline void _1bcc478b0_panicCall(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>);
inline void _1bcc48295_assertCall(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45a995_BuiltinAssertCallExprModel>);
inline void _1bcc48b7a_errorCall(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>);
inline void _1bcc49560_makeCall(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>);
inline void _1bcc4d960_appendCall(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>);
inline void _1bcc4e345_cloneCall(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel>);
inline void _1bcc4ec2a_sizeof(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be459147_SizeofExprModel>);
inline void _1bcc53ea4_alignof(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45b8a8_AlignofExprModel>);
inline void _1bcc54889_integratedToStr(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45bc82_IntegratedToStrExprModel>);
inline void _1bcc5526e_free(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45c15b_FreeExprModel>);
inline void _1bcc55b54_backendEmit(_1bca3bebd_exprOptimizer*, jule::Ptr<_1be45be6e_BackendEmitExprModel>);
inline void _1bcc56539_do(_1bca3bebd_exprOptimizer*);
struct _1bca3bebd_exprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1bca3bebd_exprOptimizer(void) = default;

	inline bool operator==(_1bca3bebd_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1bca3bebd_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c0ae0aeb_Optimizer> static__1c0a4e582_New(jule::Ptr<_1c0977e39_IR>&);
inline void _1c0a232c0_optimizeGlobal(_1c0ae0aeb_Optimizer*, jule::Ptr<_1c0081334_Var>&);
inline void _1c0a82e78_optimizeFunction(_1c0ae0aeb_Optimizer*, jule::Ptr<_1be45e6e1_Fn>&);
inline void _1c0a83330_optimizeStruct(_1c0ae0aeb_Optimizer*, jule::Ptr<_1be387251_Struct>&);
inline void _1c0a84cb0_optimizeGlobals(_1c0ae0aeb_Optimizer*, jule::Ptr<_1c005e312_Package>&);
inline void _1c0a8ae1a_optimizeFunctions(_1c0ae0aeb_Optimizer*, jule::Ptr<_1c005e312_Package>&);
inline void _1c0a92273_optimizeStructs(_1c0ae0aeb_Optimizer*, jule::Ptr<_1c005e312_Package>&);
inline void _1c0a9a3d0_optimizePackage(_1c0ae0aeb_Optimizer*, jule::Ptr<_1c005e312_Package>&);
inline void _1c0aa59d4_Optimize(_1c0ae0aeb_Optimizer*);
struct _1c0ae0aeb_Optimizer {
	jule::Ptr<_1c0977e39_IR> _field_ir = jule::Ptr<_1c0977e39_IR>();
	

	_1c0ae0aeb_Optimizer(void) = default;

	inline bool operator==(_1c0ae0aeb_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1c0ae0aeb_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1c0b34568_Reset(void);
inline void static__1c0b35833_Print(jule::Str, jule::Str);
struct _1c0b35646_AnsiEscape {
	

	_1c0b35646_AnsiEscape(void) = default;

	inline bool operator==(_1c0b35646_AnsiEscape _other) { return true; }

	inline bool operator!=(_1c0b35646_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1c0b36ed8_LogFlat(_1d6435804_Log&);
inline void static__1c0b371e7_LogError(_1d6435804_Log&);
inline void static__1c0b37406_Log(_1d6435804_Log&);
inline void static__1c0b37615_PrintLogs(jule::Slice<_1d6435804_Log>&);
struct _1c0b36c30_Logger {
	

	_1c0b36c30_Logger(void) = default;

	inline bool operator==(_1c0b36c30_Logger _other) { return true; }

	inline bool operator!=(_1c0b36c30_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1c12108be_Unix(_1c1210517_AbsTime*);
struct _1c1210517_AbsTime {
	jule::U64 _field_Day = jule::U64();
	jule::U64 _field_WeekDay = jule::U64();
	jule::U64 _field_YearDay = jule::U64();
	jule::U64 _field_Month = jule::U64();
	jule::U64 _field_Year = jule::U64();
	jule::U64 _field_Second = jule::U64();
	jule::U64 _field_Minute = jule::U64();
	jule::U64 _field_Hour = jule::U64();
	

	_1c1210517_AbsTime(void) = default;

	inline bool operator==(_1c1210517_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1c1210517_AbsTime _other) { return !this->operator==(_other); }


};
inline _1c1210baa_Time static__1c1211051_Unix(jule::U64);
inline _1c1210baa_Time static__1c121124e_Now(void);
inline jule::U64 _1c12116a0_Unix(_1c1210baa_Time*);
inline jule::U64 _1c1211914_Day(_1c1210baa_Time*);
inline jule::U64 _1c1211b78_Month(_1c1210baa_Time*);
inline jule::U64 _1c1211ddc_Year(_1c1210baa_Time*);
inline jule::U64 _1c1212151_Second(_1c1210baa_Time*);
inline jule::U64 _1c12123b5_Minute(_1c1210baa_Time*);
inline jule::U64 _1c1212629_Hour(_1c1210baa_Time*);
inline _1c1210517_AbsTime _1c121288d_Abs(_1c1210baa_Time*);
struct _1c1210baa_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1c1210baa_Time(void) = default;

	inline bool operator==(_1c1210baa_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1c1210baa_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c118a5a2_scopeCoder> static__1c118abbd_new(jule::Ptr<_1c12163a8_ObjectCoder>&);
inline void _1c118ae43_rangeIndexIter(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0049440_RangeIter>&);
inline void _1c118b1b8_rangeHashmapIter(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0049440_RangeIter>&);
inline void _1c118b43d_ifCase(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c00489a0_If>);
inline void _1c118b6b3_conditional(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0048d79_Conditional>);
inline void _1c118b938_infIter(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0049066_InfIter>);
inline void _1c118bbad_whileIter(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0049253_WhileIter>);
inline void _1c118be33_rangeIter(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0049440_RangeIter>);
inline void _1c118c1a8_cont(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004962c_ContSt>);
inline void _1c118c42d_label(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0049a06_Label>);
inline void _1c118c6a3_gotoSt(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0049be3_GotoSt>);
inline void _1c118c928_postfix(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0049dd0_Postfix>);
inline void _1c118cb9d_assign(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004a0bc_Assign>);
inline void _1c118ce23_multiAssign(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004a2a9_MultiAssign>);
inline jule::Fn<void(void)> _1c118d231_matchExpr(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004a496_Match>);
inline void _1c118d550_case(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004a496_Match>, jule::Ptr<_1c004a9e6_Case>);
inline void _1c118d7c5_matchSt(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004a496_Match>);
inline void _1c118da4a_fallSt(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004ad15_FallSt>);
inline void _1c118dcc0_breakSt(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0049819_BreakSt>);
inline void _1c118e045_retWithVars(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004b002_RetSt>);
inline void _1c118e2ba_retTuple(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004b002_RetSt>);
inline void _1c118e540_retWithExprs(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004b002_RetSt>);
inline void _1c118e7b5_retSt(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c004b002_RetSt>);
inline void _1c118ecb0_var(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c0081334_Var>);
inline void _1c1190035_st(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Any);
inline void _1c11902aa_scopeStmts(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c00487b3_Scope>&);
inline void _1c1190530_scope(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1c00487b3_Scope>);
inline void _1c11907a5_funcScope(jule::Ptr<_1c118a5a2_scopeCoder>, jule::Ptr<_1be462392_FnIns>);
struct _1c118a5a2_scopeCoder {
	jule::Ptr<_1c12163a8_ObjectCoder> _field_oc = jule::Ptr<_1c12163a8_ObjectCoder>();
	

	_1c118a5a2_scopeCoder(void) = default;

	inline bool operator==(_1c118a5a2_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c118a5a2_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c11930e3_exprCoder> static__1c11934de_new(jule::Ptr<_1c12163a8_ObjectCoder>&);
inline void _1c1193764_string(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be3e8c63_Const>&);
inline void _1c11939d9_boolean(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be3e8c63_Const>&);
inline void _1c1193bb5_nilLit(jule::Ptr<_1c11930e3_exprCoder>);
inline jule::Bool _1c1193ec3_ftoaSpecialCases(jule::Ptr<_1c11930e3_exprCoder>, jule::F64&);
inline void _1c1194248_float32(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be3e8c63_Const>&);
inline void _1c11944bd_float64(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be3e8c63_Const>&);
inline void _1c11947dc_constant(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be3e8c63_Const>, jule::Bool);
inline void _1c1194ba5_divByZeroBinary(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1d675d511_Token>&, jule::Ptr<_1be457277_OperandExprModel>&, jule::Ptr<_1be457277_OperandExprModel>&);
inline void _1c1194e2a_unsafeBinary(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be457464_BinopExprModel>);
inline void _1c11951a0_binary(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be457464_BinopExprModel>);
inline void _1c1195425_var(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1c0081334_Var>);
inline void _1c119569a_structureIns(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be3b359b_StructIns>);
inline void _1c1195920_unary(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be457651_UnaryExprModel>);
inline void _1c1195b95_structureLit(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be457a2a_StructLitExprModel>);
inline void _1c1195e1a_allocStructure(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be457c17_AllocStructLitExprModel>);
inline void _1c1196190_casting(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be457e04_CastingExprModel>);
inline void _1c1196415_args(jule::Ptr<_1c11930e3_exprCoder>, jule::Slice<jule::Any>);
inline void _1c119668a_modelForCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Any);
inline void _1c1196910_pushCallInf(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be4580e1_FnCallExprModel>&);
inline jule::Bool _1c1196c1d_isWrapped(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be4580e1_FnCallExprModel>&);
inline void _1c1196e93_pureFuncCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be4580e1_FnCallExprModel>&);
inline void _1c1197218_funcCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be4580e1_FnCallExprModel>);
inline void _1c119748d_slice(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be4582cd_SliceExprModel>);
inline void _1c1197713_indexing(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be4584ba_IndexingExprModel>);
inline void _1c1197988_unsafeIndexing(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1d6d06746_UnsafeIndexingExprModel>);
inline void _1c1197c0d_anonFunc(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be4586a7_AnonFnExprModel>);
inline void _1c1197e83_map(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be458a81_MapExprModel>);
inline void _1c1198208_slicing(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be458c6d_SlicingExprModel>);
inline void _1c119847d_traitSub(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be458e5a_TraitSubIdentExprModel>);
inline void _1c1198703_structureSub(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be459378_StructSubIdentExprModel>);
inline void _1c1198978_commonIdent(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45993e_CommonIdentExprModel>);
inline void _1c1198bed_commonSub(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be459b2b_CommonSubIdentExprModel>);
inline void _1c1198e73_array(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be459752_ArrayExprModel>);
inline void _1c11991e8_funcInsCommon(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be462392_FnIns>);
inline void _1c119946d_funcIns(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be462392_FnIns>);
inline void _1c11996e3_tuple(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be459d18_TupleExprModel>);
inline void _1c1199968_newCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel>);
inline void _1c1199bdd_outCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45a005_BuiltinOutCallExprModel>);
inline void _1c1199e63_outlnCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>);
inline void _1c119a1d8_panicCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>);
inline void _1c119a45d_assertCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45a995_BuiltinAssertCallExprModel>);
inline void _1c119a6d3_errorCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>);
inline void _1c119a958_copyCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45b05b_BuiltinCopyCallExprModel>);
inline void _1c119abcd_makeCallSlice(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>&);
inline void _1c119ae53_makeCallStr(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>&);
inline void _1c119b1c8_makeCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>);
inline void _1c119b44d_pushToSlice(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1bcc09ed2_PushToSliceExprModel>);
inline void _1c119b6c3_appendCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>);
inline void _1c119b948_cloneCall(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel>);
inline void _1c119bbbd_sizeof(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be459147_SizeofExprModel>);
inline void _1c119be43_alignof(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45b8a8_AlignofExprModel>);
inline jule::Str _1c119c251_runeLit(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45ba95_RuneExprModel>);
inline void _1c119c4c6_structureStatic(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be459565_StructStaticIdentExprModel>);
inline void _1c119c74b_integratedToStr(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45bc82_IntegratedToStrExprModel>);
inline void _1c119c9c1_backendEmit(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45be6e_BackendEmitExprModel>);
inline void _1c119cc46_free(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1be45c15b_FreeExprModel>);
inline void _1c119cebb_mutSlicing(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1bca4c7e7_MutSlicingExprModel>);
inline void _1c119d241_strInsertBegin(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1bcaab15d_StrInsertBeginExprModel>);
inline void _1c119d4b6_model(jule::Ptr<_1c11930e3_exprCoder>, jule::Any);
inline void _1c119d73b_expr(jule::Ptr<_1c11930e3_exprCoder>, jule::Any);
inline void _1c119d9b1_val(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1c00ce30a_Value>);
inline void _1c119dc36_initExpr(jule::Ptr<_1c11930e3_exprCoder>, jule::Ptr<_1c0109324_TypeKind>);
struct _1c11930e3_exprCoder {
	jule::Ptr<_1c12163a8_ObjectCoder> _field_oc = jule::Ptr<_1c12163a8_ObjectCoder>();
	

	_1c11930e3_exprCoder(void) = default;

	inline bool operator==(_1c11930e3_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c11930e3_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1c11a1299_cloneFuncDecl(jule::Ptr<_1be387251_Struct>&);
inline jule::Str static__1c11a1541_cloneFuncDef(jule::Ptr<_1be387251_Struct>&);
struct _1c11a0ee1_deriveCoder {
	

	_1c11a0ee1_deriveCoder(void) = default;

	inline bool operator==(_1c11a0ee1_deriveCoder _other) { return true; }

	inline bool operator!=(_1c11a0ee1_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c11a2421_TestCoder> static__1c11a2894_New(jule::Ptr<_1c12163a8_ObjectCoder>&);
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c11a2b08_findTestingPackage(jule::Ptr<_1c11a2421_TestCoder>);
inline void _1c11a2d7d_appendTest(jule::Ptr<_1c11a2421_TestCoder>, jule::Ptr<_1be462392_FnIns>);
inline void _1c11a3103_appendPackageTests(jule::Ptr<_1c11a2421_TestCoder>, jule::Ptr<_1c005e312_Package>&);
inline jule::Bool _1c11a3367_readyTestingPackage(jule::Ptr<_1c11a2421_TestCoder>);
inline void _1c11a3543_callTmReset(jule::Ptr<_1c11a2421_TestCoder>);
inline void _1c11a371e_callTmFailed(jule::Ptr<_1c11a2421_TestCoder>);
inline void _1c11a38ea_callTmSkipped(jule::Ptr<_1c11a2421_TestCoder>);
inline void _1c11a3ac6_Serialize(jule::Ptr<_1c11a2421_TestCoder>);
struct _1c11a2421_TestCoder {
	jule::Ptr<_1be3b359b_StructIns> _field_t = jule::Ptr<_1be3b359b_StructIns>();
	jule::Ptr<_1be45e6e1_Fn> _field_tmReset = jule::Ptr<_1be45e6e1_Fn>();
	jule::Ptr<_1be45e6e1_Fn> _field_tmFailed = jule::Ptr<_1be45e6e1_Fn>();
	jule::Ptr<_1be45e6e1_Fn> _field_tmSkipped = jule::Ptr<_1be45e6e1_Fn>();
	jule::Ptr<_1c12163a8_ObjectCoder> _field_oc = jule::Ptr<_1c12163a8_ObjectCoder>();
	

	_1c11a2421_TestCoder(void) = default;

	inline bool operator==(_1c11a2421_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c11a2421_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1c11a507d_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1c11a5468_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1c11a5710_func(jule::Ptr<_1be45e6e1_Fn>&);
inline jule::Str static__1c11a59a7_funcIns(jule::Ptr<_1be462392_FnIns>&);
inline jule::Str static__1c11a5c4e_traitDecl(jule::Ptr<_1be47159e_Trait>);
inline jule::Str static__1c11a5ee6_param(jule::Ptr<_1be45cda4_Param>&);
inline jule::Str static__1c11a628d_structure(jule::Ptr<_1be387251_Struct>&);
inline jule::Str static__1c11a6535_structureIns(jule::Ptr<_1be3b359b_StructIns>&);
inline jule::Str static__1c11a67cc_field(jule::Ptr<_1be37971b_Field>&);
inline jule::Str static__1c11a6a74_var(jule::Ptr<_1c0081334_Var>);
inline jule::Str static__1c11a6d1b_iterBegin(jule::Uintptr);
inline jule::Str static__1c11a70b3_iterEnd(jule::Uintptr);
inline jule::Str static__1c11a735a_iterNext(jule::Uintptr);
inline jule::Str static__1c11a7602_label(jule::Str&);
inline jule::Str static__1c11a7899_matchEnd(jule::Uintptr);
inline jule::Str static__1c11a7b41_caseBegin(jule::Uintptr);
struct _1c11a4a72_identCoder {
	

	_1c11a4a72_identCoder(void) = default;

	inline bool operator==(_1c11a4a72_identCoder _other) { return true; }

	inline bool operator!=(_1c11a4a72_identCoder _other) { return !this->operator==(_other); }


};
struct _1c1215ece_SerializationInfo {
	jule::Str _field_Compiler = jule::Str();
	jule::Str _field_CompilerCommand = jule::Str();
	

	_1c1215ece_SerializationInfo(void) = default;

	inline bool operator==(_1c1215ece_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1c1215ece_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1c12161bb_traitHash {
	jule::Ptr<_1be47159e_Trait> _field_t = jule::Ptr<_1be47159e_Trait>();
	jule::Ptr<_1be3b359b_StructIns> _field_s = jule::Ptr<_1be3b359b_StructIns>();
	jule::I64 _field_i = jule::I64();
	

	_1c12161bb_traitHash(void) = default;

	inline bool operator==(_1c12161bb_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c12161bb_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1c121c1b1_Str(_1c121bde7_customType*);
inline jule::Bool _1c121c4be_Equals(jule::Ptr<_1c121bde7_customType>, jule::Ptr<_1c0109324_TypeKind>);
struct _1c121bde7_customType {
	jule::Str _field_kind = jule::Str();
	

	_1c121bde7_customType(void) = default;

	inline bool operator==(_1c121bde7_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c121bde7_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1c121cc1c_toType(jule::Str);
inline jule::Str static__1c121ceb4_prim(jule::Ptr<_1c010dceb_Prim>);
inline jule::Str static__1c121d25b_tuple(jule::Ptr<_1c0113a6a_Tuple>);
inline jule::Str static__1c121d503_asSptr(jule::Str);
inline jule::Str static__1c121d79a_asPtr(jule::Str);
inline jule::Str static__1c121da42_sptr(jule::Ptr<_1c0112580_Sptr>);
inline jule::Str static__1c121dcd9_ptr(jule::Ptr<_1c0115ae4_Ptr>);
inline jule::Str static__1c121e081_enumDecl(jule::Ptr<_1be4736e4_Enum>);
inline jule::Str static__1c121e328_typeEnumDecl(jule::Ptr<_1be474cde_TypeEnum>);
inline jule::Str static__1c121e5c0_asSlice(jule::Ptr<_1c0109324_TypeKind>);
inline jule::Str static__1c121e867_slice(jule::Ptr<_1c0112edc_Slc>);
inline jule::Str static__1c121eb0e_map(jule::Ptr<_1c0114593_Map>);
inline jule::Str static__1c121eda6_traitIdent(jule::Str);
inline jule::Str static__1c122014d_traitDecl(jule::Ptr<_1be47159e_Trait>);
inline jule::Str static__1c12203e5_structure(jule::Ptr<_1be387251_Struct>);
inline jule::Str static__1c122068c_structureIns(jule::Ptr<_1be3b359b_StructIns>);
inline jule::Str static__1c1220934_array(jule::Ptr<_1c0115187_Arr>);
inline jule::Str static__1c1220e73_paramIns(jule::Ptr<_1be4614c3_ParamIns>&);
inline jule::Str static__1c12214b2_funcInsResult(jule::Ptr<_1be462392_FnIns>&);
inline jule::Str static__1c1221759_anonFunc(jule::Ptr<_1be462392_FnIns>);
inline jule::Str static__1c1221a01_func(jule::Ptr<_1be462392_FnIns>);
inline jule::Str static__1c1221c98_kind(jule::Ptr<_1c0109324_TypeKind>);
struct _1c121c6de_typeCoder {
	

	_1c121c6de_typeCoder(void) = default;

	inline bool operator==(_1c121c6de_typeCoder _other) { return true; }

	inline bool operator!=(_1c121c6de_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1c3936114_Name(_1c3936774_Flag*);
inline jule::Str _1c3936b5e_What(_1c3936774_Flag*);
inline void _1c3936c91_Reset(_1c3936774_Flag*);
inline jule::I32 _1c3936dc3_Short(_1c3936774_Flag*);
struct _1c3936774_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::I64 _field_default = jule::I64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::I64> _field_data = jule::Ptr<jule::I64>();
	

	_1c3936774_Flag(void) = default;

	inline bool operator==(_1c3936774_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c3936774_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1c3939e81_Name(_1c393a437_Flag*);
inline jule::Str _1c393a701_What(_1c393a437_Flag*);
inline void _1c393a833_Reset(_1c393a437_Flag*);
inline jule::I32 _1c393a965_Short(_1c393a437_Flag*);
struct _1c393a437_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::U64 _field_default = jule::U64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::U64> _field_data = jule::Ptr<jule::U64>();
	

	_1c393a437_Flag(void) = default;

	inline bool operator==(_1c393a437_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c393a437_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1c393d968_Name(_1c393de1e_Flag*);
inline jule::Str _1c393e1d8_What(_1c393de1e_Flag*);
inline void _1c393e31a_Reset(_1c393de1e_Flag*);
inline jule::I32 _1c393e44c_Short(_1c393de1e_Flag*);
struct _1c393de1e_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::F64 _field_default = jule::F64();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::F64> _field_data = jule::Ptr<jule::F64>();
	

	_1c393de1e_Flag(void) = default;

	inline bool operator==(_1c393de1e_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c393de1e_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1c3942494_Name(_1c394294a_Flag*);
inline jule::Str _1c3942c14_What(_1c394294a_Flag*);
inline void _1c3942d46_Reset(_1c394294a_Flag*);
inline jule::I32 _1c3942e78_Short(_1c394294a_Flag*);
struct _1c394294a_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Bool _field_default = jule::Bool();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Bool> _field_data = jule::Ptr<jule::Bool>();
	

	_1c394294a_Flag(void) = default;

	inline bool operator==(_1c394294a_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c394294a_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1c3945e7b_Name(_1c3946432_Flag*);
inline jule::Str _1c39466eb_What(_1c3946432_Flag*);
inline void _1c394682d_Reset(_1c3946432_Flag*);
inline jule::I32 _1c3946960_Short(_1c3946432_Flag*);
struct _1c3946432_Flag {
	jule::Str _field_name = jule::Str();
	jule::I32 _field_short = jule::I32();
	jule::Str _field_default = jule::Str();
	jule::Str _field_what = jule::Str();
	jule::Ptr<jule::Str> _field_data = jule::Ptr<jule::Str>();
	

	_1c3946432_Flag(void) = default;

	inline bool operator==(_1c3946432_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1c3946432_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1bd8ead15_FlagSet> static__1bd8cb3cd_New(void);
inline jule::Trait<_233aec512_CommonFlag> _1bd8d1b97_FindFlag(_1bd8ead15_FlagSet*, jule::Str);
inline jule::Trait<_233aec512_CommonFlag> _1bd900138_FindFlagShort(_1bd8ead15_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_233aec512_CommonFlag>> _1bd95250e_Flags(_1bd8ead15_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1bd94a57e_Parse(_1bd8ead15_FlagSet*, jule::Slice<jule::Str>);
inline void _1bd94b30a_Reset(_1bd8ead15_FlagSet*);
inline jule::Ptr<_1c3946432_Flag> _1c3b2b35e_addFlagCommon(_1bd8ead15_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1c394294a_Flag> _1c3b34e7d_addFlagCommon(_1bd8ead15_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1c3b292b3_AddVar(_1bd8ead15_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1c3b32de3_AddVar(_1bd8ead15_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1bd8ead15_FlagSet {
	jule::Slice<jule::Trait<_233aec512_CommonFlag>> _field_flags = jule::Slice<jule::Trait<_233aec512_CommonFlag>>();
	

	_1bd8ead15_FlagSet(void) = default;

	inline bool operator==(_1bd8ead15_FlagSet _other) {
		return 
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1bd8ead15_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1c0977e39_IR>,jule::Slice<_1d6435804_Log>> static__1c07dc81a_Build(jule::Str, jule::I64);
inline void _1c07e3843_appendStructs(_1c0977e39_IR*, jule::Ptr<_1c005e312_Package>&, jule::Slice<jule::Ptr<_1be387251_Struct>>&);
inline jule::Slice<jule::Ptr<_1be387251_Struct>> _1c08085a0_GetAllStructures(_1c0977e39_IR*);
inline void _1c0818945_appendGlobals(_1c0977e39_IR*, jule::Ptr<_1c005e312_Package>&, jule::Slice<jule::Ptr<_1c0081334_Var>>&);
inline jule::Slice<jule::Ptr<_1c0081334_Var>> _1c083d2c7_GetAllGlobals(_1c0977e39_IR*);
inline void _1c085829d_Order(_1c0977e39_IR*);
struct _1c0977e39_IR {
	jule::Str _field_Root = jule::Str();
	jule::Slice<jule::Str> _field_Passes = jule::Slice<jule::Str>();
	jule::Ptr<_1c005e312_Package> _field_Main = jule::Ptr<_1c005e312_Package>();
	jule::Slice<jule::Ptr<_1c005b3a8_ImportInfo>> _field_Used = jule::Slice<jule::Ptr<_1c005b3a8_ImportInfo>>();
	_1c07bb112_OrderedDefines _field_Ordered = _1c07bb112_OrderedDefines();
	

	_1c0977e39_IR(void) = default;

	inline bool operator==(_1c0977e39_IR _other) {
		return 
			this->_field_Root == _other._field_Root &&
			this->_field_Passes == _other._field_Passes &&
			this->_field_Main == _other._field_Main &&
			this->_field_Used == _other._field_Used &&
			this->_field_Ordered == _other._field_Ordered;
	}

	inline bool operator!=(_1c0977e39_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1be388e34_Str(_1be3b359b_StructIns*);
inline jule::Bool _1be38a09a_Equals(jule::Ptr<_1be3b359b_StructIns>, jule::Ptr<_1c0109324_TypeKind>);
inline jule::Bool _1be38c3ee_Same(_1be3b359b_StructIns*, jule::Ptr<_1be3b359b_StructIns>);
inline jule::Ptr<_1be45e6e1_Fn> _1be38d71e_FindMethod(_1be3b359b_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1be38e8b8_FieldIns> _1be391238_FindField(_1be3b359b_StructIns*, jule::Str);
struct _1be3b359b_StructIns {
	jule::Bool _field_Checked = jule::Bool();
	jule::Ptr<_1be387251_Struct> _field_Decl = jule::Ptr<_1be387251_Struct>();
	jule::Slice<jule::Ptr<_1c0107ae7_InsGeneric>> _field_Generics = jule::Slice<jule::Ptr<_1c0107ae7_InsGeneric>>();
	jule::Slice<jule::Ptr<_1be38e8b8_FieldIns>> _field_Fields = jule::Slice<jule::Ptr<_1be38e8b8_FieldIns>>();
	jule::Slice<jule::Ptr<_1be45e6e1_Fn>> _field_Methods = jule::Slice<jule::Ptr<_1be45e6e1_Fn>>();
	jule::Bool _field_Mutable = jule::Bool();
	jule::Ptr<_1be465263_ReferenceStack> _field_Refers = jule::Ptr<_1be465263_ReferenceStack>();
	_1be388b7b_Operators _field_Operators = _1be388b7b_Operators();
	

	_1be3b359b_StructIns(void) = default;

	inline bool operator==(_1be3b359b_StructIns _other) {
		return 
			this->_field_Checked == _other._field_Checked &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Generics == _other._field_Generics &&
			this->_field_Fields == _other._field_Fields &&
			this->_field_Methods == _other._field_Methods &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Refers == _other._field_Refers &&
			this->_field_Operators == _other._field_Operators;
	}

	inline bool operator!=(_1be3b359b_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c0ad59c0_ObjectDeadCode> static__1c0ad5e87_new(jule::Ptr<_1c0977e39_IR>&);
inline jule::Bool _1c35b507e_isLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1be47159e_Trait>&);
inline jule::Bool _1c35bad54_isLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1be462392_FnIns>&);
inline jule::Bool _1c35c2014_isLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1be3b359b_StructIns>&);
inline jule::Bool _1c35c8dea_isLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1c0081334_Var>&);
inline void _1c35b5623_pushLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1be47159e_Trait>);
inline void _1c35be484_pushLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1be462392_FnIns>);
inline void _1c35c2553_pushLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1be3b359b_StructIns>);
inline void _1c35cc7d3_pushLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1c0081334_Var>);
inline void _1c0b140d6_setReferencesAsLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1be465263_ReferenceStack>&);
inline void _1c0b1435b_inits(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1c005e312_Package>&);
inline void _1c0b145d1_collectLivePackage(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1c005e312_Package>&);
inline void _1c0b147ac_collectLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode>);
inline void _1c0b14a32_removeDeadGlobals(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Slice<jule::Ptr<_1c0081334_Var>>&);
inline void _1c0b14ca7_removeDeadFns(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Slice<jule::Ptr<_1be45e6e1_Fn>>&);
inline void _1c0b1502c_removeDeadStructs(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Slice<jule::Ptr<_1be387251_Struct>>&);
inline void _1c0b152a2_removeDeadTraits(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Slice<jule::Ptr<_1be47159e_Trait>>&);
inline void _1c0b15527_removeDeadsFile(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1c00c8524_SymbolTable>&);
inline void _1c0b1579c_removeDeadsPackage(jule::Ptr<_1c0ad59c0_ObjectDeadCode>, jule::Ptr<_1c005e312_Package>&);
inline void _1c0b15978_removeDeads(jule::Ptr<_1c0ad59c0_ObjectDeadCode>);
inline void _1c0b15b54_elimanate(jule::Ptr<_1c0ad59c0_ObjectDeadCode>);
struct _1c0ad59c0_ObjectDeadCode {
	_1c0ad5706_liveTable _field_live = _1c0ad5706_liveTable();
	jule::Ptr<_1c0977e39_IR> _field_ir = jule::Ptr<_1c0977e39_IR>();
	

	_1c0ad59c0_ObjectDeadCode(void) = default;

	inline bool operator==(_1c0ad59c0_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1c0ad59c0_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c12163a8_ObjectCoder> static__1c11e93d0_New(jule::Ptr<_1c0977e39_IR>&, _1c1215ece_SerializationInfo);
inline void _1c11e9710_write(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Str);
inline void _1c11e9ea2_addIndent(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c11eae92_doneIndent(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c11eb6e0_indent(jule::Ptr<_1c12163a8_ObjectCoder>);
inline jule::I64 _1c11daa64_findTypeOffset(_1c12163a8_ObjectCoder*, jule::Ptr<_1be47159e_Trait>, jule::Ptr<_1c0109324_TypeKind>);
inline void _1c11ecacb_locInfo(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1d675d511_Token>&);
inline void _1c11cc209_head(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c11ea700_links(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c11d0a37_prepareStructures(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c11d7874_iterPackages(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Fn<void(jule::Ptr<_1c005e312_Package>&)>);
inline void _1c11d7e07_buildTraitMap(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c11d8cc6_traitDecls(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c11d948b_structurePlainDecl(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be387251_Struct>&);
inline void _1c11d9b51_structurePlainDecls(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c11da316_fieldDecl(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be38e8b8_FieldIns>&);
inline void _1c11d1e01_structureDestructor(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c121694c_structureDeriveDefsDecls(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c1216a7e_structureOperatorEq(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Str&, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c1216bb1_structureOperatorNotEq(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Str&, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c1216ce3_structureOperator(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Str&, jule::Ptr<_1be462392_FnIns>&, jule::Str);
inline void _1c1216e25_structureOperators(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c1217057_structureInsDecl(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c1217189_structureDecl(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be387251_Struct>&);
inline void _1c12172bb_structureDecls(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c12173ed_paramsDecls(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>&);
inline void _1c1217530_funcHead(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be462392_FnIns>&, jule::Bool);
inline void _1c1217662_funcDecl(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be45e6e1_Fn>&, jule::Bool);
inline void _1c1217794_funcDecls(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c12178c6_traitDataTypes(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c1217a08_paramIns(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be4614c3_ParamIns>&);
inline void _1c1217be5_paramsIns(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>&);
inline void _1c1218014_varInitExpr(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1c0081334_Var>&, jule::Fn<void(void)>);
inline void _1c1218289_var(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1c0081334_Var>);
inline void _1c121850e_func(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be45e6e1_Fn>&);
inline void _1c12186da_traitWrappers(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c12188b6_traitDatas(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c1218a92_globals(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c1218c6d_decls(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c1218ee3_structureMethods(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c1219268_structureDeriveDefs(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c12194dd_structureOstream(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c1219763_structureIns(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be3b359b_StructIns>&);
inline void _1c12199d8_structure(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1be387251_Struct>&);
inline void _1c1219bb4_structures(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c1219d90_funcs(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c121a115_pushInit(jule::Ptr<_1c12163a8_ObjectCoder>, jule::Ptr<_1c005e312_Package>&);
inline void _1c121a2e1_initCaller(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c121a4bc_end(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c121a698_serializeHead(jule::Ptr<_1c12163a8_ObjectCoder>);
inline void _1c121a874_Serialize(jule::Ptr<_1c12163a8_ObjectCoder>);
struct _1c12163a8_ObjectCoder {
	jule::Str _field_Obj = jule::Str();
	jule::Ptr<_1c0977e39_IR> _field_ir = jule::Ptr<_1c0977e39_IR>();
	_1c1215ece_SerializationInfo _field_info = _1c1215ece_SerializationInfo();
	jule::Slice<jule::Ptr<_1c12161bb_traitHash>> _field_tmap = jule::Slice<jule::Ptr<_1c12161bb_traitHash>>();
	jule::Str _field_indentBuffer = jule::Str();
	jule::Ptr<_1c11930e3_exprCoder> _field_ec = jule::Ptr<_1c11930e3_exprCoder>();
	jule::Ptr<_1c118a5a2_scopeCoder> _field_sc = jule::Ptr<_1c118a5a2_scopeCoder>();
	

	_1c12163a8_ObjectCoder(void) = default;

	inline bool operator==(_1c12163a8_ObjectCoder _other) {
		return 
			this->_field_Obj == _other._field_Obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indentBuffer == _other._field_indentBuffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1c12163a8_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1c395a424_parseInteger(_1bd9076d4_argParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1c39634d7_parseInteger(_1bd9076d4_argParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1bd961e47_getData(_1bd9076d4_argParser*);
inline jule::VoidExceptional _233b4bd58_processFlag(_1bd9076d4_argParser*, jule::Trait<_233aec512_CommonFlag>&);
inline jule::VoidExceptional _233b4e454_singleDash(_1bd9076d4_argParser*, jule::Str&);
inline jule::VoidExceptional _1bd90c7d8_doubleDash(_1bd9076d4_argParser*, jule::Str&);
inline jule::VoidExceptional _1bd96a22a_tryArg(_1bd9076d4_argParser*);
inline jule::VoidExceptional _233b1c389_parse(_1bd9076d4_argParser*);
struct _1bd9076d4_argParser {
	_1bd8ead15_FlagSet _field_set = _1bd8ead15_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();
	

	_1bd9076d4_argParser(void) = default;

	inline bool operator==(_1bd9076d4_argParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1bd9076d4_argParser _other) { return !this->operator==(_other); }


};
inline void _2338d0d73_Free(void*);
inline jule::Str _233909e13_BytePtrToStr(jule::U8*);
inline jule::I64 _23207ad49_GetLastErrno(void);
inline jule::I64 _23390a694_Stat(jule::U8*, struct stat*);
inline jule::I64 _23390a7c6_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _23390a908_Getcwd(jule::U8*, jule::U64);
inline DIR* _23390aa3a_Opendir(jule::U8*);
inline struct dirent* _23390ab6c_Readdir(DIR*);
inline jule::I64 _23390aed0_Closedir(DIR*);
inline jule::I64 _23390b376_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _23390b4a8_Rmdir(jule::U8*);
inline jule::I64 _23390b5da_Unlink(jule::U8*);
inline jule::I64 _233935e2d_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _233936318_Read(jule::I64, void*, jule::U64);
inline jule::I64 _23393668c_Close(jule::I64);
inline jule::I64 _233936a77_Write(jule::I64, void*, jule::U64);
inline void _233936c86_Exit(jule::I64);
inline jule::I64 _23399c439_getLastOsError(void);
inline jule::Slice<jule::Str> _2339c3152_Args(void);
inline jule::Exceptional<jule::Str> _2339c35c5_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2339c451b_getwd(void);
inline jule::Slice<jule::U8> _218562a64_Stobs(jule::Str&);
inline jule::Bool _2009ae78c_IsLetter(jule::I32);
inline jule::Bool _200a31b50_is16(jule::Slice<_200a3008d_Range16>, jule::U16);
inline jule::Bool _200a31e91_is32(jule::Slice<_200a30511_Range32>, jule::U32);
inline jule::Bool _200a32733_isExcludingLatin(jule::Ptr<_200a30984_RangeTable>, jule::I32);
inline jule::Bool _200a329ca_IsUpper(jule::I32);
inline std::tuple<jule::I32,jule::I64> _1d639e43d_DecodeRune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _1d639e75c_DecodeRuneStr(jule::Str);
inline std::tuple<jule::I32,jule::I64> _1d639ea04_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1d63a07a2_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1d63a0ae3_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1d63a1132_RuneCountStr(jule::Str);
inline jule::Bool _1d63a13c9_RuneStart(jule::U8);
inline jule::Str _200a79329_Repeat(jule::Str, jule::I64);
inline jule::Bool _200a7a5c2_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1d63616b9_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1d63698d1_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _1d637218b_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _200a78b0e_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1d6353bea_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1d6358d21_FindLast(jule::Str, jule::Str);
inline jule::I64 _1d63a2474_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _1d63a2919_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1d63a2de2_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1d63a3343_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1d63a3684_Contains(jule::Str, jule::Str);
inline jule::Bool _1d63a4157_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1d63a4498_Count(jule::Str, jule::Str);
inline jule::Str _1d63a492c_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1d63a273d_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1d63a59d8_TrimLeft(jule::Str, jule::Str);
inline void _1d63a5c91_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1d63a6423_Trim(jule::Str, jule::Str);
inline jule::Str _1d63a6764_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1d63a7d3c_Clean(jule::Str);
inline jule::Str _1d63a83c0_FromSlash(jule::Str);
inline jule::Str _1d63a86de_Join(jule::Slice<jule::Str>);
inline jule::Str _1d63a8986_Ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1d63a8c2d_Abs(jule::Str);
inline jule::Str _1d63a8ec5_Base(jule::Str);
inline jule::Str _1d63a9349_Dir(jule::Str);
inline jule::Str _1d63a95e1_VolumeName(jule::Str);
inline jule::Bool _1d63aa4d2_IsPathSep(jule::U8);
inline jule::Bool _1d63aa7bd_IsAbs(jule::Str);
inline jule::I64 _1d63aaa65_volumeNameLen(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1d63aad84_abs(jule::Str);
inline jule::Str _1d63ab12b_join(jule::Slice<jule::Str>);
inline jule::I64 _2320921d4_getLastFsError(void);
inline jule::I64 _231eee76d_getLastProcessError(void);
inline jule::Slice<char*> _2320029c4_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _232002e25_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _232003310_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _232003e26_Exit(jule::I64);
inline jule::Str _232004124_Executable(void);
inline jule::Bool _1d6428bb0_IsStdHeaderPath(jule::Str);
inline jule::Bool _1d6428d8b_IsValidHeaderExt(jule::Str);
inline jule::Bool _1d6429133_IsValidCppExt(jule::Str);
inline jule::Str _1d6435c44_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1d6436030_argToStr(jule::Any);
inline jule::I64 _1d64362c7_findNextFmt(jule::Str);
inline jule::Str _1d643665c_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d6437729_IsTopDirective(jule::Str);
inline jule::Bool _1d6438b59_IsWindows(jule::Str);
inline jule::Bool _1d6438e12_IsDarwin(jule::Str);
inline jule::Bool _1d64391a9_IsLinux(jule::Str);
inline jule::Bool _1d64394c8_IsI386(jule::Str);
inline jule::Bool _1d6439770_IsAmd64(jule::Str);
inline jule::Bool _1d6439a17_IsArm64(jule::Str);
inline jule::Bool _1d6439cae_IsUnix(jule::Str);
inline jule::Bool _1d643a133_Is32Bit(jule::Str);
inline jule::Bool _1d643a3ca_Is64Bit(jule::Str);
inline void _231eb6449_init(void);
inline jule::Bool _1d675dc1a_IsUnaryOp(jule::Str);
inline jule::Bool _1d675e006_IsBinOp(jule::Str);
inline jule::Bool _1d675e5bc_IsStr(jule::Str);
inline jule::Bool _1d675e864_IsRawStr(jule::Str);
inline jule::Bool _1d675eb0b_IsRune(jule::Str);
inline jule::Bool _1d6760227_IsBool(jule::Str);
inline jule::Bool _1d67604be_IsFloat(jule::Str);
inline jule::Bool _1d6760766_IsNum(jule::Str);
inline jule::Bool _1d6760ca5_IsIgnoreIdent(jule::Str);
inline jule::Bool _1d676104c_IsAnonIdent(jule::Str);
inline jule::Bool _1d676158b_IsSpace(jule::I32);
inline jule::Bool _1d67619dc_IsLetter(jule::I32);
inline jule::Bool _1d676202b_IsDecimal(jule::U8);
inline jule::Bool _1d67622c3_IsBinary(jule::U8);
inline jule::Bool _1d676256a_IsOctal(jule::U8);
inline jule::Bool _1d6762812_IsHex(jule::U8);
inline jule::Bool _1d6762aa9_IsAssign(jule::U64);
inline jule::Bool _1d6762d51_IsPostfixOp(jule::Str);
inline jule::Bool _1d67630e8_IsAssignOp(jule::Str);
inline jule::Ptr<_1d676389b_File> _1d6764dca_NewFileSet(jule::Str);
inline _1d6435804_Log _1d6766706_makeErr(jule::I64, jule::I64, jule::Ptr<_1d676389b_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d6766a8b_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1d6766dcc_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d6767262_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d67675a3_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d67678e4_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d6767c35_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d676cee3_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d676d28a_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _1d676d532_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _1d676d873_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1d676dbb4_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1d676e005_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1d676e346_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _1d676e687_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d676ead8_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _1d676ed80_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _1d67701c1_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _1d6770468_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1d6770732_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _1d67708db_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _1d6770b72_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_1d6435804_Log> _1d677566b_Lex(jule::Ptr<_1d676389b_File>, jule::I64);
inline void _1be456d15_lshiftUnsig(_1be3e8c63_Const&, _1be3e8c63_Const&);
inline void _1be457112_rshiftUnsig(_1be3e8c63_Const&, _1be3e8c63_Const&);
inline jule::I64 _1c0004032_LeadingZeros64(jule::U64);
inline jule::I64 _1c0005088_TrailingZeros(jule::U64);
inline jule::I64 _1c000597e_TrailingZeros32(jule::U32);
inline jule::I64 _1c0005c26_TrailingZeros64(jule::U64);
inline jule::I64 _1c000b49b_Len32(jule::U32);
inline jule::I64 _1c000b743_Len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1c000c403_Add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1c000da86_Mul64(jule::U64, jule::U64);
inline jule::U32 _1bee2a40e_F32Bits(jule::F32);
inline jule::F32 _1bee2a6ea_F32FromBits(jule::U32);
inline jule::U64 _1bee2a992_F64Bits(jule::F64);
inline jule::F64 _1bee2acb1_F64FromBits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1bee2d3bd_Frexp(jule::F64);
inline jule::F64 _1bee90a5c_NaN(void);
inline jule::Bool _1bee91992_IsNaN(jule::F64);
inline jule::F64 _1bee93433_Inf(jule::I64);
inline jule::Bool _1bee98c96_IsInf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1bee9a3a2_normalize(jule::F64);
inline jule::F64 _1beeaa56b_Log(jule::F64);
inline jule::F64 _1beeb1ee0_Abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1c0017430_Modf(jule::F64);
inline jule::F64 _1c0017be4_Log2(jule::F64);
inline jule::Str _1be976cb3_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1be98b46a_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1be9e40e9_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1beb1953d_floatInfo&);
inline jule::Slice<jule::U8> _1bea1a9e4_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1bea1b341_decimalSlice, jule::I64, jule::U8);
inline void _1bea1cbb1_roundShortest(_1c0044803_decimal&, jule::U64, jule::I64, _1beb1953d_floatInfo&);
inline jule::Slice<jule::U8> _1bea31b1a_fmtE(jule::Slice<jule::U8>, jule::Bool, _1bea1b341_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1bea322be_fmtF(jule::Slice<jule::U8>, jule::Bool, _1bea1b341_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1bea33259_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1beb1953d_floatInfo&);
inline jule::Slice<jule::U8> _1beae6d12_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1beb1953d_floatInfo&);
inline jule::I64 _1beb1a594_min(jule::I64, jule::I64);
inline jule::I64 _1beb20973_max(jule::I64, jule::I64);
inline jule::U8 _1beb7b6e3_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1beba1493_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1bebc3a37_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1bec506b8_ParseInt(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1be967d1a_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1bed206cd_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1bec10cd8_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1bea30a81_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1bed5db6c_readFloat(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1be9ad6ac_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1bea022a0_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1bea56b51_atofHex(jule::Str, _1beb1953d_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1bebca225_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1bec50cd4_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1bec9b703_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1becd9477_ParseFloat(jule::Str, jule::I64);
inline void _1bedae173_ryuFtoaFixed32(_1bea1b341_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1bee15938_ryuFtoaFixed64(_1bea1b341_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1bee1c27a_formatDecimal(_1bea1b341_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1be9d2181_ryuFtoaShortest(_1bea1b341_decimalSlice&, jule::U64, jule::I64, _1beb1953d_floatInfo&);
inline jule::I64 _1beaba2ad_mulByLog2Log10(jule::I64);
inline jule::I64 _1beb4745b_mulByLog10Log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1c0043538_computeBounds(jule::U64, jule::I64, _1beb1953d_floatInfo&);
inline void _1c004377a_ryuDigits(_1bea1b341_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1c00438ac_ryuDigits32(_1bea1b341_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1c00439de_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1c0043b21_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1c0043c53_divisibleByPow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1c0043d85_divmod1e9(jule::U64);
inline void _1c004535e_trim(_1c0044803_decimal&);
inline void _1c0045491_rightShift(_1c0044803_decimal&, jule::U64);
inline jule::Bool _1c00455c3_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1c0045705_leftShift(_1c0044803_decimal&, jule::U64);
inline jule::Bool _1c0045837_shouldRoundUp(_1c0044803_decimal&, jule::I64);
inline jule::Str _1c00463b5_FmtUint(jule::U64, jule::I64);
inline jule::Str _1c00464e7_FmtInt(jule::I64, jule::I64);
inline jule::Str _1c0046629_Itoa(jule::I64);
inline jule::Str _1c004675b_small(jule::I64);
inline jule::Bool _1c004688d_isPowerOfTwo(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1c00469c0_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1be57a026_RealKindOf(jule::Str);
inline jule::I64 _1be581758_BitsizeOf(jule::Str);
inline jule::Str _1be5a59e1_IntFromBits(jule::I64);
inline jule::Str _1be5b7904_UintFromBits(jule::I64);
inline jule::Str _1be5e191c_FloatFromBits(jule::I64);
inline jule::Bool _1be7827b1_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1be7a1846_BitsizeOfFloat(jule::F64);
inline jule::I64 _1be852287_BitsizeOfInt(jule::I64);
inline jule::I64 _1be86a02a_BitsizeOfUint(jule::U64);
inline void _1be86a756_UpdateTarget(void);
inline void _1be877d18_init(void);
inline jule::F64 _1be906ec9_Min(jule::Str);
inline jule::F64 _1be90ed06_Max(jule::Str);
inline jule::Bool _1be91b818_IsI8Compatible(jule::Str);
inline jule::Bool _1be927d0d_IsI16Compatible(jule::Str);
inline jule::Bool _1be947dc7_IsI32Compatible(jule::Str);
inline jule::Bool _1be94e494_IsI64Compatible(jule::Str);
inline jule::Bool _1be5572ab_IsU8Compatible(jule::Str);
inline jule::Bool _1be50d3b6_IsU16Compatible(jule::Str);
inline jule::Bool _1be5ce641_IsU32Compatible(jule::Str);
inline jule::Bool _1be5d01ad_IsU64Compatible(jule::Str);
inline jule::Bool _1be7c26be_IsF32Compatible(jule::Str);
inline jule::Bool _1be7c3802_IsF64Compatible(jule::Str);
inline jule::Bool _1be7c895b_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1be7cdab5_IsI16Greater(jule::Str);
inline jule::Bool _1be948339_IsI32Greater(jule::Str);
inline jule::Bool _1be559357_IsI64Greater(jule::Str);
inline jule::Bool _1be78211d_IsU16Greater(jule::Str);
inline jule::Bool _1c0047482_IsU32Greater(jule::Str);
inline jule::Bool _1c00475b4_IsU64Greater(jule::Str);
inline jule::Bool _1c00476e6_IsF32Greater(jule::Str);
inline jule::Bool _1c0047828_IsF64Greater(jule::Str);
inline jule::Bool _1c004795a_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1c0047d9a_IsSigInt(jule::Str);
inline jule::Bool _1c0047ecc_IsUnsigInt(jule::Str);
inline jule::Bool _1c004810e_IsInt(jule::Str);
inline jule::Bool _1c0048241_IsFloat(jule::Str);
inline jule::Bool _1c0048373_IsNum(jule::Str);
inline jule::Bool _1c00484a5_IsSigNum(jule::Str);
inline jule::Bool _1c00993d5_IsAscii(jule::I32);
inline jule::I32 _1c0099517_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1c00b618d_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1c00b6446_ToStr(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1c00b66dd_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1c00b69eb_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1c00b6d3c_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1bcc6c2a8_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1bcc6c63d_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1bcc6c8d5_fmtByDefault(jule::Any&);
inline jule::Slice<jule::U8> _1bcc6cc6a_applyFmtByDefault(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1bcc6d155_applyFmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1bcc6d496_formatBytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1bcc6d7d7_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1be4644a4_parameterUsesGenerics(jule::Ptr<_1be45cda4_Param>&, jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>&);
inline jule::Ptr<_1c010d47c_TypeSymbol> _1be46697e_buildType(jule::Ptr<_1be396a24_TypeDecl>);
inline jule::Ptr<_1c00ce30a_Value> _1be466c6a_buildExpr(jule::Ptr<_1be39b045_Expr>);
inline jule::Ptr<_1c0108631_TypeAlias> _1be467012_buildTypeAlias(jule::Ptr<_1be3ad178_TypeAliasDecl>);
inline jule::Ptr<_1be37971b_Field> _1be467331_buildField(jule::Ptr<_1be3b1764_FieldDecl>);
inline jule::Slice<jule::Ptr<_1be37971b_Field>> _1be4675c8_buildFields(jule::Slice<jule::Ptr<_1be3b1764_FieldDecl>>&);
inline jule::Ptr<_1be387251_Struct> _1be467870_buildStruct(jule::Ptr<_1be3b20c2_StructDecl>);
inline jule::Ptr<_1be45cda4_Param> _1be467b17_buildParam(jule::Ptr<_1be3a7518_ParamDecl>);
inline jule::Slice<jule::Ptr<_1be45cda4_Param>> _1be467e8b_buildParams(jule::Slice<jule::Ptr<_1be3a7518_ParamDecl>>&);
inline jule::Ptr<_1be45c6de_RetType> _1be468233_buildRetType(jule::Ptr<_1be399b37_RetTypeDecl>);
inline jule::Ptr<_1be45e6e1_Fn> _1be4684ca_buildFn(jule::Ptr<_1be3a8838_FnDecl>);
inline jule::Slice<jule::Ptr<_1be45e6e1_Fn>> _1be468772_buildMethods(jule::Slice<jule::Ptr<_1be3a8838_FnDecl>>&);
inline jule::Ptr<_1be47159e_Trait> _1be468a19_buildTrait(jule::Ptr<_1be3b26cc_TraitDecl>);
inline jule::Ptr<_1be472bee_EnumItem> _1be468cb1_buildEnumItem(jule::Ptr<_1be3ae9d7_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1be472bee_EnumItem>> _1be469058_buildEnumItems(jule::Slice<jule::Ptr<_1be3ae9d7_EnumItemDecl>>&);
inline jule::Ptr<_1be4736e4_Enum> _1be469300_buildEnum(jule::Ptr<_1be3b0510_EnumDecl>);
inline jule::Ptr<_1be474728_TypeEnumItem> _1be469751_buildTypeEnumItem(jule::Ptr<_1be3b1016_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1be474728_TypeEnumItem>> _1be4699e8_buildTypeEnumItems(jule::Slice<jule::Ptr<_1be3b1016_TypeEnumItemDecl>>&);
inline jule::Ptr<_1be474cde_TypeEnum> _1be469c90_buildTypeEnum(jule::Ptr<_1be3b1214_TypeEnumDecl>);
inline jule::Ptr<_1c0081334_Var> _1be46a037_buildVar(jule::Ptr<_1be3a9817_VarDecl>);
inline jule::Slice<jule::Ptr<_1c0081334_Var>> _1be46a2ce_buildVars(jule::Slice<jule::Ptr<_1be3a9817_VarDecl>>);
inline jule::Ptr<_1be50ab22_Impl> _1be46a576_buildImpl(jule::Ptr<_1be3b2cd7_Impl>);
inline jule::Bool _1be4d7cca_matchConstraint(jule::Str&, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1be4d98c0_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_1c004b5b8_scopeChecker> _1be4e3b93_newScopeCheckerBase(jule::Ptr<_1c0064504_Sema>&, jule::Ptr<_1be462392_FnIns>);
inline jule::Ptr<_1c004b5b8_scopeChecker> _1be4e4721_newScopeChecker(jule::Ptr<_1c0064504_Sema>&, jule::Ptr<_1be462392_FnIns>);
inline jule::Ptr<_1c004b1de_scopeLabel> _1be4e55ce_findLabelParent(jule::Str, jule::Ptr<_1c004b5b8_scopeChecker>);
inline jule::Bool _1be4d9727_modelIsGotoScope(jule::Any, jule::Ptr<_1c00487b3_Scope>&);
inline jule::Bool _1be4e659c_stmtIsGotoScope(jule::Any&, jule::Ptr<_1c00487b3_Scope>&);
inline jule::I64 _1be4e745a_countMatchType(jule::Ptr<_1c004a496_Match>&, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Slice<jule::Ptr<_1c00cd282_Data>> _1be505215_getDatasFromTupleData(jule::Ptr<_1c00cd282_Data>&);
inline jule::Slice<jule::Any> _1be50815d_getExprModels(jule::Any&);
inline jule::Bool _1be508b97_checkMut(jule::Ptr<_1c0064504_Sema>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline jule::Bool _1be509725_checkAssign(jule::Ptr<_1c0064504_Sema>&, jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00cd282_Data>, jule::Ptr<_1d675d511_Token>);
inline jule::Bool _1be504d91_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _1be4a6b9a_isValidStForNextSt(jule::Any&);
inline jule::Bool _1be4e3456_stmtIsDef(jule::Any&);
inline jule::Ptr<_1c0081334_Var> _1c0058eaa_findVarInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1c0108631_TypeAlias> _1c00593d9_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1be387251_Struct> _1c00597c4_findStructInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1be45e6e1_Fn> _1c0059c36_findFnInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1be47159e_Trait> _1c005a044_findTraitInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1be4736e4_Enum> _1c005a385_findEnumInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1be474cde_TypeEnum> _1c005a6c6_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>&, jule::Str);
inline jule::Bool _1c00618db_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1c0062645_isValidModelForRef(jule::Any&);
inline _1d6435804_Log _1c0062ada_compilerErr(jule::Ptr<_1d675d511_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c0062e2b_impIsLookupable(jule::Ptr<_1c005b3a8_ImportInfo>&, jule::Str);
inline void _1c0063228_appendRetVars(jule::Slice<jule::Ptr<_1c0081334_Var>>&, jule::Ptr<_1be462392_FnIns>&);
inline void _1c00634d1_appendParamVars(jule::Slice<jule::Ptr<_1c0081334_Var>>&, jule::Ptr<_1be462392_FnIns>&);
inline void _1c00637ab_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>&, jule::Ptr<_1be462392_FnIns>&);
inline jule::Ptr<_1c00c8524_SymbolTable> _1c0063b0d_findFile(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>&, jule::Ptr<_1d676389b_File>&);
inline void _1c0064070_pushSugggestion(_1d6435804_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c00a27c8_traitHasReferenceReceiver(jule::Ptr<_1be47159e_Trait>&);
inline jule::Bool _1c0099803_floatAssignable(jule::Str, jule::Ptr<_1c00cd282_Data>&);
inline jule::Bool _1c0099935_sigAssignable(jule::Str, jule::Ptr<_1c00cd282_Data>&);
inline jule::Bool _1c00b5d80_unsigAssignable(jule::Str, jule::Ptr<_1c00cd282_Data>&);
inline jule::Bool _1c00b5eb2_intAssignable(jule::Str, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1be36332b_Directive> _1c0103a6b_findDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>&, jule::Str);
inline jule::Any _1c0103e01_findBuiltinsImport(jule::Str, jule::Ptr<_1c005b3a8_ImportInfo>);
inline void _1c0104110_fitBitsize(jule::Ptr<_1c00cd282_Data>&);
inline void _1c010440c_makeStructLitAlloc(jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be457a2a_StructLitExprModel>&);
inline jule::Ptr<_1c0081334_Var> _1c010474d_buildErrorVar(jule::Ptr<_1c00487b3_Scope>&, jule::Ptr<_1be3a0313_FnCallExpr>&);
inline jule::Any _1c0104a8e_findBuiltinsSema(jule::Str, jule::Ptr<_1c0064504_Sema>);
inline jule::Bool _1c0104d36_isOkForShifting(jule::Ptr<_1c00cd282_Data>&);
inline jule::Bool _1c01051dd_isInstancedStruct(jule::Ptr<_1be3b359b_StructIns>);
inline jule::Bool _1c01054a7_isPtrArithmeticCompatibleInt(jule::Ptr<_1c00cd282_Data>&);
inline void _1c01056e9_applyCastKindModel(jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c0109324_TypeKind>&);
inline void _1c01059a2_applyCastKind(jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Ptr<_1c00cd282_Data> _1c0105ba0_buildVoidData(void);
inline jule::Str _1c0105e69_checkDataForIntegerIndexing(jule::Ptr<_1c00cd282_Data>&);
inline void _1c0106233_applyCastModelByEnum(jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1be4736e4_Enum>);
inline void _1c01064db_castConstByType(jule::Str&, jule::Ptr<_1c00cd282_Data>&);
inline void _1c01069e7_updateModelToGenericIns(jule::Any&, jule::Ptr<_1be462392_FnIns>&);
inline jule::Bool _1c0106c39_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1be397739_SubIdentTypeDecl>&);
inline jule::Bool _1c0120bdc_kindUsesGenerics(jule::Any&, jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>&);
inline jule::Bool _1c0121072_hasDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>&, jule::Str);
inline jule::Bool _1c0121319_canGetPtr(jule::Ptr<_1c00cd282_Data>&);
inline jule::Bool _1c0121638_isValidForSptrType(jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c01218d0_isValidForRef(jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Bool _1c0121b99_isBuiltinStrConvertable(jule::Ptr<_1c0109324_TypeKind>&);
inline jule::Str _1c0121e1e_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1c010dceb_Prim> _1c01222c6_buildPrimType(jule::Str);
inline jule::Ptr<_1be387251_Struct> _1c012256d_getStructFromKind(jule::Ptr<_1c0109324_TypeKind>);
inline jule::Bool _1c0122815_isPrim(jule::Str);
inline void _1c0122abd_applyImplicitCast(jule::Ptr<_1c0109324_TypeKind>&, jule::Ptr<_1c00cd282_Data>&);
inline std::tuple<jule::Ptr<_1c00c8524_SymbolTable>,jule::Slice<_1d6435804_Log>> _1c01259b1_buildSymbols(jule::Ptr<_1be3621a4_Ast>&, jule::Trait<_1c0058b25_Importer>&, jule::Ptr<_1be46aac6_symbolBuilder>);
inline std::tuple<jule::Ptr<_1c005e312_Package>,jule::Slice<_1d6435804_Log>> _1c0125de0_analyzePackage(jule::Slice<jule::Ptr<_1be3621a4_Ast>>&, jule::Trait<_1c0058b25_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1c005e312_Package>,jule::Slice<_1d6435804_Log>> _1c01262ca_AnalyzePackage(jule::Slice<jule::Ptr<_1be3621a4_Ast>>, jule::Trait<_1c0058b25_Importer>, jule::I64);
inline jule::Ptr<_1be462392_FnIns> _1bcc6e046_findBuiltinFn(jule::Str);
inline jule::Ptr<_1c0108631_TypeAlias> _1bcc6e332_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1bcc6e5c9_findBuiltinDef(jule::Str);
inline jule::Any _1bcc6e8e8_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1bcc6eb90_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1bcc6ee59_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1bcc70278_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1c00cd282_Data> _1bcc70795_builtinCallerCommonPlain(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc70b19_builtinCallerCommon(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc71004_builtinCallerCommonMut(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc71345_builtinCallerError(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc71730_builtinCallerOut(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc71b1a_builtinCallerOutln(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc72005_builtinCallerNew(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc723e0_builtinCallerPanic(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc72a0b_builtinCallerMake(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc72de6_builtinCallerAppend(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc7337a_callerCopySlice(jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc7380e_callerCopyStr(jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc73be9_builtinCallerCopy(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc740d4_builtinCallerClone(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc744be_builtinCallerAssert(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc748cb_builtinCallerStdMemSizeOf(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc74bd9_builtinCallerStdMemAlignOf(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc75107_builtinCallerStdMemFree(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc75536_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc75954_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc75d94_builtinCallerStdDebugOut(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Ptr<_1c00cd282_Data> _1bcc7627e_builtinCallerStdDebugOutln(jule::Ptr<_1c00ced00_Eval>&, jule::Ptr<_1be3a0313_FnCallExpr>&, jule::Ptr<_1c00cd282_Data>&);
inline jule::Bool _1c02c8dea_FindModuleFile(jule::Slice<jule::Ptr<_23214d823_DirEntry>>&);
inline jule::Str _1c02c902c_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1d6435804_Log> _1c02c92b3_CheckModuleFile(jule::Str);
inline jule::Ptr<_1c097c34a_FileInfo> _1c09c3a45_ParseFile(jule::Ptr<_1d676389b_File>);
inline std::tuple<jule::Ptr<_1be3621a4_Ast>,jule::Slice<_1d6435804_Log>> _1c09c4073_parseFileset(jule::Ptr<_1d676389b_File>);
inline jule::Ptr<_1be3a6d42_ScopeTree> _1c09c497a_newScope(void);
inline std::tuple<jule::Bool,jule::Bool> _1c09c4c88_isSt(jule::Ptr<_1d675d511_Token>, jule::Ptr<_1d675d511_Token>);
inline jule::Bool _1c09c50c9_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1c09c545e_nextStPos(jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_1d675d511_Token>>,jule::Bool> _1c09c57a0_skipSt(jule::I64&, jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Slice<jule::Ptr<_1c09c5a9c_stmt>> _1c09c5e43_splitStmts(jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Bool _1c09dc586_isTypeOp(jule::Str&);
inline jule::Bool _1c09dc872_isTypeRange(jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Slice<jule::Ptr<_1d675d511_Token>> _1c09dcb19_getBlockExpr(jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d675d511_Token>>,jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c09dce9e_splitDelim(jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::U64);
inline jule::I64 _1c09dd246_findLowestPrecOp(jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Ptr<_1be39d0ad_IdentExpr> _1c09dd4dd_buildIdentExpr(jule::Ptr<_1d675d511_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d675d511_Token>>,jule::I64> _1c09dd785_getRangeExprTokens(jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Bool _1c09de4de_checkAssignTokens(jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline _1d6435804_Log _1c09e0710_makeErr(jule::I64, jule::I64, jule::Ptr<_1d676389b_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1d675d511_Token>> _1c09e0bd8_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d675d511_Token>>,jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c09e0e80_rangeLast(jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>,jule::Slice<_1d6435804_Log>> _1c09e136a_partsKind(jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::Str, jule::Bool);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>,jule::Slice<_1d6435804_Log>> _1c09e1755_parts(jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1c09e19ec_getCloseKindOfBrace(jule::Str);
inline _1d6435804_Log _1c09e1dd7_compilerErr(jule::Ptr<_1d675d511_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1c09e2316_pushSuggestion(_1d6435804_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c09e25ad_tokstoa(jule::Slice<jule::Ptr<_1d675d511_Token>>&);
inline jule::Bool _1c0a02623_isPub(jule::Str&);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a02e92_buildVoidType(void);
inline jule::Ptr<_1be396a24_TypeDecl> _1c0a03206_buildPrimType(jule::Ptr<_1d675d511_Token>);
inline jule::I64 _1c0a03547_mapColon(jule::Slice<jule::Ptr<_1d675d511_Token>>&, jule::I64&);
inline std::tuple<jule::Bool,jule::Bool> _1c02a3963_checkOs(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1c029d95d_checkArch(jule::Str);
inline jule::Bool _1c029da90_isPassFileAnnotation(jule::Str);
inline void _1c02b81c5_setOsVars(jule::Slice<jule::Str>&);
inline void _1c02b8428_setArchVars(jule::Slice<jule::Str>&);
inline void _1c02b86d1_initVars(jule::Slice<jule::Str>&, _1c02b7db7_CompileInfo&);
inline jule::Slice<jule::U8> _1be17656d_readBuff(jule::Str);
inline _1d6435804_Log _1c01d8876_flatCompilerErr(jule::Str);
inline void _1c08886a7_pushPasses(jule::Ptr<_1c005e312_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1c08b5bce_getAllUniquePasses(jule::Ptr<_1c005e312_Package>&, jule::Slice<jule::Ptr<_1c005b3a8_ImportInfo>>);
inline _1c02b7db7_CompileInfo _1c08d9395_buildCompileInfo(void);
inline void _1c0b15e1d_EliminateDefines(jule::Ptr<_1c0977e39_IR>&);
inline jule::Ptr<_1be36332b_Directive> _1c0b162a3_findDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>&, jule::Str);
inline jule::Bool _1c0b165e4_hasDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>&, jule::Str);
inline void _1c0b1a241_eliminateDeadCodeOfScope(jule::Ptr<_1c00487b3_Scope>);
inline void _1c0b1a4c7_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1be45e6e1_Fn>>&);
inline void _1c0b1a719_eliminateFunctionsScopePackage(jule::Ptr<_1c005e312_Package>&);
inline void _1c0b1a9b1_eliminateScopePackage(jule::Ptr<_1c005e312_Package>&);
inline void _1c0b1abc0_EliminateScopes(jule::Ptr<_1c0977e39_IR>&);
inline jule::Bool _1bca571b4_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1bcb4a3c8_isConstantValidConditionalCase(jule::Ptr<_1c00489a0_If>&);
inline jule::Bool _1bcb58848_isUnreachableExpr(jule::Any&);
inline jule::Bool _1bcb61e17_isConstantValidMatchCase(jule::Ptr<_1c004a9e6_Case>&);
inline jule::Bool _1bcb9a538_isUnreachableConditionalCase(jule::Ptr<_1c00489a0_If>&);
inline jule::Bool _1bcb9c826_isUnreachableMatchCase(jule::Ptr<_1c004a9e6_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1bcc56e1e_checkForBitShiftOpt(jule::Ptr<_1be457277_OperandExprModel>&, jule::Ptr<_1be457277_OperandExprModel>&);
inline void _1bcc57804_PushOptLevel(jule::I64);
inline void _1c0aaac70_detectEnabled(void);
inline void _1c0b38083_Throw(jule::Str);
inline jule::U64 _1c1215693_unix(void);
inline jule::U64 _1c12159d4_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1c1215d69_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1c1190b07_isCopyOptimizable(jule::Ptr<_1c00cd282_Data>&);
inline jule::Bool _1c1190e8c_isIterCopyOptimizable(jule::Ptr<_1c00cd282_Data>&, jule::Ptr<_1c0081334_Var>&);
inline jule::Str _1c119e088_decomposeCommonEsq(jule::U8);
inline jule::Str _1c119e374_sbtoa(jule::U8);
inline jule::Str _1c119e61b_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1c119e93a_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1c119ec48_ftoa(jule::F64, jule::I64);
inline jule::Str _1c119eee0_itoa(jule::I64);
inline jule::Str _1c11a0287_utoa(jule::U64);
inline jule::Bool _1c11a063e_isForwarded(jule::Ptr<_1c00487b3_Scope>&);
inline jule::Bool _1c11a0908_isBuiltinCallHasDebuginf(jule::Ptr<_1be4580e1_FnCallExprModel>&);
inline void _1c121abd7_iterFiles(jule::Ptr<_1c005e312_Package>&, jule::Fn<void(jule::Ptr<_1c00c8524_SymbolTable>&)>);
inline void _1c121ae3a_prepareStructure(jule::Ptr<_1be387251_Struct>&);
inline jule::Str _1c121b1d2_concatAllParts(jule::Slice<jule::Ptr<_1d675d511_Token>>);
inline jule::Ptr<_1be36332b_Directive> _1c1224608_findDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>&, jule::Str);
inline jule::Bool _1c122498d_hasDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>&, jule::Str);
inline void _232005b4d_printErrorMessage(jule::Str);
inline void _232005c80_help(jule::Slice<jule::Str>&);
inline void _232005db2_version(jule::Slice<jule::Str>&);
inline void _232005ee4_toolDistos(void);
inline void _232006126_toolDistarch(void);
inline void _232006258_tool(jule::Slice<jule::Str>&);
inline void _2320063ce_julenv(jule::Slice<jule::Str>&);
inline void _2320066ba_mod(jule::Slice<jule::Str>&);
inline jule::Bool _232006962_processCommand(jule::Slice<jule::Str>&);
inline void _232006ac7_showInfo(void);
void entry_point(void);
inline void _1bd8deb0b_init(void);
inline jule::Ptr<_233937270_File> _233b29d8b_openOutput(jule::Str&);
inline void _233b3d1ce_clearObjects(void);
inline void _233b4ed28_compileIr(jule::Str, jule::Str);
inline jule::Bool _233b53832_isCppSourceFile(jule::Str);
inline void _233b56d63_pushCompCmdClang(jule::Str&);
inline void _233b5c143_pushCompCmdGcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1bd897b2a_genCompileCmd(jule::Str, jule::Ptr<_1c0977e39_IR>&);
inline jule::Str _1bd8a5ae4_getCompilePath(void);
inline void _1bd8a7684_applyTargetIndependentOptimizations(jule::Ptr<_1c0977e39_IR>&);
inline void _1bd8a8388_checkCompilerFlag(void);
inline void _1bd8ba6ec_checkTargetArch(jule::Str);
inline void _1bd8d0217_checkTargetOs(jule::Str);
inline void _1bd8d0d72_checkTargetFlag(jule::Str&);
inline void _1bd901b40_checkOptFlag(jule::Str&);
inline void _1bd91215b_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1bd917d21_checkFlags(jule::Slice<jule::Str>&);
inline void _1bd948cb9_setupSemaFlags(jule::I64&);
inline jule::Ptr<_1c0977e39_IR> _233b3822e_buildIr(jule::Slice<jule::Str>&);
inline void _1bd94d74c_compileCommand(jule::Slice<jule::Str>&);


struct _1c0058b25_ImporterMptrData {
	void(*_1c0057a47_SetModPath)(jule::Trait<_1c0058b25_Importer>, jule::Str);
	jule::Str(*_1c0057c89_GetModPath)(jule::Trait<_1c0058b25_Importer>);
	jule::Str(*_1c0058097_ModById)(jule::Trait<_1c0058b25_Importer>, jule::I64);
	jule::Ptr<_1c005b3a8_ImportInfo>(*_1c00583a5_GetImport)(jule::Trait<_1c0058b25_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1be3621a4_Ast>>,jule::Slice<_1d6435804_Log>>(*_1c005875c_ImportPackage)(jule::Trait<_1c0058b25_Importer>, jule::Str, jule::Bool);
	void(*_1c00589d2_Imported)(jule::Trait<_1c0058b25_Importer>, jule::Ptr<_1c005b3a8_ImportInfo>);
};

struct _1c0108de5_KindMptrData {
	jule::Str(*_1c0108994_Str)(jule::Trait<_1c0108de5_Kind>);
	jule::Bool(*_1c0108ca2_Equals)(jule::Trait<_1c0108de5_Kind>, jule::Ptr<_1c0109324_TypeKind>);
};

struct _1c0124e55_LookupMptrData {
	jule::Ptr<_1c005b3a8_ImportInfo>(*_1c012310c_FindPackage)(jule::Trait<_1c0124e55_Lookup>, jule::Str);
	jule::Ptr<_1c005b3a8_ImportInfo>(*_1c012341a_SelectPackage)(jule::Trait<_1c0124e55_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)>);
	jule::Ptr<_1c0081334_Var>(*_1c01237c2_FindVar)(jule::Trait<_1c0124e55_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1c0108631_TypeAlias>(*_1c0123b79_FindTypeAlias)(jule::Trait<_1c0124e55_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1be387251_Struct>(*_1c0124031_FindStruct)(jule::Trait<_1c0124e55_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1be45e6e1_Fn>(*_1c01243d8_FindFn)(jule::Trait<_1c0124e55_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1be47159e_Trait>(*_1c01246e6_FindTrait)(jule::Trait<_1c0124e55_Lookup>, jule::Str);
	jule::Ptr<_1be4736e4_Enum>(*_1c0124a04_FindEnum)(jule::Trait<_1c0124e55_Lookup>, jule::Str);
	jule::Ptr<_1be474cde_TypeEnum>(*_1c0124d12_FindTypeEnum)(jule::Trait<_1c0124e55_Lookup>, jule::Str);
};

struct _233aec512_CommonFlagMptrData {
	jule::Str(*_233aeb29c_Name)(jule::Trait<_233aec512_CommonFlag>);
	jule::I32(*_233b00e94_Short)(jule::Trait<_233aec512_CommonFlag>);
	jule::Str(*_233b06197_What)(jule::Trait<_233aec512_CommonFlag>);
	void(*_233b159c0_Reset)(jule::Trait<_233aec512_CommonFlag>);
};



inline void _1c0057a47_SetModPath_0(jule::Trait<_1c0058b25_Importer> _self_, jule::Str _1729_path) {
	_1c020d8bd_SetModPath(_self_.safe_ptr<_1c065a589_JuleImporter>(), _1729_path);
}
inline jule::Str _1c0057c89_GetModPath_0(jule::Trait<_1c0058b25_Importer> _self_) {
	return _1c064a029_GetModPath(_self_.safe_ptr<_1c065a589_JuleImporter>());
}
inline jule::Str _1c0058097_ModById_0(jule::Trait<_1c0058b25_Importer> _self_, jule::I64 _2522_id) {
	return _1c0651c01_ModById(_self_.safe_ptr<_1c065a589_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c00583a5_GetImport_0(jule::Trait<_1c0058b25_Importer> _self_, jule::Str _3128_path) {
	return _1c079e733_GetImport(_self_.safe_ptr<_1c065a589_JuleImporter>(), _3128_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1be3621a4_Ast>>,jule::Slice<_1d6435804_Log>> _1c005875c_ImportPackage_0(jule::Trait<_1c0058b25_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1c07a895c_ImportPackage(_self_.safe_ptr<_1c065a589_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1c00589d2_Imported_0(jule::Trait<_1c0058b25_Importer> _self_, jule::Ptr<_1c005b3a8_ImportInfo> _4131__0) {
	_1c07c11b1_Imported(_self_.safe_ptr<_1c065a589_JuleImporter>(), _4131__0);
}
inline jule::Str _1c0108994_Str_0(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1be388e34_Str(_self_.safe_ptr<_1be3b359b_StructIns>());
}
inline jule::Bool _1c0108ca2_Equals_0(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1be38a09a_Equals(_self_.data.as<_1be3b359b_StructIns>(), _5622_other);
}
inline jule::Str _1c0108994_Str_1(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1be4626c2_Str(_self_.safe_ptr<_1be462392_FnIns>());
}
inline jule::Bool _1c0108ca2_Equals_1(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1be4629d0_Equals(_self_.data.as<_1be462392_FnIns>(), _5622_other);
}
inline jule::Str _1c0108994_Str_2(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1be47199a_Str(_self_.safe_ptr<_1be47159e_Trait>());
}
inline jule::Bool _1c0108ca2_Equals_2(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1be471ca8_Equals(_self_.data.as<_1be47159e_Trait>(), _5622_other);
}
inline jule::Str _1c0108994_Str_3(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1be473a57_Str(_self_.safe_ptr<_1be4736e4_Enum>());
}
inline jule::Bool _1c0108ca2_Equals_3(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1be473d65_Equals(_self_.data.as<_1be4736e4_Enum>(), _5622_other);
}
inline jule::Str _1c0108994_Str_4(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1be47511e_Str(_self_.safe_ptr<_1be474cde_TypeEnum>());
}
inline jule::Bool _1c0108ca2_Equals_4(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1be47542c_Equals(_self_.data.as<_1be474cde_TypeEnum>(), _5622_other);
}
inline jule::Str _1c0108994_Str_5(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1c0109720_Str(_self_.safe_ptr<_1c0109324_TypeKind>());
}
inline jule::Bool _1c0108ca2_Equals_5(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1c0109a2d_Equals(_self_.data.as<_1c0109324_TypeKind>(), _5622_other);
}
inline jule::Str _1c0108994_Str_6(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1c010e15e_Str(_self_.safe_ptr<_1c010dceb_Prim>());
}
inline jule::Bool _1c0108ca2_Equals_6(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1c010e46c_Equals(_self_.data.as<_1c010dceb_Prim>(), _5622_other);
}
inline jule::Str _1c0108994_Str_7(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1c01128e3_Str(_self_.safe_ptr<_1c0112580_Sptr>());
}
inline jule::Bool _1c0108ca2_Equals_7(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1c0112c01_Equals(_self_.data.as<_1c0112580_Sptr>(), _5622_other);
}
inline jule::Str _1c0108994_Str_8(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1c01134e8_Str(_self_.safe_ptr<_1c0112edc_Slc>());
}
inline jule::Bool _1c0108ca2_Equals_8(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1c0113806_Equals(_self_.data.as<_1c0112edc_Slc>(), _5622_other);
}
inline jule::Str _1c0108994_Str_9(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1c0113dcd_Str(_self_.safe_ptr<_1c0113a6a_Tuple>());
}
inline jule::Bool _1c0108ca2_Equals_9(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1c01141db_Equals(_self_.data.as<_1c0113a6a_Tuple>(), _5622_other);
}
inline jule::Str _1c0108994_Str_10(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1c0114906_Str(_self_.safe_ptr<_1c0114593_Map>());
}
inline jule::Bool _1c0108ca2_Equals_10(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1c0114c14_Equals(_self_.data.as<_1c0114593_Map>(), _5622_other);
}
inline jule::Str _1c0108994_Str_11(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1c01154ea_Str(_self_.safe_ptr<_1c0115187_Arr>());
}
inline jule::Bool _1c0108ca2_Equals_11(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1c0115808_Equals(_self_.data.as<_1c0115187_Arr>(), _5622_other);
}
inline jule::Str _1c0108994_Str_12(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1c0115e57_Str(_self_.safe_ptr<_1c0115ae4_Ptr>());
}
inline jule::Bool _1c0108ca2_Equals_12(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1c0116265_Equals(_self_.data.as<_1c0115ae4_Ptr>(), _5622_other);
}
inline jule::Str _1c0108994_Str_13(jule::Trait<_1c0108de5_Kind> _self_) {
	return _1c121c1b1_Str(_self_.safe_ptr<_1c121bde7_customType>());
}
inline jule::Bool _1c0108ca2_Equals_13(jule::Trait<_1c0108de5_Kind> _self_, jule::Ptr<_1c0109324_TypeKind> _5622_other) {
	return _1c121c4be_Equals(_self_.data.as<_1c121bde7_customType>(), _5622_other);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c012310c_FindPackage_0(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _930_ident) {
	return _1c004b7a5_FindPackage(_self_.safe_ptr<_1c004b5b8_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c012341a_SelectPackage_0(jule::Trait<_1c0124e55_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)> _1332_selector) {
	return _1c004b8d7_SelectPackage(_self_.safe_ptr<_1c004b5b8_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1c0081334_Var> _1c01237c2_FindVar_0(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1c004ba19_FindVar(_self_.safe_ptr<_1c004b5b8_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1c0108631_TypeAlias> _1c0123b79_FindTypeAlias_0(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1c004bb4b_FindTypeAlias(_self_.safe_ptr<_1c004b5b8_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1be387251_Struct> _1c0124031_FindStruct_0(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1c004bc7d_FindStruct(_self_.safe_ptr<_1c004b5b8_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1be45e6e1_Fn> _1c01243d8_FindFn_0(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1c004bdb0_FindFn(_self_.safe_ptr<_1c004b5b8_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1be47159e_Trait> _1c01246e6_FindTrait_0(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _3328_ident) {
	return _1c004bee2_FindTrait(_self_.safe_ptr<_1c004b5b8_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1be4736e4_Enum> _1c0124a04_FindEnum_0(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _3727_ident) {
	return _1c004c124_FindEnum(_self_.safe_ptr<_1c004b5b8_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1be474cde_TypeEnum> _1c0124d12_FindTypeEnum_0(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _4131_ident) {
	return _1c004c256_FindTypeEnum(_self_.safe_ptr<_1c004b5b8_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c012310c_FindPackage_1(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _930_ident) {
	return _1c005b8c5_FindPackage(_self_.safe_ptr<_1c005b3a8_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c012341a_SelectPackage_1(jule::Trait<_1c0124e55_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)> _1332_selector) {
	return _1c005bbd3_SelectPackage(_self_.safe_ptr<_1c005b3a8_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1c0081334_Var> _1c01237c2_FindVar_1(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1c005c08a_FindVar(_self_.safe_ptr<_1c005b3a8_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1c0108631_TypeAlias> _1c0123b79_FindTypeAlias_1(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1c005c442_FindTypeAlias(_self_.safe_ptr<_1c005b3a8_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1be387251_Struct> _1c0124031_FindStruct_1(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1c005c7e9_FindStruct(_self_.safe_ptr<_1c005b3a8_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1be45e6e1_Fn> _1c01243d8_FindFn_1(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1c005cba1_FindFn(_self_.safe_ptr<_1c005b3a8_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1be47159e_Trait> _1c01246e6_FindTrait_1(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _3328_ident) {
	return _1c005ceae_FindTrait(_self_.safe_ptr<_1c005b3a8_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1be4736e4_Enum> _1c0124a04_FindEnum_1(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _3727_ident) {
	return _1c005d2bc_FindEnum(_self_.safe_ptr<_1c005b3a8_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1be474cde_TypeEnum> _1c0124d12_FindTypeEnum_1(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _4131_ident) {
	return _1c005d5ca_FindTypeEnum(_self_.safe_ptr<_1c005b3a8_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c012310c_FindPackage_2(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _930_ident) {
	return _1c005e7da_FindPackage(_self_.safe_ptr<_1c005e312_Package>(), _930_ident);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c012341a_SelectPackage_2(jule::Trait<_1c0124e55_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)> _1332_selector) {
	return _1c005eae8_SelectPackage(_self_.safe_ptr<_1c005e312_Package>(), _1332_selector);
}
inline jule::Ptr<_1c0081334_Var> _1c01237c2_FindVar_2(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1c005eea0_FindVar(_self_.safe_ptr<_1c005e312_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1c0108631_TypeAlias> _1c0123b79_FindTypeAlias_2(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1c0060357_FindTypeAlias(_self_.safe_ptr<_1c005e312_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1be387251_Struct> _1c0124031_FindStruct_2(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1c006070e_FindStruct(_self_.safe_ptr<_1c005e312_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1be45e6e1_Fn> _1c01243d8_FindFn_2(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1c0060ab6_FindFn(_self_.safe_ptr<_1c005e312_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1be47159e_Trait> _1c01246e6_FindTrait_2(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _3328_ident) {
	return _1c0060dc4_FindTrait(_self_.safe_ptr<_1c005e312_Package>(), _3328_ident);
}
inline jule::Ptr<_1be4736e4_Enum> _1c0124a04_FindEnum_2(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _3727_ident) {
	return _1c00611d2_FindEnum(_self_.safe_ptr<_1c005e312_Package>(), _3727_ident);
}
inline jule::Ptr<_1be474cde_TypeEnum> _1c0124d12_FindTypeEnum_2(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _4131_ident) {
	return _1c00614e0_FindTypeEnum(_self_.safe_ptr<_1c005e312_Package>(), _4131_ident);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c012310c_FindPackage_3(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _930_ident) {
	return _1c0064a21_FindPackage(_self_.safe_ptr<_1c0064504_Sema>(), _930_ident);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c012341a_SelectPackage_3(jule::Trait<_1c0124e55_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)> _1332_selector) {
	return _1c0064d2e_SelectPackage(_self_.safe_ptr<_1c0064504_Sema>(), _1332_selector);
}
inline jule::Ptr<_1c0081334_Var> _1c01237c2_FindVar_3(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1c00651d6_FindVar(_self_.safe_ptr<_1c0064504_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1c0108631_TypeAlias> _1c0123b79_FindTypeAlias_3(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1c006558d_FindTypeAlias(_self_.safe_ptr<_1c0064504_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1be387251_Struct> _1c0124031_FindStruct_3(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1c0065945_FindStruct(_self_.safe_ptr<_1c0064504_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1be45e6e1_Fn> _1c01243d8_FindFn_3(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1c0065cec_FindFn(_self_.safe_ptr<_1c0064504_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1be47159e_Trait> _1c01246e6_FindTrait_3(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _3328_ident) {
	return _1c006610a_FindTrait(_self_.safe_ptr<_1c0064504_Sema>(), _3328_ident);
}
inline jule::Ptr<_1be4736e4_Enum> _1c0124a04_FindEnum_3(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _3727_ident) {
	return _1c0066418_FindEnum(_self_.safe_ptr<_1c0064504_Sema>(), _3727_ident);
}
inline jule::Ptr<_1be474cde_TypeEnum> _1c0124d12_FindTypeEnum_3(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _4131_ident) {
	return _1c0066726_FindTypeEnum(_self_.safe_ptr<_1c0064504_Sema>(), _4131_ident);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c012310c_FindPackage_4(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _930_ident) {
	return _1c00c8a41_FindPackage(_self_.safe_ptr<_1c00c8524_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1c005b3a8_ImportInfo> _1c012341a_SelectPackage_4(jule::Trait<_1c0124e55_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)> _1332_selector) {
	return _1c00c8d4e_SelectPackage(_self_.safe_ptr<_1c00c8524_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1c0081334_Var> _1c01237c2_FindVar_4(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1c00c9206_FindVar(_self_.safe_ptr<_1c00c8524_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1c0108631_TypeAlias> _1c0123b79_FindTypeAlias_4(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1c00c95ad_FindTypeAlias(_self_.safe_ptr<_1c00c8524_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1be387251_Struct> _1c0124031_FindStruct_4(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1c00c9965_FindStruct(_self_.safe_ptr<_1c00c8524_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1be45e6e1_Fn> _1c01243d8_FindFn_4(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1c00c9d1c_FindFn(_self_.safe_ptr<_1c00c8524_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1be47159e_Trait> _1c01246e6_FindTrait_4(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _3328_ident) {
	return _1c00ca12a_FindTrait(_self_.safe_ptr<_1c00c8524_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1be4736e4_Enum> _1c0124a04_FindEnum_4(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _3727_ident) {
	return _1c00ca438_FindEnum(_self_.safe_ptr<_1c00c8524_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1be474cde_TypeEnum> _1c0124d12_FindTypeEnum_4(jule::Trait<_1c0124e55_Lookup> _self_, jule::Str _4131_ident) {
	return _1c00ca746_FindTypeEnum(_self_.safe_ptr<_1c00c8524_SymbolTable>(), _4131_ident);
}
inline jule::Str _233aeb29c_Name_0(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c3936114_Name(_self_.safe_ptr<_1c3936774_Flag>());
}
inline jule::I32 _233b00e94_Short_0(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c3936dc3_Short(_self_.safe_ptr<_1c3936774_Flag>());
}
inline jule::Str _233b06197_What_0(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c3936b5e_What(_self_.safe_ptr<_1c3936774_Flag>());
}
inline void _233b159c0_Reset_0(jule::Trait<_233aec512_CommonFlag> _self_) {
	_1c3936c91_Reset(_self_.safe_ptr<_1c3936774_Flag>());
}
inline jule::Str _233aeb29c_Name_1(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c3939e81_Name(_self_.safe_ptr<_1c393a437_Flag>());
}
inline jule::I32 _233b00e94_Short_1(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c393a965_Short(_self_.safe_ptr<_1c393a437_Flag>());
}
inline jule::Str _233b06197_What_1(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c393a701_What(_self_.safe_ptr<_1c393a437_Flag>());
}
inline void _233b159c0_Reset_1(jule::Trait<_233aec512_CommonFlag> _self_) {
	_1c393a833_Reset(_self_.safe_ptr<_1c393a437_Flag>());
}
inline jule::Str _233aeb29c_Name_2(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c393d968_Name(_self_.safe_ptr<_1c393de1e_Flag>());
}
inline jule::I32 _233b00e94_Short_2(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c393e44c_Short(_self_.safe_ptr<_1c393de1e_Flag>());
}
inline jule::Str _233b06197_What_2(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c393e1d8_What(_self_.safe_ptr<_1c393de1e_Flag>());
}
inline void _233b159c0_Reset_2(jule::Trait<_233aec512_CommonFlag> _self_) {
	_1c393e31a_Reset(_self_.safe_ptr<_1c393de1e_Flag>());
}
inline jule::Str _233aeb29c_Name_3(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c3942494_Name(_self_.safe_ptr<_1c394294a_Flag>());
}
inline jule::I32 _233b00e94_Short_3(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c3942e78_Short(_self_.safe_ptr<_1c394294a_Flag>());
}
inline jule::Str _233b06197_What_3(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c3942c14_What(_self_.safe_ptr<_1c394294a_Flag>());
}
inline void _233b159c0_Reset_3(jule::Trait<_233aec512_CommonFlag> _self_) {
	_1c3942d46_Reset(_self_.safe_ptr<_1c394294a_Flag>());
}
inline jule::Str _233aeb29c_Name_4(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c3945e7b_Name(_self_.safe_ptr<_1c3946432_Flag>());
}
inline jule::I32 _233b00e94_Short_4(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c3946960_Short(_self_.safe_ptr<_1c3946432_Flag>());
}
inline jule::Str _233b06197_What_4(jule::Trait<_233aec512_CommonFlag> _self_) {
	return _1c39466eb_What(_self_.safe_ptr<_1c3946432_Flag>());
}
inline void _233b159c0_Reset_4(jule::Trait<_233aec512_CommonFlag> _self_) {
	_1c394682d_Reset(_self_.safe_ptr<_1c3946432_Flag>());
}


static _1c0058b25_ImporterMptrData _1c0058b25_Importer_mptr_data[] = {
	{
		._1c0057a47_SetModPath=_1c0057a47_SetModPath_0,
		._1c0057c89_GetModPath=_1c0057c89_GetModPath_0,
		._1c0058097_ModById=_1c0058097_ModById_0,
		._1c00583a5_GetImport=_1c00583a5_GetImport_0,
		._1c005875c_ImportPackage=_1c005875c_ImportPackage_0,
		._1c00589d2_Imported=_1c00589d2_Imported_0,
	},
};
static _1c0108de5_KindMptrData _1c0108de5_Kind_mptr_data[] = {
	{
		._1c0108994_Str=_1c0108994_Str_0,
		._1c0108ca2_Equals=_1c0108ca2_Equals_0,
	},
	{
		._1c0108994_Str=_1c0108994_Str_1,
		._1c0108ca2_Equals=_1c0108ca2_Equals_1,
	},
	{
		._1c0108994_Str=_1c0108994_Str_2,
		._1c0108ca2_Equals=_1c0108ca2_Equals_2,
	},
	{
		._1c0108994_Str=_1c0108994_Str_3,
		._1c0108ca2_Equals=_1c0108ca2_Equals_3,
	},
	{
		._1c0108994_Str=_1c0108994_Str_4,
		._1c0108ca2_Equals=_1c0108ca2_Equals_4,
	},
	{
		._1c0108994_Str=_1c0108994_Str_5,
		._1c0108ca2_Equals=_1c0108ca2_Equals_5,
	},
	{
		._1c0108994_Str=_1c0108994_Str_6,
		._1c0108ca2_Equals=_1c0108ca2_Equals_6,
	},
	{
		._1c0108994_Str=_1c0108994_Str_7,
		._1c0108ca2_Equals=_1c0108ca2_Equals_7,
	},
	{
		._1c0108994_Str=_1c0108994_Str_8,
		._1c0108ca2_Equals=_1c0108ca2_Equals_8,
	},
	{
		._1c0108994_Str=_1c0108994_Str_9,
		._1c0108ca2_Equals=_1c0108ca2_Equals_9,
	},
	{
		._1c0108994_Str=_1c0108994_Str_10,
		._1c0108ca2_Equals=_1c0108ca2_Equals_10,
	},
	{
		._1c0108994_Str=_1c0108994_Str_11,
		._1c0108ca2_Equals=_1c0108ca2_Equals_11,
	},
	{
		._1c0108994_Str=_1c0108994_Str_12,
		._1c0108ca2_Equals=_1c0108ca2_Equals_12,
	},
	{
		._1c0108994_Str=_1c0108994_Str_13,
		._1c0108ca2_Equals=_1c0108ca2_Equals_13,
	},
};
static _1c0124e55_LookupMptrData _1c0124e55_Lookup_mptr_data[] = {
	{
		._1c012310c_FindPackage=_1c012310c_FindPackage_0,
		._1c012341a_SelectPackage=_1c012341a_SelectPackage_0,
		._1c01237c2_FindVar=_1c01237c2_FindVar_0,
		._1c0123b79_FindTypeAlias=_1c0123b79_FindTypeAlias_0,
		._1c0124031_FindStruct=_1c0124031_FindStruct_0,
		._1c01243d8_FindFn=_1c01243d8_FindFn_0,
		._1c01246e6_FindTrait=_1c01246e6_FindTrait_0,
		._1c0124a04_FindEnum=_1c0124a04_FindEnum_0,
		._1c0124d12_FindTypeEnum=_1c0124d12_FindTypeEnum_0,
	},
	{
		._1c012310c_FindPackage=_1c012310c_FindPackage_1,
		._1c012341a_SelectPackage=_1c012341a_SelectPackage_1,
		._1c01237c2_FindVar=_1c01237c2_FindVar_1,
		._1c0123b79_FindTypeAlias=_1c0123b79_FindTypeAlias_1,
		._1c0124031_FindStruct=_1c0124031_FindStruct_1,
		._1c01243d8_FindFn=_1c01243d8_FindFn_1,
		._1c01246e6_FindTrait=_1c01246e6_FindTrait_1,
		._1c0124a04_FindEnum=_1c0124a04_FindEnum_1,
		._1c0124d12_FindTypeEnum=_1c0124d12_FindTypeEnum_1,
	},
	{
		._1c012310c_FindPackage=_1c012310c_FindPackage_2,
		._1c012341a_SelectPackage=_1c012341a_SelectPackage_2,
		._1c01237c2_FindVar=_1c01237c2_FindVar_2,
		._1c0123b79_FindTypeAlias=_1c0123b79_FindTypeAlias_2,
		._1c0124031_FindStruct=_1c0124031_FindStruct_2,
		._1c01243d8_FindFn=_1c01243d8_FindFn_2,
		._1c01246e6_FindTrait=_1c01246e6_FindTrait_2,
		._1c0124a04_FindEnum=_1c0124a04_FindEnum_2,
		._1c0124d12_FindTypeEnum=_1c0124d12_FindTypeEnum_2,
	},
	{
		._1c012310c_FindPackage=_1c012310c_FindPackage_3,
		._1c012341a_SelectPackage=_1c012341a_SelectPackage_3,
		._1c01237c2_FindVar=_1c01237c2_FindVar_3,
		._1c0123b79_FindTypeAlias=_1c0123b79_FindTypeAlias_3,
		._1c0124031_FindStruct=_1c0124031_FindStruct_3,
		._1c01243d8_FindFn=_1c01243d8_FindFn_3,
		._1c01246e6_FindTrait=_1c01246e6_FindTrait_3,
		._1c0124a04_FindEnum=_1c0124a04_FindEnum_3,
		._1c0124d12_FindTypeEnum=_1c0124d12_FindTypeEnum_3,
	},
	{
		._1c012310c_FindPackage=_1c012310c_FindPackage_4,
		._1c012341a_SelectPackage=_1c012341a_SelectPackage_4,
		._1c01237c2_FindVar=_1c01237c2_FindVar_4,
		._1c0123b79_FindTypeAlias=_1c0123b79_FindTypeAlias_4,
		._1c0124031_FindStruct=_1c0124031_FindStruct_4,
		._1c01243d8_FindFn=_1c01243d8_FindFn_4,
		._1c01246e6_FindTrait=_1c01246e6_FindTrait_4,
		._1c0124a04_FindEnum=_1c0124a04_FindEnum_4,
		._1c0124d12_FindTypeEnum=_1c0124d12_FindTypeEnum_4,
	},
};
static _233aec512_CommonFlagMptrData _233aec512_CommonFlag_mptr_data[] = {
	{
		._233aeb29c_Name=_233aeb29c_Name_0,
		._233b00e94_Short=_233b00e94_Short_0,
		._233b06197_What=_233b06197_What_0,
		._233b159c0_Reset=_233b159c0_Reset_0,
	},
	{
		._233aeb29c_Name=_233aeb29c_Name_1,
		._233b00e94_Short=_233b00e94_Short_1,
		._233b06197_What=_233b06197_What_1,
		._233b159c0_Reset=_233b159c0_Reset_1,
	},
	{
		._233aeb29c_Name=_233aeb29c_Name_2,
		._233b00e94_Short=_233b00e94_Short_2,
		._233b06197_What=_233b06197_What_2,
		._233b159c0_Reset=_233b159c0_Reset_2,
	},
	{
		._233aeb29c_Name=_233aeb29c_Name_3,
		._233b00e94_Short=_233b00e94_Short_3,
		._233b06197_What=_233b06197_What_3,
		._233b159c0_Reset=_233b159c0_Reset_3,
	},
	{
		._233aeb29c_Name=_233aeb29c_Name_4,
		._233b00e94_Short=_233b00e94_Short_4,
		._233b06197_What=_233b06197_What_4,
		._233b159c0_Reset=_233b159c0_Reset_4,
	},
};


jule::Str _233b08c38_OutDir = jule::Str("dist", 4);
jule::Str _233b104ae_OutName = jule::Str("ir.cpp", 6);
jule::Str _233b10745_Out = jule::Str();
jule::Str _231e80d2b_Compiler = jule::Str();
jule::Str _231e81090_CompilerPath = jule::Str();
jule::Str _231e81304_CppStd = jule::Str("cpp17", 5);
jule::Bool _231e81568_Shadowing = false;
jule::Bool _231e817cc_Transpilation = false;
jule::Bool _231e81a74_Test = false;
jule::Bool _231e81d71_RC = true;
jule::Bool _231e8228e_Safety = true;
jule::Bool _231e8259c_Production = false;
jule::Ptr<_200a30984_RangeTable> _2009b19e2__L = jule::new_ptr<_200a30984_RangeTable>(_200a30984_RangeTable{._field_R16=jule::Slice<_200a3008d_Range16>::make({_200a3008d_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_200a3008d_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_200a3008d_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_200a3008d_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_200a3008d_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_200a3008d_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_200a3008d_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_200a3008d_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_200a3008d_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_200a3008d_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_200a3008d_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_200a3008d_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_200a3008d_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_200a3008d_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_200a3008d_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_200a3008d_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_200a3008d_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_200a3008d_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_200a3008d_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_200a3008d_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_200a3008d_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_200a3008d_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_200a3008d_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_200a3008d_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_200a3008d_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_200a3008d_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_200a3008d_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_200a3008d_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_200a3008d_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_200a3008d_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_200a3008d_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_200a3008d_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_200a3008d_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_200a3008d_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_200a3008d_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_200a3008d_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_200a3008d_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_200a3008d_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_200a3008d_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_200a3008d_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_200a3008d_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_200a3008d_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_200a3008d_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_200a3008d_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_200a3008d_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_200a3008d_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_200a3008d_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_200a3008d_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_200a3008d_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_200a3008d_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_200a3008d_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_200a3008d_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_200a3008d_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_200a3008d_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_200a3008d_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_200a3008d_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_200a3008d_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_200a3008d_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_200a3008d_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_200a3008d_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_200a30511_Range32>::make({_200a30511_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_200a30511_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_200a30511_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_200a30511_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_200a30511_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_200a30511_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_200a30511_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_200a30511_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_200a30511_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_200a30511_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_200a30511_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_200a30511_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_200a30511_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_200a30511_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_200a30511_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_200a30511_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_200a30511_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_200a30511_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_200a30511_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_200a30511_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_200a30511_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_200a30511_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_200a30511_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_200a30511_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_200a30511_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_200a30511_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_200a30511_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_200a30511_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_200a30511_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_200a30511_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_200a30511_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_200a30984_RangeTable> _2009b2b47__LU = jule::new_ptr<_200a30984_RangeTable>(_200a30984_RangeTable{._field_R16=jule::Slice<_200a3008d_Range16>::make({_200a3008d_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_200a3008d_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_200a3008d_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_200a3008d_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_200a3008d_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_200a3008d_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_200a3008d_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_200a3008d_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_200a3008d_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_200a3008d_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_200a3008d_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_200a3008d_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_200a3008d_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_200a3008d_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_200a3008d_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_200a3008d_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_200a3008d_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_200a30511_Range32>::make({_200a30511_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_200a30511_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_200a30511_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_200a30511_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_200a30511_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_200a30511_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_200a30511_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _1d6427681_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1d6426d12_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1d6426e00_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _231edd130_PathStdlib = jule::Str();
jule::Str _231edeede_PathExec = jule::Str();
jule::Str _231ee2640_PathWd = jule::Str();
jule::Str _231eecdba_PathApi = jule::Str();
jule::Array<jule::I32,5> _1d66b42d0_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1d66b4544_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1d66b4885_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1d6757ad2_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1d6757e23_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1d6765903_kindPair,46> _1d6765d87_keywords = jule::Array<_1d6765903_kindPair,46>({_1d6765903_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d6765903_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1d6765903_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1d6765903_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1d6765903_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1d6765903_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1d6765903_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1d6765903_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1d6765903_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1d6765903_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1d6765903_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1d6765903_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1d6765903_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1d6765903_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1d6765903_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_1d6765903_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_1d6765903_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_1d6765903_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_1d6765903_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_1d6765903_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_1d6765903_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_1d6765903_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_1d6765903_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1d6765903_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_1d6765903_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_1d6765903_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_1d6765903_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1d6765903_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_1d6765903_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1d6765903_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_1d6765903_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<_1d6765903_kindPair,39> _1d676621c_basicOps = jule::Array<_1d6765903_kindPair,39>({_1d6765903_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1d6765903_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1d6765903_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1d6765903_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1d6765903_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1d6765903_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d6765903_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _1c00046d6__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1c0004d35__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1beb1953d_floatInfo _1be966c3c_f32info = _1beb1953d_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1beb1953d_floatInfo _1be96c1c6_f64info = _1beb1953d_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1bea070c9_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1bea53c5d_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1bea601dc_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1bea76e5c_f32pow10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1beb19a27_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1c0044490_leftCheat> _1beb1b562_leftCheats = jule::Slice<_1c0044490_leftCheat>::make({_1c0044490_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1c0044490_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1c0044490_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1c0044490_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1c0044490_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1c0044490_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1c0044490_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1c0044490_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1c0044490_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1c0044490_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1c0044490_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1c0044490_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1c0044490_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1c0044490_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1c0044490_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1c0044490_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1c0044490_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1c0044490_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1c0044490_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1c0044490_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1c0044490_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1c0044490_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1c0044490_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1c0044490_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1c0044490_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1c0044490_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1c0044490_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1c0044490_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1c0044490_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1c0044490_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1c0044490_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1c0044490_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1c0044490_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1c0044490_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1c0044490_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1c0044490_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1c0044490_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1c0044490_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1c0044490_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1c0044490_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1c0044490_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1c0044490_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1c0044490_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1c0044490_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1c0044490_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1c0044490_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1c0044490_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1c0044490_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1c0044490_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1c0044490_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1c0044490_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1c0044490_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1c0044490_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1c0044490_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1c0044490_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1c0044490_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1c0044490_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1c0044490_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1c0044490_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1c0044490_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1c0044490_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1be5580d1_BitSize = 0LL;
jule::Str _1be55860e_SysInt = jule::Str();
jule::Str _1be59cbd6_SysUint = jule::Str();
jule::Slice<jule::Str> _1be48d27a_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1d6ceb164_Copy = false;
jule::Bool _1d6d0072e_Deadcode = false;
jule::Bool _1d6d019c7_Append = false;
jule::Bool _1d6d0e7a4_Math = false;
jule::Bool _1bca1e302_Access = false;
jule::Bool _1bca23dd9_Inline = false;
jule::Bool _1bca2ba29_Ptr = false;
jule::Bool _1bca39b03_Cond = false;
jule::Bool _1c0a22ac7_exprEnabled = false;
jule::Bool _1c0a23c2c_scopeEnabled = false;
jule::Array<jule::U64,12> _1c120eaaa_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Ptr<_200a30984_RangeTable> _2009b970e_Letter = _2009b19e2__L;
jule::Ptr<_200a30984_RangeTable> _2009c179e_Upper = _2009b2b47__LU;
jule::Array<_1d639d85a_acceptRange,16> _1d639dbbd_acceptRanges = jule::Array<_1d639d85a_acceptRange,16>({_1d639d85a_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1d639d85a_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1d639d85a_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1d639d85a_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1d639d85a_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _232005a60_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _231eed6a1_Os = jule::Str("linux", 5);
jule::Str _231edcc9a_Arch = jule::Str("amd64", 5);
jule::Array<jule::U8,256> _200a28c79__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1d639d2d8_first = jule::Array<jule::U8,256>({});





std::ostream &operator<<(std::ostream &_Stream, _200a3008d_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200a30511_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _200a30984_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d639d85a_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d63a7501_index(_1d63a707d_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _1d63a7776_append(_1d63a707d_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1d63a79da_string(_1d63a707d_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _1d63a707d_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23214d823_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_23214d823_DirEntry>>> static__1d63ab67b_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_23214d823_DirEntry>> _1534_dirents = jule::Slice<jule::Ptr<_23214d823_DirEntry>>();
	DIR* _1617_dir = _23390aa3a_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_23214d823_DirEntry>>>(_2320921d4_getLastFsError());
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _23390ab6c_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1c1b16a66;
			};
			jule::Str _2517_name = _233909e13_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_233937638_Status> _2621_stat = ({
				auto except = static__2320979c0_Of(_1d63a86de_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_23214d823_DirEntry>>>(except.error);
				} jule::Ptr<_233937638_Status>();});
			});;
			_1534_dirents = jule::alloc_for_append(_1534_dirents,1);_1534_dirents.__push(jule::new_ptr<_23214d823_DirEntry>(_23214d823_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1c1b16a66:;
	}
	_iter_end_1c1b16a66:;;
	_23390aed0_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_23214d823_DirEntry>>>(jule::Any(), _1534_dirents);
}



inline jule::VoidExceptional static__1d63ab88a_Create(jule::Str _3922_path) {
	if ((_23390b376_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_2320921d4_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1d63aba99_Remove(jule::Str _5122_path) {
	if ((_23390b4a8_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_2320921d4_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _23208b860_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_233937270_File>> static__232092e93_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _23390a7c6_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_233937270_File>>(_2320921d4_getLastFsError());
	};
	return jule::Exceptional<jule::Ptr<_233937270_File>>(jule::Any(),static__23214c635_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));
}



inline jule::VoidExceptional static__232093cc9_Remove(jule::Str _3022_path) {
	if ((_23390b5da_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_2320921d4_getLastFsError());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _232095858_Write(_233937270_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 _4441_n = jule::I64();
	if ((_4424_buff.len() == 0LL)) {
		_4441_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
	};
	_4441_n=static_cast<jule::I64>(_233936a77_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((_4441_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_2320921d4_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4441_n);
}



inline jule::Exceptional<jule::I64> _23209633c_Read(_233937270_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 _6444_n = jule::I64();
	if ((_6427_buff.len() == 0LL)) {
		_6444_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
	};
	_6444_n=static_cast<jule::I64>(_233936318_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((_6444_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_2320921d4_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6444_n);
}



inline jule::Ptr<_233937270_File> static__23214c635_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_233937270_File>(_233937270_File{._field_handle=_4519_handle});
}



inline jule::Exceptional<jule::Ptr<_233937270_File>> static__23214c811_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_233937270_File>>(jule::Any(),({
		auto except = static__232092e93_Open(_5522_path,((static_cast<jule::I64>(578LL) | 578LL) | 578LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_233937270_File>>(except.error);
		} jule::Ptr<_233937270_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__23214e89b_Read(jule::Str _6720_path) {
	jule::Ptr<_233937638_Status> _6813_s = ({
		auto except = static__2320979c0_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_233937638_Status>();});
	});;
	if ((!(_23209105c_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_233937270_File> _7817_f = ({
		auto except = static__232092e93_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_233937270_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _23214da10_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size));;
	jule::I64 _8213_n = ({
		auto except = _23209633c_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__232150490_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_233937270_File> _9217_f = ({
		auto except = static__232092e93_Open(_9121_path,((static_cast<jule::I64>(577LL) | 577LL) | 577LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_233937270_File>();});
	});;
	({
		auto except = _232095858_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _23214da10_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2321517b0_Seek(_233937270_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _233935e2d_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_2320921d4_getLastFsError());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _23214da10_Close(_233937270_File* _self_) {
	if ((_23393668c_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_2320921d4_getLastFsError());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _233937270_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_233937638_Status>> static__2320979c0_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_233937638_Status>>(static_cast<jule::I64>(4LL));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _23390a694_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_233937638_Status>>(jule::Any(),jule::new_ptr<_233937638_Status>(_233937638_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_233937638_Status>>(_2320921d4_getLastFsError());
}



inline jule::Bool _2320909eb_IsDir(_233937638_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _23209105c_IsReg(_233937638_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _233937638_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_231eeeeee_Cmd> static__23200042d_New(jule::Str _2019_path) {
	return jule::new_ptr<_231eeeeee_Cmd>(_231eeeeee_Cmd{._field_path=_2019_path, });
}



inline jule::Exceptional<jule::I64> _232000692_Spawn(_231eeeeee_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _2320035eb_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _2320035eb_spawn(_231eeeeee_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1c1b3b7b1:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c1b3a4a2:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_232002e25_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_232003310_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_232003e26_Exit(255LL);
			}
		}
		_match_end_1c1b3b75b:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_231eee76d_getLastProcessError());
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _231eeeeee_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6435804_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d675d8b8_Prec(_1d675d511_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1c1bdc7c9:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c1bdc840:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1c1bdc1d0:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c1bdc246:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1c1bdc2ac:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1c1bdbe8d:;
			{
				return 0LLU;
			}
		}
		_match_end_1c1bdbe38:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d675d511_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d6763ca8_IsOk(_1d676389b_File* _self_) {
	({
		auto except = static__2320979c0_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_233937638_Status>();});
	});
	return true;
}



inline void _1d676402d_Fill(_1d676389b_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _1d6764292_Dir(_1d676389b_File* _self_) {
	return _1d63a9349_Dir((*_self_)._field_Path);
}



inline jule::Str _1d6764506_Name(_1d676389b_File* _self_) {
	return _1d63a8ec5_Base((*_self_)._field_Path);
}



inline jule::Uintptr _1d676476a_Addr(_1d676389b_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1d6764a78_GetRow(_1d676389b_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1c1be72b7;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1c1be72b7:;
	}
	_iter_end_1c1be72b7:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1d676389b_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6765903_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1d67718ed_pushErr(_1d6771359_lex* _self_, jule::Str _45726_fmt, jule::Slice<jule::Any> _45739_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d6766706_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45726_fmt,jule::Any(_45739_args)));;
}



inline void _1d6771c1c_pushErrTok(_1d6771359_lex* _self_, jule::Ptr<_1d675d511_Token>& _46230_token, jule::Str _46245_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d6766706_makeErr(_46230_token.get()._field_Row,_46230_token.get()._field_Column,(*_self_)._field_file,_46245_fmt,jule::Slice<jule::Any>()));;
}



inline void _1d6771de8_lex(_1d6771359_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1d6773dea_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1d675d511_Token> _47221_token = _1d6775270_token(&(*_self_));;
			if ((_47221_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47221_token);;
			};
		}
	_iter_next_1c1c2e013:;
	}
	_iter_end_1c1c2e013:;;
}



inline jule::Str _1d6772206_id(_1d6771359_lex* _self_, jule::Slice<jule::U8>& _48122_ln) {
	if ((_48122_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48514_r;;
	jule::I64 _48521_i;;
	std::tie(_48514_r,_48521_i) = _1d639e43d_DecodeRune(_48122_ln);
	if (((_48514_r != '_') && (!(_1d67619dc_IsLetter(_48514_r))))) {
		return jule::Str();
	};
	while ((_48521_i < _48122_ln.len())) {
		{
			jule::I32 _49118_pr;;
			jule::I64 _49122_n;;
			std::tie(_49118_pr,_49122_n) = _1d639e43d_DecodeRune(_48122_ln.slice(_48521_i));
			if ((((_49118_pr != '_') && (!(_1d676202b_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49118_pr)))))) && (!(_1d67619dc_IsLetter(_49118_pr))))) {
				(*_self_)._field_pos+=_48521_i;
				return static_cast<jule::Str>(_48122_ln.slice(0LL,_48521_i));
			};
			_48521_i+=_49122_n;
		}
	_iter_next_1c1c32236:;
	}
	_iter_end_1c1c32236:;;
	(*_self_)._field_pos+=_48122_ln.len();
	return static_cast<jule::Str>(_48122_ln);
}



inline jule::Slice<jule::U8> _1d677246a_resume(_1d6771359_lex* _self_) {
	jule::I64 _50617_i = (*_self_)._field_pos;;
	for (; (_50617_i < (*_self_)._field_file.get()._field_Data.len()); (_50617_i)++) {
		{
			jule::I32 _50817_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50617_i]);;
			if (_1d676158b_IsSpace(_50817_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50817_r };
					
					if (_match_expr == '\n') {
						_case_begin_1c1c36dea:;
						{
							_1d6773dea_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1c1c36e61:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1c1c34d1b:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1c1c36955:;
				};
				goto _iter_next_1c1c350c4;
			};
			jule::I64 _52321_j = _50617_i;;
			for (; (_52321_j < (*_self_)._field_file.get()._field_Data.len()); (_52321_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52321_j] == '\n')) {
						goto _iter_end_1c1c35d1c;
					};
				}
			_iter_next_1c1c35d1c:;
			}
			_iter_end_1c1c35d1c:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50617_i,_52321_j);
		}
	_iter_next_1c1c350c4:;
	}
	_iter_end_1c1c350c4:;;
	return nullptr;
}



inline void _1d67726e0_lexLineComment(_1d6771359_lex* _self_, jule::Ptr<_1d675d511_Token>& _53438_token) {
	jule::I64 _53513_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53817_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53817_r == '\n') || (_53817_r == '\r'))) {
				goto _iter_end_1c1c39848;
			};
		}
	_iter_next_1c1c39848:;
	}
	_iter_end_1c1c39848:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53438_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53438_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53513_start,(*_self_)._field_pos));
	};
}



inline void _1d6772965_lexRangeComment(_1d6771359_lex* _self_, jule::Ptr<_1d675d511_Token>& _54939_token) {
	jule::I64 _55013_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55317_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55317_r == '\r')) {
				goto _iter_next_1c1c3cc03;
			};
			if ((_55317_r == '\n')) {
				_1d6773dea_newLine(&(*_self_));
				goto _iter_next_1c1c3cc03;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55317_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_54939_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_54939_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55013_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1c1c3cc03:;
	}
	_iter_end_1c1c3cc03:;;
	_1d67718ed_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1d6772c73_num(_1d6771359_lex* _self_, jule::Slice<jule::U8>& _57723_txt) {
	jule::Str _57738_lit = jule::Str();
	if ((_57723_txt[0LL] == '_')) {
		_57738_lit = jule::Str();
		return _57738_lit;
	};
	_57738_lit=_1d676ed80_hexNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_1d676ead8_octalNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_1d676d532_binaryNum(_57723_txt);
	if ((!(_57738_lit.empty()))) {
		goto _julec_label_end;
	};
	_57738_lit=_1d676d28a_commonNum(_57723_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57738_lit.len();
	return _57738_lit;
}



inline jule::Str _1d6773081_escapeSeq(_1d6771359_lex* _self_, jule::Slice<jule::U8>& _59929_txt) {
	jule::Str _60017_seq = jule::Str();;
	if ((_59929_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _59929_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1c1c47cc9:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_59929_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c1c479cc:;
			{
				_60017_seq=_1d6770468_bigUnicodePointEscape(_59929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1c1c47a43:;
			{
				_60017_seq=_1d6770732_littleUnicodePointEscape(_59929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c1c47aa9:;
			{
				_60017_seq=_1d67708db_hexByteEscape(_59929_txt);
			}
		}
		else {
			_case_begin_1c1c4725c:;
			{
				_60017_seq=_1d6770b72_byteEscape(_59929_txt);
			}
		}
		_match_end_1c1c47889:;
	};
	_julec_label_end:;
	if (_60017_seq.empty()) {
		((*_self_)._field_pos)++;
		_1d67718ed_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60017_seq.len();
	return _60017_seq;
}



inline jule::Str _1d6773438_getRune(_1d6771359_lex* _self_, jule::Slice<jule::U8>& _62927_txt, jule::Bool _62940_raw) {
	if (((!(_62940_raw)) && (_62927_txt[0LL] == '\\'))) {
		return _1d6773081_escapeSeq(&(*_self_), _62927_txt);
	};
	jule::I32 _63314_r;;
	jule::I64 _63317_n;;
	std::tie(_63314_r,_63317_n) = _1d639e43d_DecodeRune(_62927_txt);
	(*_self_)._field_pos+=_63317_n;
	return static_cast<jule::Str>(_63314_r);
}



inline jule::Str _1d6773746_lexRune(_1d6771359_lex* _self_, jule::Slice<jule::U8>& _63827_txt) {
	jule::Str _63917_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64117_n = 0LL;;
	jule::I64 _64217_i = 1LL;;
	for (; (_64217_i < _63827_txt.len()); (_64217_i)++) {
		{
			if ((_63827_txt[_64217_i] == '\r')) {
				goto _iter_next_1c1c4ec04;
			};
			if ((_63827_txt[_64217_i] == '\n')) {
				_1d67718ed_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1d6773dea_newLine(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65417_part = _63827_txt.slice(_64217_i);;
			jule::Str _65517_r = _1d6773438_getRune(&(*_self_), _65417_part,false);;
			_63917_run+=_65517_r;
			(*_self_)._field_column+=_1d63a1132_RuneCountStr(_65517_r);
			if ((_65517_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1c1c4ec04;
			};
			if ((_65517_r.len() > 1LL)) {
				_64217_i+=(_65517_r.len() - 1LL);
			};
			(_64117_n)++;
		}
	_iter_next_1c1c4ec04:;
	}
	_iter_end_1c1c4ec04:;;
	if ((_64117_n == 0LL)) {
		_1d67718ed_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64117_n > 1LL)) {
		_1d67718ed_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _63917_run;
}



inline jule::Str _1d67739aa_lexStr(_1d6771359_lex* _self_) {
	jule::Str _67817_s = jule::Str();;
	jule::U8 _67913_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68113_raw = (_67913_mark == '`');;
	_67817_s+=static_cast<jule::Str>(_67913_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68617_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68617_ch == '\r')) {
				goto _iter_next_1c1c55c3d;
			};
			if ((_68617_ch == '\n')) {
				_1d6773dea_newLine(&(*_self_));
				if ((!(_68113_raw))) {
					_1d67718ed_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _69821_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _69917_r = _1d6773438_getRune(&(*_self_), _69821_part,_68113_raw);;
			_67817_s+=_69917_r;
			(*_self_)._field_column+=_1d63a1132_RuneCountStr(_69917_r);
			if ((_68617_ch == _67913_mark)) {
				goto _iter_end_1c1c55c3d;
			};
		}
	_iter_next_1c1c55c3d:;
	}
	_iter_end_1c1c55c3d:;;
	return _67817_s;
}



inline jule::Bool _1d6773c1e_isFirstTokenOfLine(_1d6771359_lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1d6773dea_newLine(_1d6771359_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1d67743e5_isOp(_1d6771359_lex* _self_, jule::Slice<jule::U8>& _71924_txt, jule::Str _71937_kind, jule::U64 _71948_id, jule::Ptr<_1d675d511_Token>& _71966_t) {
	if ((!(_1d6766a8b_bytesHasPrefix(_71924_txt,_71937_kind)))) {
		return false;
	};
	_71966_t.get()._field_Kind=_71937_kind;
	_71966_t.get()._field_Id=_71948_id;
	(*_self_)._field_pos+=_71937_kind.len();
	return true;
}



inline jule::Bool _1d677479c_lexBasicOps(_1d6771359_lex* _self_, jule::Slice<jule::U8> _72930_txt, jule::Ptr<_1d675d511_Token>& _72948_tok) {
	{
		auto &expr = _1d676621c_basicOps;
		auto it = expr.begin();
		_iter_begin_1c1c5c32c:;
		if (it != expr.end()) {
			_1d6765903_kindPair &_73016_pair = *it;
			{
				if (_1d67743e5_isOp(&(*_self_), _72930_txt,_73016_pair._field_kind,_73016_pair._field_id,_72948_tok)) {
					return true;
				};
			}
			_iter_next_1c1c5c32c:;
			++it;
			goto _iter_begin_1c1c5c32c;
		}
		_iter_end_1c1c5c32c:;
	};
	return false;
}



inline jule::Bool _1d6774b54_lexId(_1d6771359_lex* _self_, jule::Slice<jule::U8>& _73925_txt, jule::Ptr<_1d675d511_Token>& _73943_t) {
	jule::Str _74013_lex = _1d6772206_id(&(*_self_), _73925_txt);;
	if (_74013_lex.empty()) {
		return false;
	};
	_73943_t.get()._field_Kind=_74013_lex;
	_73943_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1d677500b_lexNum(_1d6771359_lex* _self_, jule::Slice<jule::U8>& _74926_txt, jule::Ptr<_1d675d511_Token>& _74944_t) {
	jule::Str _75013_lex = _1d6772c73_num(&(*_self_), _74926_txt);;
	if (_75013_lex.empty()) {
		return false;
	};
	_74944_t.get()._field_Kind=_75013_lex;
	_74944_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_1d675d511_Token> _1d6775270_token(_1d6771359_lex* _self_) {
	jule::Ptr<_1d675d511_Token> _76117_t = jule::new_ptr<_1d675d511_Token>(_1d675d511_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76613_txt = _1d677246a_resume(&(*_self_));;
	if ((_76613_txt == nullptr)) {
		return _76117_t;
	};
	_76117_t.get()._field_Column=(*_self_)._field_column;
	_76117_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_1d677500b_lexNum(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_1c1c63685:;
			{
				goto _match_end_1c1c621de;
			}
		}
		else if ((_76613_txt[0LL] == '\'')) {
			_case_begin_1c1c636eb:;
			{
				_76117_t.get()._field_Kind=_1d6773746_lexRune(&(*_self_), _76613_txt);
				_76117_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76117_t;
			}
		}
		else if (((_76613_txt[0LL] == '\"') || (_76613_txt[0LL] == '`'))) {
			_case_begin_1c1c64301:;
			{
				_76117_t.get()._field_Kind=_1d67739aa_lexStr(&(*_self_));
				_76117_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76117_t;
			}
		}
		else if (_1d6766a8b_bytesHasPrefix(_76613_txt,jule::Str("//", 2))) {
			_case_begin_1c1c64367:;
			{
				_1d67726e0_lexLineComment(&(*_self_), _76117_t);
				return _76117_t;
			}
		}
		else if (_1d6766a8b_bytesHasPrefix(_76613_txt,jule::Str("/*", 2))) {
			_case_begin_1c1c643cd:;
			{
				_1d6772965_lexRangeComment(&(*_self_), _76117_t);
				return _76117_t;
			}
		}
		else if (_1d67743e5_isOp(&(*_self_), _76613_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1d67743e5_isOp(&(*_self_), _76613_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1d67743e5_isOp(&(*_self_), _76613_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1d67743e5_isOp(&(*_self_), _76613_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1d67743e5_isOp(&(*_self_), _76613_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1d67743e5_isOp(&(*_self_), _76613_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76117_t) || _1d677479c_lexBasicOps(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_1c1c62b07:;
			{
				goto _match_end_1c1c621de;
			}
		}
		else if (_1d6774b54_lexId(&(*_self_), _76613_txt,_76117_t)) {
			_case_begin_1c1c62b6d:;
			{
				{
					auto &expr = _1d6765d87_keywords;
					auto it = expr.begin();
					_iter_begin_1c1c69ceb:;
					if (it != expr.end()) {
						_1d6765903_kindPair &_80420_pair = *it;
						{
							if ((_80420_pair._field_kind == _76117_t.get()._field_Kind)) {
								_76117_t.get()._field_Id=_80420_pair._field_id;
								goto _iter_end_1c1c69ceb;
							};
						}
						_iter_next_1c1c69ceb:;
						++it;
						goto _iter_begin_1c1c69ceb;
					}
					_iter_end_1c1c69ceb:;
				};
			}
		}
		else {
			_case_begin_1c1c62a91:;
			{
				jule::I32 _81118_r;;
				jule::I64 _81121_sz;;
				std::tie(_81118_r,_81121_sz) = _1d639e43d_DecodeRune(_76613_txt);
				_1d67718ed_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81118_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81121_sz;
				return _76117_t;
			}
		}
		_match_end_1c1c621de:;
	};
	(*_self_)._field_column+=_1d63a1132_RuneCountStr(_76117_t.get()._field_Kind);
	return _76117_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6771359_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3621a4_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be362e30_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be36332b_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be396a24_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be39744d_IsPrim(_1be3970da_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1be3970da_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be397739_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be397ae1_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be397dcc_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3982c8_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3985b4_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be398c02_IsUnsafe(_1be3988a0_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3988a0_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be39940b_AutoSized(_1be399032_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be399032_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be399780_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be399b37_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39b045_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39b331_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39b8d6_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39bbc2_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be39c3cb_IsNil(_1be39c079_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1be39c079_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39c783_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39cb3a_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be39d410_IsSelf(_1be39d0ad_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1be39d0ad_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39d7b7_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39db6e_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39e026_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39e3cd_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39e851_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be39ecc4_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3a0676_Unhandled(_1be3a0313_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);
}



inline jule::Bool _1be3a08da_Ignored(_1be3a0313_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a0313_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3a10e4_IsTargeted(_1be3a0c92_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a0c92_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a14e0_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3a20d4_IsEmpty(_1be3a1963_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a1963_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a247a_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3a2c50_IsEmpty(_1be3a28ed_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a28ed_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a328e_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a3899_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a3b85_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a4108_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a44b0_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a4867_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a4b53_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a525d_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a579c_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a6737_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a6d42_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3a787b_IsSelf(_1be3a7518_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1be3a7ae0_IsRef(_1be3a7518_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a7518_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3a8b8a_IsAnon(_1be3a8838_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a8838_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a9817_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3a9bbe_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3aa681_IsInf(_1be3aa32e_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3aa32e_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3aae56_IsWhileNext(_1be3aab04_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3aab04_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3ab495_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3ab84c_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3abc04_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3ac177_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3ac52e_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3ac9a2_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3ad178_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3ad5eb_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3adcc2_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3ae564_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3aed39_AutoExpr(_1be3ae9d7_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3ae9d7_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3b0a93_DefaultTyped(_1be3b0510_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3b0510_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3b1016_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3b1214_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3b1764_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3b20c2_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3b26cc_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be3b314a_IsTraitImpl(_1be3b2cd7_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1be3b33ae_IsStructImpl(_1be3b2cd7_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be3b2cd7_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be3e8c63_Const> static__1be44dcda_NewI64(jule::I64 _1322_x) {
	return jule::new_ptr<_1be3e8c63_Const>(_1be3e8c63_Const{._field_data=jule::Any(_1322_x)});
}



inline jule::Ptr<_1be3e8c63_Const> static__1be44de1c_NewU64(jule::U64 _1622_x) {
	return jule::new_ptr<_1be3e8c63_Const>(_1be3e8c63_Const{._field_data=jule::Any(_1622_x)});
}



inline jule::Ptr<_1be3e8c63_Const> static__1be44e0a4_NewBool(jule::Bool _1923_x) {
	return jule::new_ptr<_1be3e8c63_Const>(_1be3e8c63_Const{._field_data=jule::Any(_1923_x)});
}



inline jule::Ptr<_1be3e8c63_Const> static__1be44e34b_NewStr(jule::Str _2222_x) {
	return jule::new_ptr<_1be3e8c63_Const>(_1be3e8c63_Const{._field_data=jule::Any(_2222_x)});
}



inline jule::Ptr<_1be3e8c63_Const> static__1be44e5e3_NewF64(jule::F64 _2522_x) {
	return jule::new_ptr<_1be3e8c63_Const>(_1be3e8c63_Const{._field_data=jule::Any(_2522_x)});
}



inline jule::Ptr<_1be3e8c63_Const> static__1be44e7e1_NewNil(void) {
	return jule::new_ptr<_1be3e8c63_Const>(_1be3e8c63_Const{._field_data=nullptr});
}



inline jule::I64 _1be44edda_ReadI64(_1be3e8c63_Const* _self_) {
	if ((!(_1be452283_IsI64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1be45014e_ReadU64(_1be3e8c63_Const* _self_) {
	if ((!(_1be4524e7_IsU64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1be4503b3_ReadBool(_1be3e8c63_Const* _self_) {
	if ((!(_1be45275b_IsBool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1be450627_ReadStr(_1be3e8c63_Const* _self_) {
	if ((!(_1be4529c0_IsStr(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1be45088b_ReadF64(_1be3e8c63_Const* _self_) {
	if ((!(_1be452c34_IsF64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1be450b00_AsI64(_1be3e8c63_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c1ccb302:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c1ccb368:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c1ccabc5:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1c1ccaae8:;
			{
				return 0LL;
			}
		}
		_match_end_1c1cca3de:;
	};
}



inline jule::U64 _1be450d64_AsU64(_1be3e8c63_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c1ccc29d:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c1cccd3c:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c1cccda3:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1c1ccb445:;
			{
				return 0LLU;
			}
		}
		_match_end_1c1ccb3e0:;
	};
}



inline jule::F64 _1be4510c8_AsF64(_1be3e8c63_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c1ccdcd8:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c1cce877:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c1cce8dd:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1c1ccc8db:;
			{
				return 0LL;
			}
		}
		_match_end_1c1ccc886:;
	};
}



inline void _1be45134d_SetI64(_1be3e8c63_Const* _self_, jule::I64 _13525_x) {
	(*_self_)._field_data=jule::Any(_13525_x);
}



inline void _1be4515c3_SetU64(_1be3e8c63_Const* _self_, jule::U64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x);
}



inline void _1be451848_SetBool(_1be3e8c63_Const* _self_, jule::Bool _14126_x) {
	(*_self_)._field_data=jule::Any(_14126_x);
}



inline void _1be451abd_SetStr(_1be3e8c63_Const* _self_, jule::Str _14425_x) {
	(*_self_)._field_data=jule::Any(_14425_x);
}



inline void _1be451d43_SetF64(_1be3e8c63_Const* _self_, jule::F64 _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x);
}



inline void _1be45201e_SetNil(_1be3e8c63_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1be452283_IsI64(_1be3e8c63_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c1cd3628:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c1cd354b:;
			{
				return false;
			}
		}
		_match_end_1c1cd34e6:;
	};
}



inline jule::Bool _1be4524e7_IsU64(_1be3e8c63_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c1cd41ea:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c1cd3dcb:;
			{
				return false;
			}
		}
		_match_end_1c1cd3ae0:;
	};
}



inline jule::Bool _1be45275b_IsBool(_1be3e8c63_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1c1cd4c23:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c1cd4904:;
			{
				return false;
			}
		}
		_match_end_1c1cd45e6:;
	};
}



inline jule::Bool _1be4529c0_IsStr(_1be3e8c63_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1c1cd574b:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c1cd542c:;
			{
				return false;
			}
		}
		_match_end_1c1cd511e:;
	};
}



inline jule::Bool _1be452c34_IsF64(_1be3e8c63_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c1cd6274:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c1cd5e55:;
			{
				return false;
			}
		}
		_match_end_1c1cd5b47:;
	};
}



inline jule::Bool _1be452e98_IsNil(_1be3e8c63_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1be4532a6_AreSameTypes(_1be3e8c63_Const* _self_, _1be3e8c63_Const _21027_x) {
	{
		
		if ((_1be452283_IsI64(&(*_self_)) == _1be452283_IsI64(&_21027_x))) {
			_case_begin_1c1cd7b16:;
			{
				return true;
			}
		}
		else if ((_1be4524e7_IsU64(&(*_self_)) == _1be4524e7_IsU64(&_21027_x))) {
			_case_begin_1c1cd73a7:;
			{
				return true;
			}
		}
		else if ((_1be452c34_IsF64(&(*_self_)) == _1be452c34_IsF64(&_21027_x))) {
			_case_begin_1c1cd742e:;
			{
				return true;
			}
		}
		else if ((_1be45275b_IsBool(&(*_self_)) == _1be45275b_IsBool(&_21027_x))) {
			_case_begin_1c1cd74a6:;
			{
				return true;
			}
		}
		else if ((_1be4529c0_IsStr(&(*_self_)) == _1be4529c0_IsStr(&_21027_x))) {
			_case_begin_1c1cd752d:;
			{
				return true;
			}
		}
		else if ((_1be452e98_IsNil(&(*_self_)) == _1be452e98_IsNil(&_21027_x))) {
			_case_begin_1c1cd77c5:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c1cd7330:;
			{
				return false;
			}
		}
		_match_end_1c1cd7253:;
	};
}



inline jule::Bool _1be4535b4_And(_1be3e8c63_Const* _self_, _1be3e8c63_Const _23518_x) {
	{
		
		if ((_1be45275b_IsBool(&(*_self_)) && _1be45275b_IsBool(&_23518_x))) {
			_case_begin_1c1cdb059:;
			{
				return (_1be4503b3_ReadBool(&(*_self_)) && _1be4503b3_ReadBool(&_23518_x));
			}
		}
		else {
			_case_begin_1c1cda663:;
			{
				return false;
			}
		}
		_match_end_1c1cda586:;
	};
}



inline jule::Bool _1be4538c2_Or(_1be3e8c63_Const* _self_, _1be3e8c63_Const _24617_x) {
	{
		
		if ((_1be45275b_IsBool(&(*_self_)) && _1be45275b_IsBool(&_24617_x))) {
			_case_begin_1c1cdc456:;
			{
				return (_1be4503b3_ReadBool(&(*_self_)) || _1be4503b3_ReadBool(&_24617_x));
			}
		}
		else {
			_case_begin_1c1cdb3bc:;
			{
				return false;
			}
		}
		_match_end_1c1cdb2e0:;
	};
}



inline jule::Bool _1be453bd0_Eq(_1be3e8c63_Const* _self_, _1be3e8c63_Const _25717_x) {
	{
		
		if (_1be452e98_IsNil(&(*_self_))) {
			_case_begin_1c1cdd8ca:;
			{
				return _1be452e98_IsNil(&_25717_x);
			}
		}
		else if (_1be45275b_IsBool(&(*_self_))) {
			_case_begin_1c1cdd19e:;
			{
				return (_1be45275b_IsBool(&_25717_x) && (_1be4503b3_ReadBool(&(*_self_)) == _1be4503b3_ReadBool(&_25717_x)));
			}
		}
		else if (_1be4529c0_IsStr(&(*_self_))) {
			_case_begin_1c1cdd215:;
			{
				return (_1be4529c0_IsStr(&_25717_x) && (_1be450627_ReadStr(&(*_self_)) == _1be450627_ReadStr(&_25717_x)));
			}
		}
		else if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1cdd28c:;
			{
				return (_1be44edda_ReadI64(&(*_self_)) == _1be450b00_AsI64(&_25717_x));
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1cdd314:;
			{
				return (_1be45014e_ReadU64(&(*_self_)) == _1be450d64_AsU64(&_25717_x));
			}
		}
		else if (_1be452c34_IsF64(&(*_self_))) {
			_case_begin_1c1cdd5ab:;
			{
				return (_1be45088b_ReadF64(&(*_self_)) == _1be4510c8_AsF64(&_25717_x));
			}
		}
		else {
			_case_begin_1c1cdc7db:;
			{
				return false;
			}
		}
		_match_end_1c1cdc70e:;
	};
}



inline jule::Bool _1be453edd_Lt(_1be3e8c63_Const* _self_, _1be3e8c63_Const _28417_x) {
	{
		
		if (_1be4529c0_IsStr(&(*_self_))) {
			_case_begin_1c1ce2a55:;
			{
				return (_1be4529c0_IsStr(&_28417_x) && (_1be450627_ReadStr(&(*_self_)) < _1be450627_ReadStr(&_28417_x)));
			}
		}
		else if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1ce2406:;
			{
				return (_1be44edda_ReadI64(&(*_self_)) < _1be450b00_AsI64(&_28417_x));
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1ce246c:;
			{
				return (_1be45014e_ReadU64(&(*_self_)) < _1be450d64_AsU64(&_28417_x));
			}
		}
		else if (_1be452c34_IsF64(&(*_self_))) {
			_case_begin_1c1ce24d3:;
			{
				return (_1be45088b_ReadF64(&(*_self_)) < _1be4510c8_AsF64(&_28417_x));
			}
		}
		else {
			_case_begin_1c1cddc0a:;
			{
				return false;
			}
		}
		_match_end_1c1ce1da6:;
	};
}



inline jule::Bool _1be4542eb_LtEq(_1be3e8c63_Const* _self_, _1be3e8c63_Const _30719_x) {
	{
		
		if (_1be4529c0_IsStr(&(*_self_))) {
			_case_begin_1c1ce5ae1:;
			{
				return (_1be4529c0_IsStr(&_30719_x) && (_1be450627_ReadStr(&(*_self_)) <= _1be450627_ReadStr(&_30719_x)));
			}
		}
		else if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1ce5492:;
			{
				return (_1be44edda_ReadI64(&(*_self_)) <= _1be450b00_AsI64(&_30719_x));
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1ce5508:;
			{
				return (_1be45014e_ReadU64(&(*_self_)) <= _1be450d64_AsU64(&_30719_x));
			}
		}
		else if (_1be452c34_IsF64(&(*_self_))) {
			_case_begin_1c1ce556e:;
			{
				return (_1be45088b_ReadF64(&(*_self_)) <= _1be4510c8_AsF64(&_30719_x));
			}
		}
		else {
			_case_begin_1c1ce2c64:;
			{
				return false;
			}
		}
		_match_end_1c1ce4bab:;
	};
}



inline jule::Bool _1be454609_Gt(_1be3e8c63_Const* _self_, _1be3e8c63_Const _33017_x) {
	{
		
		if (_1be4529c0_IsStr(&(*_self_))) {
			_case_begin_1c1ce8b7c:;
			{
				return (_1be4529c0_IsStr(&_33017_x) && (_1be450627_ReadStr(&(*_self_)) > _1be450627_ReadStr(&_33017_x)));
			}
		}
		else if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1ce852d:;
			{
				return (_1be44edda_ReadI64(&(*_self_)) > _1be450b00_AsI64(&_33017_x));
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1ce8594:;
			{
				return (_1be45014e_ReadU64(&(*_self_)) > _1be450d64_AsU64(&_33017_x));
			}
		}
		else if (_1be452c34_IsF64(&(*_self_))) {
			_case_begin_1c1ce860a:;
			{
				return (_1be45088b_ReadF64(&(*_self_)) > _1be4510c8_AsF64(&_33017_x));
			}
		}
		else {
			_case_begin_1c1ce5d00:;
			{
				return false;
			}
		}
		_match_end_1c1ce7c47:;
	};
}



inline jule::Bool _1be454917_GtEq(_1be3e8c63_Const* _self_, _1be3e8c63_Const _35319_x) {
	{
		
		if (_1be4529c0_IsStr(&(*_self_))) {
			_case_begin_1c1cebc18:;
			{
				return (_1be4529c0_IsStr(&_35319_x) && (_1be450627_ReadStr(&(*_self_)) >= _1be450627_ReadStr(&_35319_x)));
			}
		}
		else if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1ceb5b9:;
			{
				return (_1be44edda_ReadI64(&(*_self_)) >= _1be450b00_AsI64(&_35319_x));
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1ceb630:;
			{
				return (_1be45014e_ReadU64(&(*_self_)) >= _1be450d64_AsU64(&_35319_x));
			}
		}
		else if (_1be452c34_IsF64(&(*_self_))) {
			_case_begin_1c1ceb696:;
			{
				return (_1be45088b_ReadF64(&(*_self_)) >= _1be4510c8_AsF64(&_35319_x));
			}
		}
		else {
			_case_begin_1c1ce8d8b:;
			{
				return false;
			}
		}
		_match_end_1c1ceacd3:;
	};
}



inline jule::Bool _1be454c25_Add(_1be3e8c63_Const* _self_, _1be3e8c63_Const _37422_x) {
	{
		
		if (_1be4529c0_IsStr(&(*_self_))) {
			_case_begin_1c1ceeca4:;
			{
				if ((!(_1be4529c0_IsStr(&_37422_x)))) {
					return false;
				};
				_1be451abd_SetStr(&(*_self_), (_1be450627_ReadStr(&(*_self_)) + _1be450627_ReadStr(&_37422_x)));
			}
		}
		else if (_1be452c34_IsF64(&(*_self_))) {
			_case_begin_1c1cee655:;
			{
				_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>((_1be45088b_ReadF64(&(*_self_)) + _1be4510c8_AsF64(&_37422_x))));
			}
		}
		else if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1cee6bb:;
			{
				if (_1be452c34_IsF64(&_37422_x)) {
					_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>((_1be4510c8_AsF64(&(*_self_)) + _1be45088b_ReadF64(&_37422_x))));
				} else {
					_1be45134d_SetI64(&(*_self_), static_cast<jule::I64>((_1be44edda_ReadI64(&(*_self_)) + _1be450b00_AsI64(&_37422_x))));
				};
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1cee732:;
			{
				if (_1be452c34_IsF64(&_37422_x)) {
					_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>((_1be4510c8_AsF64(&(*_self_)) + _1be45088b_ReadF64(&_37422_x))));
				} else {
					_1be4515c3_SetU64(&(*_self_), static_cast<jule::U64>((_1be45014e_ReadU64(&(*_self_)) + _1be450d64_AsU64(&_37422_x))));
				};
			}
		}
		else {
			_case_begin_1c1cebe27:;
			{
				return false;
			}
		}
		_match_end_1c1cedd6e:;
	};
	return true;
}



inline jule::Bool _1be455033_Sub(_1be3e8c63_Const* _self_, _1be3e8c63_Const _40322_x) {
	{
		
		if (_1be452c34_IsF64(&(*_self_))) {
			_case_begin_1c1d0557e:;
			{
				_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>((_1be45088b_ReadF64(&(*_self_)) - _1be4510c8_AsF64(&_40322_x))));
			}
		}
		else if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1d04d42:;
			{
				if (_1be452c34_IsF64(&_40322_x)) {
					_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>((_1be4510c8_AsF64(&(*_self_)) - _1be45088b_ReadF64(&_40322_x))));
				} else {
					_1be45134d_SetI64(&(*_self_), static_cast<jule::I64>((_1be44edda_ReadI64(&(*_self_)) - _1be450b00_AsI64(&_40322_x))));
				};
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1d04da8:;
			{
				if (_1be452c34_IsF64(&_40322_x)) {
					_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>((_1be4510c8_AsF64(&(*_self_)) - _1be45088b_ReadF64(&_40322_x))));
				} else {
					_1be4515c3_SetU64(&(*_self_), static_cast<jule::U64>((_1be45014e_ReadU64(&(*_self_)) - _1be450d64_AsU64(&_40322_x))));
				};
			}
		}
		else {
			_case_begin_1c1d04ccb:;
			{
				return false;
			}
		}
		_match_end_1c1d04490:;
	};
	return true;
}



inline jule::Bool _1be455341_Mul(_1be3e8c63_Const* _self_, _1be3e8c63_Const _42722_x) {
	{
		
		if (_1be452c34_IsF64(&(*_self_))) {
			_case_begin_1c1d09d03:;
			{
				_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>((_1be45088b_ReadF64(&(*_self_)) * _1be4510c8_AsF64(&_42722_x))));
			}
		}
		else if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1d095b6:;
			{
				if (_1be452c34_IsF64(&_42722_x)) {
					_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>((_1be4510c8_AsF64(&(*_self_)) * _1be45088b_ReadF64(&_42722_x))));
				} else {
					_1be45134d_SetI64(&(*_self_), static_cast<jule::I64>((_1be44edda_ReadI64(&(*_self_)) * _1be450b00_AsI64(&_42722_x))));
				};
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1d0962c:;
			{
				if (_1be452c34_IsF64(&_42722_x)) {
					_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>((_1be4510c8_AsF64(&(*_self_)) * _1be45088b_ReadF64(&_42722_x))));
				} else {
					_1be4515c3_SetU64(&(*_self_), static_cast<jule::U64>((_1be45014e_ReadU64(&(*_self_)) * _1be450d64_AsU64(&_42722_x))));
				};
			}
		}
		else {
			_case_begin_1c1d09550:;
			{
				return false;
			}
		}
		_match_end_1c1d08a7c:;
	};
	return true;
}



inline jule::Bool _1be45564e_Div(_1be3e8c63_Const* _self_, _1be3e8c63_Const _45522_x) {
	{
		
		if (_1be452c34_IsF64(&(*_self_))) {
			_case_begin_1c1d0e577:;
			{
				jule::F64 _45817_l = _1be4510c8_AsF64(&_45522_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1be45088b_ReadF64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1d0dd3a:;
			{
				jule::F64 _46417_l = _1be4510c8_AsF64(&_45522_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1be4510c8_AsF64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1d0dda1:;
			{
				jule::F64 _47017_l = _1be4510c8_AsF64(&_45522_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1be451d43_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1be4510c8_AsF64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1c1d0dcc4:;
			{
				return false;
			}
		}
		_match_end_1c1d0d301:;
	};
	return true;
}



inline jule::Bool _1be45595c_Mod(_1be3e8c63_Const* _self_, _1be3e8c63_Const _48422_x) {
	{
		
		if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1d13d2e:;
			{
				jule::I64 _48717_l = _1be450b00_AsI64(&_48422_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1be45134d_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_1be44edda_ReadI64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1d13603:;
			{
				jule::U64 _49317_l = _1be450d64_AsU64(&_48422_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1be4515c3_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_1be45014e_ReadU64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1c1d1358c:;
			{
				return false;
			}
		}
		_match_end_1c1d134b0:;
	};
	return true;
}



inline jule::Bool _1be455c6a_BitwiseAnd(_1be3e8c63_Const* _self_, _1be3e8c63_Const _50629_x) {
	{
		
		if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1d17184:;
			{
				_1be45134d_SetI64(&(*_self_), static_cast<jule::I64>((_1be44edda_ReadI64(&(*_self_)) & _1be450b00_AsI64(&_50629_x))));
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1d16958:;
			{
				_1be4515c3_SetU64(&(*_self_), static_cast<jule::U64>((_1be45014e_ReadU64(&(*_self_)) & _1be450d64_AsU64(&_50629_x))));
			}
		}
		else {
			_case_begin_1c1d168e2:;
			{
				return false;
			}
		}
		_match_end_1c1d16815:;
	};
	return true;
}



inline jule::Bool _1be456078_BitwiseOr(_1be3e8c63_Const* _self_, _1be3e8c63_Const _52028_x) {
	{
		
		if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1d1931d:;
			{
				_1be45134d_SetI64(&(*_self_), static_cast<jule::I64>((_1be44edda_ReadI64(&(*_self_)) | _1be450b00_AsI64(&_52028_x))));
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1d18ae2:;
			{
				_1be4515c3_SetU64(&(*_self_), static_cast<jule::U64>((_1be45014e_ReadU64(&(*_self_)) | _1be450d64_AsU64(&_52028_x))));
			}
		}
		else {
			_case_begin_1c1d18a7b:;
			{
				return false;
			}
		}
		_match_end_1c1d1899e:;
	};
	return true;
}



inline jule::Bool _1be456386_Xor(_1be3e8c63_Const* _self_, _1be3e8c63_Const _53422_x) {
	{
		
		if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1d1b4a7:;
			{
				_1be45134d_SetI64(&(*_self_), static_cast<jule::I64>((_1be44edda_ReadI64(&(*_self_)) ^ _1be450b00_AsI64(&_53422_x))));
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1d1ac7b:;
			{
				_1be4515c3_SetU64(&(*_self_), static_cast<jule::U64>((_1be45014e_ReadU64(&(*_self_)) ^ _1be450d64_AsU64(&_53422_x))));
			}
		}
		else {
			_case_begin_1c1d1ac15:;
			{
				return false;
			}
		}
		_match_end_1c1d1ab38:;
	};
	return true;
}



inline jule::Bool _1be456694_Lshift(_1be3e8c63_Const* _self_, _1be3e8c63_Const _54825_x) {
	{
		
		if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1d1d641:;
			{
				jule::I64 _55117_l = _1be450b00_AsI64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1be450d64_AsU64(&_54825_x);;
					_1be45134d_SetI64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1be456d15_lshiftUnsig((*_self_),_54825_x);
				};
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1d1ce15:;
			{
				_1be456d15_lshiftUnsig((*_self_),_54825_x);
			}
		}
		else {
			_case_begin_1c1d1cd9e:;
			{
				return false;
			}
		}
		_match_end_1c1d1ccc2:;
	};
	return true;
}



inline jule::Bool _1be4569a2_Rshift(_1be3e8c63_Const* _self_, _1be3e8c63_Const _56825_x) {
	{
		
		if (_1be452283_IsI64(&(*_self_))) {
			_case_begin_1c1d2115a:;
			{
				jule::I64 _57117_l = _1be450b00_AsI64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1be450d64_AsU64(&_56825_x);;
					_1be45134d_SetI64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1be457112_rshiftUnsig((*_self_),_56825_x);
				};
			}
		}
		else if (_1be4524e7_IsU64(&(*_self_))) {
			_case_begin_1c1d2092e:;
			{
				_1be457112_rshiftUnsig((*_self_),_56825_x);
			}
		}
		else {
			_case_begin_1c1d208b8:;
			{
				return false;
			}
		}
		_match_end_1c1d207db:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3e8c63_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1beb1953d_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bea1b341_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0044490_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1bedac4d4_set(_1c0044803_decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1c22e0294:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1c22e030a:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1c22e00eb:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1c22e2593:;
					{
						goto _iter_next_1c22e1cce;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1c22e261a:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1c22e1cce;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1c22e2692:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1c22e1cce;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1c22e1cce;
					}
				}
				_match_end_1c22e2461:;
			};
			goto _iter_end_1c22e1cce;
		}
	_iter_next_1c22e1cce:;
	}
	_iter_end_1c22e1cce:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1beb7b6e3_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1c22ea0d4;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1c22ea0d4:;
		}
		_iter_end_1c22ea0d4:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1bea31400_floatBits(_1c0044803_decimal* _self_, _1beb1953d_floatInfo& _32729_flt) {
	jule::U64 _32747_b = jule::U64();
	jule::Bool _32755_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1bea53c5d_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1bea53c5d_powtab[(*_self_)._field_dp];
			};
			_1c0044b22_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1c2301ae1:;
	}
	_iter_end_1c2301ae1:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1bea53c5d_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1bea53c5d_powtab[(-((*_self_)._field_dp))];
			};
			_1c0044b22_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1c23022ea:;
	}
	_iter_end_1c23022ea:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_1c0044b22_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1c0044b22_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1c00450ea_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	_32755_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	_32747_b = _41717_bits;
	return std::make_tuple(_32747_b,_32755_overflow);
}



inline void _1c00449e0_assign(_1c0044803_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1c231043a:;
	}
	_iter_end_1c231043a:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1c2311925:;
	}
	_iter_end_1c2311925:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1c004535e_trim((*_self_));
}



inline void _1c0044b22_shift(_1c0044803_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1c2313097:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1c231311e:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1c0045705_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1c231374b:;
				}
				_iter_end_1c231374b:;;
				_1c0045705_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1c2313196:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1c0045491_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1c2314829:;
				}
				_iter_end_1c2314829:;;
				_1c0045491_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1c2312e65:;
	};
}



inline void _1c0044c54_roundDown(_1c0044803_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_1c004535e_trim((*_self_));
}



inline void _1c0044d86_roundUp(_1c0044803_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1c2317ac4:;
	}
	_iter_end_1c2317ac4:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1c0044eb8_round(_1c0044803_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1c0045837_shouldRoundUp((*_self_),_41124_nd)) {
		_1c0044d86_roundUp(&(*_self_), _41124_nd);
	} else {
		_1c0044c54_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _1c00450ea_roundedInteger(_1c0044803_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1c231a90c:;
	}
	_iter_end_1c231a90c:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1c231d49d:;
	}
	_iter_end_1c231d49d:;;
	if (_1c0045837_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0044803_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be38e8b8_FieldIns> _1be368562_instance(jule::Ptr<_1be37971b_Field> _self_) {
	return jule::new_ptr<_1be38e8b8_FieldIns>(_1be38e8b8_FieldIns{._field_Decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1be37971b_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be388b7b_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be3b359b_StructIns> _1be36e656_instance(jule::Ptr<_1be387251_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	jule::Ptr<_1be3b359b_StructIns> _9917_ins = jule::new_ptr<_1be3b359b_StructIns>(_1be3b359b_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1be38e8b8_FieldIns>>::alloc(0LL,_self_.get()._field_Fields.len()), ._field_Refers=static__1be46554e_new(), });;
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c26c8a34:;
		if (it != expr.end()) {
			jule::Ptr<_1be37971b_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1be368562_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_Mutable)) && (_10521_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1c010a721_Mutable(_10521_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1c26c8a34:;
			++it;
			goto _iter_begin_1c26c8a34;
		}
		_iter_end_1c26c8a34:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1be45e6e1_Fn>>::alloc(0LL,_self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1c26cbc8a:;
			if (it != expr.end()) {
				jule::Ptr<_1be45e6e1_Fn> _11625_f = *it;
				{
					jule::Ptr<_1be45e6e1_Fn> _11725_fins = jule::new_ptr<_1be45e6e1_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_11725_fins);;
				}
				_iter_next_1c26cbc8a:;
				++it;
				goto _iter_begin_1c26cbc8a;
			}
			_iter_end_1c26cbc8a:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1be3b359b_StructIns> _1be3738be_appendInstance(_1be387251_Struct* _self_, jule::Ptr<_1be3b359b_StructIns>& _12838_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c26ce232:;
		if (it != expr.end()) {
			jule::Ptr<_1be3b359b_StructIns> _13421_ains = *it;
			{
				if (_1be38c3ee_Same(_13421_ains.ptr(), _12838_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1c26ce232:;
			++it;
			goto _iter_begin_1c26ce232;
		}
		_iter_end_1c26ce232:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}



inline jule::Ptr<_1be45e6e1_Fn> _1be37666e_FindMethod(_1be387251_Struct* _self_, jule::Str _14629_ident, jule::Bool _14641_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c26d0783:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_Statically == _14641_statically) && (_14721_f.get()._field_Ident == _14629_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1c26d0783:;
			++it;
			goto _iter_begin_1c26d0783;
		}
		_iter_end_1c26d0783:;
	};
	return nullptr;
}



inline jule::Ptr<_1c0081334_Var> _1be377681_FindStatic(_1be387251_Struct* _self_, jule::Str _15729_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1c26d19b5:;
		if (it != expr.end()) {
			jule::Ptr<_1c0081334_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_Ident == _15729_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1c26d19b5:;
			++it;
			goto _iter_begin_1c26d19b5;
		}
		_iter_end_1c26d19b5:;
	};
	return nullptr;
}



inline jule::Ptr<_1be37971b_Field> _1be376ac0_FindField(_1be387251_Struct* _self_, jule::Str _16828_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c26d2950:;
		if (it != expr.end()) {
			jule::Ptr<_1be37971b_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_Ident == _16828_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1c26d2950:;
			++it;
			goto _iter_begin_1c26d2950;
		}
		_iter_end_1c26d2950:;
	};
	return nullptr;
}



inline jule::Bool _1be378d9c_IsImplements(_1be387251_Struct* _self_, jule::Ptr<_1be47159e_Trait> _17827_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1c26d2e28:;
		if (it != expr.end()) {
			jule::Ptr<_1be47159e_Trait> &_17916_it = *it;
			{
				if ((_17827_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1c26d2e28:;
			++it;
			goto _iter_begin_1c26d2e28;
		}
		_iter_end_1c26d2e28:;
	};
	return false;
}



inline jule::Bool _1be3782a8_IsDerives(_1be387251_Struct* _self_, jule::Str _18824_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1c26d3e3a:;
		if (it != expr.end()) {
			jule::Ptr<_1be36332b_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_Args.len() == 1LL) && (_18916_d.get()._field_Args[0LL].get()._field_Kind == _18824_ident))) {
						return true;
					};
				};
			}
			_iter_next_1c26d3e3a:;
			++it;
			goto _iter_begin_1c26d3e3a;
		}
		_iter_end_1c26d3e3a:;
	};
	return false;
}



inline jule::Bool _1be37c059_IsUses(_1be387251_Struct* _self_, jule::Ptr<_1be387251_Struct> _20021_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1c26d66e0:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> &_20116_u = *it;
			{
				while ((_20021_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1c26d6e93:;
				}
				_iter_end_1c26d6e93:;;
			}
			_iter_next_1c26d66e0:;
			++it;
			goto _iter_begin_1c26d66e0;
		}
		_iter_end_1c26d66e0:;
	};
	return false;
}



inline jule::Bool _1be37c71e_HasRefAccessible(_1be387251_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c26d7191:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_Params.len() > 0LL) && _1be45d745_IsRef(_21116_m.get()._field_Params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1c26d7191:;
			++it;
			goto _iter_begin_1c26d7191;
		}
		_iter_end_1c26d7191:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1be387251_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be38e8b8_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be457277_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be457464_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be457651_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45783d_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be457a2a_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be457c17_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be457e04_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be4580e1_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be4582cd_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be4584ba_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be4586a7_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be458894_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be458a81_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be458c6d_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be458e5a_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be459378_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be459565_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be459752_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45993e_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be459b2b_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be459d18_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45a005_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45a1e2_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45a3ce_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45a5bb_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45a7a8_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45a995_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45ab82_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45ad6e_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45b05b_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45b248_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be459147_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45b8a8_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45ba95_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45bc82_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45be6e_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45c15b_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45c6de_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be4614c3_ParamIns> _1be45d26c_instance(jule::Ptr<_1be45cda4_Param> _self_) {
	return jule::new_ptr<_1be4614c3_ParamIns>(_1be4614c3_ParamIns{._field_Decl=_self_, });
}



inline jule::Bool _1be45d4d1_IsSelf(_1be45cda4_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));
}



inline jule::Bool _1be45d745_IsRef(_1be45cda4_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1be45cda4_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be45eb53_IsVoid(_1be45e6e1_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);
}



inline jule::Bool _1be45edb7_IsMethod(_1be45e6e1_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);
}



inline jule::Bool _1be46012b_IsEntryPoint(_1be45e6e1_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));
}



inline jule::Bool _1be460390_IsInit(_1be45e6e1_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));
}



inline jule::Bool _1be460604_IsAnon(_1be45e6e1_Fn* _self_) {
	return _1d676104c_IsAnonIdent((*_self_)._field_Ident);
}



inline jule::Bool _1be460868_AnyVar(_1be45e6e1_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));
}



inline jule::Ptr<_1be462392_FnIns> _1be460acc_instanceForce(jule::Ptr<_1be45e6e1_Fn> _self_) {
	jule::Ptr<_1be462392_FnIns> _10017_ins = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1c00487b3_Scope>(), ._field_Refers=static__1be46554e_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>::alloc(0LL,_self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c26eaa23:;
		if (it != expr.end()) {
			jule::Ptr<_1be45cda4_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1be45d26c_instance(_10721_p));;
			}
			_iter_next_1c26eaa23:;
			++it;
			goto _iter_begin_1c26eaa23;
		}
		_iter_end_1c26eaa23:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1be462392_FnIns> _1be460d41_instance(jule::Ptr<_1be45e6e1_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];
	};
	return _1be460acc_instanceForce(_self_);
}



inline jule::Ptr<_1be462392_FnIns> _1be46111b_appendInstance(_1be45e6e1_Fn* _self_, jule::Ptr<_1be462392_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c26eeac1:;
		if (it != expr.end()) {
			jule::Ptr<_1be462392_FnIns> _14421_ains = *it;
			{
				if (_1be463c9a_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1c26eeac1:;
			++it;
			goto _iter_begin_1c26eeac1;
		}
		_iter_end_1c26eeac1:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1be45e6e1_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1be46189c_Str(_1be4614c3_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1be45d4d1_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_1be45d745_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_1c0109720_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1be4614c3_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1be4626c2_Str(_1be462392_FnIns* _self_) {
	;
	return _1be4640a8_GetKindStr(&(*_self_), false);
}



inline jule::Bool _1be4629d0_Equals(jule::Ptr<_1be462392_FnIns> _self_, jule::Ptr<_1c0109324_TypeKind> _21722_other) {
	jule::Ptr<_1be462392_FnIns> _21813_f = _1c010c624_Fn(_21722_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	return _1be462e42_EqualsFn(_self_, _21813_f);
}



inline jule::Bool _1be462e42_EqualsFn(jule::Ptr<_1be462392_FnIns> _self_, jule::Ptr<_1be462392_FnIns>& _22825_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22825_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22825_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;
	};
	if ((_1be45eb53_IsVoid(_self_.get()._field_Decl.ptr()) != _1be45eb53_IsVoid(_22825_f.get()._field_Decl.ptr()))) {
		return false;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1be4614c3_ParamIns>,jule::Ptr<_1be4614c3_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1be4614c3_ParamIns>,jule::Ptr<_1be4614c3_ParamIns>)>([=](jule::Ptr<_1be4614c3_ParamIns> _23830_p1, jule::Ptr<_1be4614c3_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;
		};
		if (_1be45d4d1_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1be45d4d1_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;
			};
			if ((_1be45d745_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1be45d745_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;
		};
		return _1c0109a2d_Equals(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);
	});;
	if ((_22825_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22825_f.get()._field_Params[_27017_i])))) {
				return false;
			};
		}
	_iter_next_1c270d470:;
	}
	_iter_end_1c270d470:;;
	if ((!(_1be45eb53_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1c0109a2d_Equals(_self_.get()._field_Result, _22825_f.get()._field_Result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Bool _1be463250_equalsTrait(jule::Ptr<_1be462392_FnIns> _self_, jule::Ptr<_1be462392_FnIns>& _28728_other) {
	if ((!(_1be462e42_EqualsFn(_self_, _28728_other)))) {
		return false;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28728_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1c0109324_TypeKind>> _1be4634b4_Types(_1be462392_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1c2711ab1:;
			{
				return nullptr;
			}
		}
		else if ((_1c010d0c5_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1c2711b27:;
			{
				return jule::Slice<jule::Ptr<_1c0109324_TypeKind>>::make({(*_self_)._field_Result});
			}
		}
		else {
			_case_begin_1c2711a4a:;
			{
				return _1c010d0c5_Tup((*_self_)._field_Result.ptr()).get()._field_Types;
			}
		}
		_match_end_1c271196d:;
	};
}



inline jule::Bool _1be463728_IsBuiltin(_1be462392_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1be46398c_IsAnon(_1be462392_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _1be460604_IsAnon((*_self_)._field_Decl.ptr())));
}



inline jule::Bool _1be463c9a_Same(_1be462392_FnIns* _self_, jule::Ptr<_1be462392_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c2715488:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_1c0107ae7_InsGeneric> &_32916_g = *it;
			{
				if ((!(_1c0109a2d_Equals(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1c2715488:;
			++it;
			_32913_i++;
			goto _iter_begin_1c2715488;
		}
		_iter_end_1c2715488:;
	};
	return true;
}



inline jule::Str _1be4640a8_GetKindStr(_1be462392_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1c2719426:;
			if (it != expr.end()) {
				jule::Ptr<_1be4614c3_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_1be46189c_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1c2719426:;
				++it;
				goto _iter_begin_1c2719426;
			}
			_iter_end_1c2719426:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1be45eb53_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1c0109720_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1be462392_FnIns _Src) {
	_Stream << "FnIns{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Anon:" << _Src._field_Anon << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be465263_ReferenceStack> static__1be46554e_new(void) {
	return jule::new_ptr<_1be465263_ReferenceStack>(_1be465263_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I64 _1be4658d4_Len(_1be465263_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1be465be2_At(_1be465263_ReferenceStack* _self_, jule::I64 _6821_i) {
	return jule::Any((*_self_)._field_buffer[_6821_i]);
}



inline void _1be465e67_Push(_1be465263_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7327_ref));;
}



inline jule::Bool _1c2c3bc56_Exist(_1be465263_ReferenceStack* _self_, jule::Ptr<_1be462392_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c2c3d043:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1c2c3d043:;
			++it;
			goto _iter_begin_1c2c3d043;
		}
		_iter_end_1c2c3d043:;
	};
	return false;
}

inline jule::Bool _1c2c516d8_Exist(_1be465263_ReferenceStack* _self_, jule::Ptr<_1c0081334_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c2c52981:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1c2c52981:;
			++it;
			goto _iter_begin_1c2c52981;
		}
		_iter_end_1c2c52981:;
	};
	return false;
}

inline jule::Bool _1c2a0403a_Exist(_1be465263_ReferenceStack* _self_, jule::Ptr<_1be3b359b_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c2a0536b:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1c2a0536b:;
			++it;
			goto _iter_begin_1c2a0536b;
		}
		_iter_end_1c2a0536b:;
	};
	return false;
}

inline jule::Bool _1c304a273_Exist(_1be465263_ReferenceStack* _self_, jule::Ptr<_1be47159e_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c304b51b:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7823_t)) {
					return true;
				};
			}
			_iter_next_1c304b51b:;
			++it;
			goto _iter_begin_1c304b51b;
		}
		_iter_end_1c304b51b:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1be465263_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be46662c_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1be46aac6_symbolBuilder> _1be46b07c_getRoot(jule::Ptr<_1be46aac6_symbolBuilder> _self_) {
	jule::Ptr<_1be46aac6_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1c2732a27:;
	}
	_iter_end_1c2732a27:;;
	return _31617_root;
}



inline void _1be46b445_pushErr(_1be46aac6_symbolBuilder* _self_, jule::Ptr<_1d675d511_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c0062ada_compilerErr(_32327_token,true,_32342_fmt,jule::Any(_32355_args)));;
}



inline void _1be46b80d_pushErrText(_1be46aac6_symbolBuilder* _self_, jule::Ptr<_1d675d511_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c0062ada_compilerErr(_32731_token,false,_32746_fmt,jule::Any(_32759_args)));;
}



inline void _1be46bb2c_pushSuggestion(_1be46aac6_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1c0064070_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,jule::Any(_33246_args));
	};
}



inline jule::Bool _1be46bed4_checkCppUseDeclPath(_1be46aac6_symbolBuilder* _self_, jule::Ptr<_1be3ae564_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool _33668_ok = jule::Bool();
	jule::Str _33713_ext = _1d63a8986_Ext(_33655_path);;
	if (((!(_1d6428d8b_IsValidHeaderExt(_33713_ext))) && (!(_1d6429133_IsValidCppExt(_33713_ext))))) {
		_1be46b445_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33668_ok = false;
		return _33668_ok;
	};
	jule::Ptr<_233937638_Status> _34413_info = ({
		auto except = static__2320979c0_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1be46b445_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
			_33668_ok = false;
			return _33668_ok;
		} jule::Ptr<_233937638_Status>();});
	});;
	if (_2320909eb_IsDir(_34413_info.ptr())) {
		_1be46b445_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath)}));
		_33668_ok = false;
		return _33668_ok;
	};
	_33668_ok = true;
	return _33668_ok;
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1be46c2ae_buildCppHeaderImport(_1be46aac6_symbolBuilder* _self_, jule::Ptr<_1be3ae564_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_1d6428bb0_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_1d63a86de_Join(jule::Slice<jule::Str>::make({_1d6764292_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _1be46bed4_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _1d63a8c2d_Abs(_35717_path);
		if ((!(_36121_ok))) {
			_1be46b445_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath)}));
		};
	};
	return jule::new_ptr<_1c005b3a8_ImportInfo>(_1c005b3a8_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1be46c5bc_buildStdImport(_1be46aac6_symbolBuilder* _self_, jule::Ptr<_1be3ae564_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_1d63a492c_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_1d63a86de_Join(jule::Slice<jule::Str>::make({_231edd130_PathStdlib,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _1d63a8c2d_Abs(_38517_path);
	if ((!(_38820_ok))) {
		_1be46b445_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_233937638_Status> _39513_info = ({
		auto except = static__2320979c0_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1be46b445_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_233937638_Status>();});
	});;
	if ((!(_2320909eb_IsDir(_39513_info.ptr())))) {
		_1be46b445_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _40513_i = (_1d6358d21_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1c005b3a8_ImportInfo>(_1c005b3a8_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1c005e312_Package>(_1c005e312_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1be46c8ca_buildIdentImport(jule::Ptr<_1be46aac6_symbolBuilder> _self_, jule::Ptr<_1be3ae564_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c0057c89_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1be46b445_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1be46bb2c_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_1d63a492c_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_1d63a86de_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _1d63a8c2d_Abs(_43117_path);
	if ((!(_43520_ok))) {
		_1be46b445_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::Ptr<_233937638_Status> _44213_info = ({
		auto except = static__2320979c0_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1be46b445_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
			return nullptr;
		} jule::Ptr<_233937638_Status>();});
	});;
	if ((!(_2320909eb_IsDir(_44213_info.ptr())))) {
		_1be46b445_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath)}));
		return nullptr;
	};
	jule::I64 _45213_i = (_1d6358d21_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1c005b3a8_ImportInfo>(_1c005b3a8_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1c005e312_Package>(_1c005e312_Package{._field_Files=nullptr}), });
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1be46cbd8_buildImport(jule::Ptr<_1be46aac6_symbolBuilder> _self_, jule::Ptr<_1be3ae564_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1c274b777:;
			{
				return _1be46c2ae_buildCppHeaderImport(_self_.ptr(), _47036_decl);
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1c274b9db:;
			{
				return _1be46c5bc_buildStdImport(_self_.ptr(), _47036_decl);
			}
		}
		else {
			_case_begin_1c274b007:;
			{
				return _1be46c8ca_buildIdentImport(_self_, _47036_decl);
			}
		}
		_match_end_1c274ae2a:;
	};
}



inline jule::Bool _1be46cee6_checkDuplicateUseDecl(_1be46aac6_symbolBuilder* _self_, jule::Ptr<_1c005b3a8_ImportInfo>& _48141_pkg) {
	jule::Bool _48161_ok = jule::Bool();
	jule::Ptr<_1c005b3a8_ImportInfo> _48313_lpkg = _1c00c8d4e_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)>([=](jule::Ptr<_1c005b3a8_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48161_ok = true;
		return _48161_ok;
	};
	_1be46b445_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath)}));
	_1be46bb2c_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48161_ok = false;
	return _48161_ok;
}



inline void _1be46d315_implImportSelections(_1be46aac6_symbolBuilder* _self_, jule::Ptr<_1c005b3a8_ImportInfo>& _49544_imp, jule::Ptr<_1be3ae564_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1c27504e5:;
		if (it != expr.end()) {
			jule::Ptr<_1d675d511_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1c2751073:;
					if (it != expr.end()) {
						jule::Ptr<_1d675d511_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1c2751073;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1be46b445_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind)}));
								_1be46bb2c_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1c2751073;
							};
						}
						_iter_next_1c2751073:;
						++it;
						goto _iter_begin_1c2751073;
					}
					_iter_end_1c2751073:;
				};
			}
			_iter_next_1c27504e5:;
			++it;
			goto _iter_begin_1c27504e5;
		}
		_iter_end_1c27504e5:;
	};
}



inline jule::Str _1be46d623_getAsLinkPath(jule::Ptr<_1be46aac6_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_1d63616b9_HasPrefix(_51037_path,_231edd130_PathStdlib)) {
		(_51037_path).mut_slice(_231edd130_PathStdlib.len());;
		return (jule::Str("std", 3) + _1d63a492c_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _1d63a8c2d_Abs(_1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c0057c89_GetModPath(_self_.get()._field_importer));
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _1d63a492c_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1be46d9db_pushCycleError(jule::Ptr<_1be46aac6_symbolBuilder> _self_, jule::Ptr<_1be46aac6_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _1d6435c44_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1be46d623_getAsLinkPath(_self_, _1d6764292_Dir(_52435_sb.get()._field_table.get()._field_File.ptr()))),jule::Any(_1be46d623_getAsLinkPath(_self_, _52455_path))}));;
	(_52471_message).buffer.insert(0, (((_200a79329_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1be46dda4_pushCrossCycleError(jule::Ptr<_1be46aac6_symbolBuilder> _self_, jule::Ptr<_1be46aac6_symbolBuilder>& _53340_target, jule::Ptr<_1c005b3a8_ImportInfo>& _53365_imp, jule::Ptr<_1d675d511_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1be46d9db_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_1be46aac6_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1be46aac6_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1be46d9db_pushCycleError(_self_, _53917_old.get()._field_owner,_1d6764292_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_1be46d9db_pushCycleError(_self_, _53340_target,_1d6764292_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1c2757ac4;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1c2757ac4:;
	}
	_iter_end_1c2757ac4:;;
	_1be46b445_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message)}));
}



inline jule::Bool _1be46e25b_checkImportCycles(jule::Ptr<_1be46aac6_symbolBuilder> _self_, jule::Ptr<_1c005b3a8_ImportInfo> _55637_imp, jule::Ptr<_1be3ae564_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _1d6764292_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1be46b445_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1be46d623_getAsLinkPath(_self_, _55637_imp.get()._field_Path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1d6764292_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1be46dda4_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	jule::Ptr<_1be46aac6_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1d6764292_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1be46dda4_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1be46e646_checkPackageAccessibility(_1be46aac6_symbolBuilder* _self_, jule::Ptr<_1be3ae564_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_1c0058b25_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1c0057c89_GetModPath((*_self_)._field_importer) != _59262_mod) && _1d63a3684_Contains(_59273_path,jule::Str("internal", 8)))) {
		_1be46b445_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1be46ea0e_importPackage(jule::Ptr<_1be46aac6_symbolBuilder> _self_, jule::Ptr<_1c005b3a8_ImportInfo>& _59838_imp, jule::Ptr<_1be3ae564_UseDecl>& _59861_decl) {
	jule::Bool _59879_ok = jule::Bool();
	if (_59838_imp.get()._field_CppLinked) {
		_59879_ok = true;
		return _59879_ok;
	};
	jule::Ptr<_1c005b3a8_ImportInfo> _60317_port = _1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c00583a5_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c0057c89_GetModPath(_self_.get()._field_importer);;
		_1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c0057a47_SetModPath(_self_.get()._field_importer, _1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c0058097_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_1be46e646_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c0057a47_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1be46e25b_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			_59879_ok = false;
			return _59879_ok;
		};
		jule::Str _61717_oldMod = _1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c0057c89_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c0057a47_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c0057a47_SetModPath(_self_.get()._field_importer, _231edd130_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1be3621a4_Ast>> _62222_asts;;
		jule::Slice<_1d6435804_Log> _62232_errors;;
		std::tie(_62222_asts,_62232_errors) = _1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c005875c_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			_59879_ok = false;
			return _59879_ok;
		};
		_1be46e646_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1c2768486:;
			if (it != expr.end()) {
				jule::Ptr<_1be3621a4_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1c00c8524_SymbolTable> _63125_table = nullptr;;
					std::tie(_63125_table,_62232_errors) = _1c01259b1_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						_1be46b80d_pushErrText(_self_.ptr(), _59838_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59838_imp.get()._field_LinkPath)}));
						_59879_ok = false;
						return _59879_ok;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1c2768486:;
				++it;
				goto _iter_begin_1c2768486;
			}
			_iter_end_1c2768486:;
		};
	};
	_1be46d315_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	_59879_ok = true;
	return _59879_ok;
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1be46ed1c_importUseDecl(jule::Ptr<_1be46aac6_symbolBuilder> _self_, jule::Ptr<_1be3ae564_UseDecl>& _65038_decl) {
	jule::Ptr<_1c005b3a8_ImportInfo> _65117_imp = _1be46cbd8_buildImport(_self_, _65038_decl);;
	if ((_65117_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65717_ok = _1be46cee6_checkDuplicateUseDecl(_self_.ptr(), _65117_imp);;
	if ((!(_65717_ok))) {
		return nullptr;
	};
	_65717_ok=_1be46ea0e_importPackage(_self_, _65117_imp,_65038_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65117_imp);;
	if (_65717_ok) {
		_1c0058b25_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1c00589d2_Imported(_self_.get()._field_importer, _65117_imp);
		return _65117_imp;
	};
	return nullptr;
}



inline void _1be46eee8_importUseDecls(jule::Ptr<_1be46aac6_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1c276de4d:;
		if (it != expr.end()) {
			jule::Ptr<_1be3ae564_UseDecl> _67221_decl = *it;
			{
				_1be46ed1c_importUseDecl(_self_, _67221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1c276de4d;
				};
			}
			_iter_next_1c276de4d:;
			++it;
			goto _iter_begin_1c276de4d;
		}
		_iter_end_1c276de4d:;
	};
}



inline void _1be47026d_appendNode(_1be46aac6_symbolBuilder* _self_, _1be362e30_Node& _68134_node) {
	{
		auto &_match_expr{ _68134_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1be3b2cd7_Impl>>()) {
			_case_begin_1c27709cc:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_1be46a576_buildImpl(_68134_node._field_Data.operator jule::Ptr<_1be3b2cd7_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3ad178_TypeAliasDecl>>()) {
			_case_begin_1c276e712:;
			{
				jule::Ptr<_1c0108631_TypeAlias> _68621_ta = _1be467012_buildTypeAlias(_68134_node._field_Data.operator jule::Ptr<_1be3ad178_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68621_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3b20c2_StructDecl>>()) {
			_case_begin_1c27705d1:;
			{
				jule::Ptr<_1be387251_Struct> _68921_srct = _1be467870_buildStruct(_68134_node._field_Data.operator jule::Ptr<_1be3b20c2_StructDecl>());;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68921_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a8838_FnDecl>>()) {
			_case_begin_1c2770647:;
			{
				jule::Ptr<_1be45e6e1_Fn> _69221_f = _1be4684ca_buildFn(_68134_node._field_Data.operator jule::Ptr<_1be3a8838_FnDecl>());;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_69221_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3b26cc_TraitDecl>>()) {
			_case_begin_1c2770e3e:;
			{
				jule::Ptr<_1be47159e_Trait> _69521_t = _1be468a19_buildTrait(_68134_node._field_Data.operator jule::Ptr<_1be3b26cc_TraitDecl>());;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69521_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a9817_VarDecl>>()) {
			_case_begin_1c2770ea5:;
			{
				jule::Ptr<_1c0081334_Var> _69821_v = _1be46a037_buildVar(_68134_node._field_Data.operator jule::Ptr<_1be3a9817_VarDecl>());;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69821_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3b0510_EnumDecl>>()) {
			_case_begin_1c277101b:;
			{
				jule::Ptr<_1be4736e4_Enum> _70121_e = _1be469300_buildEnum(_68134_node._field_Data.operator jule::Ptr<_1be3b0510_EnumDecl>());;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_70121_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3b1214_TypeEnumDecl>>()) {
			_case_begin_1c2771082:;
			{
				jule::Ptr<_1be474cde_TypeEnum> _70421_e = _1be469c90_buildTypeEnum(_68134_node._field_Data.operator jule::Ptr<_1be3b1214_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_70421_e);;
			}
		}
		else {
			_case_begin_1c2770449:;
			{
				_1be46b445_pushErr(&(*_self_), _68134_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c276e844:;
	};
}



inline void _1be470449_appendNodes(_1be46aac6_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1c2779970:;
		if (it != expr.end()) {
			_1be362e30_Node _71221_node = *it;
			{
				_1be47026d_appendNode(&(*_self_), _71221_node);
			}
			_iter_next_1c2779970:;
			++it;
			goto _iter_begin_1c2779970;
		}
		_iter_end_1c2779970:;
	};
}



inline void _1be4706be_pushDirectivePass(_1be46aac6_symbolBuilder* _self_, jule::Ptr<_1be36332b_Directive>& _71741_d) {
	if ((_71741_d.get()._field_Args.len() == 0LL)) {
		_1be46b445_pushErr(&(*_self_), _71741_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71741_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1d675d511_Token> _72217_arg = _71741_d.get()._field_Args[1LL];;
		_1be46b445_pushErr(&(*_self_), _72217_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d675d511_Token> _72613_arg = _71741_d.get()._field_Args[0LL];;
	if ((_72613_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1be46b445_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72613_arg.get()._field_Kind[0LL] != '\"')) {
		_1be46b445_pushErr(&(*_self_), _72613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_1be46662c_Pass{._field_Token=_71741_d.get()._field_Tag, ._field_Text=_72613_arg.get()._field_Kind.slice(1LL,(_72613_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1be47089a_appendTopDirectives(_1be46aac6_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1c277e15b:;
		if (it != expr.end()) {
			jule::Ptr<_1be36332b_Directive> _74421_d = *it;
			{
				{
					auto &_match_expr{ _74421_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1c2780a31:;
						{
							_1be4706be_pushDirectivePass(&(*_self_), _74421_d);
						}
					}
					_match_end_1c2780976:;
				};
			}
			_iter_next_1c277e15b:;
			++it;
			goto _iter_begin_1c277e15b;
		}
		_iter_end_1c277e15b:;
	};
}



inline void _1be470a76_build(jule::Ptr<_1be46aac6_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1c00c8524_SymbolTable>(_1c00c8524_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1be47089a_appendTopDirectives(_self_.ptr());
	_1be46eee8_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1be470449_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1be46aac6_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1be47199a_Str(_1be47159e_Trait* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1be471ca8_Equals(jule::Ptr<_1be47159e_Trait> _self_, jule::Ptr<_1c0109324_TypeKind> _2522_other) {
	jule::Ptr<_1be47159e_Trait> _2613_trt = _1c010caec_Trait(_2522_other.ptr());;
	return (_self_ == _2613_trt);
}



inline jule::Bool _1be47211b_IsBuiltin(_1be47159e_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);
}



inline jule::Ptr<_1be45e6e1_Fn> _1be472429_FindMethod(_1be47159e_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c27848e2:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;
				};
			}
			_iter_next_1c27848e2:;
			++it;
			goto _iter_begin_1c27848e2;
		}
		_iter_end_1c27848e2:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1be47159e_Trait _Src) {
	_Stream << "Trait{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Implemented:" << _Src._field_Implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be4730d9_AutoExpr(_1be472bee_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be472bee_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1be473a57_Str(_1be4736e4_Enum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1be473d65_Equals(jule::Ptr<_1be4736e4_Enum> _self_, jule::Ptr<_1c0109324_TypeKind> _3822_other) {
	jule::Ptr<_1be4736e4_Enum> _3913_enm = _1c010bb73_Enum(_3822_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1be472bee_EnumItem> _1be4742a5_FindItem(_1be4736e4_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1c2787186:;
		if (it != expr.end()) {
			jule::Ptr<_1be472bee_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1c2787186:;
			++it;
			goto _iter_begin_1c2787186;
		}
		_iter_end_1c2787186:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1be4736e4_Enum _Src) {
	_Stream << "Enum{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1be474728_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1be47511e_Str(_1be474cde_TypeEnum* _self_) {
	return (*_self_)._field_Ident;
}



inline jule::Bool _1be47542c_Equals(jule::Ptr<_1be474cde_TypeEnum> _self_, jule::Ptr<_1c0109324_TypeKind> _8022_other) {
	jule::Ptr<_1be474cde_TypeEnum> _8113_tenm = _1c010bdd7_TypeEnum(_8022_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1be474728_TypeEnumItem> _1be475828_FindItem(_1be474cde_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1c27893b9:;
		if (it != expr.end()) {
			jule::Ptr<_1be474728_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1c27893b9:;
			++it;
			goto _iter_begin_1c27893b9;
		}
		_iter_end_1c27893b9:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1be474cde_TypeEnum _Src) {
	_Stream << "TypeEnum{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items;
	_Stream << "}";
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1c0064504_Sema>&,jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>&)> _1be4a2b63_readyFn(jule::Ptr<_1be48c8d9_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1c0064504_Sema>&,jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>&)>([=](jule::Ptr<_1c0064504_Sema>& _6321_sema, jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1c27972d9:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_1be3a4108_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1c0107ae7_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1c27972d9;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1c0109324_TypeKind>>::alloc(0LL,_6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1c279983b:;
						if (it != expr.end()) {
							jule::Ptr<_1be396a24_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_1c0109324_TypeKind> _7229_kind = _1c006a8d4_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_1c0124e55_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type_is<jule::Ptr<_1be3970da_IdentTypeDecl>>()) {
											_case_begin_1c279b6c8:;
											{
												jule::Ptr<_1be3970da_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.operator jule::Ptr<_1be3970da_IdentTypeDecl>();;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1be4d98c0_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1c279b673:;
									};
									return false;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1c279983b:;
							++it;
							goto _iter_begin_1c279983b;
						}
						_iter_end_1c279983b:;
					};
				}
				_iter_next_1c27972d9:;
				++it;
				_6418_i++;
				goto _iter_begin_1c27972d9;
			}
			_iter_end_1c27972d9:;
		};
		return true;
	});
}



inline jule::Bool _1be4b9b9c_readyFi(jule::Ptr<_1be48c8d9_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1c006ecd4_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_1be4a2b63_readyFn(_self_)));
}



inline jule::Bool _1be4d4546_readySi(jule::Ptr<_1be48c8d9_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1be4a2b63_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));
}



inline jule::Bool _1be4d638e_ready(jule::Ptr<_1be48c8d9_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1be4b9b9c_readyFi(_self_);
	};
	return _1be4d4546_readySi(_self_);
}



inline jule::Bool _1be4d757c_check(jule::Ptr<_1be48c8d9_constraintChecker> _self_) {
	if ((!(_1be4d638e_ready(_self_)))) {
		return false;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1c27a36be:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_1c0107ae7_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1c27a36be;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1c27a4390:;
					if (it != expr.end()) {
						jule::Ptr<_1c0109324_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1c010dceb_Prim> _12425_prim = _1c010b436_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1c010e8e0_IsConstraint(_12425_prim.ptr()))) {
								if (_1be4d7cca_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1c27a36be;
								};
								goto _iter_next_1c27a4390;
							};
							if (_1c0109a2d_Equals(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1c27a36be;
							};
						}
						_iter_next_1c27a4390:;
						++it;
						goto _iter_begin_1c27a4390;
					}
					_iter_end_1c27a4390:;
				};
				_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_11921_g.get()._field_Kind.ptr())),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident)}));
				return false;
			}
			_iter_next_1c27a36be:;
			++it;
			_11914_i++;
			goto _iter_begin_1c27a36be;
		}
		_iter_end_1c27a36be:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1be48c8d9_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be4daaad_IsTraitImpl(_1be50ab22_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);
}



inline jule::Bool _1be4db30b_IsStructImpl(_1be50ab22_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1be50ab22_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00487b3_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00489a0_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0048b8c_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0048d79_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0049066_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1be50ad0e_IsWhileNext(_1c0049253_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c0049253_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0049440_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c004962c_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0049819_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0049a06_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0049be3_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0049dd0_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c004a0bc_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c004a2a9_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c004a8b4_IsGenericTypeMatch(_1c004a496_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1c004a496_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c004abd3_isDefault(_1c004a9e6_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c004a9e6_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c004ad15_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c004b002_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c004b1de_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c004b3cb_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c004b7a5_FindPackage(_1c004b5b8_scopeChecker* _self_, jule::Str _45630_ident) {
	return _1c0064a21_FindPackage((*_self_)._field_s.ptr(), _45630_ident);
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c004b8d7_SelectPackage(_1c004b5b8_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)> _46632_selector) {
	return _1c0064d2e_SelectPackage((*_self_)._field_s.ptr(), _46632_selector);
}



inline jule::Ptr<_1c0081334_Var> _1c004ba19_FindVar(_1c004b5b8_scopeChecker* _self_, jule::Str _47726_ident, jule::Bool _47738_cpp_linked) {
	;
	jule::Ptr<_1c0081334_Var> _48017_v = _1c00cacb8_findVar((*_self_)._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);;
	if ((_48017_v != nullptr)) {
		return _48017_v;
	};
	jule::Ptr<_1c004b5b8_scopeChecker> _48517_parent = (*_self_)._field_parent;;
	while ((_48517_parent != nullptr)) {
		{
			_48017_v=_1c00cacb8_findVar(_48517_parent.get()._field_table.ptr(), _47726_ident,_47738_cpp_linked,true);
			if ((_48017_v != nullptr)) {
				return _48017_v;
			};
			_48517_parent=_48517_parent.get()._field_parent;
		}
	_iter_next_1c27d0795:;
	}
	_iter_end_1c27d0795:;;
	return _1c00651d6_FindVar((*_self_)._field_s.ptr(), _47726_ident,_47738_cpp_linked);
}



inline jule::Ptr<_1c0108631_TypeAlias> _1c004bb4b_FindTypeAlias(_1c004b5b8_scopeChecker* _self_, jule::Str _50432_ident, jule::Bool _50444_cppLinked) {
	;
	jule::Ptr<_1c0108631_TypeAlias> _50717_ta = _1c00cb219_findTypeAlias((*_self_)._field_table.ptr(), _50432_ident,_50444_cppLinked,true);;
	if ((_50717_ta != nullptr)) {
		return _50717_ta;
	};
	jule::Ptr<_1c004b5b8_scopeChecker> _51217_parent = (*_self_)._field_parent;;
	while ((_51217_parent != nullptr)) {
		{
			_50717_ta=_1c00cb219_findTypeAlias(_51217_parent.get()._field_table.ptr(), _50432_ident,_50444_cppLinked,true);
			if ((_50717_ta != nullptr)) {
				return _50717_ta;
			};
			_51217_parent=_51217_parent.get()._field_parent;
		}
	_iter_next_1c27d3633:;
	}
	_iter_end_1c27d3633:;;
	return _1c006558d_FindTypeAlias((*_self_)._field_s.ptr(), _50432_ident,_50444_cppLinked);
}



inline jule::Ptr<_1be387251_Struct> _1c004bc7d_FindStruct(_1c004b5b8_scopeChecker* _self_, jule::Str _52929_ident, jule::Bool _52941_cppLinked) {
	return _1c0065945_FindStruct((*_self_)._field_s.ptr(), _52929_ident,_52941_cppLinked);
}



inline jule::Ptr<_1be45e6e1_Fn> _1c004bdb0_FindFn(_1c004b5b8_scopeChecker* _self_, jule::Str _53825_ident, jule::Bool _53837_cppLinked) {
	return _1c0065cec_FindFn((*_self_)._field_s.ptr(), _53825_ident,_53837_cppLinked);
}



inline jule::Ptr<_1be47159e_Trait> _1c004bee2_FindTrait(_1c004b5b8_scopeChecker* _self_, jule::Str _54728_ident) {
	return _1c006610a_FindTrait((*_self_)._field_s.ptr(), _54728_ident);
}



inline jule::Ptr<_1be4736e4_Enum> _1c004c124_FindEnum(_1c004b5b8_scopeChecker* _self_, jule::Str _55627_ident) {
	return _1c0066418_FindEnum((*_self_)._field_s.ptr(), _55627_ident);
}



inline jule::Ptr<_1be474cde_TypeEnum> _1c004c256_FindTypeEnum(_1c004b5b8_scopeChecker* _self_, jule::Str _56531_ident) {
	return _1c0066726_FindTypeEnum((*_self_)._field_s.ptr(), _56531_ident);
}



inline jule::Bool _1c004c388_isUnsafe(jule::Ptr<_1c004b5b8_scopeChecker> _self_) {
	jule::Ptr<_1c004b5b8_scopeChecker> _57317_scope = _self_;;
	_julec_label_iter:;
	if (_57317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;
	};
	if ((_57317_scope.get()._field_parent != nullptr)) {
		_57317_scope=_57317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1c004c4ba_isRoot(_1c004b5b8_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1c004c5ec_stop(_1c004b5b8_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1c004c72e_stopped(_1c004b5b8_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1c004c861_isDeferred(jule::Ptr<_1c004b5b8_scopeChecker> _self_) {
	jule::Ptr<_1c004b5b8_scopeChecker> _60617_scope = _self_;;
	_julec_label_iter:;
	if (_60617_scope.get()._field_scope.get()._field_Deferred) {
		return true;
	};
	if ((_60617_scope.get()._field_parent != nullptr)) {
		_60617_scope=_60617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1c004b5b8_scopeChecker> _1c004c993_getRoot(jule::Ptr<_1c004b5b8_scopeChecker> _self_) {
	jule::Ptr<_1c004b5b8_scopeChecker> _62417_root = _self_;;
	while (((_62417_root.get()._field_parent != nullptr) && (_62417_root.get()._field_owner == nullptr))) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1c27dcb04:;
	}
	_iter_end_1c27dcb04:;;
	return _62417_root;
}



inline jule::Ptr<_1c004b5b8_scopeChecker> _1c004cac5_getHardRoot(jule::Ptr<_1c004b5b8_scopeChecker> _self_) {
	jule::Ptr<_1c004b5b8_scopeChecker> _63417_root = _self_;;
	while ((_63417_root.get()._field_parent != nullptr)) {
		{
			_63417_root=_63417_root.get()._field_parent;
		}
	_iter_next_1c27dddbe:;
	}
	_iter_end_1c27dddbe:;;
	return _63417_root;
}



inline jule::Ptr<_1c0049a06_Label> _1c004cc07_findLabel(_1c004b5b8_scopeChecker* _self_, jule::Str _64428_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1c27deb7d:;
		if (it != expr.end()) {
			jule::Any _64521_st = *it;
			{
				{
					auto &_match_expr{ _64521_st };
					
					if (_match_expr.type_is<jule::Ptr<_1c0049a06_Label>>()) {
						_case_begin_1c27e0486:;
						{
							jule::Ptr<_1c0049a06_Label> _64825_label = _64521_st.operator jule::Ptr<_1c0049a06_Label>();;
							if ((_64825_label.get()._field_Ident == _64428_ident)) {
								return _64825_label;
							};
						}
					}
					_match_end_1c27e0387:;
				};
			}
			_iter_next_1c27deb7d:;
			++it;
			goto _iter_begin_1c27deb7d;
		}
		_iter_end_1c27deb7d:;
	};
	return nullptr;
}



inline jule::Ptr<_1c004b1de_scopeLabel> _1c004cd39_findLabelScope(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Str _66034_ident) {
	jule::Ptr<_1c004b1de_scopeLabel> _66117_label = _1c004ce6b_findLabelAll(_self_.ptr(), _66034_ident);;
	if (((_66117_label != nullptr) && (_66117_label.get()._field_scope == _self_))) {
		return _66117_label;
	};
	return nullptr;
}



inline jule::Ptr<_1c004b1de_scopeLabel> _1c004ce6b_findLabelAll(_1c004b5b8_scopeChecker* _self_, jule::Str _67231_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1c27e2873:;
		if (it != expr.end()) {
			jule::Ptr<_1c004b1de_scopeLabel> _67321_lbl = *it;
			{
				if ((_67321_lbl.get()._field_label.get()._field_Ident == _67231_ident)) {
					return _67321_lbl;
				};
			}
			_iter_next_1c27e2873:;
			++it;
			goto _iter_begin_1c27e2873;
		}
		_iter_end_1c27e2873:;
	};
	return nullptr;
}



inline jule::Bool _1c004d09d_isDuplicatedIdent(_1c004b5b8_scopeChecker* _self_, jule::Uintptr _68436_itself, jule::Str _68453_ident) {
	jule::Ptr<_1c0081334_Var> _68513_v = _1c004ba19_FindVar(&(*_self_), _68453_ident,false);;
	if (((_68513_v != nullptr) && (static_cast<jule::Uintptr>(_68513_v) != _68436_itself))) {
		if ((_68513_v.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_68513_v.get()._field_Scope == (*_self_)._field_scope) || (!(_1c0066a78_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1c0108631_TypeAlias> _69313_ta = _1c004bb4b_FindTypeAlias(&(*_self_), _68453_ident,false);;
	if (((_69313_ta != nullptr) && (static_cast<jule::Uintptr>(_69313_ta) != _68436_itself))) {
		if ((_69313_ta.get()._field_Scope == nullptr)) {
			return false;
		};
		return ((_69313_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_1c0066a78_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1c004d1d0_checkVarDecl(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a9817_VarDecl> _70436_decl) {
	jule::Ptr<_1c0081334_Var> _70517_v = _1be46a037_buildVar(_70436_decl);;
	_70517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_70517_v));;
	});;
	if (_1c004d09d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70517_v)),_70517_v.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _70517_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70517_v.get()._field_Ident)}));
		_1c00674d5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1c004c5ec_stop(_self_.ptr());
		return;;
	};
	_1c0075757_checkVarDecl(_self_.get()._field_s, _70517_v,jule::Trait<_1c0124e55_Lookup>(_self_, 0));
	if (((!(_1c0081950_IsTypeInferred(_70517_v.ptr()))) && ((_70517_v.get()._field_Kind == nullptr) || (_70517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1c0078d98_checkTypeVar(_self_.get()._field_s, _70517_v,jule::Trait<_1c0124e55_Lookup>(_self_, 0));
}



inline void _1c004d312_checkTypeAliasDecl(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3ad178_TypeAliasDecl> _72842_decl) {
	jule::Ptr<_1c0108631_TypeAlias> _72917_ta = _1be467012_buildTypeAlias(_72842_decl);;
	if (_1c004d09d_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72917_ta)),_72917_ta.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _72917_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72917_ta.get()._field_Ident)}));
		_1c00674d5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1c004c5ec_stop(_self_.ptr());
		return;;
	};
	_1c0071599_checkTypeAliasDecl(_self_.get()._field_s, _72917_ta,jule::Trait<_1c0124e55_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72917_ta);;
	if ((_72917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1c004c5ec_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1c00487b3_Scope> _1c004d444_getChild(_1c004b5b8_scopeChecker* _self_) {
	return jule::new_ptr<_1c00487b3_Scope>(_1c00487b3_Scope{._field_Parent=(*_self_)._field_scope, });
}



inline void _1c004d576_checkChildSsc(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a6d42_ScopeTree>& _75238_tree, jule::Ptr<_1c00487b3_Scope>& _75261_s, jule::Ptr<_1c004b5b8_scopeChecker>& _75277_ssc) {
	_75277_ssc.get()._field_parent=_self_;
	_1c0054901_check(_75277_ssc, _75238_tree,_75261_s);
}



inline jule::Ptr<_1c00487b3_Scope> _1c004d6a8_checkChildSc(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a6d42_ScopeTree>& _75737_tree, jule::Ptr<_1c004b5b8_scopeChecker>& _75760_ssc) {
	jule::Ptr<_1c00487b3_Scope> _75817_s = _1c004d444_getChild(_self_.ptr());;
	_1c004d576_checkChildSsc(_self_, _75737_tree,_75817_s,_75760_ssc);
	return _75817_s;
}



inline jule::Ptr<_1c00487b3_Scope> _1c004d7da_checkChild(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a6d42_ScopeTree>& _76335_tree) {
	jule::Ptr<_1c004b5b8_scopeChecker> _76417_ssc = _1c0054b65_newChildChecker(_self_);;
	return _1c004d6a8_checkChildSc(_self_, _76335_tree,_76417_ssc);
}



inline void _1c004d91c_checkAnonScope(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a6d42_ScopeTree> _76838_tree) {
	jule::Ptr<_1c00487b3_Scope> _76917_s = _1c004d7da_checkChild(_self_, _76838_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_76917_s));;
}



inline void _1c004da4e_processErrorCall(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>& _77341_m, jule::Ptr<_1d675d511_Token> _77372_err) {
	if (_1c004c861_isDeferred(_self_)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c004b5b8_scopeChecker> _77817_root = _1c004c993_getRoot(_self_);;
	if ((!(_77817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _77372_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1c00674d5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77341_m.get()._field_Func=_77817_root.get()._field_owner;
}



inline void _1c004db81_checkExpr(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be39b045_Expr> _78633_expr) {
	jule::Ptr<_1c00ced00_Eval> _78717_eval = _1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0));;
	_78717_eval.get()._field_ignored=true;
	jule::Ptr<_1c00cd282_Data> _78917_d = _1c00eaab8_evalExpr(_78717_eval, _78633_expr);;
	if ((_78917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78917_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>>()) {
			_case_begin_1c280dd56:;
			{
				jule::Ptr<_1be45b248_BuiltinErrorCallExprModel> _79621_m = _78917_d.get()._field_Model.operator jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>();;
				_1c004da4e_processErrorCall(_self_, _79621_m,_78633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45be6e_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1be45a005_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1be45a995_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1be45b05b_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1be45c15b_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1be4580e1_FnCallExprModel>>()) {
			_case_begin_1c280e054:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_78917_d));;
			}
		}
		else {
			_case_begin_1c280dc13:;
			{
				_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _78633_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c280dbad:;
	};
}



inline void _1c004dcb3_checkCoExpr(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be39cb3a_CoExpr> _81535_expr) {
	jule::Ptr<_1c00ced00_Eval> _81617_eval = _1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0));;
	_81617_eval.get()._field_ignored=true;
	jule::Ptr<_1c00cd282_Data> _81817_d = _1c00eaab8_evalExpr(_81617_eval, _81535_expr.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _81817_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be4580e1_FnCallExprModel>>()) {
			_case_begin_1c2814433:;
			{
				jule::Ptr<_1be4580e1_FnCallExprModel> _82521_model = _81817_d.get()._field_Model.operator jule::Ptr<_1be4580e1_FnCallExprModel>();;
				if (_82521_model.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
					_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1c00674d5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_82521_model.get()._field_IsCo=true;
				_1c00e295b_checkFnOfConcurrentCall(_81617_eval.ptr(), _82521_model.get()._field_Func,_81535_expr.get()._field_Expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_81817_d));;
			}
		}
		else {
			_case_begin_1c28142ce:;
			{
				_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _81535_expr.get()._field_Token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c2814279:;
	};
}



inline jule::Ptr<_1c00489a0_If> _1c004dde5_checkIf(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3ac177_If> _83931_i) {
	jule::Ptr<_1c00487b3_Scope> _84017_s = _1c004d7da_checkChild(_self_, _83931_i.get()._field_Scope);;
	jule::Ptr<_1c00cd282_Data> _84217_d = _1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _83931_i.get()._field_Expr);;
	if ((_84217_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c010dceb_Prim> _84717_prim = _1c010b436_Prim(_84217_d.get()._field_Kind.ptr());;
	if (((_84717_prim == nullptr) || (!(_1c0111cbb_IsBool(_84717_prim.ptr()))))) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _83931_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1c00489a0_If>(_1c00489a0_If{._field_Expr=_84217_d.get()._field_Model, ._field_Scope=_84017_s});
}



inline jule::Ptr<_1c0048b8c_Else> _1c004e027_checkElse(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3ac52e_Else> _85933_e) {
	return jule::new_ptr<_1c0048b8c_Else>(_1c0048b8c_Else{._field_Scope=_1c004d7da_checkChild(_self_, _85933_e.get()._field_Scope)});
}



inline void _1c004e159_checkConditional(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3ac9a2_Conditional> _86540_conditional) {
	jule::Ptr<_1c0048d79_Conditional> _86617_c = jule::new_ptr<_1c0048d79_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_86617_c));;
	_86617_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1c00489a0_If>>::alloc(0LL,(_86540_conditional.get()._field_Tail.len() + 1LL));
	_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1c004dde5_checkIf(_self_, _86540_conditional.get()._field_Head));;
	{
		auto &expr = _86540_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1c281c66c:;
		if (it != expr.end()) {
			jule::Ptr<_1be3ac177_If> _87221_elif = *it;
			{
				_86617_c.get()._field_Elifs = jule::alloc_for_append(_86617_c.get()._field_Elifs,1);_86617_c.get()._field_Elifs.__push(_1c004dde5_checkIf(_self_, _87221_elif));;
			}
			_iter_next_1c281c66c:;
			++it;
			goto _iter_begin_1c281c66c;
		}
		_iter_end_1c281c66c:;
	};
	if ((_86540_conditional.get()._field_Default != nullptr)) {
		_86617_c.get()._field_Default=_1c004e027_checkElse(_self_, _86540_conditional.get()._field_Default);
	};
}



inline void _1c004e28b_checkIterScopeSsc(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Uintptr _88137_it, jule::Ptr<_1be3a6d42_ScopeTree> _88154_tree, jule::Ptr<_1c00487b3_Scope>& _88177_s, jule::Ptr<_1c004b5b8_scopeChecker> _88192_ssc) {
	_88192_ssc.get()._field_it=_88137_it;
	_1c004d576_checkChildSsc(_self_, _88154_tree,_88177_s,_88192_ssc);
}



inline jule::Ptr<_1c00487b3_Scope> _1c004e3bd_checkIterScopeSc(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Uintptr _88636_it, jule::Ptr<_1be3a6d42_ScopeTree> _88653_tree, jule::Ptr<_1c004b5b8_scopeChecker> _88675_ssc) {
	jule::Ptr<_1c00487b3_Scope> _88717_scope = _1c004d444_getChild(_self_.ptr());;
	_1c004e28b_checkIterScopeSsc(_self_, _88636_it,_88653_tree,_88717_scope,_88675_ssc);
	return _88717_scope;
}



inline jule::Ptr<_1c00487b3_Scope> _1c004e500_checkIterScope(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Uintptr _89234_it, jule::Ptr<_1be3a6d42_ScopeTree>& _89252_tree) {
	jule::Ptr<_1c004b5b8_scopeChecker> _89317_ssc = _1c0054b65_newChildChecker(_self_);;
	return _1c004e3bd_checkIterScopeSc(_self_, _89234_it,_89252_tree,_89317_ssc);
}



inline void _1c004e632_checkInfIter(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3aa32e_Iter>& _89737_it) {
	jule::Ptr<_1c0049066_InfIter> _89817_kind = jule::new_ptr<_1c0049066_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_89817_kind));;
	_89817_kind.get()._field_Scope=_1c004e500_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89817_kind)),_89737_it.get()._field_Scope);
}



inline void _1c004e764_checkWhileIter(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3aa32e_Iter>& _90339_it) {
	jule::Ptr<_1be3aab04_WhileKind> _90417_wh = _90339_it.get()._field_Kind.operator jule::Ptr<_1be3aab04_WhileKind>();;
	if (((_90417_wh.get()._field_Expr == nullptr) && (_90417_wh.get()._field_Next == nullptr))) {
		_1c004e632_checkInfIter(_self_, _90339_it);
		return;;
	};
	jule::Ptr<_1c0049253_WhileIter> _91017_kind = jule::new_ptr<_1c0049253_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_91017_kind));;
	_91017_kind.get()._field_Scope=_1c004e500_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91017_kind)),_90339_it.get()._field_Scope);
	if ((_90417_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1c00cd282_Data> _91521_d = _1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _90417_wh.get()._field_Expr);;
		if ((_91521_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1c010dceb_Prim> _92017_prim = _1c010b436_Prim(_91521_d.get()._field_Kind.ptr());;
		if ((_92017_prim == nullptr)) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1c0111cbb_IsBool(_92017_prim.ptr())))) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _90339_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_91017_kind.get()._field_Expr=_91521_d.get()._field_Model;
	};
	if (_1be3aae56_IsWhileNext(_90417_wh.ptr())) {
		if ((!(_1be504d91_isValidAstStForNextSt(_90417_wh.get()._field_Next)))) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _94017_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1c005369c_checkNode(_self_, _90417_wh.get()._field_Next);
		if ((_94017_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _94325_st = _self_.get()._field_scope.get()._field_Stmts[_94017_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_94017_n);
			if ((!(_1be4a6b9a_isValidStForNextSt(_94325_st)))) {
				_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _90417_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_91017_kind.get()._field_Next=_94325_st;
		};
	};
}



inline void _1c004e896_checkRangeIter(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3aa32e_Iter>& _95339_it) {
	jule::Ptr<_1be3ab495_RangeKind> _95417_rang = _95339_it.get()._field_Kind.operator jule::Ptr<_1be3ab495_RangeKind>();;
	jule::Ptr<_1c00cd282_Data> _95617_d = _1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _95417_rang.get()._field_Expr);;
	if ((_95617_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0049440_RangeIter> _96117_kind = jule::new_ptr<_1c0049440_RangeIter>(_1c0049440_RangeIter{._field_Expr=_95617_d, });;
	_1c00c4520_rangeChecker _96517_rc = _1c00c4520_rangeChecker{._field_sc=_self_, ._field_rang=_95417_rang, ._field_Kind=_96117_kind, ._field_d=_95617_d};;
	jule::Bool _97113_ok = _1c00c5dd4_check(&_96517_rc);;
	if ((!(_97113_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_96117_kind));;
	jule::Ptr<_1c004b5b8_scopeChecker> _97817_ssc = _1c0054b65_newChildChecker(_self_);;
	jule::Ptr<_1c00487b3_Scope> _97917_scope = _1c004d444_getChild(_self_.ptr());;
	if ((_96117_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1c0066a78_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c004d09d_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyA.get()._field_Ident))) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyA.get()._field_Ident)}));
			_1c00674d5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyA.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyA);;
	};
	if ((_96117_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1c0066a78_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c004d09d_isDuplicatedIdent(_self_.ptr(), 0LLU,_96117_kind.get()._field_KeyB.get()._field_Ident))) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _96117_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_96117_kind.get()._field_KeyB.get()._field_Ident)}));
			_1c00674d5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_96117_kind.get()._field_KeyB.get()._field_Scope=_97917_scope;
		_97817_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_97817_ssc.get()._field_table.get()._field_Vars,1);_97817_ssc.get()._field_table.get()._field_Vars.__push(_96117_kind.get()._field_KeyB);;
	};
	_1c004e28b_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96117_kind)),_95339_it.get()._field_Scope,_97917_scope,_97817_ssc);
	_96117_kind.get()._field_Scope=_97917_scope;
}



inline void _1c004e9c8_checkIter(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3aa32e_Iter> _100333_it) {
	if (_1be3aa681_IsInf(_100333_it.ptr())) {
		_1c004e632_checkInfIter(_self_, _100333_it);
		return;;
	};
	{
		auto &_match_expr{ _100333_it.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3aab04_WhileKind>>()) {
			_case_begin_1c283a723:;
			{
				_1c004e764_checkWhileIter(_self_, _100333_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3ab495_RangeKind>>()) {
			_case_begin_1c2839b84:;
			{
				_1c004e896_checkRangeIter(_self_, _100333_it);
			}
		}
		else {
			_case_begin_1c2839a52:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1c283a1b2:;
	};
}



inline jule::Bool _1c004eb0a_checkValidContLabel(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Uintptr _101939_it) {
	jule::Ptr<_1c004b5b8_scopeChecker> _102017_scope = _self_;;
	_julec_label_iter:;
	if ((_102017_scope.get()._field_it == _101939_it)) {
		return true;
	};
	if ((_102017_scope.get()._field_parent != nullptr)) {
		_102017_scope=_102017_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1c004ec3c_checkValidBreakLabel(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Uintptr _103540_ptr) {
	jule::Ptr<_1c004b5b8_scopeChecker> _103617_scope = _self_;;
	_julec_label_iter:;
	if ((_103617_scope.get()._field_it == _103540_ptr)) {
		return true;
	};
	if ((_103617_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _104417_mtch = static_cast<jule::Uintptr>(((_1c004a9e6_Case*)(_103617_scope.get()._field_cse))->_field_Owner);;
		if ((_104417_mtch == _103540_ptr)) {
			return true;
		};
	};
	if ((_103617_scope.get()._field_parent != nullptr)) {
		_103617_scope=_103617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1c004962c_ContSt> _1c004ed6e_checkContValidScope(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3abc04_ContSt> _105839_c) {
	if (_1c004c861_isDeferred(_self_)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_105839_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1c004962c_ContSt>();
	};
	jule::Ptr<_1c004b5b8_scopeChecker> _106817_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_106817_scope.get()._field_it == 0LLU) && (_106817_scope.get()._field_parent != nullptr)) && (_106817_scope.get()._field_owner == nullptr))) {
			_case_begin_1c2842d24:;
			{
				_106817_scope=_106817_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_106817_scope.get()._field_it != 0LLU)) {
			_case_begin_1c2842d9b:;
			{
				return jule::new_ptr<_1c004962c_ContSt>(_1c004962c_ContSt{._field_It=_106817_scope.get()._field_it});
			}
		}
		_match_end_1c2842c9c:;
	};
	_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _105839_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1c004eea1_checkCont(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3abc04_ContSt> _108229_c) {
	jule::Ptr<_1c004962c_ContSt> _108317_cont = _1c004ed6e_checkContValidScope(_self_, _108229_c);;
	if ((_108317_cont == nullptr)) {
		return;;
	};
	if ((_108229_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1c004b1de_scopeLabel> _108921_label = _1be4e55ce_findLabelParent(_108229_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_108921_label == nullptr)) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		_108921_label.get()._field_used=true;
		if (((_108921_label.get()._field_pos + 1LL) >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
			return;;
		};
		jule::I64 _110217_i = (_108921_label.get()._field_pos + 1LL);;
		if ((_110217_i >= _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _110625_st = _108921_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_110217_i];;
			{
				auto &_match_expr{ _110625_st };
				
				if (_match_expr.type_is<jule::Ptr<_1c0049066_InfIter>>()) {
					_case_begin_1c2848742:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1c0049066_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1c0049440_RangeIter>>()) {
					_case_begin_1c284b7cd:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1c0049440_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1c0049253_WhileIter>>()) {
					_case_begin_1c284b844:;
					{
						_108317_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_110625_st.operator jule::Ptr<_1c0049253_WhileIter>()));
					}
				}
				else {
					_case_begin_1c284b679:;
					{
						_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
					}
				}
				_match_end_1c284b59c:;
			};
		};
	};
	if ((_108317_cont.get()._field_It != 0LLU)) {
		if ((!(_1c004eb0a_checkValidContLabel(_self_, _108317_cont.get()._field_It)))) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _108229_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_108229_c.get()._field_Label.get()._field_Kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_108317_cont));;
}



inline void _1c00500d3_checkLabel(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a44b0_LabelSt> _112934_l) {
	if ((_1c004cc07_findLabel(_self_.ptr(), _112934_l.get()._field_Ident) != nullptr)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _112934_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_112934_l.get()._field_Ident)}));
		return;;
	};
	jule::Ptr<_1c0049a06_Label> _113517_label = jule::new_ptr<_1c0049a06_Label>(_1c0049a06_Label{._field_Ident=_112934_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_113517_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1c004b1de_scopeLabel>>::make({jule::new_ptr<_1c004b1de_scopeLabel>(_1c004b1de_scopeLabel{._field_token=_112934_l.get()._field_Token, ._field_label=_113517_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1c0050215_pushGoto(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a4867_GotoSt> _114832_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1c0049be3_GotoSt>(_1c0049be3_GotoSt{._field_Ident=_114832_gt.get()._field_Label.get()._field_Kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1c004b3cb_scopeGoto>>::make({jule::new_ptr<_1c004b3cb_scopeGoto>(_1c004b3cb_scopeGoto{._field_gt=_114832_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1c0050347_checkPostfix(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a579c_AssignSt> _116036_a) {
	if ((_116036_a.get()._field_Left.len() > 1LL)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1be39b045_Expr> _116617_expr = _116036_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1c00cd282_Data> _116717_d = _1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _116617_expr);;
	if ((_116717_d == nullptr)) {
		return;;
	};
	_1be509725_checkAssign(_self_.get()._field_s,_116717_d,nullptr,_116036_a.get()._field_Setter);
	if ((_1c010b90e_Ptr(_116717_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c0115ae4_Ptr> _117521_ptr = _1c010b90e_Ptr(_116717_d.get()._field_Kind.ptr());;
		if (_1c01165b7_IsUnsafe(_117521_ptr.ptr())) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1c0109720_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1c010b436_Prim(_116717_d.get()._field_Kind.ptr()) == nullptr) || (!(_1c0048373_IsNum(_1c010b436_Prim(_116717_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _116036_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_116036_a.get()._field_Setter.get()._field_Kind),jule::Any(_1c0109720_Str(_116717_d.get()._field_Kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1c0049dd0_Postfix>(_1c0049dd0_Postfix{._field_Expr=_116717_d.get()._field_Model, ._field_Op=_116036_a.get()._field_Setter.get()._field_Kind})));;
}



inline jule::Bool _1c0050479_isNewAssignIdent(_1c004b5b8_scopeChecker* _self_, jule::Str _119335_ident) {
	if ((_1d6760ca5_IsIgnoreIdent(_119335_ident) || _119335_ident.empty())) {
		return false;
	};
	return (_1c00cb5c1_defByIdent((*_self_)._field_table.ptr(), _119335_ident,false) == nullptr);
}



inline jule::Bool _1c00505ab_checkStructureAssignOp(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3b359b_StructIns>& _120047_s, jule::Ptr<_1be3a579c_AssignSt>& _120067_a, jule::Ptr<_1c00cd282_Data>& _120086_r) {
	jule::Ptr<_1be462392_FnIns> _120317_overload = nullptr;;
	{
		auto &_match_expr{ _120067_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1c285e3d4:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1c285e44a:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1c286035d:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1c28603c4:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1c286043a:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1c28604a1:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1c2860517:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1c28605d3:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1c2860649:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1c28606b0:;
			{
				_120317_overload=_120047_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1c285e2a2:;
			{
				_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1be388e34_Str(_120047_s.ptr()))}));
				return false;
			}
		}
		_match_end_1c285e1e7:;
	};
	if ((_120317_overload == nullptr)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _120067_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_120067_a.get()._field_Setter.get()._field_Kind),jule::Any(_1be388e34_Str(_120047_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1be4614c3_ParamIns> _123517_p = _120317_overload.get()._field_Params[1LL];;
	return _1c006d178_checkAssignType(_self_.get()._field_s, _123517_p.get()._field_Decl.get()._field_Reference,_123517_p.get()._field_Kind,_120086_r,_120067_a.get()._field_Setter);
}



inline void _1c00506dd_checkSingleAssign(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a579c_AssignSt>& _123942_a) {
	jule::Ptr<_1c00cd282_Data> _124017_l = nullptr;;
	if ((!(_1d6760ca5_IsIgnoreIdent(_123942_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1be39b045_Expr> _124321_expr = _123942_a.get()._field_Left[0LL].get()._field_Expr;;
		_124017_l=_1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _124321_expr);
		if ((_124017_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c00ced00_Eval> _125017_eval = nullptr;;
	if ((_124017_l != nullptr)) {
		_125017_eval=_1c006c870_evalp(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0),_124017_l.get()._field_Kind);
	} else {
		_125017_eval=_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0));
	};
	_125017_eval.get()._field_unsafety=_1c004c388_isUnsafe(_self_);
	jule::Ptr<_1c00cd282_Data> _125717_r = _1c00eaab8_evalExpr(_125017_eval, _123942_a.get()._field_Right);;
	if ((_125717_r == nullptr)) {
		return;;
	};
	if ((_124017_l == nullptr)) {
		if (_1c010a4ac_Void(_125717_r.get()._field_Kind.ptr())) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_125717_r));;
		return;;
	};
	if ((!(_1be509725_checkAssign(_self_.get()._field_s,_124017_l,_125717_r,_123942_a.get()._field_Setter)))) {
		return;;
	};
	if ((_1c010d0c5_Tup(_125717_r.get()._field_Kind.ptr()) != nullptr)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _123942_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1be457277_OperandExprModel> _127917_lm = jule::new_ptr<_1be457277_OperandExprModel>(_1be457277_OperandExprModel{._field_Kind=_124017_l.get()._field_Kind, ._field_Model=_124017_l.get()._field_Model});;
	jule::Ptr<_1be457277_OperandExprModel> _128317_rm = jule::new_ptr<_1be457277_OperandExprModel>(_1be457277_OperandExprModel{._field_Kind=_125717_r.get()._field_Kind, ._field_Model=_125717_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1c004a0bc_Assign>(_1c004a0bc_Assign{._field_L=_127917_lm, ._field_R=_128317_rm, ._field_Op=_123942_a.get()._field_Setter})));;
	if ((_123942_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_1be3b359b_StructIns> _129021_strct = _1c010c888_Struct(_124017_l.get()._field_Kind.ptr());;
		if ((_129021_strct != nullptr)) {
			_1c00505ab_checkStructureAssignOp(_self_, _129021_strct,_123942_a,_125717_r);
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind=_123942_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_123942_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1c00eccc9_binaryEval _129721_solver = static__1c00ed6d1_new(_125017_eval,_123942_a.get()._field_Setter);;
		_125717_r=_1c0103362_solveExplicit(&_129721_solver, _124017_l,_125717_r);
		if ((_125717_r == nullptr)) {
			return;;
		};
		_123942_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1c00b8d1c_assignTypeChecker _130617_checker = _1c00b8d1c_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_124017_l.get()._field_Kind, ._field_d=_125717_r, ._field_errorToken=_123942_a.get()._field_Setter};;
	if (_1c00b9e94_check(&_130617_checker)) {
		_128317_rm.get()._field_Model=_125717_r.get()._field_Model;
		_127917_lm.get()._field_Model=_124017_l.get()._field_Model;
	};
}



inline void _1c0050820_processEndPartOfMultiAssign(_1c004b5b8_scopeChecker* _self_, jule::Ptr<_1c004a2a9_MultiAssign> _131850_st, jule::Ptr<_1be3a579c_AssignSt> _131913_a, jule::Ptr<_1be3a525d_AssignLeft> _131931_lexpr, jule::Ptr<_1c00cd282_Data> _131955_l, jule::Ptr<_1c00cd282_Data> _131969_r) {
	if (_1d6760ca5_IsIgnoreIdent(_131931_lexpr.get()._field_Ident)) {
		if (_1c010a4ac_Void(_131969_r.get()._field_Kind.ptr())) {
			_1c00671b6_pushErr((*_self_)._field_s.ptr(), _131913_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_131913_a.get()._field_Declarative && _1c0050479_isNewAssignIdent(&(*_self_), _131931_lexpr.get()._field_Ident))) {
		if (_1c004d09d_isDuplicatedIdent(&(*_self_), 0LLU,_131931_lexpr.get()._field_Ident)) {
			_1c00671b6_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
			_1c00674d5_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1c004c5ec_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1c0081334_Var> _133721_v = jule::new_ptr<_1c0081334_Var>(_1c0081334_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_131931_lexpr.get()._field_Token, ._field_Ident=_131931_lexpr.get()._field_Ident, ._field_Mutable=_131931_lexpr.get()._field_Mutable, ._field_Reference=_131931_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1c00ce30a_Value>(_1c00ce30a_Value{._field_Expr=_131913_a.get()._field_Right, ._field_Data=_131969_r}), });;
		_1c0078a79_checkVar((*_self_)._field_s, _133721_v);
		_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(static_cast<jule::Any>(_133721_v));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_133721_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_133721_v));;
		return;;
	};
	if ((_131931_lexpr.get()._field_Mutable || _131931_lexpr.get()._field_Reference)) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _131931_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_131931_lexpr.get()._field_Ident)}));
		_1c00674d5_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1be509725_checkAssign((*_self_)._field_s,_131955_l,_131969_r,_131913_a.get()._field_Setter)))) {
		return;;
	};
	;
	_1c0070db2_checkValidityForInitExpr((*_self_)._field_s, _131955_l.get()._field_Mutable,false,_131955_l.get()._field_Kind,_131969_r,_131913_a.get()._field_Setter);
	_1c00b8d1c_assignTypeChecker _137217_checker = _1c00b8d1c_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_131955_l.get()._field_Kind, ._field_d=_131969_r, ._field_errorToken=_131913_a.get()._field_Setter};;
	_1c00b9e94_check(&_137217_checker);
	_131850_st.get()._field_L = jule::alloc_for_append(_131850_st.get()._field_L,1);_131850_st.get()._field_L.__push(_131955_l.get()._field_Model);;
}



inline void _1c0050952_checkRetMultiAssign(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a579c_AssignSt>& _138344_a) {
	jule::Ptr<_1c00cd282_Data> _138417_rd = _1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _138344_a.get()._field_Right);;
	if ((_138417_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c00cd282_Data>> _138917_r = _1be505215_getDatasFromTupleData(_138417_rd);;
	{
		
		if ((_138344_a.get()._field_Left.len() > _138917_r.len())) {
			_case_begin_1c2880603:;
			{
				_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_138344_a.get()._field_Left.len() < _138917_r.len())) {
			_case_begin_1c288067a:;
			{
				_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _138344_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c287ecc8:;
	};
	jule::Ptr<_1c004a2a9_MultiAssign> _140017_st = jule::new_ptr<_1c004a2a9_MultiAssign>(_1c004a2a9_MultiAssign{._field_R=_138417_rd.get()._field_Model});;
	if ((_1c010d0c5_Tup(_138417_rd.get()._field_Kind.ptr()) == nullptr)) {
		_140017_st.get()._field_R=static_cast<jule::Any>(jule::new_ptr<_1be459d18_TupleExprModel>(_1be459d18_TupleExprModel{._field_Datas=_138917_r}));
	};
	{
		auto &expr = _138344_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1c288334d:;
		if (it != expr.end()) {
			jule::I64 _140813_i = it - expr.begin();
			{
				jule::Ptr<_1be3a525d_AssignLeft> _140921_lexpr = _138344_a.get()._field_Left[_140813_i];;
				jule::Ptr<_1c00cd282_Data> _141021_l = nullptr;;
				if (((!(_1d6760ca5_IsIgnoreIdent(_140921_lexpr.get()._field_Ident))) && ((!(_138344_a.get()._field_Declarative)) || (!(_1c0050479_isNewAssignIdent(_self_.ptr(), _140921_lexpr.get()._field_Ident)))))) {
					_141021_l=_1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _140921_lexpr.get()._field_Expr);
					if ((_141021_l == nullptr)) {
						goto _iter_next_1c288334d;
					};
				};
				_1c0050820_processEndPartOfMultiAssign(_self_.ptr(), _140017_st,_138344_a,_140921_lexpr,_141021_l,_138917_r[_140813_i]);
			}
			_iter_next_1c288334d:;
			++it;
			_140813_i++;
			goto _iter_begin_1c288334d;
		}
		_iter_end_1c288334d:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_140017_st));;
}



inline void _1c0050a84_checkMultiAssign(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a579c_AssignSt>& _142641_a) {
	{
		auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3a0313_FnCallExpr>>()) {
			_case_begin_1c28874ea:;
			{
				_1c0050952_checkRetMultiAssign(_self_, _142641_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39c783_UnsafeExpr>>()) {
			_case_begin_1c2887572:;
			{
				{
					auto &_match_expr{ _142641_a.get()._field_Right.get()._field_Kind.operator jule::Ptr<_1be39c783_UnsafeExpr>().get()._field_Expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1be3a0313_FnCallExpr>>()) {
						_case_begin_1c2888870:;
						{
							_1c0050952_checkRetMultiAssign(_self_, _142641_a);
							return;;
						}
					}
					_match_end_1c28887e8:;
				};
			}
		}
		_match_end_1c2886ce1:;
	};
	jule::Slice<jule::Any> _143917_right = _1be50815d_getExprModels(_142641_a.get()._field_Right.get()._field_Kind);;
	{
		
		if ((_142641_a.get()._field_Left.len() > _143917_right.len())) {
			_case_begin_1c2889695:;
			{
				_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_142641_a.get()._field_Left.len() < _143917_right.len())) {
			_case_begin_1c288971c:;
			{
				_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _142641_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c2889552:;
	};
	jule::Ptr<_1be459d18_TupleExprModel> _145017_rightTuple = jule::new_ptr<_1be459d18_TupleExprModel>();;
	jule::Ptr<_1c004a2a9_MultiAssign> _145217_st = jule::new_ptr<_1c004a2a9_MultiAssign>(_1c004a2a9_MultiAssign{._field_R=static_cast<jule::Any>(_145017_rightTuple)});;
	{
		auto &expr = _142641_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1c288bee4:;
		if (it != expr.end()) {
			jule::I64 _145613_i = it - expr.begin();
			{
				jule::Ptr<_1be3a525d_AssignLeft> _145721_lexpr = _142641_a.get()._field_Left[_145613_i];;
				jule::Ptr<_1c00cd282_Data> _145821_l = nullptr;;
				if (((!(_1d6760ca5_IsIgnoreIdent(_145721_lexpr.get()._field_Ident))) && ((!(_142641_a.get()._field_Declarative)) || (!(_1c0050479_isNewAssignIdent(_self_.ptr(), _145721_lexpr.get()._field_Ident)))))) {
					_145821_l=_1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _145721_lexpr.get()._field_Expr);
					if ((_145821_l == nullptr)) {
						goto _iter_next_1c288bee4;
					};
				};
				jule::Ptr<_1be39b045_Expr> _146821_expr = jule::new_ptr<_1be39b045_Expr>(_1be39b045_Expr{._field_Token=_142641_a.get()._field_Right.get()._field_Token, ._field_Kind=_143917_right[_145613_i]});;
				jule::Ptr<_1c00ced00_Eval> _147221_eval = nullptr;;
				if ((_145821_l != nullptr)) {
					_147221_eval=_1c006c870_evalp(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0),_145821_l.get()._field_Kind);
				} else {
					_147221_eval=_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0));
				};
				jule::Ptr<_1c00cd282_Data> _147821_r = _1c00eaab8_evalExpr(_147221_eval, _146821_expr);;
				if ((_147821_r == nullptr)) {
					goto _iter_next_1c288bee4;
				};
				_145017_rightTuple.get()._field_Datas = jule::alloc_for_append(_145017_rightTuple.get()._field_Datas,1);_145017_rightTuple.get()._field_Datas.__push(_147821_r);;
				_1c0050820_processEndPartOfMultiAssign(_self_.ptr(), _145217_st,_142641_a,_145721_lexpr,_145821_l,_147821_r);
			}
			_iter_next_1c288bee4:;
			++it;
			_145613_i++;
			goto _iter_begin_1c288bee4;
		}
		_iter_end_1c288bee4:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_145217_st));;
}



inline void _1c0050bb6_checkAssignSt(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a579c_AssignSt> _149137_a) {
	{
		
		if (_1d6762d51_IsPostfixOp(_149137_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1c2893c87:;
			{
				_1c0050347_checkPostfix(_self_, _149137_a);
			}
		}
		else if (((_149137_a.get()._field_Left.len() == 1LL) && (!(_149137_a.get()._field_Declarative)))) {
			_case_begin_1c2893957:;
			{
				_1c00506dd_checkSingleAssign(_self_, _149137_a);
			}
		}
		else {
			_case_begin_1c28938e1:;
			{
				_1c0050a84_checkMultiAssign(_self_, _149137_a);
			}
		}
		_match_end_1c2893380:;
	};
}



inline jule::Ptr<_1c00487b3_Scope> _1c0050ce8_checkCaseScope(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1c004a9e6_Case>& _150235_c, jule::Ptr<_1be3a6d42_ScopeTree>& _150250_tree) {
	jule::Ptr<_1c004b5b8_scopeChecker> _150317_ssc = _1c0054b65_newChildChecker(_self_);;
	_150317_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150235_c));
	return _1c004d6a8_checkChildSc(_self_, _150250_tree,_150317_ssc);
}



inline jule::Ptr<_1c004a9e6_Case> _1c0050e2a_checkCase(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1c004a496_Match> _150833_m, jule::I64 _150844_i, jule::Ptr<_1be3ad5eb_Case> _150856_c, jule::Ptr<_1c00cd282_Data> _150875_expr) {
	jule::Ptr<_1c004a9e6_Case> _150917_case = _150833_m.get()._field_Cases[_150844_i];;
	_150917_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1c00cd282_Data>>::alloc(0LL,_150856_c.get()._field_Exprs.len());
	jule::Bool _151117_genericMatched = false;;
	jule::Ptr<_1c00ced00_Eval> _151217_eval = _1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0));;
	{
		auto &expr = _150856_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c2898c37:;
		if (it != expr.end()) {
			jule::Ptr<_1be39b045_Expr> _151321_e = *it;
			{
				jule::Ptr<_1c00cd282_Data> _151421_d = _1c00ea49c_evalExprKind(_151217_eval, _151321_e.get()._field_Kind);;
				if ((_151421_d == nullptr)) {
					goto _iter_next_1c2898c37;
				};
				if (_150833_m.get()._field_TypeMatch) {
					_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
					if ((_1be4e745a_countMatchType(_150833_m,_151421_d.get()._field_Kind) > 1LL)) {
						_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_151421_d.get()._field_Kind.ptr()))}));
					};
					if (_150875_expr.get()._field_Kind.get()._field_Generic) {
						_151117_genericMatched=(_151117_genericMatched || _1c0109a2d_Equals(_150875_expr.get()._field_Kind, _151421_d.get()._field_Kind));
					} else {
						if ((_1c010bdd7_TypeEnum(_150875_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1c006d5c9_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
						} else {
							jule::Ptr<_1be47159e_Trait> _152929_trt = _1c010caec_Trait(_150875_expr.get()._field_Kind.ptr());;
							if ((_152929_trt != nullptr)) {
								_1c006d5c9_checkTypeCompatibility(_self_.get()._field_s, _150875_expr.get()._field_Kind,_151421_d.get()._field_Kind,_151321_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1c2898c37;
				};
				if (_151421_d.get()._field_Decl) {
					_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _151321_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1c00674d5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1c2898c37;
				};
				_150917_case.get()._field_Exprs = jule::alloc_for_append(_150917_case.get()._field_Exprs,1);_150917_case.get()._field_Exprs.__push(_151421_d);;
				_1c00b8d1c_assignTypeChecker _154721_checker = _1c00b8d1c_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_150875_expr.get()._field_Kind, ._field_d=_151421_d, ._field_errorToken=_151321_e.get()._field_Token};;
				_1c00b9e94_check(&_154721_checker);
			}
			_iter_next_1c2898c37:;
			++it;
			goto _iter_begin_1c2898c37;
		}
		_iter_end_1c2898c37:;
	};
	if ((((!(_150833_m.get()._field_TypeMatch)) || (!(_150875_expr.get()._field_Kind.get()._field_Generic))) || _151117_genericMatched)) {
		_150917_case.get()._field_Scope=_1c0050ce8_checkCaseScope(_self_, _150917_case,_150856_c.get()._field_Scope);
	};
	return _150917_case;
}



inline void _1c005114a_checkCases(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3adcc2_MatchCase>& _156135_m, jule::Ptr<_1c004a496_Match> _156154_rm, jule::Ptr<_1c00cd282_Data> _156170_expr) {
	_156154_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1c004a9e6_Case>>::alloc(0LL,_156135_m.get()._field_Cases.len());
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c28a256a:;
		if (it != expr.end()) {
			jule::I64 _156313_i = it - expr.begin();
			{
				jule::Ptr<_1c004a9e6_Case> _156421_case = jule::new_ptr<_1c004a9e6_Case>(_1c004a9e6_Case{._field_Owner=_156154_rm, });;
				if ((_156313_i > 0LL)) {
					_156154_rm.get()._field_Cases[(_156313_i - 1LL)].get()._field_Next=_156421_case;
				};
				_156154_rm.get()._field_Cases = jule::alloc_for_append(_156154_rm.get()._field_Cases,1);_156154_rm.get()._field_Cases.__push(_156421_case);;
			}
			_iter_next_1c28a256a:;
			++it;
			_156313_i++;
			goto _iter_begin_1c28a256a;
		}
		_iter_end_1c28a256a:;
	};
	if (((_156154_rm.get()._field_Default != nullptr) && (_156135_m.get()._field_Cases.len() > 0LL))) {
		_156154_rm.get()._field_Cases[(_156154_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_156154_rm.get()._field_Default;
	};
	{
		auto &expr = _156135_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c28a5ae0:;
		if (it != expr.end()) {
			jule::I64 _157714_i = it - expr.begin();
			jule::Ptr<_1be3ad5eb_Case> _157721_c = *it;
			{
				_1c0050e2a_checkCase(_self_, _156154_rm,_157714_i,_157721_c,_156170_expr);
			}
			_iter_next_1c28a5ae0:;
			++it;
			_157714_i++;
			goto _iter_begin_1c28a5ae0;
		}
		_iter_end_1c28a5ae0:;
	};
}



inline jule::Ptr<_1c004a9e6_Case> _1c0051502_checkDefault(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1c004a496_Match> _158236_m, jule::Ptr<_1be3ac52e_Else> _158251_d) {
	jule::Ptr<_1c004a9e6_Case> _158317_def = jule::new_ptr<_1c004a9e6_Case>(_1c004a9e6_Case{._field_Owner=_158236_m, });;
	_158317_def.get()._field_Scope=_1c0050ce8_checkCaseScope(_self_, _158317_def,_158251_d.get()._field_Scope);
	return _158317_def;
}



inline void _1c0051777_checkComptimePanic(_1c004b5b8_scopeChecker* _self_, jule::Ptr<_1c00487b3_Scope>& _159038_s) {
	if ((_159038_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159513_stmt = _159038_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _159513_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1c00cd282_Data>>()) {
			_case_begin_1c28a8e01:;
			{
				jule::Ptr<_1c00cd282_Data> _159817_d = _159513_stmt.operator jule::Ptr<_1c00cd282_Data>();;
				{
					auto &_match_expr{ _159817_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>>()) {
						_case_begin_1c28a9c37:;
						{
							jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel> _160121_m = _159817_d.get()._field_Model.operator jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _160121_m.get()._field_Expr };
								
								if (_match_expr.type_is<jule::Ptr<_1be3e8c63_Const>>()) {
									_case_begin_1c28aac27:;
									{
										jule::Ptr<_1be3e8c63_Const> _160425_c = _160121_m.get()._field_Expr.operator jule::Ptr<_1be3e8c63_Const>();;
										if (_1be4529c0_IsStr(_160425_c.ptr())) {
											_1c00671b6_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1be450627_ReadStr(_160425_c.ptr()))}));
										};
									}
								}
								_match_end_1c28aab7d:;
							};
						}
					}
					_match_end_1c28a9ae4:;
				};
			}
		}
		_match_end_1c28a8d9b:;
	};
}



inline void _1c0051a96_pushTypeMatch(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1c004a496_Match> _161337_tm, jule::Ptr<_1be3adcc2_MatchCase>& _161354_m) {
	if (_161337_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _161337_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1c28aa1dd:;
			if (it != expr.end()) {
				jule::Ptr<_1c004a9e6_Case> _161725_c = *it;
				{
					if ((_161725_c.get()._field_Scope != nullptr)) {
						_1c0051777_checkComptimePanic(_self_.ptr(), _161725_c.get()._field_Scope);
						_161337_tm.get()._field_Default=_161725_c;
						_161337_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1c28aa1dd:;
				++it;
				goto _iter_begin_1c28aa1dd;
			}
			_iter_end_1c28aa1dd:;
		};
		if ((_161354_m.get()._field_Default != nullptr)) {
			_161337_tm.get()._field_Cases=nullptr;
			_161337_tm.get()._field_Default=_1c0051502_checkDefault(_self_, _161337_tm,_161354_m.get()._field_Default);
			if ((_161337_tm.get()._field_Default != nullptr)) {
				_1c0051777_checkComptimePanic(_self_.ptr(), _161337_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_161337_tm));;
}



inline void _1c0051d1b_checkTypeMatch(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3adcc2_MatchCase>& _163739_m) {
	jule::Ptr<_1c00cd282_Data> _163817_d = _1c00ea7aa_eval(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _163739_m.get()._field_Expr);;
	if ((_163817_d == nullptr)) {
		return;;
	};
	if (((!(_163817_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1c010b436_Prim(_163817_d.get()._field_Kind.ptr()) != nullptr) && _1c0112294_IsAny(_1c010b436_Prim(_163817_d.get()._field_Kind.ptr()).ptr())) || (_1c010caec_Trait(_163817_d.get()._field_Kind.ptr()) != nullptr)) || (_1c010bdd7_TypeEnum(_163817_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _163739_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c004a496_Match> _164917_tm = jule::new_ptr<_1c004a496_Match>(_1c004a496_Match{._field_Expr=_163817_d, ._field_TypeMatch=true, });;
	if (((!(_164917_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_163739_m.get()._field_Default != nullptr))) {
		_164917_tm.get()._field_Default=_1c0051502_checkDefault(_self_, _164917_tm,_163739_m.get()._field_Default);
	};
	_1c005114a_checkCases(_self_, _163739_m,_164917_tm,_163817_d);
	_1c0051a96_pushTypeMatch(_self_, _164917_tm,_163739_m);
}



inline void _1c0052091_checkCommonMatch(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3adcc2_MatchCase>& _166241_m) {
	jule::Ptr<_1c00cd282_Data> _166317_d = nullptr;;
	if ((_166241_m.get()._field_Expr == nullptr)) {
		_166317_d=jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1be44e0a4_NewBool(true)});
		_166317_d.get()._field_Model=static_cast<jule::Any>(_166317_d.get()._field_Constant);
	} else {
		_166317_d=_1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _166241_m.get()._field_Expr);
		if ((_166317_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c004a496_Match> _167717_mc = jule::new_ptr<_1c004a496_Match>(_1c004a496_Match{._field_Expr=_166317_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_167717_mc));;
	if ((_166241_m.get()._field_Default != nullptr)) {
		_167717_mc.get()._field_Default=_1c0051502_checkDefault(_self_, _167717_mc,_166241_m.get()._field_Default);
	};
	_1c005114a_checkCases(_self_, _166241_m,_167717_mc,_166317_d);
}



inline void _1c0052316_checkMatch(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3adcc2_MatchCase> _168934_m) {
	if (_168934_m.get()._field_TypeMatch) {
		_1c0051d1b_checkTypeMatch(_self_, _168934_m);
		return;;
	};
	_1c0052091_checkCommonMatch(_self_, _168934_m);
}



inline void _1c005258b_checkFall(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a4b53_FallSt> _169729_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1c004c861_isDeferred(_self_))) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1c004a9e6_Case* _170517_case = ((_1c004a9e6_Case*)(_self_.get()._field_cse));;
	if ((_170517_case->_field_Next == nullptr)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _169729_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1c00674d5_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(jule::new_ptr<_1c004ad15_FallSt>(_1c004ad15_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170517_case->_field_Next))})));;
}



inline jule::Ptr<_1c0049819_BreakSt> _1c0052899_checkBreakWithLabel(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3ab84c_BreakSt> _171739_b) {
	jule::Ptr<_1c0049819_BreakSt> _171817_brk = _1c0052ba7_checkPlainBreak(_self_, _171739_b);;
	if ((_171817_brk == nullptr)) {
		return nullptr;
	};
	_171817_brk.get()._field_It=0LLU;
	_171817_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1c004b1de_scopeLabel> _172817_label = _1be4e55ce_findLabelParent(_171739_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_172817_label == nullptr)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	_172817_label.get()._field_used=true;
	if (((_172817_label.get()._field_pos + 1LL) >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		return nullptr;
	};
	jule::I64 _174113_i = (_172817_label.get()._field_pos + 1LL);;
	if ((_174113_i >= _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
	} else {
		jule::Any _174521_st = _172817_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_174113_i];;
		{
			auto &_match_expr{ _174521_st };
			
			if (_match_expr.type_is<jule::Ptr<_1c0049066_InfIter>>()) {
				_case_begin_1c28c401a:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1c0049066_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c0049440_RangeIter>>()) {
				_case_begin_1c28c756d:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1c0049440_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c0049253_WhileIter>>()) {
				_case_begin_1c28c75d4:;
				{
					_171817_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1c0049253_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1c004a496_Match>>()) {
				_case_begin_1c28c764a:;
				{
					_171817_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174521_st.operator jule::Ptr<_1c004a496_Match>()));
				}
			}
			else {
				_case_begin_1c28c7419:;
				{
					_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
				}
			}
			_match_end_1c28c733c:;
		};
	};
	if ((_171817_brk.get()._field_It != 0LLU)) {
		if ((!(_1c004ec3c_checkValidBreakLabel(_self_, _171817_brk.get()._field_It)))) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	if ((_171817_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1c004ec3c_checkValidBreakLabel(_self_, _171817_brk.get()._field_Mtch)))) {
			_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _171739_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_171739_b.get()._field_Label.get()._field_Kind)}));
		};
	};
	return _171817_brk;
}



inline jule::Ptr<_1c0049819_BreakSt> _1c0052ba7_checkPlainBreak(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3ab84c_BreakSt> _177535_b) {
	if (_1c004c861_isDeferred(_self_)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c004b5b8_scopeChecker> _178117_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_178117_scope.get()._field_it == 0LLU) && (_178117_scope.get()._field_cse == 0LLU)) && (_178117_scope.get()._field_parent != nullptr)) && (_178117_scope.get()._field_owner == nullptr))) {
			_case_begin_1c28cd8e8:;
			{
				_178117_scope=_178117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_178117_scope.get()._field_it != 0LLU)) {
			_case_begin_1c28cd970:;
			{
				return jule::new_ptr<_1c0049819_BreakSt>(_1c0049819_BreakSt{._field_It=_178117_scope.get()._field_it, });
			}
		}
		else if ((_178117_scope.get()._field_cse != 0LLU)) {
			_case_begin_1c28cd9e7:;
			{
				return jule::new_ptr<_1c0049819_BreakSt>(_1c0049819_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1c004a9e6_Case*)(_178117_scope.get()._field_cse))->_field_Owner))});
			}
		}
		_match_end_1c28cd82c:;
	};
	_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _177535_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1c0052e2c_checkBreak(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3ab84c_BreakSt> _179730_b) {
	if ((_179730_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1c0049819_BreakSt> _179921_brk = _1c0052899_checkBreakWithLabel(_self_, _179730_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_179921_brk));;
		return;;
	};
	jule::Ptr<_1c0049819_BreakSt> _180417_brk = _1c0052ba7_checkPlainBreak(_self_, _179730_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_180417_brk));;
}



inline void _1c00531a2_checkRet(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a9bbe_RetSt> _180832_r) {
	if (_1c004c861_isDeferred(_self_)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _180832_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c004b002_RetSt> _181317_rt = jule::new_ptr<_1c004b002_RetSt>(_1c004b002_RetSt{._field_Func=_1c004c993_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_181317_rt));;
	jule::Ptr<_1c00c6676_retTypeChecker> _181817_rtc = jule::new_ptr<_1c00c6676_retTypeChecker>(_1c00c6676_retTypeChecker{._field_sc=_self_, ._field_f=_181317_rt.get()._field_Func, ._field_errorToken=_180832_r.get()._field_Token, });;
	jule::Bool _182313_ok = _1c00c7567_check(_181817_rtc.ptr(), _180832_r.get()._field_Expr);;
	if ((!(_182313_ok))) {
		return;;
	};
	if (((_180832_r.get()._field_Expr == nullptr) && (_181817_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_181317_rt.get()._field_Vars=_181817_rtc.get()._field_vars;
	if ((_180832_r.get()._field_Expr != nullptr)) {
		_181317_rt.get()._field_Expr=_181817_rtc.get()._field_model;
	};
}



inline void _1c0053427_checkUseExpr(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be39b8d6_UseExpr> _183932_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1c004c861_isDeferred(_self_)) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _183932_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1c005369c_checkNode(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Any& _185534_node) {
	{
		auto &_match_expr{ _185534_node };
		
		if (_match_expr.type_is<jule::Ptr<_1be3a6d42_ScopeTree>>()) {
			_case_begin_1c28dbebc:;
			{
				_1c004d91c_checkAnonScope(_self_, _185534_node.operator jule::Ptr<_1be3a6d42_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a9817_VarDecl>>()) {
			_case_begin_1c28db9b1:;
			{
				_1c004d1d0_checkVarDecl(_self_, _185534_node.operator jule::Ptr<_1be3a9817_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3ad178_TypeAliasDecl>>()) {
			_case_begin_1c28dbdbd:;
			{
				_1c004d312_checkTypeAliasDecl(_self_, _185534_node.operator jule::Ptr<_1be3ad178_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39b045_Expr>>()) {
			_case_begin_1c28dc20e:;
			{
				_1c004db81_checkExpr(_self_, _185534_node.operator jule::Ptr<_1be39b045_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39cb3a_CoExpr>>()) {
			_case_begin_1c28dc3b8:;
			{
				_1c004dcb3_checkCoExpr(_self_, _185534_node.operator jule::Ptr<_1be39cb3a_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3ac9a2_Conditional>>()) {
			_case_begin_1c28dc42e:;
			{
				_1c004e159_checkConditional(_self_, _185534_node.operator jule::Ptr<_1be3ac9a2_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3aa32e_Iter>>()) {
			_case_begin_1c28dc495:;
			{
				_1c004e9c8_checkIter(_self_, _185534_node.operator jule::Ptr<_1be3aa32e_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3abc04_ContSt>>()) {
			_case_begin_1c28dc50b:;
			{
				_1c004eea1_checkCont(_self_, _185534_node.operator jule::Ptr<_1be3abc04_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a44b0_LabelSt>>()) {
			_case_begin_1c28dc572:;
			{
				_1c00500d3_checkLabel(_self_, _185534_node.operator jule::Ptr<_1be3a44b0_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a4867_GotoSt>>()) {
			_case_begin_1c28dc5d8:;
			{
				_1c0050215_pushGoto(_self_, _185534_node.operator jule::Ptr<_1be3a4867_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a579c_AssignSt>>()) {
			_case_begin_1c28dc64e:;
			{
				_1c0050bb6_checkAssignSt(_self_, _185534_node.operator jule::Ptr<_1be3a579c_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3adcc2_MatchCase>>()) {
			_case_begin_1c28dc6b5:;
			{
				_1c0052316_checkMatch(_self_, _185534_node.operator jule::Ptr<_1be3adcc2_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a4b53_FallSt>>()) {
			_case_begin_1c28dc72b:;
			{
				_1c005258b_checkFall(_self_, _185534_node.operator jule::Ptr<_1be3a4b53_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3ab84c_BreakSt>>()) {
			_case_begin_1c28dc792:;
			{
				_1c0052e2c_checkBreak(_self_, _185534_node.operator jule::Ptr<_1be3ab84c_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a9bbe_RetSt>>()) {
			_case_begin_1c28dc808:;
			{
				_1c00531a2_checkRet(_self_, _185534_node.operator jule::Ptr<_1be3a9bbe_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39b8d6_UseExpr>>()) {
			_case_begin_1c28dc86e:;
			{
				_1c0053427_checkUseExpr(_self_, _185534_node.operator jule::Ptr<_1be39b8d6_UseExpr>());
			}
		}
		else {
			_case_begin_1c28dbb37:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1c28dba5a:;
	};
}



inline void _1c0053878_checkResult(jule::Ptr<_1c004b5b8_scopeChecker> _self_) {
	_1be3a6737_Stmt _189517_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _189517_stmt._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1be39b8d6_UseExpr>>()) {
			_case_begin_1c28e6adc:;
			{
				jule::Ptr<_1be39b8d6_UseExpr> _189821_ue = _189517_stmt._field_Data.operator jule::Ptr<_1be39b8d6_UseExpr>();;
				jule::Ptr<_1c00cd282_Data> _189921_d = _1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _189821_ue.get()._field_Expr);;
				if ((_189921_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_189921_d));;
				jule::Ptr<_1c00c6676_retTypeChecker> _190421_rtc = jule::new_ptr<_1c00c6676_retTypeChecker>(_1c00c6676_retTypeChecker{._field_sc=_self_, ._field_types=_1be4634b4_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_189821_ue.get()._field_Expr.get()._field_Token, });;
				_1c00c7567_check(_190421_rtc.ptr(), _189821_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39b045_Expr>>()) {
			_case_begin_1c28e6b53:;
			{
				jule::Ptr<_1be39b045_Expr> _191121_expr = _189517_stmt._field_Data.operator jule::Ptr<_1be39b045_Expr>();;
				jule::Ptr<_1c00cd282_Data> _191221_d = _1c00eaab8_evalExpr(_1c006cb7d_eval(_self_.get()._field_s, jule::Trait<_1c0124e55_Lookup>(_self_, 0)), _191121_expr);;
				if ((_191221_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _191221_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>>()) {
						_case_begin_1c28eb33e:;
						{
							jule::Ptr<_1be45b248_BuiltinErrorCallExprModel> _191825_m = _191221_d.get()._field_Model.operator jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>();;
							_1c004da4e_processErrorCall(_self_, _191825_m,_191121_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(static_cast<jule::Any>(_191221_d));;
						}
					}
					else {
						_case_begin_1c28eb1eb:;
						{
							return;;
						}
					}
					_match_end_1c28eb196:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a4867_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1be3ab84c_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1be3abc04_ContSt>>() || _match_expr.type_is<jule::Ptr<_1be3a9bbe_RetSt>>()) {
			_case_begin_1c28e62a1:;
			{
				_1c005369c_checkNode(_self_, _189517_stmt._field_Data);
			}
		}
		else {
			_case_begin_1c28e623a:;
			{
				_1c005369c_checkNode(_self_, _189517_stmt._field_Data);
				return;;
			}
		}
		_match_end_1c28e60b4:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1c0053a54_checkTree(jule::Ptr<_1c004b5b8_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _194017_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_194017_n)--;
	};
	for (; (_self_.get()._field_i < _194017_n); (_self_.get()._field_i)++) {
		{
			_1be3a6737_Stmt _194821_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1c005369c_checkNode(_self_, _194821_stmt._field_Data);
			if (_1c004c72e_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1c28ee919:;
	}
	_iter_end_1c28ee919:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1c0053878_checkResult(_self_);
	};
}



inline void _1c0053d73_checkGoto(_1c004b5b8_scopeChecker* _self_, jule::Ptr<_1c004b3cb_scopeGoto>& _195933_gt, jule::Ptr<_1c004b1de_scopeLabel>& _195954_label) {
	jule::Ptr<_1c004b5b8_scopeChecker> _196017_gtsc = _195933_gt.get()._field_scope;;
	while (((_196017_gtsc.get()._field_childIndex - 1LL) > _195954_label.get()._field_scope.get()._field_childIndex)) {
		{
			_196017_gtsc=_196017_gtsc.get()._field_parent;
		}
	_iter_next_1c2902a0a:;
	}
	_iter_end_1c2902a0a:;;
	jule::I64 _196517_n = 0LL;;
	if ((_196017_gtsc.get()._field_scope == _195954_label.get()._field_scope.get()._field_scope)) {
		if ((_195933_gt.get()._field_pos > _195954_label.get()._field_pos)) {
			return;;
		};
		_196517_n=_195933_gt.get()._field_pos;
	};
	jule::I64 _197817_i = (_195954_label.get()._field_pos - 1LL);;
	if ((_196517_n == 0LL)) {
		{
			auto &expr = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1c2905106:;
			if (it != expr.end()) {
				jule::I64 _198117_j = it - expr.begin();
				jule::Any _198120_stmt = *it;
				{
					if (_1be4e659c_stmtIsGotoScope(_198120_stmt,_196017_gtsc.get()._field_scope)) {
						_196517_n=_198117_j;
						goto _iter_end_1c2905106;
					};
				}
				_iter_next_1c2905106:;
				++it;
				_198117_j++;
				goto _iter_begin_1c2905106;
			}
			_iter_end_1c2905106:;
		};
	};
	for (; (_197817_i >= _196517_n); (_197817_i)--) {
		{
			jule::Any _199121_stmt = _195954_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_197817_i];;
			if (_1be4e3456_stmtIsDef(_199121_stmt)) {
				_1c00671b6_pushErr((*_self_)._field_s.ptr(), _195933_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_195933_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
				return;;
			};
		}
	_iter_next_1c2904b72:;
	}
	_iter_end_1c2904b72:;;
}



inline void _1c005404e_checkGotos(_1c004b5b8_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1c290705e:;
		if (it != expr.end()) {
			jule::Ptr<_1c004b3cb_scopeGoto> _200021_gt = *it;
			{
				jule::Ptr<_1c004b1de_scopeLabel> _200121_label = _1c004ce6b_findLabelAll(&(*_self_), _200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_200121_label == nullptr)) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _200021_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_200021_gt.get()._field_gt.get()._field_Label.get()._field_Kind)}));
					goto _iter_next_1c290705e;
				};
				_200121_label.get()._field_used=true;
				_1c0053d73_checkGoto(&(*_self_), _200021_gt,_200121_label);
			}
			_iter_next_1c290705e:;
			++it;
			goto _iter_begin_1c290705e;
		}
		_iter_end_1c290705e:;
	};
}



inline void _1c005422a_checkLabels(_1c004b5b8_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1c290a507:;
		if (it != expr.end()) {
			jule::Ptr<_1c004b1de_scopeLabel> _201316_l = *it;
			{
				if ((!(_201316_l.get()._field_used))) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _201316_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201316_l.get()._field_label.get()._field_Ident)}));
				};
			}
			_iter_next_1c290a507:;
			++it;
			goto _iter_begin_1c290a507;
		}
		_iter_end_1c290a507:;
	};
}



inline void _1c0054406_checkVars(_1c004b5b8_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c290a8e2:;
		if (it != expr.end()) {
			jule::Ptr<_1c0081334_Var> _202116_v = *it;
			{
				if (((((!(_202116_v.get()._field_Used)) && (!(_1d6760ca5_IsIgnoreIdent(_202116_v.get()._field_Ident)))) && (!(_1d676104c_IsAnonIdent(_202116_v.get()._field_Ident)))) && (_202116_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _202116_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202116_v.get()._field_Ident)}));
				};
			}
			_iter_next_1c290a8e2:;
			++it;
			goto _iter_begin_1c290a8e2;
		}
		_iter_end_1c290a8e2:;
	};
}



inline void _1c00545d2_checkAliases(_1c004b5b8_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c290c66e:;
		if (it != expr.end()) {
			jule::Ptr<_1c0108631_TypeAlias> _202916_a = *it;
			{
				if ((((!(_202916_a.get()._field_Used)) && (!(_1d6760ca5_IsIgnoreIdent(_202916_a.get()._field_Ident)))) && (!(_1d676104c_IsAnonIdent(_202916_a.get()._field_Ident))))) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _202916_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_202916_a.get()._field_Ident)}));
				};
			}
			_iter_next_1c290c66e:;
			++it;
			goto _iter_begin_1c290c66e;
		}
		_iter_end_1c290c66e:;
	};
}



inline void _1c0054901_check(jule::Ptr<_1c004b5b8_scopeChecker> _self_, jule::Ptr<_1be3a6d42_ScopeTree>& _203730_tree, jule::Ptr<_1c00487b3_Scope>& _203753_s) {
	_203753_s.get()._field_Deferred=_203730_tree.get()._field_Deferred;
	_203753_s.get()._field_Unsafety=_203730_tree.get()._field_Unsafety;
	jule::I64 _204113_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_203730_tree;
	_self_.get()._field_scope=_203753_s;
	_1c0053a54_checkTree(_self_);
	if ((_204113_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1c0054406_checkVars(_self_.ptr());
		_1c00545d2_checkAliases(_self_.ptr());
		if (_1c004c4ba_isRoot(_self_.ptr())) {
			_1c005404e_checkGotos(_self_.ptr());
			_1c005422a_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1c004b5b8_scopeChecker> _1c0054b65_newChildChecker(jule::Ptr<_1c004b5b8_scopeChecker> _self_) {
	jule::Ptr<_1c004b5b8_scopeChecker> _206117_base = _1be4e3b93_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_206117_base.get()._field_parent=_self_;
	_206117_base.get()._field_labels=_self_.get()._field_labels;
	_206117_base.get()._field_gotos=_self_.get()._field_gotos;
	_206117_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _206117_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1c004b5b8_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1c0055b55_checkCdef(_1c0055715_directiveChecker* _self_, jule::Ptr<_1be36332b_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1be45e6e1_Fn>>()) {
			_case_begin_1c2914e5c:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1be45e6e1_Fn>().get()._field_CppLinked) {
					goto _match_end_1c291519e;
				};
				goto _case_begin_1c2915204;
			}
		}
		else {
			_case_begin_1c2915204:;
			{
				_1c00671b6_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c291519e:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c0055dca_checkTypedef(_1c0055715_directiveChecker* _self_, jule::Ptr<_1be36332b_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
			_case_begin_1c291803c:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1be387251_Struct>().get()._field_CppLinked) {
					goto _match_end_1c29178ee;
				};
				goto _case_begin_1c2917954;
			}
		}
		else {
			_case_begin_1c2917954:;
			{
				_1c00671b6_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c29178ee:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c0056150_checkDerive(_1c0055715_directiveChecker* _self_, jule::Ptr<_1be36332b_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
			_case_begin_1c2919e51:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1be387251_Struct>().get()._field_CppLinked))) {
					goto _match_end_1c291a171;
				};
				goto _case_begin_1c291a1c6;
			}
		}
		else {
			_case_begin_1c291a1c6:;
			{
				_1c00671b6_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c291a171:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1c00674d5_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1c291db58:;
		}
		else {
			_case_begin_1c291a308:;
			{
				_1c00671b6_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind)}));
			}
		}
		_match_end_1c291d718:;
	};
}



inline void _1c00563c5_checkNamespace(_1c0055715_directiveChecker* _self_, jule::Ptr<_1be36332b_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
			_case_begin_1c292061b:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1be387251_Struct>().get()._field_CppLinked))) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45e6e1_Fn>>()) {
			_case_begin_1c291ebc0:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1be45e6e1_Fn>().get()._field_CppLinked))) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c2920165:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1c0081334_Var>().get()._field_CppLinked))) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1c2920033:;
			{
				_1c00671b6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c291eecd:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d675d511_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
			_case_begin_1c2928767:;
			{
				if ((_1c0103a6b_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1be36332b_Directive> _11625_typedef = jule::new_ptr<_1be36332b_Directive>(_1be36332b_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1be36332b_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1c2926644:;
	};
}



inline void _1c005664a_checkDeprecated(_1c0055715_directiveChecker* _self_, jule::Ptr<_1be36332b_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
			_case_begin_1c29294d2:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1be387251_Struct>().get()._field_CppLinked) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45e6e1_Fn>>()) {
			_case_begin_1c292aa00:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1be45e6e1_Fn>().get()._field_CppLinked) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c292aa66:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1c0081334_Var>().get()._field_CppLinked) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
				};
			}
		}
		else {
			_case_begin_1c292a406:;
			{
				_1c00671b6_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c2928cc8:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d675d511_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1c00568c0_checkTest(_1c0055715_directiveChecker* _self_, jule::Ptr<_1be36332b_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1be45e6e1_Fn>>()) {
			_case_begin_1c29332cc:;
			{
				jule::Ptr<_1be45e6e1_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1be45e6e1_Fn>();;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1be460390_IsInit(_16717_f.ptr())))) && (!(_1be46012b_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1c2933ce4;
				};
				if (_1be45edb7_IsMethod(_16717_f.ptr())) {
					_1c00671b6_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1c2933ce4;
				};
				goto _case_begin_1c2933d49;
			}
		}
		else {
			_case_begin_1c2933d49:;
			{
				_1c00671b6_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c2933ce4:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_1c00671b6_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c0056b45_checkDirective(_1c0055715_directiveChecker* _self_, jule::Ptr<_1be36332b_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1c29385e0:;
			{
				_1c0055b55_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1c2937cb5:;
			{
				_1c0055dca_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1c2937d2b:;
			{
				_1c0056150_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1c2937d92:;
			{
				_1c00563c5_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1c2937e08:;
			{
				_1c005664a_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1c2938a52:;
			{
				_1c00568c0_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1c2938ab8:;
			{
				_1c00671b6_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		else {
			_case_begin_1c2937c4e:;
			{
				_1c00671b6_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind)}));
			}
		}
		_match_end_1c2937b94:;
	};
}



inline void _1c0056d21_check(_1c0055715_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1c293b181:;
		if (it != expr.end()) {
			jule::Ptr<_1be36332b_Directive> _20821_d = *it;
			{
				_1c0056b45_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1c293b181:;
			++it;
			goto _iter_begin_1c293b181;
		}
		_iter_end_1c293b181:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c0055715_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c005b8c5_FindPackage(_1c005b3a8_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c005bbd3_SelectPackage(_1c005b3a8_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1c0081334_Var> _1c005c08a_FindVar(_1c005b3a8_ImportInfo* _self_, jule::Str _18126_ident, jule::Bool ) {
	if ((!(_1c005d971_isLookupable(&(*_self_), _18126_ident)))) {
		return nullptr;
	};
	return _1c0058eaa_findVarInPackage((*_self_)._field_Package.get()._field_Files,_18126_ident,false);
}



inline jule::Ptr<_1c0108631_TypeAlias> _1c005c442_FindTypeAlias(_1c005b3a8_ImportInfo* _self_, jule::Str _19332_ident, jule::Bool ) {
	if ((!(_1c005d971_isLookupable(&(*_self_), _19332_ident)))) {
		return nullptr;
	};
	return _1c00593d9_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_19332_ident,false);
}



inline jule::Ptr<_1be387251_Struct> _1c005c7e9_FindStruct(_1c005b3a8_ImportInfo* _self_, jule::Str _20529_ident, jule::Bool ) {
	if ((!(_1c005d971_isLookupable(&(*_self_), _20529_ident)))) {
		return nullptr;
	};
	return _1c00597c4_findStructInPackage((*_self_)._field_Package.get()._field_Files,_20529_ident,false);
}



inline jule::Ptr<_1be45e6e1_Fn> _1c005cba1_FindFn(_1c005b3a8_ImportInfo* _self_, jule::Str _21725_ident, jule::Bool ) {
	if ((!(_1c005d971_isLookupable(&(*_self_), _21725_ident)))) {
		return nullptr;
	};
	return _1c0059c36_findFnInPackage((*_self_)._field_Package.get()._field_Files,_21725_ident,false);
}



inline jule::Ptr<_1be47159e_Trait> _1c005ceae_FindTrait(_1c005b3a8_ImportInfo* _self_, jule::Str _22828_ident) {
	if ((!(_1c005d971_isLookupable(&(*_self_), _22828_ident)))) {
		return nullptr;
	};
	return _1c005a044_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_22828_ident);
}



inline jule::Ptr<_1be4736e4_Enum> _1c005d2bc_FindEnum(_1c005b3a8_ImportInfo* _self_, jule::Str _23927_ident) {
	if ((!(_1c005d971_isLookupable(&(*_self_), _23927_ident)))) {
		return nullptr;
	};
	return _1c005a385_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_23927_ident);
}



inline jule::Ptr<_1be474cde_TypeEnum> _1c005d5ca_FindTypeEnum(_1c005b3a8_ImportInfo* _self_, jule::Str _25031_ident) {
	if ((!(_1c005d971_isLookupable(&(*_self_), _25031_ident)))) {
		return nullptr;
	};
	return _1c005a6c6_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_25031_ident);
}



inline jule::Bool _1c005d971_isLookupable(_1c005b3a8_ImportInfo* _self_, jule::Str _25927_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _1c005dc7e_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_1c005dc7e_existIdent(&(*_self_), _25927_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1c005dc7e_existIdent(_1c005b3a8_ImportInfo* _self_, jule::Str _27925_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1c2950e98:;
		if (it != expr.end()) {
			jule::Ptr<_1d675d511_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_Kind == _27925_ident)) {
					return true;
				};
			}
			_iter_next_1c2950e98:;
			++it;
			goto _iter_begin_1c2950e98;
		}
		_iter_end_1c2950e98:;
	};
	return false;
}



inline jule::Bool _1c005e015_isAccessibleViaSelection(_1c005b3a8_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _1c005dc7e_existIdent(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1c005b3a8_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c005e7da_FindPackage(_1c005e312_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c005eae8_SelectPackage(_1c005e312_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1c0081334_Var> _1c005eea0_FindVar(_1c005e312_Package* _self_, jule::Str _30926_ident, jule::Bool _30938_cpp_linked) {
	return _1c0058eaa_findVarInPackage((*_self_)._field_Files,_30926_ident,_30938_cpp_linked);
}



inline jule::Ptr<_1c0108631_TypeAlias> _1c0060357_FindTypeAlias(_1c005e312_Package* _self_, jule::Str _31532_ident, jule::Bool _31544_cpp_linked) {
	return _1c00593d9_findTypeAliasInPackage((*_self_)._field_Files,_31532_ident,_31544_cpp_linked);
}



inline jule::Ptr<_1be387251_Struct> _1c006070e_FindStruct(_1c005e312_Package* _self_, jule::Str _32129_ident, jule::Bool _32141_cpp_linked) {
	return _1c00597c4_findStructInPackage((*_self_)._field_Files,_32129_ident,_32141_cpp_linked);
}



inline jule::Ptr<_1be45e6e1_Fn> _1c0060ab6_FindFn(_1c005e312_Package* _self_, jule::Str _32725_ident, jule::Bool _32737_cpp_linked) {
	return _1c0059c36_findFnInPackage((*_self_)._field_Files,_32725_ident,_32737_cpp_linked);
}



inline jule::Ptr<_1be47159e_Trait> _1c0060dc4_FindTrait(_1c005e312_Package* _self_, jule::Str _33328_ident) {
	return _1c005a044_findTraitInPackage((*_self_)._field_Files,_33328_ident);
}



inline jule::Ptr<_1be4736e4_Enum> _1c00611d2_FindEnum(_1c005e312_Package* _self_, jule::Str _33927_ident) {
	return _1c005a385_findEnumInPackage((*_self_)._field_Files,_33927_ident);
}



inline jule::Ptr<_1be474cde_TypeEnum> _1c00614e0_FindTypeEnum(_1c005e312_Package* _self_, jule::Str _34531_ident) {
	return _1c005a6c6_findTypeEnumInPackage((*_self_)._field_Files,_34531_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1c005e312_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c0064a21_FindPackage(_1c0064504_Sema* _self_, jule::Str _21930_ident) {
	return _1c00c8a41_FindPackage((*_self_)._field_file.ptr(), _21930_ident);
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c0064d2e_SelectPackage(_1c0064504_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)> _22932_selector) {
	return _1c00c8d4e_SelectPackage((*_self_)._field_file.ptr(), _22932_selector);
}



inline jule::Ptr<_1c0081334_Var> _1c00651d6_FindVar(_1c0064504_Sema* _self_, jule::Str _23926_ident, jule::Bool _23938_cpp_linked) {
	jule::Ptr<_1c0081334_Var> _24117_v = _1c0058eaa_findVarInPackage((*_self_)._field_files,_23926_ident,_23938_cpp_linked);;
	if ((_24117_v != nullptr)) {
		return _24117_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c29788e9:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _24721_imp = *it;
			{
				if ((!(_1c0062e2b_impIsLookupable(_24721_imp,_23926_ident)))) {
					goto _iter_next_1c29788e9;
				};
				_24117_v=_1c005c08a_FindVar(_24721_imp.ptr(), _23926_ident,_23938_cpp_linked);
				if (((_24117_v != nullptr) && _1c006788c_isAccessibleDefine(&(*_self_), _24117_v.get()._field_Public,_24117_v.get()._field_Token))) {
					return _24117_v;
				};
			}
			_iter_next_1c29788e9:;
			++it;
			goto _iter_begin_1c29788e9;
		}
		_iter_end_1c29788e9:;
	};
	return nullptr;
}



inline jule::Ptr<_1c0108631_TypeAlias> _1c006558d_FindTypeAlias(_1c0064504_Sema* _self_, jule::Str _26632_ident, jule::Bool _26644_cpp_linked) {
	jule::Ptr<_1c0108631_TypeAlias> _26817_ta = _1c00593d9_findTypeAliasInPackage((*_self_)._field_files,_26632_ident,_26644_cpp_linked);;
	if ((_26817_ta != nullptr)) {
		return _26817_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c297b39c:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _27421_imp = *it;
			{
				if ((!(_1c0062e2b_impIsLookupable(_27421_imp,_26632_ident)))) {
					goto _iter_next_1c297b39c;
				};
				_26817_ta=_1c005c442_FindTypeAlias(_27421_imp.ptr(), _26632_ident,_26644_cpp_linked);
				if (((_26817_ta != nullptr) && _1c006788c_isAccessibleDefine(&(*_self_), _26817_ta.get()._field_Public,_26817_ta.get()._field_Token))) {
					return _26817_ta;
				};
			}
			_iter_next_1c297b39c:;
			++it;
			goto _iter_begin_1c297b39c;
		}
		_iter_end_1c297b39c:;
	};
	return nullptr;
}



inline jule::Ptr<_1be387251_Struct> _1c0065945_FindStruct(_1c0064504_Sema* _self_, jule::Str _29329_ident, jule::Bool _29341_cppLinked) {
	jule::Ptr<_1be387251_Struct> _29517_s = _1c00597c4_findStructInPackage((*_self_)._field_files,_29329_ident,_29341_cppLinked);;
	if ((_29517_s != nullptr)) {
		return _29517_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c297dd50:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _30021_imp = *it;
			{
				if ((!(_1c0062e2b_impIsLookupable(_30021_imp,_29329_ident)))) {
					goto _iter_next_1c297dd50;
				};
				_29517_s=_1c005c7e9_FindStruct(_30021_imp.ptr(), _29329_ident,_29341_cppLinked);
				if (((_29517_s != nullptr) && _1c006788c_isAccessibleDefine(&(*_self_), _29517_s.get()._field_Public,_29517_s.get()._field_Token))) {
					return _29517_s;
				};
			}
			_iter_next_1c297dd50:;
			++it;
			goto _iter_begin_1c297dd50;
		}
		_iter_end_1c297dd50:;
	};
	return nullptr;
}



inline jule::Ptr<_1be45e6e1_Fn> _1c0065cec_FindFn(_1c0064504_Sema* _self_, jule::Str _31825_ident, jule::Bool _31837_cpp_linked) {
	jule::Ptr<_1be45e6e1_Fn> _32017_f = _1c0059c36_findFnInPackage((*_self_)._field_files,_31825_ident,_31837_cpp_linked);;
	if ((_32017_f != nullptr)) {
		return _32017_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c2981803:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _32621_imp = *it;
			{
				if ((!(_1c0062e2b_impIsLookupable(_32621_imp,_31825_ident)))) {
					goto _iter_next_1c2981803;
				};
				_32017_f=_1c005cba1_FindFn(_32621_imp.ptr(), _31825_ident,_31837_cpp_linked);
				if (((_32017_f != nullptr) && _1c006788c_isAccessibleDefine(&(*_self_), _32017_f.get()._field_Public,_32017_f.get()._field_Token))) {
					return _32017_f;
				};
			}
			_iter_next_1c2981803:;
			++it;
			goto _iter_begin_1c2981803;
		}
		_iter_end_1c2981803:;
	};
	return nullptr;
}



inline jule::Ptr<_1be47159e_Trait> _1c006610a_FindTrait(_1c0064504_Sema* _self_, jule::Str _34528_ident) {
	jule::Ptr<_1be47159e_Trait> _34717_t = _1c005a044_findTraitInPackage((*_self_)._field_files,_34528_ident);;
	if ((_34717_t != nullptr)) {
		return _34717_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c2983e43:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _35321_imp = *it;
			{
				if ((!(_1c0062e2b_impIsLookupable(_35321_imp,_34528_ident)))) {
					goto _iter_next_1c2983e43;
				};
				_34717_t=_1c005ceae_FindTrait(_35321_imp.ptr(), _34528_ident);
				if (((_34717_t != nullptr) && _1c006788c_isAccessibleDefine(&(*_self_), _34717_t.get()._field_Public,_34717_t.get()._field_Token))) {
					return _34717_t;
				};
			}
			_iter_next_1c2983e43:;
			++it;
			goto _iter_begin_1c2983e43;
		}
		_iter_end_1c2983e43:;
	};
	return nullptr;
}



inline jule::Ptr<_1be4736e4_Enum> _1c0066418_FindEnum(_1c0064504_Sema* _self_, jule::Str _37227_ident) {
	jule::Ptr<_1be4736e4_Enum> _37417_e = _1c005a385_findEnumInPackage((*_self_)._field_files,_37227_ident);;
	if ((_37417_e != nullptr)) {
		return _37417_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c2163b2e:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _38021_imp = *it;
			{
				if ((!(_1c0062e2b_impIsLookupable(_38021_imp,_37227_ident)))) {
					goto _iter_next_1c2163b2e;
				};
				_37417_e=_1c005d2bc_FindEnum(_38021_imp.ptr(), _37227_ident);
				if (((_37417_e != nullptr) && _1c006788c_isAccessibleDefine(&(*_self_), _37417_e.get()._field_Public,_37417_e.get()._field_Token))) {
					return _37417_e;
				};
			}
			_iter_next_1c2163b2e:;
			++it;
			goto _iter_begin_1c2163b2e;
		}
		_iter_end_1c2163b2e:;
	};
	return nullptr;
}



inline jule::Ptr<_1be474cde_TypeEnum> _1c0066726_FindTypeEnum(_1c0064504_Sema* _self_, jule::Str _39931_ident) {
	jule::Ptr<_1be474cde_TypeEnum> _40117_e = _1c005a6c6_findTypeEnumInPackage((*_self_)._field_files,_39931_ident);;
	if ((_40117_e != nullptr)) {
		return _40117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c216636d:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _40721_imp = *it;
			{
				if ((!(_1c0062e2b_impIsLookupable(_40721_imp,_39931_ident)))) {
					goto _iter_next_1c216636d;
				};
				_40117_e=_1c005d5ca_FindTypeEnum(_40721_imp.ptr(), _39931_ident);
				if (((_40117_e != nullptr) && _1c006788c_isAccessibleDefine(&(*_self_), _40117_e.get()._field_Public,_40117_e.get()._field_Token))) {
					return _40117_e;
				};
			}
			_iter_next_1c216636d:;
			++it;
			goto _iter_begin_1c216636d;
		}
		_iter_end_1c216636d:;
	};
	return nullptr;
}



inline jule::Bool _1c0066a78_isFlag(_1c0064504_Sema* _self_, jule::I64 _42321_flags) {
	return (((*_self_)._field_flags & _42321_flags) == _42321_flags);
}



inline void _1c0066ced_setCurrentFile(_1c0064504_Sema* _self_, jule::Ptr<_1c00c8524_SymbolTable> _42537_f) {
	(*_self_)._field_file=_42537_f;
}



inline void _1c00671b6_pushErr(_1c0064504_Sema* _self_, jule::Ptr<_1d675d511_Token> _42726_token, jule::Str _42741_fmt, jule::Slice<jule::Any> _42754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c0062ada_compilerErr(_42726_token,true,_42741_fmt,jule::Any(_42754_args)));;
}



inline void _1c00674d5_pushSugggestion(_1c0064504_Sema* _self_, jule::Str _43234_fmt, jule::Slice<jule::Any> _43247_args) {
	{
		_1c0064070_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43234_fmt,jule::Any(_43247_args));
	};
}



inline jule::Bool _1c006788c_isAccessibleDefine(_1c0064504_Sema* _self_, jule::Bool _43733_public, jule::Ptr<_1d675d511_Token> _43747_token) {
	return ((_43733_public || (_43747_token.get()._field_File == nullptr)) || (_1d6764292_Dir((*_self_)._field_file.get()._field_File.ptr()) == _1d6764292_Dir(_43747_token.get()._field_File.ptr())));
}



inline jule::Bool _1c0067cdd_isDuplicatedIdent(_1c0064504_Sema* _self_, jule::Uintptr _44432_itself, jule::Str _44449_ident, jule::Bool _44461_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1c216d034:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> &_44516_f = *it;
			{
				if (_1c00cba22_isDuplicatedIdent(_44516_f.ptr(), _44432_itself,_44449_ident,_44461_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _44516_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1c216d8e7:;
					if (it != expr.end()) {
						jule::Ptr<_1c005b3a8_ImportInfo> &_45020_imp = *it;
						{
							{
								auto &expr = _45020_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1c216e783:;
								if (it != expr.end()) {
									jule::Ptr<_1d675d511_Token> &_45124_selected = *it;
									{
										if ((_45124_selected.get()._field_Kind == _44449_ident)) {
											return true;
										};
									}
									_iter_next_1c216e783:;
									++it;
									goto _iter_begin_1c216e783;
								}
								_iter_end_1c216e783:;
							};
						}
						_iter_next_1c216d8e7:;
						++it;
						goto _iter_begin_1c216d8e7;
					}
					_iter_end_1c216d8e7:;
				};
			}
			_iter_next_1c216d034:;
			++it;
			goto _iter_begin_1c216d034;
		}
		_iter_end_1c216d034:;
	};
	return false;
}



inline void _1c006810c_checkDirectives(jule::Ptr<_1c0064504_Sema> _self_, jule::Slice<jule::Ptr<_1be36332b_Directive>>& _46140_d, jule::Any _46166_o) {
	_1c0055715_directiveChecker _46217_dc = _1c0055715_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1be36332b_Directive>>>)((&(_46140_d)))), ._field_o=jule::Any(_46166_o)};;
	_1c0056d21_check(&_46217_dc);
}



inline jule::Bool _1c006855d_checkGenericQuantity(_1c0064504_Sema* _self_, jule::I64 _47039_required, jule::I64 _47054_given, jule::Ptr<_1d675d511_Token> _47066_token) {
	jule::Bool _47083_ok = jule::Bool();
	{
		
		if (((_47039_required == 0LL) && (_47054_given > 0LL))) {
			_case_begin_1c21724de:;
			{
				_1c00671b6_pushErr(&(*_self_), _47066_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if (((_47039_required > 0LL) && (_47054_given == 0LL))) {
			_case_begin_1c21725bb:;
			{
				_1c00671b6_pushErr(&(*_self_), _47066_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required < _47054_given)) {
			_case_begin_1c2172632:;
			{
				_1c00671b6_pushErr(&(*_self_), _47066_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else if ((_47039_required > _47054_given)) {
			_case_begin_1c2172313:;
			{
				_1c00671b6_pushErr(&(*_self_), _47066_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47083_ok = false;
				return _47083_ok;
			}
		}
		else {
			_case_begin_1c2171d7e:;
			{
				_47083_ok = true;
				return _47083_ok;
			}
		}
		_match_end_1c2171ca2:;
	};
}



inline jule::Bool _1c0068937_isDuplicatedImportSelection(_1c0064504_Sema* _self_, jule::Uintptr _48942_itself, jule::Str _48959_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c2175569:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> &_49016_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49016_imp) == _48942_itself)) {
					goto _iter_end_1c2175569;
				};
				if (_1c005dc7e_existIdent(_49016_imp.ptr(), _48959_ident)) {
					return true;
				};
			}
			_iter_next_1c2175569:;
			++it;
			goto _iter_begin_1c2175569;
		}
		_iter_end_1c2175569:;
	};
	return false;
}



inline jule::Any _1c0068d00_getImportDef(_1c0064504_Sema* _self_, jule::Str _50227_ident, jule::Ptr<_1c005b3a8_ImportInfo>& _50244_imp) {
	if ((_1bcc70278_findPackageBuiltinDef(_50244_imp.get()._field_LinkPath,_50227_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _50244_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c2176db7:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _50621_f = *it;
			{
				;
				jule::Any _50921_def = _1c00cb5c1_defByIdent(_50621_f.ptr(), _50227_ident,false);;
				if ((_50921_def != nullptr)) {
					return jule::Any(_50921_def);
				};
			}
			_iter_next_1c2176db7:;
			++it;
			goto _iter_begin_1c2176db7;
		}
		_iter_end_1c2176db7:;
	};
	return nullptr;
}



inline jule::Bool _1c006910d_checkImportSelections(_1c0064504_Sema* _self_, jule::Ptr<_1c005b3a8_ImportInfo>& _51745_imp) {
	jule::Bool _51765_ok = jule::Bool();
	_51765_ok=true;
	{
		auto &expr = _51745_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1c217942a:;
		if (it != expr.end()) {
			jule::Ptr<_1d675d511_Token> _51916_ident = *it;
			{
				if ((_51916_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1c217942a;
				};
				if (_1c0068937_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_51745_imp)),_51916_ident.get()._field_Kind)) {
					_1c00671b6_pushErr(&(*_self_), _51916_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
					_1c00674d5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_51765_ok=false;
					goto _iter_next_1c217942a;
				};
				jule::Any _53121_def = _1c0068d00_getImportDef(&(*_self_), _51916_ident.get()._field_Kind,_51745_imp);;
				{
					auto &_match_expr{ _53121_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1c217b4b5:;
						{
							goto _iter_next_1c217942a;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
						_case_begin_1c217be33:;
						{
							jule::Ptr<_1c0081334_Var> _53725_v = _53121_def.operator jule::Ptr<_1c0081334_Var>();;
							if (_1c006788c_isAccessibleDefine(&(*_self_), _53725_v.get()._field_Public,_53725_v.get()._field_Token)) {
								goto _iter_next_1c217942a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c0108631_TypeAlias>>()) {
						_case_begin_1c217be99:;
						{
							jule::Ptr<_1c0108631_TypeAlias> _54225_ta = _53121_def.operator jule::Ptr<_1c0108631_TypeAlias>();;
							if (_1c006788c_isAccessibleDefine(&(*_self_), _54225_ta.get()._field_Public,_54225_ta.get()._field_Token)) {
								goto _iter_next_1c217942a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
						_case_begin_1c217c010:;
						{
							jule::Ptr<_1be387251_Struct> _54725_strct = _53121_def.operator jule::Ptr<_1be387251_Struct>();;
							if (_1c006788c_isAccessibleDefine(&(*_self_), _54725_strct.get()._field_Public,_54725_strct.get()._field_Token)) {
								goto _iter_next_1c217942a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be47159e_Trait>>()) {
						_case_begin_1c217ca8d:;
						{
							jule::Ptr<_1be47159e_Trait> _55225_t = _53121_def.operator jule::Ptr<_1be47159e_Trait>();;
							if (_1c006788c_isAccessibleDefine(&(*_self_), _55225_t.get()._field_Public,_55225_t.get()._field_Token)) {
								goto _iter_next_1c217942a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be4736e4_Enum>>()) {
						_case_begin_1c217cb04:;
						{
							jule::Ptr<_1be4736e4_Enum> _55725_e = _53121_def.operator jule::Ptr<_1be4736e4_Enum>();;
							if (_1c006788c_isAccessibleDefine(&(*_self_), _55725_e.get()._field_Public,_55725_e.get()._field_Token)) {
								goto _iter_next_1c217942a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be474cde_TypeEnum>>()) {
						_case_begin_1c217cb6a:;
						{
							jule::Ptr<_1be474cde_TypeEnum> _56225_e = _53121_def.operator jule::Ptr<_1be474cde_TypeEnum>();;
							if (_1c006788c_isAccessibleDefine(&(*_self_), _56225_e.get()._field_Public,_56225_e.get()._field_Token)) {
								goto _iter_next_1c217942a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1be45e6e1_Fn>>()) {
						_case_begin_1c217cbd1:;
						{
							jule::Ptr<_1be45e6e1_Fn> _56725_f = _53121_def.operator jule::Ptr<_1be45e6e1_Fn>();;
							if (_1c006788c_isAccessibleDefine(&(*_self_), _56725_f.get()._field_Public,_56725_f.get()._field_Token)) {
								goto _iter_next_1c217942a;
							};
						}
					}
					else {
						_case_begin_1c217bbbe:;
						{
							_1c00671b6_pushErr(&(*_self_), _51916_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
							_51765_ok=false;
							goto _iter_next_1c217942a;
						}
					}
					_match_end_1c2179b45:;
				};
				_1c00671b6_pushErr(&(*_self_), _51916_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51916_ident.get()._field_Kind)}));
				_1c00674d5_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_51765_ok=false;
			}
			_iter_next_1c217942a:;
			++it;
			goto _iter_begin_1c217942a;
		}
		_iter_end_1c217942a:;
	};
	return _51765_ok;
}



inline jule::Bool _1c006941b_isUseAliasDuplication(_1c0064504_Sema* _self_, jule::Ptr<_1c005b3a8_ImportInfo>& _58441_imp) {
	if ((_58441_imp.get()._field_Alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c2185ba6:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _58921_imp2 = *it;
			{
				if ((_58921_imp2 == _58441_imp)) {
					goto _iter_end_1c2185ba6;
				};
				if ((_58921_imp2.get()._field_Alias == _58441_imp.get()._field_Alias)) {
					return true;
				};
				if (((_58921_imp2.get()._field_Ident == _58921_imp2.get()._field_LinkPath) && (_58921_imp2.get()._field_Ident == _58441_imp.get()._field_Alias))) {
					return true;
				};
			}
			_iter_next_1c2185ba6:;
			++it;
			goto _iter_begin_1c2185ba6;
		}
		_iter_end_1c2185ba6:;
	};
	return false;
}



inline jule::Bool _1c0069729_checkImport(_1c0064504_Sema* _self_, jule::Ptr<_1c005b3a8_ImportInfo>& _60435_imp) {
	if ((_60435_imp.get()._field_CppLinked || (_60435_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;
	};
	if (_1c006941b_isUseAliasDuplication(&(*_self_), _60435_imp)) {
		_1c00671b6_pushErr(&(*_self_), _60435_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_60435_imp.get()._field_Alias)}));
		_1c00674d5_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_60435_imp.get()._field_Duplicate))) {
		jule::Ptr<_1c0064504_Sema> _61521_sema = jule::new_ptr<_1c0064504_Sema>(_1c0064504_Sema{._field_flags=(*_self_)._field_flags});;
		_1c007d353_check(_61521_sema, _60435_imp.get()._field_Package.get()._field_Files);
		if ((_61521_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_61521_sema.get()._field_errors);
			_61521_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1c006910d_checkImportSelections(&(*_self_), _60435_imp);
}



inline void _1c0069905_checkImports(_1c0064504_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1c218ae53:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _62921_file = *it;
			{
				_1c0066ced_setCurrentFile(&(*_self_), _62921_file);
				{
					auto &expr = _62921_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1c218c482:;
					if (it != expr.end()) {
						jule::Ptr<_1c005b3a8_ImportInfo> _63125_imp = *it;
						{
							jule::Bool _63221_ok = _1c0069729_checkImport(&(*_self_), _63125_imp);;
							if ((!(_63221_ok))) {
								_1c00671b6_pushErr(&(*_self_), _63125_imp.get()._field_Token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_63125_imp.get()._field_LinkPath)}));
								return;;
							};
						}
						_iter_next_1c218c482:;
						++it;
						goto _iter_begin_1c218c482;
					}
					_iter_end_1c218c482:;
				};
			}
			_iter_next_1c218ae53:;
			++it;
			goto _iter_begin_1c218ae53;
		}
		_iter_end_1c218ae53:;
	};
}



inline void _1c0069ad1_implFileImpls(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1c218cb9c:;
		if (it != expr.end()) {
			jule::Ptr<_1be50ab22_Impl> _64321_imp = *it;
			{
				_1c0075438_implImpl(_self_, _64321_imp);
			}
			_iter_next_1c218cb9c:;
			++it;
			goto _iter_begin_1c218cb9c;
		}
		_iter_end_1c218cb9c:;
	};
}



inline void _1c0069cac_implImpls(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c218e374:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _64921_file = *it;
			{
				_1c0066ced_setCurrentFile(_self_.ptr(), _64921_file);
				_1c0069ad1_implFileImpls(_self_);
			}
			_iter_next_1c218e374:;
			++it;
			goto _iter_begin_1c218e374;
		}
		_iter_end_1c218e374:;
	};
}



inline void _1c0069e88_checkEnums(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c2190908:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _65621_file = *it;
			{
				_1c0066ced_setCurrentFile(_self_.ptr(), _65621_file);
				_1c0072a62_checkEnumDecls(_self_);
			}
			_iter_next_1c2190908:;
			++it;
			goto _iter_begin_1c2190908;
		}
		_iter_end_1c2190908:;
	};
}



inline _1c011784e_typeChecker _1c006a3d9_typeChecker(jule::Ptr<_1c0064504_Sema> _self_, jule::Trait<_1c0124e55_Lookup> _66235_l, jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _66250_generics, jule::Ptr<_1c0116a3a_referencer> _66313_referencer) {
	_1c011784e_typeChecker _66417_tc = _1c011784e_typeChecker{._field_s=_self_, ._field_rootLookup=_66235_l, ._field_lookup=_66235_l, ._field_referencer=_66313_referencer, ._field_useGenerics=_66250_generics, };;
	{
		auto &_match_expr{ _66235_l };
		
		if (_match_expr.type_is<jule::Ptr<_1c004b5b8_scopeChecker>>()) {
			_case_begin_1c2192443:;
			{
				jule::Ptr<_1c004b5b8_scopeChecker> _67321_hard = _1c004cac5_getHardRoot(_66235_l.operator jule::Ptr<_1c004b5b8_scopeChecker>());;
				_66417_tc._field_refers=_67321_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1c2192157:;
	};
	if (((_66313_referencer != nullptr) && (_66313_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _66313_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1c0108631_TypeAlias>>()) {
				_case_begin_1c21928e9:;
				{
					_66417_tc._field_ownerAlias=_66313_referencer.get()._field_owner.operator jule::Ptr<_1c0108631_TypeAlias>();
				}
			}
			_match_end_1c2192894:;
		};
	};
	return _66417_tc;
}



inline jule::Ptr<_1c0109324_TypeKind> _1c006a8d4_buildTypeWithRefers(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be396a24_TypeDecl>& _68944_t, jule::Trait<_1c0124e55_Lookup> _68967_l, jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _69013_generics, jule::Ptr<_1c0116a3a_referencer> _69041_referencer) {
	return ({ auto _wrap_copy = _1c006a3d9_typeChecker(_self_, _68967_l,_69013_generics,_69041_referencer); _1c011eaba_checkDecl(&_wrap_copy, _68944_t); });
}



inline jule::Bool _1c006adce_checkTypeWithRefers(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1c010d47c_TypeSymbol>& _69644_t, jule::Trait<_1c0124e55_Lookup> _69664_l, jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _69713_generics, jule::Ptr<_1c0116a3a_referencer> _69741_referencer) {
	jule::Bool _69768_ok = jule::Bool();
	if (_1c010d834_checked(_69644_t.ptr())) {
		_69768_ok = true;
		return _69768_ok;
	};
	_69644_t.get()._field_Kind=_1c006a8d4_buildTypeWithRefers(_self_, _69644_t.get()._field_Decl,_69664_l,_69713_generics,_69741_referencer);
	_69768_ok = _1c010d834_checked(_69644_t.ptr());
	return _69768_ok;
}



inline jule::Ptr<_1be48c8d9_constraintChecker> _1c006b143_constraintChecker(jule::Ptr<_1c0064504_Sema> _self_) {
	return jule::new_ptr<_1be48c8d9_constraintChecker>(_1be48c8d9_constraintChecker{._field_s=_self_, });
}



inline jule::Bool _1c006b4ea_checkType(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1c010d47c_TypeSymbol>& _71134_t, jule::Trait<_1c0124e55_Lookup> _71154_l) {
	return _1c006adce_checkTypeWithRefers(_self_, _71134_t,_71154_l,nullptr,nullptr);
}



inline jule::Ptr<_1c0109324_TypeKind> _1c006b94b_buildTypeWithGenerics(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be396a24_TypeDecl>& _71746_t, jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _71813_generics, jule::Ptr<_1be465263_ReferenceStack> _71841_refers) {
	jule::Ptr<_1c011784e_typeChecker> _71917_tc = jule::new_ptr<_1c011784e_typeChecker>(_1c011784e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0124e55_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0124e55_Lookup>(_self_, 3), ._field_refers=_71841_refers, ._field_useGenerics=_71813_generics, });;
	return _1c011eaba_checkDecl(_71917_tc.ptr(), _71746_t);
}



inline jule::Ptr<_1c0109324_TypeKind> _1c006bc59_buildType(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be396a24_TypeDecl>& _73034_t) {
	return _1c006b94b_buildTypeWithGenerics(_self_, _73034_t,nullptr,nullptr);
}



inline jule::Ptr<_1c0109324_TypeKind> _1c006c067_selectType(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be396a24_TypeDecl>& _73535_t) {
	jule::Ptr<_1c011784e_typeChecker> _73617_tc = jule::new_ptr<_1c011784e_typeChecker>(_1c011784e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0124e55_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0124e55_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1c011eaba_checkDecl(_73617_tc.ptr(), _73535_t);
}



inline jule::Ptr<_1c00ced00_Eval> _1c006c4b8_evalpd(jule::Ptr<_1c0064504_Sema> _self_, jule::Trait<_1c0124e55_Lookup> _74730_l, jule::Ptr<_1c0109324_TypeKind> _74745_p, jule::Ptr<_1c0081334_Var> _74763_owner) {
	jule::Ptr<_1c00ced00_Eval> _74817_e = jule::new_ptr<_1c00ced00_Eval>(_1c00ced00_Eval{._field_s=_self_, ._field_lookup=_74730_l, ._field_owner=_74763_owner, });;
	{
		auto &_match_expr{ _74730_l };
		
		if (_match_expr.type_is<jule::Ptr<_1c004b5b8_scopeChecker>>()) {
			_case_begin_1c219c0c9:;
			{
				_74817_e.get()._field_unsafety=_1c004c388_isUnsafe(_74730_l.operator jule::Ptr<_1c004b5b8_scopeChecker>());
			}
		}
		_match_end_1c219c063:;
	};
	_74817_e.get()._field_prefix=_74745_p;
	return _74817_e;
}



inline jule::Ptr<_1c00ced00_Eval> _1c006c870_evalp(jule::Ptr<_1c0064504_Sema> _self_, jule::Trait<_1c0124e55_Lookup> _76229_l, jule::Ptr<_1c0109324_TypeKind> _76244_p) {
	return _1c006c4b8_evalpd(_self_, _76229_l,_76244_p,nullptr);
}



inline jule::Ptr<_1c00ced00_Eval> _1c006cb7d_eval(jule::Ptr<_1c0064504_Sema> _self_, jule::Trait<_1c0124e55_Lookup> _76728_l) {
	return _1c006c870_evalp(_self_, _76728_l,nullptr);
}



inline jule::Bool _1c006d178_checkAssignType(jule::Ptr<_1c0064504_Sema> _self_, jule::Bool _77135_destIsRef, jule::Ptr<_1c0109324_TypeKind>& _77157_dest, jule::Ptr<_1c00cd282_Data>& _77214_d, jule::Ptr<_1d675d511_Token> _77228_errorToken) {
	if (_77214_d.get()._field_Decl) {
		_1c00671b6_pushErr(_self_.ptr(), _77228_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_77135_destIsRef) {
		if ((!(_1c0109a2d_Equals(_77157_dest, _77214_d.get()._field_Kind)))) {
			_1c00671b6_pushErr(_self_.ptr(), _77228_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_77157_dest.ptr())),jule::Any(_1c0109720_Str(_77214_d.get()._field_Kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1c00b8d1c_assignTypeChecker> _78321_atc = jule::new_ptr<_1c00b8d1c_assignTypeChecker>(_1c00b8d1c_assignTypeChecker{._field_s=_self_, ._field_dest=_77157_dest, ._field_d=_77214_d, ._field_errorToken=_77228_errorToken});;
		jule::Bool _78917_ok = _1c00b9e94_check(_78321_atc.ptr());;
		if ((!(_78917_ok))) {
			return false;
		};
	};
	if (((!(_1c00cdb45_IsConst(_77214_d.ptr()))) || (_1c010b436_Prim(_77157_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _79917_kind = _1c010b436_Prim(_77157_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1c0047d9a_IsSigInt(_79917_kind)) {
			_case_begin_1c21a39d7:;
			{
				_1be45134d_SetI64(_77214_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1be450b00_AsI64(_77214_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1c0047ecc_IsUnsigInt(_79917_kind)) {
			_case_begin_1c21a3a5e:;
			{
				_1be4515c3_SetU64(_77214_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1be450d64_AsU64(_77214_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1c0048241_IsFloat(_79917_kind)) {
			_case_begin_1c21a3ad6:;
			{
				_1be451d43_SetF64(_77214_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1be4510c8_AsF64(_77214_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1c21a391b:;
	};
	return true;
}



inline jule::Bool _1c006d5c9_checkTypeCompatibility(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1c0109324_TypeKind>& _81347_dest, jule::Ptr<_1c0109324_TypeKind>& _81414_src, jule::Ptr<_1d675d511_Token>& _81435_errorToken) {
	if ((_81414_src == nullptr)) {
		_1c00671b6_pushErr(_self_.ptr(), _81435_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_81347_dest.ptr())),jule::Any(_1c0109720_Str(_81414_src.ptr()))}));
		return false;
	};
	if ((_1c010d0c5_Tup(_81414_src.ptr()) != nullptr)) {
		_1c00671b6_pushErr(_self_.ptr(), _81435_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_81347_dest.ptr())),jule::Any(_1c0109720_Str(_81414_src.ptr()))}));
		return false;
	};
	_1c00b71e4_typeCompatibilityChecker _82817_tcc = _1c00b71e4_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_81347_dest, ._field_src=_81414_src, ._field_errorToken=_81435_errorToken};;
	if (_1c00b87cd_check(&_82817_tcc)) {
		return true;
	};
	_1c00671b6_pushErr(_self_.ptr(), _81435_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_81347_dest.ptr())),jule::Any(_1c0109720_Str(_81414_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1c0109324_TypeKind> _1c006d9a3_buildNonGenericTypeKind(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be396a24_TypeDecl>& _84948_ast, jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>& _85014_generics) {
	jule::Ptr<_1c011784e_typeChecker> _85117_tc = jule::new_ptr<_1c011784e_typeChecker>(_1c011784e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0124e55_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0124e55_Lookup>(_self_, 3), ._field_ignoreGenerics=_85014_generics, });;
	return _1c011eaba_checkDecl(_85117_tc.ptr(), _84948_ast);
}



inline void _1c006dc5b_buildFnNonGenericTypeKinds(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be462392_FnIns>& _86051_f) {
	jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>> _86117_generics = nullptr;;
	if (_1be45edb7_IsMethod(_86051_f.get()._field_Decl.ptr())) {
		_86117_generics=jule::append(_86051_f.get()._field_Decl.get()._field_Generics,_86051_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_86117_generics=_86051_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _86051_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c21ac64a:;
		if (it != expr.end()) {
			jule::Ptr<_1be4614c3_ParamIns> _86821_p = *it;
			{
				if ((!(_1be45d4d1_IsSelf(_86821_p.get()._field_Decl.ptr())))) {
					_86821_p.get()._field_Kind=_1c006d9a3_buildNonGenericTypeKind(_self_, _86821_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_86117_generics);
				};
			}
			_iter_next_1c21ac64a:;
			++it;
			goto _iter_begin_1c21ac64a;
		}
		_iter_end_1c21ac64a:;
	};
	if ((!(_1be45eb53_IsVoid(_86051_f.get()._field_Decl.ptr())))) {
		_86051_f.get()._field_Result=_1c006d9a3_buildNonGenericTypeKind(_self_, _86051_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_86117_generics);
	};
}



inline jule::Ptr<_1be462392_FnIns> _1c006e07a_getTraitCheckFnKind(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be45e6e1_Fn>& _87844_f) {
	if ((_87844_f.get()._field_Instances.len() == 1LL)) {
		return _87844_f.get()._field_Instances[0LL];
	};
	jule::Ptr<_1be462392_FnIns> _88217_ins = _1be460acc_instanceForce(_87844_f);;
	jule::Ptr<_1c011784e_typeChecker> _88417_tc = jule::new_ptr<_1c011784e_typeChecker>(_1c011784e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1c0124e55_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1c0124e55_Lookup>(_self_, 3), });;
	{
		auto &expr = _88217_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c21b130d:;
		if (it != expr.end()) {
			jule::Ptr<_1be4614c3_ParamIns> _88921_p = *it;
			{
				if ((!(_1be45d4d1_IsSelf(_88921_p.get()._field_Decl.ptr())))) {
					_88921_p.get()._field_Kind=_1c011eaba_checkDecl(_88417_tc.ptr(), _88921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1c21b130d:;
			++it;
			goto _iter_begin_1c21b130d;
		}
		_iter_end_1c21b130d:;
	};
	if ((!(_1be45eb53_IsVoid(_87844_f.ptr())))) {
		_88217_ins.get()._field_Result=_1c011eaba_checkDecl(_88417_tc.ptr(), _87844_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _88217_ins;
}



inline jule::Bool _1c006e4cb_checkConstraintsFn(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be462392_FnIns>& _90143_f, jule::Ptr<_1d675d511_Token>& _90159_et, jule::Ptr<_1be462392_FnIns> _90175_exist) {
	jule::Ptr<_1be48c8d9_constraintChecker> _90217_cc = _1c006b143_constraintChecker(_self_);;
	_90217_cc.get()._field_et=_90159_et;
	_90217_cc.get()._field_fi=_90143_f;
	if ((_90175_exist != nullptr)) {
		{
			auto &expr = _90175_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c21b4641:;
			if (it != expr.end()) {
				jule::I64 _90618_i = it - expr.begin();
				jule::Ptr<_1c0107ae7_InsGeneric> _90625_g = *it;
				{
					_90143_f.get()._field_Generics[_90618_i].get()._field_Constraint=_90625_g.get()._field_Constraint;
				}
				_iter_next_1c21b4641:;
				++it;
				_90618_i++;
				goto _iter_begin_1c21b4641;
			}
			_iter_end_1c21b4641:;
		};
	} else {
		_90217_cc.get()._field_uniq=true;
	};
	return _1be4d757c_check(_90217_cc);
}



inline jule::Bool _1c006e92c_checkConstraintsStruct(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be3b359b_StructIns>& _91547_s, jule::Ptr<_1d675d511_Token>& _91567_et, jule::Ptr<_1be3b359b_StructIns> _91583_exist) {
	jule::Ptr<_1be48c8d9_constraintChecker> _91617_cc = _1c006b143_constraintChecker(_self_);;
	_91617_cc.get()._field_et=_91567_et;
	_91617_cc.get()._field_si=_91547_s;
	if ((_91583_exist != nullptr)) {
		{
			auto &expr = _91583_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c21b71d2:;
			if (it != expr.end()) {
				jule::I64 _92018_i = it - expr.begin();
				jule::Ptr<_1c0107ae7_InsGeneric> _92025_g = *it;
				{
					_91547_s.get()._field_Generics[_92018_i].get()._field_Constraint=_92025_g.get()._field_Constraint;
				}
				_iter_next_1c21b71d2:;
				++it;
				_92018_i++;
				goto _iter_begin_1c21b71d2;
			}
			_iter_end_1c21b71d2:;
		};
	} else {
		_91617_cc.get()._field_uniq=true;
	};
	return _1be4d757c_check(_91617_cc);
}



inline jule::Bool _1c006ecd4_fnEnvironment(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be462392_FnIns>& _93238_f, jule::Fn<jule::Bool(jule::Ptr<_1c0064504_Sema>&,jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>&)> _93249_algo) {
	jule::Ptr<_1c0064504_Sema> _93317_sema = _93238_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1c00c8524_SymbolTable> _93417_old = _93238_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1c0066ced_setCurrentFile(_93238_f.get()._field_Decl.get()._field_sema.ptr(), _93417_old);
	});;
	jule::Ptr<_1c00c8524_SymbolTable> _93617_file = _1c0063b0d_findFile(_93238_f.get()._field_Decl.get()._field_sema.get()._field_files,_93238_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_93617_file != nullptr)) {
		_1c0066ced_setCurrentFile(_93238_f.get()._field_Decl.get()._field_sema.ptr(), _93617_file);
	};
	jule::I64 _94117_size = _93238_f.get()._field_Generics.len();;
	if (((_93238_f.get()._field_Decl != nullptr) && (_93238_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_94117_size+=_93238_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _94617_generics = jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>::alloc(0LL,_94117_size);;
	_1c00637ab_appendGenericTypeAliases(_94617_generics,_93238_f);
	jule::Bool _94913_ok = _93249_algo(_93317_sema,_94617_generics);;
	if ((_93317_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_93317_sema.get()._field_errors);
		_93317_sema.get()._field_errors=nullptr;
	};
	return _94913_ok;
}



inline void _1c0070059_checkFnParamKind(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be4614c3_ParamIns>& _95941_p) {
	_95941_p.get()._field_Kind.get()._field_Variadic=_95941_p.get()._field_Decl.get()._field_Variadic;
	if ((_95941_p.get()._field_Decl.get()._field_Reference && (!(_1c01218d0_isValidForRef(_95941_p.get()._field_Kind))))) {
		_1c00671b6_pushErr(_self_.ptr(), _95941_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_95941_p.get()._field_Kind.ptr()))}));
	};
}



inline jule::Bool _1c0070367_reloadFnInsTypes(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be462392_FnIns> _96640_f) {
	if ((_1be463728_IsBuiltin(_96640_f.ptr()) || _1be46398c_IsAnon(_96640_f.ptr()))) {
		return true;
	};
	return _1c006ecd4_fnEnvironment(_self_, _96640_f,jule::Fn<jule::Bool(jule::Ptr<_1c0064504_Sema>&,jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>&)>([=](jule::Ptr<_1c0064504_Sema>& _97043_sema, jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>& _97061_generics) mutable -> jule::Bool {
		jule::Bool _97121_ok = true;;
		{
			auto &expr = _96640_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1c21c3661:;
			if (it != expr.end()) {
				jule::Ptr<_1be4614c3_ParamIns> _97225_p = *it;
				{
					if (_1be45d4d1_IsSelf(_97225_p.get()._field_Decl.ptr())) {
						if (_1be45d745_IsRef(_97225_p.get()._field_Decl.ptr())) {
							_97225_p.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c0112580_Sptr>(_1c0112580_Sptr{._field_Elem=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_96640_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_97225_p.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_96640_f.get()._field_Owner, 0)});
						};
					} else {
						_97225_p.get()._field_Kind=_1c006b94b_buildTypeWithGenerics(_97043_sema, _97225_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_97061_generics,_96640_f.get()._field_Refers);
						if ((_97225_p.get()._field_Kind != nullptr)) {
							_1c0070059_checkFnParamKind(_self_, _97225_p);
						} else {
							_97121_ok=false;
						};
					};
				}
				_iter_next_1c21c3661:;
				++it;
				goto _iter_begin_1c21c3661;
			}
			_iter_end_1c21c3661:;
		};
		if ((!(_1be45eb53_IsVoid(_96640_f.get()._field_Decl.ptr())))) {
			_96640_f.get()._field_Result=_1c006b94b_buildTypeWithGenerics(_97043_sema, _96640_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_97061_generics,_96640_f.get()._field_Refers);
			_97121_ok=((_96640_f.get()._field_Result != nullptr) && _97121_ok);
		};
		return _97121_ok;
	}));
}



inline jule::Bool _1c00707da_checkRefValidityForInitExpr(jule::Ptr<_1c0064504_Sema> _self_, jule::Bool _100247_leftMut, jule::Ptr<_1c00cd282_Data>& _100267_d, jule::Ptr<_1d675d511_Token>& _100282_errorToken) {
	{
		auto &_match_expr{ _100267_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c21c8534:;
			{
				goto _match_end_1c21c826a;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458e5a_TraitSubIdentExprModel>>()) {
			_case_begin_1c21c859a:;
			{
				jule::Ptr<_1be458e5a_TraitSubIdentExprModel> _100721_model = _100267_d.get()._field_Model.operator jule::Ptr<_1be458e5a_TraitSubIdentExprModel>();;
				if ((!(_1c0062645_isValidModelForRef(_100721_model.get()._field_Expr)))) {
					_1c00671b6_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_100721_model.get()._field_Method.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
			_case_begin_1c21c8611:;
			{
				jule::Ptr<_1be459378_StructSubIdentExprModel> _101321_model = _100267_d.get()._field_Model.operator jule::Ptr<_1be459378_StructSubIdentExprModel>();;
				if ((!(_1c0062645_isValidModelForRef(_101321_model.get()._field_Expr.get()._field_Model)))) {
					_1c00671b6_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_101321_model.get()._field_Field.get()._field_Decl.get()._field_Ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45993e_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1be459b2b_CommonSubIdentExprModel>>()) {
			_case_begin_1c21c8d70:;
			{
				_1c00671b6_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457651_UnaryExprModel>>()) {
			_case_begin_1c21c8dd6:;
			{
				jule::Ptr<_1be457651_UnaryExprModel> _102321_unary = _100267_d.get()._field_Model.operator jule::Ptr<_1be457651_UnaryExprModel>();;
				if ((_102321_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1c0062645_isValidModelForRef(_100267_d.get()._field_Model)))) {
						_1c00671b6_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1c21c826a;
				};
				goto _case_begin_1c21c8413;
			}
		}
		else {
			_case_begin_1c21c8413:;
			{
				_1c00671b6_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1c21c826a:;
	};
	if ((_100247_leftMut && (!(_100267_d.get()._field_Mutable)))) {
		_1c00671b6_pushErr(_self_.ptr(), _100282_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1c0070db2_checkValidityForInitExpr(jule::Ptr<_1c0064504_Sema> _self_, jule::Bool _104344_leftMut, jule::Bool _104359_leftRef, jule::Ptr<_1c0109324_TypeKind>& _104410_leftKind, jule::Ptr<_1c00cd282_Data>& _104436_d, jule::Ptr<_1d675d511_Token>& _104451_errorToken) {
	if (((_104344_leftMut && (!(_104436_d.get()._field_Mutable))) && _1c010a721_Mutable(_104436_d.get()._field_Kind.ptr()))) {
		_1c00671b6_pushErr(_self_.ptr(), _104451_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_104436_d.get()._field_Kind.ptr()))}));
		return false;
	};
	if (_104359_leftRef) {
		if ((!(_1c00707da_checkRefValidityForInitExpr(_self_, _104344_leftMut,_104436_d,_104451_errorToken)))) {
			return false;
		};
	};
	jule::Ptr<_1c00b8d1c_assignTypeChecker> _105417_atc = jule::new_ptr<_1c00b8d1c_assignTypeChecker>(_1c00b8d1c_assignTypeChecker{._field_s=_self_, ._field_d=_104436_d, ._field_errorToken=_104451_errorToken});;
	return _1c00b94e3_checkValidity(_105417_atc.ptr());
}



inline jule::Bool _1c007127a_checkTypeAliasDeclKind(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1c0108631_TypeAlias>& _106247_ta, jule::Trait<_1c0124e55_Lookup> _106267_l) {
	jule::Bool _106280_ok = jule::Bool();
	jule::Ptr<_1c00c8524_SymbolTable> _106317_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1c0066ced_setCurrentFile(_self_.ptr(), _106317_old);
	});;
	if ((_106247_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_1c00c8524_SymbolTable> _106821_file = _1c0063b0d_findFile(_self_.get()._field_files,_106247_ta.get()._field_Token.get()._field_File);;
		if ((_106821_file != nullptr)) {
			_1c0066ced_setCurrentFile(_self_.ptr(), _106821_file);
		};
	};
	_106280_ok=_1c006adce_checkTypeWithRefers(_self_, _106247_ta.get()._field_Kind,_106267_l,nullptr,jule::new_ptr<_1c0116a3a_referencer>(_1c0116a3a_referencer{._field_ident=_106247_ta.get()._field_Ident, ._field_owner=jule::Any(_106247_ta), ._field_refs=(&(_106247_ta.get()._field_Refers))}));
	if (((_106280_ok && (_1c010c14b_Arr(_106247_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1c010c14b_Arr(_106247_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1c00671b6_pushErr(_self_.ptr(), _106247_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_106280_ok=false;
	};
	return _106280_ok;
}



inline void _1c0071599_checkTypeAliasDecl(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1c0108631_TypeAlias>& _108543_ta, jule::Trait<_1c0124e55_Lookup> _108563_l) {
	if (_1d6760ca5_IsIgnoreIdent(_108543_ta.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.ptr(), _108543_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1c007127a_checkTypeAliasDeclKind(_self_, _108543_ta,_108563_l);
}



inline void _1c007181e_checkTypeAliasDeclDup(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1c0108631_TypeAlias>& _109346_ta) {
	if (_1d6760ca5_IsIgnoreIdent(_109346_ta.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.ptr(), _109346_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1c0067cdd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_109346_ta)),_109346_ta.get()._field_Ident,_109346_ta.get()._field_CppLinked)) {
		_1c00671b6_pushErr(_self_.ptr(), _109346_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_109346_ta.get()._field_Ident)}));
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1c007127a_checkTypeAliasDeclKind(_self_, _109346_ta,jule::Trait<_1c0124e55_Lookup>(_self_, 3));
}



inline jule::Bool _1c0071a83_checkTypeAliasDecls(jule::Ptr<_1c0064504_Sema> _self_) {
	jule::Bool _110541_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c21db27d:;
		if (it != expr.end()) {
			jule::Ptr<_1c0108631_TypeAlias> _110621_ta = *it;
			{
				_1c007181e_checkTypeAliasDeclDup(_self_, _110621_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_110541_ok = false;
					return _110541_ok;
				};
			}
			_iter_next_1c21db27d:;
			++it;
			goto _iter_begin_1c21db27d;
		}
		_iter_end_1c21db27d:;
	};
	_110541_ok = true;
	return _110541_ok;
}



inline void _1c21ec7ab_checkEnumItemsDup(_1c0064504_Sema* _self_, jule::Slice<jule::Ptr<_1be472bee_EnumItem>> _111739_items) {
	{
		auto &expr = _111739_items;
		auto it = expr.begin();
		_iter_begin_1c21eda87:;
		if (it != expr.end()) {
			jule::Ptr<_1be472bee_EnumItem> &_111816_item = *it;
			{
				if (_111816_item.get()._field_Ident.empty()) {
					goto _iter_next_1c21eda87;
				} else if (_1d6760ca5_IsIgnoreIdent(_111816_item.get()._field_Ident)) {
					_1c00671b6_pushErr(&(*_self_), _111816_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _111739_items;
						auto it = expr.begin();
						_iter_begin_1c21ee7be:;
						if (it != expr.end()) {
							jule::Ptr<_1be472bee_EnumItem> &_112424_citem = *it;
							{
								if ((_111816_item == _112424_citem)) {
									goto _iter_end_1c21ee7be;
								} else if ((_111816_item.get()._field_Ident == _112424_citem.get()._field_Ident)) {
									_1c00671b6_pushErr(&(*_self_), _111816_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_111816_item.get()._field_Ident)}));
									_1c00674d5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1c21ee7be;
								};
							}
							_iter_next_1c21ee7be:;
							++it;
							goto _iter_begin_1c21ee7be;
						}
						_iter_end_1c21ee7be:;
					};
				};
			}
			_iter_next_1c21eda87:;
			++it;
			goto _iter_begin_1c21eda87;
		}
		_iter_end_1c21eda87:;
	};
}

inline void _1c2208289_checkEnumItemsDup(_1c0064504_Sema* _self_, jule::Slice<jule::Ptr<_1be474728_TypeEnumItem>> _111739_items) {
	{
		auto &expr = _111739_items;
		auto it = expr.begin();
		_iter_begin_1c2209565:;
		if (it != expr.end()) {
			jule::Ptr<_1be474728_TypeEnumItem> &_111816_item = *it;
			{
				if (_111816_item.get()._field_Ident.empty()) {
					goto _iter_next_1c2209565;
				} else if (_1d6760ca5_IsIgnoreIdent(_111816_item.get()._field_Ident)) {
					_1c00671b6_pushErr(&(*_self_), _111816_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _111739_items;
						auto it = expr.begin();
						_iter_begin_1c220a29c:;
						if (it != expr.end()) {
							jule::Ptr<_1be474728_TypeEnumItem> &_112424_citem = *it;
							{
								if ((_111816_item == _112424_citem)) {
									goto _iter_end_1c220a29c;
								} else if ((_111816_item.get()._field_Ident == _112424_citem.get()._field_Ident)) {
									_1c00671b6_pushErr(&(*_self_), _111816_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_111816_item.get()._field_Ident)}));
									_1c00674d5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1c220a29c;
								};
							}
							_iter_next_1c220a29c:;
							++it;
							goto _iter_begin_1c220a29c;
						}
						_iter_end_1c220a29c:;
					};
				};
			}
			_iter_next_1c2209565:;
			++it;
			goto _iter_begin_1c2209565;
		}
		_iter_end_1c2209565:;
	};
}



inline void _1c007207d_checkEnumItemsStr(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be4736e4_Enum>& _113742_e) {
	jule::Ptr<_1c00ced00_Eval> _113817_eval = _1c006cb7d_eval(_self_, jule::Trait<_1c0124e55_Lookup>(_self_, 3));;
	{
		auto &expr = _113742_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c21dd082:;
		if (it != expr.end()) {
			jule::Ptr<_1be472bee_EnumItem> _113921_item = *it;
			{
				if (_1be4730d9_AutoExpr(_113921_item.ptr())) {
					_113921_item.get()._field_Value=jule::new_ptr<_1c00ce30a_Value>(_1c00ce30a_Value{._field_Data=jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Constant=static__1be44e34b_NewStr(_113921_item.get()._field_Ident)})});
					_113921_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_113921_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1c00cd282_Data> _114825_d = _1c00eaab8_evalExpr(_113817_eval, _113921_item.get()._field_Value.get()._field_Expr);;
					if ((_114825_d == nullptr)) {
						goto _iter_next_1c21dd082;
					};
					if ((!(_1c00cdb45_IsConst(_114825_d.ptr())))) {
						_1c00671b6_pushErr(_self_.ptr(), _113921_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1c006d178_checkAssignType(_self_, false,_113742_e.get()._field_Kind.get()._field_Kind,_114825_d,_113921_item.get()._field_Token);
					_113921_item.get()._field_Value.get()._field_Data=_114825_d;
				};
			}
			_iter_next_1c21dd082:;
			++it;
			goto _iter_begin_1c21dd082;
		}
		_iter_end_1c21dd082:;
	};
}



inline void _1c0072303_checkEnumItemsInt(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be4736e4_Enum>& _116342_e) {
	jule::Ptr<_1c010dceb_Prim> _116413_prim = _1c010b436_Prim(_116342_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _116517_max = static_cast<jule::U64>(_1be90ed06_Max(_1c010e15e_Str(_116413_prim.ptr())));;
	jule::Ptr<_1c00ced00_Eval> _116617_eval = _1c006cb7d_eval(_self_, jule::Trait<_1c0124e55_Lookup>(_self_, 3));;
	{
		auto &expr = _116342_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c21e353d:;
		if (it != expr.end()) {
			jule::I64 _116714_i = it - expr.begin();
			jule::Ptr<_1be472bee_EnumItem> _116721_item = *it;
			{
				if ((_116517_max == 0LLU)) {
					_1c00671b6_pushErr(_self_.ptr(), _116721_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_116517_max)--;
				};
				if (_1be4730d9_AutoExpr(_116721_item.ptr())) {
					_116721_item.get()._field_Value=jule::new_ptr<_1c00ce30a_Value>(_1c00ce30a_Value{._field_Data=jule::new_ptr<_1c00cd282_Data>()});
					{
						
						if (_1c0047d9a_IsSigInt(_1c010e15e_Str(_116413_prim.ptr()))) {
							_case_begin_1c21e5ac3:;
							{
								_116721_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1be44dcda_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_116517_max - (_116517_max - static_cast<jule::U64>(_116714_i))))));
							}
						}
						else {
							_case_begin_1c21e572c:;
							{
								_116721_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1be44de1c_NewU64(static_cast<jule::U64>((_116517_max - (_116517_max - static_cast<jule::U64>(_116714_i)))));
							}
						}
						_match_end_1c21e56b6:;
					};
					_116721_item.get()._field_Value.get()._field_Data.get()._field_Model=static_cast<jule::Any>(_116721_item.get()._field_Value.get()._field_Data.get()._field_Constant);
				} else {
					jule::Ptr<_1c00cd282_Data> _118525_d = _1c00eaab8_evalExpr(_116617_eval, _116721_item.get()._field_Value.get()._field_Expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_1c21e353d;
					};
					if ((!(_1c00cdb45_IsConst(_118525_d.ptr())))) {
						_1c00671b6_pushErr(_self_.ptr(), _116721_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1c006d178_checkAssignType(_self_, false,_116342_e.get()._field_Kind.get()._field_Kind,_118525_d,_116721_item.get()._field_Token);
					_116721_item.get()._field_Value.get()._field_Data=_118525_d;
				};
			}
			_iter_next_1c21e353d:;
			++it;
			_116714_i++;
			goto _iter_begin_1c21e353d;
		}
		_iter_end_1c21e353d:;
	};
}



inline void _1c0072578_checkEnumDecl(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be4736e4_Enum>& _119838_e) {
	if (_1d6760ca5_IsIgnoreIdent(_119838_e.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.ptr(), _119838_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c0067cdd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_119838_e)),_119838_e.get()._field_Ident,false)) {
		_1c00671b6_pushErr(_self_.ptr(), _119838_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_119838_e.get()._field_Ident)}));
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_119838_e.get()._field_Items.len() == 0LL)) {
		_1c00671b6_pushErr(_self_.ptr(), _119838_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_119838_e.get()._field_Ident)}));
	};
	_1c21ec7ab_checkEnumItemsDup(_self_.ptr(), _119838_e.get()._field_Items);
	if ((_119838_e.get()._field_Kind != nullptr)) {
		if ((!(_1c006b4ea_checkType(_self_, _119838_e.get()._field_Kind,jule::Trait<_1c0124e55_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_119838_e.get()._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1c010dceb_Prim> _122517_t = _1c010b436_Prim(_119838_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_122517_t == nullptr)) {
		_1c00671b6_pushErr(_self_.ptr(), _119838_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1c0112030_IsStr(_122517_t.ptr())) {
			_case_begin_1c2204197:;
			{
				_1c007207d_checkEnumItemsStr(_self_, _119838_e);
			}
		}
		else if (_1c004810e_IsInt(_1c010e15e_Str(_122517_t.ptr()))) {
			_case_begin_1c2203dde:;
			{
				_1c0072303_checkEnumItemsInt(_self_, _119838_e);
			}
		}
		else {
			_case_begin_1c2203394:;
			{
				_1c00671b6_pushErr(_self_.ptr(), _119838_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c22031da:;
	};
}



inline void _1c00727ed_checkTypeEnumDecl(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be474cde_TypeEnum>& _124242_e) {
	if (_1d6760ca5_IsIgnoreIdent(_124242_e.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.ptr(), _124242_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c0067cdd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_124242_e)),_124242_e.get()._field_Ident,false)) {
		_1c00671b6_pushErr(_self_.ptr(), _124242_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_124242_e.get()._field_Ident)}));
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_124242_e.get()._field_Items.len() == 0LL)) {
		_1c00671b6_pushErr(_self_.ptr(), _124242_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_124242_e.get()._field_Ident)}));
		return;;
	};
	_1c2208289_checkEnumItemsDup(_self_.ptr(), _124242_e.get()._field_Items);
	{
		auto &expr = _124242_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c220b8ca:;
		if (it != expr.end()) {
			jule::Ptr<_1be474728_TypeEnumItem> _125621_item = *it;
			{
				if ((_125621_item.get()._field_Kind == nullptr)) {
					_1c00671b6_pushErr(_self_.ptr(), _125621_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1c220b8ca;
				};
				jule::Bool _126117_ok = _1c006b4ea_checkType(_self_, _125621_item.get()._field_Kind,jule::Trait<_1c0124e55_Lookup>(_self_, 3));;
				if ((!(_126117_ok))) {
					goto _iter_next_1c220b8ca;
				};
				jule::Ptr<_1c010dceb_Prim> _126517_p = _1c010b436_Prim(_125621_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_126517_p != nullptr) && _1c0112294_IsAny(_126517_p.ptr()))) {
					_1c00671b6_pushErr(_self_.ptr(), _125621_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c220b8ca:;
			++it;
			goto _iter_begin_1c220b8ca;
		}
		_iter_end_1c220b8ca:;
	};
	if ((_124242_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1be474728_TypeEnumItem> _127121_item = _124242_e.get()._field_Items[0LL];;
		_1c0109324_TypeKind _127217_tk = _1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_124242_e, 4)};;
		if (((_127121_item.get()._field_Kind.get()._field_Kind != nullptr) && _1c0109a2d_Equals(_127121_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1c0109324_TypeKind>)((&(_127217_tk))))))) {
			_1c00671b6_pushErr(_self_.ptr(), _127121_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1be47511e_Str(_124242_e.ptr()))}));
		};
	};
}



inline jule::Bool _1c0072a62_checkEnumDecls(jule::Ptr<_1c0064504_Sema> _self_) {
	jule::Bool _128236_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c2212c11:;
		if (it != expr.end()) {
			jule::Ptr<_1be4736e4_Enum> _128321_e = *it;
			{
				_1c0072578_checkEnumDecl(_self_, _128321_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_128236_ok = false;
					return _128236_ok;
				};
			}
			_iter_next_1c2212c11:;
			++it;
			goto _iter_begin_1c2212c11;
		}
		_iter_end_1c2212c11:;
	};
	_128236_ok = true;
	return _128236_ok;
}



inline jule::Bool _1c0072cc6_checkTypeEnumDecls(jule::Ptr<_1c0064504_Sema> _self_) {
	jule::Bool _129440_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c22143e9:;
		if (it != expr.end()) {
			jule::Ptr<_1be474cde_TypeEnum> _129521_e = *it;
			{
				_1c00727ed_checkTypeEnumDecl(_self_, _129521_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_129440_ok = false;
					return _129440_ok;
				};
			}
			_iter_next_1c22143e9:;
			++it;
			goto _iter_begin_1c22143e9;
		}
		_iter_end_1c22143e9:;
	};
	_129440_ok = true;
	return _129440_ok;
}



inline jule::Bool _1c00730d4_checkDeclGenerics(_1c0064504_Sema* _self_, jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>& _130537_generics) {
	jule::Bool _130570_ok = jule::Bool();
	_130570_ok=true;
	{
		auto &expr = _130537_generics;
		auto it = expr.begin();
		_iter_begin_1c2215c36:;
		if (it != expr.end()) {
			jule::I64 _130713_i = it - expr.begin();
			jule::Ptr<_1be3a4108_GenericDecl> &_130716_g = *it;
			{
				if (_1d6760ca5_IsIgnoreIdent(_130716_g.get()._field_Ident)) {
					_1c00671b6_pushErr(&(*_self_), _130716_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_130570_ok=false;
					goto _iter_next_1c2215c36;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _130537_generics;
					auto it = expr.begin();
					_iter_begin_1c2216cd1:;
					if (it != expr.end()) {
						jule::I64 _131617_j = it - expr.begin();
						jule::Ptr<_1be3a4108_GenericDecl> &_131620_ct = *it;
						{
							{
								
								if ((_131617_j >= _130713_i)) {
									_case_begin_1c221862e:;
									{
										goto _iter_end_1c2216cd1;
									}
								}
								else if ((_130716_g.get()._field_Ident == _131620_ct.get()._field_Ident)) {
									_case_begin_1c22186a6:;
									{
										_1c00671b6_pushErr(&(*_self_), _130716_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_130716_g.get()._field_Ident)}));
										_1c00674d5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_130570_ok=false;
										goto _iter_end_1c2216cd1;
									}
								}
								_match_end_1c221850d:;
							};
						}
						_iter_next_1c2216cd1:;
						++it;
						_131617_j++;
						goto _iter_begin_1c2216cd1;
					}
					_iter_end_1c2216cd1:;
				};
			}
			_iter_next_1c2215c36:;
			++it;
			_130713_i++;
			goto _iter_begin_1c2215c36;
		}
		_iter_end_1c2215c36:;
	};
	return _130570_ok;
}



inline jule::Bool _1c00733e2_checkFnDeclParamsDup(_1c0064504_Sema* _self_, jule::Ptr<_1be45e6e1_Fn>& _133240_f) {
	jule::Bool _133250_ok = jule::Bool();
	_133250_ok=true;
	_julec_label_check:;
	{
		auto &expr = _133240_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c221aa2c:;
		if (it != expr.end()) {
			jule::I64 _133513_i = it - expr.begin();
			jule::Ptr<_1be45cda4_Param> &_133516_p = *it;
			{
				{
					auto &expr = _133240_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c221b797:;
					if (it != expr.end()) {
						jule::Ptr<_1be3a4108_GenericDecl> &_133720_g = *it;
						{
							if ((_133516_p.get()._field_Ident == _133720_g.get()._field_Ident)) {
								_133250_ok=false;
								_1c00671b6_pushErr(&(*_self_), _133516_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133516_p.get()._field_Ident)}));
								_1c00674d5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1c221aa2c;
							};
						}
						_iter_next_1c221b797:;
						++it;
						goto _iter_begin_1c221b797;
					}
					_iter_end_1c221b797:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _133240_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c221bc2b:;
					if (it != expr.end()) {
						jule::I64 _134717_j = it - expr.begin();
						jule::Ptr<_1be45cda4_Param> &_134720_jp = *it;
						{
							{
								
								if ((_134717_j >= _133513_i)) {
									_case_begin_1c221e02a:;
									{
										goto _iter_end_1c221bc2b;
									}
								}
								else if ((_1d676104c_IsAnonIdent(_133516_p.get()._field_Ident) || _1d676104c_IsAnonIdent(_134720_jp.get()._field_Ident))) {
									_case_begin_1c221e0a2:;
									{
										goto _iter_end_1c221bc2b;
									}
								}
								else if ((_133516_p.get()._field_Ident == _134720_jp.get()._field_Ident)) {
									_case_begin_1c221e129:;
									{
										_133250_ok=false;
										_1c00671b6_pushErr(&(*_self_), _133516_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_133516_p.get()._field_Ident)}));
										_1c00674d5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1c221aa2c;
									}
								}
								_match_end_1c221dde8:;
							};
						}
						_iter_next_1c221bc2b:;
						++it;
						_134717_j++;
						goto _iter_begin_1c221bc2b;
					}
					_iter_end_1c221bc2b:;
				};
			}
			_iter_next_1c221aa2c:;
			++it;
			_133513_i++;
			goto _iter_begin_1c221aa2c;
		}
		_iter_end_1c221aa2c:;
	};
	return _133250_ok;
}



inline jule::Bool _1c0073700_checkFnDeclResultDup(_1c0064504_Sema* _self_, jule::Ptr<_1be45e6e1_Fn>& _136640_f) {
	jule::Bool _136650_ok = jule::Bool();
	_136650_ok=true;
	if (_1be45eb53_IsVoid(_136640_f.ptr())) {
		return _136650_ok;
	};
	{
		auto &expr = _136640_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1c2221bed:;
		if (it != expr.end()) {
			jule::I64 _137313_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> &_137316_v = *it;
			{
				if ((_1d6760ca5_IsIgnoreIdent(_137316_v.get()._field_Kind) || _1d676104c_IsAnonIdent(_137316_v.get()._field_Kind))) {
					goto _iter_next_1c2221bed;
				};
				{
					auto &expr = _136640_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c222343b:;
					if (it != expr.end()) {
						jule::Ptr<_1be3a4108_GenericDecl> &_137820_g = *it;
						{
							if ((_137316_v.get()._field_Kind == _137820_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1c222343b:;
						++it;
						goto _iter_begin_1c222343b;
					}
					_iter_end_1c222343b:;
				};
				{
					auto &expr = _136640_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c22246c3:;
					if (it != expr.end()) {
						jule::Ptr<_1be45cda4_Param> &_138420_p = *it;
						{
							if ((_137316_v.get()._field_Kind == _138420_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1c22246c3:;
						++it;
						goto _iter_begin_1c22246c3;
					}
					_iter_end_1c22246c3:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _136640_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1c222596b:;
					if (it != expr.end()) {
						jule::I64 _139217_j = it - expr.begin();
						jule::Ptr<_1d675d511_Token> &_139220_jv = *it;
						{
							{
								
								if ((_139217_j >= _137313_i)) {
									_case_begin_1c2226708:;
									{
										goto _iter_end_1c222596b;
									}
								}
								else if ((_139220_jv.get()._field_Kind == _137316_v.get()._field_Kind)) {
									_case_begin_1c2226780:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1c22265d7:;
							};
						}
						_iter_next_1c222596b:;
						++it;
						_139217_j++;
						goto _iter_begin_1c222596b;
					}
					_iter_end_1c222596b:;
				};
				goto _iter_next_1c2221bed;
				_julec_label_exist:;
				_1c00671b6_pushErr(&(*_self_), _137316_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137316_v.get()._field_Kind)}));
				_1c00674d5_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_136650_ok=false;
			}
			_iter_next_1c2221bed:;
			++it;
			_137313_i++;
			goto _iter_begin_1c2221bed;
		}
		_iter_end_1c2221bed:;
	};
	return _136650_ok;
}



inline void _1c0073975_checkFnDeclPrototype(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be45e6e1_Fn>& _141345_f) {
	if ((_141345_f.get()._field_Exceptional && _141345_f.get()._field_CppLinked)) {
		_1c00671b6_pushErr(_self_.ptr(), _141345_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_141345_f.get()._field_Exceptional) {
		if (_1be46012b_IsEntryPoint(_141345_f.ptr())) {
			_1c00671b6_pushErr(_self_.ptr(), _141345_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1be460390_IsInit(_141345_f.ptr())) {
			_1c00671b6_pushErr(_self_.ptr(), _141345_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1c00730d4_checkDeclGenerics(_self_.ptr(), _141345_f.get()._field_Generics)))) {
			_case_begin_1c2229a6e:;
		}
		else if ((!(_1c00733e2_checkFnDeclParamsDup(_self_.ptr(), _141345_f)))) {
			_case_begin_1c222ae05:;
		}
		else if ((!(_1c0073700_checkFnDeclResultDup(_self_.ptr(), _141345_f)))) {
			_case_begin_1c222ae6b:;
		}
		_match_end_1c22298b5:;
	};
}



inline void _1c0073bea_checkTraitDeclMethod(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be45e6e1_Fn>& _143445_f) {
	if (_1d6760ca5_IsIgnoreIdent(_143445_f.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.ptr(), _143445_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_143445_f.get()._field_sema=_self_;
	_1c0073975_checkFnDeclPrototype(_self_, _143445_f);
	jule::Ptr<_1be462392_FnIns> _144117_ins = _1be460d41_instance(_143445_f);;
	_1c0070367_reloadFnInsTypes(_self_, _144117_ins);
	_144117_ins.get()._field_reloaded=true;
	_1be46111b_appendInstance(_143445_f.ptr(), _144117_ins);
}



inline void _1c0073e70_checkTraitDeclMethods(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be47159e_Trait>& _144746_t) {
	{
		auto &expr = _144746_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c222e4d0:;
		if (it != expr.end()) {
			jule::I64 _144814_i = it - expr.begin();
			jule::Ptr<_1be45e6e1_Fn> _144821_f = *it;
			{
				_1c0073bea_checkTraitDeclMethod(_self_, _144821_f);
				_144746_t.get()._field_Mutable=(_144746_t.get()._field_Mutable || _144821_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _144746_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c2231229:;
					if (it != expr.end()) {
						jule::I64 _145917_j = it - expr.begin();
						jule::Ptr<_1be45e6e1_Fn> _145920_jf = *it;
						{
							{
								
								if ((_145917_j >= _144814_i)) {
									_case_begin_1c22323b2:;
									{
										goto _iter_end_1c2231229;
									}
								}
								else if ((_144821_f.get()._field_Ident == _145920_jf.get()._field_Ident)) {
									_case_begin_1c2232439:;
									{
										_1c00671b6_pushErr(_self_.ptr(), _144821_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_144821_f.get()._field_Ident)}));
										_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1c2231229;
									}
								}
								_match_end_1c2232291:;
							};
						}
						_iter_next_1c2231229:;
						++it;
						_145917_j++;
						goto _iter_begin_1c2231229;
					}
					_iter_end_1c2231229:;
				};
			}
			_iter_next_1c222e4d0:;
			++it;
			_144814_i++;
			goto _iter_begin_1c222e4d0;
		}
		_iter_end_1c222e4d0:;
	};
}



inline void _1c00741e5_checkTraitDecl(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be47159e_Trait>& _147839_t) {
	if (_1d6760ca5_IsIgnoreIdent(_147839_t.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.ptr(), _147839_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c0067cdd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_147839_t)),_147839_t.get()._field_Ident,false)) {
		_1c00671b6_pushErr(_self_.ptr(), _147839_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_147839_t.get()._field_Ident)}));
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1c0073e70_checkTraitDeclMethods(_self_, _147839_t);
}



inline jule::Bool _1c0074459_checkTraitDecls(jule::Ptr<_1c0064504_Sema> _self_) {
	jule::Bool _149037_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c22363d8:;
		if (it != expr.end()) {
			jule::Ptr<_1be47159e_Trait> _149121_t = *it;
			{
				_1c00741e5_checkTraitDecl(_self_, _149121_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_149037_ok = false;
					return _149037_ok;
				};
			}
			_iter_next_1c22363d8:;
			++it;
			goto _iter_begin_1c22363d8;
		}
		_iter_end_1c22363d8:;
	};
	_149037_ok = true;
	return _149037_ok;
}



inline jule::Bool _1c0074811_checkTraitImplMethods(_1c0064504_Sema* _self_, jule::Ptr<_1be47159e_Trait>& _150145_base, jule::Ptr<_1be50ab22_Impl>& _150160_ipl) {
	jule::Bool _150174_ok = jule::Bool();
	_150174_ok=true;
	{
		auto &expr = _150160_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c2238165:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> &_150316_f = *it;
			{
				if ((_1be472429_FindMethod(_150145_base.ptr(), _150316_f.get()._field_Ident) == nullptr)) {
					_1c00671b6_pushErr(&(*_self_), _150316_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_150145_base.get()._field_Ident),jule::Any(_150316_f.get()._field_Ident)}));
					_150174_ok=false;
				};
			}
			_iter_next_1c2238165:;
			++it;
			goto _iter_begin_1c2238165;
		}
		_iter_end_1c2238165:;
	};
	return _150174_ok;
}



inline jule::Bool _1c0074bb8_implToStruct(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be387251_Struct>& _151237_dest, jule::Ptr<_1be50ab22_Impl>& _151257_ipl) {
	jule::Bool _151271_ok = jule::Bool();
	_151271_ok=true;
	{
		auto &expr = _151257_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c223a4a8:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _151621_f = *it;
			{
				if (((_1be37666e_FindMethod(_151237_dest.ptr(), _151621_f.get()._field_Ident,_151621_f.get()._field_Statically) != nullptr) || (_1be376ac0_FindField(_151237_dest.ptr(), _151621_f.get()._field_Ident) != nullptr))) {
					_1c00671b6_pushErr(_self_.ptr(), _151621_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_151237_dest.get()._field_Ident),jule::Any(_151621_f.get()._field_Ident)}));
					_151271_ok=false;
					goto _iter_next_1c223a4a8;
				};
				if (((_151237_dest.get()._field_Generics.len() > 0LL) && (_151621_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _151621_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1c223caa4:;
						if (it != expr.end()) {
							jule::Ptr<_1be3a4108_GenericDecl> _152424_fg = *it;
							{
								{
									auto &expr = _151237_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1c223d3e0:;
									if (it != expr.end()) {
										jule::Ptr<_1be3a4108_GenericDecl> _152528_dg = *it;
										{
											if ((_152424_fg.get()._field_Ident == _152528_dg.get()._field_Ident)) {
												_1c00671b6_pushErr(_self_.ptr(), _152424_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_151271_ok=false;
											};
										}
										_iter_next_1c223d3e0:;
										++it;
										goto _iter_begin_1c223d3e0;
									}
									_iter_end_1c223d3e0:;
								};
							}
							_iter_next_1c223caa4:;
							++it;
							goto _iter_begin_1c223caa4;
						}
						_iter_end_1c223caa4:;
					};
				};
				_1c006810c_checkDirectives(_self_, _151621_f.get()._field_Directives,jule::Any(_151621_f));
				_151621_f.get()._field_sema=_self_;
				_151621_f.get()._field_Owner=_151237_dest;
				_151237_dest.get()._field_Methods = jule::alloc_for_append(_151237_dest.get()._field_Methods,1);_151237_dest.get()._field_Methods.__push(_151621_f);;
			}
			_iter_next_1c223a4a8:;
			++it;
			goto _iter_begin_1c223a4a8;
		}
		_iter_end_1c223a4a8:;
	};
	{
		auto &expr = _151257_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1c22402d2:;
		if (it != expr.end()) {
			jule::Ptr<_1c0081334_Var> _154121_v = *it;
			{
				;
				if (((_1be37666e_FindMethod(_151237_dest.ptr(), _154121_v.get()._field_Ident,true) != nullptr) || (_1be377681_FindStatic(_151237_dest.ptr(), _154121_v.get()._field_Ident) != nullptr))) {
					_1c00671b6_pushErr(_self_.ptr(), _154121_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_151237_dest.get()._field_Ident),jule::Any(_154121_v.get()._field_Ident)}));
					_151271_ok=false;
					goto _iter_next_1c22402d2;
				};
				_1c0075757_checkVarDecl(_self_, _154121_v,jule::Trait<_1c0124e55_Lookup>(_self_, 3));
				_1c0078d98_checkTypeVar(_self_, _154121_v,jule::Trait<_1c0124e55_Lookup>(_self_, 3));
				_151237_dest.get()._field_Statics = jule::alloc_for_append(_151237_dest.get()._field_Statics,1);_151237_dest.get()._field_Statics.__push(_154121_v);;
			}
			_iter_next_1c22402d2:;
			++it;
			goto _iter_begin_1c22402d2;
		}
		_iter_end_1c22402d2:;
	};
	return _151271_ok;
}



inline void _1c0074e3d_implTrait(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be50ab22_Impl>& _155634_decl) {
	jule::Ptr<_1c0109324_TypeKind> _155717_base_t = _1c006c067_selectType(_self_, _155634_decl.get()._field_Base);;
	if ((_155717_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1be47159e_Trait> _156117_base = _1c010caec_Trait(_155717_base_t.ptr());;
	if ((_156117_base == nullptr)) {
		_1c00671b6_pushErr(_self_.ptr(), _155634_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_155717_base_t.ptr()))}));
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0109324_TypeKind> _156817_destT = _1c006c067_selectType(_self_, _155634_decl.get()._field_Dest);;
	if ((_156817_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1be3b359b_StructIns> _157217_destS = _1c010c888_Struct(_156817_destT.ptr());;
	if ((_157217_destS == nullptr)) {
		_1c00671b6_pushErr(_self_.ptr(), _155634_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_156817_destT.ptr()))}));
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1be387251_Struct> _157917_dest = _157217_destS.get()._field_Decl;;
	if ((_1d6764292_Dir(_157917_dest.get()._field_Token.get()._field_File.ptr()) != _1d6764292_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1c00671b6_pushErr(_self_.ptr(), _155634_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_156117_base.get()._field_Implemented = jule::alloc_for_append(_156117_base.get()._field_Implemented,1);_156117_base.get()._field_Implemented.__push(_157917_dest);;
	_157917_dest.get()._field_Implements = jule::alloc_for_append(_157917_dest.get()._field_Implements,1);_157917_dest.get()._field_Implements.__push(_156117_base);;
	if ((_155634_decl.get()._field_Statics.len() > 0LL)) {
		_1c00671b6_pushErr(_self_.ptr(), _155634_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1c0074811_checkTraitImplMethods(_self_.ptr(), _156117_base,_155634_decl)))) {
			_case_begin_1c224ac16:;
			{
				return;;
			}
		}
		else if ((!(_1c0074bb8_implToStruct(_self_, _157917_dest,_155634_decl)))) {
			_case_begin_1c224ac7c:;
			{
				return;;
			}
		}
		_match_end_1c2249dbe:;
	};
}



inline void _1c00751b3_implStruct(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be50ab22_Impl>& _160135_decl) {
	jule::Ptr<_1c0109324_TypeKind> _160217_destT = _1c006c067_selectType(_self_, _160135_decl.get()._field_Dest);;
	if ((_160217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1be3b359b_StructIns> _160617_destS = _1c010c888_Struct(_160217_destT.ptr());;
	if ((_160617_destS == nullptr)) {
		_1c00671b6_pushErr(_self_.ptr(), _160135_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_160217_destT.ptr()))}));
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1be387251_Struct> _161317_dest = _160617_destS.get()._field_Decl;;
	if ((_1d6764292_Dir(_161317_dest.get()._field_Token.get()._field_File.ptr()) != _1d6764292_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1c00671b6_pushErr(_self_.ptr(), _160135_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1c0074bb8_implToStruct(_self_, _161317_dest,_160135_decl)))) {
			_case_begin_1c225080e:;
			{
				return;;
			}
		}
		_match_end_1c224e1ae:;
	};
}



inline void _1c0075438_implImpl(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be50ab22_Impl>& _162633_decl) {
	{
		
		if (_1be4daaad_IsTraitImpl(_162633_decl.ptr())) {
			_case_begin_1c2251403:;
			{
				_1c0074e3d_implTrait(_self_, _162633_decl);
			}
		}
		else if (_1be4db30b_IsStructImpl(_162633_decl.ptr())) {
			_case_begin_1c225147a:;
			{
				_1c00751b3_implStruct(_self_, _162633_decl);
			}
		}
		_match_end_1c22512d2:;
	};
}



inline void _1c0075757_checkVarDecl(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1c0081334_Var>& _163737_decl, jule::Trait<_1c0124e55_Lookup> _163753_l) {
	if (_1d6760ca5_IsIgnoreIdent(_163737_decl.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1c0081950_IsTypeInferred(_163737_decl.ptr())) {
		if ((!(_1c00816db_IsInitialized(_163737_decl.ptr())))) {
			_1c00671b6_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1c006b4ea_checkType(_self_, _163737_decl.get()._field_Kind,_163753_l);
	};
	if ((_163737_decl.get()._field_Constant && _163737_decl.get()._field_Reference)) {
		_1c00671b6_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1c00816db_IsInitialized(_163737_decl.ptr())))) {
		if (_163737_decl.get()._field_Constant) {
			_1c00671b6_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_163737_decl.get()._field_Statically) {
			_1c00671b6_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_163737_decl.get()._field_Reference) {
			_1c00671b6_pushErr(_self_.ptr(), _163737_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1c00759cc_checkGlobalVarDecl(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1c0081334_Var>& _166943_decl) {
	if (_1c0067cdd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166943_decl)),_166943_decl.get()._field_Ident,_166943_decl.get()._field_CppLinked)) {
		_1c00671b6_pushErr(_self_.ptr(), _166943_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_166943_decl.get()._field_Ident)}));
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_166943_decl.get()._field_CppLinked && _166943_decl.get()._field_Constant)) {
		_1c00671b6_pushErr(_self_.ptr(), _166943_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_166943_decl.get()._field_CppLinked)) && (!(_166943_decl.get()._field_Constant))) && (!(_166943_decl.get()._field_Statically)))) {
		_1c00671b6_pushErr(_self_.ptr(), _166943_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1c006810c_checkDirectives(_self_, _166943_decl.get()._field_Directives,jule::Any(_166943_decl));
	_1c0075757_checkVarDecl(_self_, _166943_decl,jule::Trait<_1c0124e55_Lookup>(_self_, 3));
}



inline jule::Bool _1c0075c41_checkGlobalDecls(jule::Ptr<_1c0064504_Sema> _self_) {
	jule::Bool _168638_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c225ae13:;
		if (it != expr.end()) {
			jule::Ptr<_1c0081334_Var> _168721_decl = *it;
			{
				_1c00759cc_checkGlobalVarDecl(_self_, _168721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_168638_ok = false;
					return _168638_ok;
				};
			}
			_iter_next_1c225ae13:;
			++it;
			goto _iter_begin_1c225ae13;
		}
		_iter_end_1c225ae13:;
	};
	_168638_ok = true;
	return _168638_ok;
}



inline jule::Bool _1c00760e8_checkStructTraitImpl(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be387251_Struct>& _169745_strct, jule::Ptr<_1be47159e_Trait>& _169766_trt) {
	jule::Bool _169781_ok = jule::Bool();
	{
		auto &expr = _169766_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c225c93c:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _169821_tf = *it;
			{
				jule::Bool _169921_exist = false;;
				jule::Ptr<_1be45e6e1_Fn> _170021_sf = _1be37666e_FindMethod(_169745_strct.ptr(), _169821_tf.get()._field_Ident,_169821_tf.get()._field_Statically);;
				jule::Ptr<_1be462392_FnIns> _170117_tfK = _1c006e07a_getTraitCheckFnKind(_self_, _169821_tf);;
				if ((_170021_sf != nullptr)) {
					jule::Ptr<_1be462392_FnIns> _170325_sfK = _1c006e07a_getTraitCheckFnKind(_self_, _170021_sf);;
					_169921_exist=(((_170117_tfK.get()._field_Decl.get()._field_Public == _170325_sfK.get()._field_Decl.get()._field_Public) && (_170117_tfK.get()._field_Decl.get()._field_Ident == _170325_sfK.get()._field_Decl.get()._field_Ident)) && _1be463250_equalsTrait(_170117_tfK, _170325_sfK));
				};
				if (_169921_exist) {
					jule::Ptr<_1be36332b_Directive> _170921_d = _1c0103a6b_findDirective(_170021_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_170921_d != nullptr)) {
						_1c00671b6_pushErr(_self_.ptr(), _170921_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_169781_ok=false;
				} else {
					;
					jule::Str _171625_s = _1be4640a8_GetKindStr(_170117_tfK.ptr(), true);;
					if (_169821_tf.get()._field_Public) {
						(_171625_s).buffer.insert(0, (jule::Str()));;
					};
					_1c00671b6_pushErr(_self_.ptr(), _169745_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_169766_trt.get()._field_Ident),jule::Any(_171625_s)}));
					_169781_ok=false;
				};
			}
			_iter_next_1c225c93c:;
			++it;
			goto _iter_begin_1c225c93c;
		}
		_iter_end_1c225c93c:;
	};
	return _169781_ok;
}



inline jule::Bool _1c0076406_checkStructImpls(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be387251_Struct>& _172741_s) {
	jule::Bool _172755_ok = jule::Bool();
	_172755_ok=true;
	{
		auto &expr = _172741_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1c22645ae:;
		if (it != expr.end()) {
			jule::Ptr<_1be47159e_Trait> _172921_trt = *it;
			{
				_172755_ok=(_1c00760e8_checkStructTraitImpl(_self_, _172741_s,_172921_trt) && _172755_ok);
			}
			_iter_next_1c22645ae:;
			++it;
			goto _iter_begin_1c22645ae;
		}
		_iter_end_1c22645ae:;
	};
	return _172755_ok;
}



inline jule::Bool _1c0076714_checkStructFields(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be387251_Struct>& _173542_st) {
	jule::Bool _173557_ok = jule::Bool();
	_173557_ok=true;
	{
		auto &expr = _173542_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c2265a00:;
		if (it != expr.end()) {
			jule::Ptr<_1be37971b_Field> _173721_f = *it;
			{
				_173721_f.get()._field_Owner=_173542_st;
				{
					auto &expr = _173542_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1c22665e4:;
					if (it != expr.end()) {
						jule::Ptr<_1be37971b_Field> _173920_cf = *it;
						{
							if ((_173721_f == _173920_cf)) {
								goto _iter_end_1c22665e4;
							} else if ((_173721_f.get()._field_Ident == _173920_cf.get()._field_Ident)) {
								_1c00671b6_pushErr(_self_.ptr(), _173721_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_173721_f.get()._field_Ident)}));
								_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_173557_ok=false;
							};
						}
						_iter_next_1c22665e4:;
						++it;
						goto _iter_begin_1c22665e4;
					}
					_iter_end_1c22665e4:;
				};
			}
			_iter_next_1c2265a00:;
			++it;
			goto _iter_begin_1c2265a00;
		}
		_iter_end_1c2265a00:;
	};
	return _173557_ok;
}



inline void _1c0076989_checkStructDecl(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be387251_Struct>& _175240_s) {
	if (_1d6760ca5_IsIgnoreIdent(_175240_s.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.ptr(), _175240_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1c0067cdd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_175240_s)),_175240_s.get()._field_Ident,_175240_s.get()._field_CppLinked)) {
		_1c00671b6_pushErr(_self_.ptr(), _175240_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_175240_s.get()._field_Ident)}));
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1c006810c_checkDirectives(_self_, _175240_s.get()._field_Directives,jule::Any(_175240_s));
	{
		
		if ((!(_1c00730d4_checkDeclGenerics(_self_.ptr(), _175240_s.get()._field_Generics)))) {
			_case_begin_1c226a52c:;
		}
		else if ((!(_1c0076714_checkStructFields(_self_, _175240_s)))) {
			_case_begin_1c226a593:;
		}
		else if ((!(_1c0076406_checkStructImpls(_self_, _175240_s)))) {
			_case_begin_1c226a609:;
		}
		_match_end_1c226a3d9:;
	};
}



inline jule::Bool _1c0076bed_checkStructDecls(jule::Ptr<_1c0064504_Sema> _self_) {
	jule::Bool _177038_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c226b8e6:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> _177121_s = *it;
			{
				_1c0076989_checkStructDecl(_self_, _177121_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_177038_ok = false;
					return _177038_ok;
				};
			}
			_iter_next_1c226b8e6:;
			++it;
			goto _iter_begin_1c226b8e6;
		}
		_iter_end_1c226b8e6:;
	};
	_177038_ok = true;
	return _177038_ok;
}



inline void _1c0076e73_checkFnDecl(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be45e6e1_Fn>& _178136_f) {
	if (_1d6760ca5_IsIgnoreIdent(_178136_f.get()._field_Ident)) {
		_1c00671b6_pushErr(_self_.ptr(), _178136_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1c006810c_checkDirectives(_self_, _178136_f.get()._field_Directives,jule::Any(_178136_f));
	_178136_f.get()._field_sema=_self_;
	_1c0073975_checkFnDeclPrototype(_self_, _178136_f);
	if (_1c0067cdd_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178136_f)),_178136_f.get()._field_Ident,_178136_f.get()._field_CppLinked)) {
		if ((_178136_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1be45e6e1_Fn> _179321_init = _1c0065cec_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_179321_init != nullptr)) {
				return;;
			};
		};
		_1c00671b6_pushErr(_self_.ptr(), _178136_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_178136_f.get()._field_Ident)}));
		_1c00674d5_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c00771d7_checkFnDecls(jule::Ptr<_1c0064504_Sema> _self_) {
	jule::Bool _180434_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c2abab7e:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _180521_f = *it;
			{
				_1c0076e73_checkFnDecl(_self_, _180521_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_180434_ok = false;
					return _180434_ok;
				};
			}
			_iter_next_1c2abab7e:;
			++it;
			goto _iter_begin_1c2abab7e;
		}
		_iter_end_1c2abab7e:;
	};
	_180434_ok = true;
	return _180434_ok;
}



inline void _1c00775a0_pushCycleError(_1c0064504_Sema* _self_, jule::Ptr<_1be387251_Struct>& _181530_st1, jule::Ptr<_1be387251_Struct>& _181545_st2, jule::Str& _181564_message) {
	;
	jule::Str _181713_refers_to = _1d6435c44_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_181530_st1.get()._field_Ident),jule::Any(_181545_st2.get()._field_Ident)}));;
	(_181564_message).buffer.insert(0, (((_200a79329_Repeat(jule::Str(" ", 1),4LL) + _181713_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c0077a01_checkCrossCycle(_1c0064504_Sema* _self_, jule::Ptr<_1be387251_Struct>& _182131_st1, jule::Ptr<_1be387251_Struct>& _182146_st2, jule::Str& _182165_message) {
	{
		auto &expr = _182146_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1c2abe226:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> &_182216_u = *it;
			{
				if ((_182216_u == _182131_st1)) {
					_1c00775a0_pushCycleError(&(*_self_), _182146_st2,_182216_u,_182165_message);
					return false;
				};
				if ((!(_1c0077a01_checkCrossCycle(&(*_self_), _182131_st1,_182216_u,_182165_message)))) {
					_1c00775a0_pushCycleError(&(*_self_), _182146_st2,_182216_u,_182165_message);
					return false;
				};
			}
			_iter_next_1c2abe226:;
			++it;
			goto _iter_begin_1c2abe226;
		}
		_iter_end_1c2abe226:;
	};
	return true;
}



inline jule::Bool _1c0077e74_checkStructDeriveIllegalCycles(_1c0064504_Sema* _self_, jule::Str _183649_derive, jule::Ptr<_1be387251_Struct>& _183663_st1, jule::Ptr<_1c0109324_TypeKind>& _183682_k) {
	jule::Bool _183698_ok = jule::Bool();
	jule::Ptr<_1be387251_Struct> _183717_st2 = _1c012256d_getStructFromKind(_183682_k);;
	if ((_183717_st2 == nullptr)) {
		_183698_ok = true;
		return _183698_ok;
	};
	if ((_183663_st1 == _183717_st2)) {
		_1c00671b6_pushErr(&(*_self_), _183663_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_183649_derive),jule::Any(_183663_st1.get()._field_Ident)}));
		_183698_ok = false;
		return _183698_ok;
	};
	jule::Str _184917_message = jule::Str();;
	if ((!(_1c0077a01_checkCrossCycle(&(*_self_), _183663_st1,_183717_st2,_184917_message)))) {
		jule::Str _185121_errMsg = _184917_message;;
		_184917_message=jule::Str();
		_1c00775a0_pushCycleError(&(*_self_), _183663_st1,_183717_st2,_184917_message);
		_185121_errMsg=(_185121_errMsg + _184917_message);
		_1c00671b6_pushErr(&(*_self_), _183663_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_183649_derive),jule::Any(_185121_errMsg)}));
		_183698_ok = false;
		return _183698_ok;
	};
	_183698_ok = true;
	return _183698_ok;
}



inline jule::Bool _1c00782b5_checkStructInsDeriveClone(_1c0064504_Sema* _self_, jule::Ptr<_1be3b359b_StructIns> _186148_st) {
	jule::Bool _186166_ok = jule::Bool();
	if ((!(_1be3782a8_IsDerives(_186148_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		_186166_ok = true;
		return _186166_ok;
	};
	{
		auto &expr = _186148_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c2ac5969:;
		if (it != expr.end()) {
			jule::Ptr<_1be38e8b8_FieldIns> _186521_f = *it;
			{
				if ((_186521_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1c2ac5969;
				};
				if ((!(_1c010ae5d_SupportsCloning(_186521_f.get()._field_Kind.ptr())))) {
					_1c00671b6_pushErr(&(*_self_), _186148_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_186521_f.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_186166_ok = false;
					return _186166_ok;
				};
				if ((!(_1c0077e74_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_186148_st.get()._field_Decl,_186521_f.get()._field_Kind)))) {
					_186166_ok = false;
					return _186166_ok;
				};
			}
			_iter_next_1c2ac5969:;
			++it;
			goto _iter_begin_1c2ac5969;
		}
		_iter_end_1c2ac5969:;
	};
	_186166_ok = true;
	return _186166_ok;
}



inline void _1c00784a2_checkPackageDecls(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c2ac6063:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _188321_f = *it;
			{
				_1c0066ced_setCurrentFile(_self_.ptr(), _188321_f);
				if ((!(_1c0072cc6_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1c0071a83_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c2ac6063:;
			++it;
			goto _iter_begin_1c2ac6063;
		}
		_iter_end_1c2ac6063:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c2ac85e8:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _189321_f = *it;
			{
				_1c0066ced_setCurrentFile(_self_.ptr(), _189321_f);
				if ((!(_1c0074459_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c2ac85e8:;
			++it;
			goto _iter_begin_1c2ac85e8;
		}
		_iter_end_1c2ac85e8:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c2ac971a:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _190021_f = *it;
			{
				_1c0066ced_setCurrentFile(_self_.ptr(), _190021_f);
				if ((!(_1c0075c41_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c2ac971a:;
			++it;
			goto _iter_begin_1c2ac971a;
		}
		_iter_end_1c2ac971a:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c2ac9c37:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _190721_f = *it;
			{
				_1c0066ced_setCurrentFile(_self_.ptr(), _190721_f);
				{
					
					if ((!(_1c00771d7_checkFnDecls(_self_)))) {
						_case_begin_1c2acbe6a:;
					}
					else if ((!(_1c0076bed_checkStructDecls(_self_)))) {
						_case_begin_1c2acbed1:;
					}
					else {
						_case_begin_1c2acbe04:;
						{
							goto _iter_next_1c2ac9c37;
						}
					}
					_match_end_1c2acbd8d:;
				};
				return;;
			}
			_iter_next_1c2ac9c37:;
			++it;
			goto _iter_begin_1c2ac9c37;
		}
		_iter_end_1c2ac9c37:;
	};
}



inline void _1c00787e3_checkDataForTypeInference(_1c0064504_Sema* _self_, jule::Ptr<_1c00cd282_Data>& _191945_d, jule::Ptr<_1d675d511_Token>& _191956_err_token) {
	{
		
		if (_1c00cd66c_IsNil(_191945_d.ptr())) {
			_case_begin_1c2acce8d:;
			{
				_1c00671b6_pushErr(&(*_self_), _191956_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1c00cd8d1_IsVoid(_191945_d.ptr())) {
			_case_begin_1c2acd015:;
			{
				_1c00671b6_pushErr(&(*_self_), _191956_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_191945_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1c2acd08c:;
			{
				_1c00671b6_pushErr(&(*_self_), _191956_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c2accd5b:;
	};
}



inline void _1c0078a79_checkVar(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1c0081334_Var>& _193033_v) {
	if (_193033_v.get()._field_CppLinked) {
		return;;
	};
	if (_1c0081950_IsTypeInferred(_193033_v.ptr())) {
		_193033_v.get()._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=_193033_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_1c00787e3_checkDataForTypeInference(_self_.ptr(), _193033_v.get()._field_Value.get()._field_Data,_193033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_1c0070db2_checkValidityForInitExpr(_self_, _193033_v.get()._field_Mutable,_193033_v.get()._field_Reference,_193033_v.get()._field_Kind.get()._field_Kind,_193033_v.get()._field_Value.get()._field_Data,_193033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_1c0115187_Arr> _194721_arr = _1c010c14b_Arr(_193033_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_194721_arr != nullptr)) {
			if (_194721_arr.get()._field_Auto) {
				jule::Ptr<_1c0115187_Arr> _195025_dataArr = _1c010c14b_Arr(_193033_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_195025_dataArr != nullptr)) {
					_194721_arr.get()._field_N=_195025_dataArr.get()._field_N;
				};
			};
		};
		if (_1c006d178_checkAssignType(_self_, _193033_v.get()._field_Reference,_193033_v.get()._field_Kind.get()._field_Kind,_193033_v.get()._field_Value.get()._field_Data,_193033_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1c0070db2_checkValidityForInitExpr(_self_, _193033_v.get()._field_Mutable,_193033_v.get()._field_Reference,_193033_v.get()._field_Kind.get()._field_Kind,_193033_v.get()._field_Value.get()._field_Data,_193033_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_193033_v.get()._field_Reference && (!(_1c01218d0_isValidForRef(_193033_v.get()._field_Kind.get()._field_Kind))))) {
		_1c00671b6_pushErr(_self_.ptr(), _193033_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_193033_v.get()._field_Kind.get()._field_Kind.ptr()))}));
	};
	if (_193033_v.get()._field_Constant) {
		if ((!(_1c00cdb45_IsConst(_193033_v.get()._field_Value.get()._field_Data.ptr())))) {
			_1c00671b6_pushErr(_self_.ptr(), _193033_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_193033_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1c010d0c5_Tup(_193033_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_193033_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1c0078d98_checkTypeVar(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1c0081334_Var>& _198537_decl, jule::Trait<_1c0124e55_Lookup> _198553_l) {
	if ((_198537_decl.get()._field_CppLinked || (!(_1c00816db_IsInitialized(_198537_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1c00ced00_Eval> _199017_eval = nullptr;;
	if ((_198537_decl.get()._field_Kind != nullptr)) {
		_199017_eval=_1c006c4b8_evalpd(_self_, _198553_l,_198537_decl.get()._field_Kind.get()._field_Kind,_198537_decl);
	} else {
		_199017_eval=_1c006c4b8_evalpd(_self_, _198553_l,nullptr,_198537_decl);
	};
	_199017_eval.get()._field_immutable=(!(_198537_decl.get()._field_Mutable));
	_198537_decl.get()._field_Value.get()._field_Data=_1c00eaab8_evalExpr(_199017_eval, _198537_decl.get()._field_Value.get()._field_Expr);
	if ((_198537_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1c0078a79_checkVar(_self_, _198537_decl);
}



inline void _1c0079074_checkGlobalTypes(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c2adc200:;
		if (it != expr.end()) {
			jule::Ptr<_1c0081334_Var> _200621_decl = *it;
			{
				if (((_1c00816db_IsInitialized(_200621_decl.ptr()) && (_200621_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1c0081950_IsTypeInferred(_200621_decl.ptr()) && (_200621_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1c0078d98_checkTypeVar(_self_, _200621_decl,jule::Trait<_1c0124e55_Lookup>(_self_, 3));
				};
			}
			_iter_next_1c2adc200:;
			++it;
			goto _iter_begin_1c2adc200;
		}
		_iter_end_1c2adc200:;
	};
}



inline jule::Ptr<_1be462392_FnIns> _1c007942b_readyToCheckFn(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be3b359b_StructIns>& _201739_s, jule::Ptr<_1be45e6e1_Fn>& _201759_f) {
	jule::Ptr<_1be462392_FnIns> _201817_ins = _1be460d41_instance(_201759_f);;
	if ((_201759_f.get()._field_Instances.len() != 0LL)) {
		return _201817_ins;
	};
	_201817_ins.get()._field_Owner=_201739_s;
	_1be46111b_appendInstance(_201759_f.ptr(), _201817_ins);
	_201817_ins.get()._field_reloaded=true;
	if (_1c0070367_reloadFnInsTypes(_self_, _201817_ins)) {
		return _201817_ins;
	};
	return nullptr;
}



inline void _1c007974a_checkTypeMethod(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be3b359b_StructIns>& _203140_s, jule::Ptr<_1be45e6e1_Fn>& _203160_f) {
	if ((_203160_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1be462392_FnIns> _203617_ins = _203160_f.get()._field_Instances[0LL];;
	if ((_203617_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1c007be23_checkFnIns(_self_, _203617_ins);
}



inline jule::Ptr<_1be462392_FnIns> _1c0079b9b_checkStructInsOp(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be3b359b_StructIns>& _204441_s, jule::Ptr<_1be45e6e1_Fn>& _204461_f, jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)> _204469_p) {
	if ((((_204461_f == nullptr) || (_204461_f.get()._field_Generics.len() > 0LL)) || (!(_204469_p(_204461_f))))) {
		return nullptr;
	};
	return _204461_f.get()._field_Instances[0LL];
}



inline jule::Bool _1c007a053_checkStructEnv(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be3b359b_StructIns>& _205439_s, jule::Ptr<_1d675d511_Token> _205458_errorToken) {
	jule::Bool _205480_ok = jule::Bool();
	_1c011784e_typeChecker _205517_tc = _1c011784e_typeChecker{._field_s=_205439_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1c0124e55_Lookup>(_205439_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1c0124e55_Lookup>(_205439_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1c0116a3a_referencer>(_1c0116a3a_referencer{._field_ident=_205439_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_205439_s.get()._field_Decl), }), ._field_refers=_205439_s.get()._field_Refers, };;
	if ((_205439_s.get()._field_Generics.len() > 0LL)) {
		_205517_tc._field_useGenerics=jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>::alloc(0LL,_205439_s.get()._field_Generics.len());
		{
			auto &expr = _205439_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c2ae655b:;
			if (it != expr.end()) {
				jule::I64 _206818_i = it - expr.begin();
				jule::Ptr<_1c0107ae7_InsGeneric> _206825_g = *it;
				{
					_205517_tc._field_useGenerics = jule::alloc_for_append(_205517_tc._field_useGenerics,1);_205517_tc._field_useGenerics.__push(jule::new_ptr<_1c0108631_TypeAlias>(_1c0108631_TypeAlias{._field_Ident=_205439_s.get()._field_Decl.get()._field_Generics[_206818_i].get()._field_Ident, ._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=_206825_g.get()._field_Kind}), }));;
				}
				_iter_next_1c2ae655b:;
				++it;
				_206818_i++;
				goto _iter_begin_1c2ae655b;
			}
			_iter_end_1c2ae655b:;
		};
	};
	jule::Ptr<_1c00c8524_SymbolTable> _207617_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1c0066ced_setCurrentFile(_self_.ptr(), _207617_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _205439_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1c00c8524_SymbolTable> _208021_file = _1c0063b0d_findFile(_self_.get()._field_files,_205439_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_208021_file != nullptr)) {
			_1c0066ced_setCurrentFile(_self_.ptr(), _208021_file);
		};
	};
	if ((_205439_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1be48c8d9_constraintChecker> _208721_cc = _1c006b143_constraintChecker(_self_);;
		_208721_cc.get()._field_et=_205458_errorToken;
		_208721_cc.get()._field_si=_205439_s;
		_208721_cc.get()._field_genericsA=_205517_tc._field_useGenerics;
		_208721_cc.get()._field_uniq=true;
		if ((!(_1be4d757c_check(_208721_cc)))) {
			return _205480_ok;
		};
	};
	jule::Ptr<_1c00ced00_Eval> _209717_eval = _1c006cb7d_eval(_self_, jule::Trait<_1c0124e55_Lookup>(_self_, 3));;
	_205480_ok=true;
	{
		auto &expr = _205439_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c2aec6e9:;
		if (it != expr.end()) {
			jule::Ptr<_1be38e8b8_FieldIns> _209921_f = *it;
			{
				jule::Ptr<_1c0109324_TypeKind> _210021_kind = _1c011eaba_checkDecl(&_205517_tc, _209921_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				_205480_ok=((_210021_kind != nullptr) && _205480_ok);
				if ((_210021_kind == nullptr)) {
					if (((_self_ != _205439_s.get()._field_Decl.get()._field_sema) && (_205439_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_205439_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_205439_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1c2aec6e9;
				};
				_209921_f.get()._field_Kind=_210021_kind;
				_205439_s.get()._field_Mutable=(_205439_s.get()._field_Mutable || ((!(_209921_f.get()._field_Decl.get()._field_Mutable)) && _1c010a721_Mutable(_209921_f.get()._field_Kind.ptr())));
				_1c00782b5_checkStructInsDeriveClone(_self_.ptr(), _205439_s);
				if ((_209921_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1c2aec6e9;
				};
				_209717_eval.get()._field_prefix=_209921_f.get()._field_Kind;
				_209717_eval.get()._field_field=_209921_f;
				_209921_f.get()._field_Default=_1c00eaab8_evalExpr(_209717_eval, _209921_f.get()._field_Decl.get()._field_Default);
				if ((_209921_f.get()._field_Default == nullptr)) {
					goto _iter_next_1c2aec6e9;
				};
				;
				_1c006d178_checkAssignType(_self_, false,_209921_f.get()._field_Kind,_209921_f.get()._field_Default,_209921_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1c2aec6e9:;
			++it;
			goto _iter_begin_1c2aec6e9;
		}
		_iter_end_1c2aec6e9:;
	};
	return _205480_ok;
}



inline jule::Bool _1c007a40a_precheckStructIns(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be3b359b_StructIns>& _213342_s, jule::Ptr<_1d675d511_Token> _213361_errorToken) {
	jule::Bool _213383_ok = jule::Bool();
	_213383_ok=_1c007a053_checkStructEnv(_self_, _213342_s,_213361_errorToken);
	if ((!(_213383_ok))) {
		_213383_ok = false;
		return _213383_ok;
	};
	{
		auto &expr = _213342_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c2b04190:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _213821_f = *it;
			{
				if ((_213821_f.get()._field_Generics.len() == 0LL)) {
					if ((_1c007942b_readyToCheckFn(_self_, _213342_s,_213821_f) == nullptr)) {
						_213383_ok = false;
						return _213383_ok;
					};
				};
			}
			_iter_next_1c2b04190:;
			++it;
			goto _iter_begin_1c2b04190;
		}
		_iter_end_1c2b04190:;
	};
	_213383_ok = true;
	return _213383_ok;
}



inline void _1c007a680_checkStructIns(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be3b359b_StructIns>& _214839_s) {
	{
		auto &expr = _214839_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c2b05c41:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _214921_f = *it;
			{
				_1c007974a_checkTypeMethod(_self_, _214839_s,_214921_f);
			}
			_iter_next_1c2b05c41:;
			++it;
			goto _iter_begin_1c2b05c41;
		}
		_iter_end_1c2b05c41:;
	};
}



inline void _1c007a905_checkTypeStruct(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be387251_Struct>& _215440_s) {
	if (_215440_s.get()._field_CppLinked) {
		return;;
	};
	if ((_215440_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _215440_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c2b0724d:;
		if (it != expr.end()) {
			jule::Ptr<_1be3b359b_StructIns> _216721_ins = *it;
			{
				_1c007a680_checkStructIns(_self_, _216721_ins);
			}
			_iter_next_1c2b0724d:;
			++it;
			goto _iter_begin_1c2b0724d;
		}
		_iter_end_1c2b0724d:;
	};
}



inline void _1c007aad1_checkStructTypes(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c2b07d64:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> _217321_s = *it;
			{
				_1c007a905_checkTypeStruct(_self_, _217321_s);
			}
			_iter_next_1c2b07d64:;
			++it;
			goto _iter_begin_1c2b07d64;
		}
		_iter_end_1c2b07d64:;
	};
}



inline void _1c007ad78_checkStructInsOperators(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be3b359b_StructIns> _217847_s) {
	{
		auto &expr = _217847_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c2b091b7:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _217921_m = *it;
			{
				{
					auto &_match_expr{ _217921_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1c2b09e43:;
						{
							_217847_s.get()._field_Operators._field_Eq=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _218265_f) mutable -> jule::Bool {
								return static__1c0082d5d_Eq(_218265_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1c2b09ea9:;
						{
							_217847_s.get()._field_Operators._field_Gt=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _218465_f) mutable -> jule::Bool {
								return static__1c0083105_Gt(_218465_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1c2b0a031:;
						{
							_217847_s.get()._field_Operators._field_GtEq=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _218667_f) mutable -> jule::Bool {
								return static__1c008339c_GtEq(_218667_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1c2b0a0a8:;
						{
							_217847_s.get()._field_Operators._field_Lt=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _218865_f) mutable -> jule::Bool {
								return static__1c0083644_Lt(_218865_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1c2b0a130:;
						{
							_217847_s.get()._field_Operators._field_LtEq=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _219067_f) mutable -> jule::Bool {
								return static__1c00838db_LtEq(_219067_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1c2b0a1a7:;
						{
							_217847_s.get()._field_Operators._field_Shl=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _219266_f) mutable -> jule::Bool {
								return static__1c0083ec4_Shl(_219266_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1c2b0a22e:;
						{
							_217847_s.get()._field_Operators._field_Shr=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _219466_f) mutable -> jule::Bool {
								return static__1c008426b_Shr(_219466_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1c2b0a2a6:;
						{
							_217847_s.get()._field_Operators._field_Add=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _219666_f) mutable -> jule::Bool {
								return static__1c0084513_Add(_219666_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1c2b0a32d:;
						{
							_217847_s.get()._field_Operators._field_Sub=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _219866_f) mutable -> jule::Bool {
								return static__1c00847aa_Sub(_219866_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1c2b0a3a5:;
						{
							_217847_s.get()._field_Operators._field_Div=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _220066_f) mutable -> jule::Bool {
								return static__1c0084a52_Div(_220066_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1c2b0a42c:;
						{
							_217847_s.get()._field_Operators._field_Mul=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _220266_f) mutable -> jule::Bool {
								return static__1c0084ce9_Mul(_220266_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1c2b0a4a4:;
						{
							_217847_s.get()._field_Operators._field_Mod=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _220466_f) mutable -> jule::Bool {
								return static__1c0085091_Mod(_220466_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1c2b0a52b:;
						{
							_217847_s.get()._field_Operators._field_BitAnd=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _220669_f) mutable -> jule::Bool {
								return static__1c0085338_BitAnd(_220669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1c2b0a5a3:;
						{
							_217847_s.get()._field_Operators._field_BitOr=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _220868_f) mutable -> jule::Bool {
								return static__1c00855d0_BitOr(_220868_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1c2b0a62a:;
						{
							_217847_s.get()._field_Operators._field_BitXor=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _221069_f) mutable -> jule::Bool {
								return static__1c0085877_BitXor(_221069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1c2b0a6a2:;
						{
							_217847_s.get()._field_Operators._field_Neg=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _221266_f) mutable -> jule::Bool {
								return static__1c0085e60_Neg(_221266_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1c2b0a729:;
						{
							_217847_s.get()._field_Operators._field_Pos=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _221466_f) mutable -> jule::Bool {
								return static__1c0086207_Pos(_221466_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1c2b0a7a1:;
						{
							_217847_s.get()._field_Operators._field_BitNot=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _221669_f) mutable -> jule::Bool {
								return static__1c008649e_BitNot(_221669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1c2b0a828:;
						{
							_217847_s.get()._field_Operators._field_AddAssign=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _221872_f) mutable -> jule::Bool {
								return static__1c0086a87_AddAssign(_221872_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1c2b0a8a0:;
						{
							_217847_s.get()._field_Operators._field_SubAssign=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _222072_f) mutable -> jule::Bool {
								return static__1c0086d2e_SubAssign(_222072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1c2b0a927:;
						{
							_217847_s.get()._field_Operators._field_DivAssign=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _222272_f) mutable -> jule::Bool {
								return static__1c00870c6_DivAssign(_222272_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1c2b0a99e:;
						{
							_217847_s.get()._field_Operators._field_MulAssign=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _222472_f) mutable -> jule::Bool {
								return static__1c008736d_MulAssign(_222472_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1c2b0aa26:;
						{
							_217847_s.get()._field_Operators._field_ModAssign=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _222672_f) mutable -> jule::Bool {
								return static__1c0087615_ModAssign(_222672_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1c2b0aa9d:;
						{
							_217847_s.get()._field_Operators._field_ShlAssign=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _222872_f) mutable -> jule::Bool {
								return static__1c00878ac_ShlAssign(_222872_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1c2b0ab25:;
						{
							_217847_s.get()._field_Operators._field_ShrAssign=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _223072_f) mutable -> jule::Bool {
								return static__1c0087b54_ShrAssign(_223072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1c2b0ab9c:;
						{
							_217847_s.get()._field_Operators._field_BitOrAssign=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _223274_f) mutable -> jule::Bool {
								return static__1c0087deb_BitOrAssign(_223274_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1c2b0ac24:;
						{
							_217847_s.get()._field_Operators._field_BitAndAssign=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _223475_f) mutable -> jule::Bool {
								return static__1c0088193_BitAndAssign(_223475_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1c2b0ac9b:;
						{
							_217847_s.get()._field_Operators._field_BitXorAssign=_1c0079b9b_checkStructInsOp(_self_, _217847_s,_217921_m,jule::Fn<jule::Bool(jule::Ptr<_1be45e6e1_Fn>)>([=](jule::Ptr<_1be45e6e1_Fn> _223675_f) mutable -> jule::Bool {
								return static__1c008843a_BitXorAssign(_223675_f);
							}));
						}
					}
					_match_end_1c2b09a25:;
				};
			}
			_iter_next_1c2b091b7:;
			++it;
			goto _iter_begin_1c2b091b7;
		}
		_iter_end_1c2b091b7:;
	};
}



inline void _1c007b10e_precheckStructType(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be387251_Struct>& _224143_s) {
	if (_224143_s.get()._field_CppLinked) {
		return;;
	};
	if ((_224143_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_224143_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1be3b359b_StructIns> _225221_ins = _1be36e656_instance(_224143_s);;
		_225221_ins.get()._field_Checked=true;
		_1be3738be_appendInstance(_224143_s.ptr(), _225221_ins);
		_1c007a40a_precheckStructIns(_self_, _225221_ins,nullptr);
	};
	_1c007ad78_checkStructInsOperators(_self_, _224143_s.get()._field_Instances[0LL]);
}



inline void _1c007b2da_precheckStructTypes(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c2b35ea2:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> _226221_s = *it;
			{
				_1c007b10e_precheckStructType(_self_, _226221_s);
			}
			_iter_next_1c2b35ea2:;
			++it;
			goto _iter_begin_1c2b35ea2;
		}
		_iter_end_1c2b35ea2:;
	};
}



inline void _1c007b560_checkRets(_1c0064504_Sema* _self_, jule::Ptr<_1be462392_FnIns>& _226733_f) {
	if (_1be45eb53_IsVoid(_226733_f.get()._field_Decl.ptr())) {
		return;;
	};
	_1c007d70a_missingRetChecker _227113_mrc = static__1c007dac3_new();;
	jule::Bool _227213_ok = _1c007ead5_check(&_227113_mrc, _226733_f.get()._field_Scope);;
	if ((!(_227213_ok))) {
		_1c00671b6_pushErr(&(*_self_), _226733_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1c007b87e_checkFnInsSc(_1c0064504_Sema* _self_, jule::Ptr<_1be462392_FnIns>& _227836_f, jule::Ptr<_1c004b5b8_scopeChecker>& _227852_sc) {
	_1c0063228_appendRetVars(_227852_sc.get()._field_table.get()._field_Vars,_227836_f);
	_1c00634d1_appendParamVars(_227852_sc.get()._field_table.get()._field_Vars,_227836_f);
	_1c00637ab_appendGenericTypeAliases(_227852_sc.get()._field_table.get()._field_TypeAliases,_227836_f);
	_1c0054901_check(_227852_sc, _227836_f.get()._field_Decl.get()._field_Scope,_227836_f.get()._field_Scope);
	if ((!(_1c004c72e_stopped(_227852_sc.ptr())))) {
		_1c007b560_checkRets(&(*_self_), _227836_f);
	};
}



inline void _1c007bb9d_checkFnInsCaller(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be462392_FnIns>& _229141_f, jule::Ptr<_1d675d511_Token> _229156_caller) {
	if (_229141_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1c00c8524_SymbolTable> _229617_old = _229141_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1c0066ced_setCurrentFile(_229141_f.get()._field_Decl.get()._field_sema.ptr(), _229617_old);
	});;
	jule::Ptr<_1c00c8524_SymbolTable> _229817_file = _1c0063b0d_findFile(_229141_f.get()._field_Decl.get()._field_sema.get()._field_files,_229141_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_229817_file != nullptr)) {
		_1c0066ced_setCurrentFile(_229141_f.get()._field_Decl.get()._field_sema.ptr(), _229817_file);
	};
	jule::Ptr<_1c004b5b8_scopeChecker> _230317_sc = _1be4e4721_newScopeChecker(_229141_f.get()._field_Decl.get()._field_sema,_229141_f);;
	_230317_sc.get()._field_calledFrom=_229156_caller;
	_1c007b87e_checkFnInsSc(_self_.ptr(), _229141_f,_230317_sc);
	if ((_229141_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_229141_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_229141_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1c007be23_checkFnIns(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be462392_FnIns>& _231335_f) {
	_1c007bb9d_checkFnInsCaller(_self_, _231335_f,nullptr);
}



inline void _1c007c198_checkTypeFn(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be45e6e1_Fn>& _231736_f) {
	if (_231736_f.get()._field_CppLinked) {
		return;;
	};
	if ((_231736_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _231736_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c2b415c8:;
		if (it != expr.end()) {
			jule::Ptr<_1be462392_FnIns> _232721_ins = *it;
			{
				_1c007be23_checkFnIns(_self_, _232721_ins);
			}
			_iter_next_1c2b415c8:;
			++it;
			goto _iter_begin_1c2b415c8;
		}
		_iter_end_1c2b415c8:;
	};
}



inline void _1c007c41d_checkTestFn(_1c0064504_Sema* _self_, jule::Ptr<_1be462392_FnIns>& _233235_f) {
	if (_233235_f.get()._field_Decl.get()._field_Public) {
		_1c00671b6_pushErr(&(*_self_), _233235_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1c00674d5_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_233235_f.get()._field_Params.len() != 1LL) || (_233235_f.get()._field_Result != nullptr))) {
		_1c00671b6_pushErr(&(*_self_), _233235_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1c00674d5_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c0112580_Sptr> _234517_sptr = _1c010b69a_Sptr(_233235_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_234517_sptr == nullptr)) {
		_1c00671b6_pushErr(&(*_self_), _233235_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1c00674d5_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1be3b359b_StructIns> _235213_s = _1c010c888_Struct(_234517_sptr.get()._field_Elem.ptr());;
	if (((_235213_s == nullptr) || (!(_1c00618db_isStdPackage(_235213_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_1c00671b6_pushErr(&(*_self_), _233235_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1c00674d5_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c007c693_precheckTypeFn(jule::Ptr<_1c0064504_Sema> _self_, jule::Ptr<_1be45e6e1_Fn>& _236039_f) {
	if (_236039_f.get()._field_CppLinked) {
		return;;
	};
	if ((_236039_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_236039_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1be462392_FnIns> _237121_ins = _1be460acc_instanceForce(_236039_f);;
		_236039_f.get()._field_Instances = jule::alloc_for_append(_236039_f.get()._field_Instances,1);_236039_f.get()._field_Instances.__push(_237121_ins);;
		_1c0070367_reloadFnInsTypes(_self_, _237121_ins);
		_237121_ins.get()._field_reloaded=true;
		if (_1c0121072_hasDirective(_236039_f.get()._field_Directives,jule::Str("test", 4))) {
			_1c007c41d_checkTestFn(_self_.ptr(), _237121_ins);
		};
	};
}



inline void _1c007c86e_precheckFnTypes(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c2b4b1a4:;
		if (it != expr.end()) {
			jule::Ptr<_1be47159e_Trait> _238421_decl = *it;
			{
				{
					auto &expr = _238421_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c2b4ba67:;
					if (it != expr.end()) {
						jule::Ptr<_1be45e6e1_Fn> _238525_m = *it;
						{
							_1c007c693_precheckTypeFn(_self_, _238525_m);
						}
						_iter_next_1c2b4ba67:;
						++it;
						goto _iter_begin_1c2b4ba67;
					}
					_iter_end_1c2b4ba67:;
				};
			}
			_iter_next_1c2b4b1a4:;
			++it;
			goto _iter_begin_1c2b4b1a4;
		}
		_iter_end_1c2b4b1a4:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c2b4b77b:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _238921_decl = *it;
			{
				_1c007c693_precheckTypeFn(_self_, _238921_decl);
			}
			_iter_next_1c2b4b77b:;
			++it;
			goto _iter_begin_1c2b4b77b;
		}
		_iter_end_1c2b4b77b:;
	};
}



inline void _1c007ca4a_checkFnTypes(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c2b4ce31:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _239621_decl = *it;
			{
				_1c007c198_checkTypeFn(_self_, _239621_decl);
			}
			_iter_next_1c2b4ce31:;
			++it;
			goto _iter_begin_1c2b4ce31;
		}
		_iter_end_1c2b4ce31:;
	};
}



inline void _1c007cc26_checkPackageTypes(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c2b4d74a:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _240421_f = *it;
			{
				_1c0066ced_setCurrentFile(_self_.ptr(), _240421_f);
				_1c0079074_checkGlobalTypes(_self_);
				_1c007c86e_precheckFnTypes(_self_);
				_1c007b2da_precheckStructTypes(_self_);
			}
			_iter_next_1c2b4d74a:;
			++it;
			goto _iter_begin_1c2b4d74a;
		}
		_iter_end_1c2b4d74a:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c2b505b5:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _241521_f = *it;
			{
				_1c0066ced_setCurrentFile(_self_.ptr(), _241521_f);
				_1c007ca4a_checkFnTypes(_self_);
				_1c007aad1_checkStructTypes(_self_);
			}
			_iter_next_1c2b505b5:;
			++it;
			goto _iter_begin_1c2b505b5;
		}
		_iter_end_1c2b505b5:;
	};
}



inline void _1c007ce02_setFileSemaFields(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c2b50b9d:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _242321_f = *it;
			{
				_242321_f.get()._field_sema=_self_;
			}
			_iter_next_1c2b50b9d:;
			++it;
			goto _iter_begin_1c2b50b9d;
		}
		_iter_end_1c2b50b9d:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c2b51cae:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> _242621_st = *it;
			{
				_242621_st.get()._field_sema=_self_;
			}
			_iter_next_1c2b51cae:;
			++it;
			goto _iter_begin_1c2b51cae;
		}
		_iter_end_1c2b51cae:;
	};
}



inline void _1c007d0cd_setSemaFields(jule::Ptr<_1c0064504_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c2b527b5:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _243221_file = *it;
			{
				_1c0066ced_setCurrentFile(_self_.ptr(), _243221_file);
				_1c007ce02_setFileSemaFields(_self_);
			}
			_iter_next_1c2b527b5:;
			++it;
			goto _iter_begin_1c2b527b5;
		}
		_iter_end_1c2b527b5:;
	};
}



inline void _1c007d353_check(jule::Ptr<_1c0064504_Sema> _self_, jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>& _243830_files) {
	_self_.get()._field_files=_243830_files;
	_1c0069905_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c007d0cd_setSemaFields(_self_);
	_1c0069e88_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c0069cac_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c00784a2_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1c007cc26_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1c0064504_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1c007d70a_missingRetChecker static__1c007dac3_new(void) {
	return _1c007d70a_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1c007dd9d_checkConditional(_1c007d70a_missingRetChecker* _self_, jule::Ptr<_1c0048d79_Conditional> _248135_c) {
	{
		auto &expr = _248135_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c2b56c1a:;
		if (it != expr.end()) {
			jule::Ptr<_1c00489a0_If> _248221_elif = *it;
			{
				if ((_248221_elif == nullptr)) {
					return false;
				};
				if ((!(_1c007e7c7_checkScope(&(*_self_), _248221_elif.get()._field_Scope)))) {
					return false;
				};
			}
			_iter_next_1c2b56c1a:;
			++it;
			goto _iter_begin_1c2b56c1a;
		}
		_iter_end_1c2b56c1a:;
	};
	return ((_248135_c.get()._field_Default != nullptr) && _1c007e7c7_checkScope(&(*_self_), _248135_c.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1c007e1ab_checkMatch(_1c007d70a_missingRetChecker* _self_, jule::Ptr<_1c004a496_Match> _249329_m) {
	{
		auto &expr = _249329_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c2b59190:;
		if (it != expr.end()) {
			jule::Ptr<_1c004a9e6_Case> _249421_c = *it;
			{
				if ((_249421_c == nullptr)) {
					return false;
				};
				jule::I64 _249817_n = (*_self_)._field_breaked.len();;
				jule::Bool _249917_ok = _1c007e7c7_checkScope(&(*_self_), _249421_c.get()._field_Scope);;
				{
					
					if ((_249817_n != (*_self_)._field_breaked.len())) {
						_case_begin_1c2b5ae0b:;
						{
							return false;
						}
					}
					else if ((!(_249917_ok))) {
						_case_begin_1c2b5ae83:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1c2b5b00a;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1c2b5b00a:;
						{
							(*_self_)._field_falled=false;
							if ((_249421_c.get()._field_Next == nullptr)) {
								return false;
							};
							goto _iter_next_1c2b59190;
						}
					}
					_match_end_1c2b5ad62:;
				};
			}
			_iter_next_1c2b59190:;
			++it;
			goto _iter_begin_1c2b59190;
		}
		_iter_end_1c2b59190:;
	};
	return ((_249329_m.get()._field_Default != nullptr) && _1c007e7c7_checkScope(&(*_self_), _249329_m.get()._field_Default.get()._field_Scope));
}



inline jule::Bool _1c007e4b9_checkInfIter(_1c007d70a_missingRetChecker* _self_, jule::Ptr<_1c0049066_InfIter> _251931_it) {
	jule::I64 _252013_n = (*_self_)._field_breaked.len();;
	if (_1c007e7c7_checkScope(&(*_self_), _251931_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_252013_n);
		return true;
	};
	if ((_252013_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _252617_itaddr = static_cast<jule::Uintptr>(_251931_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_252013_n);
			auto it = expr.begin();
			_iter_begin_1c2b5ec78:;
			if (it != expr.end()) {
				jule::Uintptr _252720_addr = *it;
				{
					if ((_252617_itaddr == _252720_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_252013_n);
						return false;
					};
				}
				_iter_next_1c2b5ec78:;
				++it;
				goto _iter_begin_1c2b5ec78;
			}
			_iter_end_1c2b5ec78:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_252013_n);
	};
	return true;
}



inline jule::Bool _1c007e7c7_checkScope(_1c007d70a_missingRetChecker* _self_, jule::Ptr<_1c00487b3_Scope> _253829_s) {
	if ((_253829_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _253829_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1c2b6195b:;
		if (it != expr.end()) {
			jule::Any _254221_st = *it;
			{
				{
					auto &_match_expr{ _254221_st };
					
					if (_match_expr.type_is<jule::Ptr<_1c004ad15_FallSt>>()) {
						_case_begin_1c2b62352:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c0049819_BreakSt>>()) {
						_case_begin_1c2b623eb:;
						{
							jule::Uintptr _254821_addr = _254221_st.operator jule::Ptr<_1c0049819_BreakSt>().get()._field_It;;
							if ((_254821_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_254821_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c004962c_ContSt>>()) {
						_case_begin_1c2b62462:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c0049066_InfIter>>()) {
						_case_begin_1c2b624c8:;
						{
							if (_1c007e4b9_checkInfIter(&(*_self_), _254221_st.operator jule::Ptr<_1c0049066_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c004b002_RetSt>>()) {
						_case_begin_1c2b6253e:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c00487b3_Scope>>()) {
						_case_begin_1c2b625a5:;
						{
							if (_1c007e7c7_checkScope(&(*_self_), _254221_st.operator jule::Ptr<_1c00487b3_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c00cd282_Data>>()) {
						_case_begin_1c2b6262c:;
						{
							{
								auto &_match_expr{ _254221_st.operator jule::Ptr<_1c00cd282_Data>().get()._field_Model };
								
								if (_match_expr.type_is<jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>>()) {
									_case_begin_1c2b66367:;
									{
										return true;
									}
								}
								_match_end_1c2b660c0:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c0048d79_Conditional>>()) {
						_case_begin_1c2b626a4:;
						{
							if (_1c007dd9d_checkConditional(&(*_self_), _254221_st.operator jule::Ptr<_1c0048d79_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c004a496_Match>>()) {
						_case_begin_1c2b6272b:;
						{
							if (_1c007e1ab_checkMatch(&(*_self_), _254221_st.operator jule::Ptr<_1c004a496_Match>())) {
								return true;
							};
						}
					}
					_match_end_1c2b621a9:;
				};
			}
			_iter_next_1c2b6195b:;
			++it;
			goto _iter_begin_1c2b6195b;
		}
		_iter_end_1c2b6195b:;
	};
	return false;
}



inline jule::Bool _1c007ead5_check(_1c007d70a_missingRetChecker* _self_, jule::Ptr<_1c00487b3_Scope> _258424_s) {
	return _1c007e7c7_checkScope(&(*_self_), _258424_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1c007d70a_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00803bb_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c00816db_IsInitialized(_1c0081334_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);
}



inline jule::Bool _1c0081950_IsTypeInferred(_1c0081334_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1c0081334_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c00824cd_Dispose(jule::Ptr<_1be45e6e1_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1be45eb53_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1be45d745_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));
}



inline jule::Bool static__1c0082775_Str(jule::Ptr<_1be45e6e1_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1be45eb53_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1be45d745_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1be462392_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1c010dceb_Prim> _3913_prim = _1c010b436_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;
	};
	return _1c0112030_IsStr(_3913_prim.ptr());
}



inline jule::Bool static__1c0082ab6_logical(jule::Ptr<_1be45e6e1_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _1be45eb53_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _1be45d745_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1be462392_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_1c010dceb_Prim> _6413_prim = _1c010b436_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1c0111cbb_IsBool(_6413_prim.ptr()))))) {
		return false;
	};
	return (_6317_ins.get()._field_Owner == _1c010c888_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));
}



inline jule::Bool static__1c0082d5d_Eq(jule::Ptr<_1be45e6e1_Fn> _7218_f) {
	return static__1c0082ab6_logical(_7218_f,jule::Str("Eq", 2));
}



inline jule::Bool static__1c0083105_Gt(jule::Ptr<_1be45e6e1_Fn> _7718_f) {
	return static__1c0082ab6_logical(_7718_f,jule::Str("Gt", 2));
}



inline jule::Bool static__1c008339c_GtEq(jule::Ptr<_1be45e6e1_Fn> _8220_f) {
	return static__1c0082ab6_logical(_8220_f,jule::Str("GtEq", 4));
}



inline jule::Bool static__1c0083644_Lt(jule::Ptr<_1be45e6e1_Fn> _8718_f) {
	return static__1c0082ab6_logical(_8718_f,jule::Str("Lt", 2));
}



inline jule::Bool static__1c00838db_LtEq(jule::Ptr<_1be45e6e1_Fn> _9220_f) {
	return static__1c0082ab6_logical(_9220_f,jule::Str("LtEq", 4));
}



inline jule::Bool static__1c0083c2c_result(jule::Ptr<_1be45e6e1_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _1be45eb53_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _1be45d745_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	jule::Ptr<_1be462392_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_1c010c888_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);
}



inline jule::Bool static__1c0083ec4_Shl(jule::Ptr<_1be45e6e1_Fn> _11819_f) {
	return static__1c0083c2c_result(_11819_f,jule::Str("Shl", 3));
}



inline jule::Bool static__1c008426b_Shr(jule::Ptr<_1be45e6e1_Fn> _12319_f) {
	return static__1c0083c2c_result(_12319_f,jule::Str("Shr", 3));
}



inline jule::Bool static__1c0084513_Add(jule::Ptr<_1be45e6e1_Fn> _12819_f) {
	return static__1c0083c2c_result(_12819_f,jule::Str("Add", 3));
}



inline jule::Bool static__1c00847aa_Sub(jule::Ptr<_1be45e6e1_Fn> _13319_f) {
	return static__1c0083c2c_result(_13319_f,jule::Str("Sub", 3));
}



inline jule::Bool static__1c0084a52_Div(jule::Ptr<_1be45e6e1_Fn> _13819_f) {
	return static__1c0083c2c_result(_13819_f,jule::Str("Div", 3));
}



inline jule::Bool static__1c0084ce9_Mul(jule::Ptr<_1be45e6e1_Fn> _14319_f) {
	return static__1c0083c2c_result(_14319_f,jule::Str("Mul", 3));
}



inline jule::Bool static__1c0085091_Mod(jule::Ptr<_1be45e6e1_Fn> _14819_f) {
	return static__1c0083c2c_result(_14819_f,jule::Str("Mod", 3));
}



inline jule::Bool static__1c0085338_BitAnd(jule::Ptr<_1be45e6e1_Fn> _15322_f) {
	return static__1c0083c2c_result(_15322_f,jule::Str("BitAnd", 6));
}



inline jule::Bool static__1c00855d0_BitOr(jule::Ptr<_1be45e6e1_Fn> _15821_f) {
	return static__1c0083c2c_result(_15821_f,jule::Str("BitOr", 5));
}



inline jule::Bool static__1c0085877_BitXor(jule::Ptr<_1be45e6e1_Fn> _16322_f) {
	return static__1c0083c2c_result(_16322_f,jule::Str("BitXor", 6));
}



inline jule::Bool static__1c0085bb8_unary(jule::Ptr<_1be45e6e1_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _1be45eb53_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _1be45d745_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1be462392_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_1c010c888_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);
}



inline jule::Bool static__1c0085e60_Neg(jule::Ptr<_1be45e6e1_Fn> _18719_f) {
	return static__1c0085bb8_unary(_18719_f,jule::Str("Neg", 3));
}



inline jule::Bool static__1c0086207_Pos(jule::Ptr<_1be45e6e1_Fn> _19219_f) {
	return static__1c0085bb8_unary(_19219_f,jule::Str("Pos", 3));
}



inline jule::Bool static__1c008649e_BitNot(jule::Ptr<_1be45e6e1_Fn> _19722_f) {
	return static__1c0085bb8_unary(_19722_f,jule::Str("BitNot", 6));
}



inline jule::Bool static__1c00867e0_assign(jule::Ptr<_1be45e6e1_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_1be45eb53_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _1be45d745_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1c0086a87_AddAssign(jule::Ptr<_1be45e6e1_Fn> _22125_f) {
	return static__1c00867e0_assign(_22125_f,jule::Str("AddAssign", 9));
}



inline jule::Bool static__1c0086d2e_SubAssign(jule::Ptr<_1be45e6e1_Fn> _22625_f) {
	return static__1c00867e0_assign(_22625_f,jule::Str("SubAssign", 9));
}



inline jule::Bool static__1c00870c6_DivAssign(jule::Ptr<_1be45e6e1_Fn> _23125_f) {
	return static__1c00867e0_assign(_23125_f,jule::Str("DivAssign", 9));
}



inline jule::Bool static__1c008736d_MulAssign(jule::Ptr<_1be45e6e1_Fn> _23625_f) {
	return static__1c00867e0_assign(_23625_f,jule::Str("MulAssign", 9));
}



inline jule::Bool static__1c0087615_ModAssign(jule::Ptr<_1be45e6e1_Fn> _24125_f) {
	return static__1c00867e0_assign(_24125_f,jule::Str("ModAssign", 9));
}



inline jule::Bool static__1c00878ac_ShlAssign(jule::Ptr<_1be45e6e1_Fn> _24625_f) {
	return static__1c00867e0_assign(_24625_f,jule::Str("ShlAssign", 9));
}



inline jule::Bool static__1c0087b54_ShrAssign(jule::Ptr<_1be45e6e1_Fn> _25125_f) {
	return static__1c00867e0_assign(_25125_f,jule::Str("ShrAssign", 9));
}



inline jule::Bool static__1c0087deb_BitOrAssign(jule::Ptr<_1be45e6e1_Fn> _25627_f) {
	return static__1c00867e0_assign(_25627_f,jule::Str("BitOrAssign", 11));
}



inline jule::Bool static__1c0088193_BitAndAssign(jule::Ptr<_1be45e6e1_Fn> _26128_f) {
	return static__1c00867e0_assign(_26128_f,jule::Str("BitAndAssign", 12));
}



inline jule::Bool static__1c008843a_BitXorAssign(jule::Ptr<_1be45e6e1_Fn> _26628_f) {
	return static__1c00867e0_assign(_26628_f,jule::Str("BitXorAssign", 12));
}







std::ostream &operator<<(std::ostream &_Stream, _1c0081d5c_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1c00b7711_pushErr(_1c00b71e4_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1c00671b6_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,jule::Any(_11739_args));
}



inline jule::Bool _1c00b7975_checkTrait(_1c00b71e4_typeCompatibilityChecker* _self_) {
	jule::Bool _12131_ok = jule::Bool();
	if (_1c010a248_IsNil((*_self_)._field_src.ptr())) {
		_12131_ok = true;
		return _12131_ok;
	};
	jule::Ptr<_1be47159e_Trait> _12513_trt = _1c010caec_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1c010b69a_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c2588d34:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1c010b69a_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_1c010c888_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					_12131_ok = false;
					return _12131_ok;
				};
				goto _case_begin_1c2588e22;
			}
		}
		else if ((_1c010c888_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c2588e22:;
			{
				jule::Ptr<_1be3b359b_StructIns> _13617_s = _1c010c888_Struct((*_self_)._field_src.ptr());;
				if ((!(_1be378d9c_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					_12131_ok = false;
					return _12131_ok;
				};
				if (((!(_12617_ref)) && _1c00a27c8_traitHasReferenceReceiver(_12513_trt))) {
					_1c00b7711_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12131_ok = false;
					return _12131_ok;
				};
				_12131_ok = true;
				return _12131_ok;
			}
		}
		else if ((_1c010caec_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c2588e88:;
			{
				_12131_ok = (_12513_trt == _1c010caec_Trait((*_self_)._field_src.ptr()));
				return _12131_ok;
			}
		}
		else {
			_case_begin_1c25886c4:;
			{
				_12131_ok = false;
				return _12131_ok;
			}
		}
		_match_end_1c258866e:;
	};
}



inline jule::Bool _1c00b7bd9_checkPtr(_1c00b71e4_typeCompatibilityChecker* _self_) {
	jule::Bool _15229_ok = jule::Bool();
	if (_1c010a248_IsNil((*_self_)._field_src.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	jule::Ptr<_1c0115ae4_Ptr> _15617_dest = _1c010b90e_Ptr((*_self_)._field_dest.ptr());;
	if (_1c01165b7_IsUnsafe(_15617_dest.ptr())) {
		_15229_ok = true;
		return _15229_ok;
	};
	_15229_ok = _1c0109a2d_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15229_ok;
}



inline jule::Bool _1c00b7e4d_checkPrim(_1c00b71e4_typeCompatibilityChecker* _self_) {
	jule::Bool _16330_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1c010dceb_Prim> _16517_prim = _1c010b436_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1c0112294_IsAny(_16517_prim.ptr()))) {
			_16330_ok = true;
			return _16330_ok;
		};
	};
	_16330_ok = _1c0109a2d_Equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16330_ok;
}



inline jule::Bool _1c00b8305_typeEnum(_1c00b71e4_typeCompatibilityChecker* _self_, jule::Ptr<_1be474cde_TypeEnum>& _17328_e, jule::Ptr<_1c0109324_TypeKind>& _17347_t2) {
	jule::Bool _17364_ok = jule::Bool();
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c25919b8:;
		if (it != expr.end()) {
			jule::Ptr<_1be474728_TypeEnumItem> _17421_item = *it;
			{
				if (_1c0109a2d_Equals(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
				jule::Ptr<_1be474cde_TypeEnum> _17821_ke = _1c010bdd7_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1c25919b8;
				};
				if (_1c00b8305_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					_17364_ok = true;
					return _17364_ok;
				};
			}
			_iter_next_1c25919b8:;
			++it;
			goto _iter_begin_1c25919b8;
		}
		_iter_end_1c25919b8:;
	};
	_17364_ok = false;
	return _17364_ok;
}



inline jule::Bool _1c00b8569_checkTypeEnum(_1c00b71e4_typeCompatibilityChecker* _self_) {
	jule::Bool _18934_ok = jule::Bool();
	if (_1c0109a2d_Equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_18934_ok = true;
		return _18934_ok;
	};
	jule::Ptr<_1be474cde_TypeEnum> _19317_e = _1c010bdd7_TypeEnum((*_self_)._field_dest.ptr());;
	_18934_ok = _1c00b8305_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return _18934_ok;
}



inline jule::Bool _1c00b87cd_check(_1c00b71e4_typeCompatibilityChecker* _self_) {
	jule::Bool _19726_ok = jule::Bool();
	if ((_1c010b90e_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19726_ok = _1c00b7bd9_checkPtr(&(*_self_));
		return _19726_ok;
	};
	if (_1c010a985_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_1c010a248_IsNil((*_self_)._field_src.ptr())) {
			_19726_ok = true;
			return _19726_ok;
		};
	};
	{
		
		if ((_1c010b436_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c2596dec:;
			{
				_19726_ok = _1c00b7e4d_checkPrim(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1c010bdd7_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c2596e63:;
			{
				_19726_ok = _1c00b8569_checkTypeEnum(&(*_self_));
				return _19726_ok;
			}
		}
		else if ((_1c010caec_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c259724e:;
			{
				_19726_ok = _1c00b7975_checkTrait(&(*_self_));
				return _19726_ok;
			}
		}
		else {
			_case_begin_1c2596083:;
			{
				_19726_ok = _1c0109a2d_Equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19726_ok;
			}
		}
		_match_end_1c2595e40:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c00b71e4_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1c00b927e_pushErr(_1c00b8d1c_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1c00671b6_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,jule::Any(_22939_args));
}



inline jule::Bool _1c00b94e3_checkValidity(_1c00b8d1c_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1c010c624_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c259a6e7:;
			{
				jule::Ptr<_1be462392_FnIns> _23717_f = _1c010c624_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1be463728_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1c259bcc0:;
						{
							_1c00b927e_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1c259bd47:;
						{
							_1c00b927e_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1be45edb7_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1c259bdbe:;
						{
							_1c00b927e_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1c259be46:;
						{
							_1c00b927e_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_1c00674d5_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1c259bbe3:;
				};
			}
		}
		else if ((_1c010d0c5_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c259a76e:;
			{
				_1c00b927e_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1c259a63c:;
	};
	return _23417_valid;
}



inline jule::Bool _1c00b9757_checkConst(_1c00b8d1c_assignTypeChecker* _self_) {
	if (((((!(_1c00cdb45_IsConst((*_self_)._field_d.ptr()))) || (_1c010b436_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1c010b436_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1c0048373_IsNum(_1c010b436_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_Model != (*_self_)._field_d.get()._field_Constant)) {
		return false;
	};
	jule::Str _27413_kind = _1c010b436_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1c0048241_IsFloat(_27413_kind)) {
			_case_begin_1c25a45d0:;
			{
				if ((!(_1c0099803_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1c00b927e_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1c004810e_IsInt(_27413_kind)) {
			_case_begin_1c25a3de8:;
			{
				if ((!(_1c00b5eb2_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1c00b927e_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1c25a3d82:;
			{
				return false;
			}
		}
		_match_end_1c25a3d2c:;
	};
	return true;
}



inline jule::Bool _1c00b99bb_isPrim(_1c00b8d1c_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;
	};
	if ((_1c0109ed4_CppLinked((*_self_)._field_dest.ptr()) || _1c0109ed4_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;
	};
	return ((_1c010b436_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_1c010b436_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));
}



inline jule::Bool _1c00b9c30_checkCompatibility(_1c00b8d1c_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1c25a8183:;
			{
				return false;
			}
		}
		else if ((!(_1c00b94e3_checkValidity(&(*_self_))))) {
			_case_begin_1c25a820a:;
			{
				return false;
			}
		}
		else if (_1c00b9757_checkConst(&(*_self_))) {
			_case_begin_1c25a8282:;
			{
				return true;
			}
		}
		else if ((_1c010bb73_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c25a8309:;
			{
				jule::Ptr<_1c0109324_TypeKind> _31621_dkind = (*_self_)._field_dest;;
				if ((_1c010bb73_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31621_dkind=_1c010bb73_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1c010b436_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1c25a8062;
				};
				if (_1be7c895b_TypesAreCompatible(_1c010b436_Prim(_1c010bb73_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_1c010b436_Prim(_31621_dkind.ptr()).get()._field_Kind)) {
					return true;
				};
			}
		}
		else if (_1c00b99bb_isPrim(&(*_self_))) {
			_case_begin_1c25a8381:;
			{
				jule::Ptr<_1c010dceb_Prim> _32617_dest = _1c010b436_Prim((*_self_)._field_dest.ptr());;
				if (_1c0112294_IsAny(_32617_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1c010dceb_Prim> _33021_src = _1c010b436_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1be7c895b_TypesAreCompatible(_32617_dest.get()._field_Kind,_33021_src.get()._field_Kind)) {
					return true;
				};
			}
		}
		_match_end_1c25a8062:;
	};
	return _1c006d5c9_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);
}



inline jule::Bool _1c00b9e94_check(_1c00b8d1c_assignTypeChecker* _self_) {
	jule::Bool _33913_ok = _1c00b9c30_checkCompatibility(&(*_self_));;
	if (_33913_ok) {
		_1c0122abd_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _33913_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00b8d1c_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c25c1eb0_annotateConstraintElem(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be399032_ArrTypeDecl>>()) {
			_case_begin_1c25c35bb:;
			{
				jule::Ptr<_1c0109324_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1c25c4446:;
						{
							_36121_elem=_1c010c14b_Arr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c25c438b:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1be399032_ArrTypeDecl>().get()._field_Elem;
				return _1c00bbd86_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1c25c3511:;
	};
	return false;
}

inline jule::Bool _1c25c15ec_annotateConstraintElem(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3982c8_SlcTypeDecl>>()) {
			_case_begin_1c25c6c2e:;
			{
				jule::Ptr<_1c0109324_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1c25c7b53:;
						{
							_36121_elem=_1c010c3b0_Slc(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c25c79ee:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1be3982c8_SlcTypeDecl>().get()._field_Elem;
				return _1c00bbd86_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1c25c6b74:;
	};
	return false;
}

inline jule::Bool _1c25c3896_annotateConstraintElem(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3988a0_PtrTypeDecl>>()) {
			_case_begin_1c25ca590:;
			{
				jule::Ptr<_1c0109324_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1c25cb52a:;
						{
							_36121_elem=_1c010b90e_Ptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c25cb360:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1be3988a0_PtrTypeDecl>().get()._field_Elem;
				return _1c00bbd86_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1c25ca4d5:;
	};
	return false;
}

inline jule::Bool _1c25c7009_annotateConstraintElem(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _35849_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be397dcc_SptrTypeDecl>>()) {
			_case_begin_1c25cd8d4:;
			{
				jule::Ptr<_1c0109324_TypeKind> _36121_elem = nullptr;;
				{
					
{
						_case_begin_1c25ce8d5:;
						{
							_36121_elem=_1c010b69a_Sptr(_35849_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c25ce6a4:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1be397dcc_SptrTypeDecl>().get()._field_Elem;
				return _1c00bbd86_annotateConstraint(&(*_self_), _36121_elem);
			}
		}
		_match_end_1c25cd829:;
	};
	return false;
}



inline jule::Bool _1c00bb11b_annotateConstraintMap(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _37845_k) {
	jule::Bool _37861_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be399780_MapTypeDecl>>()) {
			_case_begin_1c25b0b80:;
			{
				jule::Ptr<_1c0114593_Map> _38121_m = _1c010cd61_Map(_37845_k.ptr());;
				jule::Ptr<_1be399780_MapTypeDecl> _38221_m2 = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1be399780_MapTypeDecl>();;
				(*_self_)._field_c=_38221_m2.get()._field_Key;
				if (_1c00bbd86_annotateConstraint(&(*_self_), _38121_m.get()._field_Key)) {
					_37861_ok = true;
					return _37861_ok;
				};
				(*_self_)._field_c=_38221_m2.get()._field_Val;
				_37861_ok = _1c00bbd86_annotateConstraint(&(*_self_), _38121_m.get()._field_Val);
				return _37861_ok;
			}
		}
		_match_end_1c25b0b08:;
	};
	_37861_ok = false;
	return _37861_ok;
}



inline jule::Bool _1c00bb429_annotateConstraintTup(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _39345_k) {
	jule::Bool _39361_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3985b4_TupleTypeDecl>>()) {
			_case_begin_1c25b3699:;
			{
				jule::Ptr<_1be3985b4_TupleTypeDecl> _39621_tup = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1be3985b4_TupleTypeDecl>();;
				jule::Ptr<_1c0113a6a_Tuple> _39721_tup2 = _1c010d0c5_Tup(_39345_k.ptr());;
				{
					auto &expr = _39721_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1c25b4b1d:;
					if (it != expr.end()) {
						jule::Ptr<_1c0109324_TypeKind> _39825_t2 = *it;
						{
							{
								auto &expr = _39621_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1c25b5459:;
								if (it != expr.end()) {
									jule::Ptr<_1be396a24_TypeDecl> _39929_t = *it;
									{
										(*_self_)._field_c=_39929_t;
										if (_1c00bbd86_annotateConstraint(&(*_self_), _39825_t2)) {
											_39361_ok = true;
											return _39361_ok;
										};
									}
									_iter_next_1c25b5459:;
									++it;
									goto _iter_begin_1c25b5459;
								}
								_iter_end_1c25b5459:;
							};
						}
						_iter_next_1c25b4b1d:;
						++it;
						goto _iter_begin_1c25b4b1d;
					}
					_iter_end_1c25b4b1d:;
				};
			}
		}
		_match_end_1c25b3622:;
	};
	_39361_ok = false;
	return _39361_ok;
}



inline jule::Bool _1c00bb737_annotateConstraintFn(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _41044_k) {
	jule::Bool _41060_ok = jule::Bool();
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3a8838_FnDecl>>()) {
			_case_begin_1c25b58bb:;
			{
				jule::Ptr<_1be3a8838_FnDecl> _41321_pf = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1be3a8838_FnDecl>();;
				jule::Ptr<_1be462392_FnIns> _41421_f = _1c010c624_Fn(_41044_k.ptr());;
				{
					auto &expr = _41421_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c25b7967:;
					if (it != expr.end()) {
						jule::I64 _41518_i = it - expr.begin();
						jule::Ptr<_1be4614c3_ParamIns> _41525_fp = *it;
						{
							(*_self_)._field_c=_41321_pf.get()._field_Params[_41518_i].get()._field_Kind;
							if (_1c00bbd86_annotateConstraint(&(*_self_), _41525_fp.get()._field_Kind)) {
								_41060_ok = true;
								return _41060_ok;
							};
						}
						_iter_next_1c25b7967:;
						++it;
						_41518_i++;
						goto _iter_begin_1c25b7967;
					}
					_iter_end_1c25b7967:;
				};
				if ((_41321_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41321_pf.get()._field_Result.get()._field_Kind;
					if (_1c00bbd86_annotateConstraint(&(*_self_), _41421_f.get()._field_Result)) {
						_41060_ok = true;
						return _41060_ok;
					};
				};
			}
		}
		_match_end_1c25b536b:;
	};
	_41060_ok = false;
	return _41060_ok;
}



inline jule::Bool _1c00bba67_annotateConstraintIdent(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _43147_k) {
	jule::Ptr<_1be3970da_IdentTypeDecl> _43217_ident = (*_self_)._field_c.get()._field_Kind.operator jule::Ptr<_1be3970da_IdentTypeDecl>();;
	jule::Ptr<_1be3b359b_StructIns> _43317_s = _1c010c888_Struct(_43147_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c25baa7a:;
		if (it != expr.end()) {
			jule::I64 _43413_i = it - expr.begin();
			jule::Ptr<_1be3a4108_GenericDecl> _43416_g = *it;
			{
				if ((_43416_g.get()._field_Ident == _43217_ident.get()._field_Ident)) {
					jule::Ptr<_1c0107ae7_InsGeneric> _43625_fg = (*_self_)._field_f.get()._field_Generics[_43413_i];;
					if ((_43625_fg != nullptr)) {
						return false;
					};
					_1c00bc1a5_pushGeneric(&(*_self_), _43147_k,_43413_i);
					return true;
				};
				if ((_43317_s == nullptr)) {
					goto _iter_next_1c25baa7a;
				};
				jule::Ptr<_1be396a24_TypeDecl> _44621_c = (*_self_)._field_c;;
				{
					auto &expr = _43217_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c25bd808:;
					if (it != expr.end()) {
						jule::Ptr<_1be396a24_TypeDecl> _44725_ig = *it;
						{
							(*_self_)._field_c=_44725_ig;
							{
								auto &expr = _43317_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1c25be573:;
								if (it != expr.end()) {
									jule::Ptr<_1c0107ae7_InsGeneric> _44929_sg = *it;
									{
										if (_1c00bbd86_annotateConstraint(&(*_self_), _44929_sg.get()._field_Kind)) {
											return true;
										};
									}
									_iter_next_1c25be573:;
									++it;
									goto _iter_begin_1c25be573;
								}
								_iter_end_1c25be573:;
							};
						}
						_iter_next_1c25bd808:;
						++it;
						goto _iter_begin_1c25bd808;
					}
					_iter_end_1c25bd808:;
				};
				(*_self_)._field_c=_44621_c;
			}
			_iter_next_1c25baa7a:;
			++it;
			_43413_i++;
			goto _iter_begin_1c25baa7a;
		}
		_iter_end_1c25baa7a:;
	};
	return false;
}



inline jule::Bool _1c00bbd86_annotateConstraint(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _46042_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3970da_IdentTypeDecl>>()) {
			_case_begin_1c25bdd25:;
			{
				return _1c00bba67_annotateConstraintIdent(&(*_self_), _46042_k);
			}
		}
		_match_end_1c25beab2:;
	};
	{
		
		if ((_1c010c14b_Arr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1c25c05b8:;
			{
				return _1c25c1eb0_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1c010c3b0_Slc(_46042_k.ptr()) != nullptr)) {
			_case_begin_1c25c062e:;
			{
				return _1c25c15ec_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1c010b90e_Ptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1c25c0695:;
			{
				return _1c25c3896_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1c010b69a_Sptr(_46042_k.ptr()) != nullptr)) {
			_case_begin_1c25c0e6a:;
			{
				return _1c25c7009_annotateConstraintElem(&(*_self_), _46042_k);
			}
		}
		else if ((_1c010cd61_Map(_46042_k.ptr()) != nullptr)) {
			_case_begin_1c25c0ed1:;
			{
				return _1c00bb11b_annotateConstraintMap(&(*_self_), _46042_k);
			}
		}
		else if ((_1c010c624_Fn(_46042_k.ptr()) != nullptr)) {
			_case_begin_1c25c1047:;
			{
				return _1c00bb737_annotateConstraintFn(&(*_self_), _46042_k);
			}
		}
		else if ((_1c010d0c5_Tup(_46042_k.ptr()) != nullptr)) {
			_case_begin_1c25c10ad:;
			{
				return _1c00bb429_annotateConstraintTup(&(*_self_), _46042_k);
			}
		}
		else {
			_case_begin_1c25c0dc1:;
			{
				return false;
			}
		}
		_match_end_1c25c0d6b:;
	};
}



inline void _1c00bc1a5_pushGeneric(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _48535_k, jule::I64 _48549_i) {
	(*_self_)._field_f.get()._field_Generics[_48549_i]=jule::new_ptr<_1c0107ae7_InsGeneric>(_1c0107ae7_InsGeneric{._field_Kind=_48535_k, });
	jule::Ptr<_1be3a4108_GenericDecl> _48717_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48549_i];;
	if (((_48717_gd.get()._field_Constraint == nullptr) || (_48717_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_48717_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1c00bbd86_annotateConstraint(&(*_self_), _48535_k);
}



inline jule::Bool _1c00bc4b3_annotatePrim(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _49543_k) {
	jule::Bool _49559_ok = jule::Bool();
	_49559_ok = _1c00be2d9_annotateAny(&(*_self_), _49543_k);
	return _49559_ok;
}



inline jule::Bool _1c00bc7c1_annotateArr(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _49942_k) {
	jule::Bool _49958_ok = jule::Bool();
	jule::Ptr<_1c0115187_Arr> _50017_parr = _1c010c14b_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50017_parr == nullptr)) {
		_49958_ok = false;
		return _49958_ok;
	};
	jule::Ptr<_1c0115187_Arr> _50417_arr = _1c010c14b_Arr(_49942_k.ptr());;
	(*_self_)._field_k=(&(_50017_parr.get()._field_Elem));
	_49958_ok = _1c00be5e7_annotateKind(&(*_self_), _50417_arr.get()._field_Elem);
	return _49958_ok;
}



inline jule::Bool _1c00bcace_annotateSlc(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _50942_k) {
	jule::Bool _50958_ok = jule::Bool();
	jule::Ptr<_1c0112edc_Slc> _51017_pslc = _1c010c3b0_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51017_pslc == nullptr)) {
		_50958_ok = false;
		return _50958_ok;
	};
	jule::Ptr<_1c0112edc_Slc> _51417_slc = _1c010c3b0_Slc(_50942_k.ptr());;
	(*_self_)._field_k=(&(_51017_pslc.get()._field_Elem));
	_50958_ok = _1c00be5e7_annotateKind(&(*_self_), _51417_slc.get()._field_Elem);
	return _50958_ok;
}



inline jule::Bool _1c00bce86_checkMapKey(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>* _51941_k, jule::Ptr<_1c0109324_TypeKind>& _51961_ck) {
	jule::Bool _51978_ok = jule::Bool();
	jule::Ptr<_1c0109324_TypeKind>* _52017_old = (*_self_)._field_k;;
	(*_self_)._field_k=_51941_k;
	_51978_ok=_1c00be5e7_annotateKind(&(*_self_), _51961_ck);
	(*_self_)._field_k=_52017_old;
	return _51978_ok;
}



inline jule::Bool _1c00bd294_annotateMap(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _52742_k) {
	jule::Bool _52758_ok = jule::Bool();
	jule::Ptr<_1c0114593_Map> _52817_pmap = _1c010cd61_Map((*((*_self_)._field_k)).ptr());;
	if ((_52817_pmap == nullptr)) {
		_52758_ok = false;
		return _52758_ok;
	};
	jule::Ptr<_1c0114593_Map> _53217_m = _1c010cd61_Map(_52742_k.ptr());;
	_52758_ok = (_1c00bce86_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Key)),_53217_m.get()._field_Key) && _1c00bce86_checkMapKey(&(*_self_), (&(_52817_pmap.get()._field_Val)),_53217_m.get()._field_Val));
	return _52758_ok;
}



inline jule::Bool _1c00bd5a2_annotateFn(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _53741_k) {
	jule::Bool _53757_ok = jule::Bool();
	jule::Ptr<_1be462392_FnIns> _53817_pf = _1c010c624_Fn((*((*_self_)._field_k)).ptr());;
	if ((_53817_pf == nullptr)) {
		_53757_ok = false;
		return _53757_ok;
	};
	jule::Ptr<_1be462392_FnIns> _54217_f = _1c010c624_Fn(_53741_k.ptr());;
	{
		
		if ((_53817_pf.get()._field_Params.len() != _54217_f.get()._field_Params.len())) {
			_case_begin_1c25dd817:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		else if ((_1be45eb53_IsVoid(_53817_pf.get()._field_Decl.ptr()) != _1be45eb53_IsVoid(_54217_f.get()._field_Decl.ptr()))) {
			_case_begin_1c25dd88e:;
			{
				_53757_ok = false;
				return _53757_ok;
			}
		}
		_match_end_1c25dd790:;
	};
	_53757_ok=true;
	jule::Ptr<_1c0109324_TypeKind>* _55117_old = (*_self_)._field_k;;
	{
		auto &expr = _54217_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c25e0275:;
		if (it != expr.end()) {
			jule::I64 _55214_i = it - expr.begin();
			jule::Ptr<_1be4614c3_ParamIns> _55221_fp = *it;
			{
				(*_self_)._field_k=(&(_53817_pf.get()._field_Params[_55214_i].get()._field_Kind));
				_53757_ok=(_1c00be5e7_annotateKind(&(*_self_), _55221_fp.get()._field_Kind) && _53757_ok);
			}
			_iter_next_1c25e0275:;
			++it;
			_55214_i++;
			goto _iter_begin_1c25e0275;
		}
		_iter_end_1c25e0275:;
	};
	if ((!(_1be45eb53_IsVoid(_53817_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_53817_pf.get()._field_Result));
		_53757_ok=(_1c00be5e7_annotateKind(&(*_self_), _54217_f.get()._field_Result) && _53757_ok);
	};
	(*_self_)._field_k=_55117_old;
	return _53757_ok;
}



inline jule::Bool _1c00bd8b0_annotatePtr(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _56642_k) {
	jule::Bool _56658_ok = jule::Bool();
	jule::Ptr<_1c0115ae4_Ptr> _56717_pptr = _1c010b90e_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_56717_pptr == nullptr)) {
		_56658_ok = false;
		return _56658_ok;
	};
	jule::Ptr<_1c0115ae4_Ptr> _57117_ptr = _1c010b90e_Ptr(_56642_k.ptr());;
	(*_self_)._field_k=(&(_56717_pptr.get()._field_Elem));
	_56658_ok = _1c00be5e7_annotateKind(&(*_self_), _57117_ptr.get()._field_Elem);
	return _56658_ok;
}



inline jule::Bool _1c00bdbbd_annotateSptr(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _57643_k) {
	jule::Bool _57659_ok = jule::Bool();
	jule::Ptr<_1c0112580_Sptr> _57717_ssptr = _1c010b69a_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_57717_ssptr == nullptr)) {
		_57659_ok = false;
		return _57659_ok;
	};
	jule::Ptr<_1c0112580_Sptr> _58117_sptr = _1c010b69a_Sptr(_57643_k.ptr());;
	(*_self_)._field_k=(&(_57717_ssptr.get()._field_Elem));
	_57659_ok = _1c00be5e7_annotateKind(&(*_self_), _58117_sptr.get()._field_Elem);
	return _57659_ok;
}



inline jule::Bool _1c00bdecb_annotateStruct(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _58645_k) {
	jule::Bool _58661_ok = jule::Bool();
	jule::Ptr<_1be3b359b_StructIns> _58717_s = _1c010c888_Struct((*((*_self_)._field_k)).ptr());;
	if ((_58717_s == nullptr)) {
		_58661_ok = false;
		return _58661_ok;
	};
	jule::Ptr<_1be3b359b_StructIns> _59117_s2 = _1c010c888_Struct(_58645_k.ptr());;
	if ((_58717_s.get()._field_Generics.len() != _59117_s2.get()._field_Generics.len())) {
		_58661_ok = false;
		return _58661_ok;
	};
	{
		auto &expr = _58717_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c25e8b96:;
		if (it != expr.end()) {
			jule::I64 _59514_i = it - expr.begin();
			jule::Ptr<_1c0107ae7_InsGeneric> _59521_g = *it;
			{
				jule::Ptr<_1c0107ae7_InsGeneric> _59621_g2 = _59117_s2.get()._field_Generics[_59514_i];;
				if (_1c0109a2d_Equals(_59521_g.get()._field_Kind, _59621_g2.get()._field_Kind)) {
					goto _iter_next_1c25e8b96;
				};
				(*_self_)._field_k=(&(_59521_g.get()._field_Kind));
				if ((!(_1c00be5e7_annotateKind(&(*_self_), _59621_g2.get()._field_Kind)))) {
					_58661_ok = false;
					return _58661_ok;
				};
			}
			_iter_next_1c25e8b96:;
			++it;
			_59514_i++;
			goto _iter_begin_1c25e8b96;
		}
		_iter_end_1c25e8b96:;
	};
	_58661_ok = true;
	return _58661_ok;
}



inline jule::Bool _1c00be2d9_annotateAny(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _60842_k) {
	jule::Bool _60858_ok = jule::Bool();
	jule::Str _60913_kind = _1c0109720_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c25ebb00:;
		if (it != expr.end()) {
			jule::I64 _61013_i = it - expr.begin();
			jule::Ptr<_1be3a4108_GenericDecl> _61016_g = *it;
			{
				if ((_60913_kind != _61016_g.get()._field_Ident)) {
					goto _iter_next_1c25ebb00;
				};
				jule::Ptr<_1c0107ae7_InsGeneric> _61417_t = (*_self_)._field_f.get()._field_Generics[_61013_i];;
				{
					
					if ((_61417_t == nullptr) || (_61417_t.get()._field_Kind == nullptr)) {
						_case_begin_1c25ed6d4:;
						{
							_1c00bc1a5_pushGeneric(&(*_self_), _60842_k,_61013_i);
						}
					}
					else if ((!(_1c0109a2d_Equals(_61417_t.get()._field_Kind, _60842_k)))) {
						_case_begin_1c25ed75b:;
						{
							_60858_ok = false;
							return _60858_ok;
						}
					}
					_match_end_1c25ed591:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_60842_k.get()._field_Kind;
				_60858_ok = true;
				return _60858_ok;
			}
			_iter_next_1c25ebb00:;
			++it;
			_61013_i++;
			goto _iter_begin_1c25ebb00;
		}
		_iter_end_1c25ebb00:;
	};
	_60858_ok = false;
	return _60858_ok;
}



inline jule::Bool _1c00be5e7_annotateKind(_1c00ba736_dynamicTypeAnnotation* _self_, jule::Ptr<_1c0109324_TypeKind>& _63043_k) {
	jule::Bool _63059_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _63059_ok;
	};
	{
		
		if (_1c00be2d9_annotateAny(&(*_self_), _63043_k)) {
			_case_begin_1c2601770:;
			{
				_63059_ok = true;
				return _63059_ok;
			}
		}
		else if ((_1c010b436_Prim(_63043_k.ptr()) != nullptr)) {
			_case_begin_1c26017d6:;
			{
				_63059_ok = _1c00bc4b3_annotatePrim(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1c010c14b_Arr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1c2601484:;
			{
				_63059_ok = _1c00bc7c1_annotateArr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1c010c3b0_Slc(_63043_k.ptr()) != nullptr)) {
			_case_begin_1c26014ea:;
			{
				_63059_ok = _1c00bcace_annotateSlc(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1c010cd61_Map(_63043_k.ptr()) != nullptr)) {
			_case_begin_1c2601561:;
			{
				_63059_ok = _1c00bd294_annotateMap(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1c010c624_Fn(_63043_k.ptr()) != nullptr)) {
			_case_begin_1c2601088:;
			{
				_63059_ok = _1c00bd5a2_annotateFn(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1c010b90e_Ptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1c26010ee:;
			{
				_63059_ok = _1c00bd8b0_annotatePtr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1c010b69a_Sptr(_63043_k.ptr()) != nullptr)) {
			_case_begin_1c2601165:;
			{
				_63059_ok = _1c00bdbbd_annotateSptr(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else if ((_1c010c888_Struct(_63043_k.ptr()) != nullptr)) {
			_case_begin_1c26011cb:;
			{
				_63059_ok = _1c00bdecb_annotateStruct(&(*_self_), _63043_k);
				return _63059_ok;
			}
		}
		else {
			_case_begin_1c2601022:;
			{
				_63059_ok = false;
				return _63059_ok;
			}
		}
		_match_end_1c2600ebc:;
	};
}



inline jule::Bool _1c00be85b_annotate(_1c00ba736_dynamicTypeAnnotation* _self_) {
	jule::Bool _65836_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	_65836_ok = _1c00be5e7_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return _65836_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00ba736_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c;
	_Stream << "}";
	return _Stream;
}



inline void _1c00c0582_pushErrToken(_1c00c0032_fnCallArgChecker* _self_, jule::Ptr<_1d675d511_Token> _67431_token, jule::Str _67446_fmt, jule::Slice<jule::Any> _67459_args) {
	_1c00671b6_pushErr((*_self_)._field_e.get()._field_s.ptr(), _67431_token,_67446_fmt,jule::Any(_67459_args));
}



inline void _1c00c08a1_pushErr(_1c00c0032_fnCallArgChecker* _self_, jule::Str _67826_fmt, jule::Slice<jule::Any> _67839_args) {
	_1c00c0582_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_67826_fmt,jule::Any(_67839_args));
}



inline jule::Slice<jule::Ptr<_1be4614c3_ParamIns>> _1c00c0b15_getParams(_1c00c0032_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1be45d4d1_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_Params;
}



inline jule::Bool _1c00c0e23_checkCounts(_1c00c0032_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>& _69131_params) {
	jule::Bool _69154_ok = jule::Bool();
	jule::I64 _69217_n = _69131_params.len();;
	if (((_69217_n > 0LL) && _1be45d4d1_IsSelf(_69131_params[0LL].get()._field_Decl.ptr()))) {
		(_69217_n)--;
	};
	jule::I64 _69717_diff = (_69217_n - (*_self_)._field_args.len());;
	{
		
		if ((_69717_diff == 0LL)) {
			_case_begin_1c260cea7:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69217_n > 0LL) && _69131_params[(_69217_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1c260d01d:;
			{
				_69154_ok = true;
				return _69154_ok;
			}
		}
		else if (((_69717_diff < 0LL) || (_69717_diff > _69131_params.len()))) {
			_case_begin_1c260d084:;
			{
				_1c00c08a1_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_69154_ok = false;
				return _69154_ok;
			}
		}
		_match_end_1c260ce0d:;
	};
	jule::Str _70817_idents = jule::Str();;
	for (; (_69717_diff > 0LL); (_69717_diff)--) {
		{
			_70817_idents+=(jule::Str(", ", 2) + _69131_params[(_69217_n - _69717_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1c2610130:;
	}
	_iter_end_1c2610130:;;
	(_70817_idents).mut_slice(2LL);;
	_1c00c08a1_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_70817_idents)}));
	_69154_ok = false;
	return _69154_ok;
}



inline jule::Bool _1c00c1374_checkArg(_1c00c0032_fnCallArgChecker* _self_, jule::Ptr<_1be4614c3_ParamIns>& _71832_p, jule::Ptr<_1c00cd282_Data>& _71851_arg, jule::Ptr<_1d675d511_Token>& _71868_errorToken) {
	jule::Bool _71890_ok = jule::Bool();
	if (((*_self_)._field_dynamicAnnotation && _1be4644a4_parameterUsesGenerics(_71832_p.get()._field_Decl,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		_71890_ok=(!(_71832_p.get()._field_Decl.get()._field_Variadic));
		if (_71890_ok) {
			_1c00ba736_dynamicTypeAnnotation _72225_dta = _1c00ba736_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_71832_p, ._field_a=_71851_arg, ._field_errorToken=_71868_errorToken, };;
			_71890_ok=_1c00be85b_annotate(&_72225_dta);
		};
		if ((!(_71890_ok))) {
			_1c00c0582_pushErrToken(&(*_self_), _71868_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_71890_ok = false;
			return _71890_ok;
		};
	};
	if (_1c0070db2_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Mutable,_71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken)) {
		_1c006d178_checkAssignType((*_self_)._field_e.get()._field_s, _71832_p.get()._field_Decl.get()._field_Reference,_71832_p.get()._field_Kind,_71851_arg,_71868_errorToken);
	};
	_71890_ok = true;
	return _71890_ok;
}



inline jule::Bool _1c00c172b_push(_1c00c0032_fnCallArgChecker* _self_, jule::Ptr<_1be4614c3_ParamIns>& _74528_p, jule::Ptr<_1be39b045_Expr> _74546_arg) {
	jule::Bool _74560_ok = jule::Bool();
	jule::Ptr<_1c0109324_TypeKind> _74617_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _74713_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1c00cd282_Data> _74817_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_74528_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_74528_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_74528_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_74817_d=_1c00ea49c_evalExprKind((*_self_)._field_e, _74546_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_74617_old;
	(*_self_)._field_e.get()._field_immutable=_74713_old_immut;
	if ((_74817_d == nullptr)) {
		_74560_ok = false;
		return _74560_ok;
	};
	_74560_ok=_1c00c1374_checkArg(&(*_self_), _74528_p,_74817_d,_74546_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_74817_d.get()._field_Model);;
	return _74560_ok;
}



inline jule::Bool _1c00c1ad3_pushVariadic(_1c00c0032_fnCallArgChecker* _self_, jule::Ptr<_1be4614c3_ParamIns>& _77036_p, jule::I64 _77054_i) {
	jule::Bool _77064_ok = jule::Bool();
	_77064_ok=true;
	jule::Bool _77217_variadiced = false;;
	jule::Bool _77313_more = ((_77054_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1be4582cd_SliceExprModel> _77417_model = jule::new_ptr<_1be4582cd_SliceExprModel>(_1be4582cd_SliceExprModel{._field_ElemKind=_77036_p.get()._field_Kind, });;
	jule::Ptr<_1c0109324_TypeKind> _77817_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _78313_variadic = _77036_p.get()._field_Kind.get()._field_Variadic;;
	_77036_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77036_p.get()._field_Kind.get()._field_Variadic=_78313_variadic;
	});;
	for (; (_77054_i < (*_self_)._field_args.len()); (_77054_i)++) {
		{
			jule::Ptr<_1be39b045_Expr> _79021_arg = (*_self_)._field_args[_77054_i];;
			{
				auto &_match_expr{ _79021_arg.get()._field_Kind };
				
				if (_match_expr.type_is<jule::Ptr<_1be39db6e_VariadicExpr>>()) {
					_case_begin_1c261d7d1:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c0112edc_Slc>(_1c0112edc_Slc{._field_Elem=_77036_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1c261e1e9:;
					{
						(*_self_)._field_e.get()._field_prefix=_77036_p.get()._field_Kind;
					}
				}
				_match_end_1c261e194:;
			};
			jule::Ptr<_1c00cd282_Data> _80321_d = _1c00ea7aa_eval((*_self_)._field_e, _79021_arg);;
			if ((_80321_d == nullptr)) {
				_77064_ok=false;
				goto _iter_next_1c261ccb9;
			};
			if (_80321_d.get()._field_Kind.get()._field_Variadic) {
				_77217_variadiced=true;
				_77036_p.get()._field_Kind.get()._field_Variadic=true;
				_77064_ok=(_77064_ok && _1c00c1374_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
				{
					auto &_match_expr{ _80321_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1be4582cd_SliceExprModel>>()) {
						_case_begin_1c262143d:;
						{
							_77417_model=_80321_d.get()._field_Model.operator jule::Ptr<_1be4582cd_SliceExprModel>();
							_77417_model.get()._field_ElemKind=_77036_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1c2622285:;
						{
							_77417_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_80321_d.get()._field_Model);;
						}
					}
					_match_end_1c2622021:;
				};
				(_77054_i)++;
				goto _iter_end_1c261ccb9;
			};
			_77064_ok=(_77064_ok && _1c00c1374_checkArg(&(*_self_), _77036_p,_80321_d,_79021_arg.get()._field_Token));
			_77417_model.get()._field_Elems = jule::alloc_for_append(_77417_model.get()._field_Elems,1);_77417_model.get()._field_Elems.__push(_80321_d.get()._field_Model);;
		}
	_iter_next_1c261ccb9:;
	}
	_iter_end_1c261ccb9:;;
	(*_self_)._field_e.get()._field_prefix=_77817_old;
	if ((_77217_variadiced && _77313_more)) {
		_1c00c0582_pushErrToken(&(*_self_), (*_self_)._field_args[_77054_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_77417_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(static_cast<jule::Any>(_77417_model));;
	};
	return _77064_ok;
}



inline jule::Bool _1c00c1de1_checkArgs(_1c00c0032_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>& _84633_params) {
	jule::Bool _84656_ok = jule::Bool();
	jule::Bool _84713_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_84656_ok=true;
	jule::I64 _85117_i = 0LL;;
	if (((_84633_params.len() > 0LL) && _1be45d4d1_IsSelf(_84633_params[0LL].get()._field_Decl.ptr()))) {
		(_85117_i)++;
	};
	_julec_label_iter:;
	while ((_85117_i < _84633_params.len())) {
		{
			jule::Ptr<_1be4614c3_ParamIns> _85821_p = _84633_params[_85117_i];;
			{
				
				if (_85821_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1c262904a:;
					{
						_84656_ok=(_1c00c1ad3_pushVariadic(&(*_self_), _85821_p,_85117_i) && _84656_ok);
						goto _iter_end_1c2626d7d;
					}
				}
				else if (((*_self_)._field_args.len() <= _85117_i)) {
					_case_begin_1c2628885:;
					{
						_84656_ok=false;
						goto _iter_end_1c2626d7d;
					}
				}
				else {
					_case_begin_1c26284cd:;
					{
						_84656_ok=(_1c00c172b_push(&(*_self_), _85821_p,(*_self_)._field_args[_85117_i]) && _84656_ok);
					}
				}
				_match_end_1c2628467:;
			};
			(_85117_i)++;
		}
	_iter_next_1c2626d7d:;
	}
	_iter_end_1c2626d7d:;;
	(*_self_)._field_e.get()._field_arg=_84713_arg;
	return _84656_ok;
}



inline jule::Bool _1c00c2177_checkDynamicTypeAnnotation(_1c00c0032_fnCallArgChecker* _self_) {
	jule::Bool _87747_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c262a8ba:;
		if (it != expr.end()) {
			jule::Ptr<_1c0107ae7_InsGeneric> _87816_g = *it;
			{
				if ((_87816_g == nullptr)) {
					_1c00c08a1_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_87747_ok = false;
					return _87747_ok;
				};
			}
			_iter_next_1c262a8ba:;
			++it;
			goto _iter_begin_1c262a8ba;
		}
		_iter_end_1c262a8ba:;
	};
	_87747_ok = true;
	return _87747_ok;
}



inline jule::Bool _1c00c23ec_check(_1c00c0032_fnCallArgChecker* _self_) {
	jule::Bool _88726_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1be4614c3_ParamIns>> _88817_params = _1c00c0b15_getParams(&(*_self_));;
	_88726_ok=_1c00c0e23_checkCounts(&(*_self_), _88817_params);
	if ((!(_88726_ok))) {
		_88726_ok = false;
		return _88726_ok;
	};
	_88726_ok=_1c00c1de1_checkArgs(&(*_self_), _88817_params);
	if ((_88726_ok && (*_self_)._field_dynamicAnnotation)) {
		_88726_ok=_1c00c2177_checkDynamicTypeAnnotation(&(*_self_));
	};
	return _88726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00c0032_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels;
	_Stream << "}";
	return _Stream;
}



inline void _1c00c2e47_pushErr(_1c00c293b_structLitChecker* _self_, jule::Ptr<_1d675d511_Token> _90926_token, jule::Str _90941_fmt, jule::Slice<jule::Any> _90954_args) {
	_1c00d030b_pushErr((*_self_)._field_e.ptr(), _90926_token,_90941_fmt,jule::Any(_90954_args));
}



inline void _1c00c3266_pushSugggestion(_1c00c293b_structLitChecker* _self_, jule::Str _91434_fmt, jule::Slice<jule::Any> _91447_args) {
	_1c00d062a_pushSugggestion((*_self_)._field_e.ptr(), _91434_fmt,jule::Any(_91447_args));
}



inline void _1c00c362e_pushMatch(_1c00c293b_structLitChecker* _self_, jule::Ptr<_1be38e8b8_FieldIns>& _91833_f, jule::Ptr<_1c00cd282_Data>& _91852_d, jule::Ptr<_1d675d511_Token>& _91867_errorToken) {
	;
	if (_1c0070db2_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken)) {
		_1c006d178_checkAssignType((*_self_)._field_e.get()._field_s, false,_91833_f.get()._field_Kind,_91852_d,_91867_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1be45783d_StructArgExprModel>(_1be45783d_StructArgExprModel{._field_Field=_91833_f, ._field_Expr=_91852_d.get()._field_Model}));;
}



inline void _1c00c394d_checkPair(_1c00c293b_structLitChecker* _self_, jule::Ptr<_1be3a0c92_FieldExprPair>& _93133_pair, jule::Slice<jule::Ptr<_1be39b045_Expr>>& _93160_exprs) {
	jule::Ptr<_1be38e8b8_FieldIns> _93317_f = _1be391238_FindField((*_self_)._field_s.ptr(), _93133_pair.get()._field_Field.get()._field_Kind);;
	if ((_93317_f == nullptr)) {
		_1c00c2e47_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		return;;
	};
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _93317_f.get()._field_Decl.get()._field_Public,_93317_f.get()._field_Decl.get()._field_Token)))) {
		_1c00c2e47_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
		_1c00c3266_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _93160_exprs;
		auto it = expr.begin();
		_iter_begin_1c2635991:;
		if (it != expr.end()) {
			jule::Ptr<_1be39b045_Expr> _94521_expr = *it;
			{
				{
					auto &_match_expr{ _94521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1be3a0c92_FieldExprPair>>()) {
						_case_begin_1c2636354:;
						{
							jule::Ptr<_1be3a0c92_FieldExprPair> _94825_dpair = _94521_expr.get()._field_Kind.operator jule::Ptr<_1be3a0c92_FieldExprPair>();;
							{
								
								if ((_93133_pair == _94825_dpair)) {
									_case_begin_1c2637344:;
									{
										goto _iter_end_1c2635991;
									}
								}
								else if ((_93133_pair.get()._field_Field.get()._field_Kind == _94825_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1c26373bb:;
									{
										_1c00c2e47_pushErr(&(*_self_), _93133_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_93133_pair.get()._field_Field.get()._field_Kind)}));
										goto _iter_end_1c2635991;
									}
								}
								_match_end_1c2637289:;
							};
						}
					}
					_match_end_1c263619a:;
				};
			}
			_iter_next_1c2635991:;
			++it;
			goto _iter_begin_1c2635991;
		}
		_iter_end_1c2635991:;
	};
	jule::Ptr<_1c0109324_TypeKind> _95917_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_95917_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_93317_f.get()._field_Kind;
	jule::Ptr<_1c00cd282_Data> _96317_d = _1c00ea49c_evalExprKind((*_self_)._field_e, _93133_pair.get()._field_Expr.get()._field_Kind);;
	if ((_96317_d == nullptr)) {
		return;;
	};
	_1c00c362e_pushMatch(&(*_self_), _93317_f,_96317_d,_93133_pair.get()._field_Field);
}



inline jule::Bool _1c00c3c5b_readyExprs(_1c00c293b_structLitChecker* _self_, jule::Slice<jule::Ptr<_1be39b045_Expr>>& _97034_exprs) {
	jule::Bool _97117_ok = true;;
	{
		auto &expr = _97034_exprs;
		auto it = expr.begin();
		_iter_begin_1c263ad81:;
		if (it != expr.end()) {
			jule::I64 _97214_i = it - expr.begin();
			jule::Ptr<_1be39b045_Expr> _97221_expr = *it;
			{
				{
					auto &_match_expr{ _97221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1be3a247a_KeyValPair>>()) {
						_case_begin_1c263bada:;
						{
							jule::Ptr<_1be3a247a_KeyValPair> _97525_pair = _97221_expr.get()._field_Kind.operator jule::Ptr<_1be3a247a_KeyValPair>();;
							{
								auto &_match_expr{ _97525_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type_is<jule::Ptr<_1be39d0ad_IdentExpr>>()) {
									_case_begin_1c263c47b:;
									{
										goto _match_end_1c263c910;
									}
								}
								else {
									_case_begin_1c263cb85:;
									{
										_1c00c2e47_pushErr(&(*_self_), _97525_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_97117_ok=false;
										goto _iter_next_1c263ad81;
									}
								}
								_match_end_1c263c910:;
							};
							_97034_exprs[_97214_i].get()._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be3a0c92_FieldExprPair>(_1be3a0c92_FieldExprPair{._field_Field=_97525_pair.get()._field_Key.get()._field_Token, ._field_Expr=_97525_pair.get()._field_Val}));
						}
					}
					_match_end_1c263b931:;
				};
			}
			_iter_next_1c263ad81:;
			++it;
			_97214_i++;
			goto _iter_begin_1c263ad81;
		}
		_iter_end_1c263ad81:;
	};
	return _97117_ok;
}



inline void _1c00c3ed1_check(_1c00c293b_structLitChecker* _self_, jule::Slice<jule::Ptr<_1be39b045_Expr>>& _99429_exprs) {
	if ((_99429_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1c00c3c5b_readyExprs(&(*_self_), _99429_exprs)))) {
		return;;
	};
	jule::Bool _100117_paired = false;;
	{
		auto &expr = _99429_exprs;
		auto it = expr.begin();
		_iter_begin_1c263ac1b:;
		if (it != expr.end()) {
			jule::I64 _100214_i = it - expr.begin();
			jule::Ptr<_1be39b045_Expr> _100221_expr = *it;
			{
				{
					auto &_match_expr{ _100221_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1be3a0c92_FieldExprPair>>()) {
						_case_begin_1c2646034:;
						{
							jule::Ptr<_1be3a0c92_FieldExprPair> _100525_pair = _100221_expr.get()._field_Kind.operator jule::Ptr<_1be3a0c92_FieldExprPair>();;
							if (((_100214_i > 0LL) && (!(_100117_paired)))) {
								_1c00c2e47_pushErr(&(*_self_), _100525_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_100117_paired=true;
							_1c00c394d_checkPair(&(*_self_), _100525_pair,_99429_exprs);
						}
					}
					else {
						_case_begin_1c2640e1e:;
						{
							if (_100117_paired) {
								_1c00c2e47_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_100214_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_1c00c2e47_pushErr(&(*_self_), _100221_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1c263ac1b;
							};
							jule::Ptr<_1be38e8b8_FieldIns> _102025_field = (*_self_)._field_s.get()._field_Fields[_100214_i];;
							if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102025_field.get()._field_Decl.get()._field_Public,_102025_field.get()._field_Decl.get()._field_Token)))) {
								_1c00c2e47_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1c00c3266_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1c0109324_TypeKind> _102825_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_102825_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102025_field.get()._field_Kind;
							jule::Ptr<_1c00cd282_Data> _103225_d = _1c00ea49c_evalExprKind((*_self_)._field_e, _100221_expr.get()._field_Kind);;
							if ((_103225_d == nullptr)) {
								goto _iter_next_1c263ac1b;
							};
							_1c00c362e_pushMatch(&(*_self_), _102025_field,_103225_d,_100221_expr.get()._field_Token);
						}
					}
					_match_end_1c2640c98:;
				};
			}
			_iter_next_1c263ac1b:;
			++it;
			_100214_i++;
			goto _iter_begin_1c263ac1b;
		}
		_iter_end_1c263ac1b:;
	};
	if ((!(_100117_paired))) {
		jule::I64 _104317_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _104421_diff = (_104317_n - _99429_exprs.len());;
		{
			
			if ((_104421_diff <= 0LL)) {
				_case_begin_1c264891b:;
				{
					return;;
				}
			}
			_match_end_1c26487b7:;
		};
		jule::Str _105021_idents = jule::Str();;
		for (; (_104421_diff > 0LL); (_104421_diff)--) {
			{
				_105021_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_104317_n - _104421_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1c2649367:;
		}
		_iter_end_1c2649367:;;
		(_105021_idents).mut_slice(2LL);;
		_1c00c2e47_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105021_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c00c293b_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0081334_Var> _1c00c49b5_buildVar(_1c00c4520_rangeChecker* _self_, jule::Ptr<_1be3a9817_VarDecl>& _106928_decl) {
	jule::Ptr<_1c0081334_Var> _107017_v = _1be46a037_buildVar(_106928_decl);;
	return _107017_v;
}



inline void _1c00c4b91_setSizeKey(_1c00c4520_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1d6760ca5_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_1c00c49b5_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c264d05d:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1c00803bb_IterRelation>(_1c00803bb_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1c0081334_Var>()});
			}
		}
		_match_end_1c264cea3:;
	};
}



inline void _1c00c5059_checkRangeExprValidity(_1c00c4520_rangeChecker* _self_, jule::Ptr<_1c00cd282_Data>& _110046_d, jule::Ptr<_1c0081334_Var>& _110057_key, jule::Ptr<_1c0109324_TypeKind>& _110073_k) {
	jule::Bool _110117__mut = _110057_key.get()._field_Mutable;;
	if ((_110117__mut && (!(_1c010a721_Mutable(_110073_k.ptr()))))) {
		_110117__mut=false;
	};
	_1c0070db2_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _110117__mut,_110057_key.get()._field_Reference,_110057_key.get()._field_Kind.get()._field_Kind,_110046_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _1c00c5235_checkSlice(_1c00c4520_rangeChecker* _self_) {
	_1c00c4b91_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1d6760ca5_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0112edc_Slc> _111917_slc = _1c010c3b0_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1c00c49b5_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=_111917_slc.get()._field_Elem});
	_1c00c5059_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_111917_slc.get()._field_Elem);
}



inline void _1c00c5411_checkArray(_1c00c4520_rangeChecker* _self_) {
	_1c00c4b91_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1d6760ca5_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0115187_Arr> _113217_arr = _1c010c14b_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1c00c49b5_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=_113217_arr.get()._field_Elem});
	_1c00c5059_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_113217_arr.get()._field_Elem);
}



inline void _1c00c55dc_checkMapKeyA(_1c00c4520_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _1d6760ca5_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0114593_Map> _114417_m = _1c010cd61_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_1c00c49b5_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=_114417_m.get()._field_Key});
	jule::Ptr<_1c00cd282_Data> _114817_d = jule::new_ptr<_1c00cd282_Data>((*((*_self_)._field_d)));;
	_114817_d.get()._field_Kind=_114417_m.get()._field_Key;
	_1c00c5059_checkRangeExprValidity(&(*_self_), _114817_d,(*_self_)._field_Kind.get()._field_KeyA,_114417_m.get()._field_Key);
}



inline void _1c00c57b8_checkMapKeyB(_1c00c4520_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1d6760ca5_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c0114593_Map> _115917_m = _1c010cd61_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1c00c49b5_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=_115917_m.get()._field_Val});
	jule::Ptr<_1c00cd282_Data> _116317_d = jule::new_ptr<_1c00cd282_Data>((*((*_self_)._field_d)));;
	_116317_d.get()._field_Kind=_115917_m.get()._field_Val;
	_1c00c5059_checkRangeExprValidity(&(*_self_), _116317_d,(*_self_)._field_Kind.get()._field_KeyB,_115917_m.get()._field_Val);
}



inline void _1c00c5994_checkMap(_1c00c4520_rangeChecker* _self_) {
	_1c00c55dc_checkMapKeyA(&(*_self_));
	_1c00c57b8_checkMapKeyB(&(*_self_));
}



inline void _1c00c5b70_checkStr(_1c00c4520_rangeChecker* _self_) {
	_1c00c4b91_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _1d6760ca5_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_1c00c49b5_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1c00c5dd4_check(_1c00c4520_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1c2661b65:;
		}
		else if ((_1c010c3b0_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2660e61:;
			{
				_1c00c5235_checkSlice(&(*_self_));
				return true;
			}
		}
		else if ((_1c010c14b_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2660ec7:;
			{
				_1c00c5411_checkArray(&(*_self_));
				return true;
			}
		}
		else if ((_1c010cd61_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c266103d:;
			{
				_1c00c5994_checkMap(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1c2660dea:;
			{
				jule::Ptr<_1c010dceb_Prim> _120117_prim = _1c010b436_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_120117_prim != nullptr) && _1c0112030_IsStr(_120117_prim.ptr()))) {
					_1c00c5b70_checkStr(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1c2660d1d:;
	};
	_1c00671b6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00c4520_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1c00c6b2c_prepareTypes(_1c00c6676_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1be4634b4_Types((*_self_)._field_f.ptr());
	};
}



inline void _1c00c6da2_prepareExprs(_1c00c6676_retTypeChecker* _self_, jule::Ptr<_1be39b045_Expr>& _123036_e) {
	if ((_123036_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123036_e.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be39bbc2_TupleExpr>>()) {
			_case_begin_1c2666d68:;
			{
				(*_self_)._field_exprs=_123036_e.get()._field_Kind.operator jule::Ptr<_1be39bbc2_TupleExpr>().get()._field_Expr;
			}
		}
		else {
			_case_begin_1c26669d3:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123036_e);;
			}
		}
		_match_end_1c2666593:;
	};
}



inline void _1c00c707d_retVars(_1c00c6676_retTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1be45eb53_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1c0081334_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len());
	jule::Ptr<_1c004b5b8_scopeChecker> _124817_rootScope = _1c004c993_getRoot((*_self_)._field_sc);;
	jule::I64 _125017_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1c2669992:;
		if (it != expr.end()) {
			jule::I64 _125113_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _125116_ident = *it;
			{
				if (((!(_1d6760ca5_IsIgnoreIdent(_125116_ident.get()._field_Kind))) && (!(_1d676104c_IsAnonIdent(_125116_ident.get()._field_Kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_124817_rootScope.get()._field_table.get()._field_Vars[_125017_j]);;
					(_125017_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1c0081334_Var>(_1c0081334_Var{._field_Ident=jule::Str("_", 1), ._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=(*_self_)._field_types[_125113_i]}), }));;
				};
			}
			_iter_next_1c2669992:;
			++it;
			_125113_i++;
			goto _iter_begin_1c2669992;
		}
		_iter_end_1c2669992:;
	};
	if ((_125017_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1c00c7259_checkExprs(_1c00c6676_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c00cd282_Data>> _127317_datas = jule::Slice<jule::Ptr<_1c00cd282_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c266d710:;
		if (it != expr.end()) {
			jule::I64 _127414_i = it - expr.begin();
			jule::Ptr<_1be39b045_Expr> _127421_expr = *it;
			{
				if ((_127414_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1c266d710;
				};
				jule::Ptr<_1c0109324_TypeKind> _127921_t = (*_self_)._field_types[_127414_i];;
				jule::Ptr<_1c00cd282_Data> _128121_d = _1c00eaab8_evalExpr(_1c006c870_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1c0124e55_Lookup>((*_self_)._field_sc, 0),_127921_t), _127421_expr);;
				if ((_128121_d == nullptr)) {
					goto _iter_next_1c266d710;
				};
				_127317_datas = jule::alloc_for_append(_127317_datas,1);_127317_datas.__push(_128121_d);;
				if (((!(_128121_d.get()._field_Mutable)) && _1c010a721_Mutable(_128121_d.get()._field_Kind.ptr()))) {
					_1c00671b6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1c00b8d1c_assignTypeChecker _129321_ac = _1c00b8d1c_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_127921_t, ._field_d=_128121_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_1c00b9e94_check(&_129321_ac);
			}
			_iter_next_1c266d710:;
			++it;
			_127414_i++;
			goto _iter_begin_1c266d710;
		}
		_iter_end_1c266d710:;
	};
	if ((_127317_datas.len() > 1LL)) {
		(*_self_)._field_model=static_cast<jule::Any>(jule::new_ptr<_1be459d18_TupleExprModel>(_1be459d18_TupleExprModel{._field_Datas=_127317_datas}));
	} else if ((_127317_datas.len() == 1LL)) {
		(*_self_)._field_model=_127317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1c00c7567_check(_1c00c6676_retTypeChecker* _self_, jule::Ptr<_1be39b045_Expr>& _131229_e) {
	_1c00c6b2c_prepareTypes(&(*_self_));
	_1c00c6da2_prepareExprs(&(*_self_), _131229_e);
	_1c00c707d_retVars(&(*_self_));
	jule::I64 _131713_n = (*_self_)._field_exprs.len();;
	if (((_131713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1be460868_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_1c00671b6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_131713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1be45eb53_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_1c00671b6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_131713_n > (*_self_)._field_types.len())) {
		_1c00671b6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_131713_n < (*_self_)._field_types.len())) {
		_1c00671b6_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1c00c7259_checkExprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00c6676_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c00c8a41_FindPackage(_1c00c8524_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c2b9ea43:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1c2b9ea43:;
			++it;
			goto _iter_begin_1c2b9ea43;
		}
		_iter_end_1c2b9ea43:;
	};
	return nullptr;
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c00c8d4e_SelectPackage(_1c00c8524_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c2ba09de:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1c2ba09de:;
			++it;
			goto _iter_begin_1c2ba09de;
		}
		_iter_end_1c2ba09de:;
	};
	return nullptr;
}



inline jule::Ptr<_1c0081334_Var> _1c00c9206_FindVar(_1c00c8524_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1c00cacb8_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);
}



inline jule::Ptr<_1c0108631_TypeAlias> _1c00c95ad_FindTypeAlias(_1c00c8524_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1c00cb219_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);
}



inline jule::Ptr<_1be387251_Struct> _1c00c9965_FindStruct(_1c00c8524_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c2ba3519:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;
				};
			}
			_iter_next_1c2ba3519:;
			++it;
			goto _iter_begin_1c2ba3519;
		}
		_iter_end_1c2ba3519:;
	};
	return nullptr;
}



inline jule::Ptr<_1be45e6e1_Fn> _1c00c9d1c_FindFn(_1c00c8524_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c2ba49b0:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;
				};
			}
			_iter_next_1c2ba49b0:;
			++it;
			goto _iter_begin_1c2ba49b0;
		}
		_iter_end_1c2ba49b0:;
	};
	return nullptr;
}



inline jule::Ptr<_1be47159e_Trait> _1c00ca12a_FindTrait(_1c00c8524_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c2ba5c36:;
		if (it != expr.end()) {
			jule::Ptr<_1be47159e_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1c2ba5c36:;
			++it;
			goto _iter_begin_1c2ba5c36;
		}
		_iter_end_1c2ba5c36:;
	};
	return nullptr;
}



inline jule::Ptr<_1be4736e4_Enum> _1c00ca438_FindEnum(_1c00c8524_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c2ba6bc1:;
		if (it != expr.end()) {
			jule::Ptr<_1be4736e4_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1c2ba6bc1:;
			++it;
			goto _iter_begin_1c2ba6bc1;
		}
		_iter_end_1c2ba6bc1:;
	};
	return nullptr;
}



inline jule::Ptr<_1be474cde_TypeEnum> _1c00ca746_FindTypeEnum(_1c00c8524_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c2ba7199:;
		if (it != expr.end()) {
			jule::Ptr<_1be474cde_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;
				};
			}
			_iter_next_1c2ba7199:;
			++it;
			goto _iter_begin_1c2ba7199;
		}
		_iter_end_1c2ba7199:;
	};
	return nullptr;
}



inline jule::Ptr<_1c0081334_Var> _1c00cacb8_findVar(_1c00c8524_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1c0081334_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;
				};
			}
		_iter_next_1c2ba9be6:;
		}
		_iter_end_1c2ba9be6:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1c2ba9652:;
			if (it != expr.end()) {
				jule::Ptr<_1c0081334_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;
					};
				}
				_iter_next_1c2ba9652:;
				++it;
				goto _iter_begin_1c2ba9652;
			}
			_iter_end_1c2ba9652:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1c0108631_TypeAlias> _1c00cb219_findTypeAlias(_1c00c8524_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1c0108631_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;
				};
			}
		_iter_next_1c2bacec4:;
		}
		_iter_end_1c2bacec4:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1c2bac930:;
			if (it != expr.end()) {
				jule::Ptr<_1c0108631_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;
					};
				}
				_iter_next_1c2bac930:;
				++it;
				goto _iter_begin_1c2bac930;
			}
			_iter_end_1c2bac930:;
		};
	};
	return nullptr;
}



inline jule::Any _1c00cb5c1_defByIdent(_1c00c8524_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c2bae910:;
		if (it != expr.end()) {
			jule::Ptr<_1c0081334_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v);
				};
			}
			_iter_next_1c2bae910:;
			++it;
			goto _iter_begin_1c2bae910;
		}
		_iter_end_1c2bae910:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c2bb123b:;
		if (it != expr.end()) {
			jule::Ptr<_1c0108631_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta);
				};
			}
			_iter_next_1c2bb123b:;
			++it;
			goto _iter_begin_1c2bb123b;
		}
		_iter_end_1c2bb123b:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c2bb202d:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s);
				};
			}
			_iter_next_1c2bb202d:;
			++it;
			goto _iter_begin_1c2bb202d;
		}
		_iter_end_1c2bb202d:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c2bb2da8:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f);
				};
			}
			_iter_next_1c2bb2da8:;
			++it;
			goto _iter_begin_1c2bb2da8;
		}
		_iter_end_1c2bb2da8:;
	};
	if (_15941_cppLinked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c2bb4250:;
		if (it != expr.end()) {
			jule::Ptr<_1be47159e_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t);
				};
			}
			_iter_next_1c2bb4250:;
			++it;
			goto _iter_begin_1c2bb4250;
		}
		_iter_end_1c2bb4250:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c2bb4b8a:;
		if (it != expr.end()) {
			jule::Ptr<_1be4736e4_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e);
				};
			}
			_iter_next_1c2bb4b8a:;
			++it;
			goto _iter_begin_1c2bb4b8a;
		}
		_iter_end_1c2bb4b8a:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c2bb5916:;
		if (it != expr.end()) {
			jule::Ptr<_1be474cde_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te);
				};
			}
			_iter_next_1c2bb5916:;
			++it;
			goto _iter_begin_1c2bb5916;
		}
		_iter_end_1c2bb5916:;
	};
	return nullptr;
}



inline jule::Bool _1c00cba22_isDuplicatedIdent(_1c00c8524_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c2bb6065:;
		if (it != expr.end()) {
			jule::Ptr<_1c0081334_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1c2bb6065:;
			++it;
			goto _iter_begin_1c2bb6065;
		}
		_iter_end_1c2bb6065:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c2bb7be3:;
		if (it != expr.end()) {
			jule::Ptr<_1c0108631_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1c2bb7be3:;
			++it;
			goto _iter_begin_1c2bb7be3;
		}
		_iter_end_1c2bb7be3:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c2bb7891:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1c2bb7891:;
			++it;
			goto _iter_begin_1c2bb7891;
		}
		_iter_end_1c2bb7891:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c2bb8a07:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;
				};
			}
			_iter_next_1c2bb8a07:;
			++it;
			goto _iter_begin_1c2bb8a07;
		}
		_iter_end_1c2bb8a07:;
	};
	if (_21261_cppLinked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c2bbb60e:;
		if (it != expr.end()) {
			jule::Ptr<_1be47159e_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1c2bbb60e:;
			++it;
			goto _iter_begin_1c2bbb60e;
		}
		_iter_end_1c2bbb60e:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c2bbc29c:;
		if (it != expr.end()) {
			jule::Ptr<_1be4736e4_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1c2bbc29c:;
			++it;
			goto _iter_begin_1c2bbc29c;
		}
		_iter_end_1c2bbc29c:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c2bbd27b:;
		if (it != expr.end()) {
			jule::Ptr<_1be474cde_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;
				};
			}
			_iter_next_1c2bbd27b:;
			++it;
			goto _iter_begin_1c2bbd27b;
		}
		_iter_end_1c2bbd27b:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00c8524_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c00cd66c_IsNil(_1c00cd282_Data* _self_) {
	return _1c010a248_IsNil((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1c00cd8d1_IsVoid(_1c00cd282_Data* _self_) {
	return _1c010a4ac_Void((*_self_)._field_Kind.ptr());
}



inline jule::Bool _1c00cdb45_IsConst(_1c00cd282_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);
}



inline jule::Bool _1c00cde53_GoodOperand(_1c00cd282_Data* _self_, jule::Ptr<_1c00cd282_Data>& _9631_other) {
	if ((_1c010bdd7_TypeEnum(_9631_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;
	};
	return ((((_1c010b436_Prim(_9631_other.get()._field_Kind.ptr()) == nullptr) || (!(_1c0112294_IsAny(_1c010b436_Prim(_9631_other.get()._field_Kind.ptr()).ptr())))) && (_1c010caec_Trait(_9631_other.get()._field_Kind.ptr()) == nullptr)) && (!(_1c010a248_IsNil((*_self_)._field_Kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1c00cd282_Data _Src) {
	_Stream << "Data{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00ce30a_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1c00d030b_pushErr(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _12726_token, jule::Str _12741_fmt, jule::Slice<jule::Any> _12754_args) {
	_1c00671b6_pushErr((*_self_)._field_s.ptr(), _12726_token,_12741_fmt,jule::Any(_12754_args));
}



inline void _1c00d062a_pushSugggestion(_1c00ced00_Eval* _self_, jule::Str _13234_fmt, jule::Slice<jule::Any> _13247_args) {
	_1c00674d5_pushSugggestion((*_self_)._field_s.ptr(), _13234_fmt,jule::Any(_13247_args));
}



inline void _1c00d0806_allowBuiltin(_1c00ced00_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1c00d09d2_disallowBuiltin(_1c00ced00_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _1c00d0c46_isUnsafe(_1c00ced00_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1c00d0eaa_isGlobal(_1c00ced00_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c0064504_Sema>>()) {
			_case_begin_1c2bed355:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c2bed245:;
			{
				return false;
			}
		}
		_match_end_1c2becd5a:;
	};
}



inline jule::Bool _1c00d1285_applyNumericPrefix(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _15942_d) {
	if (((((_15942_d == nullptr) || (!(_1c00cdb45_IsConst(_15942_d.ptr())))) || (_1c010b436_Prim(_15942_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1c010dceb_Prim> _16613_prim = _1c010b436_Prim((*_self_)._field_prefix.ptr());;
	if ((_16613_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1c0048241_IsFloat(_1c010e15e_Str(_16613_prim.ptr()))) {
			_case_begin_1c2c00b60:;
			{
				_15942_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>((*((*_self_)._field_prefix)));
				_1be451d43_SetF64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1be4510c8_AsF64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1c0047d9a_IsSigInt(_1c010e15e_Str(_16613_prim.ptr()))) {
			_case_begin_1c2c00bc6:;
			{
				if ((!(_1c0099935_sigAssignable(_1c010e15e_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>((*((*_self_)._field_prefix)));
				_1be45134d_SetI64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1be450b00_AsI64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1c0047ecc_IsUnsigInt(_1c010e15e_Str(_16613_prim.ptr()))) {
			_case_begin_1c2c00c3c:;
			{
				if ((!(_1c00b5d80_unsigAssignable(_1c010e15e_Str(_16613_prim.ptr()),_15942_d)))) {
					return false;
				};
				_15942_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>((*((*_self_)._field_prefix)));
				_1be4515c3_SetU64(_15942_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1be450d64_AsU64(_15942_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1c2c0091d:;
	};
	return true;
}



inline jule::Ptr<_1c00cd282_Data> _1c00d14e9_litNil(_1c00ced00_Eval* _self_) {
	jule::Ptr<_1be3e8c63_Const> _19517_constant = static__1be44e7e1_NewNil();;
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=nullptr}), ._field_Model=static_cast<jule::Any>(_19517_constant), ._field_Constant=_19517_constant});
}



inline jule::Ptr<_1c00cd282_Data> _1c00d1807_litStr(_1c00ced00_Eval* _self_, jule::Ptr<_1be39c079_LitExpr>& _20322_l) {
	jule::Str _20417_s = _20322_l.get()._field_Value.slice(1LL,(_20322_l.get()._field_Value.len() - 1LL));;
	if (_1d675e864_IsRawStr(_20322_l.get()._field_Value)) {
		_20417_s=_1c00b618d_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	} else {
		_20417_s=_1c00b6446_ToStr(static_cast<jule::Slice<jule::U8>>(_20417_s));
	};
	jule::Ptr<_1be3e8c63_Const> _21017_constant = static__1be44e34b_NewStr(_20417_s);;
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_21017_constant), ._field_Constant=_21017_constant});
}



inline jule::Ptr<_1c00cd282_Data> _1c00d1b15_litBool(_1c00ced00_Eval* _self_, jule::Ptr<_1be39c079_LitExpr>& _22123_l) {
	jule::Ptr<_1be3e8c63_Const> _22217_constant = static__1be44e0a4_NewBool((_22123_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_22217_constant), ._field_Constant=_22217_constant});
}



inline jule::Ptr<_1c00cd282_Data> _1c00d1e23_litRune(_1c00ced00_Eval* _self_, jule::Ptr<_1be39c079_LitExpr>& _23223_l) {
	;
	;
	jule::Str _23713_lt = _23223_l.get()._field_Value.slice(1LL,(_23223_l.get()._field_Value.len() - 1LL));;
	jule::I32 _23813_r = _1c0099517_ToRune(static_cast<jule::Slice<jule::U8>>(_23713_lt));;
	jule::Ptr<_1c00cd282_Data> _23917_data = jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Constant=static__1be44dcda_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_23813_r)))});;
	jule::Bool _24313_isAscii = _1c00993d5_IsAscii(_23813_r);;
	if (_24313_isAscii) {
		_23917_data.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_23917_data.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_23917_data.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45ba95_RuneExprModel>(_1be45ba95_RuneExprModel{._field_Code=_23813_r}));
	_23917_data.get()._field_IsRune=true;
	return _23917_data;
}



inline jule::Ptr<_1c00cd282_Data> _1c00d2231_litFloat(_1c00ced00_Eval* _self_, jule::Ptr<_1be39c079_LitExpr>& _25924_l) {
	;
	jule::F64 _26213_f = ({
		auto except = _1becd9477_ParseFloat(_25924_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1be3e8c63_Const> _26317_constant = static__1be44e5e3_NewF64(_26213_f);;
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_26317_constant), ._field_Constant=_26317_constant});
}



inline jule::Ptr<_1c00cd282_Data> _1c00d253e_litInt(_1c00ced00_Eval* _self_, jule::Ptr<_1be39c079_LitExpr>& _27426_l) {
	;
	jule::Str _27717_lit = _27426_l.get()._field_Value;;
	jule::I64 _27817_base = 0LL;;
	{
		
		if (_1d63616b9_HasPrefix(_27717_lit,jule::Str("0x", 2))) {
			_case_begin_1c2c11eb2:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=16LL;
			}
		}
		else if (_1d63616b9_HasPrefix(_27717_lit,jule::Str("0b", 2))) {
			_case_begin_1c2c11b93:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=2LL;
			}
		}
		else if (_1d63616b9_HasPrefix(_27717_lit,jule::Str("0o", 2))) {
			_case_begin_1c2c11c09:;
			{
				(_27717_lit).mut_slice(2LL);;
				_27817_base=8LL;
			}
		}
		else if (((_27717_lit[0LL] == '0') && (_27717_lit.len() > 1LL))) {
			_case_begin_1c2c11885:;
			{
				(_27717_lit).mut_slice(1LL);;
				_27817_base=8LL;
			}
		}
		else {
			_case_begin_1c2c1181e:;
			{
				_27817_base=10LL;
			}
		}
		_match_end_1c2c117b9:;
	};
	jule::Ptr<_1c00cd282_Data> _29817_d = jule::new_ptr<_1c00cd282_Data>();;
	jule::Bool _30017_ok = true;;
	jule::I64 _30113_sig = ({
		auto except = _1bec506b8_ParseInt(_27717_lit,_27817_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30017_ok=false;
			0LL;
		});
	});;
	if (_30017_ok) {
		_29817_d.get()._field_Constant=static__1be44dcda_NewI64(_30113_sig);
		_29817_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _31117_unsig = ({
			auto except = _1bebc3a37_ParseUint(_27717_lit,_27817_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1c00d030b_pushErr(&(*_self_), _27426_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1c00d062a_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_29817_d.get()._field_Constant=static__1be44de1c_NewU64(_31117_unsig);
		_29817_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_29817_d.get()._field_Model=static_cast<jule::Any>(_29817_d.get()._field_Constant);
	if ((!(_1c00d1285_applyNumericPrefix(&(*_self_), _29817_d)))) {
		_1c0104110_fitBitsize(_29817_d);
	};
	return _29817_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00d284c_litNum(_1c00ced00_Eval* _self_, jule::Ptr<_1be39c079_LitExpr>& _33226_l) {
	{
		
		if (_1d67604be_IsFloat(_33226_l.get()._field_Value)) {
			_case_begin_1c2c19be0:;
			{
				return _1c00d2231_litFloat(&(*_self_), _33226_l);
			}
		}
		else {
			_case_begin_1c2c19470:;
			{
				return _1c00d253e_litInt(&(*_self_), _33226_l);
			}
		}
		_match_end_1c2c193b5:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00d2b5a_evalLit(_1c00ced00_Eval* _self_, jule::Ptr<_1be39c079_LitExpr> _34126_lit) {
	{
		
		if (_1be39c3cb_IsNil(_34126_lit.ptr())) {
			_case_begin_1c2c1adbc:;
			{
				return _1c00d14e9_litNil(&(*_self_));
			}
		}
		else if (_1d675e5bc_IsStr(_34126_lit.get()._field_Value)) {
			_case_begin_1c2c1a7a1:;
			{
				return _1c00d1807_litStr(&(*_self_), _34126_lit);
			}
		}
		else if (_1d6760227_IsBool(_34126_lit.get()._field_Value)) {
			_case_begin_1c2c1a828:;
			{
				return _1c00d1b15_litBool(&(*_self_), _34126_lit);
			}
		}
		else if (_1d675eb0b_IsRune(_34126_lit.get()._field_Value)) {
			_case_begin_1c2c1a8a0:;
			{
				return _1c00d1e23_litRune(&(*_self_), _34126_lit);
			}
		}
		else if (_1d6760766_IsNum(_34126_lit.get()._field_Value)) {
			_case_begin_1c2c1aac0:;
			{
				return _1c00d284c_litNum(&(*_self_), _34126_lit);
			}
		}
		else {
			_case_begin_1c2c1a251:;
			{
				return nullptr;
			}
		}
		_match_end_1c2c1a196:;
	};
}



inline jule::Any _1c00d2e68_findBuiltins(_1c00ced00_Eval* _self_, jule::Str _35831_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c005b3a8_ImportInfo>>()) {
			_case_begin_1c2c1b20d:;
			{
				jule::Any _36121_def = _1c0103e01_findBuiltinsImport(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1c005b3a8_ImportInfo>());;
				if ((_36121_def != nullptr)) {
					return jule::Any(_36121_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0064504_Sema>>()) {
			_case_begin_1c2c23446:;
			{
				jule::Any _36621_def = _1c0104a8e_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1c0064504_Sema>());;
				if ((_36621_def != nullptr)) {
					return jule::Any(_36621_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004b5b8_scopeChecker>>()) {
			_case_begin_1c2c234ac:;
			{
				jule::Any _37121_def = _1c0104a8e_findBuiltinsSema(_35831_ident,(*_self_)._field_lookup.operator jule::Ptr<_1c004b5b8_scopeChecker>().get()._field_s);;
				if ((_37121_def != nullptr)) {
					return jule::Any(_37121_def);
				};
			}
		}
		_match_end_1c2c1b1a8:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;
	};
	return jule::Any(_1bcc6e5c9_findBuiltinDef(_35831_ident));
}



inline jule::Any _1c00d3320_getDef(_1c00ced00_Eval* _self_, jule::Str _38225_ident, jule::Bool _38237_cppLinked) {
	if ((!(_38237_cppLinked))) {
		jule::Ptr<_1be4736e4_Enum> _38421_enm = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c0124a04_FindEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38421_enm != nullptr)) {
			return jule::Any(_38421_enm);
		};
		jule::Ptr<_1be474cde_TypeEnum> _38921_tenm = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c0124d12_FindTypeEnum((*_self_)._field_lookup, _38225_ident);;
		if ((_38921_tenm != nullptr)) {
			return jule::Any(_38921_tenm);
		};
	};
	jule::Ptr<_1c0081334_Var> _39517_v = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c01237c2_FindVar((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_39517_v != nullptr)) {
		return jule::Any(_39517_v);
	};
	jule::Ptr<_1be45e6e1_Fn> _40017_f = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c01243d8_FindFn((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40017_f != nullptr)) {
		return jule::Any(_40017_f);
	};
	jule::Ptr<_1be387251_Struct> _40517_s = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c0124031_FindStruct((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_40517_s != nullptr)) {
		return jule::Any(_40517_s);
	};
	jule::Ptr<_1c0108631_TypeAlias> _41017_ta = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c0123b79_FindTypeAlias((*_self_)._field_lookup, _38225_ident,_38237_cppLinked);;
	if ((_41017_ta != nullptr)) {
		return jule::Any(_41017_ta);
	};
	return jule::Any(_1c00d2e68_findBuiltins(&(*_self_), _38225_ident));
}



inline void _1c2c39429_pushReference(_1c00ced00_Eval* _self_, jule::Ptr<_1be462392_FnIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c004b5b8_scopeChecker>>()) {
			_case_begin_1c2c3b0da:;
			{
				jule::Ptr<_1c004b5b8_scopeChecker> _42121_sc = _1c004cac5_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1c004b5b8_scopeChecker>());;
				if ((!(_1c2c3bc56_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1be465e67_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1c2c3a914:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1c2c3bc56_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1be465e67_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1c2c3a8ae:;
	};
}

inline void _1c2c4e131_pushReference(_1c00ced00_Eval* _self_, jule::Ptr<_1c0081334_Var>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c004b5b8_scopeChecker>>()) {
			_case_begin_1c2c50a6c:;
			{
				jule::Ptr<_1c004b5b8_scopeChecker> _42121_sc = _1c004cac5_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1c004b5b8_scopeChecker>());;
				if ((!(_1c2c516d8_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1be465e67_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1c2c50396:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1c2c516d8_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1be465e67_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1c2c50341:;
	};
}

inline void _1c2a016ec_pushReference(_1c00ced00_Eval* _self_, jule::Ptr<_1be3b359b_StructIns>& _41840_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c004b5b8_scopeChecker>>()) {
			_case_begin_1c2a033be:;
			{
				jule::Ptr<_1c004b5b8_scopeChecker> _42121_sc = _1c004cac5_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1c004b5b8_scopeChecker>());;
				if ((!(_1c2a0403a_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), _41840_ref)))) {
					_1be465e67_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		else {
			_case_begin_1c2a02be8:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1c2a0403a_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _41840_ref))))) {
					_1be465e67_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_41840_ref));
				};
			}
		}
		_match_end_1c2a02b93:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00d38a3__evalEnum(_1c00ced00_Eval* _self_, jule::Ptr<_1be4736e4_Enum> _43228_enm) {
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_43228_enm, 3)}), ._field_Decl=true, });
}



inline jule::Ptr<_1c00cd282_Data> _1c00d3c5a_evalEnum(_1c00ced00_Eval* _self_, jule::Ptr<_1be4736e4_Enum> _44131_enm, jule::Ptr<_1d675d511_Token> _44143_errorToken) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _44131_enm.get()._field_Public,_44131_enm.get()._field_Token)))) {
		_1c00d030b_pushErr(&(*_self_), _44143_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_44131_enm.get()._field_Ident)}));
		_1c00d062a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1c00d38a3__evalEnum(&(*_self_), _44131_enm);
}



inline jule::Ptr<_1c00cd282_Data> _1c00d4068__evalTypeEnum(_1c00ced00_Eval* _self_, jule::Ptr<_1be474cde_TypeEnum> _45032_enm) {
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_45032_enm, 4)}), ._field_Decl=true, });
}



inline jule::Ptr<_1c00cd282_Data> _1c00d4420_evalTypeEnum(_1c00ced00_Eval* _self_, jule::Ptr<_1be474cde_TypeEnum> _45935_enm, jule::Ptr<_1d675d511_Token> _45951_errorToken) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _45935_enm.get()._field_Public,_45935_enm.get()._field_Token)))) {
		_1c00d030b_pushErr(&(*_self_), _45951_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45935_enm.get()._field_Ident)}));
		_1c00d062a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1c00d4068__evalTypeEnum(&(*_self_), _45935_enm);
}



inline jule::Ptr<_1c00cd282_Data> _1c00d472d__evalStruct(_1c00ced00_Eval* _self_, jule::Ptr<_1be3b359b_StructIns> _46830_s) {
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_46830_s, 0)}), ._field_Model=static_cast<jule::Any>(_46830_s), ._field_Decl=true, });
}



inline jule::Ptr<_1c00cd282_Data> _1c00d4ad5_evalStruct(_1c00ced00_Eval* _self_, jule::Ptr<_1be3b359b_StructIns> _47833_s, jule::Ptr<_1d675d511_Token> _47848_errorToken) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _47833_s.get()._field_Decl.get()._field_Public,_47833_s.get()._field_Decl.get()._field_Token)))) {
		_1c00d030b_pushErr(&(*_self_), _47848_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47833_s.get()._field_Decl.get()._field_Ident)}));
		_1c00d062a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c00d5212_checkDeprecated(&(*_self_), _47833_s.get()._field_Decl.get()._field_Directives,_47848_errorToken);
	return _1c00d472d__evalStruct(&(*_self_), _47833_s);
}



inline jule::Ptr<_1c00cd282_Data> _1c00d4de3_evalFnIns(_1c00ced00_Eval* _self_, jule::Ptr<_1be462392_FnIns> _48828_f) {
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_48828_f, 1)}), ._field_Model=static_cast<jule::Any>(_48828_f), });
}



inline void _1c00d5212_checkDeprecated(_1c00ced00_Eval* _self_, jule::Slice<jule::Ptr<_1be36332b_Directive>>& _49739_directives, jule::Ptr<_1d675d511_Token> _49770_tok) {
	if (_1c00d0c46_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1be36332b_Directive> _50213_d = _1c0103a6b_findDirective(_49739_directives,jule::Str("deprecated", 10));;
	if ((_50213_d != nullptr)) {
		if ((_50213_d.get()._field_Args.len() == 0LL)) {
			_1c00d030b_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1c00d030b_pushErr(&(*_self_), _49770_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_50213_d.get()._field_Args[0LL].get()._field_Kind)}));
		};
		_1c00d062a_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00d55b9_evalFn(_1c00ced00_Eval* _self_, jule::Ptr<_1be45e6e1_Fn> _51329_f, jule::Ptr<_1d675d511_Token> _51337_errorToken) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _51329_f.get()._field_Public,_51329_f.get()._field_Token)))) {
		_1c00d030b_pushErr(&(*_self_), _51337_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_51329_f.get()._field_Ident)}));
		_1c00d062a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c00d5212_checkDeprecated(&(*_self_), _51329_f.get()._field_Directives,_51337_errorToken);
	jule::Ptr<_1be462392_FnIns> _52217_ins = _1be460d41_instance(_51329_f);;
	_1c2c39429_pushReference(&(*_self_), _52217_ins);
	return _1c00d4de3_evalFnIns(&(*_self_), _52217_ins);
}



inline void _1c00d5982_pushIllegalCycleError(_1c00ced00_Eval* _self_, jule::Ptr<_1c0081334_Var>& _52741_v1, jule::Ptr<_1c0081334_Var>& _52752_v2, jule::Str& _52767_message) {
	;
	jule::Str _52913_refers_to = _1d6435c44_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_52741_v1.get()._field_Ident),jule::Any(_52752_v2.get()._field_Ident)}));;
	(_52767_message).buffer.insert(0, (((_200a79329_Repeat(jule::Str(" ", 1),4LL) + _52913_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c00d5d39_checkCrossCycle(_1c00ced00_Eval* _self_, jule::Ptr<_1c0081334_Var>& _53335_v, jule::Str& _53349_message) {
	{
		auto &expr = _53335_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1c2c41ec0:;
		if (it != expr.end()) {
			jule::Ptr<_1c0081334_Var> &_53416_d = *it;
			{
				if ((_53416_d == (*_self_)._field_owner)) {
					_1c00d5982_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
				if ((!(_1c00d5d39_checkCrossCycle(&(*_self_), _53416_d,_53349_message)))) {
					_1c00d5982_pushIllegalCycleError(&(*_self_), _53335_v,_53416_d,_53349_message);
					return false;
				};
			}
			_iter_next_1c2c41ec0:;
			++it;
			goto _iter_begin_1c2c41ec0;
		}
		_iter_end_1c2c41ec0:;
	};
	return true;
}



inline jule::Bool _1c00d61e1_checkIllegalCycles(_1c00ced00_Eval* _self_, jule::Ptr<_1c0081334_Var>& _55242_v, jule::Ptr<_1d675d511_Token> _55251_decl_token) {
	jule::Bool _55273_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_55273_ok = true;
		return _55273_ok;
	};
	if (((*_self_)._field_owner == _55242_v)) {
		_1c00d030b_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident)}));
		_55273_ok = false;
		return _55273_ok;
	};
	jule::Str _56417_message = jule::Str();;
	if ((!(_1c00d5d39_checkCrossCycle(&(*_self_), _55242_v,_56417_message)))) {
		jule::Str _56721_errMsg = _56417_message;;
		_56417_message=jule::Str();
		_1c00d5982_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_55242_v,_56417_message);
		_56721_errMsg=(_56721_errMsg + _56417_message);
		_1c00d030b_pushErr(&(*_self_), _55251_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_56721_errMsg)}));
		_55273_ok = false;
		return _55273_ok;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_55242_v);;
	_55273_ok = true;
	return _55273_ok;
}



inline jule::Ptr<_1c00cd282_Data> _1c00d6598_evalVar(_1c00ced00_Eval* _self_, jule::Ptr<_1c0081334_Var> _57930_v, jule::Ptr<_1d675d511_Token> _57939_errorToken) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _57930_v.get()._field_Public,_57930_v.get()._field_Token)))) {
		_1c00d030b_pushErr(&(*_self_), _57939_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
		_1c00d062a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c00d5212_checkDeprecated(&(*_self_), _57930_v.get()._field_Directives,_57939_errorToken);
	_57930_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c0064504_Sema>>()) {
			_case_begin_1c2c49b87:;
			{
				jule::Bool _59317_ok = _1c00d61e1_checkIllegalCycles(&(*_self_), _57930_v,_57939_errorToken);;
				if ((!(_59317_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004b5b8_scopeChecker>>()) {
			_case_begin_1c2c49c42:;
			{
				if (((!(_57930_v.get()._field_Reference)) || _1c00d0c46_isUnsafe(&(*_self_)))) {
					goto _match_end_1c2c49b32;
				};
				jule::Ptr<_1c004b5b8_scopeChecker> _60121_s = (*_self_)._field_lookup.operator jule::Ptr<_1c004b5b8_scopeChecker>();;
				while (((_60121_s.get()._field_owner == nullptr) && (_60121_s.get()._field_parent != nullptr))) {
					{
						_60121_s=_60121_s.get()._field_parent;
					}
				_iter_next_1c2c4c041:;
				}
				_iter_end_1c2c4c041:;;
				if ((((_60121_s.get()._field_owner != nullptr) && _60121_s.get()._field_owner.get()._field_Anon) && (_57930_v.get()._field_Scope != _60121_s.get()._field_owner.get()._field_Scope))) {
					_1c00d030b_pushErr(&(*_self_), _57939_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_57930_v.get()._field_Ident)}));
				};
			}
		}
		_match_end_1c2c49b32:;
	};
	if ((_57930_v.get()._field_Scope == nullptr)) {
		_1c2c4e131_pushReference(&(*_self_), _57930_v);
	};
	if (((!(_57930_v.get()._field_CppLinked)) && ((_57930_v.get()._field_Value == nullptr) || (_57930_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_57930_v.get()._field_Constant) {
			_1c0078d98_checkTypeVar((*_self_)._field_s, _57930_v,jule::Trait<_1c0124e55_Lookup>((*_self_)._field_s, 3));
			if ((_57930_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_57930_v.get()._field_Scope != nullptr)) {
			return nullptr;
		};
		_1c0078d98_checkTypeVar((*_self_)._field_s, _57930_v,(*_self_)._field_lookup);
		if (((_57930_v.get()._field_Kind == nullptr) || (_57930_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1c00cd282_Data> _64417_d = jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=_57930_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_57930_v.get()._field_Mutable, ._field_Reference=_57930_v.get()._field_Reference, ._field_Lvalue=(!(_57930_v.get()._field_Constant)), ._field_Model=static_cast<jule::Any>(_57930_v), });;
	if ((((!(_57930_v.get()._field_CppLinked)) && _1c00816db_IsInitialized(_57930_v.ptr())) && (_57930_v.get()._field_Value.get()._field_Data != nullptr))) {
		_64417_d.get()._field_IsRune=_57930_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_57930_v.get()._field_Constant && (_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_64417_d.get()._field_Constant=jule::new_ptr<_1be3e8c63_Const>((*(_57930_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_64417_d.get()._field_Model=static_cast<jule::Any>(_64417_d.get()._field_Constant);
	};
	if (_1c00cdb45_IsConst(_64417_d.ptr())) {
		_1c00d1285_applyNumericPrefix(&(*_self_), _64417_d);
	};
	return _64417_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00d6950_evalTypeAlias(_1c00ced00_Eval* _self_, jule::Ptr<_1c0108631_TypeAlias> _66836_ta, jule::Ptr<_1d675d511_Token> _66852_errorToken) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _66836_ta.get()._field_Public,_66836_ta.get()._field_Token)))) {
		_1c00d030b_pushErr(&(*_self_), _66852_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_66836_ta.get()._field_Ident)}));
		_1c00d062a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_66836_ta.get()._field_Used=true;
	jule::Trait<_1c0108de5_Kind> _67717_kind = _66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1c00cd282_Data> _67817_d = nullptr;;
	{
		auto &_match_expr{ _67717_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3b359b_StructIns>>()) {
			_case_begin_1c2480d3b:;
			{
				_67817_d=_1c00d472d__evalStruct(&(*_self_), _67717_kind.operator jule::Ptr<_1be3b359b_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4736e4_Enum>>()) {
			_case_begin_1c2671647:;
			{
				_67817_d=_1c00d38a3__evalEnum(&(*_self_), _67717_kind.operator jule::Ptr<_1be4736e4_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be474cde_TypeEnum>>()) {
			_case_begin_1c26716ad:;
			{
				_67817_d=_1c00d4068__evalTypeEnum(&(*_self_), _67717_kind.operator jule::Ptr<_1be474cde_TypeEnum>());
			}
		}
		else {
			_case_begin_1c2c5dedc:;
			{
				_67817_d=jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_66836_ta.get()._field_CppLinked) {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Ident;
				} else {
					_67817_d.get()._field_Kind.get()._field_CppIdent=_66836_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_67817_d.get()._field_Model=static_cast<jule::Any>(_67817_d.get()._field_Kind);
			}
		}
		_match_end_1c2c5de87:;
	};
	_67817_d.get()._field_Kind.get()._field_Generic=_66836_ta.get()._field_Generic;
	return _67817_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00d6d07_evalDef(_1c00ced00_Eval* _self_, jule::Any _70430_def, jule::Ptr<_1d675d511_Token> _70440_ident) {
	{
		auto &_match_expr{ _70430_def };
		
		if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c2674172:;
			{
				return _1c00d6598_evalVar(&(*_self_), _70430_def.operator jule::Ptr<_1c0081334_Var>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4736e4_Enum>>()) {
			_case_begin_1c26741d8:;
			{
				return _1c00d3c5a_evalEnum(&(*_self_), _70430_def.operator jule::Ptr<_1be4736e4_Enum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be474cde_TypeEnum>>()) {
			_case_begin_1c267424e:;
			{
				return _1c00d4420_evalTypeEnum(&(*_self_), _70430_def.operator jule::Ptr<_1be474cde_TypeEnum>(),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
			_case_begin_1c26742c6:;
			{
				return _1c00d4ad5_evalStruct(&(*_self_), _1be36e656_instance(_70430_def.operator jule::Ptr<_1be387251_Struct>()),_70440_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45e6e1_Fn>>()) {
			_case_begin_1c267433c:;
			{
				jule::Ptr<_1be45e6e1_Fn> _71521_f = _70430_def.operator jule::Ptr<_1be45e6e1_Fn>();;
				if ((_71521_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1c00d55b9_evalFn(&(*_self_), _71521_f,_70440_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be462392_FnIns>>()) {
			_case_begin_1c26743b4:;
			{
				return _1c00d4de3_evalFnIns(&(*_self_), _70430_def.operator jule::Ptr<_1be462392_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0108631_TypeAlias>>()) {
			_case_begin_1c267443b:;
			{
				return _1c00d6950_evalTypeAlias(&(*_self_), _70430_def.operator jule::Ptr<_1c0108631_TypeAlias>(),_70440_ident);
			}
		}
		_match_end_1c2674084:;
	};
	_1c00d030b_pushErr(&(*_self_), _70440_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_70440_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1c00cd282_Data> _1c00d7115_evalIdent(_1c00ced00_Eval* _self_, jule::Ptr<_1be39d0ad_IdentExpr> _72828_ident) {
	jule::Any _72917_def = _1c00d3320_getDef(&(*_self_), _72828_ident.get()._field_Ident,_72828_ident.get()._field_CppLinked);;
	return _1c00d6d07_evalDef(&(*_self_), jule::Any(_72917_def),_72828_ident.get()._field_Token);
}



inline jule::Ptr<_1c00cd282_Data> _1c00d7423_evalUnary(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be39d7b7_UnaryExpr> _73333_u) {
	_1c00eb03b_unaryEval _73417_unary = static__1c00eb4e2_new(_self_);;
	return _1c00ec78a_eval(&_73417_unary, _73333_u);
}



inline jule::Ptr<_1c00cd282_Data> _1c00d7731_evalVariadic(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be39db6e_VariadicExpr> _73836_v) {
	if ((_73836_v.get()._field_Expr == nullptr)) {
		_1c00d030b_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c0109324_TypeKind> _74417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_74417_prefix;
	});;
	jule::Ptr<_1c00cd282_Data> _74817_d = _1c00ea49c_evalExprKind(_self_, _73836_v.get()._field_Expr.get()._field_Kind);;
	if ((_74817_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c010b1c2_Variadicable(_74817_d.get()._field_Kind.ptr())))) {
		_1c00d030b_pushErr(_self_.ptr(), _73836_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_74817_d.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1c0112edc_Slc> _75813_slc = _1c010c3b0_Slc(_74817_d.get()._field_Kind.ptr());;
	_74817_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_CppIdent=_75813_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_75813_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_75813_slc.get()._field_Elem.get()._field_Kind});
	return _74817_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00d7a3e_evalUnsafe(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be39c783_UnsafeExpr> _76834_u) {
	jule::Bool _76913_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1c00cd282_Data> _77117_d = _1c00ea49c_evalExprKind(_self_, _76834_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_76913_unsafety;
	return _77117_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00d7d4c_evalArr(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a28ed_SliceExpr> _77631_s) {
	jule::Ptr<_1c0115187_Arr> _77817_pt = _1c010c14b_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1c0115187_Arr> _78017_arr = jule::new_ptr<_1c0115187_Arr>(_1c0115187_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_77817_pt.get()._field_Elem});;
	jule::Bool _78617_filled = false;;
	if ((_77631_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _77631_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1be39db6e_VariadicExpr>>()) {
				_case_begin_1c2683abb:;
				{
					if ((_77631_s.get()._field_Exprs[1LL].get()._field_Kind.operator jule::Ptr<_1be39db6e_VariadicExpr>().get()._field_Expr != nullptr)) {
						goto _match_end_1c2683a66;
					};
					if (_77817_pt.get()._field_Auto) {
						_1c00d030b_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_78617_filled=true;
					_77631_s.get()._field_Exprs=_77631_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1c2683a66:;
		};
	};
	_78017_arr.get()._field_N=static_cast<jule::I64>(_77631_s.get()._field_Exprs.len());
	if ((!(_77817_pt.get()._field_Auto))) {
		if ((_78017_arr.get()._field_N > _77817_pt.get()._field_N)) {
			_1c00d030b_pushErr(_self_.ptr(), _77631_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_78017_arr.get()._field_N < _77817_pt.get()._field_N)) {
			_78017_arr.get()._field_N=_77817_pt.get()._field_N;
		};
	};
	jule::Ptr<_1be459752_ArrayExprModel> _81517_model = jule::new_ptr<_1be459752_ArrayExprModel>(_1be459752_ArrayExprModel{._field_Kind=_78017_arr, });;
	if (_78617_filled) {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_81517_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_77631_s.get()._field_Exprs.len());
	};
	jule::Ptr<_1c0109324_TypeKind> _82417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78017_arr.get()._field_Elem;
	{
		auto &expr = _77631_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c2988167:;
		if (it != expr.end()) {
			jule::Ptr<_1be39b045_Expr> _82621_elem = *it;
			{
				jule::Ptr<_1c00cd282_Data> _82721_d = _1c00ea49c_evalExprKind(_self_, _82621_elem.get()._field_Kind);;
				if ((_82721_d == nullptr)) {
					goto _iter_next_1c2988167;
				};
				_1c006d178_checkAssignType(_self_.get()._field_s, false,_78017_arr.get()._field_Elem,_82721_d,_77631_s.get()._field_Token);
				_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(_82721_d.get()._field_Model);;
			}
			_iter_next_1c2988167:;
			++it;
			goto _iter_begin_1c2988167;
		}
		_iter_end_1c2988167:;
	};
	_self_.get()._field_prefix=_82417_prefix;
	if (_78617_filled) {
		_81517_model.get()._field_Elems = jule::alloc_for_append(_81517_model.get()._field_Elems,1);_81517_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_78017_arr, 11)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_81517_model), });
}



inline jule::Ptr<_1c00cd282_Data> _1c00d829d_evalExpSlc(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a28ed_SliceExpr> _85134_s, jule::Ptr<_1c0109324_TypeKind> _85153_t, jule::Any _85171_first) {
	jule::Ptr<_1c0112edc_Slc> _85217_slc = jule::new_ptr<_1c0112edc_Slc>(_1c0112edc_Slc{._field_Elem=_85153_t});;
	jule::Ptr<_1be4582cd_SliceExprModel> _85617_model = jule::new_ptr<_1be4582cd_SliceExprModel>(_1be4582cd_SliceExprModel{._field_ElemKind=_85153_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL,_85134_s.get()._field_Exprs.len())});;
	if ((_85171_first != nullptr)) {
		_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_85171_first);;
		_85134_s.get()._field_Exprs=_85134_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_1c0109324_TypeKind> _86517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85217_slc.get()._field_Elem;
	{
		auto &expr = _85134_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c298d7bb:;
		if (it != expr.end()) {
			jule::Ptr<_1be39b045_Expr> _86721_elem = *it;
			{
				jule::Ptr<_1c00cd282_Data> _86821_d = _1c00ea49c_evalExprKind(_self_, _86721_elem.get()._field_Kind);;
				if ((_86821_d == nullptr)) {
					goto _iter_next_1c298d7bb;
				};
				_1c006d178_checkAssignType(_self_.get()._field_s, false,_85217_slc.get()._field_Elem,_86821_d,_85134_s.get()._field_Token);
				_85617_model.get()._field_Elems = jule::alloc_for_append(_85617_model.get()._field_Elems,1);_85617_model.get()._field_Elems.__push(_86821_d.get()._field_Model);;
			}
			_iter_next_1c298d7bb:;
			++it;
			goto _iter_begin_1c298d7bb;
		}
		_iter_end_1c298d7bb:;
	};
	_self_.get()._field_prefix=_86517_prefix;
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_85217_slc, 8)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_85617_model), });
}



inline jule::Ptr<_1c00cd282_Data> _1c00d85ab_evalSliceExpr(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a28ed_SliceExpr> _88637_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1c010c14b_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c2991824:;
				{
					return _1c00d7d4c_evalArr(_self_, _88637_s);
				}
			}
			else if ((_1c010c3b0_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c299189b:;
				{
					jule::Ptr<_1c0112edc_Slc> _89225_pt = _1c010c3b0_Slc(_self_.get()._field_prefix.ptr());;
					return _1c00d829d_evalExpSlc(_self_, _88637_s,_89225_pt.get()._field_Elem,nullptr);
				}
			}
			_match_end_1c2991703:;
		};
	};
	jule::Ptr<_1c0109324_TypeKind> _89717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_88637_s.get()._field_Exprs.len() == 0LL)) {
		_1c00d030b_pushErr(_self_.ptr(), _88637_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c00cd282_Data> _90517_first_elem = _1c00ea49c_evalExprKind(_self_, _88637_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_90517_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c00cd282_Data> _91017_d = _1c00d829d_evalExpSlc(_self_, _88637_s,_90517_first_elem.get()._field_Kind,_90517_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_89717_prefix;
	return _91017_d;
}



inline void _1c00d88ec_checkIntegerIndexingByData(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _91650_d, jule::Ptr<_1d675d511_Token> _91660_token) {
	jule::Str _91713_err_key = _1c0105e69_checkDataForIntegerIndexing(_91650_d);;
	{
		auto &_match_expr{ _91713_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c2996b15:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1c29977b4:;
			{
				_1c00d030b_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_91650_d.get()._field_Kind.ptr()))}));
			}
		}
		else {
			_case_begin_1c2996ebc:;
			{
				_1c00d030b_pushErr(&(*_self_), _91660_token,_91713_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1c2996de0:;
	};
}



inline void _1c00d8cc6_indexingPtr(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _92835_d, jule::Ptr<_1c00cd282_Data>& _92850_index, jule::Ptr<_1be3a328e_IndexingExpr>& _92865_i) {
	_1c00d88ec_checkIntegerIndexingByData(&(*_self_), _92850_index,_92865_i.get()._field_Token);
	jule::Ptr<_1c0115ae4_Ptr> _93117_ptr = _1c010b90e_Ptr(_92835_d.get()._field_Kind.ptr());;
	{
		
		if (_1c01165b7_IsUnsafe(_93117_ptr.ptr())) {
			_case_begin_1c299992b:;
			{
				_1c00d030b_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1c00d0c46_isUnsafe(&(*_self_))))) {
			_case_begin_1c2999992:;
			{
				_1c00d030b_pushErr(&(*_self_), _92865_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c29997c7:;
	};
	_92835_d.get()._field_Kind=_93117_ptr.get()._field_Elem;
}



inline void _1c00d918e_indexingArr(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _94335_d, jule::Ptr<_1c00cd282_Data>& _94350_index, jule::Ptr<_1be3a328e_IndexingExpr>& _94365_i) {
	jule::Ptr<_1c0115187_Arr> _94417_arr = _1c010c14b_Arr(_94335_d.get()._field_Kind.ptr());;
	_94335_d.get()._field_Kind=_94417_arr.get()._field_Elem;
	_1c00d88ec_checkIntegerIndexingByData(&(*_self_), _94350_index,_94365_i.get()._field_Token);
	if ((_1c00cdb45_IsConst(_94350_index.ptr()) && (_1be4510c8_AsF64(_94350_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_94417_arr.get()._field_N)))) {
		_1c00d030b_pushErr(&(*_self_), _94365_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1c00d9557_indexingSlc(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _95235_d, jule::Ptr<_1c00cd282_Data>& _95250_index, jule::Ptr<_1be3a328e_IndexingExpr>& _95265_i) {
	jule::Ptr<_1c0112edc_Slc> _95317_slc = _1c010c3b0_Slc(_95235_d.get()._field_Kind.ptr());;
	_95235_d.get()._field_Kind=_95317_slc.get()._field_Elem;
	_1c00d88ec_checkIntegerIndexingByData(&(*_self_), _95250_index,_95265_i.get()._field_Token);
	if ((!(_1c00cdb45_IsConst(_95250_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _95235_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be4582cd_SliceExprModel>>()) {
			_case_begin_1c29a016d:;
			{
				jule::Ptr<_1be4582cd_SliceExprModel> _96321_m = _95235_d.get()._field_Model.operator jule::Ptr<_1be4582cd_SliceExprModel>();;
				jule::F64 _96417_indx = _1be4510c8_AsF64(_95250_index.get()._field_Constant.ptr());;
				if ((_96417_indx >= static_cast<jule::F64>(_96321_m.get()._field_Elems.len()))) {
					_1c00d030b_pushErr(&(*_self_), _95265_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_95235_d.get()._field_Model=_96321_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96417_indx))];
					_95235_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1c29a03c1:;
	};
}



inline void _1c00d9920_indexingMap(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _97435_d, jule::Ptr<_1c00cd282_Data>& _97450_index, jule::Ptr<_1be3a328e_IndexingExpr>& _97469_i) {
	if ((_97450_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0114593_Map> _97817_m = _1c010cd61_Map(_97435_d.get()._field_Kind.ptr());;
	_1c00b8d1c_assignTypeChecker _97917_atc = _1c00b8d1c_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_97817_m.get()._field_Key, ._field_d=_97450_index, ._field_errorToken=_97469_i.get()._field_Token};;
	_1c00b9e94_check(&_97917_atc);
	_97435_d.get()._field_Kind=_97817_m.get()._field_Val;
}



inline void _1c00d9cd8_indexingStr(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _98935_d, jule::Ptr<_1c00cd282_Data>& _98950_index, jule::Ptr<_1be3a328e_IndexingExpr>& _98965_i) {
	;
	_98935_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_98950_index == nullptr)) {
		return;;
	};
	_1c00d88ec_checkIntegerIndexingByData(&(*_self_), _98950_index,_98965_i.get()._field_Token);
	if ((!(_1c00cdb45_IsConst(_98950_index.ptr())))) {
		_98935_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_1c00cdb45_IsConst(_98935_d.ptr())) {
		jule::Ptr<_1d675d511_Token> _100517_errorToken = _98965_i.get()._field_Token;;
		jule::I64 _100617_j = _1be450b00_AsI64(_98950_index.get()._field_Constant.ptr());;
		jule::Str _100717_s = _1be450627_ReadStr(_98935_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100617_j) >= _100717_s.len())) {
			_1c00d030b_pushErr(&(*_self_), _100517_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1be4515c3_SetU64(_98935_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100717_s[_100617_j])));
		};
	};
}



inline void _1c00da1a1_toIndexing(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _101634_d, jule::Ptr<_1c00cd282_Data>& _101649_index, jule::Ptr<_1be3a328e_IndexingExpr>& _101668_i) {
	{
		
		if ((_1c010b90e_Ptr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c29aa2cc:;
			{
				_1c00d8cc6_indexingPtr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1c010c14b_Arr(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c29aa354:;
			{
				_1c00d918e_indexingArr(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1c010c3b0_Slc(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c29aa3cb:;
			{
				_1c00d9557_indexingSlc(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1c010cd61_Map(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c29aa453:;
			{
				_1c00d9920_indexingMap(&(*_self_), _101634_d,_101649_index,_101668_i);
				return;;
			}
		}
		else if ((_1c010b436_Prim(_101634_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c29aa4ca:;
			{
				jule::Ptr<_1c010dceb_Prim> _103117_prim = _1c010b436_Prim(_101634_d.get()._field_Kind.ptr());;
				{
					
					if (_1c0112030_IsStr(_103117_prim.ptr())) {
						_case_begin_1c29ae743:;
						{
							_1c00d9cd8_indexingStr(&(*_self_), _101634_d,_101649_index,_101668_i);
							return;;
						}
					}
					_match_end_1c29ae699:;
				};
			}
		}
		_match_end_1c29aa178:;
	};
	_1c00d030b_pushErr(&(*_self_), _101668_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_101634_d.get()._field_Kind.ptr()))}));
}



inline jule::Bool _1c00da624_pushGenericsFromExprSubIdent(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be39e851_SubIdentExpr>& _104153_sexpr, jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>& _104214_generics, jule::Ptr<_1be39b045_Expr>& _104242_expr) {
	jule::Ptr<_1be397739_SubIdentTypeDecl> _104317_t = jule::new_ptr<_1be397739_SubIdentTypeDecl>();;
	if ((!(_1c0106c39_pushSubIdentFromExpr(static_cast<jule::Any>(_104153_sexpr),_104317_t)))) {
		_1c00d030b_pushErr(_self_.ptr(), _104242_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_104214_generics = jule::alloc_for_append(_104214_generics,1);_104214_generics.__push(jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Kind=static_cast<jule::Any>(_104317_t)}));;
	return true;
}



inline jule::Bool _1c00da9dc_pushGenericsFromData(jule::Ptr<_1c00ced00_Eval> _self_, jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>& _105245_generics, jule::Ptr<_1be39b045_Expr>& _105273_expr) {
	{
		auto &_match_expr{ _105273_expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be39d7b7_UnaryExpr>>()) {
			_case_begin_1c29b2c63:;
			{
				jule::Ptr<_1c00cd282_Data> _105721_d = _1c00d7423_evalUnary(_self_, _105273_expr.get()._field_Kind.operator jule::Ptr<_1be39d7b7_UnaryExpr>());;
				if ((!(_105721_d.get()._field_Decl))) {
					_1c00d030b_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_105273_expr.get()._field_Token, ._field_Kind=(*(((jule::Any*)((&(_105721_d.get()._field_Kind.get()._field_Kind))))))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be396a24_TypeDecl>>()) {
			_case_begin_1c29b2cc9:;
			{
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(_105273_expr.get()._field_Kind.operator jule::Ptr<_1be396a24_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39e851_SubIdentExpr>>()) {
			_case_begin_1c29b2d40:;
			{
				jule::Ptr<_1be39e851_SubIdentExpr> _106921_sexpr = _105273_expr.get()._field_Kind.operator jule::Ptr<_1be39e851_SubIdentExpr>();;
				return _1c00da624_pushGenericsFromExprSubIdent(_self_, _106921_sexpr,_105245_generics,_105273_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39d0ad_IdentExpr>>()) {
			_case_begin_1c29b3648:;
			{
				jule::Ptr<_1be39d0ad_IdentExpr> _107221_ident = _105273_expr.get()._field_Kind.operator jule::Ptr<_1be39d0ad_IdentExpr>();;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be3970da_IdentTypeDecl>(_1be3970da_IdentTypeDecl{._field_Token=_107221_ident.get()._field_Token, ._field_Ident=_107221_ident.get()._field_Ident, ._field_CppLinked=_107221_ident.get()._field_CppLinked, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39bbc2_TupleExpr>>()) {
			_case_begin_1c29b36ae:;
			{
				{
					auto &expr = _105273_expr.get()._field_Kind.operator jule::Ptr<_1be39bbc2_TupleExpr>().get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1c29b7ac0:;
					if (it != expr.end()) {
						jule::Ptr<_1be39b045_Expr> _108125_texpr = *it;
						{
							if ((!(_1c00da9dc_pushGenericsFromData(_self_, _105245_generics,_108125_texpr)))) {
								return false;
							};
						}
						_iter_next_1c29b7ac0:;
						++it;
						goto _iter_begin_1c29b7ac0;
					}
					_iter_end_1c29b7ac0:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39e3cd_NsSelectionExpr>>()) {
			_case_begin_1c29b3725:;
			{
				jule::Ptr<_1be39e3cd_NsSelectionExpr> _108721_ns = _105273_expr.get()._field_Kind.operator jule::Ptr<_1be39e3cd_NsSelectionExpr>();;
				jule::Ptr<_1be3970da_IdentTypeDecl> _108821_decl = jule::new_ptr<_1be3970da_IdentTypeDecl>(_1be3970da_IdentTypeDecl{._field_Token=_108721_ns.get()._field_Ident, ._field_Ident=_108721_ns.get()._field_Ident.get()._field_Kind, });;
				_105245_generics = jule::alloc_for_append(_105245_generics,1);_105245_generics.__push(jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be397ae1_NamespaceTypeDecl>(_1be397ae1_NamespaceTypeDecl{._field_Idents=_108721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_108821_decl.get()._field_Token, ._field_Kind=static_cast<jule::Any>(_108821_decl)})}))}));;
			}
		}
		else {
			_case_begin_1c29b2b42:;
			{
				_1c00d030b_pushErr(_self_.ptr(), _105273_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1c29b2999:;
	};
	return true;
}



inline void _1c00dad2d_evalIdentDeclFromIndexing(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1c00cd282_Data>& _110950_d, jule::Ptr<_1be3a328e_IndexingExpr>& _110965_i) {
	jule::Ptr<_1be3b359b_StructIns> _111017_s = _1c010c888_Struct(_110950_d.get()._field_Kind.ptr());;
	if ((_111017_s == nullptr)) {
		_1c00d030b_pushErr(_self_.ptr(), _110965_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_110950_d.get()._field_Kind.ptr()))}));
		_110950_d=nullptr;
		return;;
	};
	jule::Ptr<_1be3970da_IdentTypeDecl> _111717_decl = nullptr;;
	{
		auto &_match_expr{ _110965_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be39d0ad_IdentExpr>>()) {
			_case_begin_1c29bd2ce:;
			{
				jule::Ptr<_1be39d0ad_IdentExpr> _112021_expr = _110965_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1be39d0ad_IdentExpr>();;
				_111717_decl=jule::new_ptr<_1be3970da_IdentTypeDecl>(_1be3970da_IdentTypeDecl{._field_Token=_112021_expr.get()._field_Token, ._field_Ident=_112021_expr.get()._field_Ident, ._field_CppLinked=_112021_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39e3cd_NsSelectionExpr>>()) {
			_case_begin_1c29be434:;
			{
				jule::Ptr<_1be39e3cd_NsSelectionExpr> _112721_expr = _110965_i.get()._field_Expr.get()._field_Kind.operator jule::Ptr<_1be39e3cd_NsSelectionExpr>();;
				_111717_decl=jule::new_ptr<_1be3970da_IdentTypeDecl>(_1be3970da_IdentTypeDecl{._field_Token=_112721_expr.get()._field_Ident, ._field_Ident=_112721_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1c29bd71e:;
			{
				_1c00d030b_pushErr(_self_.ptr(), _110965_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_110950_d=nullptr;
				return;;
			}
		}
		_match_end_1c29bd6b9:;
	};
	if ((!(_1c00da9dc_pushGenericsFromData(_self_, _111717_decl.get()._field_Generics,_110965_i.get()._field_Index)))) {
		_110950_d=nullptr;
		return;;
	};
	_111017_s=({ auto _wrap_copy = _1c00e1bbe_typeChecker(_self_.ptr()); _1c011b6cc_fromStruct(&_wrap_copy, _111717_decl,_111017_s.get()._field_Decl); });
	if ((_111017_s == nullptr)) {
		_110950_d=nullptr;
		return;;
	};
	_110950_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1c0108de5_Kind>(_111017_s, 0);
}



inline jule::Bool _1c00db290_checkGenericFn(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be462392_FnIns>& _115239_f, jule::Ptr<_1d675d511_Token>& _115255_et, jule::Any& _115272_model) {
	jule::Bool _115313_ok = _1c0070367_reloadFnInsTypes(_self_.get()._field_s, _115239_f);;
	_115239_f.get()._field_reloaded=true;
	if ((!(_115313_ok))) {
		return false;
	};
	jule::Ptr<_1be462392_FnIns> _115817_existInstance = _1be46111b_appendInstance(_115239_f.get()._field_Decl.ptr(), _115239_f);;
	if ((!(_1c006e4cb_checkConstraintsFn(_self_.get()._field_s, _115239_f,_115255_et,_115817_existInstance)))) {
		return false;
	};
	if ((_115817_existInstance != nullptr)) {
		_115239_f=_115817_existInstance;
		_1c01069e7_updateModelToGenericIns(_115272_model,_115817_existInstance);
	} else {
		_1c007bb9d_checkFnInsCaller(_self_.get()._field_s, _115239_f,_115255_et);
	};
	return true;
}



inline void _1c00db5d1_evalFnGenericFromIndexing(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1c00cd282_Data>& _117750_d, jule::Ptr<_1be3a328e_IndexingExpr>& _117765_i) {
	jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _117817_generics = jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>::alloc(0LL,8LL);;
	if ((!(_1c00da9dc_pushGenericsFromData(_self_, _117817_generics,_117765_i.get()._field_Index)))) {
		_117750_d=nullptr;
		return;;
	};
	jule::Ptr<_1be462392_FnIns> _118417_f = _1c010c624_Fn(_117750_d.get()._field_Kind.ptr());;
	jule::I64 _118517_genericsLen = 0LL;;
	if ((_118417_f.get()._field_Decl != nullptr)) {
		_118517_genericsLen=static_cast<jule::I64>(_118417_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1c006855d_checkGenericQuantity(_self_.get()._field_s.ptr(), _118517_genericsLen,static_cast<jule::I64>(_117817_generics.len()),_117765_i.get()._field_Expr.get()._field_Token)))) {
		_117750_d=nullptr;
		return;;
	};
	_118417_f.get()._field_Generics=jule::Slice<jule::Ptr<_1c0107ae7_InsGeneric>>::alloc(0LL,_118417_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _117817_generics;
		auto it = expr.begin();
		_iter_begin_1c29ca0cc:;
		if (it != expr.end()) {
			jule::Ptr<_1be396a24_TypeDecl> _119621_g = *it;
			{
				jule::Ptr<_1c00cd282_Data> _119721_k = _1c00e1ecc_evalType(_self_.ptr(), _119621_g);;
				if ((_119721_k == nullptr)) {
					_117750_d=nullptr;
					return;;
				};
				_118417_f.get()._field_Generics = jule::alloc_for_append(_118417_f.get()._field_Generics,1);_118417_f.get()._field_Generics.__push(jule::new_ptr<_1c0107ae7_InsGeneric>(_1c0107ae7_InsGeneric{._field_Kind=_119721_k.get()._field_Kind, }));;
			}
			_iter_next_1c29ca0cc:;
			++it;
			goto _iter_begin_1c29ca0cc;
		}
		_iter_end_1c29ca0cc:;
	};
	if (_1be463728_IsBuiltin(_118417_f.ptr())) {
		return;;
	};
	if (_1c00db290_checkGenericFn(_self_, _118417_f,_117765_i.get()._field_Expr.get()._field_Token,_117750_d.get()._field_Model)) {
		_117750_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1c0108de5_Kind>(_118417_f, 1);
	} else {
		_117750_d=nullptr;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00db900_evalIndexing(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a328e_IndexingExpr> _121636_i) {
	jule::Ptr<_1c0109324_TypeKind> _121717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_121717_prefix;
	});;
	jule::Ptr<_1c00cd282_Data> _122117_d = _1c00ea49c_evalExprKind(_self_, _121636_i.get()._field_Expr.get()._field_Kind);;
	if ((_122117_d == nullptr)) {
		return nullptr;
	};
	if (_122117_d.get()._field_Decl) {
		_1c00dad2d_evalIdentDeclFromIndexing(_self_, _122117_d,_121636_i);
		return _122117_d;
	};
	if ((_1c010c624_Fn(_122117_d.get()._field_Kind.ptr()) != nullptr)) {
		_1c00db5d1_evalFnGenericFromIndexing(_self_, _122117_d,_121636_i);
		return _122117_d;
	};
	_1c00cd282_Data _123717_old_d = (*(_122117_d));;
	jule::Ptr<_1c00cd282_Data> _123917_index = _1c00ea49c_evalExprKind(_self_, _121636_i.get()._field_Index.get()._field_Kind);;
	if ((_123917_index == nullptr)) {
		return nullptr;
	};
	_122117_d.get()._field_Decl=false;
	_1c00da1a1_toIndexing(_self_.ptr(), _122117_d,_123917_index,_121636_i);
	if (_1c00cdb45_IsConst(_122117_d.ptr())) {
		_122117_d.get()._field_Decl=false;
		_122117_d.get()._field_Model=static_cast<jule::Any>(_122117_d.get()._field_Constant);
	} else if (_122117_d.get()._field_Decl) {
		_122117_d.get()._field_Decl=false;
	} else {
		_122117_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be4584ba_IndexingExprModel>(_1be4584ba_IndexingExprModel{._field_Token=_121636_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1c00cd282_Data>(_123717_old_d), ._field_Index=_123917_index}));
	};
	return _122117_d;
}



inline std::tuple<jule::Ptr<_1c00cd282_Data>,jule::Ptr<_1c00cd282_Data>> _1c00dbc0d_evalSlicingExprs(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a3899_SlicingExpr>& _127041_s) {
	jule::Ptr<_1c0109324_TypeKind> _127117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_127117_prefix;
	});;
	jule::Ptr<_1c00cd282_Data> _127517_l = nullptr;;
	jule::Ptr<_1c00cd282_Data> _127617_r = nullptr;;
	if ((_127041_s.get()._field_Start != nullptr)) {
		_127517_l=_1c00ea49c_evalExprKind(_self_, _127041_s.get()._field_Start.get()._field_Kind);
		if ((_127517_l != nullptr)) {
			_1c00d88ec_checkIntegerIndexingByData(_self_.ptr(), _127517_l,_127041_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_127517_l=jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1be44dcda_NewI64(0LL)});
		_127517_l.get()._field_Model=static_cast<jule::Any>(_127517_l.get()._field_Constant);
	};
	if ((_127041_s.get()._field_To != nullptr)) {
		_127617_r=_1c00ea49c_evalExprKind(_self_, _127041_s.get()._field_To.get()._field_Kind);
		if ((_127617_r != nullptr)) {
			_1c00d88ec_checkIntegerIndexingByData(_self_.ptr(), _127617_r,_127041_s.get()._field_Token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_127517_l,_127617_r);
}



inline void _1c00dbe83_slicingArr(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _130530_d) {
	jule::Ptr<_1c0109324_TypeKind> _130617_elemType = _1c010c14b_Arr(_130530_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_130530_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c0112edc_Slc>(_1c0112edc_Slc{._field_Elem=_130617_elemType}), 8)});
	_130530_d.get()._field_Lvalue=false;
	_130530_d.get()._field_Mutable=(_130530_d.get()._field_Mutable || (!(_1c010a721_Mutable(_130617_elemType.ptr()))));
}



inline void _1c00dc34b_slicingStr(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _132030_d, jule::Ptr<_1c00cd282_Data>& _132041_l, jule::Ptr<_1c00cd282_Data>& _132052_r) {
	_132030_d.get()._field_Lvalue=false;
	_132030_d.get()._field_Mutable=true;
	if ((!(_1c00cdb45_IsConst(_132030_d.ptr())))) {
		return;;
	};
	if (((_132041_l == nullptr) || (_132052_r == nullptr))) {
		_132030_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_1c00cdb45_IsConst(_132041_l.ptr()) && _1c00cdb45_IsConst(_132052_r.ptr()))) {
		jule::I64 _133317_left = _1be450b00_AsI64(_132041_l.get()._field_Constant.ptr());;
		if ((_133317_left < 0LL)) {
			return;;
		};
		jule::Str _133817_s = _1be450627_ReadStr(_132030_d.get()._field_Constant.ptr());;
		jule::I64 _133921_right = 0LL;;
		if ((_132052_r == nullptr)) {
			_133921_right=static_cast<jule::I64>(static_cast<jule::I64>(_133817_s.len()));
		} else {
			_133921_right=static_cast<jule::I64>(_1be450b00_AsI64(_132052_r.get()._field_Constant.ptr()));
		};
		if ((_133317_left > _133921_right)) {
			return;;
		};
		_1be451abd_SetStr(_132030_d.get()._field_Constant.ptr(), _133817_s.slice(_133317_left,_133921_right));
		_132030_d.get()._field_Decl=true;
	} else {
		_132030_d.get()._field_Constant=nullptr;
	};
}



inline void _1c00dc7ad_checkSlicing(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data>& _135636_d, jule::Ptr<_1c00cd282_Data>& _135647_l, jule::Ptr<_1c00cd282_Data>& _135658_r, jule::Ptr<_1be3a3899_SlicingExpr>& _135669_s) {
	{
		
		if ((_1c010c14b_Arr(_135636_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c29e1379:;
			{
				_1c00dbe83_slicingArr(&(*_self_), _135636_d);
				return;;
			}
		}
		else if ((_1c010c3b0_Slc(_135636_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c29e1401:;
			{
				return;;
			}
		}
		else if ((_1c010b436_Prim(_135636_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c29e1478:;
			{
				jule::Ptr<_1c010dceb_Prim> _136417_prim = _1c010b436_Prim(_135636_d.get()._field_Kind.ptr());;
				{
					
					if (_1c0112030_IsStr(_136417_prim.ptr())) {
						_case_begin_1c29e3942:;
						{
							_1c00dc34b_slicingStr(&(*_self_), _135636_d,_135647_l,_135658_r);
							return;;
						}
					}
					_match_end_1c29e3898:;
				};
			}
		}
		_match_end_1c29e1247:;
	};
	_1c00d030b_pushErr(&(*_self_), _135669_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_135636_d.get()._field_Kind.ptr()))}));
}



inline jule::Ptr<_1c00cd282_Data> _1c00dcabb_evalSlicing(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a3899_SlicingExpr> _137535_s) {
	jule::Ptr<_1c00cd282_Data> _137617_d = _1c00ea49c_evalExprKind(_self_, _137535_s.get()._field_Expr.get()._field_Kind);;
	if ((_137617_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c00cd282_Data> _138118_l;;
	jule::Ptr<_1c00cd282_Data> _138125_r;;
	std::tie(_138118_l,_138125_r) = _1c00dbc0d_evalSlicingExprs(_self_, _137535_s);
	if ((_138118_l == nullptr)) {
		return _137617_d;
	};
	_137617_d.get()._field_Decl=false;
	_1c00dc7ad_checkSlicing(_self_.ptr(), _137617_d,_138118_l,_138125_r,_137535_s);
	if (_1c00cdb45_IsConst(_137617_d.ptr())) {
		_137617_d.get()._field_Decl=false;
		_137617_d.get()._field_Model=static_cast<jule::Any>(_137617_d.get()._field_Constant);
	} else if (_137617_d.get()._field_Decl) {
		_137617_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1be458c6d_SlicingExprModel> _139921_model = jule::new_ptr<_1be458c6d_SlicingExprModel>(_1be458c6d_SlicingExprModel{._field_Token=_137535_s.get()._field_Token, ._field_Expr=_137617_d.get()._field_Model, ._field_Left=_138118_l.get()._field_Model, });;
		if ((_138125_r != nullptr)) {
			_139921_model.get()._field_Right=_138125_r.get()._field_Model;
		};
		_137617_d.get()._field_Model=static_cast<jule::Any>(_139921_model);
	};
	return _137617_d;
}



inline void _1c00dce84_castPtr(_1c00ced00_Eval* _self_, jule::Ptr<_1c0109324_TypeKind> _141230_t, jule::Ptr<_1c00cd282_Data> _141248_d, jule::Ptr<_1d675d511_Token> _141258_errorToken) {
	jule::Ptr<_1c0112580_Sptr> _141313_sptr = _1c010b69a_Sptr(_141248_d.get()._field_Kind.ptr());;
	if ((_141313_sptr != nullptr)) {
		if ((!(_1c0109a2d_Equals(_1c010b90e_Ptr(_141230_t.ptr()).get()._field_Elem, _141313_sptr.get()._field_Elem)))) {
			_1c00d030b_pushErr(&(*_self_), _141258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_141248_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_141230_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1c00d0c46_isUnsafe(&(*_self_))))) {
		_1c00d030b_pushErr(&(*_self_), _141258_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c010dceb_Prim> _142613_prim = _1c010b436_Prim(_141248_d.get()._field_Kind.ptr());;
	if (((_1c010b90e_Ptr(_141248_d.get()._field_Kind.ptr()) == nullptr) && ((_142613_prim == nullptr) || (!(_1c004810e_IsInt(_1c010e15e_Str(_142613_prim.ptr()))))))) {
		_1c00d030b_pushErr(&(*_self_), _141258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_141248_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_141230_t.ptr()))}));
	};
	_141248_d.get()._field_Constant=nullptr;
}



inline void _1c00dd34c_castStruct(_1c00ced00_Eval* _self_, jule::Ptr<_1c0109324_TypeKind> _143433_t, jule::Ptr<_1c00cd282_Data> _143451_d, jule::Ptr<_1d675d511_Token> _143461_errorToken) {
	jule::Ptr<_1be47159e_Trait> _143517_tr = _1c010caec_Trait(_143451_d.get()._field_Kind.ptr());;
	if ((_143517_tr == nullptr)) {
		_1c00d030b_pushErr(&(*_self_), _143461_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_143451_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_143433_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1be3b359b_StructIns> _144117_s = _1c010c888_Struct(_143433_t.ptr());;
	_1c2a016ec_pushReference(&(*_self_), _144117_s);
	if ((!(_1be378d9c_IsImplements(_144117_s.get()._field_Decl.ptr(), _143517_tr)))) {
		_1c00d030b_pushErr(&(*_self_), _143461_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_143451_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_143433_t.ptr()))}));
	};
}



inline void _1c00dd715_castRef(_1c00ced00_Eval* _self_, jule::Ptr<_1c0109324_TypeKind> _144930_t, jule::Ptr<_1c00cd282_Data> _144948_d, jule::Ptr<_1d675d511_Token> _144958_errorToken) {
	jule::Ptr<_1c0112580_Sptr> _145017_sptr = _1c010b69a_Sptr(_144930_t.ptr());;
	jule::Ptr<_1c0115ae4_Ptr> _145217_ptr = _1c010b90e_Ptr(_144948_d.get()._field_Kind.ptr());;
	if (((_145217_ptr != nullptr) && _1c0109a2d_Equals(_145017_sptr.get()._field_Elem, _145217_ptr.get()._field_Elem))) {
		if ((!(_1c00d0c46_isUnsafe(&(*_self_))))) {
			_1c00d030b_pushErr(&(*_self_), _144958_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1c010c888_Struct(_145017_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1c00dd34c_castStruct(&(*_self_), _145017_sptr.get()._field_Elem,_144948_d,_144958_errorToken);
		return;;
	};
	_1c00d030b_pushErr(&(*_self_), _144958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_144948_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_144930_t.ptr()))}));
}



inline void _1c00ddacd_castSlc(_1c00ced00_Eval* _self_, jule::Ptr<_1c0109324_TypeKind> _147030_t, jule::Ptr<_1c00cd282_Data> _147048_d, jule::Ptr<_1d675d511_Token> _147058_errorToken) {
	if ((_1c010bb73_Enum(_147048_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1c010b436_Prim(_1c010bb73_Enum(_147048_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1c0112030_IsStr(_1c010b436_Prim(_1c010bb73_Enum(_147048_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1c00d030b_pushErr(&(*_self_), _147058_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_147048_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_147030_t.ptr()))}));
			return;;
		};
	} else if (((_1c010b436_Prim(_147048_d.get()._field_Kind.ptr()) == nullptr) || (!(_1c0112030_IsStr(_1c010b436_Prim(_147048_d.get()._field_Kind.ptr()).ptr()))))) {
		_1c00d030b_pushErr(&(*_self_), _147058_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_147048_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_147030_t.ptr()))}));
		return;;
	};
	_147030_t=_1c010c3b0_Slc(_147030_t.ptr()).get()._field_Elem;
	jule::Ptr<_1c010dceb_Prim> _148213_prim = _1c010b436_Prim(_147030_t.ptr());;
	if (((_148213_prim == nullptr) || ((!(_1c0110605_IsU8(_148213_prim.ptr()))) && (!(_1c011012c_IsI32(_148213_prim.ptr())))))) {
		_1c00d030b_pushErr(&(*_self_), _147058_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_147048_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_147030_t.ptr()))}));
	};
}



inline void _1c00dddec_castStr(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data> _148830_d, jule::Ptr<_1d675d511_Token> _148840_errorToken) {
	if ((_1c010bb73_Enum(_148830_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1be4736e4_Enum> _149021_e = _1c010bb73_Enum(_148830_d.get()._field_Kind.ptr());;
		if (((_1c010b436_Prim(_149021_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1c0112030_IsStr(_1c010b436_Prim(_149021_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1c010b436_Prim(_148830_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c010dceb_Prim> _149717_prim = _1c010b436_Prim(_148830_d.get()._field_Kind.ptr());;
		if (((!(_1c0110605_IsU8(_149717_prim.ptr()))) && (!(_1c011012c_IsI32(_149717_prim.ptr()))))) {
			_1c00d030b_pushErr(&(*_self_), _148840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c0109720_Str(_148830_d.get()._field_Kind.ptr()))}));
		};
		return;;
	};
	if ((_1c010c3b0_Slc(_148830_d.get()._field_Kind.ptr()) == nullptr)) {
		_1c00d030b_pushErr(&(*_self_), _148840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c0109720_Str(_148830_d.get()._field_Kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1c0109324_TypeKind> _150917_t = _1c010c3b0_Slc(_148830_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1c010dceb_Prim> _151013_prim = _1c010b436_Prim(_150917_t.ptr());;
	if (((_151013_prim == nullptr) || ((!(_1c0110605_IsU8(_151013_prim.ptr()))) && (!(_1c011012c_IsI32(_151013_prim.ptr())))))) {
		_1c00d030b_pushErr(&(*_self_), _148840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c0109720_Str(_148830_d.get()._field_Kind.ptr()))}));
	};
}



inline void _1c00de2b5_castInt(_1c00ced00_Eval* _self_, jule::Ptr<_1c0109324_TypeKind> _151630_t, jule::Ptr<_1c00cd282_Data> _151648_d, jule::Ptr<_1d675d511_Token> _151658_errorToken) {
	if (_1c00cdb45_IsConst(_151648_d.ptr())) {
		jule::Ptr<_1c010dceb_Prim> _151817_prim = _1c010b436_Prim(_151630_t.ptr());;
		{
			
			if (_1c0047d9a_IsSigInt(_151817_prim.get()._field_Kind)) {
				_case_begin_1c2a1b7e4:;
				{
					_1be45134d_SetI64(_151648_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1be450b00_AsI64(_151648_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1c0047ecc_IsUnsigInt(_151817_prim.get()._field_Kind)) {
				_case_begin_1c2a1b86b:;
				{
					_1be4515c3_SetU64(_151648_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1be450d64_AsU64(_151648_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1c2a1b739:;
		};
	};
	if ((_1c010bb73_Enum(_151648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1be4736e4_Enum> _152817_e = _1c010bb73_Enum(_151648_d.get()._field_Kind.ptr());;
		if (_1c0048373_IsNum(_1c0109720_Str(_152817_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1c010b69a_Sptr(_151648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c010dceb_Prim> _153517_prim = _1c010b436_Prim(_151630_t.ptr());;
		if ((!(_1c0111a57_IsUintptr(_153517_prim.ptr())))) {
			_1c00d030b_pushErr(&(*_self_), _151658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_151648_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_151630_t.ptr()))}));
		};
		return;;
	};
	if ((_1c010b90e_Ptr(_151648_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c010dceb_Prim> _154217_prim = _1c010b436_Prim(_151630_t.ptr());;
		if (_1c0111a57_IsUintptr(_154217_prim.ptr())) {
		} else if ((!(_1c00d0c46_isUnsafe(&(*_self_))))) {
			_1c00d030b_pushErr(&(*_self_), _151658_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1c011012c_IsI32(_154217_prim.ptr()))) && (!(_1c0110391_IsI64(_154217_prim.ptr())))) && (!(_1c0110869_IsU16(_154217_prim.ptr())))) && (!(_1c0110acd_IsU32(_154217_prim.ptr())))) && (!(_1c0110d42_IsU64(_154217_prim.ptr()))))) {
			_1c00d030b_pushErr(&(*_self_), _151658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_151648_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_151630_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1c010dceb_Prim> _155313_prim = _1c010b436_Prim(_151648_d.get()._field_Kind.ptr());;
	if (((_155313_prim != nullptr) && _1c0048373_IsNum(_1c010e15e_Str(_155313_prim.ptr())))) {
		return;;
	};
	_1c00d030b_pushErr(&(*_self_), _151658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_151648_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_151630_t.ptr()))}));
}



inline void _1c00de67d_castNum(_1c00ced00_Eval* _self_, jule::Ptr<_1c0109324_TypeKind> _156130_t, jule::Ptr<_1c00cd282_Data> _156148_d, jule::Ptr<_1d675d511_Token> _156158_errorToken) {
	if (_1c00cdb45_IsConst(_156148_d.ptr())) {
		jule::Ptr<_1c010dceb_Prim> _156317_prim = _1c010b436_Prim(_156130_t.ptr());;
		{
			
			if (_1c0048241_IsFloat(_156317_prim.get()._field_Kind)) {
				_case_begin_1c2a26de8:;
				{
					_1be451d43_SetF64(_156148_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1be4510c8_AsF64(_156148_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1c0047d9a_IsSigInt(_156317_prim.get()._field_Kind)) {
				_case_begin_1c2a26e70:;
				{
					_1be45134d_SetI64(_156148_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1be450b00_AsI64(_156148_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1c0047ecc_IsUnsigInt(_156317_prim.get()._field_Kind)) {
				_case_begin_1c2a26ee7:;
				{
					_1be4515c3_SetU64(_156148_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1be450d64_AsU64(_156148_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1c2a26d2c:;
		};
	};
	if ((_1c010bb73_Enum(_156148_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1be4736e4_Enum> _157517_e = _1c010bb73_Enum(_156148_d.get()._field_Kind.ptr());;
		if (_1c0048373_IsNum(_1c0109720_Str(_157517_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c010dceb_Prim> _158113_prim = _1c010b436_Prim(_156148_d.get()._field_Kind.ptr());;
	if (((_158113_prim != nullptr) && _1c0048373_IsNum(_1c010e15e_Str(_158113_prim.ptr())))) {
		return;;
	};
	_1c00d030b_pushErr(&(*_self_), _156158_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_156148_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_156130_t.ptr()))}));
}



inline void _1c00dea46_castPrim(_1c00ced00_Eval* _self_, jule::Ptr<_1c0109324_TypeKind> _158931_t, jule::Ptr<_1c00cd282_Data> _158949_d, jule::Ptr<_1d675d511_Token> _158959_errorToken) {
	jule::Ptr<_1c010dceb_Prim> _159013_prim = _1c010b436_Prim(_158931_t.ptr());;
	{
		
		if (_1c0112294_IsAny(_159013_prim.ptr())) {
			_case_begin_1c2a2ca69:;
		}
		else if (_1c0112030_IsStr(_159013_prim.ptr())) {
			_case_begin_1c2a2d0db:;
			{
				_1c00dddec_castStr(&(*_self_), _158949_d,_158959_errorToken);
			}
		}
		else if (_1c004810e_IsInt(_1c010e15e_Str(_159013_prim.ptr()))) {
			_case_begin_1c2a2d152:;
			{
				_1c00de2b5_castInt(&(*_self_), _158931_t,_158949_d,_158959_errorToken);
			}
		}
		else if (_1c0048373_IsNum(_1c010e15e_Str(_159013_prim.ptr()))) {
			_case_begin_1c2a2d1b8:;
			{
				_1c00de67d_castNum(&(*_self_), _158931_t,_158949_d,_158959_errorToken);
			}
		}
		else {
			_case_begin_1c2a2d075:;
			{
				_1c00d030b_pushErr(&(*_self_), _158959_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_158931_t.ptr()))}));
			}
		}
		_match_end_1c2a2d00e:;
	};
}



inline void _1c00ded65_castConstant(_1c00ced00_Eval* _self_, jule::Ptr<_1c0109324_TypeKind>& _160536_t, jule::Ptr<_1c00cd282_Data>& _160555_d) {
	if (((_160555_d == nullptr) || (!(_1c00cdb45_IsConst(_160555_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1c010dceb_Prim> _160913_prim = _1c010b436_Prim(_160536_t.ptr());;
	_1c01064db_castConstByType(_160913_prim.get()._field_Kind,_160555_d);
	_160555_d.get()._field_Model=static_cast<jule::Any>(_160555_d.get()._field_Constant);
}



inline void _1c00e022d_castTypeEnum(_1c00ced00_Eval* _self_, jule::Ptr<_1c0109324_TypeKind>& _161436_t, jule::Ptr<_1c00cd282_Data>& _161455_d, jule::Ptr<_1d675d511_Token>& _161470_errorToken) {
	jule::I64 _161513_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1c006d5c9_checkTypeCompatibility((*_self_)._field_s, _161455_d.get()._field_Kind,_161436_t,_161470_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_161513_n);
		_1c00d030b_pushErr(&(*_self_), _161470_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_161455_d.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_161436_t.ptr()))}));
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e067e_evalCastByTypeNData(_1c00ced00_Eval* _self_, jule::Ptr<_1c0109324_TypeKind> _162242_t, jule::Ptr<_1c00cd282_Data> _162260_d, jule::Ptr<_1d675d511_Token> _162274_errorToken) {
	if (((_162260_d != nullptr) && _162260_d.get()._field_Decl)) {
		_1c00d030b_pushErr(&(*_self_), _162274_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1c010b436_Prim(_162260_d.get()._field_Kind.ptr()) != nullptr) && _1c0112294_IsAny(_1c010b436_Prim(_162260_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c2a369b8:;
			{
				if ((_1c010bb73_Enum(_162242_t.ptr()) != nullptr)) {
					_1c00d030b_pushErr(&(*_self_), _162274_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1c00d062a_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1c010bdd7_TypeEnum(_162242_t.ptr()) != nullptr)) {
					_1c00d030b_pushErr(&(*_self_), _162274_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1c010bdd7_TypeEnum(_162260_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2a35d2a:;
			{
				_1c00e022d_castTypeEnum(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
			}
		}
		else if ((_1c010b90e_Ptr(_162242_t.ptr()) != nullptr)) {
			_case_begin_1c2a35d91:;
			{
				_1c00dce84_castPtr(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
			}
		}
		else if ((_1c010b69a_Sptr(_162242_t.ptr()) != nullptr)) {
			_case_begin_1c2a35e07:;
			{
				_1c00dd715_castRef(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
			}
		}
		else if ((_1c010c3b0_Slc(_162242_t.ptr()) != nullptr)) {
			_case_begin_1c2a35e6d:;
			{
				_1c00ddacd_castSlc(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
			}
		}
		else if ((_1c010c888_Struct(_162242_t.ptr()) != nullptr)) {
			_case_begin_1c2a36b1c:;
			{
				_1c00dd34c_castStruct(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
			}
		}
		else if ((_1c010b436_Prim(_162242_t.ptr()) != nullptr)) {
			_case_begin_1c2a36b83:;
			{
				_1c00dea46_castPrim(&(*_self_), _162242_t,_162260_d,_162274_errorToken);
				_1c00ded65_castConstant(&(*_self_), _162242_t,_162260_d);
			}
		}
		else {
			_case_begin_1c2a35cb4:;
			{
				_1c00d030b_pushErr(&(*_self_), _162274_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_162242_t.ptr()))}));
				_162260_d=nullptr;
			}
		}
		_match_end_1c2a35c5e:;
	};
	if ((_162260_d == nullptr)) {
		return nullptr;
	};
	_162260_d.get()._field_Mutable=(_162260_d.get()._field_Mutable || ((!(_1c010a721_Mutable(_162260_d.get()._field_Kind.ptr()))) && _1c010a721_Mutable(_162242_t.ptr())));
	_162260_d.get()._field_Lvalue=false;
	_162260_d.get()._field_Decl=false;
	if (((_1c010bb73_Enum(_162260_d.get()._field_Kind.ptr()) == nullptr) || (!(_1c0109a2d_Equals(_1c010bb73_Enum(_162260_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _162242_t))))) {
		_1c01059a2_applyCastKind(_162260_d,_162242_t);
		_162260_d.get()._field_Model.operator jule::Ptr<_1be457e04_CastingExprModel>().get()._field_Token=_162274_errorToken;
	} else {
		_162260_d.get()._field_Kind=_162242_t;
	};
	return _162260_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00e0ad0_evalCastT(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1c0109324_TypeKind>& _167534_t, jule::Ptr<_1be39b045_Expr>& _167553_e, jule::Ptr<_1d675d511_Token>& _167568_et) {
	jule::Ptr<_1c0109324_TypeKind> _167617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_167617_prefix;
	});;
	if ((_1c010c3b0_Slc(_167534_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _167553_e.get()._field_Kind };
			
			if (_match_expr.type_is<jule::Ptr<_1be3a28ed_SliceExpr>>()) {
				_case_begin_1c2a42166:;
				{
					_self_.get()._field_prefix=_167534_t;
				}
			}
			_match_end_1c2a42254:;
		};
	};
	jule::Ptr<_1c00cd282_Data> _168517_d = _1c00ea49c_evalExprKind(_self_, _167553_e.get()._field_Kind);;
	if (((_168517_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _168517_d;
	};
	return _1c00e067e_evalCastByTypeNData(_self_.ptr(), _167534_t,_168517_d,_167568_et);
}



inline jule::Ptr<_1c00cd282_Data> _1c00e0ddd_evalCast(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be39e026_CastExpr> _169232_c) {
	jule::Ptr<_1c010d47c_TypeSymbol> _169317_t = _1be46697e_buildType(_169232_c.get()._field_Kind);;
	jule::Bool _169413_ok = _1c006b4ea_checkType(_self_.get()._field_s, _169317_t,_self_.get()._field_lookup);;
	if ((!(_169413_ok))) {
		return nullptr;
	};
	return _1c00e0ad0_evalCastT(_self_, _169317_t.get()._field_Kind,_169232_c.get()._field_Expr,_169232_c.get()._field_Kind.get()._field_Token);
}



inline jule::Ptr<_1c00cd282_Data> _1c00e11eb_evalNsSelection(_1c00ced00_Eval* _self_, jule::Ptr<_1be39e3cd_NsSelectionExpr> _170134_s) {
	jule::Str _170213_path = _1c0121e1e_buildLinkPathByTokens(_170134_s.get()._field_Ns);;
	jule::Ptr<_1c005b3a8_ImportInfo> _170317_imp = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c012341a_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)>([=](jule::Ptr<_1c005b3a8_ImportInfo> _170352_imp) mutable -> jule::Bool {
		if (((_170134_s.get()._field_Ns.len() == 1LL) && (_170352_imp.get()._field_Alias == _170213_path))) {
			return true;
		};
		return ((_170352_imp.get()._field_LinkPath == _170213_path) && _1c005e015_isAccessibleViaSelection(_170352_imp.ptr()));
	}));;
	if ((_170317_imp == nullptr)) {
		_1c00d030b_pushErr(&(*_self_), _170134_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_170213_path)}));
		return nullptr;
	};
	jule::Trait<_1c0124e55_Lookup> _171517_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1c0124e55_Lookup>(_170317_imp, 1);
	;
	_1c00d09d2_disallowBuiltin(&(*_self_));
	jule::Any _172017_def = _1c00d3320_getDef(&(*_self_), _170134_s.get()._field_Ident.get()._field_Kind,false);;
	_1c00d0806_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_171517_lookup;
	jule::Ptr<_1c00cd282_Data> _172317_d = _1c00d6d07_evalDef(&(*_self_), jule::Any(_172017_def),_170134_s.get()._field_Ident);;
	return _172317_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00e164c_evalStructLitExplicit(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3b359b_StructIns> _172745_s, jule::Slice<jule::Ptr<_1be39b045_Expr>> _172813_exprs, jule::Ptr<_1d675d511_Token> _172833_errorToken) {
	jule::Bool _172913_ok = _1c006855d_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_172745_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_172745_s.get()._field_Generics.len()),_172833_errorToken);;
	if ((!(_172913_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _172745_s.get()._field_Decl))) {
		_1c00d030b_pushErr(_self_.ptr(), _172833_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_172745_s.get()._field_Decl.get()._field_Ident)}));
	};
	_1c2a016ec_pushReference(_self_.ptr(), _172745_s);
	_1c00d5212_checkDeprecated(_self_.ptr(), _172745_s.get()._field_Decl.get()._field_Directives,_172833_errorToken);
	_1c00c293b_structLitChecker _174217_slc = _1c00c293b_structLitChecker{._field_e=_self_, ._field_errorToken=_172833_errorToken, ._field_s=_172745_s, };;
	_1c00c3ed1_check(&_174217_slc, _172813_exprs);
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_172745_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be457a2a_StructLitExprModel>(_1be457a2a_StructLitExprModel{._field_Strct=_172745_s, ._field_Args=_174217_slc._field_args})), });
}



inline jule::Ptr<_1c00cd282_Data> _1c00e195a_evalStructLit(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a14e0_StructLit> _176137_lit) {
	jule::Ptr<_1c010d47c_TypeSymbol> _176217_t = _1be46697e_buildType(_176137_lit.get()._field_Kind);;
	jule::Bool _176313_ok = _1c006b4ea_checkType(_self_.get()._field_s, _176217_t,_self_.get()._field_lookup);;
	if ((!(_176313_ok))) {
		return nullptr;
	};
	jule::Ptr<_1be3b359b_StructIns> _176817_s = _1c010c888_Struct(_176217_t.get()._field_Kind.ptr());;
	if ((_176817_s == nullptr)) {
		if ((_1c010b69a_Sptr(_176217_t.get()._field_Kind.ptr()) != nullptr)) {
			_176817_s=_1c010c888_Struct(_1c010b69a_Sptr(_176217_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_176817_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1c00d030b_pushErr(_self_.ptr(), _176137_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1c00cd282_Data> _178117_d = _1c00e164c_evalStructLitExplicit(_self_, _176817_s,_176137_lit.get()._field_Exprs,_176137_lit.get()._field_Kind.get()._field_Token);;
	if ((_1c010b69a_Sptr(_176217_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1be457a2a_StructLitExprModel> _178321_model = _178117_d.get()._field_Model.operator jule::Ptr<_1be457a2a_StructLitExprModel>();;
		_1c010440c_makeStructLitAlloc(_178117_d,_178321_model);
	};
	return _178117_d;
}



inline _1c011784e_typeChecker _1c00e1bbe_typeChecker(_1c00ced00_Eval* _self_) {
	return _1c006a3d9_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);
}



inline jule::Ptr<_1c00cd282_Data> _1c00e1ecc_evalType(_1c00ced00_Eval* _self_, jule::Ptr<_1be396a24_TypeDecl> _179331_t) {
	jule::Ptr<_1c010d47c_TypeSymbol> _179417_tk = _1be46697e_buildType(_179331_t);;
	jule::Bool _179513_ok = _1c006b4ea_checkType((*_self_)._field_s, _179417_tk,(*_self_)._field_lookup);;
	if ((!(_179513_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=_179417_tk.get()._field_Kind, ._field_Model=static_cast<jule::Any>(_179417_tk.get()._field_Kind), ._field_Decl=true, });
}



inline void _1c00e22eb_callTypeFn(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a0313_FnCallExpr>& _180635_fc, jule::Ptr<_1c00cd282_Data>& _180657_d) {
	if ((_180635_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_self_.ptr(), _180635_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_180635_fc.get()._field_Args.len() > 1LL)) {
		_1c00d030b_pushErr(_self_.ptr(), _180635_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_180635_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1be39b045_Expr> _181421_arg = _180635_fc.get()._field_Args[0LL];;
		_180657_d=_1c00e0ad0_evalCastT(_self_, _180657_d.get()._field_Kind,_181421_arg,_181421_arg.get()._field_Token);
		return;;
	};
	if ((_180657_d != nullptr)) {
		_180657_d.get()._field_Decl=false;
	};
}



inline void _1c00e261a_callBuiltinFn(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a0313_FnCallExpr>& _182438_fc, jule::Ptr<_1c00cd282_Data>& _182460_d) {
	_182460_d=_1c010c624_Fn(_182460_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_182438_fc,_182460_d);
	if ((_182460_d == nullptr)) {
		return;;
	};
	_182460_d.get()._field_Mutable=true;
}



inline void _1c00e295b_checkFnOfConcurrentCall(_1c00ced00_Eval* _self_, jule::Ptr<_1be462392_FnIns>& _183243_f, jule::Ptr<_1d675d511_Token> _183254_errorToken) {
	if (_1c00d0c46_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _183243_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c2a60c89:;
		if (it != expr.end()) {
			jule::Ptr<_1be4614c3_ParamIns> &_183616_p = *it;
			{
				if (_183616_p.get()._field_Decl.get()._field_Reference) {
					_1c00d030b_pushErr(&(*_self_), _183254_errorToken,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1c2a60c89:;
			++it;
			goto _iter_begin_1c2a60c89;
		}
		_iter_end_1c2a60c89:;
	};
}



inline void _1c00e2d57_processExceptionalHandler(_1c00ced00_Eval* _self_, jule::Ptr<_1be462392_FnIns>& _184449_f, jule::Ptr<_1be3a0313_FnCallExpr>& _184465_fc, jule::Ptr<_1c00cd282_Data>& _184487_d) {
	jule::Bool _184513_resultNeeded = ((!(_1be45eb53_IsVoid(_184449_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1c004b5b8_scopeChecker> _184617_csc = nullptr;;
	jule::Ptr<_1c00487b3_Scope> _184717_ch = nullptr;;
	jule::Ptr<_1be4580e1_FnCallExprModel> _184917_model = _184487_d.get()._field_Model.operator jule::Ptr<_1be4580e1_FnCallExprModel>();;
	jule::Ptr<_1c004b5b8_scopeChecker> _185317_sc = (*_self_)._field_lookup.operator jule::Ptr<_1c004b5b8_scopeChecker>();;
	_184617_csc=_1c0054b65_newChildChecker(_185317_sc);
	if (_184513_resultNeeded) {
		_184617_csc.get()._field_result=_184449_f;
	};
	_184717_ch=_1c004d444_getChild(_185317_sc.ptr());
	_184465_fc.get()._field_Exception.get()._field_Parent=_185317_sc.get()._field_tree;
	_184617_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_184617_csc.get()._field_table.get()._field_Vars,1);_184617_csc.get()._field_table.get()._field_Vars.__push(_1c010474d_buildErrorVar(_184717_ch,_184465_fc));;
	_1c004d576_checkChildSsc(_185317_sc, _184465_fc.get()._field_Exception,_184717_ch,_184617_csc);
	_184917_model.get()._field_Assigned=_184513_resultNeeded;
	_184917_model.get()._field_Except=_184717_ch;
	if ((_184513_resultNeeded && (_184617_csc.get()._field_result != nullptr))) {
		_1c00d030b_pushErr(&(*_self_), _184465_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1c00e3187_callFn(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a0313_FnCallExpr>& _187131_fc, jule::Ptr<_1c00cd282_Data>& _187153_d) {
	jule::Ptr<_1be462392_FnIns> _187217_f = _1c010c624_Fn(_187153_d.get()._field_Kind.ptr());;
	if ((_1c00d0eaa_isGlobal(_self_.ptr()) && _187217_f.get()._field_Decl.get()._field_Exceptional)) {
		_1c00d030b_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1c00d062a_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_187153_d=nullptr;
		return;;
	};
	if (_1be463728_IsBuiltin(_187217_f.ptr())) {
		_1c00e261a_callBuiltinFn(_self_, _187131_fc,_187153_d);
		return;;
	};
	if (((!(_1be45edb7_IsMethod(_187217_f.get()._field_Decl.ptr()))) && _1c0121072_hasDirective(_187217_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_1c00d030b_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_187153_d=nullptr;
		return;;
	};
	if (((((!(_187153_d.get()._field_Mutable)) && _1be45edb7_IsMethod(_187217_f.get()._field_Decl.ptr())) && (!(_187217_f.get()._field_Decl.get()._field_Statically))) && _187217_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1c00d030b_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1c00d0c46_isUnsafe(_self_.ptr()))) && _187217_f.get()._field_Decl.get()._field_Unsafety)) {
		_1c00d030b_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _189617_dynamicAnnotation = (((_187217_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_187217_f.get()._field_Generics.len() == 0LL)) && (_187217_f.get()._field_Params.len() > 0LL));;
	if (_189617_dynamicAnnotation) {
		_187217_f.get()._field_Generics=jule::Slice<jule::Ptr<_1c0107ae7_InsGeneric>>::alloc(_187217_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_187217_f.get()._field_Generics.len() != _187217_f.get()._field_Decl.get()._field_Generics.len())) {
		_1c006855d_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_187217_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_187217_f.get()._field_Generics.len()),_187131_fc.get()._field_Token);
		_187153_d=nullptr;
		return;;
	};
	jule::Ptr<_1c0064504_Sema> _190517_old = _self_.get()._field_s;;
	if ((_187217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_187217_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_190517_old != _self_.get()._field_s)) {
			_190517_old.get()._field_errors=jule::append(_190517_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_190517_old;
	});;
	if ((!(_189617_dynamicAnnotation))) {
		if ((!(_187217_f.get()._field_reloaded))) {
			jule::Bool _192021_ok = _1c0070367_reloadFnInsTypes(_self_.get()._field_s, _187217_f);;
			_187217_f.get()._field_reloaded=true;
			if ((!(_192021_ok))) {
				_187153_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_1be462392_FnIns> _192721_existInstance = _1be46111b_appendInstance(_187217_f.get()._field_Decl.ptr(), _187217_f);;
		if ((_192721_existInstance != nullptr)) {
			_187217_f=_192721_existInstance;
		};
	} else {
		_1c006dc5b_buildFnNonGenericTypeKinds(_self_.get()._field_s, _187217_f);
	};
	_1c00c0032_fnCallArgChecker _193517_fcac = _1c00c0032_fnCallArgChecker{._field_e=_self_, ._field_args=_187131_fc.get()._field_Args, ._field_errorToken=_187131_fc.get()._field_Token, ._field_f=_187217_f, ._field_dynamicAnnotation=_189617_dynamicAnnotation, };;
	jule::Bool _194217_ok = false;;
	if ((_187217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		std::tie(_190517_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_190517_old);
		_194217_ok=_1c00c23ec_check(&_193517_fcac);
		std::tie(_190517_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_190517_old);
	} else {
		_194217_ok=_1c00c23ec_check(&_193517_fcac);
	};
	if (_189617_dynamicAnnotation) {
		if ((!(_194217_ok))) {
			_187153_d=nullptr;
			return;;
		};
		if ((!(_1c00db290_checkGenericFn(_self_, _187217_f,_187131_fc.get()._field_Token,_187153_d.get()._field_Model)))) {
			_187153_d=nullptr;
			return;;
		};
	};
	jule::Any _196217_callModel = _187153_d.get()._field_Model;;
	if (_1be45eb53_IsVoid(_187217_f.get()._field_Decl.ptr())) {
		_187153_d=_1c0105ba0_buildVoidData();
	} else {
		_187153_d.get()._field_Kind=_187217_f.get()._field_Result;
		_187153_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_1be4580e1_FnCallExprModel> _197117_model = jule::new_ptr<_1be4580e1_FnCallExprModel>(_1be4580e1_FnCallExprModel{._field_Token=_187131_fc.get()._field_Token, ._field_Func=_187217_f, ._field_Expr=_196217_callModel, ._field_Args=_193517_fcac._field_argModels, });;
	_187153_d.get()._field_Model=static_cast<jule::Any>(_197117_model);
	_187153_d.get()._field_Mutable=true;
	if (_187217_f.get()._field_Decl.get()._field_Exceptional) {
		{
			
			if (_1be3a0676_Unhandled(_187131_fc.ptr())) {
				_case_begin_1c2a7b755:;
				{
					_1c00d030b_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1c00d062a_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1be3a08da_Ignored(_187131_fc.ptr())) {
				_case_begin_1c2a6d060:;
				{
					goto _match_end_1c2a7b2d2;
				}
			}
			else {
				_case_begin_1c2a7b3ae:;
				{
					_1c00e2d57_processExceptionalHandler(_self_.ptr(), _187217_f,_187131_fc,_187153_d);
				}
			}
			_match_end_1c2a7b2d2:;
		};
	} else if ((!(_1be3a0676_Unhandled(_187131_fc.ptr())))) {
		_1c00d030b_pushErr(_self_.ptr(), _187131_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e3495_evalFnCall(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a0313_FnCallExpr> _199734_fc) {
	jule::Ptr<_1c0109324_TypeKind> _199817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_199817_prefix;
	});;
	{
		auto &_match_expr{ _199734_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be39d0ad_IdentExpr>>()) {
			_case_begin_1c2a7dd84:;
			{
				if ((_199734_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1bcc71345_builtinCallerError(_self_,_199734_fc);
				};
			}
		}
		_match_end_1c2a7dd2e:;
	};
	jule::Ptr<_1c00cd282_Data> _201117_d = _1c00ea49c_evalExprKind(_self_, _199734_fc.get()._field_Expr.get()._field_Kind);;
	if ((_201117_d == nullptr)) {
		return nullptr;
	};
	if (_201117_d.get()._field_Decl) {
		_1c00e22eb_callTypeFn(_self_, _199734_fc,_201117_d);
		return _201117_d;
	};
	if ((_1c010c624_Fn(_201117_d.get()._field_Kind.ptr()) == nullptr)) {
		_1c00d030b_pushErr(_self_.ptr(), _199734_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1c00e3187_callFn(_self_, _199734_fc,_201117_d);
	return _201117_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00e384c_evalEnumStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1be4736e4_Enum> _203037_enm, jule::Ptr<_1d675d511_Token> _203049_ident) {
	jule::Ptr<_1c00cd282_Data> _203117_d = jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_203037_enm, 3)}), });;
	jule::Ptr<_1be472bee_EnumItem> _203717_item = _1be4742a5_FindItem(_203037_enm.ptr(), _203049_ident.get()._field_Kind);;
	if ((_203717_item == nullptr)) {
		_1c00d030b_pushErr(&(*_self_), _203049_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203037_enm.get()._field_Ident),jule::Any(_203049_ident.get()._field_Kind)}));
	} else {
		_203117_d.get()._field_Constant=jule::new_ptr<_1be3e8c63_Const>((*(_203717_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_203117_d.get()._field_Model=static_cast<jule::Any>(_203117_d.get()._field_Constant);
		_1c0106233_applyCastModelByEnum(_203117_d,_203037_enm);
	};
	return _203117_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00e3c04_evalTypeEnumStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1be474cde_TypeEnum> _204941_enm, jule::Ptr<_1d675d511_Token> _204957_ident) {
	jule::Ptr<_1be474728_TypeEnumItem> _205017_item = _1be475828_FindItem(_204941_enm.ptr(), _204957_ident.get()._field_Kind);;
	if ((_205017_item == nullptr)) {
		_1c00d030b_pushErr(&(*_self_), _204957_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_204941_enm.get()._field_Ident),jule::Any(_204957_ident.get()._field_Kind)}));
		return nullptr;
	};
	{
		
		if ((_1c010bb73_Enum(_205017_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2a8784e:;
			{
				return _1c00d38a3__evalEnum(&(*_self_), _1c010bb73_Enum(_205017_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1c010bdd7_TypeEnum(_205017_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2a87a4c:;
			{
				return _1c00d4068__evalTypeEnum(&(*_self_), _1c010bdd7_TypeEnum(_205017_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else if ((_1c010c888_Struct(_205017_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2a86c6b:;
			{
				return _1c00d472d__evalStruct(&(*_self_), _1c010c888_Struct(_205017_item.get()._field_Kind.get()._field_Kind.ptr()));
			}
		}
		else {
			_case_begin_1c2a85ebd:;
			{
				jule::Ptr<_1c00cd282_Data> _206321_d = jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=_205017_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_206321_d.get()._field_Model=static_cast<jule::Any>(_206321_d.get()._field_Kind);
				return _206321_d;
			}
		}
		_match_end_1c2a85e68:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e40ab_evalStructStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1be3b359b_StructIns> _207239_s, jule::Ptr<_1d675d511_Token> _207254_ident) {
	jule::Ptr<_1c00cd282_Data> _207317_d = jule::new_ptr<_1c00cd282_Data>();;
	;
	jule::Ptr<_1be45e6e1_Fn> _207717_method = _1be38d71e_FindMethod(_207239_s.ptr(), _207254_ident.get()._field_Kind,true);;
	if ((_207717_method != nullptr)) {
		if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _207717_method.get()._field_Public,_207717_method.get()._field_Token)))) {
			_1c00d030b_pushErr(&(*_self_), _207254_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_207254_ident.get()._field_Kind)}));
			_1c00d062a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1be462392_FnIns> _208421_ins = _1be460d41_instance(_207717_method);;
		_208421_ins.get()._field_Owner=_207239_s;
		_1c2c39429_pushReference(&(*_self_), _208421_ins);
		_207317_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459565_StructStaticIdentExprModel>(_1be459565_StructStaticIdentExprModel{._field_Structure=_207239_s, ._field_Expr=_207317_d.get()._field_Model, ._field_Method=_208421_ins}));
		_207317_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_208421_ins, 1)});
		return _207317_d;
	};
	jule::Ptr<_1c0081334_Var> _209817_sttc = _1be377681_FindStatic(_207239_s.get()._field_Decl.ptr(), _207254_ident.get()._field_Kind);;
	if ((_209817_sttc != nullptr)) {
		return _1c00d6598_evalVar(&(*_self_), _209817_sttc,_207254_ident);
	};
	_1c00d030b_pushErr(&(*_self_), _207254_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_207239_s.get()._field_Decl.get()._field_Ident),jule::Any(_207254_ident.get()._field_Kind)}));
	return nullptr;
}



inline jule::Ptr<_1c00cd282_Data> _1c00e450c_evalTraitSubIdent(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data> _210740_d, jule::Ptr<_1be47159e_Trait> _210754_trt, jule::Ptr<_1d675d511_Token> _210771_ident) {
	jule::Ptr<_1be45e6e1_Fn> _210817_f = _1be472429_FindMethod(_210754_trt.ptr(), _210771_ident.get()._field_Kind);;
	if ((_210817_f == nullptr)) {
		_1c00d030b_pushErr(&(*_self_), _210771_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_210754_trt.get()._field_Ident),jule::Any(_210771_ident.get()._field_Kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1be460d41_instance(_210817_f), 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be458e5a_TraitSubIdentExprModel>(_1be458e5a_TraitSubIdentExprModel{._field_Token=_210771_ident, ._field_Expr=_210740_d.get()._field_Model, ._field_Method=_210817_f, ._field_Trt=_210754_trt})), });
}



inline jule::Ptr<_1c00cd282_Data> _1c00e4a07_evalStructSubIdent(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data> _212641_d, jule::Ptr<_1be3b359b_StructIns> _212655_s, jule::Ptr<_1be39e851_SubIdentExpr> _212674_si, jule::Bool _212693_ref) {
	jule::Ptr<_1be38e8b8_FieldIns> _212717_f = _1be391238_FindField(_212655_s.ptr(), _212674_si.get()._field_Ident.get()._field_Kind);;
	if ((_212717_f != nullptr)) {
		if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _212717_f.get()._field_Decl.get()._field_Public,_212717_f.get()._field_Decl.get()._field_Token)))) {
			_1c00d030b_pushErr(&(*_self_), _212674_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_212717_f.get()._field_Decl.get()._field_Ident)}));
			_1c00d062a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1be459378_StructSubIdentExprModel> _213421_model = jule::new_ptr<_1be459378_StructSubIdentExprModel>(_1be459378_StructSubIdentExprModel{._field_Token=_212674_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1c00cd282_Data>((*(_212641_d))), ._field_ExprKind=_212641_d.get()._field_Kind, ._field_Field=_212717_f});;
		_212641_d.get()._field_Model=static_cast<jule::Any>(_213421_model);
		_212641_d.get()._field_Kind=_212717_f.get()._field_Kind;
		_212641_d.get()._field_Lvalue=true;
		if ((_212717_f.get()._field_Decl.get()._field_Mutable && (!(_212641_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1c004b5b8_scopeChecker>>()) {
					_case_begin_1c2a98bc3:;
					{
						jule::Ptr<_1c004b5b8_scopeChecker> _214825_scope = _1c004c993_getRoot((*_self_)._field_lookup.operator jule::Ptr<_1c004b5b8_scopeChecker>());;
						_212641_d.get()._field_Mutable=((_214825_scope.get()._field_owner != nullptr) && (_214825_scope.get()._field_owner.get()._field_Owner == _212655_s));
					}
				}
				_match_end_1c2a98b6d:;
			};
		};
		return _212641_d;
	};
	;
	jule::Ptr<_1be45e6e1_Fn> _215717_m = _1be38d71e_FindMethod(_212655_s.ptr(), _212674_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_215717_m == nullptr)) {
		_1c00d030b_pushErr(&(*_self_), _212674_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212655_s.get()._field_Decl.get()._field_Ident),jule::Any(_212674_si.get()._field_Ident.get()._field_Kind)}));
		return nullptr;
	};
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _215717_m.get()._field_Public,_215717_m.get()._field_Token)))) {
		_1c00d030b_pushErr(&(*_self_), _212674_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_215717_m.get()._field_Ident)}));
		_1c00d062a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1be45d745_IsRef(_215717_m.get()._field_Params[0LL].ptr()) && (!(_212693_ref)))) {
		_1c00d030b_pushErr(&(*_self_), _212674_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1c00d5212_checkDeprecated(&(*_self_), _215717_m.get()._field_Directives,_212674_si.get()._field_Ident);
	jule::Ptr<_1be462392_FnIns> _217317_ins = _1be460d41_instance(_215717_m);;
	_217317_ins.get()._field_Owner=_212655_s;
	_1c2c39429_pushReference(&(*_self_), _217317_ins);
	jule::Ptr<_1c00cd282_Data> _217617_model = jule::new_ptr<_1c00cd282_Data>((*(_212641_d)));;
	_212641_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459378_StructSubIdentExprModel>(_1be459378_StructSubIdentExprModel{._field_Token=_212674_si.get()._field_Ident, ._field_Expr=_217617_model, ._field_ExprKind=_212641_d.get()._field_Kind, ._field_Method=_217317_ins, }));
	_212641_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_217317_ins, 1)});
	return _212641_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00e4dae_evalSliceSubIdent(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data> _218740_d, jule::Ptr<_1d675d511_Token> _218754_ident) {
	{
		auto &_match_expr{ _218754_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c2aa28be:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_218740_d.get()._field_Kind, ._field_Expr=_218740_d.get()._field_Model, ._field_Token=_218754_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1c2aa2935:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Mutable=false, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_218740_d.get()._field_Kind, ._field_Expr=_218740_d.get()._field_Model, ._field_Token=_218754_ident, ._field_Ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1c2aa299b:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_Params=jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>::make({jule::new_ptr<_1be4614c3_ParamIns>(_1be4614c3_ParamIns{._field_Decl=jule::new_ptr<_1be45cda4_Param>(_1be45cda4_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1be4614c3_ParamIns>(_1be4614c3_ParamIns{._field_Decl=jule::new_ptr<_1be45cda4_Param>(_1be45cda4_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc71004_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_218740_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_218740_d.get()._field_Kind, ._field_Expr=_218740_d.get()._field_Model, ._field_Token=_218754_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1c2aa2858:;
			{
				_1c00d030b_pushErr(&(*_self_), _218754_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_218740_d.get()._field_Kind.ptr())),jule::Any(_218754_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2aa2616:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e5266_evalArraySubIdent(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data> _224640_d, jule::Ptr<_1d675d511_Token> _224654_ident) {
	{
		auto &_match_expr{ _224654_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c2aa3bcd:;
			{
				jule::Ptr<_1be3e8c63_Const> _224921_c = static__1be44dcda_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1c010c14b_Arr(_224640_d.get()._field_Kind.ptr()).get()._field_N)));;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_224921_c), ._field_Constant=_224921_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1c2aa8cb0:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_Params=jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>::make({jule::new_ptr<_1be4614c3_ParamIns>(_1be4614c3_ParamIns{._field_Decl=jule::new_ptr<_1be45cda4_Param>(_1be45cda4_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1be4614c3_ParamIns>(_1be4614c3_ParamIns{._field_Decl=jule::new_ptr<_1be45cda4_Param>(_1be45cda4_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc71004_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_224640_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_224640_d.get()._field_Kind, ._field_Expr=_224640_d.get()._field_Model, ._field_Token=_224654_ident, ._field_Ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1c2aa7c8c:;
			{
				_1c00d030b_pushErr(&(*_self_), _224654_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_224640_d.get()._field_Kind.ptr())),jule::Any(_224654_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2aa7bd2:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e561d_evalMapSubIdent(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data> _229038_d, jule::Ptr<_1d675d511_Token> _229052_ident) {
	jule::Ptr<_1c0114593_Map> _229117_mapKind = _1c010cd61_Map(_229038_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _229052_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c2aadc0a:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1c2aadc71:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc71004_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_229038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1c2aadad9:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_Result=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c0112edc_Slc>(_1c0112edc_Slc{._field_Elem=_229117_mapKind.get()._field_Key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc71004_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_229038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1c2aadb50:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_Result=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c0112edc_Slc>(_1c0112edc_Slc{._field_Elem=_229117_mapKind.get()._field_Val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc71004_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_229038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1c2aacda2:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_Params=jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>::make({jule::new_ptr<_1be4614c3_ParamIns>(_1be4614c3_ParamIns{._field_Decl=jule::new_ptr<_1be45cda4_Param>(_1be45cda4_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_229117_mapKind.get()._field_Key})}), ._field_Result=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc70b19_builtinCallerCommon), }), 1)}), ._field_Mutable=_229038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1c2aace18:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_Params=jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>::make({jule::new_ptr<_1be4614c3_ParamIns>(_1be4614c3_ParamIns{._field_Decl=jule::new_ptr<_1be45cda4_Param>(_1be45cda4_Param{._field_Ident=jule::Str("key", 3)}), ._field_Kind=_229117_mapKind.get()._field_Key})}), ._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc71004_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_229038_d.get()._field_Mutable, ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_229038_d.get()._field_Kind, ._field_Expr=_229038_d.get()._field_Model, ._field_Token=_229052_ident, ._field_Ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1c2aacd3b:;
			{
				_1c00d030b_pushErr(&(*_self_), _229052_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c0114906_Str(_229117_mapKind.ptr())),jule::Any(_229052_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2aacc92:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e59c5_evalStrSubIdent(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data> _241238_d, jule::Ptr<_1d675d511_Token> _241252_ident) {
	jule::Ptr<_1c0109324_TypeKind> _241317_strKind = jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _241252_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c2d83a5c:;
			{
				jule::Ptr<_1c00cd282_Data> _241621_sd = jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_1c00cdb45_IsConst(_241238_d.ptr())) {
					_241621_sd.get()._field_Constant=static__1be44dcda_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1be450627_ReadStr(_241238_d.get()._field_Constant.ptr()).len())));
					_241621_sd.get()._field_Model=static_cast<jule::Any>(_241621_sd.get()._field_Constant);
				} else {
					_241621_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_241238_d.get()._field_Kind, ._field_Expr=_241238_d.get()._field_Model, ._field_Token=_241252_ident, ._field_Ident=jule::Str("len()", 5)}));
				};
				return _241621_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1c2d83ac3:;
			{
				jule::Ptr<_1c00cd282_Data> _243221_sd = jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)}), });;
				if (_1c00cdb45_IsConst(_241238_d.ptr())) {
					_243221_sd.get()._field_Constant=static__1be44dcda_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1be450627_ReadStr(_241238_d.get()._field_Constant.ptr()).cap())));
					_243221_sd.get()._field_Model=static_cast<jule::Any>(_243221_sd.get()._field_Constant);
				} else {
					_243221_sd.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_241238_d.get()._field_Kind, ._field_Expr=_241238_d.get()._field_Model, ._field_Token=_241252_ident, ._field_Ident=jule::Str("cap()", 5)}));
				};
				return _243221_sd;
			}
		}
		else {
			_case_begin_1c2d839e6:;
			{
				_1c00d030b_pushErr(&(*_self_), _241252_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_241317_strKind.ptr())),jule::Any(_241252_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2d8394c:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e5cd3_evalIntTypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _245336_ident) {
	;
	{
		auto &_match_expr{ _245336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2d89a41:;
			{
				jule::Ptr<_1be3e8c63_Const> _245821_c = static__1be44dcda_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1be90ed06_Max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_245821_c), ._field_Constant=_245821_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c2d8a9dc:;
			{
				jule::Ptr<_1be3e8c63_Const> _246521_c = static__1be44dcda_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1be906ec9_Min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_246521_c), ._field_Constant=_246521_c});
			}
		}
		else {
			_case_begin_1c2d89c2d:;
			{
				_1c00d030b_pushErr(&(*_self_), _245336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_245336_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2d89bc8:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e60e1_evalUintTypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _247737_ident) {
	;
	{
		auto &_match_expr{ _247737_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2d8d638:;
			{
				jule::Ptr<_1be3e8c63_Const> _248221_c = static__1be44de1c_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1be90ed06_Max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=static_cast<jule::Any>(_248221_c), ._field_Constant=_248221_c});
			}
		}
		else {
			_case_begin_1c2d8d58e:;
			{
				_1c00d030b_pushErr(&(*_self_), _247737_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_247737_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2d8d539:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e63ee_evalI8TypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _249435_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _249435_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2d9163b:;
			{
				jule::Ptr<_1be3e8c63_Const> _250121_c = static__1be44dcda_NewI64(127LL);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_250121_c), ._field_Constant=_250121_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c2d916a2:;
			{
				jule::Ptr<_1be3e8c63_Const> _250821_c = static__1be44dcda_NewI64(-128LL);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_250821_c), ._field_Constant=_250821_c});
			}
		}
		else {
			_case_begin_1c2d91581:;
			{
				_1c00d030b_pushErr(&(*_self_), _249435_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_249435_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2d9152b:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e670c_evalI16TypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _252036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _252036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2d95321:;
			{
				jule::Ptr<_1be3e8c63_Const> _252721_c = static__1be44dcda_NewI64(32767LL);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_252721_c), ._field_Constant=_252721_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c2d95387:;
			{
				jule::Ptr<_1be3e8c63_Const> _253421_c = static__1be44dcda_NewI64(-32768LL);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_253421_c), ._field_Constant=_253421_c});
			}
		}
		else {
			_case_begin_1c2d95266:;
			{
				_1c00d030b_pushErr(&(*_self_), _252036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_252036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2d95211:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e6a1a_evalI32TypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _254636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _254636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2d99006:;
			{
				jule::Ptr<_1be3e8c63_Const> _255321_c = static__1be44dcda_NewI64(2147483647LL);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_255321_c), ._field_Constant=_255321_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c2d9906c:;
			{
				jule::Ptr<_1be3e8c63_Const> _256021_c = static__1be44dcda_NewI64(-2147483648LL);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_256021_c), ._field_Constant=_256021_c});
			}
		}
		else {
			_case_begin_1c2d98e4b:;
			{
				_1c00d030b_pushErr(&(*_self_), _254636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_254636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2d98de6:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e6d28_evalI64TypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _257236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _257236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2d9cbdb:;
			{
				jule::Ptr<_1be3e8c63_Const> _257921_c = static__1be44dcda_NewI64(jule::MAX_I64);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_257921_c), ._field_Constant=_257921_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c2d9cc52:;
			{
				jule::Ptr<_1be3e8c63_Const> _258621_c = static__1be44dcda_NewI64(jule::MIN_I64);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_258621_c), ._field_Constant=_258621_c});
			}
		}
		else {
			_case_begin_1c2d9cb31:;
			{
				_1c00d030b_pushErr(&(*_self_), _257236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_257236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2d9cacb:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e7136_evalU8TypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _259835_ident) {
	;
	;
	{
		auto &_match_expr{ _259835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2da144d:;
			{
				jule::Ptr<_1be3e8c63_Const> _260421_c = static__1be44de1c_NewU64(255LLU);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=static_cast<jule::Any>(_260421_c), ._field_Constant=_260421_c});
			}
		}
		else {
			_case_begin_1c2da0947:;
			{
				_1c00d030b_pushErr(&(*_self_), _259835_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_259835_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2da12e9:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e7444_evalU16TypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _261636_ident) {
	;
	;
	{
		auto &_match_expr{ _261636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2da3d02:;
			{
				jule::Ptr<_1be3e8c63_Const> _262221_c = static__1be44de1c_NewU64(65535LLU);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_262221_c), ._field_Constant=_262221_c});
			}
		}
		else {
			_case_begin_1c2da32eb:;
			{
				_1c00d030b_pushErr(&(*_self_), _261636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_261636_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2da3b9d:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e7752_evalU32TypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _263436_ident) {
	;
	;
	{
		auto &_match_expr{ _263436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2da66a6:;
			{
				jule::Ptr<_1be3e8c63_Const> _264021_c = static__1be44de1c_NewU64(4294967295LLU);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_264021_c), ._field_Constant=_264021_c});
			}
		}
		else {
			_case_begin_1c2da5ba0:;
			{
				_1c00d030b_pushErr(&(*_self_), _263436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_263436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2da6552:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e7a60_evalU64TypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _265236_ident) {
	;
	;
	{
		auto &_match_expr{ _265236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2da905a:;
			{
				jule::Ptr<_1be3e8c63_Const> _265821_c = static__1be44de1c_NewU64(jule::MAX_U64);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_265821_c), ._field_Constant=_265821_c});
			}
		}
		else {
			_case_begin_1c2da8554:;
			{
				_1c00d030b_pushErr(&(*_self_), _265236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_265236_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2da8e06:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e7d6d_evalF32TypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _267036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _267036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2dac1d4:;
			{
				jule::Ptr<_1be3e8c63_Const> _267821_c = static__1be44e5e3_NewF64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_267821_c), ._field_Constant=_267821_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c2dac24a:;
			{
				jule::Ptr<_1be3e8c63_Const> _268521_c = static__1be44e5e3_NewF64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_268521_c), ._field_Constant=_268521_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1c2dac2b1:;
			{
				jule::Ptr<_1be3e8c63_Const> _269221_c = static__1be44e5e3_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_269221_c), ._field_Constant=_269221_c});
			}
		}
		else {
			_case_begin_1c2dac0d5:;
			{
				_1c00d030b_pushErr(&(*_self_), _267036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_267036_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2dac06e:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e817b_evalF64TypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1d675d511_Token> _270436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _270436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c2db2151:;
			{
				jule::Ptr<_1be3e8c63_Const> _271221_c = static__1be44e5e3_NewF64(jule::MAX_F64);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_271221_c), ._field_Constant=_271221_c});
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c2db21b7:;
			{
				jule::Ptr<_1be3e8c63_Const> _271921_c = static__1be44e5e3_NewF64(jule::MIN_F64);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_271921_c), ._field_Constant=_271921_c});
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1c2db222d:;
			{
				jule::Ptr<_1be3e8c63_Const> _272621_c = static__1be44e5e3_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=static_cast<jule::Any>(_272621_c), ._field_Constant=_272621_c});
			}
		}
		else {
			_case_begin_1c2db2052:;
			{
				_1c00d030b_pushErr(&(*_self_), _270436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_270436_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2db1edb:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e8533_evalPrimStatic(_1c00ced00_Eval* _self_, jule::Str _273833_kind, jule::Ptr<_1d675d511_Token> _273844_ident) {
	{
		auto &_match_expr{ _273833_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c2db6177:;
			{
				return _1c00e5cd3_evalIntTypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c2db61dd:;
			{
				return _1c00e60e1_evalUintTypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c2db6a7e:;
			{
				return _1c00e63ee_evalI8TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c2db6ae5:;
			{
				return _1c00e670c_evalI16TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c2db6b5b:;
			{
				return _1c00e6a1a_evalI32TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c2db6bc2:;
			{
				return _1c00e6d28_evalI64TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c2db6c38:;
			{
				return _1c00e7136_evalU8TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c2db6ce3:;
			{
				return _1c00e7444_evalU16TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c2db6d59:;
			{
				return _1c00e7752_evalU32TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c2db6dc0:;
			{
				return _1c00e7a60_evalU64TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c2db6e36:;
			{
				return _1c00e7d6d_evalF32TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c2db6e9c:;
			{
				return _1c00e817b_evalF64TypeStatic(&(*_self_), _273844_ident);
			}
		}
		else {
			_case_begin_1c2db56a4:;
			{
				_1c00d030b_pushErr(&(*_self_), _273844_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_273833_kind),jule::Any(_273844_ident.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2db6012:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e88da_evalTypeStatic(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data> _277037_d, jule::Ptr<_1be39e851_SubIdentExpr> _277051_si) {
	{
		
		if ((_1c010b436_Prim(_277037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2dbb59a:;
			{
				return _1c00e8533_evalPrimStatic(&(*_self_), _1c010e15e_Str(_1c010b436_Prim(_277037_d.get()._field_Kind.ptr()).ptr()),_277051_si.get()._field_Ident);
			}
		}
		else if ((_1c010bb73_Enum(_277037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2dbb611:;
			{
				return _1c00e384c_evalEnumStatic(&(*_self_), _1c010bb73_Enum(_277037_d.get()._field_Kind.ptr()),_277051_si.get()._field_Ident);
			}
		}
		else if ((_1c010bdd7_TypeEnum(_277037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2dbb677:;
			{
				return _1c00e3c04_evalTypeEnumStatic(&(*_self_), _1c010bdd7_TypeEnum(_277037_d.get()._field_Kind.ptr()),_277051_si.get()._field_Ident);
			}
		}
		else if ((_1c010c888_Struct(_277037_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2dbb6dd:;
			{
				return _1c00e40ab_evalStructStatic(&(*_self_), _1c010c888_Struct(_277037_d.get()._field_Kind.ptr()),_277051_si.get()._field_Ident);
			}
		}
		else {
			_case_begin_1c2dbb534:;
			{
				_1c00d030b_pushErr(&(*_self_), _277051_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_277037_d.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c2db73dc:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e8c92_evalObjSubIdent(_1c00ced00_Eval* _self_, jule::Ptr<_1c00cd282_Data> _278638_d, jule::Ptr<_1be39e851_SubIdentExpr> _278652_si) {
	if (_1d6760ca5_IsIgnoreIdent(_278652_si.get()._field_Ident.get()._field_Kind)) {
		_1c00d030b_pushErr(&(*_self_), _278652_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c0109324_TypeKind> _279217_kind = _278638_d.get()._field_Kind;;
	{
		
		if ((_1c010b90e_Ptr(_278638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2dc2408:;
			{
				jule::Ptr<_1c0115ae4_Ptr> _279517_ptr = _1c010b90e_Ptr(_278638_d.get()._field_Kind.ptr());;
				if (_1c01165b7_IsUnsafe(_279517_ptr.ptr())) {
					goto _match_end_1c2dc22a4;
				};
				if (((!(_278652_si.get()._field_IsSelf)) && (!(_1c00d0c46_isUnsafe(&(*_self_)))))) {
					_1c00d030b_pushErr(&(*_self_), _278652_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_279217_kind=_1c010b90e_Ptr(_278638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1c010b69a_Sptr(_278638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2dc246e:;
			{
				_279217_kind=_1c010b69a_Sptr(_278638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1c2dc22a4:;
	};
	{
		
		if ((_1c010caec_Trait(_278638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2dc4dde:;
			{
				return _1c00e450c_evalTraitSubIdent(&(*_self_), _278638_d,_1c010caec_Trait(_278638_d.get()._field_Kind.ptr()),_278652_si.get()._field_Ident);
			}
		}
		else if ((_1c010c888_Struct(_279217_kind.ptr()) != nullptr)) {
			_case_begin_1c2dc4e66:;
			{
				jule::Ptr<_1be3b359b_StructIns> _281117_s = _1c010c888_Struct(_279217_kind.ptr());;
				if (_1c01051dd_isInstancedStruct(_281117_s)) {
					jule::Bool _281325_usedReferenceElem = (_1c010b69a_Sptr(_278638_d.get()._field_Kind.ptr()) != nullptr);;
					return _1c00e4a07_evalStructSubIdent(&(*_self_), _278638_d,_1c010c888_Struct(_279217_kind.ptr()),_278652_si,_281325_usedReferenceElem);
				};
			}
		}
		else if ((_1c010c3b0_Slc(_279217_kind.ptr()) != nullptr)) {
			_case_begin_1c2dc4edd:;
			{
				return _1c00e4dae_evalSliceSubIdent(&(*_self_), _278638_d,_278652_si.get()._field_Ident);
			}
		}
		else if ((_1c010c14b_Arr(_279217_kind.ptr()) != nullptr)) {
			_case_begin_1c2dc5065:;
			{
				return _1c00e5266_evalArraySubIdent(&(*_self_), _278638_d,_278652_si.get()._field_Ident);
			}
		}
		else if ((_1c010cd61_Map(_279217_kind.ptr()) != nullptr)) {
			_case_begin_1c2dc55c6:;
			{
				return _1c00e561d_evalMapSubIdent(&(*_self_), _278638_d,_278652_si.get()._field_Ident);
			}
		}
		else if ((_1c010b436_Prim(_279217_kind.ptr()) != nullptr)) {
			_case_begin_1c2dc564d:;
			{
				jule::Ptr<_1c010dceb_Prim> _282317_p = _1c010b436_Prim(_279217_kind.ptr());;
				{
					auto &_match_expr{ _282317_p.get()._field_Kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1c2dcaed3:;
						{
							return _1c00e59c5_evalStrSubIdent(&(*_self_), _278638_d,_278652_si.get()._field_Ident);
						}
					}
					_match_end_1c2dcad29:;
				};
			}
		}
		_match_end_1c2dc4ce0:;
	};
	_1c00d030b_pushErr(&(*_self_), _278652_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_278638_d.get()._field_Kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1c00cd282_Data> _1c00e90a0_evalSubIdent(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be39e851_SubIdentExpr> _283336_si) {
	jule::Ptr<_1c0109324_TypeKind> _283417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_283417_prefix;
	});;
	jule::Ptr<_1c00cd282_Data> _283817_d = _1c00ea49c_evalExprKind(_self_, _283336_si.get()._field_Expr.get()._field_Kind);;
	if ((_283817_d == nullptr)) {
		return nullptr;
	};
	if (_283817_d.get()._field_Decl) {
		return _1c00e88da_evalTypeStatic(_self_.ptr(), _283817_d,_283336_si);
	};
	return _1c00e8c92_evalObjSubIdent(_self_.ptr(), _283817_d,_283336_si);
}



inline jule::Ptr<_1c00cd282_Data> _1c00e93ad_evalTuple(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be39bbc2_TupleExpr> _285033_tup) {
	jule::Ptr<_1c0113a6a_Tuple> _285117_tupT = jule::new_ptr<_1c0113a6a_Tuple>();;
	_285117_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1c0109324_TypeKind>>::alloc(0LL,_285033_tup.get()._field_Expr.len());
	jule::Ptr<_1be459d18_TupleExprModel> _285417_model = jule::new_ptr<_1be459d18_TupleExprModel>(_1be459d18_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1c00cd282_Data>>::alloc(0LL,_285033_tup.get()._field_Expr.len())});;
	jule::Bool _285817_ok = true;;
	{
		auto &expr = _285033_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1c2dd125d:;
		if (it != expr.end()) {
			jule::Ptr<_1be39b045_Expr> _285921_expr = *it;
			{
				jule::Ptr<_1c00cd282_Data> _286021_d = _1c00ea49c_evalExprKind(_self_, _285921_expr.get()._field_Kind);;
				if ((_286021_d == nullptr)) {
					_285817_ok=false;
					goto _iter_next_1c2dd125d;
				};
				_285117_tupT.get()._field_Types = jule::alloc_for_append(_285117_tupT.get()._field_Types,1);_285117_tupT.get()._field_Types.__push(_286021_d.get()._field_Kind);;
				_285417_model.get()._field_Datas = jule::alloc_for_append(_285417_model.get()._field_Datas,1);_285417_model.get()._field_Datas.__push(_286021_d);;
			}
			_iter_next_1c2dd125d:;
			++it;
			goto _iter_begin_1c2dd125d;
		}
		_iter_end_1c2dd125d:;
	};
	if ((!(_285817_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_285117_tupT, 9)}), ._field_Model=static_cast<jule::Any>(_285417_model), });
}



inline jule::Ptr<_1c00cd282_Data> _1c00e9765_evalMap(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1c0114593_Map> _287931_m, jule::Ptr<_1be3a1963_BraceLit> _287944_lit) {
	jule::Ptr<_1be458a81_MapExprModel> _288017_model = jule::new_ptr<_1be458a81_MapExprModel>(_1be458a81_MapExprModel{._field_KeyKind=_287931_m.get()._field_Key, ._field_ValKind=_287931_m.get()._field_Val, });;
	{
		auto &expr = _287944_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c2dd454c:;
		if (it != expr.end()) {
			jule::Ptr<_1be39b045_Expr> _288521_expr = *it;
			{
				{
					auto &_match_expr{ _288521_expr.get()._field_Kind };
					
					if (_match_expr.type_is<jule::Ptr<_1be3a247a_KeyValPair>>()) {
						_case_begin_1c2dd5086:;
						{
							goto _match_end_1c2dd4d66;
						}
					}
					else {
						_case_begin_1c2dd4edc:;
						{
							_1c00d030b_pushErr(_self_.ptr(), _287944_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1c2dd4d66:;
				};
				jule::Ptr<_1be3a247a_KeyValPair> _289521_pair = _288521_expr.get()._field_Kind.operator jule::Ptr<_1be3a247a_KeyValPair>();;
				jule::Ptr<_1c00cd282_Data> _289721_key = _1c00ea49c_evalExprKind(_self_, _289521_pair.get()._field_Key.get()._field_Kind);;
				if ((_289721_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1c00cd282_Data> _290221_val = _1c00ea49c_evalExprKind(_self_, _289521_pair.get()._field_Val.get()._field_Kind);;
				if ((_290221_val == nullptr)) {
					return nullptr;
				};
				_1c006d178_checkAssignType(_self_.get()._field_s, false,_287931_m.get()._field_Key,_289721_key,_289521_pair.get()._field_Colon);
				_1c006d178_checkAssignType(_self_.get()._field_s, false,_287931_m.get()._field_Val,_290221_val,_289521_pair.get()._field_Colon);
				_288017_model.get()._field_Entries = jule::alloc_for_append(_288017_model.get()._field_Entries,1);_288017_model.get()._field_Entries.__push(jule::new_ptr<_1be458894_KeyValPairExprModel>(_1be458894_KeyValPairExprModel{._field_Key=_289721_key.get()._field_Model, ._field_Val=_290221_val.get()._field_Model}));;
			}
			_iter_next_1c2dd454c:;
			++it;
			goto _iter_begin_1c2dd454c;
		}
		_iter_end_1c2dd454c:;
	};
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_287931_m, 10)}), ._field_Mutable=true, ._field_Model=static_cast<jule::Any>(_288017_model), });
}



inline jule::Ptr<_1c00cd282_Data> _1c00e9a73_evalBraceLit(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a1963_BraceLit> _292336_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1c2dd9893:;
			{
				_1c00d030b_pushErr(_self_.ptr(), _292336_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1c010cd61_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c2dd9909:;
			{
				return _1c00e9765_evalMap(_self_, _1c010cd61_Map(_self_.get()._field_prefix.ptr()),_292336_lit);
			}
		}
		else if ((_1c010c888_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c2dd9970:;
			{
				return _1c00e164c_evalStructLitExplicit(_self_, _1c010c888_Struct(_self_.get()._field_prefix.ptr()),_292336_lit.get()._field_Exprs,_292336_lit.get()._field_Token);
			}
		}
		else {
			_case_begin_1c2dd97d8:;
			{
				_1c00d030b_pushErr(_self_.ptr(), _292336_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c2dd972d:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00e9d81_evalAnonFn(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be3a8838_FnDecl> _293834_decl) {
	_1c011784e_typeChecker _293917_tc = _1c011784e_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1be462392_FnIns> _294417_ins = _1c011e191_buildFn(&_293917_tc, _293834_decl);;
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c004b5b8_scopeChecker>>()) {
			_case_begin_1c2ddb4bb:;
			{
				jule::Ptr<_1c004b5b8_scopeChecker> _294721_sc = _self_.get()._field_lookup.operator jule::Ptr<_1c004b5b8_scopeChecker>();;
				jule::Ptr<_1c004b5b8_scopeChecker> _294821_scc = _1c0054b65_newChildChecker(_294721_sc);;
				_294821_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c004b1de_scopeLabel>>>(nullptr);
				_294821_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c004b3cb_scopeGoto>>>(nullptr);
				_294821_scc.get()._field_owner=nullptr;
				_294821_scc.get()._field_childIndex=0LL;
				_294821_scc.get()._field_it=0LLU;
				_294821_scc.get()._field_cse=0LLU;
				_294821_scc.get()._field_owner=_294417_ins;
				_1c007b87e_checkFnInsSc(_self_.get()._field_s.ptr(), _294417_ins,_294821_scc);
			}
		}
		else {
			_case_begin_1c2dddd4d:;
			{
				_1c007be23_checkFnIns(_self_.get()._field_s, _294417_ins);
			}
		}
		_match_end_1c2dddce8:;
	};
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_294417_ins, 1)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be4586a7_AnonFnExprModel>(_1be4586a7_AnonFnExprModel{._field_Func=_294417_ins, ._field_Global=_1c00d0eaa_isGlobal(_self_.ptr())})), });
}



inline jule::Ptr<_1c00cd282_Data> _1c00ea18e_evalBinop(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be39ecc4_BinopExpr> _297033_op) {
	_1c00eccc9_binaryEval _297117_bs = static__1c00ed390_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1c010dceb_Prim> _297417_prim = _1c010b436_Prim(_self_.get()._field_prefix.ptr());;
		if (((_297417_prim == nullptr) || (!(_1c0048373_IsNum(_1c010e15e_Str(_297417_prim.ptr())))))) {
			jule::Ptr<_1c0109324_TypeKind> _297625_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_297625_prefix;
			});;
			return _1c0103670_eval(&_297117_bs, _297033_op);
		};
	};
	return _1c0103670_eval(&_297117_bs, _297033_op);
}



inline jule::Ptr<_1c00cd282_Data> _1c00ea49c_evalExprKind(jule::Ptr<_1c00ced00_Eval> _self_, jule::Any _298536_kind) {
	{
		auto &_match_expr{ _298536_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be39b331_RangeExpr>>()) {
			_case_begin_1c2de622e:;
			{
				jule::Ptr<_1be39b331_RangeExpr> _298821_e = _298536_kind.operator jule::Ptr<_1be39b331_RangeExpr>();;
				return _1c00ea49c_evalExprKind(_self_, _298821_e.get()._field_Expr.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39c079_LitExpr>>()) {
			_case_begin_1c2de63a5:;
			{
				return _1c00d2b5a_evalLit(_self_.ptr(), _298536_kind.operator jule::Ptr<_1be39c079_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39d0ad_IdentExpr>>()) {
			_case_begin_1c2de641b:;
			{
				return _1c00d7115_evalIdent(_self_.ptr(), _298536_kind.operator jule::Ptr<_1be39d0ad_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39d7b7_UnaryExpr>>()) {
			_case_begin_1c2de6482:;
			{
				return _1c00d7423_evalUnary(_self_, _298536_kind.operator jule::Ptr<_1be39d7b7_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39db6e_VariadicExpr>>()) {
			_case_begin_1c2de64e8:;
			{
				return _1c00d7731_evalVariadic(_self_, _298536_kind.operator jule::Ptr<_1be39db6e_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39c783_UnsafeExpr>>()) {
			_case_begin_1c2de655e:;
			{
				return _1c00d7a3e_evalUnsafe(_self_, _298536_kind.operator jule::Ptr<_1be39c783_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a28ed_SliceExpr>>()) {
			_case_begin_1c2de65d6:;
			{
				return _1c00d85ab_evalSliceExpr(_self_, _298536_kind.operator jule::Ptr<_1be3a28ed_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a328e_IndexingExpr>>()) {
			_case_begin_1c2de6691:;
			{
				return _1c00db900_evalIndexing(_self_, _298536_kind.operator jule::Ptr<_1be3a328e_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a3899_SlicingExpr>>()) {
			_case_begin_1c2de6707:;
			{
				return _1c00dcabb_evalSlicing(_self_, _298536_kind.operator jule::Ptr<_1be3a3899_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39e026_CastExpr>>()) {
			_case_begin_1c2de676d:;
			{
				return _1c00e0ddd_evalCast(_self_, _298536_kind.operator jule::Ptr<_1be39e026_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39e3cd_NsSelectionExpr>>()) {
			_case_begin_1c2de67d4:;
			{
				return _1c00e11eb_evalNsSelection(_self_.ptr(), _298536_kind.operator jule::Ptr<_1be39e3cd_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a14e0_StructLit>>()) {
			_case_begin_1c2de685b:;
			{
				return _1c00e195a_evalStructLit(_self_, _298536_kind.operator jule::Ptr<_1be3a14e0_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be396a24_TypeDecl>>()) {
			_case_begin_1c2de68d3:;
			{
				return _1c00e1ecc_evalType(_self_.ptr(), _298536_kind.operator jule::Ptr<_1be396a24_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a0313_FnCallExpr>>()) {
			_case_begin_1c2de695a:;
			{
				return _1c00e3495_evalFnCall(_self_, _298536_kind.operator jule::Ptr<_1be3a0313_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39e851_SubIdentExpr>>()) {
			_case_begin_1c2de69d2:;
			{
				return _1c00e90a0_evalSubIdent(_self_, _298536_kind.operator jule::Ptr<_1be39e851_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39bbc2_TupleExpr>>()) {
			_case_begin_1c2de6a59:;
			{
				return _1c00e93ad_evalTuple(_self_, _298536_kind.operator jule::Ptr<_1be39bbc2_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a1963_BraceLit>>()) {
			_case_begin_1c2de6ad1:;
			{
				return _1c00e9a73_evalBraceLit(_self_, _298536_kind.operator jule::Ptr<_1be3a1963_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a8838_FnDecl>>()) {
			_case_begin_1c2de6b58:;
			{
				return _1c00e9d81_evalAnonFn(_self_, _298536_kind.operator jule::Ptr<_1be3a8838_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39ecc4_BinopExpr>>()) {
			_case_begin_1c2de6bd0:;
			{
				return _1c00ea18e_evalBinop(_self_, _298536_kind.operator jule::Ptr<_1be39ecc4_BinopExpr>());
			}
		}
		else {
			_case_begin_1c2de5e65:;
			{
				return nullptr;
			}
		}
		_match_end_1c2de5d77:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00ea7aa_eval(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be39b045_Expr> _303328_expr) {
	jule::Ptr<_1c00cd282_Data> _303417_d = _1c00ea49c_evalExprKind(_self_, _303328_expr.get()._field_Kind);;
	if (((_303417_d == nullptr) || (_303417_d.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1c010c624_Fn(_303417_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e01c2e:;
			{
				jule::Ptr<_1be462392_FnIns> _304121_f = _1c010c624_Fn(_303417_d.get()._field_Kind.ptr());;
				if (_1be463728_IsBuiltin(_304121_f.ptr())) {
					goto _match_end_1c2e01aca;
				};
				if ((_304121_f.get()._field_Generics.len() != _304121_f.get()._field_Decl.get()._field_Generics.len())) {
					_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _303328_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_304121_f.get()._field_Decl.get()._field_Statically)) && _1be45edb7_IsMethod(_304121_f.get()._field_Decl.ptr()))) {
					_1c00671b6_pushErr(_self_.get()._field_s.ptr(), _303328_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1c2e01aca:;
	};
	return _303417_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c00eaab8_evalExpr(jule::Ptr<_1c00ced00_Eval> _self_, jule::Ptr<_1be39b045_Expr> _305932_expr) {
	jule::Ptr<_1c00cd282_Data> _306017_d = _1c00ea7aa_eval(_self_, _305932_expr);;
	{
		
		if ((_306017_d == nullptr)) {
			_case_begin_1c2e0589d:;
			{
				return nullptr;
			}
		}
		else if (_306017_d.get()._field_Decl) {
			_case_begin_1c2e05925:;
			{
				_1c00d030b_pushErr(_self_.ptr(), _305932_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1c2e05815:;
			{
				return _306017_d;
			}
		}
		_match_end_1c2e0579e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c00ced00_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1c00eb03b_unaryEval static__1c00eb4e2_new(jule::Ptr<_1c00ced00_Eval> _308023_e) {
	return _1c00eb03b_unaryEval{._field_e=_308023_e, };
}



inline void _1c00eb6bd_minus(_1c00eb03b_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c2e074d7:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c010b436_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e07927:;
			{
				if ((!(_1c0048373_IsNum(_1c0109720_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c010c888_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e0798d:;
			{
				if ((_1c010c888_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c2e07130:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c2e06c78:;
	};
	if (_1c00cdb45_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1be452c34_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c2e0ab5b:;
				{
					_1be451d43_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1be45088b_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1be452283_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c2e0abd3:;
				{
					_1be45134d_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1be44edda_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1be4524e7_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c2e0ac5a:;
				{
					_1be45134d_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1be450b00_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1c2e0aa29:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be457651_UnaryExprModel>(_1be457651_UnaryExprModel{._field_Expr=jule::new_ptr<_1c00cd282_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1c00eb899_plus(_1c00eb03b_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c2e10204:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c010b436_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e10644:;
			{
				if ((!(_1c0048373_IsNum(_1c0109720_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c010c888_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e106aa:;
			{
				if ((_1c010c888_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c2e0ed4c:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c2e0ec70:;
	};
	if (_1c00cdb45_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1be452c34_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c2e13878:;
				{
					_1be451d43_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1be45088b_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1be452283_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c2e13900:;
				{
					_1be45134d_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1be44edda_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1be4524e7_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c2e13977:;
				{
					_1be45134d_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1be450b00_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1c2e13746:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be457651_UnaryExprModel>(_1be457651_UnaryExprModel{._field_Expr=jule::new_ptr<_1c00cd282_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1c00eba75_caret(_1c00eb03b_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c2e17dee:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c010b436_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e1833e:;
			{
				if ((!(_1c004810e_IsInt(_1c0109720_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c010c888_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e183a5:;
			{
				if ((_1c010c888_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c2e17a47:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c2e1796a:;
	};
	if (_1c00cdb45_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1be452283_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c2e1b562:;
				{
					_1be45134d_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1be44edda_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1be4524e7_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c2e1b5d9:;
				{
					_1be4515c3_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1be45014e_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1c2e1b441:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be457651_UnaryExprModel>(_1be457651_UnaryExprModel{._field_Expr=jule::new_ptr<_1c00cd282_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1c00ebc51_excl(_1c00eb03b_unaryEval* _self_) {
	jule::Ptr<_1c010dceb_Prim> _319913_t = _1c010b436_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_319913_t == nullptr) || (!(_1c0111cbb_IsBool(_319913_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1c00cdb45_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1be45275b_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c2e20e7e:;
				{
					_1be451848_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_1be4503b3_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1c2e20d6e:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be457651_UnaryExprModel>(_1be457651_UnaryExprModel{._field_Expr=jule::new_ptr<_1c00cd282_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
}



inline void _1c00ebe2c_star(_1c00eb03b_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be457651_UnaryExprModel>(_1be457651_UnaryExprModel{._field_Expr=jule::new_ptr<_1c00cd282_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
	{
		
		if ((_1c010b90e_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e23d72:;
			{
				if ((!(_1c00d0c46_isUnsafe((*_self_)._field_e.ptr())))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c0115ae4_Ptr> _323121_t = _1c010b90e_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1c01165b7_IsUnsafe(_323121_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_323121_t.get()._field_Elem;
			}
		}
		else if ((_1c010b69a_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e242c3:;
			{
				(*_self_)._field_d.get()._field_Kind=_1c010b69a_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1c2e239cb:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c2e23965:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _1c00ec108_amper(_1c00eb03b_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be457a2a_StructLitExprModel>>()) {
			_case_begin_1c2e27da9:;
			{
				jule::Ptr<_1be457a2a_StructLitExprModel> _325121_lit = (*_self_)._field_d.get()._field_Model.operator jule::Ptr<_1be457a2a_StructLitExprModel>();;
				_1c010440c_makeStructLitAlloc((*_self_)._field_d,_325121_lit);
			}
		}
		else {
			_case_begin_1c2e2821c:;
			{
				{
					
					if (_1c0121319_canGetPtr((*_self_)._field_d)) {
						_case_begin_1c2e28d55:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c0115ae4_Ptr>(_1c0115ae4_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be457651_UnaryExprModel>(_1be457651_UnaryExprModel{._field_Expr=jule::new_ptr<_1c00cd282_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}));
						}
					}
					else {
						_case_begin_1c2e287b1:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1c2e286d4:;
				};
			}
		}
		_match_end_1c2e28195:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _1c00ec2d4_typeDecl(_1c00eb03b_unaryEval* _self_) {
	_1c011784e_typeChecker _327517_tc = _1c011784e_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c2e2bebd:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c011ca30_buildPtrFromType(&_327517_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c2e2e641:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c011c414_buildSptrFromType(&_327517_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_1c2e2ce69:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_d.get()._field_Kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c2e2ce14:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _1c00ec4b0_evalData(_1c00eb03b_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1c2e2ced0:;
			{
				jule::Ptr<_1c0109324_TypeKind> _329821_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1c00ea49c_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_329821_prefix;
			}
		}
		else {
			_case_begin_1c2e31632:;
			{
				(*_self_)._field_d=_1c00ea49c_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1c2e31577:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00ec78a_eval(_1c00eb03b_unaryEval* _self_, jule::Ptr<_1be39d7b7_UnaryExpr> _330727_u) {
	(*_self_)._field_u=_330727_u;
	_1c00ec4b0_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_1c00ec2d4_typeDecl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1c0109324_TypeKind> _331813_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c2e35d2e:;
			{
				_1c00eb6bd_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c2e35878:;
			{
				_1c00eb899_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c2e358de:;
			{
				_1c00eba75_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1c2e35955:;
			{
				_1c00ebc51_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c2e359bb:;
			{
				_1c00ebe2c_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c2e35ee9:;
			{
				_1c00ec108_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1c2e35812:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1c2e357ac:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1c2e37d53:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind),jule::Any(_1c0109720_Str(_331813_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1c00cdb45_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_1c2e36318:;
			{
				(*_self_)._field_d.get()._field_Model=static_cast<jule::Any>((*_self_)._field_d.get()._field_Constant);
			}
		}
		_match_end_1c2e37cdc:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00eb03b_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1c00eccc9_binaryEval static__1c00ed390_newPlain(jule::Ptr<_1c00ced00_Eval> _335628_e) {
	return _1c00eccc9_binaryEval{._field_e=_335628_e, };
}



inline _1c00eccc9_binaryEval static__1c00ed6d1_new(jule::Ptr<_1c00ced00_Eval> _336223_e, jule::Ptr<_1d675d511_Token> _336237_op) {
	return _1c00eccc9_binaryEval{._field_e=_336223_e, ._field_op=_336237_op};
}



inline jule::Bool _1c00ed945_checkTypeCompatibility(_1c00eccc9_binaryEval* _self_) {
	return _1c006d5c9_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);
}



inline jule::Bool _1c00edbdc_checkStructCommonOperatorCompatibility(_1c00eccc9_binaryEval* _self_) {
	jule::Ptr<_1be462392_FnIns> _337617_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1c2e3c7d6:;
			{
				_337617_overload=_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1c2e3c84c:;
			{
				_337617_overload=_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c2e3d870:;
			{
				_337617_overload=_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c2e3d8d6:;
			{
				_337617_overload=_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c2e3d94c:;
			{
				_337617_overload=_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c2e3d9b3:;
			{
				_337617_overload=_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c2e3da29:;
			{
				_337617_overload=_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c2e3da90:;
			{
				_337617_overload=_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1c2e3db17:;
			{
				_337617_overload=_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c2e3db7d:;
			{
				_337617_overload=_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1c2e3c6a4:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return false;
			}
		}
		_match_end_1c2e3c52d:;
	};
	if ((_337617_overload == nullptr)) {
		_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1be4614c3_ParamIns> _340817_p = _337617_overload.get()._field_Params[1LL];;
	return _1c006d178_checkAssignType((*_self_)._field_e.get()._field_s, _340817_p.get()._field_Decl.get()._field_Reference,_340817_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1c00cd282_Data> _1c00ede84_evalNil(_1c00eccc9_binaryEval* _self_) {
	if ((!(_1c010a985_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1c0109720_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2e47b21:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1c2e47aaa:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1c2e47a22:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00ee1e8_evalEnum(_1c00eccc9_binaryEval* _self_) {
	jule::Ptr<_1be4736e4_Enum> _343317_enm = _1c010bb73_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2e49cdd:;
			{
				jule::Ptr<_1c0109324_TypeKind> _343721_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_1c010bb73_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_343721_rkind=_1c010bb73_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1c006d5c9_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _343317_enm.get()._field_Kind.get()._field_Kind,_343721_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1c2e49c33:;
	};
	if (((_1c010bb73_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_343317_enm != _1c010bb73_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_343317_enm.get()._field_Ident),jule::Any(_1c0109720_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c2e4e254:;
			{
				if ((!(_1c0048373_IsNum(_1c0109720_Str(_343317_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_343317_enm.get()._field_Ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c2e4e2ba:;
			{
				if (((_1c010b436_Prim(_343317_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1c004810e_IsInt(_1c010e15e_Str(_1c010b436_Prim(_343317_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_343317_enm.get()._field_Ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1c2e4e1dd:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_343317_enm.get()._field_Ident)}));
				return nullptr;
			}
		}
		_match_end_1c2e4e100:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00ee45c_evalTypeEnum(_1c00eccc9_binaryEval* _self_) {
	jule::Ptr<_1be474cde_TypeEnum> _348417_enm = _1c010bdd7_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_1c00ed945_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2e5514a:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1c2e54853:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1be47511e_Str(_348417_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c2e54ec4:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00ee6c1_evalSptr(_1c00eccc9_binaryEval* _self_) {
	if ((!(_1c00ed945_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2e571d5:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1c2e5716e:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c2e56ee8:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00ee935_evalPtr(_1c00eccc9_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1c2e590c7:;
			{
				if ((!(_1c00ed945_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1c2e5913d:;
			{
				if ((_1c010b90e_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1c01165b7_IsUnsafe(_1c010b90e_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				};
				if ((!(_1c01054a7_isPtrArithmeticCompatibleInt((*_self_)._field_r)))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1c2e58857:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c2e58439:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00eeb99_evalArr(_1c00eccc9_binaryEval* _self_) {
	if ((!(_1c00ed945_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2e60265:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1c2e601ee:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c2e5a947:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c00eee0d_evalSlc(_1c00eccc9_binaryEval* _self_) {
	if ((!(_1c00ed945_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2e624a9:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1c2e62443:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c2e622bc:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c0100172_evalFn(_1c00eccc9_binaryEval* _self_) {
	if ((!(_1c00ed945_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2e646ed:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1c2e64687:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c2e64511:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c01003d6_evalStruct(_1c00eccc9_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1c2e65dd6:;
			{
				if ((_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1c2e65e4c:;
			{
				if ((_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1c2e65eb3:;
			{
				if ((_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1c2e665e0:;
			{
				if ((_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2e66667:;
			{
				if ((!(_1c00ed945_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1c2e65952:;
	};
	if ((!(_1c00edbdc_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1c00cd282_Data> _1c010064a_evalTrait(_1c00eccc9_binaryEval* _self_) {
	if ((!(_1c00ed945_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2e70ae4:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1c2e70a7d:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c2e708e6:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c01008ae_evalAny(_1c00eccc9_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2e729d6:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1c2e72266:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1c2e71d48:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c0100b23_evalBool(_1c00eccc9_binaryEval* _self_) {
	if ((!(_1c00ed945_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1c2e74851:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1c2e747da:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(_1c0109720_Str((*_self_)._field_l.get()._field_Kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1c2e74664:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c0100d87_evalStr(_1c00eccc9_binaryEval* _self_) {
	jule::Str _372617_rk = _1c0109720_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_372617_rk != jule::Str("str", 3))) {
		_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_372617_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c2e77a41:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c2e77aa7:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1c2e76963:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1c2e76b94:;
	};
}



inline void _1c0101063_setTypeToGreater(_1c00eccc9_binaryEval* _self_) {
	if (_1c00cdb45_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_1c00cdb45_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1c00cdb45_IsConst((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1c004795a_IsGreater(_1c010b436_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind,_1c010b436_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
	};
}



inline void _1c01012a5_checkModData(_1c00eccc9_binaryEval* _self_, jule::Ptr<_1c00cd282_Data>& _376936_d) {
	if ((!(_1c00cdb45_IsConst(_376936_d.ptr())))) {
		if (((_1c010b436_Prim(_376936_d.get()._field_Kind.ptr()) == nullptr) || (!(_1c004810e_IsInt(_1c010b436_Prim(_376936_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1c0099935_sigAssignable(jule::Str("i64", 3),_376936_d)) {
			_case_begin_1c2e7e8a0:;
			{
				_1be45134d_SetI64(_376936_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1be450b00_AsI64(_376936_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1c00b5d80_unsigAssignable(jule::Str("u64", 3),_376936_d)) {
			_case_begin_1c2e7e581:;
			{
				_1be4515c3_SetU64(_376936_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1be450d64_AsU64(_376936_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1c2e7e51a:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c2e7cda9:;
	};
}



inline void _1c0101481_mod(_1c00eccc9_binaryEval* _self_) {
	_1c01012a5_checkModData(&(*_self_), (*_self_)._field_l);
	_1c01012a5_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1c0101838_numbersAreCompatibile(_1c00eccc9_binaryEval* _self_, jule::Str& _379137_lk, jule::Str& _379147_rk) {
	if ((!(_1c0048373_IsNum(_379147_rk)))) {
		return false;
	};
	if (_1c00cdb45_IsConst((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_379137_lk == jule::Str("f32", 3))) {
		if (_1c00cdb45_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_379147_rk == jule::Str("f32", 3));
	};
	if ((_379137_lk == jule::Str("f64", 3))) {
		if (_1c00cdb45_IsConst((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_379147_rk == jule::Str("f64", 3));
	};
	if (_1c00cdb45_IsConst((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_379137_lk == _379147_rk);
}



inline jule::Ptr<_1c00cd282_Data> _1c0101a9c_evalFloat(_1c00eccc9_binaryEval* _self_) {
	jule::Str _382113_lk = _1c010b436_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _382213_rk = _1c010b436_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1c0101838_numbersAreCompatibile(&(*_self_), _382113_lk,_382213_rk)))) {
		_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382113_lk),jule::Any(_382213_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1c2e87204:;
			{
				if (((!(_1c00cdb45_IsConst((*_self_)._field_l.ptr()))) || (!(_1c00b5eb2_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382113_lk),jule::Any(_382213_rk)}));
					return nullptr;
				};
				if (((!(_1c00cdb45_IsConst((*_self_)._field_r.ptr()))) || (!(_1c00b5eb2_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382113_lk),jule::Any(_382213_rk)}));
					return nullptr;
				};
				_1be45134d_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1be450b00_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_1be4515c3_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1be450d64_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_1c0104d36_isOkForShifting((*_self_)._field_r)))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1c2e87127:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c2e8bb21:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1c2e8babb:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1c2e8c5b1:;
			{
				_1c0101063_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c2e8c627:;
			{
				if ((!(_1c004810e_IsInt(_382213_rk)))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_382113_lk),jule::Any(_382213_rk)}));
					return nullptr;
				};
				_1c0101481_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1c2e8c9e0:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2e8c902:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c0101d11_evalInt(_1c00eccc9_binaryEval* _self_) {
	jule::Str _388513_lk = _1c010b436_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _388613_rk = _1c010b436_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1c2e8c68d:;
			{
				if (((!(_1c004810e_IsInt(_388513_lk))) || (!(_1c004810e_IsInt(_388613_rk))))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_388513_lk),jule::Any(_388613_rk)}));
					return nullptr;
				};
				if ((!(_1c0104d36_isOkForShifting((*_self_)._field_r)))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1c2e91cad:;
	};
	if ((!(_1c0101838_numbersAreCompatibile(&(*_self_), _388513_lk,_388613_rk)))) {
		_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_388513_lk),jule::Any(_388613_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c2e94e37:;
			{
				return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1c2e94dd2:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c2e9571d:;
			{
				_1c0101063_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c2e95784:;
			{
				_1c0101481_mod(&(*_self_));
				_1c0101063_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1c2e95b4c:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind)}));
				return nullptr;
			}
		}
		_match_end_1c2e95a5e:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c0102075_evalPrim(_1c00eccc9_binaryEval* _self_) {
	jule::Ptr<_1c010dceb_Prim> _394413_prim = _1c010b436_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1c0111cbb_IsBool(_394413_prim.ptr())) {
			_case_begin_1c2e98e5d:;
			{
				return _1c0100b23_evalBool(&(*_self_));
			}
		}
		else if (_1c0112030_IsStr(_394413_prim.ptr())) {
			_case_begin_1c2e98ed5:;
			{
				return _1c0100d87_evalStr(&(*_self_));
			}
		}
		_match_end_1c2e98da3:;
	};
	if ((_1c010b436_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c010e15e_Str(_394413_prim.ptr())),jule::Any(_1c0109720_Str((*_self_)._field_r.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1c0048241_IsFloat(_394413_prim.get()._field_Kind)) {
			_case_begin_1c2e9b8bc:;
			{
				return _1c0101a9c_evalFloat(&(*_self_));
			}
		}
		else if (_1c004810e_IsInt(_394413_prim.get()._field_Kind)) {
			_case_begin_1c2e9b23a:;
			{
				return _1c0101d11_evalInt(&(*_self_));
			}
		}
		else {
			_case_begin_1c2e9b1c4:;
			{
				return nullptr;
			}
		}
		_match_end_1c2e9aee8:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1c01022d9_evalOp(_1c00eccc9_binaryEval* _self_) {
	{
		
		if (_1c010a4ac_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1c2e9c219:;
			{
				_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1c010b436_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _1c0112294_IsAny(_1c010b436_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c2e9ce1d:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c2e9cb76;
			}
		}
		else if (((_1c010b436_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _1c0112294_IsAny(_1c010b436_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c2e9cb76:;
			{
				return _1c01008ae_evalAny(&(*_self_));
			}
		}
		else if ((_1c010bdd7_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9cbdc:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c2e9cc53;
			}
		}
		else if ((_1c010bdd7_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9cc53:;
			{
				return _1c00ee45c_evalTypeEnum(&(*_self_));
			}
		}
		else if (_1c010a248_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1c2e9ccb9:;
			{
				return _1c00ede84_evalNil(&(*_self_));
			}
		}
		else if ((_1c010bb73_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9cd30:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c2e9ced9;
			}
		}
		else if ((_1c010bb73_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9ced9:;
			{
				return _1c00ee1e8_evalEnum(&(*_self_));
			}
		}
		else if ((_1c010b69a_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d050:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c2e9d0b6;
			}
		}
		else if ((_1c010b69a_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d0b6:;
			{
				return _1c00ee6c1_evalSptr(&(*_self_));
			}
		}
		else if ((_1c010b90e_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d13d:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c2e9d1b5;
			}
		}
		else if ((_1c010b90e_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d1b5:;
			{
				return _1c00ee935_evalPtr(&(*_self_));
			}
		}
		else if ((_1c010c14b_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d23c:;
			{
				return _1c00eeb99_evalArr(&(*_self_));
			}
		}
		else if ((_1c010c3b0_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d2b4:;
			{
				return _1c00eee0d_evalSlc(&(*_self_));
			}
		}
		else if ((_1c010c624_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d33b:;
			{
				return _1c0100172_evalFn(&(*_self_));
			}
		}
		else if ((_1c010caec_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d3b3:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1c2e9d43a;
			}
		}
		else if ((_1c010caec_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d43a:;
			{
				return _1c010064a_evalTrait(&(*_self_));
			}
		}
		else if ((_1c010c888_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d4b2:;
			{
				return _1c01003d6_evalStruct(&(*_self_));
			}
		}
		else if ((_1c010b436_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c2e9d539:;
			{
				return _1c0102075_evalPrim(&(*_self_));
			}
		}
		else {
			_case_begin_1c2e9bb31:;
			{
				return nullptr;
			}
		}
		_match_end_1c2e9b9dd:;
	};
}



inline void _1c010255e_evalConst(_1c00eccc9_binaryEval* _self_, jule::Ptr<_1c00cd282_Data>& _401933_d) {
	{
		
		if ((_401933_d == nullptr)) {
			_case_begin_1c2eac14c:;
			{
				return;;
			}
		}
		else if ((!(_1c00cdb45_IsConst((*_self_)._field_l.ptr()))) || (!(_1c00cdb45_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_1c2eac7e0:;
			{
				_401933_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1c2eac02b:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1c2eadd85:;
			{
				_401933_d.get()._field_Constant=static__1be44e0a4_NewBool(_1be453bd0_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1c2eaddeb:;
			{
				_401933_d.get()._field_Constant=static__1be44e0a4_NewBool((!(_1be453bd0_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1c2eade62:;
			{
				_401933_d.get()._field_Constant=static__1be44e0a4_NewBool(_1be4538c2_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c2eadec8:;
			{
				_401933_d.get()._field_Constant=static__1be44e0a4_NewBool(_1be4535b4_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1c2eae03e:;
			{
				_401933_d.get()._field_Constant=static__1be44e0a4_NewBool(_1be454609_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1c2eae0a5:;
			{
				_401933_d.get()._field_Constant=static__1be44e0a4_NewBool(_1be453edd_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1c2eae11b:;
			{
				_401933_d.get()._field_Constant=static__1be44e0a4_NewBool(_1be454917_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1c2eae182:;
			{
				_401933_d.get()._field_Constant=static__1be44e0a4_NewBool(_1be4542eb_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c2eae1e8:;
			{
				_1be454c25_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_401933_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c2eae25e:;
			{
				_1be455033_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_401933_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c2eae2c5:;
			{
				_1be455341_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_401933_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c2eae33b:;
			{
				jule::Bool _405617_ok = _1be45564e_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_405617_ok)) && (_1be4510c8_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_401933_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_1c010dceb_Prim> _406121_prim = _1c010b436_Prim(_401933_d.get()._field_Kind.ptr());;
				{
					
					if (_1c0047d9a_IsSigInt(_406121_prim.get()._field_Kind)) {
						_case_begin_1c2ebacb5:;
						{
							_1be45134d_SetI64(_401933_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1be450b00_AsI64(_401933_d.get()._field_Constant.ptr())));
						}
					}
					else if (_1c0047ecc_IsUnsigInt(_406121_prim.get()._field_Kind)) {
						_case_begin_1c2ebad3c:;
						{
							_1be4515c3_SetU64(_401933_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1be450d64_AsU64(_401933_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_1c2ebac0a:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c2eae3b3:;
			{
				jule::Bool _406917_ok = _1be45595c_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_406917_ok)) && (_1be4510c8_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_401933_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1c2eae43a:;
			{
				_1be456078_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_401933_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c2eae4b2:;
			{
				_1be455c6a_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_401933_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c2eae539:;
			{
				_1be456386_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_401933_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1c2eae5b1:;
			{
				_1be456694_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_401933_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1c2eae638:;
			{
				_1be4569a2_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_401933_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_1c2ead604:;
	};
	_1c0106233_applyCastModelByEnum(_401933_d,_1c010bb73_Enum(_401933_d.get()._field_Kind.ptr()));
	jule::Ptr<_1c010dceb_Prim> _409317_prim = _1c010b436_Prim(_401933_d.get()._field_Kind.ptr());;
	if (((_409317_prim == nullptr) || (!(_1c0048373_IsNum(_1c010e15e_Str(_409317_prim.ptr())))))) {
		_401933_d.get()._field_Model=static_cast<jule::Any>(_401933_d.get()._field_Constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_Kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_Kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_Model == (*_self_)._field_l.get()._field_Constant) && ((*_self_)._field_r.get()._field_Model != (*_self_)._field_r.get()._field_Constant))) {
			_401933_d.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			_409317_prim=_1c010b436_Prim(_401933_d.get()._field_Kind.ptr());
		};
	};
	_1c0104110_fitBitsize(_401933_d);
	_1c01064db_castConstByType(_409317_prim.get()._field_Kind,_401933_d);
}



inline void _1c01027d4_checkData(_1c00eccc9_binaryEval* _self_, jule::Ptr<_1c00cd282_Data>& _410933_d) {
	jule::Ptr<_1be462392_FnIns> _411013_f = _1c010c624_Fn(_410933_d.get()._field_Kind.ptr());;
	if ((((_411013_f != nullptr) && (_411013_f.get()._field_Decl != nullptr)) && _1be45edb7_IsMethod(_411013_f.get()._field_Decl.ptr()))) {
		_1c00d030b_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1c01029b0_checkDatas(_1c00eccc9_binaryEval* _self_) {
	_1c01027d4_checkData(&(*_self_), (*_self_)._field_l);
	_1c01027d4_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _1c0102c35_setModel(_1c00eccc9_binaryEval* _self_, jule::Ptr<_1c00cd282_Data>& _412132_d) {
	if (_1c00cdb45_IsConst(_412132_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_Model == (*_self_)._field_l.get()._field_Constant) && ((*_self_)._field_r.get()._field_Model == (*_self_)._field_r.get()._field_Constant))) {
			return;;
		};
	};
	jule::Ptr<_1c00cd282_Data> _412918_l = (*_self_)._field_l;;
	jule::Ptr<_1c00cd282_Data> _412925_r = (*_self_)._field_r;;
	std::tie(_412918_l,_412925_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1c00cde53_GoodOperand(_412918_l.ptr(), _412925_r)))) {
		std::tie(_412918_l,_412925_r) = std::make_tuple(_412925_r,_412918_l);
	};
	_412132_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be457464_BinopExprModel>(_1be457464_BinopExprModel{._field_Left=jule::new_ptr<_1be457277_OperandExprModel>(_1be457277_OperandExprModel{._field_Kind=_412918_l.get()._field_Kind, ._field_Model=_412918_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1be457277_OperandExprModel>(_1be457277_OperandExprModel{._field_Kind=_412925_r.get()._field_Kind, ._field_Model=_412925_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}));
}



inline void _1c0102eaa_postEval(_1c00eccc9_binaryEval* _self_, jule::Ptr<_1c00cd282_Data>& _414732_d) {
	_414732_d.get()._field_Lvalue=false;
	_1c0102c35_setModel(&(*_self_), _414732_d);
}



inline jule::Ptr<_1c00cd282_Data> _1c0103362_solveExplicit(_1c00eccc9_binaryEval* _self_, jule::Ptr<_1c00cd282_Data>& _415237_l, jule::Ptr<_1c00cd282_Data>& _415252_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_415237_l,_415252_r);
	_1c01029b0_checkDatas(&(*_self_));
	jule::Ptr<_1c00cd282_Data> _415717_d = _1c01022d9_evalOp(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_415237_l,_415252_r);
	_1c010255e_evalConst(&(*_self_), _415717_d);
	if ((_415717_d != nullptr)) {
		_415717_d.get()._field_Mutable=true;
		_1c0102eaa_postEval(&(*_self_), _415717_d);
	};
	return _415717_d;
}



inline jule::Ptr<_1c00cd282_Data> _1c0103670_eval(_1c00eccc9_binaryEval* _self_, jule::Ptr<_1be39ecc4_BinopExpr>& _417228_op) {
	if ((_417228_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1c00d030b_pushErr((*_self_)._field_e.ptr(), _417228_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1c00d062a_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c00cd282_Data> _417917_l = _1c00ea49c_evalExprKind((*_self_)._field_e, _417228_op.get()._field_Left.get()._field_Kind);;
	if (((_417917_l == nullptr) || (_417917_l.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1c0109324_TypeKind> _418417_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_417917_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_418417_prefix;
	});;
	jule::Ptr<_1c00cd282_Data> _418717_r = _1c00ea49c_evalExprKind((*_self_)._field_e, _417228_op.get()._field_Right.get()._field_Kind);;
	if (((_418717_r == nullptr) || (_418717_r.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_417228_op.get()._field_Op;
	jule::Ptr<_1c00cd282_Data> _419417_d = _1c0103362_solveExplicit(&(*_self_), _417917_l,_418717_r);;
	if ((((_419417_d != nullptr) && _417917_l.get()._field_IsRune) && _418717_r.get()._field_IsRune)) {
		_419417_d.get()._field_IsRune=true;
	};
	return _419417_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1c00eccc9_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0107ae7_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0108631_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0109720_Str(_1c0109324_TypeKind* _self_) {
	if (_1c010a248_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1c0109ed4_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_1c0108de5_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._1c0108994_Str((*_self_)._field_Kind);
	};
	return _7417_kind;
}



inline jule::Bool _1c0109a2d_Equals(jule::Ptr<_1c0109324_TypeKind> _self_, jule::Ptr<_1c0109324_TypeKind> _9022_other) {
	if (_1c010a248_IsNil(_self_.ptr())) {
		return _1c010a248_IsNil(_9022_other.ptr());
	};
	if (_1c0109ed4_CppLinked(_self_.ptr())) {
		return (_1c0109ed4_CppLinked(_9022_other.ptr()) && (_self_.get()._field_CppIdent == _9022_other.get()._field_CppIdent));
	};
	return _1c0108de5_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1c0108ca2_Equals(_self_.get()._field_Kind, _9022_other);
}



inline jule::Bool _1c0109ed4_CppLinked(_1c0109324_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);
}



inline jule::Bool _1c010a248_IsNil(_1c0109324_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);
}



inline jule::Bool _1c010a4ac_Void(_1c0109324_TypeKind* _self_) {
	jule::Ptr<_1c010dceb_Prim> _11113_prim = _1c010b436_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));
}



inline jule::Bool _1c010a721_Mutable(_1c0109324_TypeKind* _self_) {
	{
		_1c0109324_TypeKind* _11821__self = (&((*_self_)));;
		if ((_1c010c888_Struct(_11821__self) != nullptr)) {
			return _1c010c888_Struct(_11821__self).get()._field_Mutable;
		};
		if ((_1c010caec_Trait(_11821__self) != nullptr)) {
			return _1c010caec_Trait(_11821__self).get()._field_Mutable;
		};
		if ((_1c010b436_Prim(_11821__self) != nullptr)) {
			jule::Ptr<_1c010dceb_Prim> _12721_p = _1c010b436_Prim(_11821__self);;
			return _1c0112294_IsAny(_12721_p.ptr());
		};
		if ((_1c010c14b_Arr(_11821__self) != nullptr)) {
			return _1c010a721_Mutable(_1c010c14b_Arr(_11821__self).get()._field_Elem.ptr());
		};
		return (((_1c010c3b0_Slc(_11821__self) != nullptr) || (_1c010b90e_Ptr(_11821__self) != nullptr)) || (_1c010b69a_Sptr(_11821__self) != nullptr));
	};
}



inline jule::Bool _1c010a985_NilCompatible(_1c0109324_TypeKind* _self_) {
	{
		_1c0109324_TypeKind* _14221__self = (&((*_self_)));;
		jule::Ptr<_1c010dceb_Prim> _14417_prim = _1c010b436_Prim(_14221__self);;
		if (((_14417_prim != nullptr) && _1c0112294_IsAny(_14417_prim.ptr()))) {
			return true;
		};
		return (((((((_1c010a248_IsNil(_14221__self) || (_1c010c624_Fn(_14221__self) != nullptr)) || (_1c010b69a_Sptr(_14221__self) != nullptr)) || (_1c010b90e_Ptr(_14221__self) != nullptr)) || (_1c010caec_Trait(_14221__self) != nullptr)) || (_1c010c3b0_Slc(_14221__self) != nullptr)) || (_1c010cd61_Map(_14221__self) != nullptr)) || (_1c010bdd7_TypeEnum(_14221__self) != nullptr));
	};
}



inline jule::Bool _1c010abe9_PerformsRC(_1c0109324_TypeKind* _self_) {
	{
		_1c0109324_TypeKind* _16321__self = (&((*_self_)));;
		return (((_1c010b69a_Sptr(_16321__self) != nullptr) || (_1c010c3b0_Slc(_16321__self) != nullptr)) || (_1c010caec_Trait(_16321__self) != nullptr));
	};
}



inline jule::Bool _1c010ae5d_SupportsCloning(_1c0109324_TypeKind* _self_) {
	{
		_1c0109324_TypeKind* _17121__self = (&((*_self_)));;
		{
			
			if ((_1c010b436_Prim(_17121__self) != nullptr)) {
				_case_begin_1c30119ba:;
				{
					return (!(_1c0112294_IsAny(_1c010b436_Prim(_17121__self).ptr())));
				}
			}
			else if ((_1c010bb73_Enum(_17121__self) != nullptr)) {
				_case_begin_1c3011a31:;
				{
					return true;
				}
			}
			else if ((_1c010c624_Fn(_17121__self) != nullptr)) {
				_case_begin_1c3011d2d:;
				{
					return true;
				}
			}
			else if ((_1c010b90e_Ptr(_17121__self) != nullptr)) {
				_case_begin_1c3011d94:;
				{
					return true;
				}
			}
			else if ((_1c010c3b0_Slc(_17121__self) != nullptr)) {
				_case_begin_1c3011e0a:;
				{
					return _1c010ae5d_SupportsCloning(_1c010c3b0_Slc(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1c010cd61_Map(_17121__self) != nullptr)) {
				_case_begin_1c3011e71:;
				{
					jule::Ptr<_1c0114593_Map> _18421_m = _1c010cd61_Map(_17121__self);;
					return (_1c010ae5d_SupportsCloning(_18421_m.get()._field_Key.ptr()) && _1c010ae5d_SupportsCloning(_18421_m.get()._field_Val.ptr()));
				}
			}
			else if ((_1c010c14b_Arr(_17121__self) != nullptr)) {
				_case_begin_1c3011ed7:;
				{
					return _1c010ae5d_SupportsCloning(_1c010c14b_Arr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1c010b69a_Sptr(_17121__self) != nullptr)) {
				_case_begin_1c301204d:;
				{
					return _1c010ae5d_SupportsCloning(_1c010b69a_Sptr(_17121__self).get()._field_Elem.ptr());
				}
			}
			else if ((_1c010c888_Struct(_17121__self) != nullptr)) {
				_case_begin_1c30120c5:;
				{
					jule::Ptr<_1be3b359b_StructIns> _19125_s = _1c010c888_Struct(_17121__self);;
					return (((_19125_s.get()._field_Decl != nullptr) && (!(_19125_s.get()._field_Decl.get()._field_CppLinked))) && _1be3782a8_IsDerives(_19125_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1c3011899:;
				{
					return false;
				}
			}
			_match_end_1c3011833:;
		};
	};
}



inline jule::Bool _1c010b1c2_Variadicable(_1c0109324_TypeKind* _self_) {
	{
		_1c0109324_TypeKind* _20421__self = (&((*_self_)));;
		return (_1c010c3b0_Slc(_20421__self) != nullptr);
	};
}



inline jule::Ptr<_1c010dceb_Prim> _1c010b436_Prim(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c010dceb_Prim>>()) {
			_case_begin_1c3019880:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1c010dceb_Prim>();
			}
		}
		else {
			_case_begin_1c3019242:;
			{
				return nullptr;
			}
		}
		_match_end_1c30191dc:;
	};
}



inline jule::Ptr<_1c0112580_Sptr> _1c010b69a_Sptr(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c0112580_Sptr>>()) {
			_case_begin_1c301a573:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1c0112580_Sptr>();
			}
		}
		else {
			_case_begin_1c301a078:;
			{
				return nullptr;
			}
		}
		_match_end_1c301a023:;
	};
}



inline jule::Ptr<_1c0115ae4_Ptr> _1c010b90e_Ptr(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c0115ae4_Ptr>>()) {
			_case_begin_1c301b2dd:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1c0115ae4_Ptr>();
			}
		}
		else {
			_case_begin_1c301ace3:;
			{
				return nullptr;
			}
		}
		_match_end_1c301ac8d:;
	};
}



inline jule::Ptr<_1be4736e4_Enum> _1c010bb73_Enum(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be4736e4_Enum>>()) {
			_case_begin_1c301c036:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1be4736e4_Enum>();
			}
		}
		else {
			_case_begin_1c301ba3b:;
			{
				return nullptr;
			}
		}
		_match_end_1c301b9d6:;
	};
}



inline jule::Ptr<_1be474cde_TypeEnum> _1c010bdd7_TypeEnum(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be474cde_TypeEnum>>()) {
			_case_begin_1c301cca1:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1be474cde_TypeEnum>();
			}
		}
		else {
			_case_begin_1c301c7a6:;
			{
				return nullptr;
			}
		}
		_match_end_1c301c751:;
	};
}



inline jule::Ptr<_1c0115187_Arr> _1c010c14b_Arr(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c0115187_Arr>>()) {
			_case_begin_1c301da1b:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1c0115187_Arr>();
			}
		}
		else {
			_case_begin_1c301d521:;
			{
				return nullptr;
			}
		}
		_match_end_1c301d4bb:;
	};
}



inline jule::Ptr<_1c0112edc_Slc> _1c010c3b0_Slc(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c0112edc_Slc>>()) {
			_case_begin_1c301e786:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1c0112edc_Slc>();
			}
		}
		else {
			_case_begin_1c301e28b:;
			{
				return nullptr;
			}
		}
		_match_end_1c301e236:;
	};
}



inline jule::Ptr<_1be462392_FnIns> _1c010c624_Fn(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be462392_FnIns>>()) {
			_case_begin_1c30204ce:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1be462392_FnIns>();
			}
		}
		else {
			_case_begin_1c301eed4:;
			{
				return nullptr;
			}
		}
		_match_end_1c301ee7e:;
	};
}



inline jule::Ptr<_1be3b359b_StructIns> _1c010c888_Struct(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3b359b_StructIns>>()) {
			_case_begin_1c3021227:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1be3b359b_StructIns>();
			}
		}
		else {
			_case_begin_1c3020c2c:;
			{
				return nullptr;
			}
		}
		_match_end_1c3020bc7:;
	};
}



inline jule::Ptr<_1be47159e_Trait> _1c010caec_Trait(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be47159e_Trait>>()) {
			_case_begin_1c3021e92:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1be47159e_Trait>();
			}
		}
		else {
			_case_begin_1c3021997:;
			{
				return nullptr;
			}
		}
		_match_end_1c3021942:;
	};
}



inline jule::Ptr<_1c0114593_Map> _1c010cd61_Map(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c0114593_Map>>()) {
			_case_begin_1c3022c0c:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1c0114593_Map>();
			}
		}
		else {
			_case_begin_1c3022712:;
			{
				return nullptr;
			}
		}
		_match_end_1c30226ac:;
	};
}



inline jule::Ptr<_1c0113a6a_Tuple> _1c010d0c5_Tup(_1c0109324_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c0113a6a_Tuple>>()) {
			_case_begin_1c3023977:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1c0113a6a_Tuple>();
			}
		}
		else {
			_case_begin_1c302347c:;
			{
				return nullptr;
			}
		}
		_match_end_1c3023427:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c0109324_TypeKind _Src) {
	_Stream << "TypeKind{";
	_Stream << "CppIdent:" << _Src._field_CppIdent << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c010d834_checked(_1c010d47c_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);
}



inline void _1c010da10_removeKind(_1c010d47c_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1c010d47c_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c010e15e_Str(_1c010dceb_Prim* _self_) {
	return (*_self_)._field_Kind;
}



inline jule::Bool _1c010e46c_Equals(jule::Ptr<_1c010dceb_Prim> _self_, jule::Ptr<_1c0109324_TypeKind> _35722_other) {
	jule::Ptr<_1c010dceb_Prim> _35813_prim = _1c010b436_Prim(_35722_other.ptr());;
	if ((_35813_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_Kind == _35813_prim.get()._field_Kind);
}



inline jule::Bool _1c010e8e0_IsConstraint(_1c010dceb_Prim* _self_) {
	return ((((!(_1c0112030_IsStr(&(*_self_)))) && (!(_1c0112294_IsAny(&(*_self_))))) && (!(_1c0111cbb_IsBool(&(*_self_))))) && (!(_1c0048373_IsNum((*_self_)._field_Kind))));
}



inline jule::Bool _1c010eb54_IsI8(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));
}



inline jule::Bool _1c010edb8_IsI16(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));
}



inline jule::Bool _1c011012c_IsI32(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));
}



inline jule::Bool _1c0110391_IsI64(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));
}



inline jule::Bool _1c0110605_IsU8(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));
}



inline jule::Bool _1c0110869_IsU16(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));
}



inline jule::Bool _1c0110acd_IsU32(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));
}



inline jule::Bool _1c0110d42_IsU64(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));
}



inline jule::Bool _1c01110a6_IsF32(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));
}



inline jule::Bool _1c011131a_IsF64(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));
}



inline jule::Bool _1c011157e_IsInt(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));
}



inline jule::Bool _1c01117e3_IsUint(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));
}



inline jule::Bool _1c0111a57_IsUintptr(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1c0111cbb_IsBool(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));
}



inline jule::Bool _1c0112030_IsStr(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));
}



inline jule::Bool _1c0112294_IsAny(_1c010dceb_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1c010dceb_Prim _Src) {
	_Stream << "Prim{";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c01128e3_Str(_1c0112580_Sptr* _self_) {
	return (jule::Str("&", 1) + _1c0109720_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1c0112c01_Equals(jule::Ptr<_1c0112580_Sptr> _self_, jule::Ptr<_1c0109324_TypeKind> _43422_other) {
	jule::Ptr<_1c0112580_Sptr> _43513_sptr = _1c010b69a_Sptr(_43422_other.ptr());;
	if ((_43513_sptr == nullptr)) {
		return false;
	};
	return _1c0109a2d_Equals(_self_.get()._field_Elem, _43513_sptr.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1c0112580_Sptr _Src) {
	_Stream << "Sptr{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c01134e8_Str(_1c0112edc_Slc* _self_) {
	return (jule::Str("[]", 2) + _1c0109720_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1c0113806_Equals(jule::Ptr<_1c0112edc_Slc> _self_, jule::Ptr<_1c0109324_TypeKind> _45322_other) {
	jule::Ptr<_1c0112edc_Slc> _45413_slc = _1c010c3b0_Slc(_45322_other.ptr());;
	if ((_45413_slc == nullptr)) {
		return false;
	};
	return _1c0109a2d_Equals(_self_.get()._field_Elem, _45413_slc.get()._field_Elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1c0112edc_Slc _Src) {
	_Stream << "Slc{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0113dcd_Str(_1c0113a6a_Tuple* _self_) {
	jule::Str _47017_s = jule::Str("(", 1);;
	_47017_s+=_1c0109720_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1c3032601:;
		if (it != expr.end()) {
			jule::Ptr<_1c0109324_TypeKind> &_47216_t = *it;
			{
				_47017_s+=jule::Str(",", 1);
				_47017_s+=_1c0109720_Str(_47216_t.ptr());
			}
			_iter_next_1c3032601:;
			++it;
			goto _iter_begin_1c3032601;
		}
		_iter_end_1c3032601:;
	};
	_47017_s+=jule::Str(")", 1);
	return _47017_s;
}



inline jule::Bool _1c01141db_Equals(jule::Ptr<_1c0113a6a_Tuple> _self_, jule::Ptr<_1c0109324_TypeKind> _48122_other) {
	jule::Ptr<_1c0113a6a_Tuple> _48213_tup = _1c010d0c5_Tup(_48122_other.ptr());;
	if ((_48213_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Types.len() != _48213_tup.get()._field_Types.len())) {
		return false;
	};
	jule::I64 _48917_i = 0LL;;
	for (; (_48917_i < _self_.get()._field_Types.len()); (_48917_i)++) {
		{
			if ((!(_1c0109a2d_Equals(_self_.get()._field_Types[_48917_i], _48213_tup.get()._field_Types[_48917_i])))) {
				return false;
			};
		}
	_iter_next_1c3035bdc:;
	}
	_iter_end_1c3035bdc:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0113a6a_Tuple _Src) {
	_Stream << "Tuple{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0114906_Str(_1c0114593_Map* _self_) {
	jule::Str _50917_s = jule::Str("[", 1);;
	_50917_s+=_1c0109720_Str((*_self_)._field_Key.ptr());
	_50917_s+=jule::Str(":", 1);
	_50917_s+=_1c0109720_Str((*_self_)._field_Val.ptr());
	_50917_s+=jule::Str("]", 1);
	return _50917_s;
}



inline jule::Bool _1c0114c14_Equals(jule::Ptr<_1c0114593_Map> _self_, jule::Ptr<_1c0109324_TypeKind> _51822_other) {
	jule::Ptr<_1c0114593_Map> _51913_map = _1c010cd61_Map(_51822_other.ptr());;
	if ((_51913_map == nullptr)) {
		return false;
	};
	return (_1c0109a2d_Equals(_self_.get()._field_Key, _51913_map.get()._field_Key) && _1c0109a2d_Equals(_self_.get()._field_Val, _51913_map.get()._field_Val));
}







std::ostream &operator<<(std::ostream &_Stream, _1c0114593_Map _Src) {
	_Stream << "Map{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c01154ea_Str(_1c0115187_Arr* _self_) {
	jule::Str _53717_s = jule::Str("[", 1);;
	_53717_s+=_1c0046629_Itoa((*_self_)._field_N);
	_53717_s+=jule::Str("]", 1);
	_53717_s+=_1c0109720_Str((*_self_)._field_Elem.ptr());
	return _53717_s;
}



inline jule::Bool _1c0115808_Equals(jule::Ptr<_1c0115187_Arr> _self_, jule::Ptr<_1c0109324_TypeKind> _54522_other) {
	jule::Ptr<_1c0115187_Arr> _54613_arr = _1c010c14b_Arr(_54522_other.ptr());;
	if ((_54613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_N == _54613_arr.get()._field_N) && _1c0109a2d_Equals(_self_.get()._field_Elem, _54613_arr.get()._field_Elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1c0115187_Arr _Src) {
	_Stream << "Arr{";
	_Stream << "Auto:" << _Src._field_Auto << ", ";
	_Stream << "N:" << _Src._field_N << ", ";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c0115e57_Str(_1c0115ae4_Ptr* _self_) {
	if (_1c01165b7_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1c0109720_Str((*_self_)._field_Elem.ptr()));
}



inline jule::Bool _1c0116265_Equals(jule::Ptr<_1c0115ae4_Ptr> _self_, jule::Ptr<_1c0109324_TypeKind> _56922_other) {
	jule::Ptr<_1c0115ae4_Ptr> _57013_ptr = _1c010b90e_Ptr(_56922_other.ptr());;
	if ((_57013_ptr == nullptr)) {
		return false;
	};
	return _1c0109a2d_Equals(_self_.get()._field_Elem, _57013_ptr.get()._field_Elem);
}



inline jule::Bool _1c01165b7_IsUnsafe(_1c0115ae4_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c0115ae4_Ptr _Src) {
	_Stream << "Ptr{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0116a3a_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1c0118058_pushErr(_1c011784e_typeChecker* _self_, jule::Ptr<_1d675d511_Token> _65226_token, jule::Str _65241_fmt, jule::Slice<jule::Any> _65254_args) {
	_1c00671b6_pushErr((*_self_)._field_s.ptr(), _65226_token,_65241_fmt,jule::Any(_65254_args));
}



inline void _1c0118234_allowBuiltin(_1c011784e_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1c0118410_disallowBuiltin(_1c011784e_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_1c010dceb_Prim> _1c011871d_buildPrim(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3970da_IdentTypeDecl>& _66429_decl) {
	if ((!(_1c0122815_isPrim(_66429_decl.get()._field_Ident)))) {
		_1c0118058_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_66429_decl.get()._field_Generics.len() > 0LL)) {
		_1c0118058_pushErr(&(*_self_), _66429_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_66429_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _1c01222c6_buildPrimType(_66429_decl.get()._field_Ident);
}



inline void _1c30455ae_pushReference(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3b359b_StructIns>& _67840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1c2a0403a_Exist((*_self_)._field_refers.ptr(), _67840_t)) {
		return;;
	};
	_1be465e67_Push((*_self_)._field_refers.ptr(), jule::Any(_67840_t));
}

inline void _1c304864a_pushReference(_1c011784e_typeChecker* _self_, jule::Ptr<_1be47159e_Trait>& _67840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1c304a273_Exist((*_self_)._field_refers.ptr(), _67840_t)) {
		return;;
	};
	_1be465e67_Push((*_self_)._field_refers.ptr(), jule::Any(_67840_t));
}



inline void _1c0118c18_pushReferenceByKind(_1c011784e_typeChecker* _self_, jule::Ptr<_1c0109324_TypeKind>& _68843_k) {
	{
		
		if ((_1c010c888_Struct(_68843_k.ptr()) != nullptr)) {
			_case_begin_1c3044217:;
			{
				jule::Ptr<_1be3b359b_StructIns> _69121_t = _1c010c888_Struct(_68843_k.ptr());;
				_1c30455ae_pushReference(&(*_self_), _69121_t);
			}
		}
		else if ((_1c010caec_Trait(_68843_k.ptr()) != nullptr)) {
			_case_begin_1c304428e:;
			{
				jule::Ptr<_1be47159e_Trait> _69421_t = _1c010caec_Trait(_68843_k.ptr());;
				_1c304864a_pushReference(&(*_self_), _69421_t);
			}
		}
		_match_end_1c30440e6:;
	};
}



inline void _1c01190d1_pushCycleError(_1c011784e_typeChecker* _self_, jule::Any _69929_def1, jule::Any _69940_def2, jule::Str& _69956_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _70113_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70128_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _70128_def };
			
			if (_match_expr.type_is<jule::Ptr<_1c0108631_TypeAlias>>()) {
				_case_begin_1c304d62d:;
				{
					return _70128_def.operator jule::Ptr<_1c0108631_TypeAlias>().get()._field_Ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
				_case_begin_1c304d694:;
				{
					return _70128_def.operator jule::Ptr<_1be387251_Struct>().get()._field_Ident;
				}
			}
			else {
				_case_begin_1c304d496:;
				{
					return jule::Str();
				}
			}
			_match_end_1c304d3b9:;
		};
	});;
	jule::Str _71113_def1Ident = _70113_getIdent(_69929_def1);;
	jule::Str _71213_def2Ident = _70113_getIdent(_69940_def2);;
	jule::Str _71313_refersTo = _1d6435c44_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_71113_def1Ident),jule::Any(_71213_def2Ident)}));;
	(_69956_message).buffer.insert(0, (((_200a79329_Repeat(jule::Str(" ", 1),4LL) + _71313_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1c0119488_checkCrossCycle(_1c011784e_typeChecker* _self_, jule::Any _71730_decl, jule::Str& _71746_message) {
	{
		auto &_match_expr{ _71730_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1c0108631_TypeAlias>>()) {
			_case_begin_1c3050ed2:;
			{
				jule::Ptr<_1c0108631_TypeAlias> _72017_ta = _71730_decl.operator jule::Ptr<_1c0108631_TypeAlias>();;
				{
					auto &expr = _72017_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_1c3051c6e:;
					if (it != expr.end()) {
						jule::Any &_72120_d = *it;
						{
							{
								
								if ((_72120_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1c30526ed:;
									{
										_1c01190d1_pushCycleError(&(*_self_), jule::Any(_72017_ta),jule::Any(_72120_d),_71746_message);
										return false;
									}
								}
								else if ((!(_1c0119488_checkCrossCycle(&(*_self_), jule::Any(_72120_d),_71746_message)))) {
									_case_begin_1c3052775:;
									{
										_1c01190d1_pushCycleError(&(*_self_), jule::Any(_72017_ta),jule::Any(_72120_d),_71746_message);
										return false;
									}
								}
								_match_end_1c30525cc:;
							};
						}
						_iter_next_1c3051c6e:;
						++it;
						goto _iter_begin_1c3051c6e;
					}
					_iter_end_1c3051c6e:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
			_case_begin_1c3051048:;
			{
				jule::Ptr<_1be387251_Struct> _73217_s = _71730_decl.operator jule::Ptr<_1be387251_Struct>();;
				{
					auto &expr = _73217_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_1c3053963:;
					if (it != expr.end()) {
						jule::Ptr<_1be387251_Struct> &_73320_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _73320_d)) {
									_case_begin_1c3054cd8:;
									{
										_1c01190d1_pushCycleError(&(*_self_), jule::Any(_73217_s),jule::Any(_73320_d),_71746_message);
										return false;
									}
								}
								else if ((!(_1c0119488_checkCrossCycle(&(*_self_), jule::Any(_73320_d),_71746_message)))) {
									_case_begin_1c3054d60:;
									{
										_1c01190d1_pushCycleError(&(*_self_), jule::Any(_73217_s),jule::Any(_73320_d),_71746_message);
										return false;
									}
								}
								_match_end_1c3054bb7:;
							};
						}
						_iter_next_1c3053963:;
						++it;
						goto _iter_begin_1c3053963;
					}
					_iter_end_1c3053963:;
				};
			}
		}
		_match_end_1c3050e7c:;
	};
	return true;
}



inline jule::Bool _1c0119840_checkIllegalCycles(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3970da_IdentTypeDecl>& _75138_ident, jule::Any _75165_decl) {
	jule::Bool _75178_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_75178_ok = true;
		return _75178_ok;
	};
	{
		auto &_match_expr{ _75165_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
			_case_begin_1c3055e1b:;
			{
				if (((*_self_)._field_notPlain || _75165_decl.operator jule::Ptr<_1be387251_Struct>().get()._field_CppLinked)) {
					_75178_ok = true;
					return _75178_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0108631_TypeAlias>>()) {
			_case_begin_1c305605e:;
			{
				if (_75165_decl.operator jule::Ptr<_1c0108631_TypeAlias>().get()._field_CppLinked) {
					_75178_ok = true;
					return _75178_ok;
				};
			}
		}
		_match_end_1c3055db6:;
	};
	if ((_75165_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1c0118058_pushErr(&(*_self_), _75138_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_75178_ok = false;
		return _75178_ok;
	};
	jule::Str _77417_message = jule::Str();;
	if ((!(_1c0119488_checkCrossCycle(&(*_self_), jule::Any(_75165_decl),_77417_message)))) {
		jule::Str _77721_errMsg = _77417_message;;
		_77417_message=jule::Str();
		_1c01190d1_pushCycleError(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_75165_decl),_77417_message);
		_77721_errMsg=(_77721_errMsg + _77417_message);
		_1c0118058_pushErr(&(*_self_), _75138_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_77721_errMsg)}));
		_75178_ok = false;
		return _75178_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1c0108631_TypeAlias>>()) {
			_case_begin_1c305b262:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_75165_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
			_case_begin_1c305b32d:;
			{
				{
					auto &_match_expr{ _75165_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
						_case_begin_1c305ba7b:;
						{
							jule::Ptr<_1be387251_Struct> _79325_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1be387251_Struct>();;
							_79325_s.get()._field_Depends = jule::alloc_for_append(_79325_s.get()._field_Depends,1);_79325_s.get()._field_Depends.__push(_75165_decl.operator jule::Ptr<_1be387251_Struct>());;
						}
					}
					_match_end_1c305b98d:;
				};
			}
		}
		_match_end_1c305b20c:;
	};
	_75178_ok = true;
	return _75178_ok;
}



inline jule::Trait<_1c0108de5_Kind> _1c0119be7_fromTypeAlias(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3970da_IdentTypeDecl>& _80133_decl, jule::Ptr<_1c0108631_TypeAlias>& _80160_ta) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _80160_ta.get()._field_Public,_80160_ta.get()._field_Token)))) {
		_1c0118058_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
		return nullptr;
	};
	_80160_ta.get()._field_Used=true;
	if ((_80133_decl.get()._field_Generics.len() > 0LL)) {
		_1c0118058_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1c30613ee:;
			if (it != expr.end()) {
				jule::Ptr<_1c0108631_TypeAlias> _81820_bg = *it;
				{
					if (((_81820_bg == _80160_ta) || ((_80160_ta.get()._field_Kind.get()._field_Kind != nullptr) && _1c0109a2d_Equals(_80160_ta.get()._field_Kind.get()._field_Kind, _81820_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1c30613ee;
					};
				}
				_iter_next_1c30613ee:;
				++it;
				goto _iter_begin_1c30613ee;
			}
			_iter_end_1c30613ee:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1c3063225:;
			if (it != expr.end()) {
				jule::Ptr<_1c0108631_TypeAlias> _82920_bg = *it;
				{
					if ((_82920_bg == _80160_ta)) {
						_1c0118058_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
						return nullptr;
					};
					{
						auto &expr = _80160_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1c3063bb5:;
						if (it != expr.end()) {
							jule::Ptr<_1c0108631_TypeAlias> _83424_dg = *it;
							{
								if ((_82920_bg == _83424_dg)) {
									_1c0118058_pushErr(&(*_self_), _80133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_80133_decl.get()._field_Ident)}));
									return nullptr;
								};
							}
							_iter_next_1c3063bb5:;
							++it;
							goto _iter_begin_1c3063bb5;
						}
						_iter_end_1c3063bb5:;
					};
				}
				_iter_next_1c3063225:;
				++it;
				goto _iter_begin_1c3063225;
			}
			_iter_end_1c3063225:;
		};
	};
	jule::Bool _84317_ok = _1c0119840_checkIllegalCycles(&(*_self_), _80133_decl,jule::Any(_80160_ta));;
	if ((!(_84317_ok))) {
		return nullptr;
	};
	_84317_ok=_1c007127a_checkTypeAliasDeclKind((*_self_)._field_s, _80160_ta,(*_self_)._field_lookup);
	if ((!(_84317_ok))) {
		return nullptr;
	};
	if ((_80160_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_80160_ta);;
	};
	jule::Ptr<_1c0109324_TypeKind> _86017_tk = jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Generic=_80160_ta.get()._field_Generic, ._field_Kind=_80160_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1c0118c18_pushReferenceByKind(&(*_self_), _86017_tk);
	if (_80160_ta.get()._field_CppLinked) {
		_86017_tk.get()._field_CppIdent=_80160_ta.get()._field_Ident;
	} else {
		_86017_tk.get()._field_CppIdent=_80160_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1c0108de5_Kind>(_86017_tk, 5);
}



inline jule::Ptr<_1be4736e4_Enum> _1c011a09e_fromEnum(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3970da_IdentTypeDecl>& _87328_decl, jule::Ptr<_1be4736e4_Enum>& _87355_e) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _87355_e.get()._field_Public,_87355_e.get()._field_Token)))) {
		_1c0118058_pushErr(&(*_self_), _87328_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87328_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_87328_decl.get()._field_Generics.len() > 0LL)) {
		_1c0118058_pushErr(&(*_self_), _87328_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87328_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _87355_e;
}



inline jule::Ptr<_1be474cde_TypeEnum> _1c011a456_fromTypeEnum(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3970da_IdentTypeDecl>& _88532_decl, jule::Ptr<_1be474cde_TypeEnum>& _88559_e) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _88559_e.get()._field_Public,_88559_e.get()._field_Token)))) {
		_1c0118058_pushErr(&(*_self_), _88532_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88532_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_88532_decl.get()._field_Generics.len() > 0LL)) {
		_1c0118058_pushErr(&(*_self_), _88532_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88532_decl.get()._field_Ident)}));
		return nullptr;
	};
	return _88559_e;
}



inline jule::Ptr<_1be47159e_Trait> _1c011a80d_fromTrait(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3970da_IdentTypeDecl>& _89729_decl, jule::Ptr<_1be47159e_Trait>& _89756_t) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _89756_t.get()._field_Public,_89756_t.get()._field_Token)))) {
		_1c0118058_pushErr(&(*_self_), _89729_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89729_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((_89729_decl.get()._field_Generics.len() > 0LL)) {
		_1c0118058_pushErr(&(*_self_), _89729_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89729_decl.get()._field_Ident)}));
		return nullptr;
	};
	_1c304864a_pushReference(&(*_self_), _89756_t);
	return _89756_t;
}



inline jule::Bool _1c011abb5_checkStructIns(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3b359b_StructIns>& _91038_ins, jule::Ptr<_1d675d511_Token>& _91060_errorToken) {
	jule::Bool _91082_ok = jule::Bool();
	if (_91038_ins.get()._field_Checked) {
		_91082_ok = true;
		return _91082_ok;
	};
	_91038_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _91038_ins.get()._field_Decl))) {
		_91082_ok = true;
		return _91082_ok;
	};
	if ((!(_1c007a40a_precheckStructIns((*_self_)._field_s, _91038_ins,_91060_errorToken)))) {
		_91082_ok = false;
		return _91082_ok;
	};
	if ((_91038_ins.get()._field_Generics.len() > 0LL)) {
		_1c007ad78_checkStructInsOperators((*_self_)._field_s, _91038_ins);
		_1c007a680_checkStructIns((*_self_)._field_s, _91038_ins);
	};
	_91082_ok = true;
	return _91082_ok;
}



inline void _1c011ae5c_appendUsedStructReference(_1c011784e_typeChecker* _self_, jule::Ptr<_1be387251_Struct>& _93149_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1be387251_Struct>>()) {
			_case_begin_1c3075028:;
			{
				jule::Ptr<_1be387251_Struct> _93721_refS = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1be387251_Struct>();;
				if ((!(_1be37c059_IsUses(_93721_refS.ptr(), _93149_s)))) {
					_93721_refS.get()._field_Uses = jule::alloc_for_append(_93721_refS.get()._field_Uses,1);_93721_refS.get()._field_Uses.__push(_93149_s);;
				};
			}
		}
		_match_end_1c3074c3c:;
	};
}



inline jule::Ptr<_1be3b359b_StructIns> _1c011b325_buildStructInstance(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3970da_IdentTypeDecl>& _94443_decl, jule::Ptr<_1be387251_Struct>& _94470_s) {
	jule::Ptr<_1c0116a3a_referencer> _94617_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1c0108631_TypeAlias>> _94817_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1c004b5b8_scopeChecker>>()) {
				_case_begin_1c3077c0c:;
				{
					jule::Ptr<_1c004b5b8_scopeChecker> _95525_sc = (*_self_)._field_lookup.operator jule::Ptr<_1c004b5b8_scopeChecker>();;
					jule::Ptr<_1c004b5b8_scopeChecker> _95625_hard = _1c004cac5_getHardRoot(_95525_sc);;
					if (((_95625_hard.get()._field_owner.get()._field_Owner == nullptr) || (_95625_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _94470_s))) {
						goto _match_end_1c3077ba7;
					};
					jule::I64 _96021_n = (_95625_hard.get()._field_owner.get()._field_Generics.len() + _95625_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_95625_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_96021_n);
				}
			}
			_match_end_1c3077ba7:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_1c0124e55_Lookup> _97017_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_1be3b359b_StructIns> _97417_ins = _1be36e656_instance(_94470_s);;
	_97417_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1c0107ae7_InsGeneric>>::alloc(0LL,_94443_decl.get()._field_Generics.len());
	{
		auto &expr = _94443_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c307bc99:;
		if (it != expr.end()) {
			jule::Ptr<_1be396a24_TypeDecl> _97621_g = *it;
			{
				jule::Ptr<_1c0109324_TypeKind> _97721_kind = _1c011e7ac_build(&(*_self_), _97621_g.get()._field_Kind);;
				if ((_97721_kind == nullptr)) {
					return nullptr;
				};
				_97417_ins.get()._field_Generics = jule::alloc_for_append(_97417_ins.get()._field_Generics,1);_97417_ins.get()._field_Generics.__push(jule::new_ptr<_1c0107ae7_InsGeneric>(_1c0107ae7_InsGeneric{._field_Kind=_97721_kind, }));;
			}
			_iter_next_1c307bc99:;
			++it;
			goto _iter_begin_1c307bc99;
		}
		_iter_end_1c307bc99:;
	};
	(*_self_)._field_lookup=_97017_lookup;
	(*_self_)._field_bannedGenerics=_94817_bannedGenerics;
	(*_self_)._field_referencer=_94617_referencer;
	return _97417_ins;
}



inline jule::Ptr<_1be3b359b_StructIns> _1c011b6cc_fromStruct(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3970da_IdentTypeDecl>& _99234_decl, jule::Ptr<_1be387251_Struct>& _99261_s) {
	if ((!(_1c006788c_isAccessibleDefine((*_self_)._field_s.ptr(), _99261_s.get()._field_Public,_99261_s.get()._field_Token)))) {
		_1c0118058_pushErr(&(*_self_), _99234_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_99234_decl.get()._field_Ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_99234_decl.get()._field_Generics.len() > 0LL)) {
			_1c0118058_pushErr(&(*_self_), _99234_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1be3b359b_StructIns>(_1be3b359b_StructIns{._field_Decl=_99261_s, });
	};
	jule::Bool _101017_ok = ((*_self_)._field_notPlain || _1c0119840_checkIllegalCycles(&(*_self_), _99234_decl,jule::Any(_99261_s)));;
	if ((!(_101017_ok))) {
		return nullptr;
	};
	_1c011ae5c_appendUsedStructReference(&(*_self_), _99261_s);
	jule::Ptr<_1be3b359b_StructIns> _101617_ins = _1c011b325_buildStructInstance(&(*_self_), _99234_decl,_99261_s);;
	if ((_101617_ins == nullptr)) {
		return nullptr;
	};
	_101017_ok=_1c006855d_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_101617_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_101617_ins.get()._field_Generics.len()),_99234_decl.get()._field_Token);
	if ((!(_101017_ok))) {
		return nullptr;
	};
	jule::Ptr<_1be3b359b_StructIns> _102617_existInstance = _1be3738be_appendInstance(_99261_s.ptr(), _101617_ins);;
	if ((_102617_existInstance != nullptr)) {
		if ((!(_1c006e92c_checkConstraintsStruct((*_self_)._field_s, _101617_ins,_99234_decl.get()._field_Token,_102617_existInstance)))) {
			return nullptr;
		};
		_1c30455ae_pushReference(&(*_self_), _102617_existInstance);
		return _102617_existInstance;
	};
	if ((!(_1c011abb5_checkStructIns(&(*_self_), _101617_ins,_99234_decl.get()._field_Token)))) {
		return nullptr;
	};
	_1c30455ae_pushReference(&(*_self_), _101617_ins);
	return _101617_ins;
}



inline jule::Trait<_1c0108de5_Kind> _1c011b9da_getDef(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3970da_IdentTypeDecl>& _105030_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1c3087128:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4108_GenericDecl> _105116_g = *it;
			{
				if ((_105116_g.get()._field_Ident == _105030_decl.get()._field_Ident)) {
					return jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(_105116_g.get()._field_Ident), 6);
				};
			}
			_iter_next_1c3087128:;
			++it;
			goto _iter_begin_1c3087128;
		}
		_iter_end_1c3087128:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1c308706d:;
		if (it != expr.end()) {
			jule::Ptr<_1c0108631_TypeAlias> _105721_g = *it;
			{
				if ((_105721_g.get()._field_Ident == _105030_decl.get()._field_Ident)) {
					if ((_105030_decl.get()._field_Generics.len() > 0LL)) {
						_1c0118058_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_105030_decl.get()._field_Ident)}));
						return nullptr;
					};
					jule::Ptr<_1be3b359b_StructIns> _106325_st = _1c010c888_Struct(_105721_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_106325_st != nullptr)) {
						jule::Bool _106525_ok = _1c0119840_checkIllegalCycles(&(*_self_), _105030_decl,jule::Any(_106325_st.get()._field_Decl));;
						if ((!(_106525_ok))) {
							return nullptr;
						};
					};
					return _105721_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;
				};
			}
			_iter_next_1c308706d:;
			++it;
			goto _iter_begin_1c308706d;
		}
		_iter_end_1c308706d:;
	};
	if ((!(_105030_decl.get()._field_CppLinked))) {
		jule::Ptr<_1be4736e4_Enum> _107521_e = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c0124a04_FindEnum((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_107521_e != nullptr)) {
			return jule::Trait<_1c0108de5_Kind>(_1c011a09e_fromEnum(&(*_self_), _105030_decl,_107521_e), 3);
		};
		jule::Ptr<_1be474cde_TypeEnum> _108021_te = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c0124d12_FindTypeEnum((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_108021_te != nullptr)) {
			return jule::Trait<_1c0108de5_Kind>(_1c011a456_fromTypeEnum(&(*_self_), _105030_decl,_108021_te), 4);
		};
		jule::Ptr<_1be47159e_Trait> _108521_t = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c01246e6_FindTrait((*_self_)._field_lookup, _105030_decl.get()._field_Ident);;
		if ((_108521_t != nullptr)) {
			return jule::Trait<_1c0108de5_Kind>(_1c011a80d_fromTrait(&(*_self_), _105030_decl,_108521_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1c0118058_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be387251_Struct> _109417_s = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c0124031_FindStruct((*_self_)._field_lookup, _105030_decl.get()._field_Ident,_105030_decl.get()._field_CppLinked);;
	if ((_109417_s != nullptr)) {
		return jule::Trait<_1c0108de5_Kind>(_1c011b6cc_fromStruct(&(*_self_), _105030_decl,_109417_s), 0);
	};
	jule::Ptr<_1c0108631_TypeAlias> _109917_ta = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c0123b79_FindTypeAlias((*_self_)._field_lookup, _105030_decl.get()._field_Ident,_105030_decl.get()._field_CppLinked);;
	if (((_109917_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_109917_ta=_1bcc6e332_findBuiltinTypeAlias(_105030_decl.get()._field_Ident);
	};
	if ((_109917_ta != nullptr)) {
		return _1c0119be7_fromTypeAlias(&(*_self_), _105030_decl,_109917_ta);
	};
	_1c0118058_pushErr(&(*_self_), _105030_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_105030_decl.get()._field_Ident)}));
	return nullptr;
}



inline jule::Trait<_1c0108de5_Kind> _1c011bce8_buildIdent(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3970da_IdentTypeDecl> _111133_decl) {
	{
		
		if (_1c0122815_isPrim(_111133_decl.get()._field_Ident)) {
			_case_begin_1c3093761:;
			{
				return jule::Trait<_1c0108de5_Kind>(_1c011871d_buildPrim(&(*_self_), _111133_decl), 6);
			}
		}
		else {
			_case_begin_1c3092ee1:;
			{
				return _1c011b9da_getDef(&(*_self_), _111133_decl);
			}
		}
		_match_end_1c3092e14:;
	};
}



inline jule::Trait<_1c0108de5_Kind> _1c011c106_buildSubIdent(_1c011784e_typeChecker* _self_, jule::Ptr<_1be397739_SubIdentTypeDecl> _112036_decl) {
	jule::Trait<_1c0108de5_Kind> _112117_ident = _1c011bce8_buildIdent(&(*_self_), _112036_decl.get()._field_Idents[0LL]);;
	if ((_112117_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _112117_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1be474cde_TypeEnum>>()) {
			_case_begin_1c3095246:;
			{
				goto _match_end_1c3095169;
			}
		}
		else {
			_case_begin_1c3094e38:;
			{
				_1c0118058_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c3095169:;
	};
	jule::Ptr<_1be474cde_TypeEnum> _113317_t = _112117_ident.operator jule::Ptr<_1be474cde_TypeEnum>();;
	jule::Slice<jule::Ptr<_1be3970da_IdentTypeDecl>> _113417_idents = _112036_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _113417_idents;
		auto it = expr.begin();
		_iter_begin_1c3096577:;
		if (it != expr.end()) {
			jule::I64 _113513_i = it - expr.begin();
			jule::Ptr<_1be3970da_IdentTypeDecl> _113516_id = *it;
			{
				jule::Ptr<_1be474728_TypeEnumItem> _113621_item = _1be475828_FindItem(_113317_t.ptr(), _113516_id.get()._field_Ident);;
				if ((_113621_item == nullptr)) {
					_1c0118058_pushErr(&(*_self_), _113516_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_113317_t.get()._field_Ident),jule::Any(_113516_id.get()._field_Ident)}));
					return nullptr;
				};
				if (((_113417_idents.len() - _113513_i) == 1LL)) {
					_1c0118c18_pushReferenceByKind(&(*_self_), _113621_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_1c0108de5_Kind>(_113621_item.get()._field_Kind.get()._field_Kind, 5);
				};
				_113317_t=_1c010bdd7_TypeEnum(_113621_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_113317_t == nullptr)) {
					_1c0118058_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1c3096577:;
			++it;
			_113513_i++;
			goto _iter_begin_1c3096577;
		}
		_iter_end_1c3096577:;
	};
	return nullptr;
}



inline jule::Ptr<_1c0112580_Sptr> _1c011c414_buildSptrFromType(_1c011784e_typeChecker* _self_, jule::Ptr<_1c0109324_TypeKind>& _115541_elem) {
	{
		
		if ((_115541_elem == nullptr)) {
			_case_begin_1c3097039:;
			{
				return nullptr;
			}
		}
		else if ((_1c010c888_Struct(_115541_elem.ptr()) != nullptr)) {
			_case_begin_1c30970b1:;
			{
				jule::Ptr<_1be3b359b_StructIns> _116117_s = _1c010c888_Struct(_115541_elem.ptr());;
				if (((_116117_s.get()._field_Decl != nullptr) && _116117_s.get()._field_Decl.get()._field_CppLinked)) {
					_1c0118058_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1c010c14b_Arr(_115541_elem.ptr()) != nullptr) && _1c010c14b_Arr(_115541_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c3097138:;
			{
				_1c0118058_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c3096e07:;
	};
	return jule::new_ptr<_1c0112580_Sptr>(_1c0112580_Sptr{._field_Elem=_115541_elem});
}



inline jule::Ptr<_1c0112580_Sptr> _1c011c722_buildSptr(_1c011784e_typeChecker* _self_, jule::Ptr<_1be397dcc_SptrTypeDecl> _117532_decl) {
	jule::Bool _117613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_117613_notPlain;
	});;
	jule::Ptr<_1c0109324_TypeKind> _118017_elem = _1c011eaba_checkDecl(&(*_self_), _117532_decl.get()._field_Elem);;
	return _1c011c414_buildSptrFromType(&(*_self_), _118017_elem);
}



inline jule::Ptr<_1c0115ae4_Ptr> _1c011ca30_buildPtrFromType(_1c011784e_typeChecker* _self_, jule::Ptr<_1c0109324_TypeKind>& _118440_elem) {
	{
		
		if ((_118440_elem == nullptr)) {
			_case_begin_1c30a0691:;
			{
				return nullptr;
			}
		}
		else if (((_1c010c14b_Arr(_118440_elem.ptr()) != nullptr) && _1c010c14b_Arr(_118440_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c30a0718:;
			{
				_1c0118058_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1c0115ae4_Ptr>();
			}
		}
		_match_end_1c30a0570:;
	};
	return jule::new_ptr<_1c0115ae4_Ptr>(_1c0115ae4_Ptr{._field_Elem=_118440_elem});
}



inline jule::Ptr<_1c0115ae4_Ptr> _1c011cd3d_buildPtr(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3988a0_PtrTypeDecl> _119931_decl) {
	jule::Bool _120013_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_120013_notPlain;
	});;
	jule::Ptr<_1c0109324_TypeKind> _120417_elem = nullptr;;
	if ((!(_1be398c02_IsUnsafe(_119931_decl.ptr())))) {
		_120417_elem=_1c011eaba_checkDecl(&(*_self_), _119931_decl.get()._field_Elem);
		return _1c011ca30_buildPtrFromType(&(*_self_), _120417_elem);
	};
	return jule::new_ptr<_1c0115ae4_Ptr>(_1c0115ae4_Ptr{._field_Elem=_120417_elem});
}



inline jule::Ptr<_1c0112edc_Slc> _1c011d14b_buildSlc(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3982c8_SlcTypeDecl> _121631_decl) {
	jule::Bool _121713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_121713_notPlain;
	});;
	jule::Ptr<_1c0109324_TypeKind> _122117_elem = _1c011eaba_checkDecl(&(*_self_), _121631_decl.get()._field_Elem);;
	{
		
		if ((_122117_elem == nullptr)) {
			_case_begin_1c30a593d:;
			{
				return nullptr;
			}
		}
		else if (((_1c010c14b_Arr(_122117_elem.ptr()) != nullptr) && _1c010c14b_Arr(_122117_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c30a59b5:;
			{
				_1c0118058_pushErr(&(*_self_), _121631_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c30a5883:;
	};
	return jule::new_ptr<_1c0112edc_Slc>(_1c0112edc_Slc{._field_Elem=_122117_elem});
}



inline jule::Ptr<_1c0115187_Arr> _1c011d459_buildArr(_1c011784e_typeChecker* _self_, jule::Ptr<_1be399032_ArrTypeDecl> _123731_decl) {
	jule::Bool _123813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_123813_notPlain;
	});;
	jule::I64 _124217_n = 0LL;;
	if ((!(_1be39940b_AutoSized(_123731_decl.ptr())))) {
		jule::Ptr<_1c00cd282_Data> _124521_size = _1c00eaab8_evalExpr(_1c006cb7d_eval((*_self_)._field_s, (*_self_)._field_lookup), _123731_decl.get()._field_Size);;
		if ((_124521_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1c00cdb45_IsConst(_124521_size.ptr())))) {
			_1c0118058_pushErr(&(*_self_), _123731_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1c010b436_Prim(_124521_size.get()._field_Kind.ptr()) == nullptr) || (!(_1c004810e_IsInt(_1c010b436_Prim(_124521_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1c0118058_pushErr(&(*_self_), _123731_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_124217_n=static_cast<jule::I64>(static_cast<jule::I64>(_1be450b00_AsI64(_124521_size.get()._field_Constant.ptr())));
		if ((_124217_n < 0LL)) {
			_1c0118058_pushErr(&(*_self_), _123731_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1be5580d1_BitSize != 64LL) && (static_cast<jule::F64>(_124217_n) > _1be90ed06_Max(jule::Str("int", 3))))) {
			_1c0118058_pushErr(&(*_self_), _123731_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1c0109324_TypeKind> _126817_elem = _1c011eaba_checkDecl(&(*_self_), _123731_decl.get()._field_Elem);;
	{
		
		if ((_126817_elem == nullptr)) {
			_case_begin_1c30ae5e5:;
			{
				return nullptr;
			}
		}
		else if (((_1c010c14b_Arr(_126817_elem.ptr()) != nullptr) && _1c010c14b_Arr(_126817_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c30ae65b:;
			{
				_1c0118058_pushErr(&(*_self_), _123731_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c30ae370:;
	};
	return jule::new_ptr<_1c0115187_Arr>(_1c0115187_Arr{._field_Auto=_1be39940b_AutoSized(_123731_decl.ptr()), ._field_N=_124217_n, ._field_Elem=_126817_elem});
}



inline jule::Ptr<_1c0114593_Map> _1c011d767_buildMap(_1c011784e_typeChecker* _self_, jule::Ptr<_1be399780_MapTypeDecl> _128631_decl) {
	jule::Bool _128713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_128713_notPlain;
	});;
	jule::Ptr<_1c0109324_TypeKind> _129117_key = _1c011eaba_checkDecl(&(*_self_), _128631_decl.get()._field_Key);;
	if ((_129117_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c0109324_TypeKind> _129617_val = _1c011eaba_checkDecl(&(*_self_), _128631_decl.get()._field_Val);;
	if ((_129617_val == nullptr)) {
		return nullptr;
	};
	if ((_1c010bb73_Enum(_129617_val.ptr()) != nullptr)) {
		_1c0118058_pushErr(&(*_self_), _128631_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1c0114593_Map>(_1c0114593_Map{._field_Key=_129117_key, ._field_Val=_129617_val});
}



inline jule::Ptr<_1c0113a6a_Tuple> _1c011da75_buildTuple(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3985b4_TupleTypeDecl> _131033_decl) {
	jule::Slice<jule::Ptr<_1c0109324_TypeKind>> _131117_types = jule::Slice<jule::Ptr<_1c0109324_TypeKind>>::alloc(0LL,_131033_decl.get()._field_Types.len());;
	{
		auto &expr = _131033_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1c30b4c9e:;
		if (it != expr.end()) {
			jule::Ptr<_1be396a24_TypeDecl> _131221_t = *it;
			{
				jule::Ptr<_1c0109324_TypeKind> _131321_kind = _1c011eaba_checkDecl(&(*_self_), _131221_t);;
				if ((_131321_kind == nullptr)) {
					return nullptr;
				};
				_131117_types = jule::alloc_for_append(_131117_types,1);_131117_types.__push(_131321_kind);;
			}
			_iter_next_1c30b4c9e:;
			++it;
			goto _iter_begin_1c30b4c9e;
		}
		_iter_end_1c30b4c9e:;
	};
	return jule::new_ptr<_1c0113a6a_Tuple>(_1c0113a6a_Tuple{._field_Types=_131117_types});
}



inline jule::Bool _1c011dd83_checkFnTypes(_1c011784e_typeChecker* _self_, jule::Ptr<_1be462392_FnIns>& _132336_f) {
	jule::Bool _132349_ok = jule::Bool();
	{
		auto &expr = _132336_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c30b6ba2:;
		if (it != expr.end()) {
			jule::Ptr<_1be4614c3_ParamIns> _132421_p = *it;
			{
				_132421_p.get()._field_Kind=_1c011e7ac_build(&(*_self_), _132421_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				_132349_ok=(_132421_p.get()._field_Kind != nullptr);
				if ((!(_132349_ok))) {
					_132349_ok = false;
					return _132349_ok;
				};
				_1c0070059_checkFnParamKind((*_self_)._field_s, _132421_p);
			}
			_iter_next_1c30b6ba2:;
			++it;
			goto _iter_begin_1c30b6ba2;
		}
		_iter_end_1c30b6ba2:;
	};
	if ((!(_1be45eb53_IsVoid(_132336_f.get()._field_Decl.ptr())))) {
		_132336_f.get()._field_Result=_1c011e7ac_build(&(*_self_), _132336_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		_132349_ok = (_132336_f.get()._field_Result != nullptr);
		return _132349_ok;
	};
	_132349_ok = true;
	return _132349_ok;
}



inline jule::Ptr<_1be462392_FnIns> _1c011e191_buildFn(_1c011784e_typeChecker* _self_, jule::Ptr<_1be3a8838_FnDecl> _134130_decl) {
	if ((_134130_decl.get()._field_Generics.len() > 0LL)) {
		_1c0118058_pushErr(&(*_self_), _134130_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be45e6e1_Fn> _134717_f = _1be4684ca_buildFn(_134130_decl);;
	jule::I64 _134913_n = (*_self_)._field_s.get()._field_errors.len();;
	_1c0076e73_checkFnDecl((*_self_)._field_s, _134717_f);
	if ((_134913_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;
	};
	jule::Ptr<_1be462392_FnIns> _135517_ins = _1be460acc_instanceForce(_134717_f);;
	_135517_ins.get()._field_Anon=true;
	jule::Bool _135813_ok = _1c011dd83_checkFnTypes(&(*_self_), _135517_ins);;
	if ((!(_135813_ok))) {
		return nullptr;
	};
	return _135517_ins;
}



inline jule::Trait<_1c0108de5_Kind> _1c011e49e_buildByNamespace(_1c011784e_typeChecker* _self_, jule::Ptr<_1be397ae1_NamespaceTypeDecl> _136639_decl) {
	jule::Str _136713_path = _1c0121e1e_buildLinkPathByTokens(_136639_decl.get()._field_Idents);;
	jule::Ptr<_1c005b3a8_ImportInfo> _136817_imp = _1c0124e55_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1c012341a_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1c005b3a8_ImportInfo>)>([=](jule::Ptr<_1c005b3a8_ImportInfo> _136852_imp) mutable -> jule::Bool {
		if (((_136639_decl.get()._field_Idents.len() == 1LL) && (_136852_imp.get()._field_Alias == _136713_path))) {
			return true;
		};
		return ((_136852_imp.get()._field_LinkPath == _136713_path) && _1c005e015_isAccessibleViaSelection(_136852_imp.ptr()));
	}));;
	if (((_136817_imp == nullptr) || (!(_1c005d971_isLookupable(_136817_imp.ptr(), jule::Str("self", 4)))))) {
		_1c0118058_pushErr(&(*_self_), _136639_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_136713_path)}));
		return nullptr;
	};
	_1c0118410_disallowBuiltin(&(*_self_));
	jule::Trait<_1c0124e55_Lookup> _138117_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1c0124e55_Lookup>(_136817_imp, 1);
	jule::Ptr<_1c0109324_TypeKind> _138317_kind = _1c011eaba_checkDecl(&(*_self_), _136639_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_138117_lookup;
	_1c0118234_allowBuiltin(&(*_self_));
	return jule::Trait<_1c0108de5_Kind>(_138317_kind, 5);
}



inline jule::Ptr<_1c0109324_TypeKind> _1c011e7ac_build(_1c011784e_typeChecker* _self_, jule::Any& _138929_declKind) {
	jule::Trait<_1c0108de5_Kind> _139017_kind = nullptr;;
	{
		auto &_match_expr{ _138929_declKind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3970da_IdentTypeDecl>>()) {
			_case_begin_1c30c5551:;
			{
				jule::Trait<_1c0108de5_Kind> _139321_t = _1c011bce8_buildIdent(&(*_self_), _138929_declKind.operator jule::Ptr<_1be3970da_IdentTypeDecl>());;
				if ((_139321_t != nullptr)) {
					_139017_kind=_139321_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be397739_SubIdentTypeDecl>>()) {
			_case_begin_1c30c5dd1:;
			{
				jule::Trait<_1c0108de5_Kind> _139821_t = _1c011c106_buildSubIdent(&(*_self_), _138929_declKind.operator jule::Ptr<_1be397739_SubIdentTypeDecl>());;
				if ((_139821_t != nullptr)) {
					_139017_kind=_139821_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be397dcc_SptrTypeDecl>>()) {
			_case_begin_1c30c5e47:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c0112580_Sptr> _140421_t = _1c011c722_buildSptr(&(*_self_), _138929_declKind.operator jule::Ptr<_1be397dcc_SptrTypeDecl>());;
				if ((_140421_t != nullptr)) {
					_139017_kind=jule::Trait<_1c0108de5_Kind>(_140421_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3988a0_PtrTypeDecl>>()) {
			_case_begin_1c30c473c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c0115ae4_Ptr> _141021_t = _1c011cd3d_buildPtr(&(*_self_), _138929_declKind.operator jule::Ptr<_1be3988a0_PtrTypeDecl>());;
				if ((_141021_t != nullptr)) {
					_139017_kind=jule::Trait<_1c0108de5_Kind>(_141021_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3982c8_SlcTypeDecl>>()) {
			_case_begin_1c30c47a3:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c0112edc_Slc> _141621_t = _1c011d14b_buildSlc(&(*_self_), _138929_declKind.operator jule::Ptr<_1be3982c8_SlcTypeDecl>());;
				if ((_141621_t != nullptr)) {
					_139017_kind=jule::Trait<_1c0108de5_Kind>(_141621_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be399032_ArrTypeDecl>>()) {
			_case_begin_1c30c4819:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c0115187_Arr> _142221_t = _1c011d459_buildArr(&(*_self_), _138929_declKind.operator jule::Ptr<_1be399032_ArrTypeDecl>());;
				if ((_142221_t != nullptr)) {
					_139017_kind=jule::Trait<_1c0108de5_Kind>(_142221_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be399780_MapTypeDecl>>()) {
			_case_begin_1c30c4880:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c0114593_Map> _142821_t = _1c011d767_buildMap(&(*_self_), _138929_declKind.operator jule::Ptr<_1be399780_MapTypeDecl>());;
				if ((_142821_t != nullptr)) {
					_139017_kind=jule::Trait<_1c0108de5_Kind>(_142821_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3985b4_TupleTypeDecl>>()) {
			_case_begin_1c30c65da:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1c0113a6a_Tuple> _143421_t = _1c011da75_buildTuple(&(*_self_), _138929_declKind.operator jule::Ptr<_1be3985b4_TupleTypeDecl>());;
				if ((_143421_t != nullptr)) {
					_139017_kind=jule::Trait<_1c0108de5_Kind>(_143421_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a8838_FnDecl>>()) {
			_case_begin_1c30c6651:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1be462392_FnIns> _144021_t = _1c011e191_buildFn(&(*_self_), _138929_declKind.operator jule::Ptr<_1be3a8838_FnDecl>());;
				if ((_144021_t != nullptr)) {
					_139017_kind=jule::Trait<_1c0108de5_Kind>(_144021_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be397ae1_NamespaceTypeDecl>>()) {
			_case_begin_1c30c66b7:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1c0108de5_Kind> _144621_t = _1c011e49e_buildByNamespace(&(*_self_), _138929_declKind.operator jule::Ptr<_1be397ae1_NamespaceTypeDecl>());;
				if ((_144621_t != nullptr)) {
					_139017_kind=_144621_t;
				};
			}
		}
		else {
			_case_begin_1c30c4594:;
			{
				jule::Any _145121_udeclKind = (*(((jule::Any*)((&(_138929_declKind))))));;
				{
					auto &_match_expr{ _145121_udeclKind };
					
					if (_match_expr.type_is<jule::Ptr<_1c0112580_Sptr>>()) {
						_case_begin_1c30c5474:;
						{
							_139017_kind=jule::Trait<_1c0108de5_Kind>(_145121_udeclKind.operator jule::Ptr<_1c0112580_Sptr>(), 7);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c0115ae4_Ptr>>()) {
						_case_begin_1c30c54da:;
						{
							_139017_kind=jule::Trait<_1c0108de5_Kind>(_145121_udeclKind.operator jule::Ptr<_1c0115ae4_Ptr>(), 12);
						}
					}
					else {
						_case_begin_1c30c5320:;
						{
							_1c0118058_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1c30c5232:;
				};
			}
		}
		_match_end_1c30c453e:;
	};
	if ((_139017_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _139017_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c0109324_TypeKind>>()) {
			_case_begin_1c30d37d4:;
			{
				return _139017_kind.operator jule::Ptr<_1c0109324_TypeKind>();
			}
		}
		else {
			_case_begin_1c30d311e:;
			{
				return jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=_139017_kind});
			}
		}
		_match_end_1c30c6bc3:;
	};
}



inline jule::Ptr<_1c0109324_TypeKind> _1c011eaba_checkDecl(_1c011784e_typeChecker* _self_, jule::Ptr<_1be396a24_TypeDecl>& _147533_decl) {
	jule::Ptr<_1d675d511_Token> _147717_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_147533_decl.get()._field_Token;
	jule::Ptr<_1c0109324_TypeKind> _148017_kind = _1c011e7ac_build(&(*_self_), _147533_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_147717_errorToken;
	return _148017_kind;
}



inline void _1c011ed40_check(_1c011784e_typeChecker* _self_, jule::Ptr<_1c010d47c_TypeSymbol>& _148629_t) {
	if ((_148629_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1c0109324_TypeKind> _149017_kind = _1c011eaba_checkDecl(&(*_self_), _148629_t.get()._field_Decl);;
	if ((_149017_kind == nullptr)) {
		_1c010da10_removeKind(_148629_t.ptr());
		return;;
	};
	_148629_t.get()._field_Kind=_149017_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1c011784e_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c01204a0_identTypeDecl(jule::Str& _150230_ident, jule::Ptr<_1be3970da_IdentTypeDecl> _150242_t) {
	if ((_150242_t.get()._field_Ident == _150230_ident)) {
		return true;
	};
	{
		auto &expr = _150242_t.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c30d7321:;
		if (it != expr.end()) {
			jule::Ptr<_1be396a24_TypeDecl> &_150616_g = *it;
			{
				if (static__1c01207e1_exist(_150230_ident,_150616_g.get()._field_Kind)) {
					return true;
				};
			}
			_iter_next_1c30d7321:;
			++it;
			goto _iter_begin_1c30d7321;
		}
		_iter_end_1c30d7321:;
	};
	return false;
}



inline jule::Bool static__1c01207e1_exist(jule::Str& _151422_ident, jule::Any& _151435_k) {
	{
		auto &_match_expr{ _151435_k };
		
		if (_match_expr.type_is<jule::Ptr<_1be3970da_IdentTypeDecl>>()) {
			_case_begin_1c30d8421:;
			{
				return static__1c01204a0_identTypeDecl(_151422_ident,_151435_k.operator jule::Ptr<_1be3970da_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be397739_SubIdentTypeDecl>>()) {
			_case_begin_1c30d8487:;
			{
				jule::Ptr<_1be397739_SubIdentTypeDecl> _151917_sit = _151435_k.operator jule::Ptr<_1be397739_SubIdentTypeDecl>();;
				{
					auto &expr = _151917_sit.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1c30d9c91:;
					if (it != expr.end()) {
						jule::Ptr<_1be3970da_IdentTypeDecl> &_152020_id = *it;
						{
							if (static__1c01204a0_identTypeDecl(_151422_ident,_152020_id)) {
								return true;
							};
						}
						_iter_next_1c30d9c91:;
						++it;
						goto _iter_begin_1c30d9c91;
					}
					_iter_end_1c30d9c91:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be397dcc_SptrTypeDecl>>()) {
			_case_begin_1c30d8674:;
			{
				jule::Ptr<_1be397dcc_SptrTypeDecl> _152717_sptr = _151435_k.operator jule::Ptr<_1be397dcc_SptrTypeDecl>();;
				return static__1c01207e1_exist(_151422_ident,_152717_sptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3988a0_PtrTypeDecl>>()) {
			_case_begin_1c30d86da:;
			{
				jule::Ptr<_1be3988a0_PtrTypeDecl> _153017_ptr = _151435_k.operator jule::Ptr<_1be3988a0_PtrTypeDecl>();;
				return static__1c01207e1_exist(_151422_ident,_153017_ptr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3982c8_SlcTypeDecl>>()) {
			_case_begin_1c30d8751:;
			{
				jule::Ptr<_1be3982c8_SlcTypeDecl> _153317_slc = _151435_k.operator jule::Ptr<_1be3982c8_SlcTypeDecl>();;
				return static__1c01207e1_exist(_151422_ident,_153317_slc.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be399032_ArrTypeDecl>>()) {
			_case_begin_1c30d87b7:;
			{
				jule::Ptr<_1be399032_ArrTypeDecl> _153617_arr = _151435_k.operator jule::Ptr<_1be399032_ArrTypeDecl>();;
				return static__1c01207e1_exist(_151422_ident,_153617_arr.get()._field_Elem.get()._field_Kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be399780_MapTypeDecl>>()) {
			_case_begin_1c30d882d:;
			{
				jule::Ptr<_1be399780_MapTypeDecl> _153917_map = _151435_k.operator jule::Ptr<_1be399780_MapTypeDecl>();;
				return (static__1c01207e1_exist(_151422_ident,_153917_map.get()._field_Key.get()._field_Kind) || static__1c01207e1_exist(_151422_ident,_153917_map.get()._field_Val.get()._field_Kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a8838_FnDecl>>()) {
			_case_begin_1c30d8894:;
			{
				jule::Ptr<_1be3a8838_FnDecl> _154317_f = _151435_k.operator jule::Ptr<_1be3a8838_FnDecl>();;
				{
					auto &expr = _154317_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c30e013c:;
					if (it != expr.end()) {
						jule::Ptr<_1be3a7518_ParamDecl> &_154420_p = *it;
						{
							if (_1be3a787b_IsSelf(_154420_p.ptr())) {
								goto _iter_next_1c30e013c;
							};
							if (static__1c01207e1_exist(_151422_ident,_154420_p.get()._field_Kind.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1c30e013c:;
						++it;
						goto _iter_begin_1c30e013c;
					}
					_iter_end_1c30e013c:;
				};
				if ((_154317_f.get()._field_Result != nullptr)) {
					return static__1c01207e1_exist(_151422_ident,_154317_f.get()._field_Result.get()._field_Kind.get()._field_Kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3985b4_TupleTypeDecl>>()) {
			_case_begin_1c30d891b:;
			{
				jule::Ptr<_1be3985b4_TupleTypeDecl> _155717_tup = _151435_k.operator jule::Ptr<_1be3985b4_TupleTypeDecl>();;
				{
					auto &expr = _155717_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1c30e24e6:;
					if (it != expr.end()) {
						jule::Ptr<_1be396a24_TypeDecl> &_155820_t = *it;
						{
							if (static__1c01207e1_exist(_151422_ident,_155820_t.get()._field_Kind)) {
								return true;
							};
						}
						_iter_next_1c30e24e6:;
						++it;
						goto _iter_begin_1c30e24e6;
					}
					_iter_end_1c30e24e6:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be397ae1_NamespaceTypeDecl>>()) {
			_case_begin_1c30d8993:;
			{
				jule::Ptr<_1be397ae1_NamespaceTypeDecl> _156517_ns = _151435_k.operator jule::Ptr<_1be397ae1_NamespaceTypeDecl>();;
				return static__1c01207e1_exist(_151422_ident,_156517_ns.get()._field_Kind.get()._field_Kind);
			}
		}
		else {
			_case_begin_1c30d8256:;
			{
				return false;
			}
		}
		_match_end_1c30d8201:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c0120060_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c097c34a_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c09c5a9c_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1c09c6a59_stop(_1c09c63c7_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1c09c6cbd_stopped(_1c09c63c7_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1c09c7032_finished(_1c09c63c7_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1c09c7296_isLastSt(_1c09c63c7_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1c09c75b5_pushErr(_1c09c63c7_scopeParser* _self_, jule::Ptr<_1d675d511_Token> _19226_token, jule::Str _19241_fmt) {
	_1c09e33d3_pushErr((*_self_)._field_p.ptr(), _19226_token,_19241_fmt,jule::Slice<jule::Any>());
}



inline void _1c09c78d4_pushSuggestion(_1c09c63c7_scopeParser* _self_, jule::Str _19733_fmt, jule::Slice<jule::Any> _19746_args) {
	_1c09e3702_pushSuggestion((*_self_)._field_p.ptr(), _19733_fmt,jule::Any(_19746_args));
}



inline void _1c09c7b59_insertAsNext(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _20136_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1c09c5a9c_stmt>(_1c09c5a9c_stmt{._field_tokens=_20136_tokens, });
}



inline jule::Ptr<_1c09c5a9c_stmt> _1c09c7dbd_next(_1c09c63c7_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1be3a6d42_ScopeTree> _1c09c8275_buildScope(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _21134_tokens, jule::Ptr<_1d675d511_Token> _21156_end) {
	jule::Ptr<_1be3a6d42_ScopeTree> _21217_s = _1c09c497a_newScope();;
	_21217_s.get()._field_Parent=(*_self_)._field_s;
	_21217_s.get()._field_End=_21156_end;
	_1c09c63c7_scopeParser _21517_ssp = _1c09c63c7_scopeParser{._field_p=(*_self_)._field_p, };;
	_1c09d1db6_build(&_21517_ssp, _21134_tokens,_21217_s);
	return _21217_s;
}



inline jule::Ptr<_1be3a9817_VarDecl> _1c09c8583_buildVarSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _22234_tokens) {
	jule::Ptr<_1be3a9817_VarDecl> _22317_v = _1c09e5e1e_buildVar((*_self_)._field_p, _22234_tokens);;
	_22317_v.get()._field_Scope=(*_self_)._field_s;
	return _22317_v;
}



inline jule::Ptr<_1be3a9bbe_RetSt> _1c09c8891_buildRetSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _22833_tokens) {
	jule::Ptr<_1be3a9bbe_RetSt> _22917_st = jule::new_ptr<_1be3a9bbe_RetSt>(_1be3a9bbe_RetSt{._field_Token=_22833_tokens[0LL], });;
	if ((_22833_tokens.len() > 1LL)) {
		_22833_tokens=_22833_tokens.slice(1LL);
		_22917_st.get()._field_Expr=_1c09e3a10_buildExpr((*_self_)._field_p, _22833_tokens);
	};
	return _22917_st;
}



inline jule::Ptr<_1be3aa32e_Iter> _1c09c8b9e_buildWhileNextIter(_1c09c63c7_scopeParser* _self_, jule::Ptr<_1c09c5a9c_stmt>& _23942_s) {
	jule::Ptr<_1be3aa32e_Iter> _24017_it = jule::new_ptr<_1be3aa32e_Iter>(_1be3aa32e_Iter{._field_Token=_23942_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _24317_tokens = _23942_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1be3aab04_WhileKind> _24417_kind = jule::new_ptr<_1be3aab04_WhileKind>();;
	if ((_24317_tokens.len() > 0LL)) {
		_24417_kind.get()._field_Expr=_1c09e3a10_buildExpr((*_self_)._field_p, _24317_tokens);
	};
	if (_1c09c7296_isLastSt(&(*_self_))) {
		_1c09c75b5_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24317_tokens=_1c09c7dbd_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _25617_stTokens = _1c09dcb19_getBlockExpr(_24317_tokens);;
	if ((_25617_stTokens.len() > 0LL)) {
		jule::Ptr<_1c09c5a9c_stmt> _25821_stmt = jule::new_ptr<_1c09c5a9c_stmt>(_1c09c5a9c_stmt{._field_tokens=_25617_stTokens, ._field_terminated=_23942_s.get()._field_terminated});;
		_24417_kind.get()._field_NextToken=_25617_stTokens[0LL];
		_24417_kind.get()._field_Next=_1c09d1a97_buildSt(&(*_self_), _25821_stmt);
	};
	jule::I64 _26617_i = _25617_stTokens.len();;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _26717_blockTokens = _1c09e0bd8_range(_26617_i,jule::Str("{", 1),jule::Str("}", 1),_24317_tokens);;
	if ((_26717_blockTokens == nullptr)) {
		_1c09c6a59_stop(&(*_self_));
		_1c09c75b5_pushErr(&(*_self_), _24017_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1c09c78d4_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26617_i < _24317_tokens.len())) {
		_1c09c75b5_pushErr(&(*_self_), _24317_tokens[_26617_i],jule::Str("invalid syntax", 14));
	};
	_24017_it.get()._field_Scope=_1c09c8275_buildScope(&(*_self_), _26717_blockTokens,_24317_tokens[(_26617_i - 1LL)]);
	_24017_it.get()._field_Kind=static_cast<jule::Any>(_24417_kind);
	return _24017_it;
}



inline jule::Ptr<_1be3aab04_WhileKind> _1c09c8eac_buildWhileIterKind(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _28442_tokens) {
	return jule::new_ptr<_1be3aab04_WhileKind>(_1be3aab04_WhileKind{._field_Expr=_1c09e3a10_buildExpr((*_self_)._field_p, _28442_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c09c92ba_getRangeKindKeysTokens(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _29046_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _29118_vars;;
	jule::Slice<_1d6435804_Log> _29124_errs;;
	std::tie(_29118_vars,_29124_errs) = _1c09e1755_parts(_29046_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29124_errs);
	return _29118_vars;
}



inline jule::Ptr<_1be3a9817_VarDecl> _1c09c95c8_buildRangeKindKey(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _29641_tokens) {
	if ((_29641_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1be3a9817_VarDecl> _30017_key = jule::new_ptr<_1be3a9817_VarDecl>(_1be3a9817_VarDecl{._field_Token=_29641_tokens[0LL], });;
	if ((_30017_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_30017_key.get()._field_Mutable=true;
		if ((_29641_tokens.len() == 1LL)) {
			_1c09c75b5_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_30017_key.get()._field_Token=_29641_tokens[1LL];
	} else if ((_29641_tokens.len() > 1LL)) {
		_1c09c75b5_pushErr(&(*_self_), _29641_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_30017_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09c75b5_pushErr(&(*_self_), _30017_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_1c09c78d4_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_30017_key.get()._field_Ident=_30017_key.get()._field_Token.get()._field_Kind;
	return _30017_key;
}



inline jule::Slice<jule::Ptr<_1be3a9817_VarDecl>> _1c09c98d6_buildRangeKindKeys(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>& _32142_parts) {
	jule::Slice<jule::Ptr<_1be3a9817_VarDecl>> _32217_keys = nullptr;;
	{
		auto &expr = _32142_parts;
		auto it = expr.begin();
		_iter_begin_1c3253668:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _32321_tokens = *it;
			{
				_32217_keys = jule::alloc_for_append(_32217_keys,1);_32217_keys.__push(_1c09c95c8_buildRangeKindKey(&(*_self_), _32321_tokens));;
			}
			_iter_next_1c3253668:;
			++it;
			goto _iter_begin_1c3253668;
		}
		_iter_end_1c3253668:;
	};
	return _32217_keys;
}



inline void _1c09c9c27_setupRangeKindKeysPlain(_1c09c63c7_scopeParser* _self_, jule::Ptr<_1be3ab495_RangeKind>& _32947_rng, jule::Slice<jule::Ptr<_1d675d511_Token>>& _32969_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _33017_keyTokens = _1c09c92ba_getRangeKindKeysTokens(&(*_self_), _32969_tokens);;
	if ((_33017_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_33017_keyTokens.len() > 2LL)) {
		_1c09c75b5_pushErr(&(*_self_), _32947_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1be3a9817_VarDecl>> _33717_keys = _1c09c98d6_buildRangeKindKeys(&(*_self_), _33017_keyTokens);;
	_32947_rng.get()._field_KeyA=_33717_keys[0LL];
	if ((_33717_keys.len() > 1LL)) {
		_32947_rng.get()._field_KeyB=_33717_keys[1LL];
	};
}



inline void _1c09ca079_setupRangeKindKeysExplicit(_1c09c63c7_scopeParser* _self_, jule::Ptr<_1be3ab495_RangeKind>& _34450_rng, jule::Slice<jule::Ptr<_1d675d511_Token>>& _34472_tokens) {
	jule::I64 _34517_i = 0LL;;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _34617_rang = _1c09e0bd8_range(_34517_i,jule::Str("(", 1),jule::Str(")", 1),_34472_tokens);;
	if ((_34517_i < _34472_tokens.len())) {
		_1c09c75b5_pushErr(&(*_self_), _34450_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_1c09c9c27_setupRangeKindKeysPlain(&(*_self_), _34450_rng,_34617_rang);
}



inline void _1c09ca3a9_setupRangeKindKeys(_1c09c63c7_scopeParser* _self_, jule::Ptr<_1be3ab495_RangeKind>& _35342_rng, jule::Slice<jule::Ptr<_1d675d511_Token>>& _35364_tokens) {
	if ((_35364_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35364_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1c09c75b5_pushErr(&(*_self_), _35364_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1c09ca079_setupRangeKindKeysExplicit(&(*_self_), _35342_rng,_35364_tokens);
		return;;
	};
	_1c09c9c27_setupRangeKindKeysPlain(&(*_self_), _35342_rng,_35364_tokens);
}



inline jule::Ptr<_1be3ab495_RangeKind> _1c09ca80a_buildRangeIterKind(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _36542_var_tokens, jule::Slice<jule::Ptr<_1d675d511_Token>>& _36614_exprTokens, jule::Ptr<_1d675d511_Token>& _36641_inToken) {
	jule::Ptr<_1be3ab495_RangeKind> _36717_rng = jule::new_ptr<_1be3ab495_RangeKind>(_1be3ab495_RangeKind{._field_InToken=_36641_inToken, });;
	if ((_36614_exprTokens.len() == 0LL)) {
		_1c09c75b5_pushErr(&(*_self_), _36717_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36717_rng;
	};
	_36717_rng.get()._field_Expr=_1c09e3a10_buildExpr((*_self_)._field_p, _36614_exprTokens);
	if ((_36542_var_tokens.len() > 0LL)) {
		_1c09ca3a9_setupRangeKindKeys(&(*_self_), _36717_rng,_36542_var_tokens);
	};
	return _36717_rng;
}



inline jule::Any _1c09cabb2_buildCommonIterKind(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _38143_tokens, jule::Ptr<_1d675d511_Token>& _38162_err_tok) {
	jule::I64 _38217_braceN = 0LL;;
	{
		auto &expr = _38143_tokens;
		auto it = expr.begin();
		_iter_begin_1c325e289:;
		if (it != expr.end()) {
			jule::I64 _38314_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _38321_tok = *it;
			{
				if ((_38321_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38321_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c3260246:;
							{
								(_38217_braceN)++;
								goto _iter_next_1c325e289;
							}
						}
						else {
							_case_begin_1c3260521:;
							{
								(_38217_braceN)--;
							}
						}
						_match_end_1c3260312:;
					};
				};
				if ((_38217_braceN != 0LL)) {
					goto _iter_next_1c325e289;
				};
				{
					auto &_match_expr{ _38321_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1c325ee38:;
						{
							jule::Slice<jule::Ptr<_1d675d511_Token>> _40025_declTokens = _38143_tokens.slice(0LL,_38314_i);;
							jule::Slice<jule::Ptr<_1d675d511_Token>> _40125_exprTokens = _38143_tokens.slice((_38314_i + 1LL));;
							return static_cast<jule::Any>(_1c09ca80a_buildRangeIterKind(&(*_self_), _40025_declTokens,_40125_exprTokens,_38321_tok));
						}
					}
					_match_end_1c32609d8:;
				};
			}
			_iter_next_1c325e289:;
			++it;
			_38314_i++;
			goto _iter_begin_1c325e289;
		}
		_iter_end_1c325e289:;
	};
	return static_cast<jule::Any>(_1c09c8eac_buildWhileIterKind(&(*_self_), _38143_tokens));
}



inline jule::Ptr<_1be3aa32e_Iter> _1c09caec0_buildCommonIter(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _40838_tokens) {
	jule::Ptr<_1be3aa32e_Iter> _40917_it = jule::new_ptr<_1be3aa32e_Iter>(_1be3aa32e_Iter{._field_Token=_40838_tokens[0LL], });;
	_40838_tokens=_40838_tokens.slice(1LL);
	if ((_40838_tokens.len() == 0LL)) {
		_1c09c6a59_stop(&(*_self_));
		_1c09c75b5_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1c09c78d4_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _41917_exprTokens = _1c09dcb19_getBlockExpr(_40838_tokens);;
	if ((_41917_exprTokens.len() > 0LL)) {
		_40917_it.get()._field_Kind=_1c09cabb2_buildCommonIterKind(&(*_self_), _41917_exprTokens,_40917_it.get()._field_Token);
	};
	jule::I64 _42317_i = _41917_exprTokens.len();;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _42417_scopeTokens = _1c09e0bd8_range(_42317_i,jule::Str("{", 1),jule::Str("}", 1),_40838_tokens);;
	if ((_42417_scopeTokens == nullptr)) {
		_1c09c6a59_stop(&(*_self_));
		_1c09c75b5_pushErr(&(*_self_), _40917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1c09c78d4_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42317_i < _40838_tokens.len())) {
		_1c09c75b5_pushErr(&(*_self_), _40838_tokens[_42317_i],jule::Str("invalid syntax", 14));
	};
	_40917_it.get()._field_Scope=_1c09c8275_buildScope(&(*_self_), _42417_scopeTokens,_40838_tokens[(_42317_i - 1LL)]);
	return _40917_it;
}



inline jule::Ptr<_1be3aa32e_Iter> _1c09cb2cd_buildIterSt(_1c09c63c7_scopeParser* _self_, jule::Ptr<_1c09c5a9c_stmt>& _43835_st) {
	if (_43835_st.get()._field_terminated) {
		return _1c09c8b9e_buildWhileNextIter(&(*_self_), _43835_st);
	};
	return _1c09caec0_buildCommonIter(&(*_self_), _43835_st.get()._field_tokens);
}



inline jule::Ptr<_1be3ab84c_BreakSt> _1c09cb5db_buildBreakSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _44536_tokens) {
	jule::Ptr<_1be3ab84c_BreakSt> _44617_brk = jule::new_ptr<_1be3ab84c_BreakSt>(_1be3ab84c_BreakSt{._field_Token=_44536_tokens[0LL], });;
	if ((_44536_tokens.len() > 1LL)) {
		if ((_44536_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1c09c75b5_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			_1c09c78d4_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44617_brk.get()._field_Label=_44536_tokens[1LL];
			if ((_44536_tokens.len() > 2LL)) {
				_1c09c75b5_pushErr(&(*_self_), _44536_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44617_brk;
}



inline jule::Ptr<_1be3abc04_ContSt> _1c09cb8e9_buildContSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _46335_tokens) {
	jule::Ptr<_1be3abc04_ContSt> _46417_cont = jule::new_ptr<_1be3abc04_ContSt>(_1be3abc04_ContSt{._field_Token=_46335_tokens[0LL], });;
	if ((_46335_tokens.len() > 1LL)) {
		if ((_46335_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1c09c75b5_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			_1c09c78d4_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46417_cont.get()._field_Label=_46335_tokens[1LL];
			if ((_46335_tokens.len() > 2LL)) {
				_1c09c75b5_pushErr(&(*_self_), _46335_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46417_cont;
}



inline jule::Ptr<_1be3ac177_If> _1c09cbc07_buildIf(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _48131_tokens) {
	jule::Ptr<_1be3ac177_If> _48217_model = jule::new_ptr<_1be3ac177_If>(_1be3ac177_If{._field_Token=_48131_tokens[0LL], });;
	_48131_tokens=_48131_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1d675d511_Token>> _48617_exprTokens = _1c09dcb19_getBlockExpr(_48131_tokens);;
	jule::I64 _48717_i = 0LL;;
	if ((_48617_exprTokens.len() == 0LL)) {
		_1c09c75b5_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48717_i=static_cast<jule::I64>(_48617_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _49317_scopeTokens = _1c09e0bd8_range(_48717_i,jule::Str("{", 1),jule::Str("}", 1),_48131_tokens);;
	if ((_49317_scopeTokens == nullptr)) {
		_1c09c6a59_stop(&(*_self_));
		_1c09c75b5_pushErr(&(*_self_), _48217_model.get()._field_Token,jule::Str("body is not exist", 17));
		_1c09c78d4_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d675d511_Token> _50017_end = _48131_tokens[(_48717_i - 1LL)];;
	if ((_48717_i < _48131_tokens.len())) {
		if ((_48131_tokens[_48717_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48131_tokens=_48131_tokens.slice(_48717_i);
		} else {
			_1c09c75b5_pushErr(&(*_self_), _48131_tokens[_48717_i],jule::Str("invalid syntax", 14));
			_48131_tokens=nullptr;
		};
	};
	_48217_model.get()._field_Expr=_1c09e3a10_buildExpr((*_self_)._field_p, _48617_exprTokens);
	_48217_model.get()._field_Scope=_1c09c8275_buildScope(&(*_self_), _49317_scopeTokens,_50017_end);
	return _48217_model;
}



inline jule::Ptr<_1be3ac52e_Else> _1c09cc015_buildElse(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _51433_tokens) {
	jule::Ptr<_1be3ac52e_Else> _51517_els = jule::new_ptr<_1be3ac52e_Else>(_1be3ac52e_Else{._field_Token=_51433_tokens[0LL], });;
	_51433_tokens=_51433_tokens.slice(1LL);
	jule::I64 _51917_i = 0LL;;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _52017_scopeTokens = _1c09e0bd8_range(_51917_i,jule::Str("{", 1),jule::Str("}", 1),_51433_tokens);;
	if ((_52017_scopeTokens == nullptr)) {
		if ((_51917_i < _51433_tokens.len())) {
			_1c09c75b5_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1c09c6a59_stop(&(*_self_));
			_1c09c75b5_pushErr(&(*_self_), _51517_els.get()._field_Token,jule::Str("body is not exist", 17));
			_1c09c78d4_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51917_i < _51433_tokens.len())) {
		_1c09c75b5_pushErr(&(*_self_), _51433_tokens[_51917_i],jule::Str("invalid syntax", 14));
	};
	_51517_els.get()._field_Scope=_1c09c8275_buildScope(&(*_self_), _52017_scopeTokens,_51433_tokens[(_51917_i - 1LL)]);
	return _51517_els;
}



inline jule::Ptr<_1be3ac9a2_Conditional> _1c09cc323_buildIfElseChain(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _53839_tokens) {
	jule::Ptr<_1be3ac9a2_Conditional> _53917_chain = jule::new_ptr<_1be3ac9a2_Conditional>(_1be3ac9a2_Conditional{._field_Head=_1c09cbc07_buildIf(&(*_self_), _53839_tokens), });;
	if ((_53917_chain.get()._field_Head == nullptr)) {
		return nullptr;
	};
	while ((_53839_tokens.len() != 0LL)) {
		{
			if ((_53839_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1c327b8a0;
			};
			if (((_53839_tokens.len() > 1LL) && (_53839_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53839_tokens=_53839_tokens.slice(1LL);
				jule::Ptr<_1be3ac177_If> _55125_elif = _1c09cbc07_buildIf(&(*_self_), _53839_tokens);;
				_53917_chain.get()._field_Tail = jule::alloc_for_append(_53917_chain.get()._field_Tail,1);_53917_chain.get()._field_Tail.__push(_55125_elif);;
				goto _iter_next_1c327b8a0;
			};
			_53917_chain.get()._field_Default=_1c09cc015_buildElse(&(*_self_), _53839_tokens);
			goto _iter_end_1c327b8a0;
		}
	_iter_next_1c327b8a0:;
	}
	_iter_end_1c327b8a0:;;
	return _53917_chain;
}



inline jule::Ptr<_1be39cb3a_CoExpr> _1c09cc631_buildCoCallSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _56136_tokens) {
	jule::Ptr<_1be39cb3a_CoExpr> _56217_c = jule::new_ptr<_1be39cb3a_CoExpr>(_1be39cb3a_CoExpr{._field_Token=_56136_tokens[0LL], });;
	_56136_tokens=_56136_tokens.slice(1LL);
	_56217_c.get()._field_Expr=_1c09e3a10_buildExpr((*_self_)._field_p, _56136_tokens);
	return _56217_c;
}



inline jule::Ptr<_1be3a4867_GotoSt> _1c09cc93e_buildGotoSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _57035_tokens) {
	jule::Ptr<_1be3a4867_GotoSt> _57117_gt = jule::new_ptr<_1be3a4867_GotoSt>(_1be3a4867_GotoSt{._field_Token=_57035_tokens[0LL], });;
	if ((_57035_tokens.len() == 1LL)) {
		_1c09c75b5_pushErr(&(*_self_), _57117_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_57035_tokens.len() > 2LL)) {
		_1c09c75b5_pushErr(&(*_self_), _57035_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1d675d511_Token> _58017_identToken = _57035_tokens[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09c75b5_pushErr(&(*_self_), _58017_identToken,jule::Str("invalid syntax", 14));
		_1c09c78d4_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57117_gt;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;
}



inline jule::Ptr<_1be3a4b53_FallSt> _1c09ccc4c_buildFallSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _59035_tokens) {
	jule::Ptr<_1be3a4b53_FallSt> _59117_fll = jule::new_ptr<_1be3a4b53_FallSt>(_1be3a4b53_FallSt{._field_Token=_59035_tokens[0LL]});;
	if ((_59035_tokens.len() > 1LL)) {
		_1c09c75b5_pushErr(&(*_self_), _59035_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59117_fll;
}



inline jule::Ptr<_1be3ad178_TypeAliasDecl> _1c09cd05a_buildTypeAliasSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _60040_tokens) {
	jule::Ptr<_1be3ad178_TypeAliasDecl> _60117_tad = _1c09e510a_buildTypeAliasDecl((*_self_)._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*_self_)._field_s;
	return _60117_tad;
}



inline void _1c09cd4bc_pushCaseExpr(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _60635_tokens, jule::Ptr<_1d675d511_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1be39b045_Expr>>& _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1be396a24_TypeDecl> _61422_t;;
		jule::Bool _61425_ok;;
		std::tie(_61422_t,_61425_ok) = _1c09e4cec_buildType((*_self_)._field_p, _60635_tokens,(&(_61321_i)),true);
		if (_61425_ok) {
			_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(jule::new_ptr<_1be39b045_Expr>(_1be39b045_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_61422_t)}));;
			if ((_61321_i < _60635_tokens.len())) {
				_1c09c75b5_pushErr(&(*_self_), _60635_tokens[_61321_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60731_exprs = jule::alloc_for_append(_60731_exprs,1);_60731_exprs.__push(_1c09e3a10_buildExpr((*_self_)._field_p, _60635_tokens));;
}



inline jule::Slice<jule::Ptr<_1be39b045_Expr>> _1c09cd874_buildCaseExprs(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _63038_tokens, jule::Bool _63056_type_match) {
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1be39b045_Expr>>::alloc(0LL,1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto &expr = _63038_tokens;
		auto it = expr.begin();
		_iter_begin_1c328be43:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _63521_tok = *it;
			{
				if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63521_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1c328ce99:;
							{
								(_63317_braceN)++;
							}
						}
						else {
							_case_begin_1c328d274:;
							{
								(_63317_braceN)--;
							}
						}
						_match_end_1c328d065:;
					};
					goto _iter_next_1c328be43;
				} else if ((_63317_braceN != 0LL)) {
					goto _iter_next_1c328be43;
				};
				{
					
					if (((_63521_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_63521_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1c328de67:;
						{
							jule::Slice<jule::Ptr<_1d675d511_Token>> _65121_exprTokens = _63038_tokens.slice(_63417_j,_63514_i);;
							if ((_65121_exprTokens.len() == 0LL)) {
								_1c09c75b5_pushErr(&(*_self_), _63521_tok,jule::Str("expression missing", 18));
							} else {
								_1c09cd4bc_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63056_type_match,_63117_exprs);
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1c328decd:;
						{
							_1c09cd4bc_pushCaseExpr(&(*_self_), _63038_tokens.slice(_63417_j,_63514_i),_63521_tok,_63056_type_match,_63117_exprs);
							_63038_tokens=_63038_tokens.slice((_63514_i + 1LL));
							return _63117_exprs;
						}
					}
					_match_end_1c328da05:;
				};
			}
			_iter_next_1c328be43:;
			++it;
			_63514_i++;
			goto _iter_begin_1c328be43;
		}
		_iter_end_1c328be43:;
	};
	_1c09c75b5_pushErr(&(*_self_), _63038_tokens[0LL],jule::Str("invalid syntax", 14));
	_63038_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1be3a6d42_ScopeTree> _1c09cdb82_buildCaseScope(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _66938_tokens) {
	jule::I64 _67017_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67221_i = 0LL;;
			jule::Slice<jule::Ptr<_1d675d511_Token>> _67322_next;;
			std::tie(_67322_next,std::ignore) = _1c09c57a0_skipSt(_67221_i,_66938_tokens.slice(_67017_n));
			if ((_67322_next.len() == 0LL)) {
				goto _iter_end_1c3292a1a;
			};
			jule::Ptr<_1d675d511_Token> _67717_tok = _67322_next[0LL];;
			if (((_67717_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_67717_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67017_n+=_67221_i;
				goto _iter_next_1c3292a1a;
			};
			jule::Slice<jule::Ptr<_1d675d511_Token>> _68221_scopeTokens = _66938_tokens.slice(0LL,_67017_n);;
			jule::Ptr<_1be3a6d42_ScopeTree> _68321_scope = _1c09c8275_buildScope(&(*_self_), _68221_scopeTokens,_66938_tokens[_67017_n]);;
			_66938_tokens=_66938_tokens.slice(_67017_n);
			return _68321_scope;
		}
	_iter_next_1c3292a1a:;
	}
	_iter_end_1c3292a1a:;;
	jule::Ptr<_1d675d511_Token> _68717_end = jule::Ptr<_1d675d511_Token>();;
	if ((_66938_tokens.len() > 0LL)) {
		_68717_end=_66938_tokens[(_66938_tokens.len() - 1LL)];
	};
	jule::Ptr<_1be3a6d42_ScopeTree> _69117_scope = _1c09c8275_buildScope(&(*_self_), _66938_tokens,_68717_end);;
	_66938_tokens=nullptr;
	return _69117_scope;
}



inline std::tuple<jule::Ptr<_1be3ad5eb_Case>,jule::Bool> _1c09ce039_buildCase(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _69633_tokens, jule::Bool _69651_typeMatch) {
	jule::Ptr<_1be3ad5eb_Case> _69717_c = jule::new_ptr<_1be3ad5eb_Case>(_1be3ad5eb_Case{._field_Token=_69633_tokens[0LL], });;
	_69633_tokens=_69633_tokens.slice(1LL);
	_69717_c.get()._field_Exprs=_1c09cd874_buildCaseExprs(&(*_self_), _69633_tokens,_69651_typeMatch);
	_69717_c.get()._field_Scope=_1c09cdb82_buildCaseScope(&(*_self_), _69633_tokens);
	jule::Bool _70313_isDefault = (_69717_c.get()._field_Exprs.len() == 0LL);;
	return std::make_tuple(_69717_c,_70313_isDefault);
}



inline std::tuple<jule::Slice<jule::Ptr<_1be3ad5eb_Case>>,jule::Ptr<_1be3ac52e_Else>> _1c09ce3e1_buildCases(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _70733_tokens, jule::Bool _70751_type_match) {
	jule::Slice<jule::Ptr<_1be3ad5eb_Case>> _70817_cases = nullptr;;
	jule::Ptr<_1be3ac52e_Else> _70917_def = nullptr;;
	jule::Bool _71017_defNotLast = false;;
	while ((_70733_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1d675d511_Token> _71221_tok = _70733_tokens[0LL];;
			if (((_71221_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_71221_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1c09c75b5_pushErr(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1c329a78c;
			};
			jule::Ptr<_1be3ad5eb_Case> _71722_c;;
			jule::Bool _71725_is_default;;
			std::tie(_71722_c,_71725_is_default) = _1c09ce039_buildCase(&(*_self_), _70733_tokens,_70751_type_match);
			if (_71725_is_default) {
				_71722_c.get()._field_Token=_71221_tok;
				if ((_70917_def == nullptr)) {
					_70917_def=jule::new_ptr<_1be3ac52e_Else>(_1be3ac52e_Else{._field_Token=_71722_c.get()._field_Token, ._field_Scope=_71722_c.get()._field_Scope});
				} else {
					_1c09c75b5_pushErr(&(*_self_), _71221_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_71017_defNotLast=(_71017_defNotLast || (_70917_def != nullptr));
				_70817_cases = jule::alloc_for_append(_70817_cases,1);_70817_cases.__push(_71722_c);;
			};
		}
	_iter_next_1c329a78c:;
	}
	_iter_end_1c329a78c:;;
	if (_71017_defNotLast) {
		_1c09c75b5_pushErr(&(*_self_), _70917_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70817_cases,_70917_def);
}



inline jule::Ptr<_1be3adcc2_MatchCase> _1c09ce6ee_buildMatchCase(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _74137_tokens) {
	jule::Ptr<_1be3adcc2_MatchCase> _74217_m = jule::new_ptr<_1be3adcc2_MatchCase>(_1be3adcc2_MatchCase{._field_Token=_74137_tokens[0LL], });;
	_74137_tokens=_74137_tokens.slice(1LL);
	if (((_74137_tokens.len() > 0LL) && (_74137_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_74217_m.get()._field_TypeMatch=true;
		_74137_tokens=_74137_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _75217_exprTokens = _1c09dcb19_getBlockExpr(_74137_tokens);;
	if ((_75217_exprTokens.len() > 0LL)) {
		_74217_m.get()._field_Expr=_1c09e3a10_buildExpr((*_self_)._field_p, _75217_exprTokens);
	} else if (_74217_m.get()._field_TypeMatch) {
		_1c09c75b5_pushErr(&(*_self_), _74217_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _75917_i = _75217_exprTokens.len();;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _76017_blockToks = _1c09e0bd8_range(_75917_i,jule::Str("{", 1),jule::Str("}", 1),_74137_tokens);;
	if ((_76017_blockToks == nullptr)) {
		_1c09c6a59_stop(&(*_self_));
		_1c09c75b5_pushErr(&(*_self_), _74217_m.get()._field_Token,jule::Str("body is not exist", 17));
		_1c09c78d4_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75917_i < _74137_tokens.len())) {
		_1c09c75b5_pushErr(&(*_self_), _74137_tokens[_75917_i],jule::Str("invalid syntax", 14));
	};
	_74217_m.get()._field_End=_74137_tokens[(_75917_i - 1LL)];
	std::tie(_74217_m.get()._field_Cases,_74217_m.get()._field_Default) = _1c09ce3e1_buildCases(&(*_self_), _76017_blockToks,_74217_m.get()._field_TypeMatch);
	return _74217_m;
}



inline jule::Ptr<_1be3a6d42_ScopeTree> _1c09cea0c_buildScopeSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _77435_tokens) {
	jule::Bool _77517_isUnsafe = false;;
	jule::Bool _77617_isDeferred = false;;
	jule::Ptr<_1d675d511_Token> _77717_token = _77435_tokens[0LL];;
	if ((_77717_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_77517_isUnsafe=true;
		_77435_tokens=_77435_tokens.slice(1LL);
		if ((_77435_tokens.len() == 0LL)) {
			_1c09c75b5_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77717_token=_77435_tokens[0LL];
		if ((_77717_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_77617_isDeferred=true;
			_77435_tokens=_77435_tokens.slice(1LL);
			if ((_77435_tokens.len() == 0LL)) {
				_1c09c75b5_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77717_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_77617_isDeferred=true;
		_77435_tokens=_77435_tokens.slice(1LL);
		if ((_77435_tokens.len() == 0LL)) {
			_1c09c75b5_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _80317_i = 0LL;;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _80417_scopeTokens = _1c09e0bd8_range(_80317_i,jule::Str("{", 1),jule::Str("}", 1),_77435_tokens);;
	if ((_80417_scopeTokens == nullptr)) {
		_1c09c75b5_pushErr(&(*_self_), _77717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_80317_i < _77435_tokens.len())) {
		_1c09c75b5_pushErr(&(*_self_), _77435_tokens[_80317_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1be3a6d42_ScopeTree> _81117_scope = _1c09c8275_buildScope(&(*_self_), _80417_scopeTokens,_77435_tokens[(_80317_i - 1LL)]);;
	_81117_scope.get()._field_Unsafety=_77517_isUnsafe;
	_81117_scope.get()._field_Deferred=_77617_isDeferred;
	return _81117_scope;
}



inline jule::Ptr<_1be3a44b0_LabelSt> _1c09ced1a_buildLabelSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _81736_tokens) {
	jule::Ptr<_1be3a44b0_LabelSt> _81817_lbl = jule::new_ptr<_1be3a44b0_LabelSt>(_1be3a44b0_LabelSt{._field_Token=_81736_tokens[0LL], ._field_Ident=_81736_tokens[0LL].get()._field_Kind});;
	if ((_81736_tokens.len() > 2LL)) {
		_81736_tokens=_81736_tokens.slice(2LL);
		_1c09c7b59_insertAsNext(&(*_self_), _81736_tokens);
	};
	return _81817_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1c09d0128_buildIdSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _83233_tokens) {
	jule::Bool _83263_ok = jule::Bool();
	if ((_83233_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_83263_ok);
	};
	jule::Ptr<_1d675d511_Token> _83717_token = _83233_tokens[1LL];;
	{
		auto &_match_expr{ _83717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1c32b629c:;
			{
				_83263_ok = true;
				return std::make_tuple(static_cast<jule::Any>(_1c09ced1a_buildLabelSt(&(*_self_), _83233_tokens)),_83263_ok);
			}
		}
		_match_end_1c32b6e5c:;
	};
	return std::make_tuple(jule::Any(),_83263_ok);
}



inline jule::Ptr<_1c09de148_assignInfo> _1c09d0436_buildAssignInfo(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _84639_tokens) {
	jule::Ptr<_1c09de148_assignInfo> _84717_info = jule::new_ptr<_1c09de148_assignInfo>(_1c09de148_assignInfo{._field_ok=true});;
	jule::I64 _85017_braceN = 0LL;;
	{
		auto &expr = _84639_tokens;
		auto it = expr.begin();
		_iter_begin_1c32b8ca5:;
		if (it != expr.end()) {
			jule::I64 _85114_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _85121_token = *it;
			{
				if ((_85121_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _85121_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c32b9ca6:;
							{
								(_85017_braceN)++;
							}
						}
						else {
							_case_begin_1c32ba081:;
							{
								(_85017_braceN)--;
							}
						}
						_match_end_1c32b9d72:;
					};
				};
				{
					
					if ((_85017_braceN > 0LL)) {
						_case_begin_1c32ba768:;
						{
							goto _iter_next_1c32b8ca5;
						}
					}
					else if ((_85121_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1c32ba7ce:;
						{
							goto _iter_next_1c32b8ca5;
						}
					}
					else if ((!(_1d67630e8_IsAssignOp(_85121_token.get()._field_Kind)))) {
						_case_begin_1c32ba856:;
						{
							goto _iter_next_1c32b8ca5;
						}
					}
					_match_end_1c32ba548:;
				};
				_84717_info.get()._field_l=_84639_tokens.slice(0LL,_85114_i);
				if ((_84717_info.get()._field_l.len() == 0LL)) {
					_84717_info.get()._field_ok=false;
				};
				_84717_info.get()._field_setter=_85121_token;
				if (((_85114_i + 1LL) >= _84639_tokens.len())) {
					_84717_info.get()._field_r=nullptr;
					_84717_info.get()._field_ok=_1d6762d51_IsPostfixOp(_84717_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1c32b8ca5;
				};
				_84717_info.get()._field_r=_84639_tokens.slice((_85114_i + 1LL));
				if (_1d6762d51_IsPostfixOp(_84717_info.get()._field_setter.get()._field_Kind)) {
					if ((_84717_info.get()._field_r.len() > 0LL)) {
						_1c09c75b5_pushErr(&(*_self_), _84717_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84717_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1c32b8ca5;
			}
			_iter_next_1c32b8ca5:;
			++it;
			_85114_i++;
			goto _iter_begin_1c32b8ca5;
		}
		_iter_end_1c32b8ca5:;
	};
	return _84717_info;
}



inline jule::Ptr<_1be3a525d_AssignLeft> _1c09d0744_buildAssignL(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _89436_tokens) {
	jule::Ptr<_1be3a525d_AssignLeft> _89517_l = jule::new_ptr<_1be3a525d_AssignLeft>(_1be3a525d_AssignLeft{._field_Token=_89436_tokens[0LL], });;
	if ((_89436_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_89517_l.get()._field_Ident=_89517_l.get()._field_Token.get()._field_Kind;
	};
	_89517_l.get()._field_Expr=_1c09e3a10_buildExpr((*_self_)._field_p, _89436_tokens);
	return _89517_l;
}



inline jule::Slice<jule::Ptr<_1be3a525d_AssignLeft>> _1c09d0a52_buildAssignLs(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>& _90537_parts) {
	jule::Slice<jule::Ptr<_1be3a525d_AssignLeft>> _90617_lefts = nullptr;;
	{
		auto &expr = _90537_parts;
		auto it = expr.begin();
		_iter_begin_1c32c2495:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _90721_part = *it;
			{
				jule::Ptr<_1be3a525d_AssignLeft> _90821_l = _1c09d0744_buildAssignL(&(*_self_), _90721_part);;
				_90617_lefts = jule::alloc_for_append(_90617_lefts,1);_90617_lefts.__push(_90821_l);;
			}
			_iter_next_1c32c2495:;
			++it;
			goto _iter_begin_1c32c2495;
		}
		_iter_end_1c32c2495:;
	};
	return _90617_lefts;
}



inline std::tuple<jule::Ptr<_1be3a579c_AssignSt>,jule::Bool> _1c09d0d60_buildPlainAssign(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _91540_tokens) {
	jule::Ptr<_1c09de148_assignInfo> _91617_info = _1c09d0436_buildAssignInfo(&(*_self_), _91540_tokens);;
	if ((!(_91617_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1be3a579c_AssignSt> _92117_assign = jule::new_ptr<_1be3a579c_AssignSt>(_1be3a579c_AssignSt{._field_Setter=_91617_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _92518_parts;;
	jule::Slice<_1d6435804_Log> _92525_errs;;
	std::tie(_92518_parts,_92525_errs) = _1c09e1755_parts(_91617_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92525_errs);
		return std::make_tuple(nullptr,false);
	};
	_92117_assign.get()._field_Left=_1c09d0a52_buildAssignLs(&(*_self_), _92518_parts);
	if ((_91617_info.get()._field_r != nullptr)) {
		_92117_assign.get()._field_Right=_1c09e3a10_buildExpr((*_self_)._field_p, _91617_info.get()._field_r);
	};
	return std::make_tuple(_92117_assign,true);
}



inline std::tuple<jule::Ptr<_1be3a579c_AssignSt>,jule::Bool> _1c09d116d_buildDeclAssign(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _93938_tokens) {
	if ((_93938_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_93938_tokens=_93938_tokens.slice(1LL);
	jule::Ptr<_1d675d511_Token> _94517_token = _93938_tokens[0LL];;
	if (((_94517_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_94517_token.get()._field_Kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1be3a579c_AssignSt> _95017_assign = jule::new_ptr<_1be3a579c_AssignSt>(_1be3a579c_AssignSt{._field_Declarative=true, });;
	jule::I64 _95417_i = 0LL;;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _95517_rang = _1c09e0bd8_range(_95417_i,jule::Str("(", 1),jule::Str(")", 1),_93938_tokens);;
	if ((_95517_rang == nullptr)) {
		_1c09c75b5_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95417_i + 1LL) < _93938_tokens.len())) {
		_95017_assign.get()._field_Setter=_93938_tokens[_95417_i];
		(_95417_i)++;
		jule::Slice<jule::Ptr<_1d675d511_Token>> _96221_exprTokens = _93938_tokens.slice(_95417_i);;
		_95017_assign.get()._field_Right=_1c09e3a10_buildExpr((*_self_)._field_p, _96221_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _96718_parts;;
	jule::Slice<_1d6435804_Log> _96725_errs;;
	std::tie(_96718_parts,_96725_errs) = _1c09e1755_parts(_95517_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96725_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96718_parts;
		auto it = expr.begin();
		_iter_begin_1c32cd35d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _97321_part = *it;
			{
				jule::Bool _97421_isMut = false;;
				jule::Bool _97521_isRef = false;;
				_94517_token=_97321_part[0LL];
				if ((_94517_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_97421_isMut=true;
					_97321_part=_97321_part.slice(1LL);
					if ((_97321_part.len() == 0LL)) {
						_1c09c75b5_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1c32cd35d;
					};
				};
				if (((_97321_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_97321_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_97521_isRef=true;
					_97321_part=_97321_part.slice(1LL);
					if ((_97321_part.len() == 0LL)) {
						_1c09c75b5_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1c32cd35d;
					};
				};
				if ((((_97321_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97321_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_97321_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1c09c75b5_pushErr(&(*_self_), _94517_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1c32cd35d;
				};
				jule::Ptr<_1be3a525d_AssignLeft> _100321_l = _1c09d0744_buildAssignL(&(*_self_), _97321_part);;
				_100321_l.get()._field_Mutable=_97421_isMut;
				_100321_l.get()._field_Reference=_97521_isRef;
				_95017_assign.get()._field_Left = jule::alloc_for_append(_95017_assign.get()._field_Left,1);_95017_assign.get()._field_Left.__push(_100321_l);;
			}
			_iter_next_1c32cd35d:;
			++it;
			goto _iter_begin_1c32cd35d;
		}
		_iter_end_1c32cd35d:;
	};
	return std::make_tuple(_95017_assign,true);
}



inline std::tuple<jule::Ptr<_1be3a579c_AssignSt>,jule::Bool> _1c09d147b_buildAssignSt(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _101237_tokens) {
	jule::Ptr<_1be3a579c_AssignSt> _101257_st = jule::Ptr<_1be3a579c_AssignSt>();
	jule::Bool _101272_ok = jule::Bool();
	if ((!(_1c09de4de_checkAssignTokens(_101237_tokens)))) {
		_101257_st = nullptr;
		_101272_ok = false;
		return std::make_tuple(_101257_st,_101272_ok);
	};
	{
		auto &_match_expr{ _101237_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c32d7147:;
			{
				std::tie(_101257_st,_101272_ok) = _1c09d116d_buildDeclAssign(&(*_self_), _101237_tokens);
			}
		}
		else {
			_case_begin_1c32d6c3a:;
			{
				std::tie(_101257_st,_101272_ok) = _1c09d0d60_buildPlainAssign(&(*_self_), _101237_tokens);
			}
		}
		_match_end_1c32d6bd5:;
	};
	return std::make_tuple(_101257_st,_101272_ok);
}



inline jule::Ptr<_1be39b8d6_UseExpr> _1c09d1789_buildUseExpr(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _102736_tokens) {
	if ((_102736_tokens.len() == 1LL)) {
		_1c09c75b5_pushErr(&(*_self_), _102736_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1be39b8d6_UseExpr> _103217_ue = jule::new_ptr<_1be39b8d6_UseExpr>(_1be39b8d6_UseExpr{._field_Token=_102736_tokens[0LL], });;
	_102736_tokens=_102736_tokens.slice(1LL);
	_103217_ue.get()._field_Expr=_1c09e3a10_buildExpr((*_self_)._field_p, _102736_tokens);
	return _103217_ue;
}



inline jule::Any _1c09d1a97_buildSt(_1c09c63c7_scopeParser* _self_, jule::Ptr<_1c09c5a9c_stmt>& _104031_st) {
	jule::Ptr<_1d675d511_Token> _104117_token = _104031_st.get()._field_tokens[0LL];;
	if ((_104117_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104322_s;;
		jule::Bool _104325_ok;;
		std::tie(_104322_s,_104325_ok) = _1c09d0128_buildIdSt(&(*_self_), _104031_st.get()._field_tokens);
		if (_104325_ok) {
			return _104322_s;
		};
	};
	jule::Ptr<_1be3a579c_AssignSt> _104918_s;;
	jule::Bool _104921_ok;;
	std::tie(_104918_s,_104921_ok) = _1c09d147b_buildAssignSt(&(*_self_), _104031_st.get()._field_tokens);
	if (_104921_ok) {
		return static_cast<jule::Any>(_104918_s);
	};
	{
		auto &_match_expr{ _104117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c32dc27e:;
			{
				return static_cast<jule::Any>(_1c09d1789_buildUseExpr(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1c32dc04d:;
			{
				return static_cast<jule::Any>(_1c09c8583_buildVarSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1c32dc647:;
			{
				return static_cast<jule::Any>(_1c09c8891_buildRetSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1c32dc6ad:;
			{
				return static_cast<jule::Any>(_1c09cb2cd_buildIterSt(&(*_self_), _104031_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1c32dc724:;
			{
				return static_cast<jule::Any>(_1c09cb5db_buildBreakSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1c32dc78a:;
			{
				return static_cast<jule::Any>(_1c09cb8e9_buildContSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1c32dc801:;
			{
				return static_cast<jule::Any>(_1c09cc323_buildIfElseChain(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1c32dc867:;
			{
				return static_cast<jule::Any>(_1c09cc631_buildCoCallSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1c32dc8cd:;
			{
				return static_cast<jule::Any>(_1c09cc93e_buildGotoSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c32dc944:;
			{
				return static_cast<jule::Any>(_1c09ccc4c_buildFallSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c32dc9aa:;
			{
				return static_cast<jule::Any>(_1c09cd05a_buildTypeAliasSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1c32dca21:;
			{
				return static_cast<jule::Any>(_1c09ce6ee_buildMatchCase(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1c32dca87:;
			{
				return static_cast<jule::Any>(_1c09cea0c_buildScopeSt(&(*_self_), _104031_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c32dcaed:;
			{
				if ((_104117_token.get()._field_Kind == jule::Str("{", 1))) {
					return static_cast<jule::Any>(_1c09cea0c_buildScopeSt(&(*_self_), _104031_st.get()._field_tokens));
				};
			}
		}
		_match_end_1c32dc46b:;
	};
	jule::Ptr<_1be39b045_Expr> _109017_expr = _1c09e3a10_buildExpr((*_self_)._field_p, _104031_st.get()._field_tokens);;
	if ((_109017_expr != nullptr)) {
		return static_cast<jule::Any>(_109017_expr);
	};
	_1c09c75b5_pushErr(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1c09d1db6_build(_1c09c63c7_scopeParser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _109829_tokens, jule::Ptr<_1be3a6d42_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1c09c5e43_splitStmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while (((!(_1c09c7296_isLastSt(&(*_self_)))) && (!(_1c09c7032_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1c09c5a9c_stmt> _110621_st = _1c09c7dbd_next(&(*_self_));;
			jule::Any _110721_data = _1c09d1a97_buildSt(&(*_self_), _110621_st);;
			if ((_110721_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_1be3a6737_Stmt{._field_Token=_110621_st.get()._field_tokens[0LL], ._field_Data=_110721_data});;
			};
			if (_1c09c6cbd_stopped(&(*_self_))) {
				goto _iter_end_1c2c60065;
			};
		}
	_iter_next_1c2c60065:;
	}
	_iter_end_1c2c60065:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c09c63c7_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1c09d30d7_pushErr(_1c09d27e0_exprBuilder* _self_, jule::Ptr<_1d675d511_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1c09e33d3_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,jule::Any(_4454_args));
}



inline void _1c09d3406_pushSuggestion(_1c09d27e0_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1c09e3702_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,jule::Any(_4946_args));
}



inline jule::Ptr<_1be39bbc2_TupleExpr> _1c09d3714_buildTuple(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>& _5334_parts) {
	jule::Ptr<_1be39bbc2_TupleExpr> _5417_tuple = jule::new_ptr<_1be39bbc2_TupleExpr>(_1be39bbc2_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1be39b045_Expr>>::alloc(0LL,_5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_1c2c8078e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1c09dc234_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_1c2c8078e:;
			++it;
			goto _iter_begin_1c2c8078e;
		}
		_iter_end_1c2c8078e:;
	};
	return _5417_tuple;
}



inline jule::Ptr<_1be39c079_LitExpr> _1c09d3a22_buildLit(_1c09d27e0_exprBuilder* _self_, jule::Ptr<_1d675d511_Token> _6327_token) {
	return jule::new_ptr<_1be39c079_LitExpr>(_1be39c079_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c09d3d30_buildPrimitiveType(_1c09d27e0_exprBuilder* _self_, jule::Ptr<_1d675d511_Token>& _7038_token) {
	return _1c0a03206_buildPrimType(_7038_token);
}



inline jule::Any _1c09d413d_buildSingle(_1c09d27e0_exprBuilder* _self_, jule::Ptr<_1d675d511_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c2c824c7:;
			{
				return static_cast<jule::Any>(_1c09d3a22_buildLit(&(*_self_), _7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c2c8253d:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return static_cast<jule::Any>(jule::new_ptr<_1be39db6e_VariadicExpr>(_1be39db6e_VariadicExpr{._field_Token=_7434_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1c2c825a4:;
			{
				return static_cast<jule::Any>(_1c09dd4dd_buildIdentExpr(_7434_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c2c8261a:;
			{
				return static_cast<jule::Any>(_1c09d3d30_buildPrimitiveType(&(*_self_), _7434_token));
			}
		}
		_match_end_1c2c814e8:;
	};
	_1c09d30d7_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1be39d0ad_IdentExpr> _1c09d444b_buildCppLinkedIdent(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1c09d30d7_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09d3406_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d675d511_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09d30d7_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09d3406_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be39d0ad_IdentExpr> _10917_expr = _1c09dd4dd_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;
}



inline jule::Ptr<_1be39d7b7_UnaryExpr> _1c09d4759_buildUnary(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _11433_tokens) {
	jule::Ptr<_1d675d511_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1c09d30d7_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1d675dc1a_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1c09d30d7_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind)}));
		return nullptr;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_1be39d7b7_UnaryExpr>(_1be39d7b7_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1c09dc234_buildFromTokens(&(*_self_), _11433_tokens)});
}



inline jule::Ptr<_1be39e851_SubIdentExpr> _1c09d4a67_buildObjSubIdent(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_1d675d511_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1c09d30d7_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1be39e851_SubIdentExpr>(_1be39e851_SubIdentExpr{._field_Expr=_1c09dc234_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});
}



inline jule::Ptr<_1be39e3cd_NsSelectionExpr> _1c09d4d75_buildNsSubIdent(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _15039_tokens) {
	jule::Ptr<_1be39e3cd_NsSelectionExpr> _15117_ns = jule::new_ptr<_1be39e3cd_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_1c2c8dcec:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1c09d30d7_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1c09d3406_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1c09d30d7_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1c09d3406_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c2c8dcec:;
			++it;
			_15214_i++;
			goto _iter_begin_1c2c8dcec;
		}
		_iter_end_1c2c8dcec:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c09d5183_buildType(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_1be396a24_TypeDecl> _17118_t;;
	jule::Bool _17121_ok;;
	std::tie(_17118_t,_17121_ok) = _1c09e4cec_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
	if ((!(_17121_ok))) {
		_1c09d30d7_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_1c09d30d7_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;
}



inline jule::Any _1c09d5491_buildSubIdent(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_1d675d511_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1c2c96222:;
			{
				return static_cast<jule::Any>(_1c09d4a67_buildObjSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1c2c96750:;
			{
				return static_cast<jule::Any>(_1c09d4d75_buildNsSubIdent(&(*_self_), _18337_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c2c967b6:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return static_cast<jule::Any>(_1c09d5183_buildType(&(*_self_), _18337_tokens));
				};
			}
		}
		_match_end_1c2c965a7:;
	};
	_1c09d30d7_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1be39db6e_VariadicExpr> _1c09d579e_buildVariadic(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _20136_tokens) {
	jule::Ptr<_1d675d511_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_1be39db6e_VariadicExpr>(_1be39db6e_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1c09dc234_buildFromTokens(&(*_self_), _20136_tokens)});
}



inline jule::Any _1c09d5aac_buildOpRight(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _21036_tokens) {
	jule::Ptr<_1d675d511_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1c2c9a941:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _1c09dbb18_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type_is<jule::Ptr<_1be3a0313_FnCallExpr>>()) {
						_case_begin_1c2c9bd93:;
						{
							_21521_d.operator jule::Ptr<_1be3a0313_FnCallExpr>().get()._field_Exception=jule::new_ptr<_1be3a6d42_ScopeTree>(_1be3a6d42_ScopeTree{._field_Deferred=true, });
							return _21521_d;
						}
					}
					_match_end_1c2c9bce9:;
				};
			}
		}
		_match_end_1c2c9a897:;
	};
	_1c09d30d7_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1be39b331_RangeExpr> _1c09d5ddc_buildBetweenParentheses(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1c09d30d7_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1c09d3406_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_1be39b331_RangeExpr>(_1be39b331_RangeExpr{._field_Expr=_1c09dc234_buildFromTokens(&(*_self_), _23146_tokens)});
}



inline jule::Ptr<_1be39e026_CastExpr> _1c09d620b_tryBuildCast(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_1c2ca056c:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c2ca1480:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1c2ca056c;
							}
						}
						else {
							_case_begin_1c2ca175a:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1c2ca154b:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1c2ca056c;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1d675d511_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_1d675d511_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1d675d511_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1be39e026_CastExpr> _27721_cast = jule::new_ptr<_1be39e026_CastExpr>(_1be39e026_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1c09d30d7_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1c09d3406_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1c09d30d7_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1c09d3406_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_1be396a24_TypeDecl> _29226_t;;
					jule::Bool _29229_ok;;
					std::tie(_29226_t,_29229_ok) = _1c09e4cec_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1c09d30d7_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1c09e0bd8_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_1c09dc234_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;
			}
			_iter_next_1c2ca056c:;
			++it;
			_24513_i++;
			goto _iter_begin_1c2ca056c;
		}
		_iter_end_1c2ca056c:;
	};
	return nullptr;
}



inline void _1c09d65c4_pushArg(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1be39b045_Expr>>& _31731_args, jule::Slice<jule::Ptr<_1d675d511_Token>> _31750_tokens, jule::Ptr<_1d675d511_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1c09d30d7_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09d3406_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_1c09dc234_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_1be39b045_Expr>> _1c09d68d2_buildArgs(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_1c2caeaed:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c2cb08e0:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1c2cb0bba:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1c2cb09ab:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1c2caeaed;
				};
				_1c09d65c4_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_1c2caeaed:;
			++it;
			_33613_i++;
			goto _iter_begin_1c2caeaed;
		}
		_iter_end_1c2caeaed:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1c09d65c4_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_1c09d65c4_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;
}



inline jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _1c09d6be0_buildCallGenerics(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _37418_parts;;
	jule::Slice<_1d6435804_Log> _37425_errs;;
	std::tie(_37418_parts,_37425_errs) = _1c09e1755_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>::alloc(0LL,_37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_1c2cb6055:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1c2cb6055;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_1be396a24_TypeDecl> _38222_generic;;
				std::tie(_38222_generic,std::ignore) = _1c09e4cec_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
				if ((_38121_j < _37721_part.len())) {
					_1c09d30d7_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1c2cb6055:;
			++it;
			goto _iter_begin_1c2cb6055;
		}
		_iter_end_1c2cb6055:;
	};
	return _37517_generics;
}



inline jule::Ptr<_1be3a0313_FnCallExpr> _1c09d7141_buildFnCall(_1c09d27e0_exprBuilder* _self_, jule::Ptr<_1d675d511_Token>& _39235_token, jule::Slice<jule::Ptr<_1d675d511_Token>>& _39255_expr, jule::Slice<jule::Ptr<_1d675d511_Token>>& _39276_args) {
	return jule::new_ptr<_1be3a0313_FnCallExpr>(_1be3a0313_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_1c09dc234_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_1c09d68d2_buildArgs(&(*_self_), _39276_args), });
}



inline jule::Any _1c09d744e_buildParenthesesRange(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _40045_tokens) {
	jule::Ptr<_1d675d511_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c2cba422:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c2cbabb4:;
						{
							jule::Ptr<_1be39e026_CastExpr> _40625_expr = _1c09d620b_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return static_cast<jule::Any>(_40625_expr);
							};
						}
					}
					_match_end_1c2cba9e9:;
				};
			}
		}
		_match_end_1c2cba378:;
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _41234_args_tokens;;
	std::tie(_41218_exprTokens,_41234_args_tokens) = _1c09e0e80_rangeLast(_40045_tokens);
	if ((_41218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1c09d5ddc_buildBetweenParentheses(&(*_self_), _41234_args_tokens));
	};
	return static_cast<jule::Any>(_1c09d7141_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens));
}



inline jule::Ptr<_1be39c783_UnsafeExpr> _1c09d775c_buildUnsafeExpr(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _42138_tokens) {
	jule::Ptr<_1d675d511_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _42517_rangeTokens = _1c09e0bd8_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1c09d30d7_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1be39c783_UnsafeExpr>(_1be39c783_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1c09dc234_buildFromTokens(&(*_self_), _42517_rangeTokens)});
}



inline jule::Ptr<_1be3a8838_FnDecl> _1c09d7a6a_buildAnonFn(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _43635_tokens) {
	jule::Ptr<_1be3a8838_FnDecl> _43717_f = _1c09e8e44_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_1be3a8b8a_IsAnon(_43717_f.ptr())))) {
		_1c09d30d7_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09d3406_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;
}



inline jule::Any _1c09d7d78_buildUnsafe(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c2cc21a4:;
			{
				return static_cast<jule::Any>(_1c09d7a6a_buildAnonFn(&(*_self_), _44535_tokens));
			}
		}
		else {
			_case_begin_1c2cc269e:;
			{
				return static_cast<jule::Any>(_1c09d775c_buildUnsafeExpr(&(*_self_), _44535_tokens));
			}
		}
		_match_end_1c2cc25e4:;
	};
}



inline void _1c09d8241_pushRangeLitPart(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _45539_part, jule::Ptr<_1d675d511_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1c09d30d7_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09d3406_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c09d8571_getBraceRangeLitExprParts(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_1c2cc6d46:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c2cc7b38:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1c2cc7e13:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1c2cc7c04:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1c2cc6d46;
				};
				_1c09d8241_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_1c2cc6d46:;
			++it;
			_47713_i++;
			goto _iter_begin_1c2cc6d46;
		}
		_iter_end_1c2cc6d46:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1c09d8241_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_1c09d8241_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;
}



inline jule::Ptr<_1be3a0c92_FieldExprPair> _1c09d8890_buildFieldExprPair(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1c09d30d7_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3a0c92_FieldExprPair> _51317_pair = jule::new_ptr<_1be3a0c92_FieldExprPair>(_1be3a0c92_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1c09dc234_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;
}



inline jule::Ptr<_1be39b045_Expr> _1c09d8b9d_buildStructLitExpr(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _52142_tokens) {
	jule::Ptr<_1d675d511_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1be39b045_Expr>(_1be39b045_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(_1c09d8890_buildFieldExprPair(&(*_self_), _52142_tokens))});
		};
	};
	return _1c09dc234_buildFromTokens(&(*_self_), _52142_tokens);
}



inline jule::Slice<jule::Ptr<_1be39b045_Expr>> _1c09d8eab_buildStructLitExprs(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _53717_parts = _1c09d8571_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1be39b045_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_1be39b045_Expr>>::alloc(0LL,_53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_1c2cd267b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1c09d8b9d_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_1c2cd267b:;
			++it;
			goto _iter_begin_1c2cd267b;
		}
		_iter_end_1c2cd267b:;
	};
	return _54217_pairs;
}



inline jule::Ptr<_1be3a14e0_StructLit> _1c09d92db_buildTypedStructLiteral(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_1be396a24_TypeDecl> _55118_t;;
	jule::Bool _55121_ok;;
	std::tie(_55118_t,_55121_ok) = _1c09e4cec_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
	if ((!(_55121_ok))) {
		return nullptr;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1c09d30d7_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_1d675d511_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1c09d30d7_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1be3a14e0_StructLit>(_1be3a14e0_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1c09d8eab_buildStructLitExprs(&(*_self_), _54946_tokens)});
}



inline jule::Ptr<_1be39b045_Expr> _1c09d960a_buildBraceLitPart(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_1d675d511_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _57425_r;;
	std::tie(_57418_l,_57425_r) = _1c09dce9e_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_1be39b045_Expr>(_1be39b045_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be3a247a_KeyValPair>(_1be3a247a_KeyValPair{._field_Key=_1c09dc234_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_1c09dc234_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}))});
	};
	return _1c09dc234_buildFromTokens(&(*_self_), _57341_tokens);
}



inline jule::Ptr<_1be3a1963_BraceLit> _1c09d9918_buildBraceLit(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _59037_tokens) {
	jule::Ptr<_1be3a1963_BraceLit> _59117_lit = jule::new_ptr<_1be3a1963_BraceLit>(_1be3a1963_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _59617_parts = _1c09d8571_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1be39b045_Expr>>::alloc(0LL,_59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_1c2cdb773:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1c09d960a_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_1c2cdb773:;
			++it;
			goto _iter_begin_1c2cdb773;
		}
		_iter_end_1c2cdb773:;
	};
	return _59117_lit;
}



inline jule::Any _1c09d9c26_buildBraceRange(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_1d675d511_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN;;
	std::tie(_61018_exprTokens,_61030_rangeN) = _1c09dd785_getRangeExprTokens(_60939_tokens);
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1c2cdd027:;
			{
				return static_cast<jule::Any>(_1c09d9918_buildBraceLit(&(*_self_), _60939_tokens));
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1c2cdd09e:;
			{
				_1c09d30d7_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c2cdce8e:;
	};
	jule::Ptr<_1d675d511_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1c09dbb18_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type_is<jule::Ptr<_1be3a0313_FnCallExpr>>()) {
				_case_begin_1c2ce158b:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_1d675d511_Token>> _63225_rangeTokens = _1c09e0bd8_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_1be3a0313_FnCallExpr> _63325_model = _62421_d.operator jule::Ptr<_1be3a0313_FnCallExpr>();;
					if (_1be3a08da_Ignored(_63325_model.ptr())) {
						_1c09d30d7_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1c09d3406_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1c09e444a_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;
				}
			}
			else {
				_case_begin_1c2ce14ae:;
				{
					_1c09d30d7_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1c2ce126c:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c2ce5529:;
			{
				return _1c09d7d78_buildUnsafe(&(*_self_), _60939_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c2ce5590:;
			{
				return static_cast<jule::Any>(_1c09d7a6a_buildAnonFn(&(*_self_), _60939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c2ce5606:;
			{
				return static_cast<jule::Any>(_1c09d92db_buildTypedStructLiteral(&(*_self_), _60939_tokens));
			}
		}
		else {
			_case_begin_1c2ce1602:;
			{
				_1c09d30d7_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c2ce003a:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c09da034_getEnumerableParts(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _66318_parts;;
	jule::Slice<_1d6435804_Log> _66325_errors;;
	std::tie(_66318_parts,_66325_errors) = _1c09e1755_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;
}



inline jule::Ptr<_1be3a28ed_SliceExpr> _1c09da342_buildSlice(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _66833_tokens) {
	jule::Ptr<_1be3a28ed_SliceExpr> _66917_slc = jule::new_ptr<_1be3a28ed_SliceExpr>(_1be3a28ed_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _67417_parts = _1c09da034_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1be39b045_Expr>>::alloc(0LL,_67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_1c2ceae9c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1c2ceae9c;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1c09dc234_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_1c2ceae9c:;
			++it;
			goto _iter_begin_1c2ceae9c;
		}
		_iter_end_1c2ceae9c:;
	};
	return _66917_slc;
}



inline jule::Ptr<_1be3a328e_IndexingExpr> _1c09da793_buildIndexing(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_1d675d511_Token>> _69113_tokens, jule::Ptr<_1d675d511_Token> _69135_errorToken) {
	jule::Ptr<_1d675d511_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1c09d30d7_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be39b045_Expr> _69817_expr = _1c09dc234_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1be39b045_Expr> _70217_index = _1c09dc234_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1be3a328e_IndexingExpr>(_1be3a328e_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});
}



inline jule::Ptr<_1be3a3899_SlicingExpr> _1c09dad37_buildSlicing(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_1d675d511_Token>>& _71463_start, jule::Slice<jule::Ptr<_1d675d511_Token>>& _71514_to, jule::Ptr<_1d675d511_Token>& _71533_errorToken, jule::Ptr<_1d675d511_Token> _71557_end) {
	jule::Ptr<_1be3a3899_SlicingExpr> _71617_slc = jule::new_ptr<_1be3a3899_SlicingExpr>(_1be3a3899_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_1c09dc234_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_1c09dc234_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_1c09dc234_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;
}



inline jule::Any _1c09db145_buildBracketRange(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _73040_tokens) {
	jule::Ptr<_1d675d511_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN;;
	std::tie(_73218_exprTokens,_73230_rangeN) = _1c09dd785_getRangeExprTokens(_73040_tokens);
	if ((_73218_exprTokens.len() == 0LL)) {
		return static_cast<jule::Any>(_1c09da342_buildSlice(&(*_self_), _73040_tokens));
	} else if ((_73230_rangeN > 0LL)) {
		_1c09d30d7_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_1d675d511_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _74829_to;;
	std::tie(_74818_start,_74829_to) = _1c09dce9e_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return static_cast<jule::Any>(_1c09dad37_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]));
	};
	return static_cast<jule::Any>(_1c09da793_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken));
}



inline jule::Any _1c09db453_buildData(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c2d07dee:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c2d07e76:;
			{
				return _1c09d413d_buildSingle(&(*_self_), _75533_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c2d07eed:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return static_cast<jule::Any>(_1c09d444b_buildCppLinkedIdent(&(*_self_), _75533_tokens));
				};
			}
		}
		_match_end_1c2d07b8a:;
	};
	jule::Ptr<_1d675d511_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return static_cast<jule::Any>(_1c09d579e_buildVariadic(&(*_self_), _75533_tokens));
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c2d0b2cb:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return static_cast<jule::Any>(_1c09d5183_buildType(&(*_self_), _75533_tokens));
					};
				};
				return static_cast<jule::Any>(_1c09d4759_buildUnary(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c2d0b353:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_1c2d0b1ee;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_1d675d511_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1c2d0b1ee;
					};
				};
				jule::Ptr<_1d675d511_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					jule::I64 _79825_delim = 0LL;;
					_79825_delim=static_cast<jule::I64>(_1c0a03547_mapColon(_75533_tokens,_79825_delim));
					if ((_79825_delim == -1LL)) {
						goto _match_end_1c2d0b1ee;
					};
				};
				return static_cast<jule::Any>(_1c09d5183_buildType(&(*_self_), _75533_tokens));
			}
		}
		_match_end_1c2d0b1ee:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c2d0b84d:;
			{
				return _1c09d5491_buildSubIdent(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c2d12a0d:;
			{
				return static_cast<jule::Any>(_1c09d5183_buildType(&(*_self_), _75533_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c2d12a74:;
			{
				return _1c09d5aac_buildOpRight(&(*_self_), _75533_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c2d12ada:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c2d14427:;
						{
							return _1c09d744e_buildParenthesesRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1c2d1448d:;
						{
							return _1c09d9c26_buildBraceRange(&(*_self_), _75533_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c2d14515:;
						{
							return _1c09db145_buildBracketRange(&(*_self_), _75533_tokens);
						}
					}
					_match_end_1c2d13d61:;
				};
			}
		}
		_match_end_1c2d0b7e8:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return static_cast<jule::Any>(_1c09d5183_buildType(&(*_self_), _75533_tokens));
	};
	_1c09d30d7_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Any _1c09db80a_buildBinop(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _83634_tokens, jule::I64 _83652_i) {
	jule::Ptr<_1d675d511_Token> _83717_op = _83634_tokens[_83652_i];;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _83817_leftTokens = _83634_tokens.slice(0LL,_83652_i);;
	if ((_1c09dc586_isTypeOp(_83717_op.get()._field_Kind) && _1c09dc872_isTypeRange(_83817_leftTokens))) {
		return static_cast<jule::Any>(_1c09d5183_buildType(&(*_self_), _83634_tokens));
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _84317_rightTokens = _83634_tokens.slice((_83652_i + 1LL));;
	if ((_83817_leftTokens.len() == 0LL)) {
		_1c09d30d7_pushErr(&(*_self_), _83634_tokens[_83652_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09d3406_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_84317_rightTokens.len() == 0LL)) {
		_1c09d30d7_pushErr(&(*_self_), _83634_tokens[_83652_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09d3406_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return static_cast<jule::Any>(jule::new_ptr<_1be39ecc4_BinopExpr>(_1be39ecc4_BinopExpr{._field_Left=_1c09dc234_buildFromTokens(&(*_self_), _83817_leftTokens), ._field_Right=_1c09dc234_buildFromTokens(&(*_self_), _84317_rightTokens), ._field_Op=_83717_op}));
}



inline jule::Any _1c09dbb18_build(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _86129_tokens) {
	jule::I64 _86213_i = _1c09dd246_findLowestPrecOp(_86129_tokens);;
	if ((_86213_i == -1LL)) {
		return _1c09db453_buildData(&(*_self_), _86129_tokens);
	};
	return _1c09db80a_buildBinop(&(*_self_), _86129_tokens,_86213_i);
}



inline jule::Any _1c09dbe26_buildKind(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _86933_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _87018_parts;;
	jule::Slice<_1d6435804_Log> _87025_errors;;
	std::tie(_87018_parts,_87025_errors) = _1c09e1755_parts(_86933_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_87025_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_87025_errors);
		return nullptr;
	} else if ((_87018_parts.len() > 1LL)) {
		return static_cast<jule::Any>(_1c09d3714_buildTuple(&(*_self_), _87018_parts));
	};
	return _1c09dbb18_build(&(*_self_), _86933_tokens);
}



inline jule::Ptr<_1be39b045_Expr> _1c09dc234_buildFromTokens(_1c09d27e0_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _88038_tokens) {
	if ((_88038_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1be39b045_Expr>(_1be39b045_Expr{._field_Token=_88038_tokens[0LL], ._field_End=_88038_tokens[(_88038_tokens.len() - 1LL)], ._field_Kind=_1c09dbe26_buildKind(&(*_self_), _88038_tokens)});
}







std::ostream &operator<<(std::ostream &_Stream, _1c09d27e0_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c09de148_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1c09e2ca6_stop(_1c09e2976_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1c09e301a_stopped(_1c09e2976_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1c09e33d3_pushErr(_1c09e2976_parser* _self_, jule::Ptr<_1d675d511_Token> _28726_token, jule::Str _28741_fmt, jule::Slice<jule::Any> _28754_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1c09e1dd7_compilerErr(_28726_token,_28741_fmt,jule::Any(_28754_args)));;
}



inline void _1c09e3702_pushSuggestion(_1c09e2976_parser* _self_, jule::Str _29233_fmt, jule::Slice<jule::Any> _29246_args) {
	{
		_1c09e2316_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29233_fmt,jule::Any(_29246_args));
	};
}



inline jule::Ptr<_1be39b045_Expr> _1c09e3a10_buildExpr(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _29634_tokens) {
	jule::Ptr<_1c09d27e0_exprBuilder> _29717_ep = jule::new_ptr<_1c09d27e0_exprBuilder>(_1c09d27e0_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1be39b045_Expr> _30017_expr = _1c09dc234_buildFromTokens(_29717_ep.ptr(), _29634_tokens);;
	return _30017_expr;
}



inline jule::Ptr<_1be36332b_Directive> _1c09e3d1d_buildDirective(_1c09e2976_parser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _30437_tokens) {
	if ((_30437_tokens.len() == 1LL)) {
		_1c09e33d3_pushErr(&(*_self_), _30437_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_30437_tokens[1LL].get()._field_Column != (_30437_tokens[0LL].get()._field_Column + 1LL))) {
		_1c09e33d3_pushErr(&(*_self_), _30437_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1be36332b_Directive>(_1be36332b_Directive{._field_Tag=_30437_tokens[1LL], ._field_Args=_30437_tokens.slice(2LL)});
}



inline void _1c09e4093_pushDirective(_1c09e2976_parser* _self_, jule::Ptr<_1be36332b_Directive> _31936_d) {
	if ((_31936_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1c2d49c32:;
		if (it != expr.end()) {
			jule::Ptr<_1be36332b_Directive> _32416_pd = *it;
			{
				if ((_31936_d.get()._field_Tag.get()._field_Kind == _32416_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1c2d49c32:;
			++it;
			goto _iter_begin_1c2d49c32;
		}
		_iter_end_1c2d49c32:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31936_d);;
}



inline jule::Ptr<_1be3a6d42_ScopeTree> _1c09e444a_buildScope(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _33235_tokens, jule::Ptr<_1d675d511_Token> _33257_end) {
	jule::Ptr<_1be3a6d42_ScopeTree> _33317_s = _1c09c497a_newScope();;
	_33317_s.get()._field_End=_33257_end;
	_1c09c63c7_scopeParser _33517_sp = _1c09c63c7_scopeParser{._field_p=_self_, };;
	_1c09d1db6_build(&_33517_sp, _33235_tokens,_33317_s);
	return _33317_s;
}



inline std::tuple<jule::Ptr<_1be396a24_TypeDecl>,jule::Bool> _1c09e489b__buildType(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _34242_tokens, jule::I64* _34313_i, jule::Bool _34322_err) {
	_1c0a03a53_typeBuilder _34417_tb = _1c0a03a53_typeBuilder{._field_p=_self_, ._field_tokens=_34242_tokens, ._field_i=_34313_i, ._field_err=_34322_err};;
	jule::Ptr<_1be396a24_TypeDecl> _35018_decl;;
	jule::Bool _35024_ok;;
	std::tie(_35018_decl,_35024_ok) = _1c0a06e0d_build(&_34417_tb);
	return std::make_tuple(_35018_decl,_35024_ok);
}



inline std::tuple<jule::Ptr<_1be396a24_TypeDecl>,jule::Bool> _1c09e4cec_buildType(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _35541_tokens, jule::I64* _35613_i, jule::Bool _35622_err) {
	jule::Ptr<_1d675d511_Token> _35713_token = _35541_tokens[(*(_35613_i))];;
	jule::Ptr<_1be396a24_TypeDecl> _35818_t;;
	jule::Bool _35821_ok;;
	std::tie(_35818_t,_35821_ok) = _1c09e489b__buildType(_self_, _35541_tokens,_35613_i,_35622_err);
	if ((_35622_err && (!(_35821_ok)))) {
		_1c09e33d3_pushErr(_self_.ptr(), _35713_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_35818_t,_35821_ok);
}



inline jule::Ptr<_1be3ad178_TypeAliasDecl> _1c09e510a_buildTypeAliasDecl(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _36543_tokens) {
	jule::I64 _36617_i = 1LL;;
	if ((_36617_i >= _36543_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3ad178_TypeAliasDecl> _37117_tad = jule::new_ptr<_1be3ad178_TypeAliasDecl>(_1be3ad178_TypeAliasDecl{._field_Token=_36543_tokens[1LL], ._field_Ident=_36543_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_1d675d511_Token> _37517_token = _36543_tokens[_36617_i];;
	if ((_37517_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _37517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36617_i)++;
	if ((_36617_i >= _36543_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	_37517_token=_36543_tokens[_36617_i];
	if ((_37517_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	(_36617_i)++;
	if ((_36617_i >= _36543_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _36543_tokens[(_36617_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _37117_tad;
	};
	jule::Ptr<_1be396a24_TypeDecl> _39618_t;;
	jule::Bool _39621_ok;;
	std::tie(_39618_t,_39621_ok) = _1c09e4cec_buildType(_self_, _36543_tokens,(&(_36617_i)),true);
	_37117_tad.get()._field_Kind=_39618_t;
	if ((_39621_ok && (_36617_i < _36543_tokens.len()))) {
		_1c09e33d3_pushErr(_self_.ptr(), _36543_tokens[_36617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_37117_tad.get()._field_Public=_1c0a02623_isPub(_37117_tad.get()._field_Ident);
	return _37117_tad;
}



inline void _1c09e5429_buildVarTypeAndExpr(jule::Ptr<_1c09e2976_parser> _self_, jule::Ptr<_1be3a9817_VarDecl>& _40544_v, jule::Slice<jule::Ptr<_1d675d511_Token>>& _40562_tokens) {
	jule::I64 _40617_i = 0LL;;
	jule::Ptr<_1d675d511_Token> _40717_tok = _40562_tokens[_40617_i];;
	if ((_40717_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40617_i)++;
		if (((_40617_i >= _40562_tokens.len()) || ((_40562_tokens[_40617_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_40562_tokens[_40617_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1c09e33d3_pushErr(_self_.ptr(), _40717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1be396a24_TypeDecl> _41522_t;;
		jule::Bool _41525_ok;;
		std::tie(_41522_t,_41525_ok) = _1c09e4cec_buildType(_self_, _40562_tokens,(&(_40617_i)),true);
		if (_41525_ok) {
			_40544_v.get()._field_Kind=_41522_t;
			if ((_40617_i >= _40562_tokens.len())) {
				return;;
			};
			_40717_tok=_40562_tokens[_40617_i];
		};
	};
	if ((_40717_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40717_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1c09e33d3_pushErr(_self_.ptr(), _40717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1d675d511_Token>> _43021_exprTokens = _40562_tokens.slice((_40617_i + 1LL));;
		if ((_43021_exprTokens.len() == 0LL)) {
			_1c09e33d3_pushErr(_self_.ptr(), _40717_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_40544_v.get()._field_Expr=_1c09e3a10_buildExpr(_self_, _43021_exprTokens);
	} else {
		_1c09e33d3_pushErr(_self_.ptr(), _40717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c09e5748_buildVarCommon(jule::Ptr<_1c09e2976_parser> _self_, jule::Ptr<_1be3a9817_VarDecl>& _44139_v, jule::Slice<jule::Ptr<_1d675d511_Token>> _44156_tokens) {
	_44139_v.get()._field_Token=_44156_tokens[0LL];
	if ((_44139_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _44139_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_44139_v.get()._field_Ident=_44139_v.get()._field_Token.get()._field_Kind;
	_44139_v.get()._field_Public=_1c0a02623_isPub(_44139_v.get()._field_Ident);
	_44139_v.get()._field_Kind=nullptr;
	if ((_44156_tokens.len() > 1LL)) {
		_44156_tokens=_44156_tokens.slice(1LL);
		_1c09e5429_buildVarTypeAndExpr(_self_, _44139_v,_44156_tokens);
	};
}



inline void _1c09e5b11_buildVarBegin(_1c09e2976_parser* _self_, jule::Ptr<_1be3a9817_VarDecl>& _45737_v, jule::I64& _45755_i, jule::Slice<jule::Ptr<_1d675d511_Token>>& _45764_tokens) {
	jule::Ptr<_1d675d511_Token> _45813_tok = _45764_tokens[_45755_i];;
	{
		auto &_match_expr{ _45813_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1c2d65049:;
			{
				_45737_v.get()._field_Statically=true;
				goto _case_begin_1c2d650b0;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c2d650b0:;
			{
				(_45755_i)++;
				if ((_45755_i >= _45764_tokens.len())) {
					_1c09e33d3_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45764_tokens[_45755_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45737_v.get()._field_Mutable=true;
					(_45755_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1c2d64741:;
			{
				(_45755_i)++;
				_45737_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1c2d64675:;
			{
				_1c09e33d3_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c2d644cc:;
	};
	if ((_45755_i >= _45764_tokens.len())) {
		_1c09e33d3_pushErr(&(*_self_), _45813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1be3a9817_VarDecl> _1c09e5e1e_buildVar(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _48732_tokens) {
	jule::I64 _48817_i = 0LL;;
	jule::Ptr<_1be3a9817_VarDecl> _48917_v = jule::new_ptr<_1be3a9817_VarDecl>(_1be3a9817_VarDecl{._field_Token=_48732_tokens[0LL], });;
	_1c09e5b11_buildVarBegin(_self_.ptr(), _48917_v,_48817_i,_48732_tokens);
	if ((_48817_i >= _48732_tokens.len())) {
		return nullptr;
	};
	_48732_tokens=_48732_tokens.slice(_48817_i);
	if (((_48732_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48732_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48917_v.get()._field_Reference=true;
		if ((_48732_tokens.len() == 1LL)) {
			return nullptr;
		};
		_48732_tokens=_48732_tokens.slice(1LL);
	};
	_1c09e5748_buildVarCommon(_self_, _48917_v,_48732_tokens);
	return _48917_v;
}



inline jule::Ptr<_1be3a4108_GenericDecl> _1c09e622c_buildGeneric(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _50937_tokens) {
	jule::Ptr<_1be3a4108_GenericDecl> _51017_g = jule::new_ptr<_1be3a4108_GenericDecl>(_1be3a4108_GenericDecl{._field_Token=_50937_tokens[0LL], });;
	if ((_51017_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _51017_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_51017_g.get()._field_Ident=_51017_g.get()._field_Token.get()._field_Kind;
	if ((_50937_tokens.len() > 1LL)) {
		if ((_50937_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1c09e33d3_pushErr(_self_.ptr(), _50937_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		if ((_50937_tokens.len() == 2LL)) {
			_1c09e33d3_pushErr(_self_.ptr(), _50937_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		jule::Slice<jule::Ptr<_1d675d511_Token>> _52721_constraintTokens = _50937_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _52822_parts;;
		jule::Slice<_1d6435804_Log> _52829_errors;;
		std::tie(_52822_parts,_52829_errors) = _1c09e136a_partsKind(_52721_constraintTokens,jule::Str("|", 1),true);
		if ((_52829_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52829_errors);
			return nullptr;
		};
		_51017_g.get()._field_Constraint=jule::new_ptr<_1be3a3b85_Constraint>(_1be3a3b85_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>::alloc(0LL,_52822_parts.len())});
		{
			auto &expr = _52822_parts;
			auto it = expr.begin();
			_iter_begin_1c2d717c5:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_1d675d511_Token>> _53425_part = *it;
				{
					jule::I64 _53525_i = 0LL;;
					jule::Ptr<_1be396a24_TypeDecl> _53626_kind;;
					std::tie(_53626_kind,std::ignore) = _1c09e4cec_buildType(_self_, _53425_part,(&(_53525_i)),true);
					_51017_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_51017_g.get()._field_Constraint.get()._field_Mask,1);_51017_g.get()._field_Constraint.get()._field_Mask.__push(_53626_kind);;
					if ((_53525_i < _53425_part.len())) {
						_1c09e33d3_pushErr(_self_.ptr(), _53425_part[_53525_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c2d717c5:;
				++it;
				goto _iter_begin_1c2d717c5;
			}
			_iter_end_1c2d717c5:;
		};
	};
	return _51017_g;
}



inline jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>> _1c09e65d4_buildGenerics(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _54638_tokens, jule::Ptr<_1d675d511_Token>& _54657_errorToken) {
	if ((_54638_tokens.len() == 0LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _54657_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _55218_parts;;
	jule::Slice<_1d6435804_Log> _55225_errors;;
	std::tie(_55218_parts,_55225_errors) = _1c09e1755_parts(_54638_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_55225_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_55225_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>> _55817_generics = jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>::alloc(0LL,_55218_parts.len());;
	{
		auto &expr = _55218_parts;
		auto it = expr.begin();
		_iter_begin_1c2d76e07:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _55921_part = *it;
			{
				_55817_generics = jule::alloc_for_append(_55817_generics,1);_55817_generics.__push(_1c09e622c_buildGeneric(_self_, _55921_part));;
			}
			_iter_next_1c2d76e07:;
			++it;
			goto _iter_begin_1c2d76e07;
		}
		_iter_end_1c2d76e07:;
	};
	return _55817_generics;
}



inline jule::Ptr<_1be3a7518_ParamDecl> _1c09e68e2_buildSelfParam(_1c09e2976_parser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _56637_tokens) {
	if ((_56637_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1be3a7518_ParamDecl> _57117_param = jule::new_ptr<_1be3a7518_ParamDecl>();;
	jule::I64 _57417_i = 0LL;;
	if ((_56637_tokens[_57417_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_57117_param.get()._field_Mutable=true;
		(_57417_i)++;
		if ((_57417_i >= _56637_tokens.len())) {
			_1c09e33d3_pushErr(&(*_self_), _56637_tokens[(_57417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56637_tokens[_57417_i].get()._field_Kind == jule::Str("&", 1))) {
		_57117_param.get()._field_Ident=jule::Str("&", 1);
		(_57417_i)++;
		if ((_57417_i >= _56637_tokens.len())) {
			_1c09e33d3_pushErr(&(*_self_), _56637_tokens[(_57417_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_56637_tokens[_57417_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_57117_param.get()._field_Ident+=jule::Str("self", 4);
		_57117_param.get()._field_Token=_56637_tokens[_57417_i];
		(_57417_i)++;
		if ((_57417_i < _56637_tokens.len())) {
			_1c09e33d3_pushErr(&(*_self_), _56637_tokens[_57417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _57117_param;
}



inline void _1c09e6caa_paramTypeBegin(_1c09e2976_parser* _self_, jule::Ptr<_1be3a7518_ParamDecl>& _60538_param, jule::I64& _60562_i, jule::Slice<jule::Ptr<_1d675d511_Token>>& _60571_tokens) {
	for (; (_60562_i < _60571_tokens.len()); (_60562_i)++) {
		{
			jule::Ptr<_1d675d511_Token> _60717_token = _60571_tokens[_60562_i];;
			if ((_60717_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60717_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_60538_param.get()._field_Variadic) {
				_1c09e33d3_pushErr(&(*_self_), _60717_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1c34113b4;
			};
			_60538_param.get()._field_Variadic=true;
		}
	_iter_next_1c34113b4:;
	}
	_iter_end_1c34113b4:;;
}



inline void _1c09e70c9_buildParamType(jule::Ptr<_1c09e2976_parser> _self_, jule::Ptr<_1be3a7518_ParamDecl>& _62239_param, jule::Slice<jule::Ptr<_1d675d511_Token>>& _62263_tokens) {
	jule::I64 _62317_i = 0LL;;
	_1c09e6caa_paramTypeBegin(_self_.ptr(), _62239_param,_62317_i,_62263_tokens);
	if ((_62317_i >= _62263_tokens.len())) {
		return;;
	};
	std::tie(_62239_param.get()._field_Kind,std::ignore) = _1c09e4cec_buildType(_self_, _62263_tokens,(&(_62317_i)),true);
	if ((_62317_i < _62263_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _62263_tokens[_62317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1c09e73e8_buildParamBody(jule::Ptr<_1c09e2976_parser> _self_, jule::Ptr<_1be3a7518_ParamDecl>& _63539_param, jule::Slice<jule::Ptr<_1d675d511_Token>> _63562_tokens) {
	jule::Ptr<_1d675d511_Token> _63617_tok = _63562_tokens[0LL];;
	_63539_param.get()._field_Ident=_63617_tok.get()._field_Kind;
	if ((_63562_tokens.len() == 1LL)) {
		return;;
	} else if ((_63562_tokens.len() < 3LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _63617_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_63562_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1c09e70c9_buildParamType(_self_, _63539_param,_63562_tokens);
		return;;
	};
	_63562_tokens=_63562_tokens.slice(2LL);
	_1c09e70c9_buildParamType(_self_, _63539_param,_63562_tokens);
}



inline jule::Ptr<_1be3a7518_ParamDecl> _1c09e7706_buildParam(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _65334_tokens) {
	jule::Ptr<_1be3a7518_ParamDecl> _65417_param = jule::new_ptr<_1be3a7518_ParamDecl>(_1be3a7518_ParamDecl{._field_Token=_65334_tokens[0LL], });;
	if ((_65417_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_65417_param.get()._field_Mutable=true;
		if ((_65334_tokens.len() == 1LL)) {
			_1c09e33d3_pushErr(_self_.ptr(), _65334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_65334_tokens=_65334_tokens.slice(1LL);
		_65417_param.get()._field_Token=_65334_tokens[0LL];
	};
	if ((_65334_tokens.len() >= 3LL)) {
		if (((_65417_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_65417_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_65334_tokens.len() == 1LL)) {
				_1c09e33d3_pushErr(_self_.ptr(), _65334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_65334_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_65334_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_65417_param.get()._field_Reference=true;
				_65334_tokens=_65334_tokens.slice(1LL);
				_65417_param.get()._field_Token=_65334_tokens[0LL];
			};
		};
	};
	if ((_65417_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_65417_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1c09e70c9_buildParamType(_self_, _65417_param,_65334_tokens);
	} else {
		_1c09e73e8_buildParamBody(_self_, _65417_param,_65334_tokens);
	};
	return _65417_param;
}



inline void _1c09e797b_checkParams(_1c09e2976_parser* _self_, jule::Slice<jule::Ptr<_1be3a7518_ParamDecl>>& _69635_params) {
	{
		auto &expr = _69635_params;
		auto it = expr.begin();
		_iter_begin_1c342088a:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a7518_ParamDecl> _69721_param = *it;
			{
				if ((_1be3a787b_IsSelf(_69721_param.ptr()) || (_69721_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1c342088a;
				};
				if ((_69721_param.get()._field_Token == nullptr)) {
					_1c09e33d3_pushErr(&(*_self_), _69721_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69721_param.get()._field_Kind=jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_69721_param.get()._field_Token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be3970da_IdentTypeDecl>(_1be3970da_IdentTypeDecl{._field_Token=_69721_param.get()._field_Token, ._field_Ident=_69721_param.get()._field_Token.get()._field_Kind, }))});
					_69721_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1c342088a:;
			++it;
			goto _iter_begin_1c342088a;
		}
		_iter_end_1c342088a:;
	};
}



inline jule::Slice<jule::Ptr<_1be3a7518_ParamDecl>> _1c09e7d33_buildParams(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _71636_tokens, jule::Bool _71654_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _71718_parts;;
	jule::Slice<_1d6435804_Log> _71725_errs;;
	std::tie(_71718_parts,_71725_errs) = _1c09e1755_parts(_71636_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71725_errs);
	if ((_71718_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1be3a7518_ParamDecl>> _72317_params = nullptr;;
	if ((_71654_method && (_71718_parts.len() > 0LL))) {
		jule::Ptr<_1be3a7518_ParamDecl> _72521_param = _1c09e68e2_buildSelfParam(_self_.ptr(), _71718_parts[0LL]);;
		if (((_72521_param != nullptr) && _1be3a787b_IsSelf(_72521_param.ptr()))) {
			_72317_params = jule::alloc_for_append(_72317_params,1);_72317_params.__push(_72521_param);;
			_71718_parts=_71718_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71718_parts;
		auto it = expr.begin();
		_iter_begin_1c34251a8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _73221_part = *it;
			{
				jule::Ptr<_1be3a7518_ParamDecl> _73321_param = _1c09e7706_buildParam(_self_, _73221_part);;
				if ((_73321_param != nullptr)) {
					_72317_params = jule::alloc_for_append(_72317_params,1);_72317_params.__push(_73321_param);;
				};
			}
			_iter_next_1c34251a8:;
			++it;
			goto _iter_begin_1c34251a8;
		}
		_iter_end_1c34251a8:;
	};
	_1c09e797b_checkParams(_self_.ptr(), _72317_params);
	return _72317_params;
}



inline std::tuple<jule::Ptr<_1be399b37_RetTypeDecl>,jule::Bool> _1c09e81da_buildMultiRetType(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _74342_tokens, jule::I64& _74365_i) {
	jule::Ptr<_1be399b37_RetTypeDecl> _74375_t = jule::Ptr<_1be399b37_RetTypeDecl>();
	jule::Bool _74392_ok = jule::Bool();
	_74375_t=jule::new_ptr<_1be399b37_RetTypeDecl>();
	(_74365_i)++;
	if ((_74365_i >= _74342_tokens.len())) {
		(_74365_i)--;
		std::tie(_74375_t.get()._field_Kind,_74392_ok) = _1c09e4cec_buildType(_self_, _74342_tokens,(&(_74365_i)),false);
		return std::make_tuple(_74375_t,_74392_ok);
	};
	(_74365_i)--;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _75317_rangeTokens = _1c09e0bd8_range(_74365_i,jule::Str("(", 1),jule::Str(")", 1),_74342_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _75518_parts;;
	jule::Slice<_1d6435804_Log> _75525_errs;;
	std::tie(_75518_parts,_75525_errs) = _1c09e1755_parts(_75317_rangeTokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75525_errs);
	if ((_75518_parts.len() == 0LL)) {
		return std::make_tuple(_74375_t,_74392_ok);
	};
	jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _76117_types = jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>::alloc(0LL,_75518_parts.len());;
	_74375_t.get()._field_Idents=jule::Slice<jule::Ptr<_1d675d511_Token>>::alloc(0LL,_75518_parts.len());
	{
		auto &expr = _75518_parts;
		auto it = expr.begin();
		_iter_begin_1c342b830:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _76321_part = *it;
			{
				jule::Ptr<_1d675d511_Token> _76421_token = _76321_part[0LL];;
				jule::I64 _76521_offset = 0LL;;
				if ((_76321_part.len() > 1LL)) {
					_76421_token=_76321_part[1LL];
					if ((_76421_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_76521_offset=2LL;
						if ((_76321_part.len() < 3LL)) {
							_1c09e33d3_pushErr(_self_.ptr(), _76421_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1c342b830;
						};
					};
				};
				_76421_token=_76321_part[0LL];
				if ((_76521_offset != 2LL)) {
					jule::Ptr<_1d675d511_Token> _78125_newToken = jule::new_ptr<_1d675d511_Token>((*(_76421_token)));;
					_78125_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					_74375_t.get()._field_Idents = jule::alloc_for_append(_74375_t.get()._field_Idents,1);_74375_t.get()._field_Idents.__push(_78125_newToken);;
				} else {
					_74375_t.get()._field_Idents = jule::alloc_for_append(_74375_t.get()._field_Idents,1);_74375_t.get()._field_Idents.__push(_76421_token);;
				};
				jule::Ptr<_1be396a24_TypeDecl> _78822_tk;;
				std::tie(_78822_tk,std::ignore) = _1c09e4cec_buildType(_self_, _76321_part,(&(_76521_offset)),true);
				if ((_76521_offset < _76321_part.len())) {
					_1c09e33d3_pushErr(_self_.ptr(), _76321_part[_76521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_76117_types = jule::alloc_for_append(_76117_types,1);_76117_types.__push(_78822_tk);;
			}
			_iter_next_1c342b830:;
			++it;
			goto _iter_begin_1c342b830;
		}
		_iter_end_1c342b830:;
	};
	if ((_76117_types.len() > 1LL)) {
		_74375_t.get()._field_Kind=jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_74342_tokens[0LL], ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be3985b4_TupleTypeDecl>(_1be3985b4_TupleTypeDecl{._field_Types=_76117_types}))});
	} else {
		_74375_t.get()._field_Kind=_76117_types[0LL];
	};
	_74392_ok=true;
	return std::make_tuple(_74375_t,_74392_ok);
}



inline std::tuple<jule::Ptr<_1be399b37_RetTypeDecl>,jule::Bool> _1c09e8592_buildRetType(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _81137_tokens, jule::I64& _81160_i) {
	jule::Ptr<_1be399b37_RetTypeDecl> _81170_t = jule::Ptr<_1be399b37_RetTypeDecl>();
	jule::Bool _81187_ok = jule::Bool();
	_81170_t=jule::new_ptr<_1be399b37_RetTypeDecl>();
	if ((_81160_i >= _81137_tokens.len())) {
		return std::make_tuple(_81170_t,_81187_ok);
	};
	jule::Ptr<_1d675d511_Token> _81717_token = _81137_tokens[_81160_i];;
	{
		auto &_match_expr{ _81717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c3435361:;
			{
				if ((_81717_token.get()._field_Kind == jule::Str("{", 1))) {
					return std::make_tuple(_81170_t,_81187_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c34353c7:;
			{
				if ((_81717_token.get()._field_Kind == jule::Str("=", 1))) {
					return std::make_tuple(_81170_t,_81187_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1c343543d:;
			{
				if (((_81160_i + 1LL) >= _81137_tokens.len())) {
					_1c09e33d3_pushErr(_self_.ptr(), _81717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_81170_t,_81187_ok);
				};
				(_81160_i)++;
				_81717_token=_81137_tokens[_81160_i];
				if ((_81717_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81717_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1c3437e79:;
							{
								std::tie(_81170_t,_81187_ok) = _1c09e81da_buildMultiRetType(_self_, _81137_tokens,_81160_i);
								return std::make_tuple(_81170_t,_81187_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1c3437ee0:;
							{
								_1c09e33d3_pushErr(_self_.ptr(), _81717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_81170_t,_81187_ok);
							}
						}
						_match_end_1c3437dbe:;
					};
				};
				std::tie(_81170_t.get()._field_Kind,_81187_ok) = _1c09e4cec_buildType(_self_, _81137_tokens,(&(_81160_i)),true);
				return std::make_tuple(_81170_t,_81187_ok);
			}
		}
		_match_end_1c34352a6:;
	};
	(_81160_i)++;
	_1c09e33d3_pushErr(_self_.ptr(), _81717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_81170_t,_81187_ok);
}



inline jule::Ptr<_1be3a8838_FnDecl> _1c09e89e3_buildFnPrototype(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _85641_tokens, jule::I64& _85664_i, jule::Bool _85672_method) {
	jule::Ptr<_1be3a8838_FnDecl> _85717_f = jule::new_ptr<_1be3a8838_FnDecl>(_1be3a8838_FnDecl{._field_Token=_85641_tokens[_85664_i], });;
	if ((_85717_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85717_f.get()._field_Statically=true;
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_1c09e33d3_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Token=_85641_tokens[_85664_i];
	};
	if ((_85717_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85717_f.get()._field_Unsafety=true;
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_1c09e33d3_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Token=_85641_tokens[_85664_i];
	};
	(_85664_i)++;
	if ((_85664_i >= _85641_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1d675d511_Token> _89013_tok = _85641_tokens[_85664_i];;
	if ((_89013_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85664_i)++;
		if ((_85664_i >= _85641_tokens.len())) {
			_1c09e33d3_pushErr(_self_.ptr(), _85717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_85717_f.get()._field_Ident=_89013_tok.get()._field_Kind;
	} else {
		_85717_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1d675d511_Token> _90213_errorToken = _85641_tokens[_85664_i];;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _90317_genericsTokens = _1c09e0bd8_range(_85664_i,jule::Str("[", 1),jule::Str("]", 1),_85641_tokens);;
	if ((_90317_genericsTokens != nullptr)) {
		_85717_f.get()._field_Generics=_1c09e65d4_buildGenerics(_self_, _90317_genericsTokens,_90213_errorToken);
	};
	if ((_85641_tokens[_85664_i].get()._field_Kind != jule::Str("(", 1))) {
		_1c09e33d3_pushErr(_self_.ptr(), _85641_tokens[_85664_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _91317_paramsToks = _1c09e0bd8_range(_85664_i,jule::Str("(", 1),jule::Str(")", 1),_85641_tokens);;
	if ((_91317_paramsToks.len() > 0LL)) {
		_85717_f.get()._field_Params=_1c09e7d33_buildParams(_self_, _91317_paramsToks,_85672_method);
	};
	if ((_85664_i < _85641_tokens.len())) {
		jule::Ptr<_1d675d511_Token> _91917_token = _85641_tokens[_85664_i];;
		if (((_91917_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91917_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85717_f.get()._field_Exceptional=true;
			(_85664_i)++;
		};
	};
	_85717_f.get()._field_Public=_1c0a02623_isPub(_85717_f.get()._field_Ident);
	std::tie(_85717_f.get()._field_Result,std::ignore) = _1c09e8592_buildRetType(_self_, _85641_tokens,_85664_i);
	return _85717_f;
}



inline jule::Ptr<_1be3a8838_FnDecl> _1c09e8e44_buildFn(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _93332_tokens, jule::Bool _93350_method, jule::Bool _93364_prototype) {
	jule::I64 _93417_i = 0LL;;
	jule::Ptr<_1be3a8838_FnDecl> _93517_f = _1c09e89e3_buildFnPrototype(_self_, _93332_tokens,_93417_i,_93350_method);;
	if (_93364_prototype) {
		if ((_93417_i < _93332_tokens.len())) {
			_1c09e33d3_pushErr(_self_.ptr(), _93332_tokens[(_93417_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _93517_f;
	} else if ((_93517_f == nullptr)) {
		return _93517_f;
	};
	if ((_93417_i >= _93332_tokens.len())) {
		_1c09e2ca6_stop(_self_.ptr());
		_1c09e33d3_pushErr(_self_.ptr(), _93517_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _95117_blockTokens = _1c09e0bd8_range(_93417_i,jule::Str("{", 1),jule::Str("}", 1),_93332_tokens);;
	if ((_95117_blockTokens != nullptr)) {
		_93517_f.get()._field_Scope=_1c09e444a_buildScope(_self_, _95117_blockTokens,_93332_tokens[(_93417_i - 1LL)]);
		_93517_f.get()._field_Scope.get()._field_Unsafety=_93517_f.get()._field_Unsafety;
		if ((_93417_i < _93332_tokens.len())) {
			_1c09e33d3_pushErr(_self_.ptr(), _93332_tokens[_93417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1c09e2ca6_stop(_self_.ptr());
		_1c09e33d3_pushErr(_self_.ptr(), _93517_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _93517_f;
}



inline jule::Slice<jule::Ptr<_1d675d511_Token>> _1c09e9252_getUseDeclSelectors(_1c09e2976_parser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _96742_tokens) {
	jule::I64 _96817_i = 0LL;;
	_96742_tokens=_1c09e0bd8_range(_96817_i,jule::Str("{", 1),jule::Str("}", 1),_96742_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _97018_parts;;
	jule::Slice<_1d6435804_Log> _97025_errs;;
	std::tie(_97018_parts,_97025_errs) = _1c09e1755_parts(_96742_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_97025_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_97025_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _97617_selectors = jule::Slice<jule::Ptr<_1d675d511_Token>>::alloc(0LL,_97018_parts.len());;
	{
		auto &expr = _97018_parts;
		auto it = expr.begin();
		_iter_begin_1c344e743:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _97721_part = *it;
			{
				if ((_97721_part.len() > 1LL)) {
					_1c09e33d3_pushErr(&(*_self_), _97721_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1d675d511_Token> _98121_tok = _97721_part[0LL];;
				if (((_98121_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98121_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1c09e33d3_pushErr(&(*_self_), _98121_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1c09e3702_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1c344e743;
				};
				_97617_selectors = jule::alloc_for_append(_97617_selectors,1);_97617_selectors.__push(_98121_tok);;
			}
			_iter_next_1c344e743:;
			++it;
			goto _iter_begin_1c344e743;
		}
		_iter_end_1c344e743:;
	};
	return _97617_selectors;
}



inline void _1c09e9571_buildCppUseDecl(_1c09e2976_parser* _self_, jule::Ptr<_1be3ae564_UseDecl>& _99239_decl, jule::Slice<jule::Ptr<_1d675d511_Token>>& _99256_tokens) {
	if ((_99256_tokens.len() > 1LL)) {
		_1c09e33d3_pushErr(&(*_self_), _99256_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d675d511_Token> _99613_token = _99256_tokens[0LL];;
	if (((_99613_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99613_token.get()._field_Kind[0LL] != '`') && (_99613_token.get()._field_Kind[0LL] != '\"')))) {
		_1c09e33d3_pushErr(&(*_self_), _99613_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_99239_decl.get()._field_CppLinked=true;
	_99239_decl.get()._field_LinkPath=_99613_token.get()._field_Kind.slice(1LL,(_99613_token.get()._field_Kind.len() - 1LL));
}



inline void _1c09e9890_buildStdUseDecl(_1c09e2976_parser* _self_, jule::Ptr<_1be3ae564_UseDecl>& _100539_decl, jule::Slice<jule::Ptr<_1d675d511_Token>> _100559_tokens) {
	_100539_decl.get()._field_Std=true;
	jule::Ptr<_1d675d511_Token> _100817_token = _100559_tokens[0LL];;
	if ((_100559_tokens.len() < 3LL)) {
		_1c09e33d3_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_100559_tokens=_100559_tokens.slice(2LL);
	_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1c345850a:;
			{
				_1c09e33d3_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c3458582:;
			{
				if ((_100817_token.get()._field_Kind != jule::Str("}", 1))) {
					_1c09e33d3_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1d675d511_Token>> _102521_selectors = nullptr;;
				std::tie(_100559_tokens,_102521_selectors) = _1c09e0e80_rangeLast(_100559_tokens);
				_100539_decl.get()._field_Selected=_1c09e9252_getUseDeclSelectors(&(*_self_), _102521_selectors);
				if ((_100559_tokens.len() == 0LL)) {
					_1c09e33d3_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1c09e33d3_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_1c09e33d3_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c3458609:;
			{
				if ((_100817_token.get()._field_Kind != jule::Str("*", 1))) {
					_1c09e33d3_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_1c09e33d3_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100817_token=_100559_tokens[(_100559_tokens.len() - 1LL)];
				if ((_100817_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1c09e33d3_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100559_tokens=_100559_tokens.slice(0LL,(_100559_tokens.len() - 1LL));
				if ((_100559_tokens.len() == 0LL)) {
					_1c09e33d3_pushErr(&(*_self_), _100817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100539_decl.get()._field_Full=true;
			}
		}
		_match_end_1c3458483:;
	};
	_100539_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _1c09e25ad_tokstoa(_100559_tokens));
}



inline void _1c09e9bae_buildIdentUseDecl(_1c09e2976_parser* _self_, jule::Ptr<_1be3ae564_UseDecl>& _106741_decl, jule::Slice<jule::Ptr<_1d675d511_Token>> _106761_tokens) {
	_106741_decl.get()._field_Std=false;
	jule::Ptr<_1d675d511_Token> _107017_token = _106761_tokens[(_106761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _107017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1c346358c:;
			{
				_1c09e33d3_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c3463768:;
			{
				if ((_107017_token.get()._field_Kind != jule::Str("}", 1))) {
					_1c09e33d3_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1d675d511_Token>> _108121_selectors = nullptr;;
				std::tie(_106761_tokens,_108121_selectors) = _1c09e0e80_rangeLast(_106761_tokens);
				_106741_decl.get()._field_Selected=_1c09e9252_getUseDeclSelectors(&(*_self_), _108121_selectors);
				if ((_106761_tokens.len() == 0LL)) {
					_1c09e33d3_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106761_tokens[(_106761_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1c09e33d3_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_1c09e33d3_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c34637ce:;
			{
				if ((_107017_token.get()._field_Kind != jule::Str("*", 1))) {
					_1c09e33d3_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_1c09e33d3_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_107017_token=_106761_tokens[(_106761_tokens.len() - 1LL)];
				if ((_107017_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1c09e33d3_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106761_tokens=_106761_tokens.slice(0LL,(_106761_tokens.len() - 1LL));
				if ((_106761_tokens.len() == 0LL)) {
					_1c09e33d3_pushErr(&(*_self_), _107017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106741_decl.get()._field_Full=true;
			}
		}
		_match_end_1c3463537:;
	};
	_106741_decl.get()._field_LinkPath=_1c09e25ad_tokstoa(_106761_tokens);
}



inline void _1c09e9ecd_parseUseDecl(_1c09e2976_parser* _self_, jule::Ptr<_1be3ae564_UseDecl>& _113036_decl, jule::Slice<jule::Ptr<_1d675d511_Token>> _113056_tokens) {
	if (_113036_decl.get()._field_CppLinked) {
		_1c09e9571_buildCppUseDecl(&(*_self_), _113036_decl,_113056_tokens);
		return;;
	};
	jule::Ptr<_1d675d511_Token> _113617_token = _113056_tokens[0LL];;
	if ((_113617_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09e33d3_pushErr(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_113056_tokens.len() > 2LL) && (_113056_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_113036_decl.get()._field_Alias=_113617_token.get()._field_Kind;
		if ((_113056_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1c09e33d3_pushErr(&(*_self_), _113617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1c09e3702_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_113056_tokens=_113056_tokens.slice(2LL);
		_113617_token=_113056_tokens[0LL];
	};
	;
	{
		
		if ((_113617_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1c346edd4:;
			{
				_1c09e9890_buildStdUseDecl(&(*_self_), _113036_decl,_113056_tokens);
			}
		}
		else {
			_case_begin_1c3471ea2:;
			{
				_1c09e9bae_buildIdentUseDecl(&(*_self_), _113036_decl,_113056_tokens);
			}
		}
		_match_end_1c3471e3b:;
	};
}



inline jule::Ptr<_1be3ae564_UseDecl> _1c09ea385_buildUseDecl(_1c09e2976_parser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _116435_tokens, jule::Bool _116453_cpp_linked) {
	jule::Ptr<_1be3ae564_UseDecl> _116517_decl = jule::new_ptr<_1be3ae564_UseDecl>(_1be3ae564_UseDecl{._field_Token=_116435_tokens[0LL], ._field_CppLinked=_116453_cpp_linked, });;
	if ((_116435_tokens.len() < 2LL)) {
		_1c09e33d3_pushErr(&(*_self_), _116517_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_116435_tokens=_116435_tokens.slice(1LL);
	_1c09e9ecd_parseUseDecl(&(*_self_), _116517_decl,_116435_tokens);
	return _116517_decl;
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c09ea73c_buildTypeEnumItemKind(jule::Ptr<_1c09e2976_parser> _self_, jule::I64& _117846_i, jule::Slice<jule::Ptr<_1d675d511_Token>>& _117859_tokens) {
	jule::I64 _117917_braceN = 0LL;;
	jule::I64 _118013_exprStart = _117846_i;;
	for (; (_117846_i < _117859_tokens.len()); (_117846_i)++) {
		{
			jule::Ptr<_1d675d511_Token> _118217_t = _117859_tokens[_117846_i];;
			if ((_118217_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _118217_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c34764e5:;
						{
							(_117917_braceN)++;
							goto _iter_next_1c3475d30;
						}
					}
					else {
						_case_begin_1c3476da8:;
						{
							(_117917_braceN)--;
						}
					}
					_match_end_1c3476b99:;
				};
			};
			if ((_117917_braceN > 0LL)) {
				goto _iter_next_1c3475d30;
			};
			if (((_118217_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117846_i + 1LL) >= _117859_tokens.len()))) {
				jule::Slice<jule::Ptr<_1d675d511_Token>> _119825_kindTokens = nullptr;;
				if ((_118217_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119825_kindTokens=_117859_tokens.slice(_118013_exprStart,_117846_i);
				} else {
					_119825_kindTokens=_117859_tokens.slice(_118013_exprStart);
				};
				jule::I64 _120425_j = 0LL;;
				jule::Ptr<_1be396a24_TypeDecl> _120526_kind;;
				std::tie(_120526_kind,std::ignore) = _1c09e4cec_buildType(_self_, _119825_kindTokens,(&(_120425_j)),true);
				if ((_120425_j < _119825_kindTokens.len())) {
					_1c09e33d3_pushErr(_self_.ptr(), _119825_kindTokens[_120425_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _120526_kind;
			};
		}
	_iter_next_1c3475d30:;
	}
	_iter_end_1c3475d30:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1be3b1016_TypeEnumItemDecl>> _1c09eaa4a_buildTypeEnumItems(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _121543_tokens) {
	jule::Slice<jule::Ptr<_1be3b1016_TypeEnumItemDecl>> _121617_items = jule::Slice<jule::Ptr<_1be3b1016_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _121717_i = 0LL;;
	for (; (_121717_i < _121543_tokens.len()); (_121717_i)++) {
		{
			jule::Ptr<_1d675d511_Token> _121921_t = _121543_tokens[_121717_i];;
			jule::Ptr<_1be3b1016_TypeEnumItemDecl> _122021_item = jule::new_ptr<_1be3b1016_TypeEnumItemDecl>();;
			_122021_item.get()._field_Token=_121921_t;
			if (((_122021_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_121543_tokens.len() - _121717_i) > 2LL))) {
				_122021_item.get()._field_Ident=_122021_item.get()._field_Token.get()._field_Kind;
				_121921_t=_121543_tokens[(_121717_i + 1LL)];
				if ((_121921_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121717_i+=2LL;
					if (((_121717_i >= _121543_tokens.len()) || (_121543_tokens[_121717_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1c09e33d3_pushErr(_self_.ptr(), _121921_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1c347bd25;
					};
				};
			};
			_122021_item.get()._field_Kind=_1c09ea73c_buildTypeEnumItemKind(_self_, _121717_i,_121543_tokens);
			_121617_items = jule::alloc_for_append(_121617_items,1);_121617_items.__push(_122021_item);;
		}
	_iter_next_1c347bd25:;
	}
	_iter_end_1c347bd25:;;
	return _121617_items;
}



inline jule::Ptr<_1be3b1214_TypeEnumDecl> _1c09ead58_buildTypeEnumDecl(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _123942_tokens) {
	jule::I64 _124017_i = 1LL;;
	jule::Ptr<_1be3b1214_TypeEnumDecl> _124117_e = jule::new_ptr<_1be3b1214_TypeEnumDecl>(_1be3b1214_TypeEnumDecl{._field_Token=_123942_tokens[_124017_i], });;
	if ((_124117_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _124117_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_Ident=_124117_e.get()._field_Token.get()._field_Kind;
	_124017_i+=3LL;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _125117_itemTokens = _1c09e0bd8_range(_124017_i,jule::Str("{", 1),jule::Str("}", 1),_123942_tokens);;
	if ((_125117_itemTokens == nullptr)) {
		_1c09e2ca6_stop(_self_.ptr());
		_1c09e33d3_pushErr(_self_.ptr(), _124117_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _124117_e;
	} else if ((_124017_i < _123942_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _123942_tokens[_124017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_124117_e.get()._field_Public=_1c0a02623_isPub(_124117_e.get()._field_Ident);
	_124117_e.get()._field_End=_123942_tokens[(_124017_i - 1LL)];
	_124117_e.get()._field_Items=_1c09eaa4a_buildTypeEnumItems(_self_, _125117_itemTokens);
	return _124117_e;
}



inline jule::Ptr<_1be39b045_Expr> _1c09eb210_buildEnumItemExpr(jule::Ptr<_1c09e2976_parser> _self_, jule::I64& _126642_i, jule::Slice<jule::Ptr<_1d675d511_Token>>& _126655_tokens) {
	jule::I64 _126717_braceN = 0LL;;
	jule::I64 _126813_exprStart = _126642_i;;
	for (; (_126642_i < _126655_tokens.len()); (_126642_i)++) {
		{
			jule::Ptr<_1d675d511_Token> _127017_t = _126655_tokens[_126642_i];;
			if ((_127017_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _127017_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c3487aab:;
						{
							(_126717_braceN)++;
							goto _iter_next_1c34873e6;
						}
					}
					else {
						_case_begin_1c348846e:;
						{
							(_126717_braceN)--;
						}
					}
					_match_end_1c3488260:;
				};
			};
			if ((_126717_braceN > 0LL)) {
				goto _iter_next_1c34873e6;
			};
			if (((_127017_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126642_i + 1LL) >= _126655_tokens.len()))) {
				jule::Slice<jule::Ptr<_1d675d511_Token>> _128625_exprTokens = nullptr;;
				if ((_127017_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128625_exprTokens=_126655_tokens.slice(_126813_exprStart,_126642_i);
				} else {
					_128625_exprTokens=_126655_tokens.slice(_126813_exprStart);
				};
				return _1c09e3a10_buildExpr(_self_, _128625_exprTokens);
			};
		}
	_iter_next_1c34873e6:;
	}
	_iter_end_1c34873e6:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1be3ae9d7_EnumItemDecl>> _1c09eb51d_buildEnumItems(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _129839_tokens) {
	jule::Slice<jule::Ptr<_1be3ae9d7_EnumItemDecl>> _129917_items = jule::Slice<jule::Ptr<_1be3ae9d7_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I64 _130017_i = 0LL;;
	for (; (_130017_i < _129839_tokens.len()); (_130017_i)++) {
		{
			jule::Ptr<_1d675d511_Token> _130221_t = _129839_tokens[_130017_i];;
			jule::Ptr<_1be3ae9d7_EnumItemDecl> _130321_item = jule::new_ptr<_1be3ae9d7_EnumItemDecl>();;
			_130321_item.get()._field_Token=_130221_t;
			if ((_130321_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1c09e33d3_pushErr(_self_.ptr(), _130321_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_130321_item.get()._field_Ident=_130321_item.get()._field_Token.get()._field_Kind;
			if ((((_130017_i + 1LL) >= _129839_tokens.len()) || (_129839_tokens[(_130017_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_130017_i + 1LL) < _129839_tokens.len())) {
					(_130017_i)++;
				};
				_129917_items = jule::alloc_for_append(_129917_items,1);_129917_items.__push(_130321_item);;
				goto _iter_next_1c348be45;
			};
			(_130017_i)++;
			_130221_t=_129839_tokens[_130017_i];
			(_130017_i)++;
			if ((_130221_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1c09e33d3_pushErr(_self_.ptr(), _130221_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1c348be45;
			};
			if (((_130017_i >= _129839_tokens.len()) || (_129839_tokens[_130017_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1c09e33d3_pushErr(_self_.ptr(), _130221_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1c348be45;
			};
			_130321_item.get()._field_Expr=_1c09eb210_buildEnumItemExpr(_self_, _130017_i,_129839_tokens);
			_129917_items = jule::alloc_for_append(_129917_items,1);_129917_items.__push(_130321_item);;
		}
	_iter_next_1c348be45:;
	}
	_iter_end_1c348be45:;;
	return _129917_items;
}



inline jule::Ptr<_1be3b0510_EnumDecl> _1c09eb82b_buildEnumDecl(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _133538_tokens) {
	if ((_133538_tokens.len() < 3LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _133538_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3b0510_EnumDecl> _134017_e = jule::new_ptr<_1be3b0510_EnumDecl>(_1be3b0510_EnumDecl{._field_Token=_133538_tokens[1LL], });;
	if ((_134017_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_134017_e.get()._field_Ident=_134017_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134817_i = 2LL;;
	if ((_133538_tokens[_134817_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134817_i)++;
		if ((_134817_i >= _133538_tokens.len())) {
			_1c09e33d3_pushErr(_self_.ptr(), _133538_tokens[(_134817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _134017_e;
		};
		std::tie(_134017_e.get()._field_Kind,std::ignore) = _1c09e4cec_buildType(_self_, _133538_tokens,(&(_134817_i)),true);
		if ((_134817_i >= _133538_tokens.len())) {
			_1c09e2ca6_stop(_self_.ptr());
			_1c09e33d3_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _134017_e;
		};
	} else {
		_134017_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _136517_itemTokens = _1c09e0bd8_range(_134817_i,jule::Str("{", 1),jule::Str("}", 1),_133538_tokens);;
	if ((_136517_itemTokens == nullptr)) {
		_1c09e2ca6_stop(_self_.ptr());
		_1c09e33d3_pushErr(_self_.ptr(), _134017_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _134017_e;
	} else if ((_134817_i < _133538_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _133538_tokens[_134817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_134017_e.get()._field_Public=_1c0a02623_isPub(_134017_e.get()._field_Ident);
	_134017_e.get()._field_End=_133538_tokens[(_134817_i - 1LL)];
	_134017_e.get()._field_Items=_1c09eb51d_buildEnumItems(_self_, _136517_itemTokens);
	return _134017_e;
}



inline jule::Any _1c09ebb39_buildNodeEnumDecl(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _138042_tokens) {
	if (((_138042_tokens.len() > 3LL) && (_138042_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_138042_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return static_cast<jule::Any>(_1c09ead58_buildTypeEnumDecl(_self_, _138042_tokens));
		};
	};
	return static_cast<jule::Any>(_1c09eb82b_buildEnumDecl(_self_, _138042_tokens));
}



inline jule::Ptr<_1be3b1764_FieldDecl> _1c09ebe47_buildField(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _138934_tokens) {
	jule::Ptr<_1be3b1764_FieldDecl> _139017_f = jule::new_ptr<_1be3b1764_FieldDecl>();;
	_139017_f.get()._field_Mutable=(_138934_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_139017_f.get()._field_Mutable) {
		if ((_138934_tokens.len() == 1LL)) {
			_1c09e33d3_pushErr(_self_.ptr(), _138934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138934_tokens=_138934_tokens.slice(1LL);
	};
	_139017_f.get()._field_Token=_138934_tokens[0LL];
	if ((_139017_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _139017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_139017_f.get()._field_Ident=_139017_f.get()._field_Token.get()._field_Kind;
	if ((_138934_tokens.len() == 1LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _138934_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_138934_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _138934_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_138934_tokens=_138934_tokens.slice(2LL);
	jule::I64 _141817_i = 0LL;;
	std::tie(_139017_f.get()._field_Kind,std::ignore) = _1c09e4cec_buildType(_self_, _138934_tokens,(&(_141817_i)),true);
	if ((_141817_i < _138934_tokens.len())) {
		jule::Ptr<_1d675d511_Token> _142117_token = _138934_tokens[_141817_i];;
		if (((_142117_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_142117_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1c09e33d3_pushErr(_self_.ptr(), _138934_tokens[_141817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_141817_i)++;
		if ((_141817_i >= _138934_tokens.len())) {
			_1c09e33d3_pushErr(_self_.ptr(), _142117_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_138934_tokens=_138934_tokens.slice(_141817_i);
		_139017_f.get()._field_Default=_1c09e3a10_buildExpr(_self_, _138934_tokens);
	};
	_139017_f.get()._field_Public=_1c0a02623_isPub(_139017_f.get()._field_Ident);
	return _139017_f;
}



inline jule::Slice<jule::Ptr<_1be3b1764_FieldDecl>> _1c09ec255_buildStructDeclFields(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _143845_tokens) {
	jule::Slice<jule::Ptr<_1be3b1764_FieldDecl>> _143917_fields = nullptr;;
	jule::Slice<jule::Ptr<_1c09c5a9c_stmt>> _144017_stmts = _1c09c5e43_splitStmts(_143845_tokens);;
	{
		auto &expr = _144017_stmts;
		auto it = expr.begin();
		_iter_begin_1c34a90c7:;
		if (it != expr.end()) {
			jule::Ptr<_1c09c5a9c_stmt> _144121_stmt = *it;
			{
				_143845_tokens=_144121_stmt.get()._field_tokens;
				jule::Ptr<_1be3b1764_FieldDecl> _144321_f = _1c09ebe47_buildField(_self_, _143845_tokens);;
				_143917_fields = jule::alloc_for_append(_143917_fields,1);_143917_fields.__push(_144321_f);;
			}
			_iter_next_1c34a90c7:;
			++it;
			goto _iter_begin_1c34a90c7;
		}
		_iter_end_1c34a90c7:;
	};
	return _143917_fields;
}



inline jule::Ptr<_1be3b20c2_StructDecl> _1c09ec563_buildStructDecl(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _144940_tokens) {
	if ((_144940_tokens.len() < 3LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _144940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _145517_i = 1LL;;
	jule::Ptr<_1be3b20c2_StructDecl> _145617_s = jule::new_ptr<_1be3b20c2_StructDecl>(_1be3b20c2_StructDecl{._field_Token=_144940_tokens[_145517_i], });;
	if ((_145617_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _145617_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_145517_i)++;
	if ((_145517_i >= _144940_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _144940_tokens[_145517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145617_s;
	};
	_145617_s.get()._field_Ident=_145617_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1d675d511_Token> _147013_errorToken = _144940_tokens[_145517_i];;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _147117_genericsTokens = _1c09e0bd8_range(_145517_i,jule::Str("[", 1),jule::Str("]", 1),_144940_tokens);;
	if ((_147117_genericsTokens != nullptr)) {
		_145617_s.get()._field_Generics=_1c09e65d4_buildGenerics(_self_, _147117_genericsTokens,_147013_errorToken);
	};
	if ((_145517_i >= _144940_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _144940_tokens[(_145517_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145617_s;
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _148117_bodyTokens = _1c09e0bd8_range(_145517_i,jule::Str("{", 1),jule::Str("}", 1),_144940_tokens);;
	if ((_148117_bodyTokens == nullptr)) {
		_1c09e2ca6_stop(_self_.ptr());
		_1c09e33d3_pushErr(_self_.ptr(), _145617_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145617_s;
	};
	if ((_145517_i < _144940_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _144940_tokens[_145517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145617_s.get()._field_Public=_1c0a02623_isPub(_145617_s.get()._field_Ident);
	_145617_s.get()._field_Fields=_1c09ec255_buildStructDeclFields(_self_, _148117_bodyTokens);
	_145617_s.get()._field_End=_144940_tokens[(_145517_i - 1LL)];
	return _145617_s;
}



inline void _1c09ec7d8_checkMethodReceiver(_1c09e2976_parser* _self_, jule::Ptr<_1be3a8838_FnDecl>& _149739_f) {
	if (_149739_f.get()._field_Statically) {
		if (((_149739_f.get()._field_Params.len() > 0LL) && _1be3a787b_IsSelf(_149739_f.get()._field_Params[0LL].ptr()))) {
			_1c09e33d3_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149739_f.get()._field_Params.len() == 0LL)) {
		_1c09e33d3_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1be3a7518_ParamDecl> _150913_param = _149739_f.get()._field_Params[0LL];;
	if ((!(_1be3a787b_IsSelf(_150913_param.ptr())))) {
		_1c09e33d3_pushErr(&(*_self_), _149739_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1be3a8838_FnDecl>> _1c09ecae6_buildTraitMethods(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _151641_tokens) {
	jule::Slice<jule::Ptr<_1be3a8838_FnDecl>> _151717_methods = nullptr;;
	jule::Slice<jule::Ptr<_1c09c5a9c_stmt>> _151817_stmts = _1c09c5e43_splitStmts(_151641_tokens);;
	{
		auto &expr = _151817_stmts;
		auto it = expr.begin();
		_iter_begin_1c33031da:;
		if (it != expr.end()) {
			jule::Ptr<_1c09c5a9c_stmt> _151921_stmt = *it;
			{
				_151641_tokens=_151921_stmt.get()._field_tokens;
				if ((_151641_tokens.len() == 0LL)) {
					goto _iter_next_1c33031da;
				};
				jule::Ptr<_1be3a8838_FnDecl> _152421_f = _1c09e8e44_buildFn(_self_, _151641_tokens,true,true);;
				if ((_152421_f != nullptr)) {
					if (_1be3a8b8a_IsAnon(_152421_f.ptr())) {
						_1c09e33d3_pushErr(_self_.ptr(), _152421_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1c09ec7d8_checkMethodReceiver(_self_.ptr(), _152421_f);
					if ((_152421_f.get()._field_Generics.len() > 0LL)) {
						_1c09e33d3_pushErr(_self_.ptr(), _152421_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151717_methods = jule::alloc_for_append(_151717_methods,1);_151717_methods.__push(_152421_f);;
				};
			}
			_iter_next_1c33031da:;
			++it;
			goto _iter_begin_1c33031da;
		}
		_iter_end_1c33031da:;
	};
	return _151717_methods;
}



inline jule::Ptr<_1be3b26cc_TraitDecl> _1c09ece04_buildTraitDecl(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _153939_tokens) {
	if ((_153939_tokens.len() < 3LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _153939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3b26cc_TraitDecl> _154417_t = jule::new_ptr<_1be3b26cc_TraitDecl>(_1be3b26cc_TraitDecl{._field_Token=_153939_tokens[1LL], });;
	if ((_154417_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _154417_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_154417_t.get()._field_Ident=_154417_t.get()._field_Token.get()._field_Kind;
	jule::I64 _155217_i = 2LL;;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _155317_bodyTokens = _1c09e0bd8_range(_155217_i,jule::Str("{", 1),jule::Str("}", 1),_153939_tokens);;
	if ((_155317_bodyTokens == nullptr)) {
		_1c09e2ca6_stop(_self_.ptr());
		_1c09e33d3_pushErr(_self_.ptr(), _154417_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_155217_i < _153939_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _153939_tokens[_155217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_154417_t.get()._field_Public=_1c0a02623_isPub(_154417_t.get()._field_Ident);
	_154417_t.get()._field_Methods=_1c09ecae6_buildTraitMethods(_self_, _155317_bodyTokens);
	_154417_t.get()._field_End=_153939_tokens[(_155217_i - 1LL)];
	return _154417_t;
}



inline jule::Ptr<_1be3a8838_FnDecl> _1c09ed212_buildCppLinkFn(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _156938_tokens) {
	_156938_tokens=_156938_tokens.slice(1LL);
	jule::Ptr<_1be3a8838_FnDecl> _157117_f = _1c09e8e44_buildFn(_self_, _156938_tokens,false,true);;
	if ((_157117_f != nullptr)) {
		if (_1be3a8b8a_IsAnon(_157117_f.ptr())) {
			_1c09e33d3_pushErr(_self_.ptr(), _157117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_157117_f.get()._field_Public=false;
		_157117_f.get()._field_CppLinked=true;
	};
	return _157117_f;
}



inline jule::Ptr<_1be3a9817_VarDecl> _1c09ed520_buildCppLinkVar(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _158239_tokens) {
	_158239_tokens=_158239_tokens.slice(1LL);
	jule::Ptr<_1be3a9817_VarDecl> _158417_v = _1c09e5e1e_buildVar(_self_, _158239_tokens);;
	if ((_158417_v != nullptr)) {
		_158417_v.get()._field_Public=false;
		_158417_v.get()._field_CppLinked=true;
		if ((_158417_v.get()._field_Expr != nullptr)) {
			_1c09e33d3_pushErr(_self_.ptr(), _158417_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _158417_v;
}



inline jule::Ptr<_1be3b20c2_StructDecl> _1c09ed82d_buildCppLinkStruct(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _159542_tokens) {
	_159542_tokens=_159542_tokens.slice(1LL);
	jule::Ptr<_1be3b20c2_StructDecl> _159717_s = _1c09ec563_buildStructDecl(_self_, _159542_tokens);;
	if ((_159717_s != nullptr)) {
		_159717_s.get()._field_Public=false;
		{
			auto &expr = _159717_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1c3312e64:;
			if (it != expr.end()) {
				jule::Ptr<_1be3b1764_FieldDecl> _160025_f = *it;
				{
					_160025_f.get()._field_Public=true;
				}
				_iter_next_1c3312e64:;
				++it;
				goto _iter_begin_1c3312e64;
			}
			_iter_end_1c3312e64:;
		};
		_159717_s.get()._field_CppLinked=true;
	};
	return _159717_s;
}



inline jule::Ptr<_1be3ad178_TypeAliasDecl> _1c09edb3b_buildCppLinkTypeAlias(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _160945_tokens) {
	_160945_tokens=_160945_tokens.slice(1LL);
	jule::Ptr<_1be3ad178_TypeAliasDecl> _161117_t = _1c09e510a_buildTypeAliasDecl(_self_, _160945_tokens);;
	if ((_161117_t != nullptr)) {
		_161117_t.get()._field_Public=false;
		_161117_t.get()._field_CppLinked=true;
	};
	return _161117_t;
}



inline jule::Ptr<_1be3ae564_UseDecl> _1c09ede49_buildCppLinkUse(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _161939_tokens) {
	if ((_161939_tokens.len() == 1LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _161939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_161939_tokens=_161939_tokens.slice(1LL);
	;
	return _1c09ea385_buildUseDecl(_self_.ptr(), _161939_tokens,true);
}



inline jule::Any _1c09ee257_buildCppLink(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _163037_tokens) {
	jule::Ptr<_1d675d511_Token> _163117_token = _163037_tokens[0LL];;
	if ((_163037_tokens.len() == 1LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _163117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_163117_token=_163037_tokens[1LL];
	{
		auto &_match_expr{ _163117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c3317c49:;
			{
				return static_cast<jule::Any>(_1c09ed212_buildCppLinkFn(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c331895e:;
			{
				return static_cast<jule::Any>(_1c09ed520_buildCppLinkVar(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1c33189c5:;
			{
				return static_cast<jule::Any>(_1c09ed82d_buildCppLinkStruct(_self_, _163037_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c3318a3b:;
			{
				return static_cast<jule::Any>(_1c09edb3b_buildCppLinkTypeAlias(_self_, _163037_tokens));
			}
		}
		else {
			_case_begin_1c3318871:;
			{
				_1c09e33d3_pushErr(_self_.ptr(), _163117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c331880a:;
	};
	return nullptr;
}



inline jule::Ptr<_1be3a8838_FnDecl> _1c09ee565_getMethod(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _165434_tokens) {
	jule::I64 _165517_i = 0LL;;
	jule::Ptr<_1d675d511_Token> _165617_token = _165434_tokens[_165517_i];;
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_165517_i + 1LL) >= _165434_tokens.len())) {
			_1c09e33d3_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_165517_i)++;
		_165617_token=_165434_tokens[_165517_i];
	};
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_165517_i + 1LL) >= _165434_tokens.len())) {
			_1c09e33d3_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_165517_i)++;
		_165617_token=_165434_tokens[_165517_i];
	};
	if ((_165617_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1c09e33d3_pushErr(_self_.ptr(), _165617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3a8838_FnDecl> _168017_f = _1c09e8e44_buildFn(_self_, _165434_tokens,true,false);;
	if (((_168017_f != nullptr) && _1be3a8b8a_IsAnon(_168017_f.ptr()))) {
		_1c09e33d3_pushErr(_self_.ptr(), _168017_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _168017_f;
}



inline void _1c09ee884_parseImplBody(jule::Ptr<_1c09e2976_parser> _self_, jule::Ptr<_1be3b2cd7_Impl>& _168738_ipl, jule::Slice<jule::Ptr<_1d675d511_Token>>& _168755_tokens) {
	jule::Slice<jule::Ptr<_1c09c5a9c_stmt>> _168817_stmts = _1c09c5e43_splitStmts(_168755_tokens);;
	{
		auto &expr = _168817_stmts;
		auto it = expr.begin();
		_iter_begin_1c3321d63:;
		if (it != expr.end()) {
			jule::Ptr<_1c09c5a9c_stmt> _168921_stmt = *it;
			{
				_168755_tokens=_168921_stmt.get()._field_tokens;
				jule::Ptr<_1d675d511_Token> _169121_token = _168755_tokens[0LL];;
				{
					auto &_match_expr{ _169121_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1c3322649:;
						{
							_1c09e4093_pushDirective(_self_.ptr(), _1c09e3d1d_buildDirective(_self_.ptr(), _168755_tokens));
							goto _iter_next_1c3321d63;
						}
					}
					_match_end_1c3322eeb:;
				};
				{
					auto &_match_expr{ _169121_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1c3323183:;
						{
							jule::Ptr<_1be3a9817_VarDecl> _170025_v = _1c09e5e1e_buildVar(_self_, _168755_tokens);;
							if ((_170025_v != nullptr)) {
								_168738_ipl.get()._field_Statics = jule::alloc_for_append(_168738_ipl.get()._field_Statics,1);_168738_ipl.get()._field_Statics.__push(_170025_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1c3323491:;
						{
							jule::Ptr<_1be3a8838_FnDecl> _170725_f = _1c09ee565_getMethod(_self_, _168755_tokens);;
							if ((_170725_f != nullptr)) {
								_1c09ec7d8_checkMethodReceiver(_self_.ptr(), _170725_f);
								_1c0a00225_applyFnMeta(_self_.ptr(), _170725_f);
								_168738_ipl.get()._field_Methods = jule::alloc_for_append(_168738_ipl.get()._field_Methods,1);_168738_ipl.get()._field_Methods.__push(_170725_f);;
							};
						}
					}
					else {
						_case_begin_1c332342a:;
						{
							_1c09e33d3_pushErr(_self_.ptr(), _169121_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1c3321d63;
						}
					}
					_match_end_1c332368e:;
				};
			}
			_iter_next_1c3321d63:;
			++it;
			goto _iter_begin_1c3321d63;
		}
		_iter_end_1c3321d63:;
	};
}



inline jule::Ptr<_1be3b2cd7_Impl> _1c09eeb92_buildImpl(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _172033_tokens) {
	jule::Ptr<_1d675d511_Token> _172117_token = _172033_tokens[0LL];;
	if ((_172033_tokens.len() < 2LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _172117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _172717_i = 1LL;;
	jule::Ptr<_1be396a24_TypeDecl> _172918_base;;
	jule::Bool _172928_ok;;
	std::tie(_172918_base,_172928_ok) = _1c09e4cec_buildType(_self_, _172033_tokens,(&(_172717_i)),true);
	if ((!(_172928_ok))) {
		return nullptr;
	};
	if ((_172717_i >= _172033_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _172117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be3b2cd7_Impl> _173817_ipl = jule::new_ptr<_1be3b2cd7_Impl>(_1be3b2cd7_Impl{._field_Base=_172918_base, });;
	_172117_token=_172033_tokens[_172717_i];
	if ((_172117_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_172117_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_172117_token.get()._field_Kind == jule::Str("{", 1)))) {
			std::tie(_173817_ipl.get()._field_Base,_173817_ipl.get()._field_Dest) = std::make_tuple(_173817_ipl.get()._field_Dest,_173817_ipl.get()._field_Base);
			goto _julec_label_body;
		};
		_1c09e2ca6_stop(_self_.ptr());
		_1c09e33d3_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_172717_i)++;
	if ((_172717_i >= _172033_tokens.len())) {
		_1c09e2ca6_stop(_self_.ptr());
		_1c09e33d3_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_173817_ipl.get()._field_Dest,_172928_ok) = _1c09e4cec_buildType(_self_, _172033_tokens,(&(_172717_i)),true);
	if ((!(_172928_ok))) {
		return nullptr;
	};
	if ((_172717_i >= _172033_tokens.len())) {
		_1c09e2ca6_stop(_self_.ptr());
		_1c09e33d3_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _177617_bodyTokens = _1c09e0bd8_range(_172717_i,jule::Str("{", 1),jule::Str("}", 1),_172033_tokens);;
	if ((_177617_bodyTokens == nullptr)) {
		_1c09e2ca6_stop(_self_.ptr());
		_1c09e33d3_pushErr(_self_.ptr(), _172117_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_172717_i < _172033_tokens.len())) {
		_1c09e33d3_pushErr(_self_.ptr(), _172033_tokens[_172717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173817_ipl.get()._field_End=_172033_tokens[(_172717_i - 1LL)];
	_1c09ee884_parseImplBody(_self_, _173817_ipl,_177617_bodyTokens);
	return _173817_ipl;
}



inline jule::Any _1c09eeea0_buildNodeData(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _179138_tokens) {
	jule::Ptr<_1d675d511_Token> _179217_token = _179138_tokens[0LL];;
	{
		auto &_match_expr{ _179217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c3334606:;
			{
				jule::Ptr<_1be3a8838_FnDecl> _179621_f = _1c09e8e44_buildFn(_self_, _179138_tokens,false,false);;
				if ((_179621_f != nullptr)) {
					_179621_f.get()._field_Global=true;
					if (_1be3a8b8a_IsAnon(_179621_f.ptr())) {
						_1c09e33d3_pushErr(_self_.ptr(), _179621_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return static_cast<jule::Any>(_179621_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1c333466c:;
			{
				return static_cast<jule::Any>(_1c09e5e1e_buildVar(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c3334d76:;
			{
				return static_cast<jule::Any>(_1c09e510a_buildTypeAliasDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c3334ddc:;
			{
				return _1c09ebb39_buildNodeEnumDecl(_self_, _179138_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1c3334e53:;
			{
				return static_cast<jule::Any>(_1c09ec563_buildStructDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1c3334eb9:;
			{
				return static_cast<jule::Any>(_1c09ece04_buildTraitDecl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c3335030:;
			{
				return static_cast<jule::Any>(_1c09eeb92_buildImpl(_self_, _179138_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c33350a7:;
			{
				return _1c09ee257_buildCppLink(_self_, _179138_tokens);
			}
		}
		else {
			_case_begin_1c33344e6:;
			{
				_1c09e33d3_pushErr(_self_.ptr(), _179217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c333444c:;
	};
}



inline void _1c0a00225_applyFnMeta(_1c09e2976_parser* _self_, jule::Ptr<_1be3a8838_FnDecl>& _182735_f) {
	_182735_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1c0a0049a_applyMeta(_1c09e2976_parser* _self_, _1be362e30_Node& _183233_node) {
	{
		auto &_match_expr{ _183233_node._field_Data };
		
		if (_match_expr.type_is<jule::Ptr<_1be3a9817_VarDecl>>()) {
			_case_begin_1c333aa5d:;
			{
				jule::Ptr<_1be3a9817_VarDecl> _183521_v = _183233_node._field_Data.operator jule::Ptr<_1be3a9817_VarDecl>();;
				if ((_183521_v == nullptr)) {
					return;;
				};
				_183521_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3a8838_FnDecl>>()) {
			_case_begin_1c333aac4:;
			{
				jule::Ptr<_1be3a8838_FnDecl> _184221_f = _183233_node._field_Data.operator jule::Ptr<_1be3a8838_FnDecl>();;
				if ((_184221_f == nullptr)) {
					return;;
				};
				_1c0a00225_applyFnMeta(&(*_self_), _184221_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3b20c2_StructDecl>>()) {
			_case_begin_1c333ab3a:;
			{
				jule::Ptr<_1be3b20c2_StructDecl> _184821_sd = _183233_node._field_Data.operator jule::Ptr<_1be3b20c2_StructDecl>();;
				if ((_184821_sd == nullptr)) {
					return;;
				};
				_184821_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1c333a84e:;
	};
}



inline void _1c0a00720_pushUseDecl(jule::Ptr<_1c09e2976_parser> _self_, jule::Ptr<_1be3ae564_UseDecl>& _185736_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185736_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _185736_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1c09e3702_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c0a00a2d_pushMetaNodes(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _186538_tokens) {
	{
		auto &_match_expr{ _186538_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c3341789:;
			{
				;
				jule::Ptr<_1be3ae564_UseDecl> _186921_decl = _1c09ea385_buildUseDecl(_self_.ptr(), _186538_tokens,false);;
				_1c0a00720_pushUseDecl(_self_, _186921_decl);
				return true;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c3341800:;
			{
				if (((_186538_tokens.len() > 1LL) && (_186538_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1be3ae564_UseDecl> _187425_decl = _1c09ede49_buildCppLinkUse(_self_, _186538_tokens);;
					_1c0a00720_pushUseDecl(_self_, _187425_decl);
					return true;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1c3341877:;
			{
				_1c09e4093_pushDirective(_self_.ptr(), _1c09e3d1d_buildDirective(_self_.ptr(), _186538_tokens));
				return true;
			}
		}
		_match_end_1c334168a:;
	};
	return false;
}



inline _1be362e30_Node _1c0a00d3b_parseNode(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _188534_st) {
	_1be362e30_Node _188617_node = _1be362e30_Node{._field_Token=_188534_st[0LL], };;
	if (_1c0a00a2d_pushMetaNodes(_self_, _188534_st)) {
		return _188617_node;
	};
	jule::Any _189417_data = _1c09eeea0_buildNodeData(_self_, _188534_st);;
	if ((_189417_data == nullptr)) {
		return _188617_node;
	};
	_188617_node._field_Data=_189417_data;
	_1c0a0049a_applyMeta(_self_.ptr(), _188617_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188617_node;
}



inline void _1c0a010b1_appendNode(jule::Ptr<_1c09e2976_parser> _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _190935_st) {
	if ((_190935_st.len() == 0LL)) {
		return;;
	};
	_1be362e30_Node _191317_node = _1c0a00d3b_parseNode(_self_, _190935_st);;
	if (((_191317_node._field_Data == nullptr) || _1c09e301a_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_191317_node);;
}



inline void _1c0a01523_removeRange(_1c09e2976_parser* _self_, jule::I64 _192030_i, jule::Str _192038_kind, jule::Slice<jule::Ptr<_1d675d511_Token>>& _192050_tokens, jule::Slice<jule::I64>& _192073_ranges) {
	jule::Str _192113_close = _1c09e19ec_getCloseKindOfBrace(_192038_kind);;
	for (; (_192030_i >= 0LL); (_192030_i)--) {
		{
			jule::Ptr<_1d675d511_Token> _192317_tok = _192050_tokens[_192073_ranges[_192030_i]];;
			if ((_192317_tok.get()._field_Kind != _192113_close)) {
				goto _iter_next_1c334b101;
			};
			_192073_ranges=jule::append(_192073_ranges.slice(0LL,_192030_i),_192073_ranges.slice((_192030_i + 1LL)));
			goto _iter_end_1c334b101;
		}
	_iter_next_1c334b101:;
	}
	_iter_end_1c334b101:;;
}



inline void _1c0a018db_pushWrongOrderCloseErr(_1c09e2976_parser* _self_, jule::Ptr<_1d675d511_Token>& _193242_t, jule::Slice<jule::Ptr<_1d675d511_Token>>& _193254_tokens, jule::Slice<jule::I64>& _193273_ranges) {
	{
		auto &_match_expr{ _193254_tokens[_193273_ranges[(_193273_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1c334d411:;
			{
				_1c09e33d3_pushErr(&(*_self_), _193242_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1c334d488:;
			{
				_1c09e33d3_pushErr(&(*_self_), _193242_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1c334d510:;
			{
				_1c09e33d3_pushErr(&(*_self_), _193242_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c334d2ce:;
	};
}



inline void _1c0a01d4d_pushRangeClose(_1c09e2976_parser* _self_, jule::Ptr<_1d675d511_Token> _194333_t, jule::Str _194344_left, jule::Slice<jule::Ptr<_1d675d511_Token>>& _194356_tokens, jule::Slice<jule::I64>& _194379_ranges) {
	jule::I64 _194413_n = _194379_ranges.len();;
	if ((_194413_n == 0LL)) {
		{
			auto &_match_expr{ _194333_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1c33510a1:;
				{
					_1c09e33d3_pushErr(&(*_self_), _194333_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1c3351117:;
				{
					_1c09e33d3_pushErr(&(*_self_), _194333_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1c335118e:;
				{
					_1c09e33d3_pushErr(&(*_self_), _194333_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1c3350d4d:;
		};
		return;;
	} else if ((_194356_tokens[_194379_ranges[(_194413_n - 1LL)]].get()._field_Kind != _194344_left)) {
		_1c0a018db_pushWrongOrderCloseErr(&(*_self_), _194333_t,_194356_tokens,_194379_ranges);
	};
	_1c0a01523_removeRange(&(*_self_), static_cast<jule::I64>((_194413_n - 1LL)),_194333_t.get()._field_Kind,_194356_tokens,_194379_ranges);
}



inline void _1c0a020c3_checkRanges(_1c09e2976_parser* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>>& _196131_tokens) {
	jule::Slice<jule::I64> _196217_ranges = nullptr;;
	{
		auto &expr = _196131_tokens;
		auto it = expr.begin();
		_iter_begin_1c33543a1:;
		if (it != expr.end()) {
			jule::I64 _196413_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> &_196416_token = *it;
			{
				if ((_196416_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1c33543a1;
				};
				{
					auto &_match_expr{ _196416_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1c3355638:;
						{
							_196217_ranges = jule::alloc_for_append(_196217_ranges,1);_196217_ranges.__push(_196413_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c33556d2:;
						{
							_1c0a01d4d_pushRangeClose(&(*_self_), _196416_token,jule::Str("(", 1),_196131_tokens,_196217_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1c3355748:;
						{
							_1c0a01d4d_pushRangeClose(&(*_self_), _196416_token,jule::Str("{", 1),_196131_tokens,_196217_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c33557ae:;
						{
							_1c0a01d4d_pushRangeClose(&(*_self_), _196416_token,jule::Str("[", 1),_196131_tokens,_196217_ranges);
						}
					}
					_match_end_1c33551b5:;
				};
			}
			_iter_next_1c33543a1:;
			++it;
			_196413_i++;
			goto _iter_begin_1c33543a1;
		}
		_iter_end_1c33543a1:;
	};
	{
		auto &expr = _196217_ranges;
		auto it = expr.begin();
		_iter_begin_1c33570da:;
		if (it != expr.end()) {
			jule::I64 _198216_i = *it;
			{
				jule::Ptr<_1d675d511_Token> _198317_token = _196131_tokens[_198216_i];;
				{
					auto &_match_expr{ _198317_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c3357e54:;
						{
							_1c09e33d3_pushErr(&(*_self_), _198317_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1c3357ecb:;
						{
							_1c09e33d3_pushErr(&(*_self_), _198317_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1c3358053:;
						{
							_1c09e33d3_pushErr(&(*_self_), _198317_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1c3357d88:;
				};
			}
			_iter_next_1c33570da:;
			++it;
			goto _iter_begin_1c33570da;
		}
		_iter_end_1c33570da:;
	};
}



inline void _1c0a02348_parse(jule::Ptr<_1c09e2976_parser> _self_, jule::Ptr<_1d676389b_File>& _199530_f) {
	_self_.get()._field_ast=jule::new_ptr<_1be3621a4_Ast>(_1be3621a4_Ast{._field_File=_199530_f, });
	_1c0a020c3_checkRanges(_self_.ptr(), _199530_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c09c5a9c_stmt>> _200517_stmts = _1c09c5e43_splitStmts(_199530_f.get()._field_Tokens);;
	jule::I64 _200817_i = 0LL;;
	for (; (_200817_i < _200517_stmts.len()); (_200817_i)++) {
		{
			jule::Ptr<_1c09c5a9c_stmt> _201021_stmt = _200517_stmts[_200817_i];;
			if ((_201021_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_201021_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1c335b100;
			};
			if ((!(_1d6437729_IsTopDirective(_201021_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1c335b100;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1c09e3d1d_buildDirective(_self_.ptr(), _201021_stmt.get()._field_tokens));;
		}
	_iter_next_1c335b100:;
	}
	_iter_end_1c335b100:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200817_i < _200517_stmts.len()); (_200817_i)++) {
		{
			jule::Ptr<_1c09c5a9c_stmt> _202721_stmt = _200517_stmts[_200817_i];;
			_1c0a010b1_appendNode(_self_, _202721_stmt.get()._field_tokens);
			if (_1c09e301a_stopped(_self_.ptr())) {
				goto _iter_end_1c335dbd5;
			};
		}
	_iter_next_1c335dbd5:;
	}
	_iter_end_1c335dbd5:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1c09e33d3_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c09e2976_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1c0a040e7_pushErr(_1c0a03a53_typeBuilder* _self_, jule::Ptr<_1d675d511_Token> _7326_token, jule::Str _7341_fmt) {
	if ((*_self_)._field_err) {
		_1c09e33d3_pushErr((*_self_)._field_p.ptr(), _7326_token,_7341_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1c0a04416_pushSuggestion(_1c0a03a53_typeBuilder* _self_, jule::Str _8033_fmt, jule::Slice<jule::Any> _8046_args) {
	if ((*_self_)._field_err) {
		_1c09e3702_pushSuggestion((*_self_)._field_p.ptr(), _8033_fmt,jule::Any(_8046_args));
	};
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a0467a_buildPrim(_1c0a03a53_typeBuilder* _self_) {
	jule::Ptr<_1be396a24_TypeDecl> _8717_t = _1c0a03206_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _8717_t;
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a048de_buildNamespace(_1c0a03a53_typeBuilder* _self_) {
	jule::Ptr<_1be396a24_TypeDecl> _9317_t = jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1be397ae1_NamespaceTypeDecl> _9717_nst = jule::new_ptr<_1be397ae1_NamespaceTypeDecl>();;
	jule::I64 _9817_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1d675d511_Token> _10021_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_9817_n & 1LL) == 0LL)) {
				if ((_10021_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1c0a040e7_pushErr(&(*_self_), _10021_token,jule::Str("invalid syntax", 14));
					_1c0a04416_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_9717_nst.get()._field_Idents = jule::alloc_for_append(_9717_nst.get()._field_Idents,1);_9717_nst.get()._field_Idents.__push(_10021_token);;
			} else if ((_10021_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1c3368a8b;
			};
			(_9817_n)++;
		}
	_iter_next_1c3368a8b:;
	}
	_iter_end_1c3368a8b:;;
	_9717_nst.get()._field_Idents=_9717_nst.get()._field_Idents.slice(0LL,(_9717_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_9717_nst.get()._field_Kind=_1c0a0512b_buildIdent(&(*_self_));
	_9317_t.get()._field_Kind=static_cast<jule::Any>(_9717_nst);
	return _9317_t;
}



inline jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _1c0a04b53_buildGenerics(_1c0a03a53_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1d675d511_Token> _12613_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_12613_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12613_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _13117_parts = _1c0a04db7_identGenerics(&(*_self_));;
	if ((_13117_parts.len() == 0LL)) {
		_1c0a040e7_pushErr(&(*_self_), _12613_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1be396a24_TypeDecl>> _13717_types = jule::Slice<jule::Ptr<_1be396a24_TypeDecl>>::alloc(0LL,_13117_parts.len());;
	{
		auto &expr = _13117_parts;
		auto it = expr.begin();
		_iter_begin_1c33716cb:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _13821_part = *it;
			{
				jule::I64 _13921_j = 0LL;;
				jule::Ptr<_1be396a24_TypeDecl> _14022_t;;
				std::tie(_14022_t,std::ignore) = _1c09e4cec_buildType((*_self_)._field_p, _13821_part,(&(_13921_j)),true);
				if ((_13921_j < _13821_part.len())) {
					_1c0a040e7_pushErr(&(*_self_), _13821_part[_13921_j],jule::Str("invalid syntax", 14));
				};
				_13717_types = jule::alloc_for_append(_13717_types,1);_13717_types.__push(_14022_t);;
			}
			_iter_next_1c33716cb:;
			++it;
			goto _iter_begin_1c33716cb;
		}
		_iter_end_1c33716cb:;
	};
	return _13717_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c0a04db7_identGenerics(_1c0a03a53_typeBuilder* _self_) {
	jule::I64 _15013_first = (*((*_self_)._field_i));;
	jule::I64 _15117_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1d675d511_Token> _15317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15317_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15317_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1c33753a0:;
						{
							(_15117_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c3375427:;
						{
							(_15117_rangeN)--;
						}
					}
					_match_end_1c337516e:;
				};
			};
			if ((_15117_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1c3374019;
			};
		}
	_iter_next_1c3374019:;
	}
	_iter_end_1c3374019:;;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _16717_tokens = (*_self_)._field_tokens.slice((_15013_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _16818_parts;;
	jule::Slice<_1d6435804_Log> _16825_errors;;
	std::tie(_16818_parts,_16825_errors) = _1c09e1755_parts(_16717_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_16825_errors);
	};
	return _16818_parts;
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a0512b_buildIdent(_1c0a03a53_typeBuilder* _self_) {
	jule::Bool _17617_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_17617_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1c0a048de_buildNamespace(&(*_self_));
	};
	jule::Ptr<_1d675d511_Token> _18017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1be3970da_IdentTypeDecl> _18117_it = jule::new_ptr<_1be3970da_IdentTypeDecl>(_1be3970da_IdentTypeDecl{._field_Token=_18017_token, ._field_Ident=_18017_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1be396a24_TypeDecl> _18717_itd = jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_18117_it)});;
	if (((!(_17617_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_18117_it.get()._field_Generics=_1c0a04b53_buildGenerics(&(*_self_));
		return _18717_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1c0a040e7_pushErr(&(*_self_), _18017_token,jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1c0a040e7_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _18717_itd;
	};
	jule::Ptr<_1be397739_SubIdentTypeDecl> _20417_sit = jule::new_ptr<_1be397739_SubIdentTypeDecl>();;
	_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_18117_it);;
	jule::Ptr<_1be396a24_TypeDecl> _20617_ident = _1c0a0512b_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _20617_ident.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1be3970da_IdentTypeDecl>>()) {
			_case_begin_1c33805b9:;
			{
				_20417_sit.get()._field_Idents = jule::alloc_for_append(_20417_sit.get()._field_Idents,1);_20417_sit.get()._field_Idents.__push(_20617_ident.get()._field_Kind.operator jule::Ptr<_1be3970da_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be397739_SubIdentTypeDecl>>()) {
			_case_begin_1c3380685:;
			{
				_20417_sit.get()._field_Idents=jule::append(_20417_sit.get()._field_Idents,_20617_ident.get()._field_Kind.operator jule::Ptr<_1be397739_SubIdentTypeDecl>().get()._field_Idents);
			}
		}
		_match_end_1c3380564:;
	};
	return jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_18017_token, ._field_Kind=static_cast<jule::Any>(_20417_sit)});
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a05390_buildCppLink(_1c0a03a53_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1c0a040e7_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1be396a24_TypeDecl> _22517_t = _1c0a0512b_buildIdent(&(*_self_));;
	_22517_t.get()._field_Kind.operator jule::Ptr<_1be3970da_IdentTypeDecl>().get()._field_CppLinked=true;
	return _22517_t;
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a05604_buildFn(_1c0a03a53_typeBuilder* _self_) {
	jule::Ptr<_1d675d511_Token> _23117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1be3a8838_FnDecl> _23217_f = _1c09e89e3_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23217_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1be3a8b8a_IsAnon(_23217_f.ptr())))) {
		_1c0a040e7_pushErr(&(*_self_), _23217_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_23117_token, ._field_Kind=static_cast<jule::Any>(_23217_f)});
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a05868_buildPtr(_1c0a03a53_typeBuilder* _self_) {
	jule::Ptr<_1d675d511_Token> _24617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1c0a040e7_pushErr(&(*_self_), _24617_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be3988a0_PtrTypeDecl>(_1be3988a0_PtrTypeDecl{._field_Elem=nullptr}))});
	};
	jule::Ptr<_1be396a24_TypeDecl> _26317_elem = _1c0a06b99_step(&(*_self_));;
	if ((_26317_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_24617_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be3988a0_PtrTypeDecl>(_1be3988a0_PtrTypeDecl{._field_Elem=_26317_elem}))});
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a05acc_buildSptr(_1c0a03a53_typeBuilder* _self_) {
	jule::Ptr<_1d675d511_Token> _27717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1c0a040e7_pushErr(&(*_self_), _27717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1be396a24_TypeDecl> _28417_elem = _1c0a06b99_step(&(*_self_));;
	if ((_28417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_27717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be397dcc_SptrTypeDecl>(_1be397dcc_SptrTypeDecl{._field_Elem=_28417_elem}))});
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a05d41_buildOp(_1c0a03a53_typeBuilder* _self_) {
	jule::Ptr<_1d675d511_Token> _29817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _29817_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c338dbc1:;
			{
				return _1c0a05868_buildPtr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c338dc37:;
			{
				return _1c0a05acc_buildSptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c338dc9d:;
			{
				return jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be397dcc_SptrTypeDecl>(_1be397dcc_SptrTypeDecl{._field_Elem=_1c0a05acc_buildSptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1c338db16:;
			{
				_1c0a040e7_pushErr(&(*_self_), _29817_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1c338da6c:;
	};
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a060a5_buildSlc(_1c0a03a53_typeBuilder* _self_) {
	jule::Ptr<_1d675d511_Token> _31717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1be396a24_TypeDecl> _31917_elem = _1c0a06b99_step(&(*_self_));;
	if ((_31917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_31717_token, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be3982c8_SlcTypeDecl>(_1be3982c8_SlcTypeDecl{._field_Elem=_31917_elem}))});
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a06319_buildArr(_1c0a03a53_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1c0a040e7_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _34013_exprDelta = (*((*_self_)._field_i));;
	jule::Ptr<_1be396a24_TypeDecl> _34217_elem = _1c0a06b99_step(&(*_self_));;
	if ((_34217_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1be399032_ArrTypeDecl> _34717_arrt = jule::new_ptr<_1be399032_ArrTypeDecl>(_1be399032_ArrTypeDecl{._field_Elem=_34217_elem, });;
	jule::Slice<jule::Ptr<_1d675d511_Token>> _35117_exprTokens = (*_self_)._field_tokens.slice(0LL,_34013_exprDelta);;
	std::tie(std::ignore,_35117_exprTokens) = _1c09e0e80_rangeLast(_35117_exprTokens);
	_35117_exprTokens=_35117_exprTokens.slice(1LL,(_35117_exprTokens.len() - 1LL));
	jule::Ptr<_1d675d511_Token> _35417_token = _35117_exprTokens[0LL];;
	if ((((_35117_exprTokens.len() == 1LL) && (_35417_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_35417_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_34717_arrt.get()._field_Size=_1c09e3a10_buildExpr((*_self_)._field_p, _35117_exprTokens);
	};
	return jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_35417_token, ._field_Kind=static_cast<jule::Any>(_34717_arrt)});
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a066c1_buildMap(_1c0a03a53_typeBuilder* _self_, jule::I64 _36734_start, jule::I64 _36746_delim) {
	jule::Ptr<_1d675d511_Token> _36817_delimToken = (*_self_)._field_tokens[_36746_delim];;
	if (((_36746_delim == 0LL) || ((_36746_delim + 1LL) >= (*_self_)._field_tokens.len()))) {
		_1c0a040e7_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1d675d511_Token>> _37517_keyTokens = (*_self_)._field_tokens.slice((_36734_start + 1LL),(_36746_delim - 1LL));;
	if ((_37517_keyTokens.len() == 0LL)) {
		_1c0a040e7_pushErr(&(*_self_), _36817_delimToken,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Ptr<_1be399780_MapTypeDecl> _38117_mapt = jule::new_ptr<_1be399780_MapTypeDecl>();;
	jule::I64 _38317_j = 0LL;;
	jule::Ptr<_1be396a24_TypeDecl> _38418_keyt;;
	jule::Bool _38428_ok;;
	std::tie(_38418_keyt,_38428_ok) = _1c09e4cec_buildType((*_self_)._field_p, _37517_keyTokens,(&(_38317_j)),(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	} else if ((_38317_j < _37517_keyTokens.len())) {
		_1c0a040e7_pushErr(&(*_self_), _37517_keyTokens[_38317_j],jule::Str("invalid syntax", 14));
	};
	_38117_mapt.get()._field_Key=_38418_keyt;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1be396a24_TypeDecl> _39318_valt;;
	std::tie(_39318_valt,_38428_ok) = _1c09e4cec_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
	if ((!(_38428_ok))) {
		return nullptr;
	};
	_38117_mapt.get()._field_Val=_39318_valt;
	return jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_36817_delimToken, ._field_Kind=static_cast<jule::Any>(_38117_mapt)});
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a06935_buildEnumerable(_1c0a03a53_typeBuilder* _self_) {
	jule::Ptr<_1d675d511_Token> _40517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40517_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_40517_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1c0a040e7_pushErr(&(*_self_), _40517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40517_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_40517_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1c0a060a5_buildSlc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::I64 _41913_i = (*((*_self_)._field_i));;
	jule::I64 _42017_delim = _1c0a03547_mapColon((*_self_)._field_tokens,(*((*_self_)._field_i)));;
	((*((*_self_)._field_i)))++;
	if ((_42017_delim == -1LL)) {
		return _1c0a06319_buildArr(&(*_self_));
	};
	return _1c0a066c1_buildMap(&(*_self_), _41913_i,_42017_delim);
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a06b99_step(_1c0a03a53_typeBuilder* _self_) {
	jule::Ptr<_1d675d511_Token> _42913_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _42913_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c33a5028:;
			{
				return _1c0a0467a_buildPrim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c33a4e18:;
			{
				return _1c0a0512b_buildIdent(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c33a4e7e:;
			{
				return _1c0a05390_buildCppLink(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c33a4346:;
			{
				return _1c0a05604_buildFn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c33a43ac:;
			{
				return _1c0a05d41_buildOp(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c33a4423:;
			{
				return _1c0a06935_buildEnumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1c33a42d0:;
			{
				((*((*_self_)._field_i)))++;
				_1c0a040e7_pushErr(&(*_self_), _42913_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1c33a4159:;
	};
}



inline std::tuple<jule::Ptr<_1be396a24_TypeDecl>,jule::Bool> _1c0a06e0d_build(_1c0a03a53_typeBuilder* _self_) {
	jule::Bool _45244_ok = jule::Bool();
	jule::Ptr<_1be396a24_TypeDecl> _45317_root = _1c0a06b99_step(&(*_self_));;
	if ((_45317_root == nullptr)) {
		_45244_ok = false;
		return std::make_tuple(_1c0a02e92_buildVoidType(),_45244_ok);
	};
	_45244_ok = true;
	return std::make_tuple(_45317_root,_45244_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1c0a03a53_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c02b7db7_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1c02b976a_pushErr(_1c02b921a_directiveEval* _self_, jule::Ptr<_1d675d511_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1d6435804_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1d6435c44_Logf(_2137_fmt,jule::Any(_2150_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c02b9b22_splitOperans(_1c02b921a_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1d675d511_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1d675d511_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c33cb527:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1c33ca427;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c33cb58d:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1c33cb318:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1c33ca427;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1c33ca427:;
	}
	_iter_end_1c33ca427:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_1c02b976a_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1c02b9e30_evalDirectiveIdent(_1c02b921a_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1c33cea9c:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;
				};
			}
			_iter_next_1c33cea9c:;
			++it;
			goto _iter_begin_1c33cea9c;
		}
		_iter_end_1c33cea9c:;
	};
	return false;
}



inline jule::Bool _1c02ba23d_evalDirectivePart(_1c02b921a_directiveEval* _self_, jule::Slice<jule::Ptr<_1d675d511_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1c02b976a_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1c02b9e30_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1c02ba4a2_eval(_1c02b921a_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_1c02b976a_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _11317_logicalOrParts = _1c02b9b22_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1c33d5cc3:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d675d511_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _12021_logicalAndParts = _1c02b9b22_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1c33d71ae:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1d675d511_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1d675d511_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_1d675d511_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1c02b976a_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1c02ba23d_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1c33d71ae:;
						++it;
						goto _iter_begin_1c33d71ae;
					}
					_iter_end_1c33d71ae:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1c33d5cc3:;
			++it;
			goto _iter_begin_1c33d5cc3;
		}
		_iter_end_1c33d5cc3:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1c02b921a_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c065a589_JuleImporter> static__1c01da9aa_New(_1c02b7db7_CompileInfo _5819_info) {
	jule::Ptr<_1c065a589_JuleImporter> _5917_imp = jule::new_ptr<_1c065a589_JuleImporter>(_1c065a589_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_231edd130_PathStdlib}), });;
	_1c02b86d1_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1c005b3a8_ImportInfo>> _1c01ea448_AllPackages(_1c065a589_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1c020d8bd_SetModPath(_1c065a589_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _1c064a029_GetModPath(_1c065a589_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1c0651c01_ModById(_1c065a589_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c079e733_GetImport(_1c065a589_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1c33de65b:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;
				};
			}
			_iter_next_1c33de65b:;
			++it;
			goto _iter_begin_1c33de65b;
		}
		_iter_end_1c33de65b:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1be3621a4_Ast>>,jule::Slice<_1d6435804_Log>> _1c07a895c_ImportPackage(_1c065a589_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	jule::Slice<jule::Ptr<_23214d823_DirEntry>> _9717_dirents = ({
		auto except = static__1d63ab67b_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1d6435804_Log>::make({_1c01d8876_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))}));
		} jule::Slice<jule::Ptr<_23214d823_DirEntry>>();});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1c02c902c_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_1d6435804_Log> _10525_errs = _1c02c92b3_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1be3621a4_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1be3621a4_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1c33e38a2:;
		if (it != expr.end()) {
			jule::Ptr<_23214d823_DirEntry> _11316_dirent = *it;
			{
				if ((_2320909eb_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1d637218b_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1c33e38a2;
				};
				jule::Str _11917__path = _1d63a86de_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1d676389b_File> _12021_file = _1d6764dca_NewFileSet(_11917__path);;
				_1d676402d_Fill(_12021_file.ptr(), _1be17656d_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1d6435804_Log> _12221_errors = _1d677566b_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1c097c34a_FileInfo> _12721_finfo = _1c09c3a45_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_Errors);
				};
				if ((!(_1c029da90_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1c33e38a2;
				};
				jule::Bool _13718_r;;
				jule::Slice<_1d6435804_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1c07cb650_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1c33e38a2;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1c33e38a2:;
			++it;
			goto _iter_begin_1c33e38a2;
		}
		_iter_end_1c33e38a2:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1c07c11b1_Imported(_1c065a589_JuleImporter* _self_, jule::Ptr<_1c005b3a8_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1c33e9435:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1c33e9435:;
			++it;
			goto _iter_begin_1c33e9435;
		}
		_iter_end_1c33e9435:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1c33ead1b:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1c33ead1b:;
				++it;
				_16217_i++;
				goto _iter_begin_1c33ead1b;
			}
			_iter_end_1c33ead1b:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_1d6435804_Log>> _1c07cb650_isPassBuildDirectives(_1c065a589_JuleImporter* _self_, jule::Ptr<_1be3621a4_Ast>& _17945_file) {
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1c33ee094:;
		if (it != expr.end()) {
			jule::Ptr<_1be36332b_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1c33ee094;
				};
				_1c02b921a_directiveEval _18421_de = _1c02b921a_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1c02ba4a2_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1c33ee094:;
			++it;
			goto _iter_begin_1c33ee094;
		}
		_iter_end_1c33ee094:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1c065a589_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c07bb112_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c3581c93_isCommonOrdered(jule::Slice<jule::Ptr<_1be387251_Struct>>& _1835_s, jule::Ptr<_1be387251_Struct> _1844_t) {
	jule::Ptr<_1be387251_Struct>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1be387251_Struct>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1c3584bca:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1c3584bca;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1c3584bca:;
			++it;
			goto _iter_begin_1c3584bca;
		}
		_iter_end_1c3584bca:;
	};
	return false;
}

inline jule::Bool _1c358a153_isCommonOrdered(jule::Slice<jule::Ptr<_1c0081334_Var>>& _1835_s, jule::Ptr<_1c0081334_Var> _1844_t) {
	jule::Ptr<_1c0081334_Var>* _1917_p = (&(_1844_t.get()._field_Depends[0LL]));;
	jule::Ptr<_1c0081334_Var>* _2013_end = (_1917_p + _1844_t.get()._field_Depends.len());;
	{
		auto &expr = _1835_s;
		auto it = expr.begin();
		_iter_begin_1c358d046:;
		if (it != expr.end()) {
			jule::Ptr<_1c0081334_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1844_t)) {
						goto _iter_end_1c358d046;
					};
					if ((((*(_1917_p)).get()._field_CppLinked || ((*(_1917_p)).get()._field_Depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1c358d046:;
			++it;
			goto _iter_begin_1c358d046;
		}
		_iter_end_1c358d046:;
	};
	return false;
}



inline void _1c357ccd3_orderCommon(jule::Slice<jule::Ptr<_1be387251_Struct>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1c357e136:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1be387251_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1c357e136:;
			++it;
			_4114_j++;
			goto _iter_begin_1c357e136;
		}
		_iter_end_1c357e136:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1c3581c93_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1c35816aa:;
			}
			_iter_end_1c35816aa:;;
		}
	_iter_next_1c357e0ae:;
	}
	_iter_end_1c357e0ae:;;
}

inline void _1c357d003_orderCommon(jule::Slice<jule::Ptr<_1c0081334_Var>>& _3935_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3935_s;
		auto it = expr.begin();
		_iter_begin_1c35874e6:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1c0081334_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_CppLinked || (_4121_t.get()._field_Depends.len() == 0LL))) {
					_3935_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1c35874e6:;
			++it;
			_4114_j++;
			goto _iter_begin_1c35874e6;
		}
		_iter_end_1c35874e6:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3935_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3935_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1c358a153_isCommonOrdered(_3935_s,_3935_s[_5021_k])))) {
						_3935_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1c3589a6a:;
			}
			_iter_end_1c3589a6a:;;
		}
	_iter_next_1c358746e:;
	}
	_iter_end_1c358746e:;;
}



inline void static__1c08e942c_orderStructures(jule::Slice<jule::Ptr<_1be387251_Struct>>& _6136_structs) {
	_1c357ccd3_orderCommon(_6136_structs);
}



inline void static__1c091801c_orderVars(jule::Slice<jule::Ptr<_1c0081334_Var>>& _6730_vars) {
	_1c357d003_orderCommon(_6730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1c079c29c_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0ad5706_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1c0b17815_optimizeChild(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c00487b3_Scope>& _3938_s) {
	jule::Ptr<_1c0b1733c_scopeDeadCode> _4017_sdc = jule::new_ptr<_1c0b1733c_scopeDeadCode>(_1c0b1733c_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1c0b19e55_optimizeStmts(_4017_sdc);
	};
}



inline void _1c0b17aac_optimizeBodyChildExceptional(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c00487b3_Scope>& _5053_s) {
	jule::Ptr<_1c0b1733c_scopeDeadCode> _5117_sdc = jule::new_ptr<_1c0b1733c_scopeDeadCode>(_1c0b1733c_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1c0b19e55_optimizeStmts(_5117_sdc);
	};
}



inline void _1c0b17d43_optimizeBodyChild(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c00487b3_Scope>& _6142_s) {
	jule::Ptr<_1c0b1733c_scopeDeadCode> _6217_sdc = jule::new_ptr<_1c0b1733c_scopeDeadCode>(_1c0b1733c_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1c0b19e55_optimizeStmts(_6217_sdc);
	};
}



inline void _1c0b180b8_optimizeExprModel(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_1c0b1b297_exprDeadCode _7213_edc = static__1c0b1b891_new(_self_);;
	_1c0b21d3b_optimize(&_7213_edc, _7142_model);
}



inline void _1c0b18294_eliminateFollowed(_1c0b1733c_scopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1c0b1733c_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1c360cacc:;
	}
	_iter_end_1c360cacc:;;
}



inline void _1c0b18519_pushGoto(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c0049be3_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < _self_.get()._field_labels.get().len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1c3610508:;
	}
	_iter_end_1c3610508:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1c0049be3_GotoSt>>::make({_9232_gt}));
}



inline void _1c0b1878e_pushLabel(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c0049a06_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1c3612274;
			};
			(_10317_i)++;
		}
	_iter_next_1c3612274:;
	}
	_iter_end_1c3612274:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1c0049a06_Label>>::make({_10233_l}));
}



inline void _1c0b18a14_optimizeRangeIter(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c0049440_RangeIter> _11541_it) {
	_1c0b180b8_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_1c0b17d43_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _1c0b18c89_optimizeWhileIter(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c0049253_WhileIter> _12041_it) {
	_1c0b180b8_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1c0b19c79_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1c0b17d43_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _1c0b1900e_optimizeInfIter(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c0049066_InfIter> _12839_it) {
	_1c0b17d43_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _1c0b19284_optimizeConditional(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c0048d79_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c3617cc4:;
		if (it != expr.end()) {
			jule::Ptr<_1c00489a0_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1c0b180b8_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_1c0b17d43_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1c3617cc4:;
			++it;
			goto _iter_begin_1c3617cc4;
		}
		_iter_end_1c3617cc4:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1c0b17815_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_1c0b17d43_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1c0b19509_optimizeMatch(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c004a496_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c361a931:;
		if (it != expr.end()) {
			jule::Ptr<_1c004a9e6_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1c361b2a0:;
					if (it != expr.end()) {
						jule::Ptr<_1c00cd282_Data> _15225_expr = *it;
						{
							_1c0b180b8_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1c361b2a0:;
						++it;
						goto _iter_begin_1c361b2a0;
					}
					_iter_end_1c361b2a0:;
				};
				_1c0b17d43_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1c361a931:;
			++it;
			goto _iter_begin_1c361a931;
		}
		_iter_end_1c361a931:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1c0b17815_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_1c0b17d43_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1c0b1977e_optimizeAssign(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c004a0bc_Assign> _16838_assign) {
	_1c0b180b8_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_1c0b180b8_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _1c0b19a04_optimizeMultiAssign(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Ptr<_1c004a2a9_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1c361e748:;
		if (it != expr.end()) {
			jule::Any _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1c0b180b8_optimizeExprModel(_self_, _17421_l);
				};
			}
			_iter_next_1c361e748:;
			++it;
			goto _iter_begin_1c361e748;
		}
		_iter_end_1c361e748:;
	};
	_1c0b180b8_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _1c0b19c79_optimizeStmt(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c00487b3_Scope>>()) {
			_case_begin_1c3620d87:;
			{
				jule::Ptr<_1c00487b3_Scope> _18521_scope = _18236_st.operator jule::Ptr<_1c00487b3_Scope>();;
				if (_18521_scope.get()._field_Deferred) {
					_1c0b1a241_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1c0b17815_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049440_RangeIter>>()) {
			_case_begin_1c362100d:;
			{
				_1c0b18a14_optimizeRangeIter(_self_, _18236_st.operator jule::Ptr<_1c0049440_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049253_WhileIter>>()) {
			_case_begin_1c3621074:;
			{
				_1c0b18c89_optimizeWhileIter(_self_, _18236_st.operator jule::Ptr<_1c0049253_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049066_InfIter>>()) {
			_case_begin_1c36210da:;
			{
				_1c0b1900e_optimizeInfIter(_self_, _18236_st.operator jule::Ptr<_1c0049066_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0048d79_Conditional>>()) {
			_case_begin_1c3621162:;
			{
				_1c0b19284_optimizeConditional(_self_, _18236_st.operator jule::Ptr<_1c0048d79_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004a496_Match>>()) {
			_case_begin_1c36211d9:;
			{
				_1c0b19509_optimizeMatch(_self_, _18236_st.operator jule::Ptr<_1c004a496_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004a0bc_Assign>>()) {
			_case_begin_1c3621261:;
			{
				_1c0b1977e_optimizeAssign(_self_, _18236_st.operator jule::Ptr<_1c004a0bc_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004a2a9_MultiAssign>>()) {
			_case_begin_1c36212d8:;
			{
				_1c0b19a04_optimizeMultiAssign(_self_, _18236_st.operator jule::Ptr<_1c004a2a9_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c00cd282_Data>>()) {
			_case_begin_1c3621360:;
			{
				jule::Ptr<_1c00cd282_Data> _20621_d = _18236_st.operator jule::Ptr<_1c00cd282_Data>();;
				if (_self_.get()._field_except) {
					goto _match_end_1c3620e97;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>>()) {
						_case_begin_1c36264ec:;
						{
							_1c0b18294_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1c3626a19:;
						{
							_1c0b180b8_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1c36269b4:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004b002_RetSt>>()) {
			_case_begin_1c36213d7:;
			{
				_1c0b18294_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049be3_GotoSt>>()) {
			_case_begin_1c362145e:;
			{
				_1c0b18519_pushGoto(_self_, _18236_st.operator jule::Ptr<_1c0049be3_GotoSt>());
				_1c0b18294_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049a06_Label>>()) {
			_case_begin_1c36214d6:;
			{
				_1c0b1878e_pushLabel(_self_, _18236_st.operator jule::Ptr<_1c0049a06_Label>());
			}
		}
		_match_end_1c3620e97:;
	};
}



inline void _1c0b19e55_optimizeStmts(jule::Ptr<_1c0b1733c_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1c0b19c79_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1c362619a:;
	}
	_iter_end_1c362619a:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c0b1733c_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1c0b1b297_exprDeadCode static__1c0b1b891_new(jule::Ptr<_1c0b1733c_scopeDeadCode>& _4724_s) {
	return _1c0b1b297_exprDeadCode{._field_s=_4724_s};
}



inline void _1c0b1bb16_binary(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be457464_BinopExprModel> _5325_m) {
	_1c0b21d3b_optimize(&(*_self_), _5325_m.get()._field_Left.get()._field_Model);
	_1c0b21d3b_optimize(&(*_self_), _5325_m.get()._field_Right.get()._field_Model);
}



inline void _1c0b1bd8b_unary(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be457651_UnaryExprModel> _5824_m) {
	_1c0b21d3b_optimize(&(*_self_), _5824_m.get()._field_Expr.get()._field_Model);
}



inline void _1c0b1c111_structureLit(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be457a2a_StructLitExprModel> _6231_m) {
	{
		auto &expr = _6231_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1c362c0e6:;
		if (it != expr.end()) {
			jule::Ptr<_1be45783d_StructArgExprModel> _6321_arg = *it;
			{
				_1c0b21d3b_optimize(&(*_self_), _6321_arg.get()._field_Expr);
			}
			_iter_next_1c362c0e6:;
			++it;
			goto _iter_begin_1c362c0e6;
		}
		_iter_end_1c362c0e6:;
	};
}



inline void _1c0b1c386_allocStructure(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be457c17_AllocStructLitExprModel> _6833_m) {
	_1c0b1c111_structureLit(&(*_self_), _6833_m.get()._field_Lit);
}



inline void _1c0b1c60b_casting(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be457e04_CastingExprModel> _7226_m) {
	_1c0b21d3b_optimize(&(*_self_), _7226_m.get()._field_Expr);
}



inline void _1c0b1c881_args(_1c0b1b297_exprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1c362e36d:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1c0b21d3b_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1c362e36d:;
			++it;
			goto _iter_begin_1c362e36d;
		}
		_iter_end_1c362e36d:;
	};
}



inline void _1c0b1cb06_funcCall(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be4580e1_FnCallExprModel> _8227_m) {
	_1c0b21d3b_optimize(&(*_self_), _8227_m.get()._field_Expr);
	_1c0b1c881_args(&(*_self_), _8227_m.get()._field_Args);
	if ((_8227_m.get()._field_Except != nullptr)) {
		_1c0b17aac_optimizeBodyChildExceptional((*_self_)._field_s, _8227_m.get()._field_Except);
	};
}



inline void _1c0b1cd7b_slice(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be4582cd_SliceExprModel> _9024_m) {
	_1c0b1c881_args(&(*_self_), _9024_m.get()._field_Elems);
}



inline void _1c0b1d101_array(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be459752_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_Elems.len() == 2LL) && (_9424_m.get()._field_Elems[1LL] == nullptr))) {
		_1c0b21d3b_optimize(&(*_self_), _9424_m.get()._field_Elems[0LL]);
	};
	_1c0b1c881_args(&(*_self_), _9424_m.get()._field_Elems);
}



inline void _1c0b1d376_indexing(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be4584ba_IndexingExprModel> _10127_m) {
	_1c0b21d3b_optimize(&(*_self_), _10127_m.get()._field_Expr.get()._field_Model);
	_1c0b21d3b_optimize(&(*_self_), _10127_m.get()._field_Index.get()._field_Model);
}



inline void _1c0b1d5eb_anonFunc(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be4586a7_AnonFnExprModel> _10627_m) {
	_1c0b1a241_eliminateDeadCodeOfScope(_10627_m.get()._field_Func.get()._field_Scope);
}



inline void _1c0b1d871_map(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be458a81_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1c36352a8:;
		if (it != expr.end()) {
			jule::Ptr<_1be458894_KeyValPairExprModel> _11121_pair = *it;
			{
				_1c0b21d3b_optimize(&(*_self_), _11121_pair.get()._field_Key);
				_1c0b21d3b_optimize(&(*_self_), _11121_pair.get()._field_Val);
			}
			_iter_next_1c36352a8:;
			++it;
			goto _iter_begin_1c36352a8;
		}
		_iter_end_1c36352a8:;
	};
}



inline void _1c0b1dae6_slicing(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be458c6d_SlicingExprModel> _11726_m) {
	_1c0b21d3b_optimize(&(*_self_), _11726_m.get()._field_Expr);
	_1c0b21d3b_optimize(&(*_self_), _11726_m.get()._field_Left);
	if ((_11726_m.get()._field_Right != nullptr)) {
		_1c0b21d3b_optimize(&(*_self_), _11726_m.get()._field_Right);
	};
}



inline void _1c0b1dd6b_traitSub(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be458e5a_TraitSubIdentExprModel> _12527_m) {
	_1c0b21d3b_optimize(&(*_self_), _12527_m.get()._field_Expr);
}



inline void _1c0b1e0e1_structureSub(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be459378_StructSubIdentExprModel> _12931_m) {
	_1c0b21d3b_optimize(&(*_self_), _12931_m.get()._field_Expr.get()._field_Model);
}



inline void _1c0b1e366_commonSub(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be459b2b_CommonSubIdentExprModel> _13328_m) {
	_1c0b21d3b_optimize(&(*_self_), _13328_m.get()._field_Expr);
}



inline void _1c0b1e5db_tuple(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be459d18_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1c3639796:;
		if (it != expr.end()) {
			jule::Ptr<_1c00cd282_Data> _13821_d = *it;
			{
				_1c0b21d3b_optimize(&(*_self_), _13821_d.get()._field_Model);
			}
			_iter_next_1c3639796:;
			++it;
			goto _iter_begin_1c3639796;
		}
		_iter_end_1c3639796:;
	};
}



inline void _1c0b1e861_newCall(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel> _14326_m) {
	if ((_14326_m.get()._field_Init != nullptr)) {
		_1c0b21d3b_optimize(&(*_self_), _14326_m.get()._field_Init);
	};
}



inline void _1c0b1ead6_outCall(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45a005_BuiltinOutCallExprModel> _14926_m) {
	_1c0b21d3b_optimize(&(*_self_), _14926_m.get()._field_Expr);
}



inline void _1c0b1ed5b_outlnCall(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel> _15328_m) {
	_1c0b21d3b_optimize(&(*_self_), _15328_m.get()._field_Expr);
}



inline void _1c0b200d1_panicCall(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel> _15728_m) {
	_1c0b21d3b_optimize(&(*_self_), _15728_m.get()._field_Expr);
}



inline void _1c0b20356_assertCall(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45a995_BuiltinAssertCallExprModel> _16129_m) {
	_1c0b21d3b_optimize(&(*_self_), _16129_m.get()._field_Expr);
}



inline void _1c0b205cb_errorCall(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45b248_BuiltinErrorCallExprModel> _16528_m) {
	_1c0b21d3b_optimize(&(*_self_), _16528_m.get()._field_Err);
}



inline void _1c0b20851_makeCall(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel> _16927_m) {
	if ((_16927_m.get()._field_Len != nullptr)) {
		_1c0b21d3b_optimize(&(*_self_), _16927_m.get()._field_Len);
	};
	if ((_16927_m.get()._field_Cap != nullptr)) {
		_1c0b21d3b_optimize(&(*_self_), _16927_m.get()._field_Cap);
	};
}



inline void _1c0b20ac6_appendCall(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel> _17829_m) {
	_1c0b21d3b_optimize(&(*_self_), _17829_m.get()._field_Dest);
	_1c0b21d3b_optimize(&(*_self_), _17829_m.get()._field_Elements);
}



inline void _1c0b20d4b_cloneCall(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel> _18328_m) {
	_1c0b21d3b_optimize(&(*_self_), _18328_m.get()._field_Expr);
}



inline void _1c0b210c1_sizeof(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be459147_SizeofExprModel> _18725_m) {
	_1c0b21d3b_optimize(&(*_self_), _18725_m.get()._field_Expr);
}



inline void _1c0b21346_alignof(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45b8a8_AlignofExprModel> _19126_m) {
	_1c0b21d3b_optimize(&(*_self_), _19126_m.get()._field_Expr);
}



inline void _1c0b215bb_integratedToStr(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45bc82_IntegratedToStrExprModel> _19534_m) {
	_1c0b21d3b_optimize(&(*_self_), _19534_m.get()._field_Expr);
}



inline void _1c0b21841_free(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45c15b_FreeExprModel> _19923_m) {
	_1c0b21d3b_optimize(&(*_self_), _19923_m.get()._field_Expr);
}



inline void _1c0b21ab6_backendEmit(_1c0b1b297_exprDeadCode* _self_, jule::Ptr<_1be45be6e_BackendEmitExprModel> _20330_m) {
	_1c0b1c881_args(&(*_self_), _20330_m.get()._field_Exprs);
}



inline void _1c0b21d3b_optimize(_1c0b1b297_exprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1be457464_BinopExprModel>>()) {
			_case_begin_1c364496b:;
			{
				_1c0b1bb16_binary(&(*_self_), _20728_model.operator jule::Ptr<_1be457464_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457651_UnaryExprModel>>()) {
			_case_begin_1c36449e3:;
			{
				_1c0b1bd8b_unary(&(*_self_), _20728_model.operator jule::Ptr<_1be457651_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457a2a_StructLitExprModel>>()) {
			_case_begin_1c3644a6a:;
			{
				_1c0b1c111_structureLit(&(*_self_), _20728_model.operator jule::Ptr<_1be457a2a_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457c17_AllocStructLitExprModel>>()) {
			_case_begin_1c3644e11:;
			{
				_1c0b1c386_allocStructure(&(*_self_), _20728_model.operator jule::Ptr<_1be457c17_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457e04_CastingExprModel>>()) {
			_case_begin_1c3644e77:;
			{
				_1c0b1c60b_casting(&(*_self_), _20728_model.operator jule::Ptr<_1be457e04_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4580e1_FnCallExprModel>>()) {
			_case_begin_1c3644eee:;
			{
				_1c0b1cb06_funcCall(&(*_self_), _20728_model.operator jule::Ptr<_1be4580e1_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4582cd_SliceExprModel>>()) {
			_case_begin_1c3645076:;
			{
				_1c0b1cd7b_slice(&(*_self_), _20728_model.operator jule::Ptr<_1be4582cd_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459752_ArrayExprModel>>()) {
			_case_begin_1c36450ed:;
			{
				_1c0b1d101_array(&(*_self_), _20728_model.operator jule::Ptr<_1be459752_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4584ba_IndexingExprModel>>()) {
			_case_begin_1c3645175:;
			{
				_1c0b1d376_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1be4584ba_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4586a7_AnonFnExprModel>>()) {
			_case_begin_1c36451ec:;
			{
				_1c0b1d5eb_anonFunc(&(*_self_), _20728_model.operator jule::Ptr<_1be4586a7_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458a81_MapExprModel>>()) {
			_case_begin_1c3645274:;
			{
				_1c0b1d871_map(&(*_self_), _20728_model.operator jule::Ptr<_1be458a81_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458c6d_SlicingExprModel>>()) {
			_case_begin_1c36452eb:;
			{
				_1c0b1dae6_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1be458c6d_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458e5a_TraitSubIdentExprModel>>()) {
			_case_begin_1c3645373:;
			{
				_1c0b1dd6b_traitSub(&(*_self_), _20728_model.operator jule::Ptr<_1be458e5a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
			_case_begin_1c36453ea:;
			{
				_1c0b1e0e1_structureSub(&(*_self_), _20728_model.operator jule::Ptr<_1be459378_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459b2b_CommonSubIdentExprModel>>()) {
			_case_begin_1c3645472:;
			{
				_1c0b1e366_commonSub(&(*_self_), _20728_model.operator jule::Ptr<_1be459b2b_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459d18_TupleExprModel>>()) {
			_case_begin_1c36454e9:;
			{
				_1c0b1e5db_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1be459d18_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a005_BuiltinOutCallExprModel>>()) {
			_case_begin_1c3645571:;
			{
				_1c0b1ead6_outCall(&(*_self_), _20728_model.operator jule::Ptr<_1be45a005_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1c36455e8:;
			{
				_1c0b1ed5b_outlnCall(&(*_self_), _20728_model.operator jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel>>()) {
			_case_begin_1c3645670:;
			{
				_1c0b1e861_newCall(&(*_self_), _20728_model.operator jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>>()) {
			_case_begin_1c36456e7:;
			{
				_1c0b200d1_panicCall(&(*_self_), _20728_model.operator jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a995_BuiltinAssertCallExprModel>>()) {
			_case_begin_1c364576e:;
			{
				_1c0b20356_assertCall(&(*_self_), _20728_model.operator jule::Ptr<_1be45a995_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>>()) {
			_case_begin_1c36457e6:;
			{
				_1c0b205cb_errorCall(&(*_self_), _20728_model.operator jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>>()) {
			_case_begin_1c364586d:;
			{
				_1c0b20851_makeCall(&(*_self_), _20728_model.operator jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>>()) {
			_case_begin_1c36458e5:;
			{
				_1c0b20ac6_appendCall(&(*_self_), _20728_model.operator jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel>>()) {
			_case_begin_1c364596c:;
			{
				_1c0b20d4b_cloneCall(&(*_self_), _20728_model.operator jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459147_SizeofExprModel>>()) {
			_case_begin_1c36459e4:;
			{
				_1c0b210c1_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1be459147_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45b8a8_AlignofExprModel>>()) {
			_case_begin_1c3645a6b:;
			{
				_1c0b21346_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1be45b8a8_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45bc82_IntegratedToStrExprModel>>()) {
			_case_begin_1c3645ae3:;
			{
				_1c0b215bb_integratedToStr(&(*_self_), _20728_model.operator jule::Ptr<_1be45bc82_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45c15b_FreeExprModel>>()) {
			_case_begin_1c3645b6a:;
			{
				_1c0b21841_free(&(*_self_), _20728_model.operator jule::Ptr<_1be45c15b_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45be6e_BackendEmitExprModel>>()) {
			_case_begin_1c3645be2:;
			{
				_1c0b21ab6_backendEmit(&(*_self_), _20728_model.operator jule::Ptr<_1be45be6e_BackendEmitExprModel>());
			}
		}
		_match_end_1c3644b69:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c0b1b297_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bcbe5088_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d6d06746_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bcc09ed2_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bca4c7e7_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bcaab15d_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d6cec495_scopeOptimizer> static__1d6d09a57_new(jule::Ptr<_1c00487b3_Scope> _4523_scope) {
	return jule::new_ptr<_1d6cec495_scopeOptimizer>(_1d6cec495_scopeOptimizer{._field_scope=_4523_scope});
}



inline void _1d6d0c7c4_setCurrentStmt(_1d6cec495_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _1d6d14248_optimizeData(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c00cd282_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be4580e1_FnCallExprModel>>()) {
			_case_begin_1c368049b:;
			{
				jule::Ptr<_1be4580e1_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.operator jule::Ptr<_1be4580e1_FnCallExprModel>();;
				if (_231e8259c_Production) {
					if (((!(_1be463728_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _1bca571b4_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_1d6d0c7c4_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1c368028c:;
	};
	static__1bcbc4e69_optimize(_5535_d.get()._field_Model);
}



inline void _1bca3b6d7_optimizeVar(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c0081334_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__1bcbc4e69_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1bca4082e_optimizeConditional(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c0048d79_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c368359d:;
		if (it != expr.end()) {
			jule::Ptr<_1c00489a0_If> _7721_elif = *it;
			{
				static__1bcbc4e69_optimize(_7721_elif.get()._field_Expr);
				_1bcb1b762_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1c368359d:;
			++it;
			goto _iter_begin_1c368359d;
		}
		_iter_end_1c368359d:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_1bcb1b762_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1bca39b03_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c3685528:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1c00489a0_If> _9221_elif = *it;
			{
				if ((!(_1bcb4a3c8_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1c3685528;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1c0048b8c_Else>(_1c0048b8c_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1c3685528;
			}
			_iter_next_1c3685528:;
			++it;
			_9214_i++;
			goto _iter_begin_1c3685528;
		}
		_iter_end_1c3685528:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c00489a0_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1c00489a0_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1bcb9a538_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1c368884a:;
	}
	_iter_end_1c368884a:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c368a0aa:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1c00489a0_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1c368a0aa:;
			++it;
			_12913_j++;
			goto _iter_begin_1c368a0aa;
		}
		_iter_end_1c368a0aa:;
	};
	if ((_12817_only != -1LL)) {
		_1d6d0c7c4_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope));
	};
}



inline void _1bca615ec_buildDefaultConstatTrueCase(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c004a9e6_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_1c004a496_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1c368c7a5;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1c004ad15_FallSt>>()) {
					_case_begin_1c368d168:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=static_cast<jule::Any>(_14581_m.get()._field_Default.get()._field_Scope);
							goto _iter_end_1c368c7a5;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=static_cast<jule::Any>(_14550_case.get()._field_Scope);
					}
				}
				else {
					_case_begin_1c368e6a8:;
					{
						goto _iter_end_1c368c7a5;
					}
				}
				_match_end_1c368e5ba:;
			};
		}
	_iter_next_1c368c7a5:;
	}
	_iter_end_1c368c7a5:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _1bca7e7d5_optimizeMatch(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c004a496_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c3691765:;
		if (it != expr.end()) {
			jule::Ptr<_1c004a9e6_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1c3692106:;
					if (it != expr.end()) {
						jule::Ptr<_1c00cd282_Data> _17325_expr = *it;
						{
							static__1bcbc4e69_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1c3692106:;
						++it;
						goto _iter_begin_1c3692106;
					}
					_iter_end_1c3692106:;
				};
				_1bcb1b762_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1c3691765:;
			++it;
			goto _iter_begin_1c3691765;
		}
		_iter_end_1c3691765:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_1bcb1b762_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1bca39b03_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c3693d83:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1c004a9e6_Case> _18925_case = *it;
			{
				if ((!(_1bcb61e17_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1c3693d83;
				};
				_18617_constCase=true;
				_1bca615ec_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1c3693d83;
			}
			_iter_next_1c3693d83:;
			++it;
			_18918_i++;
			goto _iter_begin_1c3693d83;
		}
		_iter_end_1c3693d83:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c004a9e6_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1c004a9e6_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1bcb9c826_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1c3696c32:;
	}
	_iter_end_1c3696c32:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c3697dcb:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1c004a9e6_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1c3697dcb:;
			++it;
			_21913_j++;
			goto _iter_begin_1c3697dcb;
		}
		_iter_end_1c3697dcb:;
	};
	if ((_21817_only != -1LL)) {
		_1d6d0c7c4_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope));
	};
}



inline void _1bca80572_optimizeRangeIter(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c0049440_RangeIter> _23540_it) {
	static__1bcbc4e69_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_1bcb1b762_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _1bca85ea1_optimizeWhileIter(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c0049253_WhileIter> _24040_it) {
	static__1bcbc4e69_optimize(_24040_it.get()._field_Expr);
	_1bcad263a_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_1bcb1b762_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _1bca8749c_substr(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c004a0bc_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be458c6d_SlicingExprModel>>()) {
			_case_begin_1c369c0cd:;
			{
				jule::Ptr<_1be458c6d_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1be458c6d_SlicingExprModel>();;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_1d6d0c7c4_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1bca4c7e7_MutSlicingExprModel>(_1bca4c7e7_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right})));
					return true;
				};
			}
		}
		_match_end_1c369c078:;
	};
	return false;
}



inline jule::Bool _1bca8802a_strInsert(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c004a0bc_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be457464_BinopExprModel>>()) {
			_case_begin_1c369e4dc:;
			{
				jule::Ptr<_1be457464_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.operator jule::Ptr<_1be457464_BinopExprModel>();;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_1d6d0c7c4_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1bcaab15d_StrInsertBeginExprModel>(_1bcaab15d_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model})));
					return true;
				};
			}
		}
		_match_end_1c369e487:;
	};
	return false;
}



inline jule::Bool _1bca8c6d3_strAssign(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c004a0bc_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1c010dceb_Prim> _28213_lp = _1c010b436_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1c0112030_IsStr(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1bca8749c_substr(&(*_self_), _27832_a) || _1bca8802a_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1c36a2e19:;
			{
				return true;
			}
		}
		_match_end_1c36a2d81:;
	};
	return false;
}



inline void _1bca912ca_optimizeAssign(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c004a0bc_Assign> _29437_assign) {
	if ((_1d6ceb164_Copy && _1bca8c6d3_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__1bcbc4e69_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__1bcbc4e69_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1c36a4dd8:;
			{
				if ((_1d6d0e7a4_Math && (_1c010c888_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = static_cast<jule::Any>(jule::new_ptr<_1be457464_BinopExprModel>(_1be457464_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}));;
					static__1bcbc4e69_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1be457464_BinopExprModel>>()) {
							_case_begin_1c36a7083:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1be457277_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1c36a71a4:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1c36a4d2d:;
	};
	if (_1d6d019c7_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>>()) {
				_case_begin_1c36a8e42:;
				{
					jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.operator jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type_is<jule::Ptr<_1be4582cd_SliceExprModel>>()) {
							_case_begin_1c36a9ea9:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>() || _match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
										_case_begin_1c36aa790:;
										{
											_1d6d0c7c4_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1bcc09ed2_PushToSliceExprModel>(_1bcc09ed2_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.operator jule::Ptr<_1be4582cd_SliceExprModel>()})));
										}
									}
									_match_end_1c36aa73a:;
								};
							}
						}
						_match_end_1c36a9d00:;
					};
				}
			}
			_match_end_1c36a5966:;
		};
	};
}



inline void _1bca9bb43_optimizeMultiAssign(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c004a2a9_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1c36a5339:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1bcbc4e69_optimize(_34521_l);
					_34442_assign.get()._field_L[_34514_i]=_34521_l;
				};
			}
			_iter_next_1c36a5339:;
			++it;
			_34514_i++;
			goto _iter_begin_1c36a5339;
		}
		_iter_end_1c36a5339:;
	};
	static__1bcbc4e69_optimize(_34442_assign.get()._field_R);
}



inline void _1bcacb1c2_optimizeRet(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c004b002_RetSt> _35434_r) {
	static__1bcbc4e69_optimize(_35434_r.get()._field_Expr);
}



inline void _1bcad263a_optimizeStmt(_1d6cec495_scopeOptimizer* _self_, jule::Any _35835_stmt) {
	{
		auto &_match_expr{ _35835_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1c00487b3_Scope>>()) {
			_case_begin_1c36ad463:;
			{
				_1bcb1b762_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1c00487b3_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c00cd282_Data>>()) {
			_case_begin_1c36ad4c9:;
			{
				_1d6d14248_optimizeData(&(*_self_), _35835_stmt.operator jule::Ptr<_1c00cd282_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c36ad540:;
			{
				_1bca3b6d7_optimizeVar(&(*_self_), _35835_stmt.operator jule::Ptr<_1c0081334_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0048d79_Conditional>>()) {
			_case_begin_1c36ad5a6:;
			{
				_1bca4082e_optimizeConditional(&(*_self_), _35835_stmt.operator jule::Ptr<_1c0048d79_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049440_RangeIter>>()) {
			_case_begin_1c36ad61c:;
			{
				_1bca80572_optimizeRangeIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1c0049440_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049253_WhileIter>>()) {
			_case_begin_1c36ad683:;
			{
				_1bca85ea1_optimizeWhileIter(&(*_self_), _35835_stmt.operator jule::Ptr<_1c0049253_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049066_InfIter>>()) {
			_case_begin_1c36ad6e9:;
			{
				_1bcb1b762_optimizeChild(&(*_self_), _35835_stmt.operator jule::Ptr<_1c0049066_InfIter>().get()._field_Scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004a0bc_Assign>>()) {
			_case_begin_1c36ad760:;
			{
				_1bca912ca_optimizeAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1c004a0bc_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004a2a9_MultiAssign>>()) {
			_case_begin_1c36ad7c6:;
			{
				_1bca9bb43_optimizeMultiAssign(&(*_self_), _35835_stmt.operator jule::Ptr<_1c004a2a9_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004a496_Match>>()) {
			_case_begin_1c36ad84d:;
			{
				_1bca7e7d5_optimizeMatch(&(*_self_), _35835_stmt.operator jule::Ptr<_1c004a496_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004b002_RetSt>>()) {
			_case_begin_1c36ad8c5:;
			{
				_1bcacb1c2_optimizeRet(&(*_self_), _35835_stmt.operator jule::Ptr<_1c004b002_RetSt>());
			}
		}
		_match_end_1c36ad30e:;
	};
}



inline void _1bcb1b762_optimizeChild(_1d6cec495_scopeOptimizer* _self_, jule::Ptr<_1c00487b3_Scope> _38536_child) {
	jule::Ptr<_1d6cec495_scopeOptimizer> _38617_so = static__1d6d09a57_new(_38536_child);;
	_1bcb22290_optimize(_38617_so.ptr());
}



inline void _1bcb22290_optimize(_1d6cec495_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1c36b47ee:;
		if (it != expr.end()) {
			jule::I64 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1bcad263a_optimizeStmt(&(*_self_), _39221_stmt);
			}
			_iter_next_1c36b47ee:;
			++it;
			_39214_i++;
			goto _iter_begin_1c36b47ee;
		}
		_iter_end_1c36b47ee:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d6cec495_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1bcbc4e69_optimize(jule::Any& _5529_model) {
	if (_1c0a22ac7_exprEnabled) {
		jule::Ptr<_1bca3bebd_exprOptimizer> _5821_exop = jule::new_ptr<_1bca3bebd_exprOptimizer>(_1bca3bebd_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5529_model))))});;
		_1bcc56539_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1bcbd0bcd_strCond(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be457464_BinopExprModel> _6526_m) {
	jule::Ptr<_1c010dceb_Prim> _6613_lp = _1c010b436_Prim(_6526_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1c0112030_IsStr(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6526_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6526_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be3e8c63_Const>>()) {
			_case_begin_1c36c3c92:;
			{
				std::tie(_6526_m.get()._field_Left,_6526_m.get()._field_Right) = std::make_tuple(_6526_m.get()._field_Right,_6526_m.get()._field_Left);
				goto _julec_label_opt;
			}
		}
		_match_end_1c36c3c3c:;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be3e8c63_Const>>()) {
			_case_begin_1c36c4c93:;
			{
				goto _match_end_1c36c4ba5;
			}
		}
		else {
			_case_begin_1c36c4c1b:;
			{
				return true;
			}
		}
		_match_end_1c36c4ba5:;
	};
	_julec_label_opt:;
	jule::Ptr<_1be3e8c63_Const> _8513_c = _6526_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1be3e8c63_Const>();;
	if ((!(_1be450627_ReadStr(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6526_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1c36c6558:;
			{
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1c36c65be:;
			{
				jule::Ptr<_1d675d511_Token> _9721_op = _6526_m.get()._field_Op;;
				_9721_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=static_cast<jule::Any>(jule::new_ptr<_1be457651_UnaryExprModel>(_1be457651_UnaryExprModel{._field_Expr=jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459b2b_CommonSubIdentExprModel>(_1be459b2b_CommonSubIdentExprModel{._field_ExprKind=_6526_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6526_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)})), }), ._field_Op=_9721_op}));
			}
		}
		_match_end_1c36c6437:;
	};
	return true;
}



inline void _1bcbdb469_binary(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be457464_BinopExprModel> _11325_m) {
	static__1bcbc4e69_optimize(_11325_m.get()._field_Left.get()._field_Model);
	static__1bcbc4e69_optimize(_11325_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11325_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be3e8c63_Const>>()) {
			_case_begin_1c36ca55c:;
			{
				goto _match_end_1c36ca02e;
			}
		}
		else {
			_case_begin_1c36ca0c8:;
			{
				return;;
			}
		}
		_match_end_1c36ca02e:;
	};
	if ((_1bca39b03_Cond && _1bcbd0bcd_strCond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_1d6d0e7a4_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c36cb22d:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1bcc56e1e_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_13318_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1be3e8c63_Const> _13625_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1be3e8c63_Const>();;
					_1be4515c3_SetU64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c36cb294:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1bcc56e1e_checkForBitShiftOpt(_11325_m.get()._field_Left,_11325_m.get()._field_Right);
				if (_14118_ok) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1be3e8c63_Const> _14425_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1be3e8c63_Const>();;
					_1be4515c3_SetU64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c36cb31b:;
			{
				jule::Ptr<_1be3e8c63_Const> _14921_c = _11325_m.get()._field_Right.get()._field_Model.operator jule::Ptr<_1be3e8c63_Const>();;
				jule::F64 _15017_d = _1be4510c8_AsF64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1be45134d_SetI64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1c36cb1c8:;
	};
	jule::Any _15617_model = jule::Any(jule::new_ptr<_1bcbe5088_UnsafeBinopExprModel>(_1bcbe5088_UnsafeBinopExprModel{._field_Node=_11325_m}));;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15617_model))))));
}



inline void _1bcbe8c07_unary(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be457651_UnaryExprModel> _16024_m) {
	static__1bcbc4e69_optimize(_16024_m.get()._field_Expr.get()._field_Model);
	if ((_1bca2ba29_Ptr && (_16024_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16024_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1be457651_UnaryExprModel>>()) {
				_case_begin_1c36d35cb:;
				{
					jule::Ptr<_1be457651_UnaryExprModel> _16525_um = _16024_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1be457651_UnaryExprModel>();;
					if ((_16525_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16525_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1c36d3576:;
		};
	};
}



inline void _1bcc03c9a_structureLit(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be457a2a_StructLitExprModel> _17331_m) {
	{
		auto &expr = _17331_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1c36d5127:;
		if (it != expr.end()) {
			jule::Ptr<_1be45783d_StructArgExprModel> _17421_arg = *it;
			{
				static__1bcbc4e69_optimize(_17421_arg.get()._field_Expr);
			}
			_iter_next_1c36d5127:;
			++it;
			goto _iter_begin_1c36d5127;
		}
		_iter_end_1c36d5127:;
	};
}



inline void _1bcc305bd_allocStructure(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be457c17_AllocStructLitExprModel> _17933_m) {
	_1bcc03c9a_structureLit(&(*_self_), _17933_m.get()._field_Lit);
}



inline void _1d6d10ac4_casting(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be457e04_CastingExprModel> _18326_m) {
	static__1bcbc4e69_optimize(_18326_m.get()._field_Expr);
}



inline void _1d6d0ddd0_args(_1bca3bebd_exprOptimizer* _self_, jule::Slice<jule::Any>& _18724_args) {
	{
		auto &expr = _18724_args;
		auto it = expr.begin();
		_iter_begin_1c36d6b62:;
		if (it != expr.end()) {
			jule::I64 _18814_i = it - expr.begin();
			jule::Any _18821_arg = *it;
			{
				static__1bcbc4e69_optimize(_18821_arg);
				_18724_args[_18814_i]=_18821_arg;
			}
			_iter_next_1c36d6b62:;
			++it;
			_18814_i++;
			goto _iter_begin_1c36d6b62;
		}
		_iter_end_1c36d6b62:;
	};
}



inline void _1bca27b46_scope(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1c00487b3_Scope>& _19425_s) {
	jule::Ptr<_1d6cec495_scopeOptimizer> _19517_scopt = static__1d6d09a57_new(_19425_s);;
	_1bcb22290_optimize(_19517_scopt.ptr());
}



inline void _1bcb6b3e9_funcCall(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be4580e1_FnCallExprModel> _19927_m) {
	static__1bcbc4e69_optimize(_19927_m.get()._field_Expr);
	_1d6d0ddd0_args(&(*_self_), _19927_m.get()._field_Args);
	if ((_19927_m.get()._field_Except != nullptr)) {
		_1bca27b46_scope(&(*_self_), _19927_m.get()._field_Except);
	};
}



inline void _1bcbe056c_slice(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be4582cd_SliceExprModel> _20724_m) {
	_1d6d0ddd0_args(&(*_self_), _20724_m.get()._field_Elems);
}



inline void _1bca90230_array(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be459752_ArrayExprModel> _21124_m) {
	if (((_21124_m.get()._field_Elems.len() == 2LL) && (_21124_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21321_elem = _21124_m.get()._field_Elems[0LL];;
		static__1bcbc4e69_optimize(_21321_elem);
		_21124_m.get()._field_Elems[0LL]=_21321_elem;
	};
	_1d6d0ddd0_args(&(*_self_), _21124_m.get()._field_Elems);
}



inline void _1bca560b4_indexing(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be4584ba_IndexingExprModel> _22027_m) {
	static__1bcbc4e69_optimize(_22027_m.get()._field_Expr.get()._field_Model);
	static__1bcbc4e69_optimize(_22027_m.get()._field_Index.get()._field_Model);
	if ((!(_1bca1e302_Access))) {
		return;;
	};
	jule::Bool _22613_array = (_1c010c14b_Arr(_22027_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22613_array && _1c00cdb45_IsConst(_22027_m.get()._field_Index.ptr()))) {
		jule::Any _22921_model = jule::Any(jule::new_ptr<_1d6d06746_UnsafeIndexingExprModel>(_1d6d06746_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_22921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22027_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c36e0770:;
			{
				jule::Ptr<_1c0081334_Var> _23517_i = _22027_m.get()._field_Index.get()._field_Model.operator jule::Ptr<_1c0081334_Var>();;
				if ((_23517_i.get()._field_Mutable || (_23517_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1c36e061b;
				};
				{
					auto &_match_expr{ _22027_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
						_case_begin_1c36e2035:;
						{
							jule::Ptr<_1c0081334_Var> _24121_r = _22027_m.get()._field_Expr.get()._field_Model.operator jule::Ptr<_1c0081334_Var>();;
							if ((_23517_i.get()._field_IterRelation.get()._field_Range == _24121_r)) {
								jule::Any _24429_model = jule::Any(jule::new_ptr<_1d6d06746_UnsafeIndexingExprModel>(_1d6d06746_UnsafeIndexingExprModel{._field_Node=_22027_m}));;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24429_model))))));
							};
						}
					}
					_match_end_1c36e1ed0:;
				};
			}
		}
		_match_end_1c36e061b:;
	};
}



inline void _1bcc3bb4b_anonFunc(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be4586a7_AnonFnExprModel> _25127_m) {
	_1bca27b46_scope(&(*_self_), _25127_m.get()._field_Func.get()._field_Scope);
}



inline void _1bcc3c531_map(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be458a81_MapExprModel> _25522_m) {
	{
		auto &expr = _25522_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1c36e46b9:;
		if (it != expr.end()) {
			jule::Ptr<_1be458894_KeyValPairExprModel> _25621_pair = *it;
			{
				static__1bcbc4e69_optimize(_25621_pair.get()._field_Key);
				static__1bcbc4e69_optimize(_25621_pair.get()._field_Val);
			}
			_iter_next_1c36e46b9:;
			++it;
			goto _iter_begin_1c36e46b9;
		}
		_iter_end_1c36e46b9:;
	};
}



inline void _1bcc3ce16_slicing(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be458c6d_SlicingExprModel> _26226_m) {
	static__1bcbc4e69_optimize(_26226_m.get()._field_Expr);
	static__1bcbc4e69_optimize(_26226_m.get()._field_Left);
	if ((_26226_m.get()._field_Right != nullptr)) {
		static__1bcbc4e69_optimize(_26226_m.get()._field_Right);
	};
}



inline void _1bcc3e269_traitSub(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be458e5a_TraitSubIdentExprModel> _27027_m) {
	static__1bcbc4e69_optimize(_27027_m.get()._field_Expr);
}



inline void _1bcc43e3e_structureSub(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be459378_StructSubIdentExprModel> _27431_m) {
	static__1bcbc4e69_optimize(_27431_m.get()._field_Expr.get()._field_Model);
}



inline void _1bcc44824_commonSub(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be459b2b_CommonSubIdentExprModel> _27828_m) {
	static__1bcbc4e69_optimize(_27828_m.get()._field_Expr);
}



inline void _1bcc45209_tuple(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be459d18_TupleExprModel> _28224_m) {
	{
		auto &expr = _28224_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1c36e7b51:;
		if (it != expr.end()) {
			jule::Ptr<_1c00cd282_Data> _28321_d = *it;
			{
				static__1bcbc4e69_optimize(_28321_d.get()._field_Model);
			}
			_iter_next_1c36e7b51:;
			++it;
			goto _iter_begin_1c36e7b51;
		}
		_iter_end_1c36e7b51:;
	};
}



inline void _1bcc45ade_newCall(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel> _28826_m) {
	if ((_28826_m.get()._field_Init != nullptr)) {
		static__1bcbc4e69_optimize(_28826_m.get()._field_Init);
	};
}



inline void _1bcc464c4_outCall(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45a005_BuiltinOutCallExprModel> _29426_m) {
	static__1bcbc4e69_optimize(_29426_m.get()._field_Expr);
}



inline void _1bcc46da9_outlnCall(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel> _29828_m) {
	static__1bcbc4e69_optimize(_29828_m.get()._field_Expr);
}



inline void _1bcc478b0_panicCall(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel> _30228_m) {
	static__1bcbc4e69_optimize(_30228_m.get()._field_Expr);
}



inline void _1bcc48295_assertCall(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45a995_BuiltinAssertCallExprModel> _30629_m) {
	static__1bcbc4e69_optimize(_30629_m.get()._field_Expr);
}



inline void _1bcc48b7a_errorCall(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45b248_BuiltinErrorCallExprModel> _31028_m) {
	static__1bcbc4e69_optimize(_31028_m.get()._field_Err);
}



inline void _1bcc49560_makeCall(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel> _31427_m) {
	if ((_31427_m.get()._field_Len != nullptr)) {
		static__1bcbc4e69_optimize(_31427_m.get()._field_Len);
	};
	if ((_31427_m.get()._field_Cap != nullptr)) {
		static__1bcbc4e69_optimize(_31427_m.get()._field_Cap);
	};
}



inline void _1bcc4d960_appendCall(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel> _32329_m) {
	static__1bcbc4e69_optimize(_32329_m.get()._field_Dest);
	static__1bcbc4e69_optimize(_32329_m.get()._field_Elements);
}



inline void _1bcc4e345_cloneCall(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel> _32828_m) {
	static__1bcbc4e69_optimize(_32828_m.get()._field_Expr);
}



inline void _1bcc4ec2a_sizeof(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be459147_SizeofExprModel> _33225_m) {
	static__1bcbc4e69_optimize(_33225_m.get()._field_Expr);
}



inline void _1bcc53ea4_alignof(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45b8a8_AlignofExprModel> _33626_m) {
	static__1bcbc4e69_optimize(_33626_m.get()._field_Expr);
}



inline void _1bcc54889_integratedToStr(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45bc82_IntegratedToStrExprModel> _34034_m) {
	static__1bcbc4e69_optimize(_34034_m.get()._field_Expr);
}



inline void _1bcc5526e_free(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45c15b_FreeExprModel> _34423_m) {
	static__1bcbc4e69_optimize(_34423_m.get()._field_Expr);
}



inline void _1bcc55b54_backendEmit(_1bca3bebd_exprOptimizer* _self_, jule::Ptr<_1be45be6e_BackendEmitExprModel> _34830_m) {
	_1d6d0ddd0_args(&(*_self_), _34830_m.get()._field_Exprs);
}



inline void _1bcc56539_do(_1bca3bebd_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1be457464_BinopExprModel>>()) {
			_case_begin_1c370042d:;
			{
				_1bcbdb469_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be457464_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457651_UnaryExprModel>>()) {
			_case_begin_1c37006e7:;
			{
				_1bcbe8c07_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be457651_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457a2a_StructLitExprModel>>()) {
			_case_begin_1c370075d:;
			{
				_1bcc03c9a_structureLit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be457a2a_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457c17_AllocStructLitExprModel>>()) {
			_case_begin_1c37007c4:;
			{
				_1bcc305bd_allocStructure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be457c17_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457e04_CastingExprModel>>()) {
			_case_begin_1c370083a:;
			{
				_1d6d10ac4_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be457e04_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4580e1_FnCallExprModel>>()) {
			_case_begin_1c37008b2:;
			{
				_1bcb6b3e9_funcCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be4580e1_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4582cd_SliceExprModel>>()) {
			_case_begin_1c3700939:;
			{
				_1bcbe056c_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be4582cd_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459752_ArrayExprModel>>()) {
			_case_begin_1c37009b1:;
			{
				_1bca90230_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be459752_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4584ba_IndexingExprModel>>()) {
			_case_begin_1c3700a38:;
			{
				_1bca560b4_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be4584ba_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4586a7_AnonFnExprModel>>()) {
			_case_begin_1c3700ab0:;
			{
				_1bcc3bb4b_anonFunc(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be4586a7_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458a81_MapExprModel>>()) {
			_case_begin_1c3700b37:;
			{
				_1bcc3c531_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be458a81_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458c6d_SlicingExprModel>>()) {
			_case_begin_1c3700bae:;
			{
				_1bcc3ce16_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be458c6d_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458e5a_TraitSubIdentExprModel>>()) {
			_case_begin_1c3700c36:;
			{
				_1bcc3e269_traitSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be458e5a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
			_case_begin_1c3700cad:;
			{
				_1bcc43e3e_structureSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be459378_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459b2b_CommonSubIdentExprModel>>()) {
			_case_begin_1c3700d35:;
			{
				_1bcc44824_commonSub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be459b2b_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459d18_TupleExprModel>>()) {
			_case_begin_1c3700dac:;
			{
				_1bcc45209_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be459d18_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a005_BuiltinOutCallExprModel>>()) {
			_case_begin_1c3700e34:;
			{
				_1bcc464c4_outCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45a005_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1c3700eab:;
			{
				_1bcc46da9_outlnCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel>>()) {
			_case_begin_1c3701033:;
			{
				_1bcc45ade_newCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>>()) {
			_case_begin_1c37010aa:;
			{
				_1bcc478b0_panicCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a995_BuiltinAssertCallExprModel>>()) {
			_case_begin_1c3701132:;
			{
				_1bcc48295_assertCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45a995_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>>()) {
			_case_begin_1c37011a9:;
			{
				_1bcc48b7a_errorCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>>()) {
			_case_begin_1c3701231:;
			{
				_1bcc49560_makeCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>>()) {
			_case_begin_1c37012a8:;
			{
				_1bcc4d960_appendCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel>>()) {
			_case_begin_1c3701330:;
			{
				_1bcc4e345_cloneCall(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459147_SizeofExprModel>>()) {
			_case_begin_1c37013a7:;
			{
				_1bcc4ec2a_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be459147_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45b8a8_AlignofExprModel>>()) {
			_case_begin_1c370142e:;
			{
				_1bcc53ea4_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45b8a8_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45bc82_IntegratedToStrExprModel>>()) {
			_case_begin_1c37014a6:;
			{
				_1bcc54889_integratedToStr(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45bc82_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45c15b_FreeExprModel>>()) {
			_case_begin_1c370152d:;
			{
				_1bcc5526e_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45c15b_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45be6e_BackendEmitExprModel>>()) {
			_case_begin_1c37015a5:;
			{
				_1bcc55b54_backendEmit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1be45be6e_BackendEmitExprModel>());
			}
		}
		_match_end_1c37003c8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1bca3bebd_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0ae0aeb_Optimizer> static__1c0a4e582_New(jule::Ptr<_1c0977e39_IR>& _2524_ir) {
	return jule::new_ptr<_1c0ae0aeb_Optimizer>(_1c0ae0aeb_Optimizer{._field_ir=_2524_ir});
}



inline void _1c0a232c0_optimizeGlobal(_1c0ae0aeb_Optimizer* _self_, jule::Ptr<_1c0081334_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__1bcbc4e69_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1c0a82e78_optimizeFunction(_1c0ae0aeb_Optimizer* _self_, jule::Ptr<_1be45e6e1_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c3717357:;
		if (it != expr.end()) {
			jule::Ptr<_1be462392_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1d6cec495_scopeOptimizer> _4221_so = static__1d6d09a57_new(_4121_ins.get()._field_Scope);;
				_1bcb22290_optimize(_4221_so.ptr());
			}
			_iter_next_1c3717357:;
			++it;
			goto _iter_begin_1c3717357;
		}
		_iter_end_1c3717357:;
	};
}



inline void _1c0a83330_optimizeStruct(_1c0ae0aeb_Optimizer* _self_, jule::Ptr<_1be387251_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c37187a9:;
		if (it != expr.end()) {
			jule::Ptr<_1be3b359b_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1c3718e3b:;
					if (it != expr.end()) {
						jule::Ptr<_1be38e8b8_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1bcbc4e69_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1c3718e3b:;
						++it;
						goto _iter_begin_1c3718e3b;
					}
					_iter_end_1c3718e3b:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c371a1d4:;
					if (it != expr.end()) {
						jule::Ptr<_1be45e6e1_Fn> _5725_m = *it;
						{
							_1c0a82e78_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1c371a1d4:;
						++it;
						goto _iter_begin_1c371a1d4;
					}
					_iter_end_1c371a1d4:;
				};
			}
			_iter_next_1c37187a9:;
			++it;
			goto _iter_begin_1c37187a9;
		}
		_iter_end_1c37187a9:;
	};
}



inline void _1c0a84cb0_optimizeGlobals(_1c0ae0aeb_Optimizer* _self_, jule::Ptr<_1c005e312_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c371a437:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1c371b180:;
					if (it != expr.end()) {
						jule::Ptr<_1c0081334_Var> _6525_v = *it;
						{
							_1c0a232c0_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1c371b180:;
						++it;
						goto _iter_begin_1c371b180;
					}
					_iter_end_1c371b180:;
				};
			}
			_iter_next_1c371a437:;
			++it;
			goto _iter_begin_1c371a437;
		}
		_iter_end_1c371a437:;
	};
}



inline void _1c0a8ae1a_optimizeFunctions(_1c0ae0aeb_Optimizer* _self_, jule::Ptr<_1c005e312_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c371b7bd:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1c371c516:;
					if (it != expr.end()) {
						jule::Ptr<_1be45e6e1_Fn> _7325_func = *it;
						{
							_1c0a82e78_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1c371c516:;
						++it;
						goto _iter_begin_1c371c516;
					}
					_iter_end_1c371c516:;
				};
			}
			_iter_next_1c371b7bd:;
			++it;
			goto _iter_begin_1c371b7bd;
		}
		_iter_end_1c371b7bd:;
	};
}



inline void _1c0a92273_optimizeStructs(_1c0ae0aeb_Optimizer* _self_, jule::Ptr<_1c005e312_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c371cb54:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1c371d89c:;
					if (it != expr.end()) {
						jule::Ptr<_1be387251_Struct> _8125_s = *it;
						{
							_1c0a83330_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1c371d89c:;
						++it;
						goto _iter_begin_1c371d89c;
					}
					_iter_end_1c371d89c:;
				};
			}
			_iter_next_1c371cb54:;
			++it;
			goto _iter_begin_1c371cb54;
		}
		_iter_end_1c371cb54:;
	};
}



inline void _1c0a9a3d0_optimizePackage(_1c0ae0aeb_Optimizer* _self_, jule::Ptr<_1c005e312_Package>& _8739_p) {
	_1c0a84cb0_optimizeGlobals(&(*_self_), _8739_p);
	_1c0a8ae1a_optimizeFunctions(&(*_self_), _8739_p);
	_1c0a92273_optimizeStructs(&(*_self_), _8739_p);
}



inline void _1c0aa59d4_Optimize(_1c0ae0aeb_Optimizer* _self_) {
	_1c0aaac70_detectEnabled();
	if (_1d6d0072e_Deadcode) {
		_1c0b15e1d_EliminateDefines((*_self_)._field_ir);
	};
	if ((_1c0a23c2c_scopeEnabled || _1c0a22ac7_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1c371de96:;
			if (it != expr.end()) {
				jule::Ptr<_1c005b3a8_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1c0a9a3d0_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1c371de96:;
				++it;
				goto _iter_begin_1c371de96;
			}
			_iter_end_1c371de96:;
		};
		_1c0a9a3d0_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_1d6d0072e_Deadcode) {
		_1c0b1abc0_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c0ae0aeb_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1c0b34568_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1c0b35833_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1c0b34568_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1c0b35646_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1c0b36ed8_LogFlat(_1d6435804_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__1c0b371e7_LogError(_1d6435804_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__1c0b34568_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1c0046629_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1c0046629_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1d63a59d8_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_1d63a59d8_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1c0046629_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_200a79329_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_200a79329_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_200a79329_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1c0b35833_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1c0b37406_Log(_1d6435804_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1c3730aac:;
			{
				static__1c0b36ed8_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1c3730b23:;
			{
				static__1c0b371e7_LogError(_6520_l);
			}
		}
		_match_end_1c3730958:;
	};
}



inline void static__1c0b37615_PrintLogs(jule::Slice<_1d6435804_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_1c372591a:;
		if (it != expr.end()) {
			_1d6435804_Log &_7616_l = *it;
			{
				static__1c0b37406_Log(_7616_l);
			}
			_iter_next_1c372591a:;
			++it;
			goto _iter_begin_1c372591a;
		}
		_iter_end_1c372591a:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1c0046629_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1c0b36c30_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1c12108be_Unix(_1c1210517_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1c12159d4_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1c1215d69_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1210517_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1c1210baa_Time static__1c1211051_Unix(jule::U64 _9120_sec) {
	return _1c1210baa_Time{._field_sec=_9120_sec};
}



inline _1c1210baa_Time static__1c121124e_Now(void) {
	return static__1c1211051_Unix(static_cast<jule::U64>(_1c1215693_unix()));
}



inline jule::U64 _1c12116a0_Unix(_1c1210baa_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1c1211914_Day(_1c1210baa_Time* _self_) {
	return _1c121288d_Abs(&(*_self_))._field_Day;
}



inline jule::U64 _1c1211b78_Month(_1c1210baa_Time* _self_) {
	return _1c121288d_Abs(&(*_self_))._field_Month;
}



inline jule::U64 _1c1211ddc_Year(_1c1210baa_Time* _self_) {
	return _1c121288d_Abs(&(*_self_))._field_Year;
}



inline jule::U64 _1c1212151_Second(_1c1210baa_Time* _self_) {
	return _1c121288d_Abs(&(*_self_))._field_Second;
}



inline jule::U64 _1c12123b5_Minute(_1c1210baa_Time* _self_) {
	return _1c121288d_Abs(&(*_self_))._field_Minute;
}



inline jule::U64 _1c1212629_Hour(_1c1210baa_Time* _self_) {
	return _1c121288d_Abs(&(*_self_))._field_Hour;
}



inline _1c1210517_AbsTime _1c121288d_Abs(_1c1210baa_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1c120eaaa_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1c120eaaa_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1c375ca51:;
	}
	_iter_end_1c375ca51:;;
	_1c1210517_AbsTime _17417_t = _1c1210517_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1210baa_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c118a5a2_scopeCoder> static__1c118abbd_new(jule::Ptr<_1c12163a8_ObjectCoder>& _5524_oc) {
	return jule::new_ptr<_1c118a5a2_scopeCoder>(_1c118a5a2_scopeCoder{._field_oc=_5524_oc});
}



inline void _1c118ae43_rangeIndexIter(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0049440_RangeIter>& _6139_it) {
	jule::Str _6213_begin = static__1c11a6d1b_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	jule::Str _6313_next = static__1c11a735a_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it)));;
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1d6ceb164_Copy && _1c1190b07_isCopyOptimizable(_6139_it.get()._field_Expr))) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1c119d4b6_model(_self_.get()._field_oc.get()._field_ec, _6139_it.get()._field_Expr.get()._field_Model);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, _6213_begin);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1c1218014_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c11eb6e0_indent(_self_.get()._field_oc);
	};
	if ((_6139_it.get()._field_KeyB != nullptr)) {
		if (_1d6ceb164_Copy) {
			_6139_it.get()._field_KeyB.get()._field_Reference=_1c1190e8c_isIterCopyOptimizable(_6139_it.get()._field_Expr,_6139_it.get()._field_KeyB);
		};
		_1c1218014_varInitExpr(_self_.get()._field_oc, _6139_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c11eb6e0_indent(_self_.get()._field_oc);
	};
	_1c1190530_scope(_self_, _6139_it.get()._field_Scope);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, _6313_next);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	if ((_6139_it.get()._field_KeyA != nullptr)) {
		_1c11e9710_write(_self_.get()._field_oc, static__1c11a6a74_var(_6139_it.get()._field_KeyA));
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1c11eb6e0_indent(_self_.get()._field_oc);
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c11e9710_write(_self_.get()._field_oc, _6213_begin);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a70b3_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6139_it))));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c118b1b8_rangeHashmapIter(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0049440_RangeIter>& _12941_it) {
	jule::Str _13013_begin = static__1c11a6d1b_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	jule::Str _13113_next = static__1c11a735a_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it)));;
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1d6ceb164_Copy && _1c1190b07_isCopyOptimizable(_12941_it.get()._field_Expr))) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1c119d4b6_model(_self_.get()._field_oc.get()._field_ec, _12941_it.get()._field_Expr.get()._field_Model);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, _13013_begin);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	if ((_12941_it.get()._field_KeyA != nullptr)) {
		if (_1d6ceb164_Copy) {
			_12941_it.get()._field_KeyA.get()._field_Reference=_1c1190e8c_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyA);
		};
		_1c1218014_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c11eb6e0_indent(_self_.get()._field_oc);
	};
	if ((_12941_it.get()._field_KeyB != nullptr)) {
		if (_1d6ceb164_Copy) {
			_12941_it.get()._field_KeyB.get()._field_Reference=_1c1190e8c_isIterCopyOptimizable(_12941_it.get()._field_Expr,_12941_it.get()._field_KeyB);
		};
		_1c1218014_varInitExpr(_self_.get()._field_oc, _12941_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c11eb6e0_indent(_self_.get()._field_oc);
	};
	_1c1190530_scope(_self_, _12941_it.get()._field_Scope);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, _13113_next);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c11e9710_write(_self_.get()._field_oc, _13013_begin);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a70b3_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12941_it))));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c118b43d_ifCase(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c00489a0_If> _19530_i) {
	if ((_19530_i.get()._field_Expr != nullptr)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _19530_i.get()._field_Expr);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1c1190530_scope(_self_, _19530_i.get()._field_Scope);
}



inline void _1c118b6b3_conditional(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0048d79_Conditional> _20435_c) {
	jule::Bool _20517_writed = false;;
	{
		auto &expr = _20435_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c3801919:;
		if (it != expr.end()) {
			jule::Ptr<_1c00489a0_If> _20621_elif = *it;
			{
				if ((_20621_elif == nullptr)) {
					goto _iter_next_1c3801919;
				};
				if (_20517_writed) {
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_20517_writed=true;
				_1c118b43d_ifCase(_self_, _20621_elif);
			}
			_iter_next_1c3801919:;
			++it;
			goto _iter_begin_1c3801919;
		}
		_iter_end_1c3801919:;
	};
	if ((_20435_c.get()._field_Default != nullptr)) {
		if (_20517_writed) {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1c1190530_scope(_self_, _20435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1c118b938_infIter(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0049066_InfIter> _22431_it) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c1190530_scope(_self_, _22431_it.get()._field_Scope);
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a735a_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a70b3_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_22431_it))));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1c118bbad_whileIter(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0049253_WhileIter> _24133_it) {
	if (((_24133_it.get()._field_Expr != nullptr) && (_24133_it.get()._field_Next == nullptr))) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24133_it.get()._field_Expr != nullptr)) {
			_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _24133_it.get()._field_Expr);
		};
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24133_it.get()._field_Next != nullptr)) {
			_1c1190035_st(_self_, _24133_it.get()._field_Next);
		};
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c1190530_scope(_self_, _24133_it.get()._field_Scope);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a735a_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a70b3_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24133_it))));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1c118be33_rangeIter(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0049440_RangeIter> _27433_it) {
	{
		
		if ((_1c010c3b0_Slc(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c3811dd0:;
			{
				_1c118ae43_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1c010c14b_Arr(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c3811aa0:;
			{
				_1c118ae43_rangeIndexIter(_self_, _27433_it);
			}
		}
		else if ((_1c010cd61_Map(_27433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c3811b16:;
			{
				_1c118b1b8_rangeHashmapIter(_self_, _27433_it);
			}
		}
		else {
			_case_begin_1c3811a39:;
			{
				_1c118ae43_rangeIndexIter(_self_, _27433_it);
			}
		}
		_match_end_1c381195c:;
	};
}



inline void _1c118c1a8_cont(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004962c_ContSt> _28724_c) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a735a_iterNext(_28724_c.get()._field_It));
}



inline void _1c118c42d_label(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0049a06_Label> _29225_l) {
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a7602_label(_29225_l.get()._field_Ident));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1c118c6a3_gotoSt(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0049be3_GotoSt> _29726_gt) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a7602_label(_29726_gt.get()._field_Ident));
}



inline void _1c118c928_postfix(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0049dd0_Postfix> _30231_p) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _30231_p.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1c11e9710_write(_self_.get()._field_oc, _30231_p.get()._field_Op);
}



inline void _1c118cb9d_assign(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004a0bc_Assign> _30930_a) {
	_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_L.get()._field_Model);
	_1c11e9710_write(_self_.get()._field_oc, _30930_a.get()._field_Op.get()._field_Kind);
	_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _30930_a.get()._field_R.get()._field_Model);
}



inline void _1c118ce23_multiAssign(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004a2a9_MultiAssign> _31535_a) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _31535_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1c381b0d7:;
		if (it != expr.end()) {
			jule::I64 _31714_i = it - expr.begin();
			jule::Any _31721_l = *it;
			{
				if ((_31721_l == nullptr)) {
					_1c11e9710_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _31721_l);
				};
				if (((_31535_a.get()._field_L.len() - _31714_i) > 1LL)) {
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c381b0d7:;
			++it;
			_31714_i++;
			goto _iter_begin_1c381b0d7;
		}
		_iter_end_1c381b0d7:;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _31535_a.get()._field_R);
}



inline jule::Fn<void(void)> _1c118d231_matchExpr(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004a496_Match> _33133_m) {
	if ((!(_1c00cdb45_IsConst(_33133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1be45275b_IsBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1be4503b3_ReadBool(_33133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1c119d4b6_model(_self_.get()._field_oc.get()._field_ec, _33133_m.get()._field_Expr.get()._field_Model);
		});
	};
	return nullptr;
}



inline void _1c118d550_case(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004a496_Match> _34128_m, jule::Ptr<_1c004a9e6_Case> _34143_c) {
	if (((_34143_c.get()._field_Exprs.len() != 0LL) && (!(_1c004a8b4_IsGenericTypeMatch(_34128_m.ptr()))))) {
		if (((_34128_m.get()._field_Cases.len() > 0LL) && (_34128_m.get()._field_Cases[0LL] == _34143_c))) {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _34143_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1c3824178:;
			if (it != expr.end()) {
				jule::I64 _34818_i = it - expr.begin();
				jule::Ptr<_1c00cd282_Data> _34825_expr = *it;
				{
					{
						
						if ((!(_34128_m.get()._field_TypeMatch))) {
							_case_begin_1c3826532:;
							{
								jule::Fn<void(void)> _35125_caseExpr = _1c118d231_matchExpr(_self_, _34128_m);;
								if (_1c00cde53_GoodOperand(_34128_m.get()._field_Expr.ptr(), _34825_expr)) {
									if ((_35125_caseExpr != nullptr)) {
										_35125_caseExpr();
										_1c11e9710_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								} else {
									_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
									if ((_35125_caseExpr != nullptr)) {
										_1c11e9710_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_35125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1c3824e8c:;
							{
								_1c11e9710_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1c11e9710_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _34825_expr.get()._field_Model);
								_1c11e9710_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1c3824db0:;
					};
					if (((_34143_c.get()._field_Exprs.len() - _34818_i) > 1LL)) {
						_1c11e9710_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1c3824178:;
				++it;
				_34818_i++;
				goto _iter_begin_1c3824178;
			}
			_iter_end_1c3824178:;
		};
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_34128_m.get()._field_Default == _34143_c) && (_34128_m.get()._field_Cases.len() != 0LL))) {
		_1c11eb6e0_indent(_self_.get()._field_oc);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a7b41_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_34143_c))));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_34143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1c11eb6e0_indent(_self_.get()._field_oc);
		_1c1190530_scope(_self_, _34143_c.get()._field_Scope);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c118d7c5_matchSt(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004a496_Match> _40031_m) {
	if (((_40031_m.get()._field_Cases.len() == 0LL) && (_40031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _40513_genericTypeMatch = _1c004a8b4_IsGenericTypeMatch(_40031_m.ptr());;
	if ((_40513_genericTypeMatch && ((_40031_m.get()._field_Default == nullptr) || (_40031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	if (((!(_40513_genericTypeMatch)) && (!(_1c00cdb45_IsConst(_40031_m.get()._field_Expr.ptr()))))) {
		if ((_1d6ceb164_Copy && _1c1190b07_isCopyOptimizable(_40031_m.get()._field_Expr))) {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _40031_m.get()._field_Expr.get()._field_Model);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1c11eb6e0_indent(_self_.get()._field_oc);
	};
	if ((_40031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _40031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1c383acc7:;
			if (it != expr.end()) {
				jule::Ptr<_1c004a9e6_Case> _42925_c = *it;
				{
					if ((_42925_c == nullptr)) {
						goto _iter_next_1c383acc7;
					};
					_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1c11eb6e0_indent(_self_.get()._field_oc);
					_1c118d550_case(_self_, _40031_m,_42925_c);
				}
				_iter_next_1c383acc7:;
				++it;
				goto _iter_begin_1c383acc7;
			}
			_iter_end_1c383acc7:;
		};
	};
	if ((_40031_m.get()._field_Default != nullptr)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c118d550_case(_self_, _40031_m,_40031_m.get()._field_Default);
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a7899_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40031_m))));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c118da4a_fallSt(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004ad15_FallSt> _45626_f) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a7b41_caseBegin(_45626_f.get()._field_DestCase));
}



inline void _1c118dcc0_breakSt(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0049819_BreakSt> _46127_b) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_46127_b.get()._field_It != 0LLU)) {
		_1c11e9710_write(_self_.get()._field_oc, static__1c11a70b3_iterEnd(_46127_b.get()._field_It));
	} else {
		_1c11e9710_write(_self_.get()._field_oc, static__1c11a7899_matchEnd(_46127_b.get()._field_Mtch));
	};
}



inline void _1c118e045_retWithVars(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004b002_RetSt> _47035_r) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_47035_r.get()._field_Func.get()._field_Result));
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _47035_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c3846420:;
		if (it != expr.end()) {
			jule::I64 _48014_i = it - expr.begin();
			jule::Ptr<_1c0081334_Var> _48021_v = *it;
			{
				if (_1d6760ca5_IsIgnoreIdent(_48021_v.get()._field_Ident)) {
					_1c119dc36_initExpr(_self_.get()._field_oc.get()._field_ec, _48021_v.get()._field_Kind.get()._field_Kind);
				} else {
					_1c11e9710_write(_self_.get()._field_oc, static__1c11a6a74_var(_48021_v));
				};
				if (((_47035_r.get()._field_Vars.len() - _48014_i) > 1LL)) {
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c3846420:;
			++it;
			_48014_i++;
			goto _iter_begin_1c3846420;
		}
		_iter_end_1c3846420:;
	};
	if ((_47035_r.get()._field_Vars.len() > 1LL)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_47035_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1c118e2ba_retTuple(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004b002_RetSt> _50032_r) {
	jule::Slice<jule::Ptr<_1c00cd282_Data>> _50117_datas = _50032_r.get()._field_Expr.operator jule::Ptr<_1be459d18_TupleExprModel>().get()._field_Datas;;
	{
		auto &expr = _50032_r.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c384a8ec:;
		if (it != expr.end()) {
			jule::I64 _50214_i = it - expr.begin();
			jule::Ptr<_1c0081334_Var> _50221_v = *it;
			{
				if (_1d6760ca5_IsIgnoreIdent(_50221_v.get()._field_Ident)) {
					goto _iter_next_1c384a8ec;
				};
				jule::Any _50621_model = _50117_datas[_50214_i].get()._field_Model;;
				if ((_50621_model == _50221_v)) {
					goto _iter_next_1c384a8ec;
				};
				_1c11e9710_write(_self_.get()._field_oc, static__1c11a6a74_var(_50221_v));
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _50621_model);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1c11eb6e0_indent(_self_.get()._field_oc);
			}
			_iter_next_1c384a8ec:;
			++it;
			_50214_i++;
			goto _iter_begin_1c384a8ec;
		}
		_iter_end_1c384a8ec:;
	};
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_50032_r.get()._field_Func.get()._field_Result));
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _50117_datas;
		auto it = expr.begin();
		_iter_begin_1c3850979:;
		if (it != expr.end()) {
			jule::I64 _52714_i = it - expr.begin();
			jule::Ptr<_1c00cd282_Data> _52721_d = *it;
			{
				jule::Ptr<_1c0081334_Var> _52821_v = _50032_r.get()._field_Vars[_52714_i];;
				if (_1d6760ca5_IsIgnoreIdent(_52821_v.get()._field_Ident)) {
					_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _52721_d.get()._field_Model);
				} else {
					_1c11e9710_write(_self_.get()._field_oc, static__1c11a6a74_var(_52821_v));
				};
				if (((_50117_datas.len() - _52714_i) > 1LL)) {
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c3850979:;
			++it;
			_52714_i++;
			goto _iter_begin_1c3850979;
		}
		_iter_end_1c3850979:;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_50032_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1c118e540_retWithExprs(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004b002_RetSt> _54536_r) {
	if ((_54536_r.get()._field_Vars.len() > 1LL)) {
		_1c118e2ba_retTuple(_self_, _54536_r);
		return;;
	};
	if ((_54536_r.get()._field_Vars.len() > 0LL)) {
		jule::Ptr<_1c0081334_Var> _55321_v = _54536_r.get()._field_Vars[0LL];;
		if (((!(_1d6760ca5_IsIgnoreIdent(_55321_v.get()._field_Ident))) && (_54536_r.get()._field_Expr != _55321_v))) {
			jule::Str _55521_ident = static__1c11a6a74_var(_55321_v);;
			_1c11e9710_write(_self_.get()._field_oc, _55521_ident);
			_1c11e9710_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
			_1c11e9710_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1c11eb6e0_indent(_self_.get()._field_oc);
			if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_54536_r.get()._field_Func.get()._field_Result));
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1c11e9710_write(_self_.get()._field_oc, _55521_ident);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1c11e9710_write(_self_.get()._field_oc, _55521_ident);
			};
			return;;
		};
	};
	if (_54536_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_54536_r.get()._field_Func.get()._field_Result));
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _54536_r.get()._field_Expr);
	return;;
}



inline void _1c118e7b5_retSt(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c004b002_RetSt> _58929_r) {
	if (((_58929_r.get()._field_Expr == nullptr) && (_58929_r.get()._field_Vars.len() == 0LL))) {
		if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58929_r.get()._field_Expr == nullptr)) {
		_1c118e045_retWithVars(_self_, _58929_r);
		return;;
	};
	_1c118e540_retWithExprs(_self_, _58929_r);
}



inline void _1c118ecb0_var(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c0081334_Var> _62427_v) {
	if ((!(_62427_v.get()._field_Constant))) {
		_1c1218289_var(_self_.get()._field_oc, _62427_v);
	};
}



inline void _1c1190035_st(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Any _63126_st) {
	if ((_63126_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63126_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c00487b3_Scope>>()) {
			_case_begin_1c3866d25:;
			{
				_1c1190530_scope(_self_, _63126_st.operator jule::Ptr<_1c00487b3_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c38669d4:;
			{
				_1c118ecb0_var(_self_, _63126_st.operator jule::Ptr<_1c0081334_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c00cd282_Data>>()) {
			_case_begin_1c3867441:;
			{
				_1c119d73b_expr(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1c00cd282_Data>().get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0048d79_Conditional>>()) {
			_case_begin_1c38674a7:;
			{
				_1c118b6b3_conditional(_self_, _63126_st.operator jule::Ptr<_1c0048d79_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049066_InfIter>>()) {
			_case_begin_1c386751d:;
			{
				_1c118b938_infIter(_self_, _63126_st.operator jule::Ptr<_1c0049066_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049253_WhileIter>>()) {
			_case_begin_1c3867584:;
			{
				_1c118bbad_whileIter(_self_, _63126_st.operator jule::Ptr<_1c0049253_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049440_RangeIter>>()) {
			_case_begin_1c38675ea:;
			{
				_1c118be33_rangeIter(_self_, _63126_st.operator jule::Ptr<_1c0049440_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004962c_ContSt>>()) {
			_case_begin_1c3867661:;
			{
				_1c118c1a8_cont(_self_, _63126_st.operator jule::Ptr<_1c004962c_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049a06_Label>>()) {
			_case_begin_1c38676c7:;
			{
				_1c118c42d_label(_self_, _63126_st.operator jule::Ptr<_1c0049a06_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049be3_GotoSt>>()) {
			_case_begin_1c386773d:;
			{
				_1c118c6a3_gotoSt(_self_, _63126_st.operator jule::Ptr<_1c0049be3_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049dd0_Postfix>>()) {
			_case_begin_1c38677a4:;
			{
				_1c118c928_postfix(_self_, _63126_st.operator jule::Ptr<_1c0049dd0_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004a0bc_Assign>>()) {
			_case_begin_1c386781a:;
			{
				_1c118cb9d_assign(_self_, _63126_st.operator jule::Ptr<_1c004a0bc_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004a2a9_MultiAssign>>()) {
			_case_begin_1c3867892:;
			{
				_1c118ce23_multiAssign(_self_, _63126_st.operator jule::Ptr<_1c004a2a9_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004a496_Match>>()) {
			_case_begin_1c3867919:;
			{
				_1c118d7c5_matchSt(_self_, _63126_st.operator jule::Ptr<_1c004a496_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004ad15_FallSt>>()) {
			_case_begin_1c3867991:;
			{
				_1c118da4a_fallSt(_self_, _63126_st.operator jule::Ptr<_1c004ad15_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049819_BreakSt>>()) {
			_case_begin_1c3867a18:;
			{
				_1c118dcc0_breakSt(_self_, _63126_st.operator jule::Ptr<_1c0049819_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004b002_RetSt>>()) {
			_case_begin_1c3867a90:;
			{
				_1c118e7b5_retSt(_self_, _63126_st.operator jule::Ptr<_1c004b002_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bcc09ed2_PushToSliceExprModel>>()) {
			_case_begin_1c3867b17:;
			{
				_1c119b44d_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1bcc09ed2_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bca4c7e7_MutSlicingExprModel>>()) {
			_case_begin_1c3867b8e:;
			{
				_1c119cebb_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1bca4c7e7_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bcaab15d_StrInsertBeginExprModel>>()) {
			_case_begin_1c3867c16:;
			{
				_1c119d241_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63126_st.operator jule::Ptr<_1bcaab15d_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1c386672b:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1c38666c6:;
	};
}



inline void _1c11902aa_scopeStmts(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c00487b3_Scope>& _68135_s) {
	{
		auto &expr = _68135_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1c3872b66:;
		if (it != expr.end()) {
			jule::Any _68221_st = *it;
			{
				_1c11eb6e0_indent(_self_.get()._field_oc);
				_1c1190035_st(_self_, _68221_st);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1c3872b66:;
			++it;
			goto _iter_begin_1c3872b66;
		}
		_iter_end_1c3872b66:;
	};
}



inline void _1c1190530_scope(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1c00487b3_Scope> _69029_s) {
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	if (_69029_s.get()._field_Deferred) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c11902aa_scopeStmts(_self_, _69029_s);
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69029_s.get()._field_Deferred) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1c11907a5_funcScope(jule::Ptr<_1c118a5a2_scopeCoder> _self_, jule::Ptr<_1be462392_FnIns> _70633_f) {
	if ((_70633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	if ((!(_1be45eb53_IsVoid(_70633_f.get()._field_Decl.ptr())))) {
		jule::Slice<jule::Ptr<_1c0109324_TypeKind>> _71321_types = _1be4634b4_Types(_70633_f.ptr());;
		{
			auto &expr = _70633_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
			auto it = expr.begin();
			_iter_begin_1c387892a:;
			if (it != expr.end()) {
				jule::I64 _71417_i = it - expr.begin();
				jule::Ptr<_1d675d511_Token> _71420_ident = *it;
				{
					if ((_1d6760ca5_IsIgnoreIdent(_71420_ident.get()._field_Kind) || _1d676104c_IsAnonIdent(_71420_ident.get()._field_Kind))) {
						goto _iter_next_1c387892a;
					};
					_1c11eb6e0_indent(_self_.get()._field_oc);
					_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_71321_types[_71417_i]));
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1c11e9710_write(_self_.get()._field_oc, static__1c11a5468_toLocal(_71420_ident.get()._field_Row,_71420_ident.get()._field_Column,_71420_ident.get()._field_Kind));
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1c119dc36_initExpr(_self_.get()._field_oc.get()._field_ec, _71321_types[_71417_i]);
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1c387892a:;
				++it;
				_71417_i++;
				goto _iter_begin_1c387892a;
			}
			_iter_end_1c387892a:;
		};
	};
	_1c11902aa_scopeStmts(_self_, _70633_f.get()._field_Scope);
	if ((_70633_f.get()._field_Decl.get()._field_Exceptional && _1be45eb53_IsVoid(_70633_f.get()._field_Decl.ptr()))) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1c118a5a2_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c11930e3_exprCoder> static__1c11934de_new(jule::Ptr<_1c12163a8_ObjectCoder>& _9724_oc) {
	return jule::new_ptr<_1c11930e3_exprCoder>(_1c11930e3_exprCoder{._field_oc=_9724_oc});
}



inline void _1c1193764_string(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be3e8c63_Const>& _10327_c) {
	jule::Str _10413_content = _1be450627_ReadStr(_10327_c.ptr());;
	if ((_10413_content.len() == 0LL)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10913_bytes = static_cast<jule::Slice<jule::U8>>(_10413_content);;
	jule::Str _11013_len = _1c00464e7_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_10913_bytes.len())),10LL);;
	jule::Str _11113_lit = _1c119e93a_cstrLit(_10913_bytes);;
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c11e9710_write(_self_.get()._field_oc, _11113_lit);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1c11e9710_write(_self_.get()._field_oc, _11013_len);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c11939d9_boolean(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be3e8c63_Const>& _12028_c) {
	if (_1be4503b3_ReadBool(_12028_c.ptr())) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1c1193bb5_nilLit(jule::Ptr<_1c11930e3_exprCoder> _self_) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1c1193ec3_ftoaSpecialCases(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::F64& _13237_x) {
	{
		
		if (_1bee91992_IsNaN(_13237_x)) {
			_case_begin_1c3898373:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1bee98c96_IsInf(_13237_x,1LL)) {
			_case_begin_1c3897b36:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1bee98c96_IsInf(_13237_x,-1LL)) {
			_case_begin_1c3897b9c:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1c3897ac0:;
			{
				return false;
			}
		}
		_match_end_1c38979e3:;
	};
	return true;
}



inline void _1c1194248_float32(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be3e8c63_Const>& _14628_c) {
	jule::F64 _14713_x = _1be4510c8_AsF64(_14628_c.ptr());;
	if (_1c1193ec3_ftoaSpecialCases(_self_, _14713_x)) {
		return;;
	};
	{
		
		if ((_14713_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1c389ad48:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14713_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1c389aa4b:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1c389a3b9:;
			{
				_1c11e9710_write(_self_.get()._field_oc, _1c119ec48_ftoa(_14713_x,32LL));
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1c389a782:;
	};
}



inline void _1c11944bd_float64(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be3e8c63_Const>& _16528_c) {
	jule::F64 _16613_x = _1be4510c8_AsF64(_16528_c.ptr());;
	if (_1c1193ec3_ftoaSpecialCases(_self_, _16613_x)) {
		return;;
	};
	{
		
		if ((_16613_x == jule::MAX_F64)) {
			_case_begin_1c389dd90:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_16613_x == jule::MIN_F64)) {
			_case_begin_1c389e500:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1c389d411:;
			{
				_1c11e9710_write(_self_.get()._field_oc, _1c119ec48_ftoa(_16613_x,64LL));
			}
		}
		_match_end_1c389d7c9:;
	};
}



inline void _1c11947dc_constant(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be3e8c63_Const> _18432_c, jule::Bool _18443_fx32) {
	{
		
		if (_1be4529c0_IsStr(_18432_c.ptr())) {
			_case_begin_1c38a0d09:;
			{
				_1c1193764_string(_self_, _18432_c);
			}
		}
		else if (_1be45275b_IsBool(_18432_c.ptr())) {
			_case_begin_1c38a0d70:;
			{
				_1c11939d9_boolean(_self_, _18432_c);
			}
		}
		else if (_1be452c34_IsF64(_18432_c.ptr())) {
			_case_begin_1c38a0dd6:;
			{
				{
					
					if (_18443_fx32) {
						_case_begin_1c38a30c5:;
						{
							_1c1194248_float32(_self_, _18432_c);
						}
					}
					else {
						_case_begin_1c38a2c2e:;
						{
							_1c11944bd_float64(_self_, _18432_c);
						}
					}
					_match_end_1c38a2b52:;
				};
			}
		}
		else if (_1be452283_IsI64(_18432_c.ptr())) {
			_case_begin_1c38a0e4c:;
			{
				_1c11e9710_write(_self_.get()._field_oc, _1c119eee0_itoa(static_cast<jule::I64>(_1be44edda_ReadI64(_18432_c.ptr()))));
			}
		}
		else if (_1be4524e7_IsU64(_18432_c.ptr())) {
			_case_begin_1c38a1799:;
			{
				_1c11e9710_write(_self_.get()._field_oc, _1c11a0287_utoa(static_cast<jule::U64>(_1be45014e_ReadU64(_18432_c.ptr()))));
			}
		}
		else if (_1be452e98_IsNil(_18432_c.ptr())) {
			_case_begin_1c38a1810:;
			{
				_1c1193bb5_nilLit(_self_);
			}
		}
		else {
			_case_begin_1c38a0c93:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1c38a0bb6:;
	};
}



inline void _1c1194ba5_divByZeroBinary(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1d675d511_Token>& _20836_op, jule::Ptr<_1be457277_OperandExprModel>& _20853_l, jule::Ptr<_1be457277_OperandExprModel>& _20880_r) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20836_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1c2b98740:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1c34aa194:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1c2b986da:;
	};
	if ((!(_231e8259c_Production))) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c11ecacb_locInfo(_self_.get()._field_oc, _20836_op);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1c119d73b_expr(_self_, _20853_l.get()._field_Model);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c119d73b_expr(_self_, _20880_r.get()._field_Model);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c1194e2a_unsafeBinary(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be457464_BinopExprModel> _23036_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c119d4b6_model(_self_, _23036_m.get()._field_Left.get()._field_Model);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1c11e9710_write(_self_.get()._field_oc, _23036_m.get()._field_Op.get()._field_Kind);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1c119d4b6_model(_self_, _23036_m.get()._field_Right.get()._field_Model);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c11951a0_binary(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be457464_BinopExprModel> _24030_m) {
	{
		auto &_match_expr{ _24030_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1c34b1464:;
			{
				if ((_1c010c888_Struct(_24030_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1c1194ba5_divByZeroBinary(_self_, _24030_m.get()._field_Op,_24030_m.get()._field_Left,_24030_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1c34b13a9:;
	};
	_1c1194e2a_unsafeBinary(_self_, _24030_m);
}



inline void _1c1195425_var(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1c0081334_Var> _25227_m) {
	if (_25227_m.get()._field_CppLinked) {
		jule::Ptr<_1be36332b_Directive> _25417_d = _1c1224608_findDirective(_25227_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_25417_d != nullptr)) {
			_1c11e9710_write(_self_.get()._field_oc, _1c121b1d2_concatAllParts(_25417_d.get()._field_Args));
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a6a74_var(_25227_m));
}



inline void _1c119569a_structureIns(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be3b359b_StructIns> _26336_m) {
	_1c11e9710_write(_self_.get()._field_oc, static__1c122068c_structureIns(_26336_m));
}



inline void _1c1195920_unary(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be457651_UnaryExprModel> _26729_m) {
	{
		auto &_match_expr{ _26729_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c34b5ee6:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1c119d73b_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c34b605c:;
			{
				if ((_231e8259c_Production || (_1c010b69a_Sptr(_26729_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1c34b5e3b;
				};
				_1c119d73b_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1c11ecacb_locInfo(_self_.get()._field_oc, _26729_m.get()._field_Op);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1c34b5e3b:;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c11e9710_write(_self_.get()._field_oc, _26729_m.get()._field_Op.get()._field_Kind);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c119d73b_expr(_self_, _26729_m.get()._field_Expr.get()._field_Model);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1c1195b95_structureLit(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be457a2a_StructLitExprModel> _29136_m) {
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a6535_structureIns(_29136_m.get()._field_Strct));
	if (_29136_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_29136_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _29136_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1c34bd64c:;
			if (it != expr.end()) {
				jule::I64 _30417_i = it - expr.begin();
				jule::Ptr<_1be38e8b8_FieldIns> _30420_f = *it;
				{
					{
						auto &expr = _29136_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1c34be21e:;
						if (it != expr.end()) {
							jule::Ptr<_1be45783d_StructArgExprModel> _30529_arg = *it;
							{
								if ((_30529_arg.get()._field_Field == _30420_f)) {
									_1c11e9710_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1c11e9710_write(_self_.get()._field_oc, static__1c11a67cc_field(_30529_arg.get()._field_Field.get()._field_Decl));
									_1c11e9710_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1c119d73b_expr(_self_, _30529_arg.get()._field_Expr);
									if (((_29136_m.get()._field_Strct.get()._field_Fields.len() - _30417_i) > 1LL)) {
										_1c11e9710_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1c34bd64c;
								};
							}
							_iter_next_1c34be21e:;
							++it;
							goto _iter_begin_1c34be21e;
						}
						_iter_end_1c34be21e:;
					};
				}
				_iter_next_1c34bd64c:;
				++it;
				_30417_i++;
				goto _iter_begin_1c34bd64c;
			}
			_iter_end_1c34bd64c:;
		};
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c1195e1a_allocStructure(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be457c17_AllocStructLitExprModel> _32238_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a6535_structureIns(_32238_m.get()._field_Lit.get()._field_Strct));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1c1195b95_structureLit(_self_, _32238_m.get()._field_Lit);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c1196190_casting(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be457e04_CastingExprModel> _33031_m) {
	{
		
		if (((_1c010b436_Prim(_33031_m.get()._field_Kind.ptr()) != nullptr) && _1c0112294_IsAny(_1c010b436_Prim(_33031_m.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c34c50c1:;
			{
				_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_33031_m.get()._field_Kind));
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1c119d4b6_model(_self_, _33031_m.get()._field_Expr);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1c010b90e_Ptr(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || (_1c010b90e_Ptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c34c4c91:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_33031_m.get()._field_Kind));
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1c119d73b_expr(_self_, _33031_m.get()._field_Expr);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1c010caec_Trait(_33031_m.get()._field_ExprKind.ptr()) != nullptr) || ((_1c010b436_Prim(_33031_m.get()._field_ExprKind.ptr()) != nullptr) && _1c0112294_IsAny(_1c010b436_Prim(_33031_m.get()._field_ExprKind.ptr()).ptr())) || (_1c010bdd7_TypeEnum(_33031_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1c34c4d07:;
			{
				_1c119d4b6_model(_self_, _33031_m.get()._field_Expr);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_231e8259c_Production) {
					_1c11e9710_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_33031_m.get()._field_Kind));
					_1c11e9710_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1c010b69a_Sptr(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
						_1c11e9710_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_1c010b69a_Sptr(_33031_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_1c11e9710_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_33031_m.get()._field_Kind));
					};
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1c11ecacb_locInfo(_self_.get()._field_oc, _33031_m.get()._field_Token);
					_1c11e9710_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1c010caec_Trait(_33031_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c34c4d6d:;
			{
				_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_33031_m.get()._field_Kind));
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1c119d73b_expr(_self_, _33031_m.get()._field_Expr);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1c11e9710_write(_self_.get()._field_oc, _1c0046629_Itoa(static_cast<jule::I64>(_1c11daa64_findTypeOffset(_self_.get()._field_oc.ptr(), _1c010caec_Trait(_33031_m.get()._field_Kind.ptr()),_33031_m.get()._field_ExprKind))));
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1c34c4c2a:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_33031_m.get()._field_Kind));
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1c119d73b_expr(_self_, _33031_m.get()._field_Expr);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1c34c4b4d:;
	};
}



inline void _1c1196415_args(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Slice<jule::Any> _38128_args) {
	if ((_38128_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _38128_args;
		auto it = expr.begin();
		_iter_begin_1c34d582e:;
		if (it != expr.end()) {
			jule::I64 _38514_i = it - expr.begin();
			jule::Any _38521_a = *it;
			{
				_1c119d73b_expr(_self_, _38521_a);
				if (((_38128_args.len() - _38514_i) > 1LL)) {
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c34d582e:;
			++it;
			_38514_i++;
			goto _iter_begin_1c34d582e;
		}
		_iter_end_1c34d582e:;
	};
}



inline void _1c119668a_modelForCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Any _39336_expr) {
	{
		auto &_match_expr{ _39336_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1be462392_FnIns>>()) {
			_case_begin_1c34d77ed:;
			{
				_1c119946d_funcIns(_self_, _39336_expr.operator jule::Ptr<_1be462392_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
			_case_begin_1c34d7875:;
			{
				jule::Ptr<_1be459378_StructSubIdentExprModel> _39921_ssie = _39336_expr.operator jule::Ptr<_1be459378_StructSubIdentExprModel>();;
				if ((_39921_ssie.get()._field_Method != nullptr)) {
					_1c119946d_funcIns(_self_, _39921_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1c34d76dd:;
	};
	_1c119d4b6_model(_self_, _39336_expr);
}



inline void _1c1196910_pushCallInf(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be4580e1_FnCallExprModel>& _40832_m) {
	if ((_231e8259c_Production || ((!(_40832_m.get()._field_Func.get()._field_Anon)) && (!(_1c11a0908_isBuiltinCallHasDebuginf(_40832_m)))))) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40832_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _40832_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
				_case_begin_1c34dac1e:;
				{
					if (_40832_m.get()._field_Expr.operator jule::Ptr<_1be459378_StructSubIdentExprModel>().get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1c34dadea;
				}
			}
			else {
				_case_begin_1c34dadea:;
				{
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1c34dacc9:;
		};
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1c11ecacb_locInfo(_self_.get()._field_oc, _40832_m.get()._field_Token);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40832_m.get()._field_Args.len() != 0LL)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1c1196c1d_isWrapped(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be4580e1_FnCallExprModel>& _43334_m) {
	if ((((!(_1be463728_IsBuiltin(_43334_m.get()._field_Func.ptr()))) && (_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1be45d4d1_IsSelf(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43334_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
				_case_begin_1c34de959:;
				{
					jule::Ptr<_1be459378_StructSubIdentExprModel> _43725_ssie = _43334_m.get()._field_Expr.operator jule::Ptr<_1be459378_StructSubIdentExprModel>();;
					{
						
						if (_1be45d745_IsRef(_43334_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1c010b69a_Sptr(_43725_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1c34e0284:;
							{
								goto _match_end_1c34e0817;
							}
						}
						else {
							_case_begin_1c34e087d:;
							{
								if ((_1c010c888_Struct(_43725_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_43725_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1c11e9710_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1c119d4b6_model(_self_, _43725_ssie.get()._field_Expr.get()._field_Model);
										_1c11e9710_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1c34e0817:;
					};
				}
			}
			_match_end_1c34de74a:;
		};
	};
	return false;
}



inline void _1c1196e93_pureFuncCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be4580e1_FnCallExprModel>& _45737_m) {
	jule::Bool _45813_wrapped = _1c1196c1d_isWrapped(_self_, _45737_m);;
	if (_45737_m.get()._field_IsCo) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1c119668a_modelForCall(_self_, _45737_m.get()._field_Expr);
	if ((!(_1be463728_IsBuiltin(_45737_m.get()._field_Func.ptr())))) {
		if ((_45737_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_45737_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1c122498d_hasDirective(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45737_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c34e6ba3:;
					if (it != expr.end()) {
						jule::I64 _46726_i = it - expr.begin();
						jule::Ptr<_1c0107ae7_InsGeneric> _46733_g = *it;
						{
							_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_46733_g.get()._field_Kind));
							if (((_45737_m.get()._field_Func.get()._field_Generics.len() - _46726_i) > 1LL)) {
								_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1c34e6ba3:;
						++it;
						_46726_i++;
						goto _iter_begin_1c34e6ba3;
					}
					_iter_end_1c34e6ba3:;
				};
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1c1196910_pushCallInf(_self_, _45737_m);
	jule::Bool _47817_locinfo = false;;
	if ((((!(_1be463728_IsBuiltin(_45737_m.get()._field_Func.ptr()))) && (_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1be45d4d1_IsSelf(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45737_m.get()._field_Expr };
			
			if (_match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
				_case_begin_1c34e58b6:;
				{
					jule::Ptr<_1be459378_StructSubIdentExprModel> _48225_ssie = _45737_m.get()._field_Expr.operator jule::Ptr<_1be459378_StructSubIdentExprModel>();;
					{
						
						if (_1be45d745_IsRef(_45737_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1c34ec879:;
							{
								_1c119d4b6_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1c010b69a_Sptr(_48225_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1c34ecdda:;
							{
								_1c119d4b6_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								_1c11e9710_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_231e8259c_Production))) {
									_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1c11ecacb_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
									_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1c34eb4d2:;
							{
								if ((_1c010c888_Struct(_48225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1c11e9710_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45813_wrapped) {
									_1c11e9710_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1c119d4b6_model(_self_, _48225_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1c34eb46b:;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_1c11e9710_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1be458e5a_TraitSubIdentExprModel>>()) {
				_case_begin_1c34ea558:;
				{
					_1c119d4b6_model(_self_, _45737_m.get()._field_Expr.operator jule::Ptr<_1be458e5a_TraitSubIdentExprModel>().get()._field_Expr);
					if ((!(_231e8259c_Production))) {
						_47817_locinfo=true;
					};
					if ((_45737_m.get()._field_Args.len() > 0LL)) {
						_1c11e9710_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1c34ea3e3:;
		};
	};
	_1c1196415_args(_self_, _45737_m.get()._field_Args);
	if (_47817_locinfo) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1c11ecacb_locInfo(_self_.get()._field_oc, _45737_m.get()._field_Token);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45813_wrapped) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45737_m.get()._field_IsCo) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1c1197218_funcCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be4580e1_FnCallExprModel> _53632_m) {
	if (((_1be463728_IsBuiltin(_53632_m.get()._field_Func.ptr()) || (!(_53632_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_53632_m.get()._field_Except != nullptr) && (_53632_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1c1196e93_pureFuncCall(_self_, _53632_m);
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1c1196e93_pureFuncCall(_self_, _53632_m);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	if ((_53632_m.get()._field_Except != nullptr)) {
		if (((_53632_m.get()._field_Func.get()._field_Result == nullptr) || (!(_53632_m.get()._field_Assigned)))) {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1c1190530_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55821_forwarded = _1c11a063e_isForwarded(_53632_m.get()._field_Except);;
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55821_forwarded) {
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1c1190530_scope(_self_.get()._field_oc.get()._field_sc, _53632_m.get()._field_Except);
			if (_55821_forwarded) {
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1c119dc36_initExpr(_self_, _53632_m.get()._field_Func.get()._field_Result);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1c11e9710_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1c11eae92_doneIndent(_self_.get()._field_oc);
	} else {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1c11ecacb_locInfo(_self_.get()._field_oc, _53632_m.get()._field_Token);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1be45eb53_IsVoid(_53632_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1c11eb6e0_indent(_self_.get()._field_oc);
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1c11eae92_doneIndent(_self_.get()._field_oc);
	};
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c119748d_slice(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be4582cd_SliceExprModel> _58729_m) {
	if ((_58729_m.get()._field_Elems.len() == 0LL)) {
		_1c11e9710_write(_self_.get()._field_oc, static__1c121e5c0_asSlice(_58729_m.get()._field_ElemKind));
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, static__1c121e5c0_asSlice(_58729_m.get()._field_ElemKind));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1c1196415_args(_self_, _58729_m.get()._field_Elems);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c1197713_indexing(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be4584ba_IndexingExprModel> _59932_m) {
	_1c119d4b6_model(_self_, _59932_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_231e8259c_Production || (_1c010b90e_Ptr(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1c010cd61_Map(_59932_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c35164db:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1c119d73b_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1c3516c7d:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1c11ecacb_locInfo(_self_.get()._field_oc, _59932_m.get()._field_Token);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1c119d73b_expr(_self_, _59932_m.get()._field_Index.get()._field_Model);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1c3516c17:;
	};
}



inline void _1c1197988_unsafeIndexing(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1d6d06746_UnsafeIndexingExprModel> _61838_m) {
	_1c119d4b6_model(_self_, _61838_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_231e8259c_Production || (_1c010b90e_Ptr(_61838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1c010cd61_Map(_61838_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c3519885:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1c119d73b_expr(_self_, _61838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1c351b26b:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1c119d73b_expr(_self_, _61838_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1c351b205:;
	};
}



inline void _1c1197c0d_anonFunc(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be4586a7_AnonFnExprModel> _63532_m) {
	_1c11e9710_write(_self_.get()._field_oc, static__1c1221a01_func(_63532_m.get()._field_Func));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1c1217be5_paramsIns(_self_.get()._field_oc, _63532_m.get()._field_Func.get()._field_Params);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1c11e9710_write(_self_.get()._field_oc, static__1c12214b2_funcInsResult(_63532_m.get()._field_Func));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1c11907a5_funcScope(_self_.get()._field_oc.get()._field_sc, _63532_m.get()._field_Func);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c1197e83_map(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be458a81_MapExprModel> _64627_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_64627_m.get()._field_KeyKind));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_64627_m.get()._field_ValKind));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64627_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _64627_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1c3524c36:;
			if (it != expr.end()) {
				jule::I64 _65318_i = it - expr.begin();
				jule::Ptr<_1be458894_KeyValPairExprModel> _65325_pair = *it;
				{
					_1c11e9710_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1c119d73b_expr(_self_, _65325_pair.get()._field_Key);
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1c119d73b_expr(_self_, _65325_pair.get()._field_Val);
					_1c11e9710_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64627_m.get()._field_Entries.len() - _65318_i) > 1LL)) {
						_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1c3524c36:;
				++it;
				_65318_i++;
				goto _iter_begin_1c3524c36;
			}
			_iter_end_1c3524c36:;
		};
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c1198208_slicing(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be458c6d_SlicingExprModel> _66731_m) {
	_1c119d4b6_model(_self_, _66731_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_231e8259c_Production))) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c11ecacb_locInfo(_self_.get()._field_oc, _66731_m.get()._field_Token);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1c119d73b_expr(_self_, _66731_m.get()._field_Left);
	if ((_66731_m.get()._field_Right != nullptr)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1c119d73b_expr(_self_, _66731_m.get()._field_Right);
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119847d_traitSub(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be458e5a_TraitSubIdentExprModel> _68332_m) {
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a5c4e_traitDecl(_68332_m.get()._field_Trt));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1c119d4b6_model(_self_, _68332_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a5710_func(_68332_m.get()._field_Method));
}



inline void _1c1198703_structureSub(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be459378_StructSubIdentExprModel> _69236_m) {
	_1c119d4b6_model(_self_, _69236_m.get()._field_Expr.get()._field_Model);
	if ((_69236_m.get()._field_Field != nullptr)) {
		if ((_1c010b90e_Ptr(_69236_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1c010b69a_Sptr(_69236_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_231e8259c_Production))) {
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1c11ecacb_locInfo(_self_.get()._field_oc, _69236_m.get()._field_Token);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1c11e9710_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1c11e9710_write(_self_.get()._field_oc, static__1c11a67cc_field(_69236_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1c1198978_commonIdent(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45993e_CommonIdentExprModel> _71231_m) {
	_1c11e9710_write(_self_.get()._field_oc, _71231_m.get()._field_Ident);
}



inline void _1c1198bed_commonSub(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be459b2b_CommonSubIdentExprModel> _71633_m) {
	_1c119d4b6_model(_self_, _71633_m.get()._field_Expr);
	{
		
		if ((_1c010b90e_Ptr(_71633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1c35340db:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1c010b69a_Sptr(_71633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1c3534817:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_231e8259c_Production))) {
					_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1c11ecacb_locInfo(_self_.get()._field_oc, _71633_m.get()._field_Token);
					_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1c35347a1:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1c353473a:;
	};
	_1c11e9710_write(_self_.get()._field_oc, _71633_m.get()._field_Ident);
}



inline void _1c1198e73_array(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be459752_ArrayExprModel> _73529_m) {
	_1c11e9710_write(_self_.get()._field_oc, static__1c1220934_array(_73529_m.get()._field_Kind));
	if ((_73529_m.get()._field_Elems.len() == 0LL)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73529_m.get()._field_Elems.len() == 2LL) && (_73529_m.get()._field_Elems[1LL] == nullptr))) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1c119d73b_expr(_self_, _73529_m.get()._field_Elems[0LL]);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1c1196415_args(_self_, _73529_m.get()._field_Elems);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1c11991e8_funcInsCommon(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be462392_FnIns> _75837_m) {
	_1c11e9710_write(_self_.get()._field_oc, static__1c1221a01_func(_75837_m));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c119946d_funcIns(_self_, _75837_m);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119946d_funcIns(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be462392_FnIns> _76531_m) {
	if (((_76531_m.get()._field_Decl != nullptr) && _76531_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1be36332b_Directive> _76717_d = _1c1224608_findDirective(_76531_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_76717_d != nullptr)) {
			_1c11e9710_write(_self_.get()._field_oc, _1c121b1d2_concatAllParts(_76717_d.get()._field_Args));
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a59a7_funcIns(_76531_m));
}



inline void _1c11996e3_tuple(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be459d18_TupleExprModel> _77629_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77629_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1c3541e62:;
		if (it != expr.end()) {
			jule::I64 _77814_i = it - expr.begin();
			jule::Ptr<_1c00cd282_Data> _77821_d = *it;
			{
				_1c119d73b_expr(_self_, _77821_d.get()._field_Model);
				if (((_77629_m.get()._field_Datas.len() - _77814_i) > 1LL)) {
					_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1c3541e62:;
			++it;
			_77814_i++;
			goto _iter_begin_1c3541e62;
		}
		_iter_end_1c3541e62:;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c1199968_newCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel> _78731_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_78731_m.get()._field_Kind));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78731_m.get()._field_Init != nullptr)) {
		_1c119d73b_expr(_self_, _78731_m.get()._field_Init);
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c1199bdd_outCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45a005_BuiltinOutCallExprModel> _79731_m) {
	if ((_79731_m.get()._field_Debug && _231e8259c_Production)) {
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1c119d73b_expr(_self_, _79731_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c1199e63_outlnCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel> _80633_m) {
	if ((_80633_m.get()._field_Debug && _231e8259c_Production)) {
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1c119d73b_expr(_self_, _80633_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119a1d8_panicCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel> _81533_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1c119d73b_expr(_self_, _81533_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1c11ecacb_locInfo(_self_.get()._field_oc, _81533_m.get()._field_Token);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1c119a45d_assertCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45a995_BuiltinAssertCallExprModel> _82334_m) {
	if (_231e8259c_Production) {
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1c119d73b_expr(_self_, _82334_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1c11e9710_write(_self_.get()._field_oc, _1c119e93a_cstrLit(static_cast<jule::Slice<jule::U8>>(_82334_m.get()._field_Log)));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1c11ecacb_locInfo(_self_.get()._field_oc, _82334_m.get()._field_Token);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1c119a6d3_errorCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45b248_BuiltinErrorCallExprModel> _83633_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1be45eb53_IsVoid(_83633_m.get()._field_Func.get()._field_Decl.ptr())) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_83633_m.get()._field_Func.get()._field_Result));
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1c119d73b_expr(_self_, _83633_m.get()._field_Err);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119a958_copyCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45b05b_BuiltinCopyCallExprModel> _84932_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1c119d4b6_model(_self_, _84932_m.get()._field_Dest.get()._field_Model);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1c010b436_Prim(_84932_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1c119d4b6_model(_self_, _84932_m.get()._field_Src.get()._field_Model);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1c010b436_Prim(_84932_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119abcd_makeCallSlice(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>& _86538_m) {
	jule::Ptr<_1c0112edc_Slc> _86617_slice = _1c010c3b0_Slc(_86538_m.get()._field_Kind.ptr());;
	_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_86538_m.get()._field_Kind));
	if ((_1c010bb73_Enum(_86617_slice.get()._field_Elem.ptr()) != nullptr)) {
		if ((_86538_m.get()._field_Cap != nullptr)) {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1c11e9710_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1c119d73b_expr(_self_, _86538_m.get()._field_Len);
	if ((_86538_m.get()._field_Cap != nullptr)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1c119d73b_expr(_self_, _86538_m.get()._field_Cap);
	};
	if ((_1c010bb73_Enum(_86617_slice.get()._field_Elem.ptr()) != nullptr)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1c119dc36_initExpr(_self_, _86617_slice.get()._field_Elem);
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119ae53_makeCallStr(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>& _89136_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1c119d73b_expr(_self_, _89136_m.get()._field_Len);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119b1c8_makeCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel> _89832_m) {
	if ((_1c010c3b0_Slc(_89832_m.get()._field_Kind.ptr()) != nullptr)) {
		_1c119abcd_makeCallSlice(_self_, _89832_m);
		return;;
	};
	_1c119ae53_makeCallStr(_self_, _89832_m);
}



inline void _1c119b44d_pushToSlice(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1bcc09ed2_PushToSliceExprModel> _90635_m) {
	jule::I64 _90713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1c119d4b6_model(_self_, _90635_m.get()._field_Dest);
	jule::Str _90913_dest = _self_.get()._field_oc.get()._field_Obj.slice(_90713_n);;
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1c11e9710_write(_self_.get()._field_oc, _90913_dest);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c11e9710_write(_self_.get()._field_oc, _1c0046629_Itoa(static_cast<jule::I64>(_90635_m.get()._field_Elems.get()._field_Elems.len())));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90635_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1c3561db6:;
		if (it != expr.end()) {
			jule::Any _91621_e = *it;
			{
				_1c11e9710_write(_self_.get()._field_oc, _90913_dest);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1c119d4b6_model(_self_, _91621_e);
				_1c11e9710_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1c3561db6:;
			++it;
			goto _iter_begin_1c3561db6;
		}
		_iter_end_1c3561db6:;
	};
}



inline void _1c119b6c3_appendCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel> _92534_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1c119d4b6_model(_self_, _92534_m.get()._field_Dest);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c119d4b6_model(_self_, _92534_m.get()._field_Elements);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119b948_cloneCall(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel> _93333_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1c119d4b6_model(_self_, _93333_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119bbbd_sizeof(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be459147_SizeofExprModel> _93930_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1c119d4b6_model(_self_, _93930_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119be43_alignof(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45b8a8_AlignofExprModel> _94531_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1c119d4b6_model(_self_, _94531_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1c119c251_runeLit(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45ba95_RuneExprModel> _95127_m) {
	if ((_95127_m.get()._field_Code <= 127LL)) {
		jule::Str _95321_b = _1c119e374_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95127_m.get()._field_Code)));;
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	};
	return _1c119eee0_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95127_m.get()._field_Code)));
}



inline void _1c119c4c6_structureStatic(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be459565_StructStaticIdentExprModel> _96239_m) {
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a59a7_funcIns(_96239_m.get()._field_Method));
}



inline void _1c119c74b_integratedToStr(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45bc82_IntegratedToStrExprModel> _96639_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1c119d4b6_model(_self_, _96639_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c119c9c1_backendEmit(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45be6e_BackendEmitExprModel> _97235_m) {
	if ((_97235_m.get()._field_Exprs.len() == 0LL)) {
		_1c11e9710_write(_self_.get()._field_oc, _97235_m.get()._field_Code);
		return;;
	};
	jule::I64 _97713_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _97817_args = jule::Slice<jule::Any>::alloc(_97235_m.get()._field_Exprs.len());;
	{
		auto &expr = _97235_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c39967b2:;
		if (it != expr.end()) {
			jule::I64 _97914_i = it - expr.begin();
			jule::Any _97921_expr = *it;
			{
				_1c119d73b_expr(_self_, _97921_expr);
				_97817_args[_97914_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_97713_n));
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_97713_n);
			}
			_iter_next_1c39967b2:;
			++it;
			_97914_i++;
			goto _iter_begin_1c39967b2;
		}
		_iter_end_1c39967b2:;
	};
	_1c11e9710_write(_self_.get()._field_oc, _1bcc6d7d7_Format(_97235_m.get()._field_Code,jule::Any(_97817_args)));
}



inline void _1c119cc46_free(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1be45c15b_FreeExprModel> _98728_m) {
	_1c119d73b_expr(_self_, _98728_m.get()._field_Expr);
	if (_231e81d71_RC) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1c119cebb_mutSlicing(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1bca4c7e7_MutSlicingExprModel> _99634_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c119d4b6_model(_self_, _99634_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_231e8259c_Production))) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c11ecacb_locInfo(_self_.get()._field_oc, _99634_m.get()._field_Token);
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1c119d73b_expr(_self_, _99634_m.get()._field_Left);
	if ((_99634_m.get()._field_Right != nullptr)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1c119d73b_expr(_self_, _99634_m.get()._field_Right);
	};
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1c119d241_strInsertBegin(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1bcaab15d_StrInsertBeginExprModel> _101338_m) {
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c119d4b6_model(_self_, _101338_m.get()._field_Dest);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1c119d4b6_model(_self_, _101338_m.get()._field_Expr);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1c119d4b6_model(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Any _102129_m) {
	{
		auto &_match_expr{ _102129_m };
		
		if (_match_expr.type_is<jule::Ptr<_1c0109324_TypeKind>>()) {
			_case_begin_1c39a0854:;
			{
				_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_102129_m.operator jule::Ptr<_1c0109324_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3e8c63_Const>>()) {
			_case_begin_1c39a0b2e:;
			{
				_1c11947dc_constant(_self_, _102129_m.operator jule::Ptr<_1be3e8c63_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c39a0b95:;
			{
				_1c1195425_var(_self_, _102129_m.operator jule::Ptr<_1c0081334_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be3b359b_StructIns>>()) {
			_case_begin_1c39a0c0b:;
			{
				_1c119569a_structureIns(_self_, _102129_m.operator jule::Ptr<_1be3b359b_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be462392_FnIns>>()) {
			_case_begin_1c39a0c72:;
			{
				_1c11991e8_funcInsCommon(_self_, _102129_m.operator jule::Ptr<_1be462392_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bcbe5088_UnsafeBinopExprModel>>()) {
			_case_begin_1c39a1789:;
			{
				_1c1194e2a_unsafeBinary(_self_, _102129_m.operator jule::Ptr<_1bcbe5088_UnsafeBinopExprModel>().get()._field_Node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457464_BinopExprModel>>()) {
			_case_begin_1c39a1800:;
			{
				_1c11951a0_binary(_self_, _102129_m.operator jule::Ptr<_1be457464_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457651_UnaryExprModel>>()) {
			_case_begin_1c39a1866:;
			{
				_1c1195920_unary(_self_, _102129_m.operator jule::Ptr<_1be457651_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457a2a_StructLitExprModel>>()) {
			_case_begin_1c39a18cc:;
			{
				_1c1195b95_structureLit(_self_, _102129_m.operator jule::Ptr<_1be457a2a_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457c17_AllocStructLitExprModel>>()) {
			_case_begin_1c39a1943:;
			{
				_1c1195e1a_allocStructure(_self_, _102129_m.operator jule::Ptr<_1be457c17_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457e04_CastingExprModel>>()) {
			_case_begin_1c39a19a9:;
			{
				_1c1196190_casting(_self_, _102129_m.operator jule::Ptr<_1be457e04_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4580e1_FnCallExprModel>>()) {
			_case_begin_1c39a1a20:;
			{
				_1c1197218_funcCall(_self_, _102129_m.operator jule::Ptr<_1be4580e1_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4582cd_SliceExprModel>>()) {
			_case_begin_1c39a1a86:;
			{
				_1c119748d_slice(_self_, _102129_m.operator jule::Ptr<_1be4582cd_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459752_ArrayExprModel>>()) {
			_case_begin_1c39a1aec:;
			{
				_1c1198e73_array(_self_, _102129_m.operator jule::Ptr<_1be459752_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d6d06746_UnsafeIndexingExprModel>>()) {
			_case_begin_1c39a1b63:;
			{
				_1c1197988_unsafeIndexing(_self_, _102129_m.operator jule::Ptr<_1d6d06746_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4584ba_IndexingExprModel>>()) {
			_case_begin_1c39a1bc9:;
			{
				_1c1197713_indexing(_self_, _102129_m.operator jule::Ptr<_1be4584ba_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be4586a7_AnonFnExprModel>>()) {
			_case_begin_1c39a1c40:;
			{
				_1c1197c0d_anonFunc(_self_, _102129_m.operator jule::Ptr<_1be4586a7_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458a81_MapExprModel>>()) {
			_case_begin_1c39a1ca6:;
			{
				_1c1197e83_map(_self_, _102129_m.operator jule::Ptr<_1be458a81_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458c6d_SlicingExprModel>>()) {
			_case_begin_1c39a1d1c:;
			{
				_1c1198208_slicing(_self_, _102129_m.operator jule::Ptr<_1be458c6d_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458e5a_TraitSubIdentExprModel>>()) {
			_case_begin_1c39a1d83:;
			{
				_1c119847d_traitSub(_self_, _102129_m.operator jule::Ptr<_1be458e5a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
			_case_begin_1c39a1e0a:;
			{
				_1c1198703_structureSub(_self_, _102129_m.operator jule::Ptr<_1be459378_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45993e_CommonIdentExprModel>>()) {
			_case_begin_1c39a1e82:;
			{
				_1c1198978_commonIdent(_self_, _102129_m.operator jule::Ptr<_1be45993e_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459b2b_CommonSubIdentExprModel>>()) {
			_case_begin_1c39a2009:;
			{
				_1c1198bed_commonSub(_self_, _102129_m.operator jule::Ptr<_1be459b2b_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459d18_TupleExprModel>>()) {
			_case_begin_1c39a2081:;
			{
				_1c11996e3_tuple(_self_, _102129_m.operator jule::Ptr<_1be459d18_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a005_BuiltinOutCallExprModel>>()) {
			_case_begin_1c39a2108:;
			{
				_1c1199bdd_outCall(_self_, _102129_m.operator jule::Ptr<_1be45a005_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1c39a2180:;
			{
				_1c1199e63_outlnCall(_self_, _102129_m.operator jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel>>()) {
			_case_begin_1c39a2207:;
			{
				_1c1199968_newCall(_self_, _102129_m.operator jule::Ptr<_1be45a5bb_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>>()) {
			_case_begin_1c39a227e:;
			{
				_1c119a1d8_panicCall(_self_, _102129_m.operator jule::Ptr<_1be45a7a8_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a995_BuiltinAssertCallExprModel>>()) {
			_case_begin_1c39a2306:;
			{
				_1c119a45d_assertCall(_self_, _102129_m.operator jule::Ptr<_1be45a995_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>>()) {
			_case_begin_1c39a237d:;
			{
				_1c119a6d3_errorCall(_self_, _102129_m.operator jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>>()) {
			_case_begin_1c39a2405:;
			{
				_1c119b1c8_makeCall(_self_, _102129_m.operator jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>>()) {
			_case_begin_1c39a247c:;
			{
				_1c119b6c3_appendCall(_self_, _102129_m.operator jule::Ptr<_1be45ad6e_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel>>()) {
			_case_begin_1c39a2504:;
			{
				_1c119b948_cloneCall(_self_, _102129_m.operator jule::Ptr<_1be45a3ce_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45b05b_BuiltinCopyCallExprModel>>()) {
			_case_begin_1c39a257b:;
			{
				_1c119a958_copyCall(_self_, _102129_m.operator jule::Ptr<_1be45b05b_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459147_SizeofExprModel>>()) {
			_case_begin_1c39a2603:;
			{
				_1c119bbbd_sizeof(_self_, _102129_m.operator jule::Ptr<_1be459147_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45b8a8_AlignofExprModel>>()) {
			_case_begin_1c39a267a:;
			{
				_1c119be43_alignof(_self_, _102129_m.operator jule::Ptr<_1be45b8a8_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45ba95_RuneExprModel>>()) {
			_case_begin_1c39a2702:;
			{
				_1c11e9710_write(_self_.get()._field_oc, _1c119c251_runeLit(_self_, _102129_m.operator jule::Ptr<_1be45ba95_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459565_StructStaticIdentExprModel>>()) {
			_case_begin_1c39a2779:;
			{
				_1c119c4c6_structureStatic(_self_, _102129_m.operator jule::Ptr<_1be459565_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45bc82_IntegratedToStrExprModel>>()) {
			_case_begin_1c39a2801:;
			{
				_1c119c74b_integratedToStr(_self_, _102129_m.operator jule::Ptr<_1be45bc82_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45be6e_BackendEmitExprModel>>()) {
			_case_begin_1c39a2878:;
			{
				_1c119c9c1_backendEmit(_self_, _102129_m.operator jule::Ptr<_1be45be6e_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be45c15b_FreeExprModel>>()) {
			_case_begin_1c39a2900:;
			{
				_1c119cc46_free(_self_, _102129_m.operator jule::Ptr<_1be45c15b_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bca4c7e7_MutSlicingExprModel>>()) {
			_case_begin_1c39a2977:;
			{
				_1c119cebb_mutSlicing(_self_, _102129_m.operator jule::Ptr<_1bca4c7e7_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bcaab15d_StrInsertBeginExprModel>>()) {
			_case_begin_1c39a29ee:;
			{
				_1c119d241_strInsertBegin(_self_, _102129_m.operator jule::Ptr<_1bcaab15d_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1c39a09ca:;
			{
				_1c11e9710_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1c39a08ed:;
	};
}



inline void _1c119d73b_expr(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Any _111428_e) {
	_1c119d4b6_model(_self_, _111428_e);
}



inline void _1c119d9b1_val(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1c00ce30a_Value> _111827_v) {
	if (_1c00cdb45_IsConst(_111827_v.get()._field_Data.ptr())) {
		_1c11947dc_constant(_self_, _111827_v.get()._field_Data.get()._field_Constant,((_111827_v.get()._field_Data.get()._field_Kind != nullptr) && _1c01110a6_IsF32(_1c010b436_Prim(_111827_v.get()._field_Data.get()._field_Kind.ptr()).ptr())));
		return;;
	};
	_1c119d73b_expr(_self_, _111827_v.get()._field_Data.get()._field_Model);
}



inline void _1c119dc36_initExpr(jule::Ptr<_1c11930e3_exprCoder> _self_, jule::Ptr<_1c0109324_TypeKind> _112632_t) {
	if ((_1c010b90e_Ptr(_112632_t.ptr()) != nullptr)) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1be4736e4_Enum> _113117_enm = _1c010bb73_Enum(_112632_t.ptr());;
	if ((_113117_enm != nullptr)) {
		_1c119d9b1_val(_self_, _113117_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, static__1c1221c98_kind(_112632_t));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1c11930e3_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1c11a1299_cloneFuncDecl(jule::Ptr<_1be387251_Struct>& _1030_s) {
	jule::Str _1117_obj = static__1c12203e5_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1c11a1541_cloneFuncDef(jule::Ptr<_1be387251_Struct>& _1629_s) {
	jule::Str _1717_obj = static__1c12203e5_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1c11a0ee1_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c11a2421_TestCoder> static__1c11a2894_New(jule::Ptr<_1c12163a8_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_1c11a2421_TestCoder>(_1c11a2421_TestCoder{._field_oc=_2824_oc});
}



inline jule::Ptr<_1c005b3a8_ImportInfo> _1c11a2b08_findTestingPackage(jule::Ptr<_1c11a2421_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c39c049a:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1c39c049a:;
			++it;
			goto _iter_begin_1c39c049a;
		}
		_iter_end_1c39c049a:;
	};
	return nullptr;
}



inline void _1c11a2d7d_appendTest(jule::Ptr<_1c11a2421_TestCoder> _self_, jule::Ptr<_1be462392_FnIns> _4334_f) {
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11a3543_callTmReset(_self_);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1c11e9710_write(_self_.get()._field_oc, _1c119e93a_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a59a7_funcIns(_4334_f));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1c11a3103_appendPackageTests(jule::Ptr<_1c11a2421_TestCoder> _self_, jule::Ptr<_1c005e312_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c39c625e:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1c39c6b00:;
					if (it != expr.end()) {
						jule::Ptr<_1be45e6e1_Fn> _6225_f = *it;
						{
							if (_1c122498d_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1c11a2d7d_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1c39c6b00:;
						++it;
						goto _iter_begin_1c39c6b00;
					}
					_iter_end_1c39c6b00:;
				};
			}
			_iter_next_1c39c625e:;
			++it;
			goto _iter_begin_1c39c625e;
		}
		_iter_end_1c39c625e:;
	};
}



inline jule::Bool _1c11a3367_readyTestingPackage(jule::Ptr<_1c11a2421_TestCoder> _self_) {
	jule::Ptr<_1c005b3a8_ImportInfo> _7117_p = _1c11a2b08_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1c005c7e9_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1be38d71e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_1be38d71e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_1be38d71e_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;
}



inline void _1c11a3543_callTmReset(jule::Ptr<_1c11a2421_TestCoder> _self_) {
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a5710_func(_self_.get()._field_tmReset));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1c11a371e_callTmFailed(jule::Ptr<_1c11a2421_TestCoder> _self_) {
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a5710_func(_self_.get()._field_tmFailed));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1c11a38ea_callTmSkipped(jule::Ptr<_1c11a2421_TestCoder> _self_) {
	_1c11e9710_write(_self_.get()._field_oc, static__1c11a5710_func(_self_.get()._field_tmSkipped));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1c11a3ac6_Serialize(jule::Ptr<_1c11a2421_TestCoder> _self_) {
	_1c121a698_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1c121a4bc_end(_self_.get()._field_oc);
	});;
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	if ((!(_1c11a3367_readyTestingPackage(_self_)))) {
		_1c11e9710_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1c11eae92_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1c11e9710_write(_self_.get()._field_oc, static__1c121d503_asSptr(static__1c122068c_structureIns(_self_.get()._field_t)));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1c11e9710_write(_self_.get()._field_oc, static__1c122068c_structureIns(_self_.get()._field_t));
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1c11e9ea2_addIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1c11a371e_callTmFailed(_self_);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1c11a38ea_callTmSkipped(_self_);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1c11a3103_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1c11eae92_doneIndent(_self_.get()._field_oc);
	_1c11eb6e0_indent(_self_.get()._field_oc);
	_1c11e9710_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1c11a2421_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1c11a507d_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1c00463b5_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;
}



inline jule::Str static__1c11a5468_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1c0046629_Itoa(_5423_row);
	_5517_obj+=_1c0046629_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;
}



inline jule::Str static__1c11a5710_func(jule::Ptr<_1be45e6e1_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1c39de563:;
			{
				return _6521_f.get()._field_Ident;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1c39de5c9:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1be45edb7_IsMethod(_6521_f.ptr())) {
			_case_begin_1c39dd93b:;
			{
				jule::Str _7221_obj = static__1c11a507d_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1c39dd870:;
			{
				return static__1c11a507d_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1c39dd793:;
	};
}



inline jule::Str static__1c11a59a7_funcIns(jule::Ptr<_1be462392_FnIns>& _8424_f) {
	if (_1be463728_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1c11a5710_func(_8424_f.get()._field_Decl);
	};
	return static__1c11a507d_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));
}



inline jule::Str static__1c11a5c4e_traitDecl(jule::Ptr<_1be47159e_Trait> _9525_t) {
	if (_1be47211b_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);
	};
	return static__1c11a507d_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));
}



inline jule::Str static__1c11a5ee6_param(jule::Ptr<_1be45cda4_Param>& _10322_p) {
	if ((_1d676104c_IsAnonIdent(_10322_p.get()._field_Ident) || _1d6760ca5_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();
	};
	if (_1be45d4d1_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1c11a5468_toLocal(0LL,0LL,_10322_p.get()._field_Ident);
	};
	return static__1c11a5468_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);
}



inline jule::Str static__1c11a628d_structure(jule::Ptr<_1be387251_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1c122498d_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);
	};
	return static__1c11a507d_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1c11a6535_structureIns(jule::Ptr<_1be3b359b_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1c11a628d_structure(_12829_s.get()._field_Decl);
	};
	return static__1c11a507d_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));
}



inline jule::Str static__1c11a67cc_field(jule::Ptr<_1be37971b_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);
}



inline jule::Str static__1c11a6a74_var(jule::Ptr<_1c0081334_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1c39e9848:;
			{
				return _14423_v.get()._field_Ident;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1c39e98ae:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1c39e8bcc:;
			{
				if ((_1c010b69a_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1c39e8c43:;
			{
				return static__1c11a5468_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);
			}
		}
		else {
			_case_begin_1c39e8b66:;
			{
				return static__1c11a507d_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1c39e8aab:;
	};
}



inline jule::Str static__1c11a6d1b_iterBegin(jule::Uintptr _16325_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1c00463b5_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16325_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1c11a70b3_iterEnd(jule::Uintptr _17123_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1c00463b5_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17123_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1c11a735a_iterNext(jule::Uintptr _17924_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1c00463b5_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1c11a7602_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1c11a7899_matchEnd(jule::Uintptr _19524_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1c00463b5_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19524_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1c11a7b41_caseBegin(jule::Uintptr _20325_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1c00463b5_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1c11a4a72_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c1215ece_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c12161bb_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c121c1b1_Str(_1c121bde7_customType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1c121c4be_Equals(jule::Ptr<_1c121bde7_customType> _self_, jule::Ptr<_1c0109324_TypeKind> _3922_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1c121bde7_customType _Src) {
	_Stream << "customType{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1c121cc1c_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_1be57a026_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);
}



inline jule::Str static__1c121ceb4_prim(jule::Ptr<_1c010dceb_Prim> _7120_p) {
	return static__1c121cc1c_toType(_1c010e15e_Str(_7120_p.ptr()));
}



inline jule::Str static__1c121d25b_tuple(jule::Ptr<_1c0113a6a_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1c3913355:;
		if (it != expr.end()) {
			jule::Ptr<_1c0109324_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1c1221c98_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1c3913355:;
			++it;
			goto _iter_begin_1c3913355;
		}
		_iter_end_1c3913355:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1c121d503_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1c121d79a_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));
}



inline jule::Str static__1c121da42_sptr(jule::Ptr<_1c0112580_Sptr> _10124_sptr) {
	return static__1c121d503_asSptr(static__1c1221c98_kind(_10124_sptr.get()._field_Elem));
}



inline jule::Str static__1c121dcd9_ptr(jule::Ptr<_1c0115ae4_Ptr> _10623_p) {
	;
	if (_1c01165b7_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1c1221c98_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1c121e081_enumDecl(jule::Ptr<_1be4736e4_Enum> _11728_e) {
	return static__1c1221c98_kind(_11728_e.get()._field_Kind.get()._field_Kind);
}



inline jule::Str static__1c121e328_typeEnumDecl(jule::Ptr<_1be474cde_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1c121e5c0_asSlice(jule::Ptr<_1c0109324_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1c1221c98_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1c121e867_slice(jule::Ptr<_1c0112edc_Slc> _13425_s) {
	return static__1c121e5c0_asSlice(_13425_s.get()._field_Elem);
}



inline jule::Str static__1c121eb0e_map(jule::Ptr<_1c0114593_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1c1221c98_kind(_13923_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1c1221c98_kind(_13923_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1c121eda6_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1c122014d_traitDecl(jule::Ptr<_1be47159e_Trait> _15625_t) {
	return static__1c121eda6_traitIdent(static__1c11a5c4e_traitDecl(_15625_t));
}



inline jule::Str static__1c12203e5_structure(jule::Ptr<_1be387251_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_1c122498d_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1c11a628d_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1c122068c_structureIns(jule::Ptr<_1be3b359b_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__1c11a6535_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1c391d6c3:;
				if (it != expr.end()) {
					jule::Ptr<_1c0107ae7_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1c1221c98_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1c391d6c3:;
					++it;
					goto _iter_begin_1c391d6c3;
				}
				_iter_end_1c391d6c3:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1be36332b_Directive> _18317_d = _1c1224608_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1c121b1d2_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1c11a6535_structureIns(_17132_s);
}



inline jule::Str static__1c1220934_array(jule::Ptr<_1c0115187_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1c1221c98_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1c0046629_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1c1220e73_paramIns(jule::Ptr<_1be4614c3_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1c1221c98_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1c1221c98_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1c12214b2_funcInsResult(jule::Ptr<_1be462392_FnIns>& _24934_f) {
	if (_1be45eb53_IsVoid(_24934_f.get()._field_Decl.ptr())) {
		if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24934_f.get()._field_Decl.get()._field_Exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1c1221c98_kind(_24934_f.get()._field_Result)) + jule::Str(">", 1));
	};
	return static__1c1221c98_kind(_24934_f.get()._field_Result);
}



inline jule::Str static__1c1221759_anonFunc(jule::Ptr<_1be462392_FnIns> _26228_f) {
	jule::Str _26317_decl = static__1c12214b2_funcInsResult(_26228_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26228_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26228_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1c392a02b:;
			if (it != expr.end()) {
				jule::Ptr<_1be4614c3_ParamIns> _26625_param = *it;
				{
					if (_1be45d4d1_IsSelf(_26625_param.get()._field_Decl.ptr())) {
						goto _iter_next_1c392a02b;
					};
					_26317_decl+=static__1c1220e73_paramIns(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1c392a02b:;
				++it;
				goto _iter_begin_1c392a02b;
			}
			_iter_end_1c392a02b:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1c1221a01_func(jule::Ptr<_1be462392_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1c1221759_anonFunc(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1c1221c98_kind(jule::Ptr<_1c0109324_TypeKind> _29024_k) {
	{
		
		if (_1c0109ed4_CppLinked(_29024_k.ptr())) {
			_case_begin_1c392ca56:;
			{
				return _29024_k.get()._field_CppIdent;
			}
		}
		else if ((_1c010b436_Prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392cbdd:;
			{
				return static__1c121ceb4_prim(_1c010b436_Prim(_29024_k.ptr()));
			}
		}
		else if ((_1c010d0c5_Tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392cc54:;
			{
				return static__1c121d25b_tuple(_1c010d0c5_Tup(_29024_k.ptr()));
			}
		}
		else if ((_1c010b69a_Sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392cccb:;
			{
				return static__1c121da42_sptr(_1c010b69a_Sptr(_29024_k.ptr()));
			}
		}
		else if ((_1c010b90e_Ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392cd53:;
			{
				return static__1c121dcd9_ptr(_1c010b90e_Ptr(_29024_k.ptr()));
			}
		}
		else if ((_1c010bb73_Enum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392cdca:;
			{
				return static__1c121e081_enumDecl(_1c010bb73_Enum(_29024_k.ptr()));
			}
		}
		else if ((_1c010bdd7_TypeEnum(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392ce52:;
			{
				return static__1c121e328_typeEnumDecl(_1c010bdd7_TypeEnum(_29024_k.ptr()));
			}
		}
		else if ((_1c010c3b0_Slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392cec9:;
			{
				return static__1c121e867_slice(_1c010c3b0_Slc(_29024_k.ptr()));
			}
		}
		else if ((_1c010cd61_Map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392d051:;
			{
				return static__1c121eb0e_map(_1c010cd61_Map(_29024_k.ptr()));
			}
		}
		else if ((_1c010caec_Trait(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392d0c8:;
			{
				return static__1c122014d_traitDecl(_1c010caec_Trait(_29024_k.ptr()));
			}
		}
		else if ((_1c010c888_Struct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392d150:;
			{
				return static__1c122068c_structureIns(_1c010c888_Struct(_29024_k.ptr()));
			}
		}
		else if ((_1c010c14b_Arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392d1c7:;
			{
				return static__1c1220934_array(_1c010c14b_Arr(_29024_k.ptr()));
			}
		}
		else if ((_1c010c624_Fn(_29024_k.ptr()) != nullptr)) {
			_case_begin_1c392d24e:;
			{
				return static__1c1221a01_func(_1c010c624_Fn(_29024_k.ptr()));
			}
		}
		_match_end_1c392c968:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1c121bde7_customType>>()) {
			_case_begin_1c392d32b:;
			{
				return _29024_k.get()._field_Kind.operator jule::Ptr<_1c121bde7_customType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1c3934761:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1c393470b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c121c6de_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c3936114_Name(_1c3936774_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1c3936b5e_What(_1c3936774_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1c3936c91_Reset(_1c3936774_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1c3936dc3_Short(_1c3936774_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3936774_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c3939e81_Name(_1c393a437_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1c393a701_What(_1c393a437_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1c393a833_Reset(_1c393a437_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1c393a965_Short(_1c393a437_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1c393a437_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c393d968_Name(_1c393de1e_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1c393e1d8_What(_1c393de1e_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1c393e31a_Reset(_1c393de1e_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1c393e44c_Short(_1c393de1e_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1c393de1e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c3942494_Name(_1c394294a_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1c3942c14_What(_1c394294a_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1c3942d46_Reset(_1c394294a_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1c3942e78_Short(_1c394294a_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1c394294a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1c3945e7b_Name(_1c3946432_Flag* _self_) {
	return (*_self_)._field_name;
}



inline jule::Str _1c39466eb_What(_1c3946432_Flag* _self_) {
	return (*_self_)._field_what;
}



inline void _1c394682d_Reset(_1c3946432_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1c3946960_Short(_1c3946432_Flag* _self_) {
	return (*_self_)._field_short;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3946432_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bd8ead15_FlagSet> static__1bd8cb3cd_New(void) {
	return jule::new_ptr<_1bd8ead15_FlagSet>(_1bd8ead15_FlagSet{._field_flags=jule::Slice<jule::Trait<_233aec512_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_233aec512_CommonFlag> _1bd8d1b97_FindFlag(_1bd8ead15_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1c39520ca:;
		if (it != expr.end()) {
			jule::Trait<_233aec512_CommonFlag> _7221_flag = *it;
			{
				if ((_233aec512_CommonFlag_mptr_data[(_7221_flag).type_offset]._233aeb29c_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1c39520ca:;
			++it;
			goto _iter_begin_1c39520ca;
		}
		_iter_end_1c39520ca:;
	};
	return nullptr;
}



inline jule::Trait<_233aec512_CommonFlag> _1bd900138_FindFlagShort(_1bd8ead15_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1c395253c:;
		if (it != expr.end()) {
			jule::Trait<_233aec512_CommonFlag> _8221_flag = *it;
			{
				if ((_233aec512_CommonFlag_mptr_data[(_8221_flag).type_offset]._233b00e94_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1c395253c:;
			++it;
			goto _iter_begin_1c395253c;
		}
		_iter_end_1c395253c:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_233aec512_CommonFlag>> _1bd95250e_Flags(_1bd8ead15_FlagSet* _self_) {
	return (*_self_)._field_flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1bd94a57e_Parse(_1bd8ead15_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1bd9076d4_argParser _11617_ap = _1bd9076d4_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _233b1c389_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1bd94b30a_Reset(_1bd8ead15_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1c39558d6:;
		if (it != expr.end()) {
			jule::Trait<_233aec512_CommonFlag> _12616_f = *it;
			{
				_233aec512_CommonFlag_mptr_data[(_12616_f).type_offset]._233b159c0_Reset(_12616_f);
			}
			_iter_next_1c39558d6:;
			++it;
			goto _iter_begin_1c39558d6;
		}
		_iter_end_1c39558d6:;
	};
}



inline jule::Ptr<_1c3946432_Flag> _1c3b2b35e_addFlagCommon(_1bd8ead15_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1c3b2c937:;
			{
				goto _match_end_1c3b2c89e;
			}
		}
		_match_end_1c3b2c89e:;
	};
	if ((_1bd8d1b97_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1bd900138_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1c3946432_Flag> _14817_flag = jule::new_ptr<_1c3946432_Flag>(_1c3946432_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_233aec512_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1c394294a_Flag> _1c3b34e7d_addFlagCommon(_1bd8ead15_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1c3b36600:;
			{
				goto _match_end_1c3b36556;
			}
		}
		_match_end_1c3b36556:;
	};
	if ((_1bd8d1b97_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1bd900138_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1c394294a_Flag> _14817_flag = jule::new_ptr<_1c394294a_Flag>(_1c394294a_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_233aec512_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1c3b292b3_AddVar(_1bd8ead15_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1c3946432_Flag> _17617_flag = _1c3b2b35e_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1c3b32de3_AddVar(_1bd8ead15_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1c394294a_Flag> _17617_flag = _1c3b34e7d_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1bd8ead15_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1c0977e39_IR>,jule::Slice<_1d6435804_Log>> static__1c07dc81a_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	jule::Ptr<_1c065a589_JuleImporter> _2817_importer = static__1c01da9aa_New(_1c08d9395_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1be3621a4_Ast>> _2918_files;;
	jule::Slice<_1d6435804_Log> _2929_logs;;
	std::tie(_2918_files,_2929_logs) = _1c07a895c_ImportPackage(_2817_importer.ptr(), _2721_path,true);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1c005e312_Package> _3918_pkg;;
	std::tie(_3918_pkg,_2929_logs) = _1c01262ca_AnalyzePackage(_2918_files,jule::Trait<_1c0058b25_Importer>(_2817_importer, 0),_2732_flags);
	if ((_2929_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_2929_logs);
	};
	jule::Ptr<_1c0977e39_IR> _4417_ir = jule::new_ptr<_1c0977e39_IR>(_1c0977e39_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1c01ea448_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1c08b5bce_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	return std::make_tuple(_4417_ir,nullptr);
}



inline void _1c07e3843_appendStructs(_1c0977e39_IR* _self_, jule::Ptr<_1c005e312_Package>& _5633_p, jule::Slice<jule::Ptr<_1be387251_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c357501c:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1c35758ad:;
					if (it != expr.end()) {
						jule::Ptr<_1be387251_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1c35758ad:;
						++it;
						goto _iter_begin_1c35758ad;
					}
					_iter_end_1c35758ad:;
				};
			}
			_iter_next_1c357501c:;
			++it;
			goto _iter_begin_1c357501c;
		}
		_iter_end_1c357501c:;
	};
}



inline jule::Slice<jule::Ptr<_1be387251_Struct>> _1c08085a0_GetAllStructures(_1c0977e39_IR* _self_) {
	jule::Slice<jule::Ptr<_1be387251_Struct>> _6917_buffer = nullptr;;
	_1c07e3843_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1c357632b:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1c07e3843_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1c357632b:;
			++it;
			goto _iter_begin_1c357632b;
		}
		_iter_end_1c357632b:;
	};
	return _6917_buffer;
}



inline void _1c0818945_appendGlobals(_1c0977e39_IR* _self_, jule::Ptr<_1c005e312_Package>& _7933_p, jule::Slice<jule::Ptr<_1c0081334_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c35781a7:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1c3578a04:;
					if (it != expr.end()) {
						jule::Ptr<_1c0081334_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1c3578a04:;
						++it;
						goto _iter_begin_1c3578a04;
					}
					_iter_end_1c3578a04:;
				};
			}
			_iter_next_1c35781a7:;
			++it;
			goto _iter_begin_1c35781a7;
		}
		_iter_end_1c35781a7:;
	};
}



inline jule::Slice<jule::Ptr<_1c0081334_Var>> _1c083d2c7_GetAllGlobals(_1c0977e39_IR* _self_) {
	jule::Slice<jule::Ptr<_1c0081334_Var>> _9217_buffer = nullptr;;
	_1c0818945_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1c357a4ea:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1c0818945_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1c357a4ea:;
			++it;
			goto _iter_begin_1c357a4ea;
		}
		_iter_end_1c357a4ea:;
	};
	return _9217_buffer;
}



inline void _1c085829d_Order(_1c0977e39_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_1c08085a0_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_1c083d2c7_GetAllGlobals(&(*_self_));
	static__1c08e942c_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__1c091801c_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1c0977e39_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1be388e34_Str(_1be3b359b_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c26d9a56:;
			if (it != expr.end()) {
				jule::Ptr<_1c0107ae7_InsGeneric> &_24720_g = *it;
				{
					_24317_kind+=_1c0109720_Str(_24720_g.get()._field_Kind.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1c26d9a56:;
				++it;
				goto _iter_begin_1c26d9a56;
			}
			_iter_end_1c26d9a56:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1be38a09a_Equals(jule::Ptr<_1be3b359b_StructIns> _self_, jule::Ptr<_1c0109324_TypeKind> _25822_other) {
	jule::Ptr<_1be3b359b_StructIns> _25913_s = _1c010c888_Struct(_25822_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_Decl != _25913_s.get()._field_Decl)) {
		return false;
	};
	if ((_self_.get()._field_Generics.len() != _25913_s.get()._field_Generics.len())) {
		return false;
	};
	jule::I64 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_Generics.len()); (_27217_i)++) {
		{
			if ((!(_1c0109a2d_Equals(_self_.get()._field_Generics[_27217_i].get()._field_Kind, _25913_s.get()._field_Generics[_27217_i].get()._field_Kind)))) {
				return false;
			};
		}
	_iter_next_1c26dd285:;
	}
	_iter_end_1c26dd285:;;
	return true;
}



inline jule::Bool _1be38c3ee_Same(_1be3b359b_StructIns* _self_, jule::Ptr<_1be3b359b_StructIns> _28619_s) {
	if ((((*_self_)._field_Decl != _28619_s.get()._field_Decl) || (_28619_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c26e070a:;
		if (it != expr.end()) {
			jule::I64 _29013_i = it - expr.begin();
			jule::Ptr<_1c0107ae7_InsGeneric> &_29016_g = *it;
			{
				if ((!(_1c0109a2d_Equals(_29016_g.get()._field_Kind, _28619_s.get()._field_Generics[_29013_i].get()._field_Kind)))) {
					return false;
				};
			}
			_iter_next_1c26e070a:;
			++it;
			_29013_i++;
			goto _iter_begin_1c26e070a;
		}
		_iter_end_1c26e070a:;
	};
	return true;
}



inline jule::Ptr<_1be45e6e1_Fn> _1be38d71e_FindMethod(_1be3b359b_StructIns* _self_, jule::Str _30029_ident, jule::Bool _30041_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c26e21e0:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _30121_f = *it;
			{
				if (((_30121_f.get()._field_Statically == _30041_statically) && (_30121_f.get()._field_Ident == _30029_ident))) {
					return _30121_f;
				};
			}
			_iter_next_1c26e21e0:;
			++it;
			goto _iter_begin_1c26e21e0;
		}
		_iter_end_1c26e21e0:;
	};
	return nullptr;
}



inline jule::Ptr<_1be38e8b8_FieldIns> _1be391238_FindField(_1be3b359b_StructIns* _self_, jule::Str _31128_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c26e3466:;
		if (it != expr.end()) {
			jule::Ptr<_1be38e8b8_FieldIns> _31221_f = *it;
			{
				if ((_31221_f.get()._field_Decl.get()._field_Ident == _31128_ident)) {
					return _31221_f;
				};
			}
			_iter_next_1c26e3466:;
			++it;
			goto _iter_begin_1c26e3466;
		}
		_iter_end_1c26e3466:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1be3b359b_StructIns _Src) {
	_Stream << "StructIns{";
	_Stream << "Checked:" << _Src._field_Checked << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Operators:" << _Src._field_Operators;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c0ad59c0_ObjectDeadCode> static__1c0ad5e87_new(jule::Ptr<_1c0977e39_IR>& _3424_ir) {
	return jule::new_ptr<_1c0ad59c0_ObjectDeadCode>(_1c0ad59c0_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1c35b507e_isLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1be47159e_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_1be47159e_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c35b7108:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1c35b6d1c:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1c35b77ce:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1c35b77ce:;
			++it;
			_5213_i++;
			goto _iter_begin_1c35b77ce;
		}
		_iter_end_1c35b77ce:;
	};
	return false;
}

inline jule::Bool _1c35bad54_isLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1be462392_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1be462392_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c35bc680:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1c35bc5c5:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1c35bcc35:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1c35bcc35:;
			++it;
			_5213_i++;
			goto _iter_begin_1c35bcc35;
		}
		_iter_end_1c35bcc35:;
	};
	return false;
}

inline jule::Bool _1c35c2014_isLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1be3b359b_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1be3b359b_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c35c6524:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1c35c629e:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1c35c6601:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1c35c6601:;
			++it;
			_5213_i++;
			goto _iter_begin_1c35c6601;
		}
		_iter_end_1c35c6601:;
	};
	return false;
}

inline jule::Bool _1c35c8dea_isLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1c0081334_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_1c0081334_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c35cac65:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1c35cab44:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1c35cb66c:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;
				};
			}
			_iter_next_1c35cb66c:;
			++it;
			_5213_i++;
			goto _iter_begin_1c35cb66c;
		}
		_iter_end_1c35cb66c:;
	};
	return false;
}



inline void _1c35b5623_pushLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1be47159e_Trait> _6035_t) {
	{
		
{
			_case_begin_1c35b9319:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1c35b8eb7:;
	};
}

inline void _1c35be484_pushLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1be462392_FnIns> _6035_t) {
	{
		
{
			_case_begin_1c35c0111:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1c35bed8b:;
	};
}

inline void _1c35c2553_pushLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1be3b359b_StructIns> _6035_t) {
	{
		
{
			_case_begin_1c35c3d29:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1c35c3a3d:;
	};
}

inline void _1c35cc7d3_pushLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1c0081334_Var> _6035_t) {
	{
		
{
			_case_begin_1c35cd2b7:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1c35cd1da:;
	};
}



inline void _1c0b140d6_setReferencesAsLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1be465263_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1be4658d4_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1be465be2_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1be47159e_Trait>>()) {
					_case_begin_1c35b40e4:;
					{
						jule::Ptr<_1be47159e_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1be47159e_Trait>();;
						if (_1c35b507e_isLive(_self_, _8225_t)) {
							goto _iter_next_1c35b33ce;
						};
						_1c35b5623_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1c35b8aaa:;
							if (it != expr.end()) {
								jule::Ptr<_1be45e6e1_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1c35b8cca:;
										if (it != expr.end()) {
											jule::Ptr<_1be462392_FnIns> _8833_mins = *it;
											{
												if (_1c35bad54_isLive(_self_, _8833_mins)) {
													goto _iter_next_1c35b8cca;
												};
												_1c35be484_pushLive(_self_, _8833_mins);
												_1c0b140d6_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1c35b8cca:;
											++it;
											goto _iter_begin_1c35b8cca;
										}
										_iter_end_1c35b8cca:;
									};
								}
								_iter_next_1c35b8aaa:;
								++it;
								goto _iter_begin_1c35b8aaa;
							}
							_iter_end_1c35b8aaa:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1be462392_FnIns>>()) {
					_case_begin_1c35b415a:;
					{
						jule::Ptr<_1be462392_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1be462392_FnIns>();;
						if (_1c35bad54_isLive(_self_, _9725_f)) {
							goto _match_end_1c35b3c70;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1c35c2014_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1c35c2553_pushLive(_self_, _9725_f.get()._field_Owner);
								_1c0b140d6_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1c35be484_pushLive(_self_, _9725_f);
						_1c0b140d6_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
					_case_begin_1c35b4248:;
					{
						jule::Ptr<_1c0081334_Var> _11025_v = _7921_ref.operator jule::Ptr<_1c0081334_Var>();;
						if (_1c35c8dea_isLive(_self_, _11025_v)) {
							goto _match_end_1c35b3c70;
						};
						_1c35cc7d3_pushLive(_self_, _11025_v);
						_1c0b140d6_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1be3b359b_StructIns>>()) {
					_case_begin_1c35b42ae:;
					{
						jule::Ptr<_1be3b359b_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1be3b359b_StructIns>();;
						if (_1c35c2014_isLive(_self_, _11725_s)) {
							goto _match_end_1c35b3c70;
						};
						_1c35c2553_pushLive(_self_, _11725_s);
						_1c0b140d6_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1c35d1771:;
							if (it != expr.end()) {
								jule::Ptr<_1be45e6e1_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1c35d1e8b:;
										if (it != expr.end()) {
											jule::Ptr<_1be462392_FnIns> _12433_mins = *it;
											{
												if (_1c35bad54_isLive(_self_, _12433_mins)) {
													goto _iter_next_1c35d1e8b;
												};
												_1c35be484_pushLive(_self_, _12433_mins);
												_1c0b140d6_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1c35d1e8b:;
											++it;
											goto _iter_begin_1c35d1e8b;
										}
										_iter_end_1c35d1e8b:;
									};
								}
								_iter_next_1c35d1771:;
								++it;
								goto _iter_begin_1c35d1771;
							}
							_iter_end_1c35d1771:;
						};
					}
				}
				_match_end_1c35b3c70:;
			};
		}
	_iter_next_1c35b33ce:;
	}
	_iter_end_1c35b33ce:;;
}



inline void _1c0b1435b_inits(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1c005e312_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c35b3797:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1c35d4763:;
					if (it != expr.end()) {
						jule::Ptr<_1be45e6e1_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1be462392_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1c0b140d6_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1c35d4763:;
						++it;
						goto _iter_begin_1c35d4763;
					}
					_iter_end_1c35d4763:;
				};
			}
			_iter_next_1c35b3797:;
			++it;
			goto _iter_begin_1c35b3797;
		}
		_iter_end_1c35b3797:;
	};
}



inline void _1c0b145d1_collectLivePackage(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1c005e312_Package>& _14843_pkg) {
	_1c0b1435b_inits(_self_, _14843_pkg);
	if (_231e81a74_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1c35d6be9:;
			if (it != expr.end()) {
				jule::Ptr<_1c00c8524_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1c35d758a:;
						if (it != expr.end()) {
							jule::Ptr<_1be45e6e1_Fn> _15529_f = *it;
							{
								if (_1c0b165e4_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_1be462392_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1c0b140d6_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1c35d758a:;
							++it;
							goto _iter_begin_1c35d758a;
						}
						_iter_end_1c35d758a:;
					};
				}
				_iter_next_1c35d6be9:;
				++it;
				goto _iter_begin_1c35d6be9;
			}
			_iter_end_1c35d6be9:;
		};
	};
}



inline void _1c0b147ac_collectLive(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c35d7ee7:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1c0b145d1_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1c35d7ee7:;
			++it;
			goto _iter_begin_1c35d7ee7;
		}
		_iter_end_1c35d7ee7:;
	};
	_1c0b145d1_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_1be45e6e1_Fn> _17517_main = _1c0060ab6_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1be462392_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1c0b140d6_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _1c0b14a32_removeDeadGlobals(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c0081334_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_1c0081334_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1c35c8dea_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1c35dc3e7;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1c35dc3e7:;
	}
	_iter_end_1c35dc3e7:;;
}



inline void _1c0b14ca7_removeDeadFns(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1be45e6e1_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_1be45e6e1_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1be462392_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1c35bad54_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1c35e0a27;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1c35e0a27:;
			}
			_iter_end_1c35e0a27:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1c35de2ea;
			};
			(_19417_i)++;
		}
	_iter_next_1c35de2ea:;
	}
	_iter_end_1c35de2ea:;;
}



inline void _1c0b1502c_removeDeadStructs(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1be387251_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_1be387251_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1be3b359b_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1c0b14ca7_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1c35c2014_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1c35e4c4b;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1c35e4c4b:;
			}
			_iter_end_1c35e4c4b:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1c35e3a91;
			};
			(_21517_i)++;
		}
	_iter_next_1c35e3a91:;
	}
	_iter_end_1c35e3a91:;;
}



inline void _1c0b152a2_removeDeadTraits(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1be47159e_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_1be47159e_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1c35b507e_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1c35e86bc;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1be387251_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1c35e935a;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1c35e935a:;
			}
			_iter_end_1c35e935a:;;
			(_23717_i)++;
		}
	_iter_next_1c35e86bc:;
	}
	_iter_end_1c35e86bc:;;
}



inline void _1c0b15527_removeDeadsFile(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1c00c8524_SymbolTable>& _25740_file) {
	_1c0b14ca7_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_1c0b1502c_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_1c0b152a2_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_1c0b14a32_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _1c0b1579c_removeDeadsPackage(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_, jule::Ptr<_1c005e312_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c35eddba:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _26521_file = *it;
			{
				_1c0b15527_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1c35eddba:;
			++it;
			goto _iter_begin_1c35eddba;
		}
		_iter_end_1c35eddba:;
	};
}



inline void _1c0b15978_removeDeads(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c35eecde:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1c0b1579c_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1c35eecde:;
			++it;
			goto _iter_begin_1c35eecde;
		}
		_iter_end_1c35eecde:;
	};
	_1c0b1579c_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _1c0b15b54_elimanate(jule::Ptr<_1c0ad59c0_ObjectDeadCode> _self_) {
	_1c0b147ac_collectLive(_self_);
	_1c0b15978_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1c0ad59c0_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c12163a8_ObjectCoder> static__1c11e93d0_New(jule::Ptr<_1c0977e39_IR>& _7224_ir, _1c1215ece_SerializationInfo _7233_info) {
	jule::Ptr<_1c12163a8_ObjectCoder> _7317_oc = jule::new_ptr<_1c12163a8_ObjectCoder>(_1c12163a8_ObjectCoder{._field_ir=_7224_ir, ._field_info=_7233_info, });;
	_7317_oc.get()._field_ec=static__1c11934de_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1c118abbd_new(_7317_oc);
	return _7317_oc;
}



inline void _1c11e9710_write(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_Obj+=_8225_s;
}



inline void _1c11e9ea2_addIndent(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	;
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1c11eae92_doneIndent(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1c11eb6e0_indent(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1c11daa64_findTypeOffset(_1c12163a8_ObjectCoder* _self_, jule::Ptr<_1be47159e_Trait> _10229_t, jule::Ptr<_1c0109324_TypeKind> _10244_k) {
	if ((_10229_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1be3b359b_StructIns> _10617_s = nullptr;;
	if ((_1c010b69a_Sptr(_10244_k.ptr()) != nullptr)) {
		_10244_k=_1c010b69a_Sptr(_10244_k.ptr()).get()._field_Elem;
	};
	if ((_1c010c888_Struct(_10244_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1c010c888_Struct(_10244_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1c3a0e330:;
		if (it != expr.end()) {
			jule::Ptr<_1c12161bb_traitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10229_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1c3a0e330:;
			++it;
			goto _iter_begin_1c3a0e330;
		}
		_iter_end_1c3a0e330:;
	};
	return -1LL;
}



inline void _1c11ecacb_locInfo(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1d675d511_Token>& _12328_t) {
	jule::Str &_12414_loc = _12328_t.get()._field_File.get()._field_Path;;
	if (_231e8259c_Production) {
		{
			
			if (_1d63616b9_HasPrefix(_12414_loc,_231edd130_PathStdlib)) {
				_case_begin_1c3a11783:;
				{
					_1c11e9710_write(_self_, _1c119e61b_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1d63a9349_Dir(_231edd130_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1d63616b9_HasPrefix(_12414_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1c3a11453:;
				{
					_1c11e9710_write(_self_, _1c119e61b_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1d63a9349_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1c3a113dc:;
				{
					_1c11e9710_write(_self_, _1c119e61b_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1c3a11310:;
		};
	} else {
		_1c11e9710_write(_self_, _1c119e61b_cstrBytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1c11e9710_write(_self_, jule::Str(":", 1));
	_1c11e9710_write(_self_, _1c0046629_Itoa(_12328_t.get()._field_Row));
	_1c11e9710_write(_self_, jule::Str(":", 1));
	_1c11e9710_write(_self_, _1c0046629_Itoa(_12328_t.get()._field_Column));
}



inline void _1c11cc209_head(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c1210baa_Time _15013_time = static__1c121124e_Now();;
	_1c1210517_AbsTime _15113_abs = _1c121288d_Abs(&_15013_time);;
	_1c11e9710_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1c11e9710_write(_self_, jule::Str("// JuleC version: ", 18));
	_1c11e9710_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1c11e9710_write(_self_, jule::Str("\n", 1));
	_1c11e9710_write(_self_, jule::Str("// Date: ", 9));
	_1c11e9710_write(_self_, _1c00463b5_FmtUint(_15113_abs._field_Day,10LL));
	_1c11e9710_write(_self_, jule::Str("/", 1));
	_1c11e9710_write(_self_, _1c00463b5_FmtUint(_15113_abs._field_Month,10LL));
	_1c11e9710_write(_self_, jule::Str("/", 1));
	_1c11e9710_write(_self_, _1c00463b5_FmtUint(_15113_abs._field_Year,10LL));
	_1c11e9710_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1c11e9710_write(_self_, _self_.get()._field_info._field_Compiler);
	_1c11e9710_write(_self_, jule::Str(" ", 1));
	_1c11e9710_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
	if (_231e8259c_Production) {
		_1c11e9710_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_231e81d71_RC))) {
		_1c11e9710_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_231e8228e_Safety))) {
		_1c11e9710_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1c11e9710_write(_self_, jule::Str("\n\n#include \"", 12));
	_1c11e9710_write(_self_, _231eecdba_PathApi);
	_1c11e9710_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1c11ea700_links(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c3a1c6c3:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_CppLinked))) {
						_case_begin_1c3a1e186:;
						{
							goto _iter_next_1c3a1c6c3;
						}
					}
					else if (_1d6428bb0_IsStdHeaderPath(_18316_used.get()._field_Path)) {
						_case_begin_1c3a1d592:;
						{
							_1c11e9710_write(_self_, jule::Str("#include ", 9));
							_1c11e9710_write(_self_, _18316_used.get()._field_Path);
							_1c11e9710_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1c3a1d1eb:;
						{
							_1c11e9710_write(_self_, jule::Str("#include \"", 10));
							_1c11e9710_write(_self_, _18316_used.get()._field_Path);
							_1c11e9710_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1c3a1d11e:;
				};
			}
			_iter_next_1c3a1c6c3:;
			++it;
			goto _iter_begin_1c3a1c6c3;
		}
		_iter_end_1c3a1c6c3:;
	};
}



inline void _1c11d0a37_prepareStructures(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c3a1cddd:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_Token != nullptr)) {
					_1c121ae3a_prepareStructure(_20021_s);
				};
			}
			_iter_next_1c3a1cddd:;
			++it;
			goto _iter_begin_1c3a1cddd;
		}
		_iter_end_1c3a1cddd:;
	};
}



inline void _1c11d7874_iterPackages(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1c005e312_Package>&)> _20732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c3a20d8b:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_CppLinked))) {
					_20732_f(_20821_used.get()._field_Package);
				};
			}
			_iter_next_1c3a20d8b:;
			++it;
			goto _iter_begin_1c3a20d8b;
		}
		_iter_end_1c3a20d8b:;
	};
	_20732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1c11d7e07_buildTraitMap(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c11d7874_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c005e312_Package>&)>([=](jule::Ptr<_1c005e312_Package>& _21735_pkg) mutable -> void {
		_1c121abd7_iterFiles(_21735_pkg,jule::Fn<void(jule::Ptr<_1c00c8524_SymbolTable>&)>([=](jule::Ptr<_1c00c8524_SymbolTable>& _21836_file) mutable -> void {
			{
				auto &expr = _21836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1c3a24c3b:;
				if (it != expr.end()) {
					jule::Ptr<_1be47159e_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1c12161bb_traitHash>(_1c12161bb_traitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1c3a24c3b;
						};
						jule::I64 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1c3a26028:;
							if (it != expr.end()) {
								jule::Ptr<_1be387251_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1c3a257ec:;
										if (it != expr.end()) {
											jule::Ptr<_1be3b359b_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1c12161bb_traitHash>(_1c12161bb_traitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1c3a257ec:;
											++it;
											goto _iter_begin_1c3a257ec;
										}
										_iter_end_1c3a257ec:;
									};
								}
								_iter_next_1c3a26028:;
								++it;
								goto _iter_begin_1c3a26028;
							}
							_iter_end_1c3a26028:;
						};
					}
					_iter_next_1c3a24c3b:;
					++it;
					goto _iter_begin_1c3a24c3b;
				}
				_iter_end_1c3a24c3b:;
			};
		}));
	}));
}



inline void _1c11d8cc6_traitDecls(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c11d7874_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c005e312_Package>&)>([=](jule::Ptr<_1c005e312_Package>& _24835_pkg) mutable -> void {
		_1c121abd7_iterFiles(_24835_pkg,jule::Fn<void(jule::Ptr<_1c00c8524_SymbolTable>&)>([=](jule::Ptr<_1c00c8524_SymbolTable>& _24936_file) mutable -> void {
			{
				auto &expr = _24936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1c3a29823:;
				if (it != expr.end()) {
					jule::Ptr<_1be47159e_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1c11eb6e0_indent(_self_);
						_1c11e9710_write(_self_, jule::Str("struct ", 7));
						_1c11e9710_write(_self_, static__1c11a5c4e_traitDecl(_25029_t));
						_1c11e9710_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1c3a29823:;
					++it;
					goto _iter_begin_1c3a29823;
				}
				_iter_end_1c3a29823:;
			};
		}));
	}));
}



inline void _1c11d948b_structurePlainDecl(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be387251_Struct>& _26343_s) {
	{
		auto &expr = _26343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c3a29416:;
		if (it != expr.end()) {
			jule::Ptr<_1be3b359b_StructIns> _26421_ins = *it;
			{
				_1c11e9710_write(_self_, jule::Str("struct ", 7));
				_1c11e9710_write(_self_, static__1c11a6535_structureIns(_26421_ins));
				_1c11e9710_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1c3a29416:;
			++it;
			goto _iter_begin_1c3a29416;
		}
		_iter_end_1c3a29416:;
	};
}



inline void _1c11d9b51_structurePlainDecls(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c3a2baab:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_Token != nullptr)) {
					_1c11d948b_structurePlainDecl(_self_, _27221_s);
				};
			}
			_iter_next_1c3a2baab:;
			++it;
			goto _iter_begin_1c3a2baab;
		}
		_iter_end_1c3a2baab:;
	};
}



inline void _1c11da316_fieldDecl(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be38e8b8_FieldIns>& _27934_f) {
	_1c11e9710_write(_self_, static__1c1221c98_kind(_27934_f.get()._field_Kind));
	_1c11e9710_write(_self_, jule::Str(" ", 1));
	_1c11e9710_write(_self_, static__1c11a67cc_field(_27934_f.get()._field_Decl));
	_1c11e9710_write(_self_, jule::Str(" = ", 3));
	if ((_27934_f.get()._field_Default == nullptr)) {
		_1c119dc36_initExpr(_self_.get()._field_ec, _27934_f.get()._field_Kind);
	} else {
		_1c119d73b_expr(_self_.get()._field_ec, _27934_f.get()._field_Default.get()._field_Model);
	};
	_1c11e9710_write(_self_, jule::Str(";", 1));
}



inline void _1c11d1e01_structureDestructor(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be3b359b_StructIns>& _29444_s) {
	;
	jule::Ptr<_1be45e6e1_Fn> _29713_disposeMethod = _1be38d71e_FindMethod(_29444_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29817_disposed = static__1c00824cd_Dispose(_29713_disposeMethod);;
	if ((!(_29817_disposed))) {
		return;;
	};
	_1c11e9710_write(_self_, jule::Str("~", 1));
	_1c11e9710_write(_self_, static__1c11a6535_structureIns(_29444_s));
	_1c11e9710_write(_self_, jule::Str("(void) { ", 9));
	_1c11e9710_write(_self_, static__1c11a5710_func(_29713_disposeMethod));
	_1c11e9710_write(_self_, jule::Str("(this); }", 9));
}



inline void _1c121694c_structureDeriveDefsDecls(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be3b359b_StructIns>& _31045_s) {
	if (_1be3782a8_IsDerives(_31045_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1c11eb6e0_indent(_self_);
		_1c11e9710_write(_self_, static__1c11a1299_cloneFuncDecl(_31045_s.get()._field_Decl));
		_1c11e9710_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1c1216a7e_structureOperatorEq(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Str& _31840_ident, jule::Ptr<_1be3b359b_StructIns>& _31857_s) {
	if ((_31857_s.get()._field_Operators._field_Eq != nullptr)) {
		_1c1216ce3_structureOperator(_self_, _31840_ident,_31857_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1c11eb6e0_indent(_self_);
	if (_1bca23dd9_Inline) {
		_1c11e9710_write(_self_, jule::Str("inline ", 7));
	};
	_1c11e9710_write(_self_, jule::Str("bool operator==(", 16));
	_1c11e9710_write(_self_, _31840_ident);
	_1c11e9710_write(_self_, jule::Str(" _other) {", 10));
	if ((_31857_s.get()._field_Fields.len() > 0LL)) {
		_1c11e9ea2_addIndent(_self_);
		_1c11e9710_write(_self_, jule::Str("\n", 1));
		_1c11eb6e0_indent(_self_);
		_1c11e9710_write(_self_, jule::Str("return ", 7));
		_1c11e9ea2_addIndent(_self_);
		jule::Bool _33821_writed = false;;
		{
			auto &expr = _31857_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1c3a3a03c:;
			if (it != expr.end()) {
				jule::Ptr<_1be38e8b8_FieldIns> _33925_f = *it;
				{
					jule::Ptr<_1be3b359b_StructIns> _34121_strct = _1c010c888_Struct(_33925_f.get()._field_Kind.ptr());;
					if ((((_34121_strct != nullptr) && (_34121_strct.get()._field_Decl != nullptr)) && _34121_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1c3a3a03c;
					};
					if (_33821_writed) {
						_1c11e9710_write(_self_, jule::Str(" &&", 3));
					};
					_33821_writed=true;
					_1c11e9710_write(_self_, jule::Str("\n", 1));
					_1c11eb6e0_indent(_self_);
					_1c11e9710_write(_self_, jule::Str("this->", 6));
					jule::Str _35321_fIdent = static__1c11a67cc_field(_33925_f.get()._field_Decl);;
					_1c11e9710_write(_self_, _35321_fIdent);
					_1c11e9710_write(_self_, jule::Str(" == _other.", 11));
					_1c11e9710_write(_self_, _35321_fIdent);
				}
				_iter_next_1c3a3a03c:;
				++it;
				goto _iter_begin_1c3a3a03c;
			}
			_iter_end_1c3a3a03c:;
		};
		_1c11eae92_doneIndent(_self_);
		if ((!(_33821_writed))) {
			_1c11e9710_write(_self_, jule::Str("true", 4));
		};
		_1c11e9710_write(_self_, jule::Str(";\n", 2));
		_1c11eae92_doneIndent(_self_);
		_1c11eb6e0_indent(_self_);
		_1c11e9710_write(_self_, jule::Str("}", 1));
	} else {
		_1c11e9710_write(_self_, jule::Str(" return true; }", 15));
	};
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
}



inline void _1c1216bb1_structureOperatorNotEq(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Str& _37243_ident, jule::Ptr<_1be3b359b_StructIns>& _37260_s) {
	_1c11eb6e0_indent(_self_);
	if (_1bca23dd9_Inline) {
		_1c11e9710_write(_self_, jule::Str("inline ", 7));
	};
	_1c11e9710_write(_self_, jule::Str("bool operator!=(", 16));
	_1c11e9710_write(_self_, _37243_ident);
	_1c11e9710_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1c1216ce3_structureOperator(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Str& _38338_ident, jule::Ptr<_1be462392_FnIns>& _38355_f, jule::Str _38366_op) {
	if ((_38355_f == nullptr)) {
		return;;
	};
	jule::Bool _38813_unary = (_38355_f.get()._field_Params.len() == 1LL);;
	jule::Bool _38913_assignment = _1be45eb53_IsVoid(_38355_f.get()._field_Decl.ptr());;
	_1c11eb6e0_indent(_self_);
	if (_1bca23dd9_Inline) {
		_1c11e9710_write(_self_, jule::Str("inline ", 7));
	};
	if (_38913_assignment) {
		_1c11e9710_write(_self_, _38338_ident);
		_1c11e9710_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1c010b436_Prim(_38355_f.get()._field_Result.ptr()) == nullptr)) {
			_1c11e9710_write(_self_, _38338_ident);
		} else {
			_1c11e9710_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1c11e9710_write(_self_, jule::Str(" operator", 9));
	_1c11e9710_write(_self_, _38366_op);
	_1c11e9710_write(_self_, jule::Str("(", 1));
	if ((!(_38813_unary))) {
		jule::Ptr<_1be4614c3_ParamIns> _41121_p = _38355_f.get()._field_Params[1LL];;
		_1c11e9710_write(_self_, static__1c1220e73_paramIns(_41121_p));
		_1c11e9710_write(_self_, jule::Str(" _other", 7));
	};
	_1c11e9710_write(_self_, jule::Str(") { ", 4));
	if ((!(_38913_assignment))) {
		_1c11e9710_write(_self_, jule::Str("return ", 7));
	};
	_1c11e9710_write(_self_, static__1c11a59a7_funcIns(_38355_f));
	if ((!(_38813_unary))) {
		_1c11e9710_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38913_assignment) {
			_1c11e9710_write(_self_, jule::Str("return *this; ", 14));
		};
		_1c11e9710_write(_self_, jule::Str("}", 1));
	} else {
		_1c11e9710_write(_self_, jule::Str("(this); }", 9));
	};
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
}



inline void _1c1216e25_structureOperators(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be3b359b_StructIns>& _43243_s) {
	jule::Str _43313_ident = static__1c11a6535_structureIns(_43243_s);;
	_1c1216a7e_structureOperatorEq(_self_, _43313_ident,_43243_s);
	_1c1216bb1_structureOperatorNotEq(_self_, _43313_ident,_43243_s);
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1c1216ce3_structureOperator(_self_, _43313_ident,_43243_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1c1217057_structureInsDecl(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be3b359b_StructIns>& _47141_s) {
	if ((_47141_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _47141_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1c3a57e28:;
			if (it != expr.end()) {
				jule::Ptr<_1be45e6e1_Fn> _47325_m = *it;
				{
					_1c1217662_funcDecl(_self_, _47325_m,false);
				}
				_iter_next_1c3a57e28:;
				++it;
				goto _iter_begin_1c3a57e28;
			}
			_iter_end_1c3a57e28:;
		};
	};
	_1c11e9710_write(_self_, jule::Str("struct ", 7));
	jule::Str _47913_outIdent = static__1c11a6535_structureIns(_47141_s);;
	_1c11e9710_write(_self_, _47913_outIdent);
	_1c11e9710_write(_self_, jule::Str(" {\n", 3));
	_1c11e9ea2_addIndent(_self_);
	{
		auto &expr = _47141_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c3a59e2a:;
		if (it != expr.end()) {
			jule::Ptr<_1be38e8b8_FieldIns> _48521_f = *it;
			{
				_1c11eb6e0_indent(_self_);
				_1c11da316_fieldDecl(_self_, _48521_f);
				_1c11e9710_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1c3a59e2a:;
			++it;
			goto _iter_begin_1c3a59e2a;
		}
		_iter_end_1c3a59e2a:;
	};
	_1c11eb6e0_indent(_self_);
	_1c11d1e01_structureDestructor(_self_, _47141_s);
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
	_1c11eb6e0_indent(_self_);
	_1c11e9710_write(_self_, _47913_outIdent);
	_1c11e9710_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1c121694c_structureDeriveDefsDecls(_self_, _47141_s);
	_1c1216e25_structureOperators(_self_, _47141_s);
	_1c11e9710_write(_self_, jule::Str("\n", 1));
	_1c11eae92_doneIndent(_self_);
	_1c11eb6e0_indent(_self_);
	_1c11e9710_write(_self_, jule::Str("};", 2));
}



inline void _1c1217189_structureDecl(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be387251_Struct>& _51038_s) {
	{
		auto &expr = _51038_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c3a5e13d:;
		if (it != expr.end()) {
			jule::Ptr<_1be3b359b_StructIns> _51121_ins = *it;
			{
				_1c1217057_structureInsDecl(_self_, _51121_ins);
			}
			_iter_next_1c3a5e13d:;
			++it;
			goto _iter_begin_1c3a5e13d;
		}
		_iter_end_1c3a5e13d:;
	};
}



inline void _1c12172bb_structureDecls(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c3a60062:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> _51721_s = *it;
			{
				if ((_51721_s.get()._field_Token != nullptr)) {
					_1c1217189_structureDecl(_self_, _51721_s);
					_1c11e9710_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1c3a60062:;
			++it;
			goto _iter_begin_1c3a60062;
		}
		_iter_end_1c3a60062:;
	};
}



inline void _1c12173ed_paramsDecls(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>& _52536_params) {
	if ((_52536_params.len() == 0LL)) {
		_1c11e9710_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1c11e9710_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52536_params;
		auto it = expr.begin();
		_iter_begin_1c3a62130:;
		if (it != expr.end()) {
			jule::I64 _53214_i = it - expr.begin();
			jule::Ptr<_1be4614c3_ParamIns> _53221_p = *it;
			{
				_1c11e9710_write(_self_, static__1c1220e73_paramIns(_53221_p));
				if (((_52536_params.len() - _53214_i) > 1LL)) {
					_1c11e9710_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1c3a62130:;
			++it;
			_53214_i++;
			goto _iter_begin_1c3a62130;
		}
		_iter_end_1c3a62130:;
	};
	_1c11e9710_write(_self_, jule::Str(")", 1));
}



inline void _1c1217530_funcHead(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be462392_FnIns>& _54233_f, jule::Bool _54244_ptr) {
	if ((((!(_54244_ptr)) && _1bca23dd9_Inline) && (!(_1be46012b_IsEntryPoint(_54233_f.get()._field_Decl.ptr()))))) {
		_1c11e9710_write(_self_, jule::Str("inline ", 7));
	};
	_1c11e9710_write(_self_, static__1c12214b2_funcInsResult(_54233_f));
	if (_54244_ptr) {
		_1c11e9710_write(_self_, jule::Str("(*", 2));
		_1c11e9710_write(_self_, static__1c11a59a7_funcIns(_54233_f));
		_1c11e9710_write(_self_, jule::Str(")", 1));
	} else {
		_1c11e9710_write(_self_, jule::Str(" ", 1));
		_1c11e9710_write(_self_, static__1c11a59a7_funcIns(_54233_f));
	};
}



inline void _1c1217662_funcDecl(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be45e6e1_Fn>& _55733_f, jule::Bool _55741_ptr) {
	{
		auto &expr = _55733_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c3a67597:;
		if (it != expr.end()) {
			jule::Ptr<_1be462392_FnIns> _55821_c = *it;
			{
				_1c11eb6e0_indent(_self_);
				_1c1217530_funcHead(_self_, _55821_c,_55741_ptr);
				_1c12173ed_paramsDecls(_self_, _55821_c.get()._field_Params);
				_1c11e9710_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1c3a67597:;
			++it;
			goto _iter_begin_1c3a67597;
		}
		_iter_end_1c3a67597:;
	};
}



inline void _1c1217794_funcDecls(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c11d7874_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c005e312_Package>&)>([=](jule::Ptr<_1c005e312_Package>& _56735_pkg) mutable -> void {
		_1c121abd7_iterFiles(_56735_pkg,jule::Fn<void(jule::Ptr<_1c00c8524_SymbolTable>&)>([=](jule::Ptr<_1c00c8524_SymbolTable>& _56836_file) mutable -> void {
			{
				auto &expr = _56836_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1c38a7838:;
				if (it != expr.end()) {
					jule::Ptr<_1be45e6e1_Fn> _56929_f = *it;
					{
						if (((!(_56929_f.get()._field_CppLinked)) && (_56929_f.get()._field_Token != nullptr))) {
							_1c1217662_funcDecl(_self_, _56929_f,false);
						};
					}
					_iter_next_1c38a7838:;
					++it;
					goto _iter_begin_1c38a7838;
				}
				_iter_end_1c38a7838:;
			};
		}));
	}));
}



inline void _1c12178c6_traitDataTypes(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c11d7874_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c005e312_Package>&)>([=](jule::Ptr<_1c005e312_Package>& _57935_pkg) mutable -> void {
		_1c121abd7_iterFiles(_57935_pkg,jule::Fn<void(jule::Ptr<_1c00c8524_SymbolTable>&)>([=](jule::Ptr<_1c00c8524_SymbolTable>& _58036_file) mutable -> void {
			{
				auto &expr = _58036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1c38aa61b:;
				if (it != expr.end()) {
					jule::Ptr<_1be47159e_Trait> _58129_t = *it;
					{
						if ((_58129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1c11e9710_write(_self_, jule::Str("struct ", 7));
						_1c11e9710_write(_self_, static__1c11a5c4e_traitDecl(_58129_t));
						_1c11e9710_write(_self_, jule::Str("MptrData", 8));
						_1c11e9710_write(_self_, jule::Str(" {\n", 3));
						_1c11e9ea2_addIndent(_self_);
						{
							auto &expr = _58129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1c38ac3cb:;
							if (it != expr.end()) {
								jule::Ptr<_1be45e6e1_Fn> _59033_m = *it;
								{
									jule::Ptr<_1be462392_FnIns> _59133_ins = _59033_m.get()._field_Instances[0LL];;
									jule::Ptr<_1be4614c3_ParamIns> _59233_p = _59133_ins.get()._field_Params[0LL];;
									_59233_p.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_58129_t, 2)});
									{
										auto expr = _59133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1c38ae862:;
										if (it != expr.end()) {
											jule::I64 _59630_i = it - expr.begin();
											jule::Ptr<_1be4614c3_ParamIns> _59637_ip = *it;
											{
												if (_1d676104c_IsAnonIdent(_59637_ip.get()._field_Decl.get()._field_Ident)) {
													_59637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1c0046629_Itoa(_59630_i));
												};
											}
											_iter_next_1c38ae862:;
											++it;
											_59630_i++;
											goto _iter_begin_1c38ae862;
										}
										_iter_end_1c38ae862:;
									};
									if ((!(_231e8259c_Production))) {
										_59133_ins.get()._field_Params = jule::alloc_for_append(_59133_ins.get()._field_Params,1);_59133_ins.get()._field_Params.__push(jule::new_ptr<_1be4614c3_ParamIns>(_1be4614c3_ParamIns{._field_Decl=jule::new_ptr<_1be45cda4_Param>(_1be45cda4_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c121bde7_customType>(_1c121bde7_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1c1217662_funcDecl(_self_, _59033_m,true);
								}
								_iter_next_1c38ac3cb:;
								++it;
								goto _iter_begin_1c38ac3cb;
							}
							_iter_end_1c38ac3cb:;
						};
						_1c11eae92_doneIndent(_self_);
						_1c11eb6e0_indent(_self_);
						_1c11e9710_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1c38aa61b:;
					++it;
					goto _iter_begin_1c38aa61b;
				}
				_iter_end_1c38aa61b:;
			};
		}));
	}));
}



inline void _1c1217a08_paramIns(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be4614c3_ParamIns>& _62333_p) {
	_1c11e9710_write(_self_, static__1c1220e73_paramIns(_62333_p));
	_1c11e9710_write(_self_, jule::Str(" ", 1));
	_1c11e9710_write(_self_, static__1c11a5ee6_param(_62333_p.get()._field_Decl));
}



inline void _1c1217be5_paramsIns(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>& _62934_params) {
	if ((_62934_params.len() == 0LL)) {
		_1c11e9710_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1c11e9710_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62934_params;
		auto it = expr.begin();
		_iter_begin_1c38b4092:;
		if (it != expr.end()) {
			jule::I64 _63514_i = it - expr.begin();
			jule::Ptr<_1be4614c3_ParamIns> _63521_p = *it;
			{
				_1c1217a08_paramIns(_self_, _63521_p);
				if (((_62934_params.len() - _63514_i) > 1LL)) {
					_1c11e9710_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1c38b4092:;
			++it;
			_63514_i++;
			goto _iter_begin_1c38b4092;
		}
		_iter_end_1c38b4092:;
	};
	_1c11e9710_write(_self_, jule::Str(")", 1));
}



inline void _1c1218014_varInitExpr(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1c0081334_Var>& _64436_v, jule::Fn<void(void)> _64445_init) {
	if (_64436_v.get()._field_Statically) {
		_1c11e9710_write(_self_, jule::Str("static ", 7));
	};
	_1c11e9710_write(_self_, static__1c1221c98_kind(_64436_v.get()._field_Kind.get()._field_Kind));
	_1c11e9710_write(_self_, jule::Str(" ", 1));
	if (_64436_v.get()._field_Reference) {
		_1c11e9710_write(_self_, jule::Str("&", 1));
	};
	_1c11e9710_write(_self_, static__1c11a6a74_var(_64436_v));
	if ((_64445_init != nullptr)) {
		_1c11e9710_write(_self_, jule::Str(" = ", 3));
		_64445_init();
	};
	_1c11e9710_write(_self_, jule::Str(";", 1));
}



inline void _1c1218289_var(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1c0081334_Var> _66227_v) {
	if (_1d6760ca5_IsIgnoreIdent(_66227_v.get()._field_Ident)) {
		return;;
	};
	if (((_66227_v.get()._field_Value != nullptr) && (_66227_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_66227_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1c1218014_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1c119d9b1_val(_self_.get()._field_ec, _66227_v.get()._field_Value);
			}));
			return;;
		};
		_1c1218014_varInitExpr(_self_, _66227_v,nullptr);
		return;;
	};
	_1c1218014_varInitExpr(_self_, _66227_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1c119dc36_initExpr(_self_.get()._field_ec, _66227_v.get()._field_Kind.get()._field_Kind);
	}));
}



inline void _1c121850e_func(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be45e6e1_Fn>& _67729_f) {
	{
		auto &expr = _67729_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c38bd024:;
		if (it != expr.end()) {
			jule::Ptr<_1be462392_FnIns> _67821_ins = *it;
			{
				_1c1217530_funcHead(_self_, _67821_ins,false);
				_1c1217be5_paramsIns(_self_, _67821_ins.get()._field_Params);
				_1c11e9710_write(_self_, jule::Str(" ", 1));
				_1c11907a5_funcScope(_self_.get()._field_sc, _67821_ins);
				if ((_67821_ins.get()._field_Scope != nullptr)) {
					_1c11e9710_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1c38bd024:;
			++it;
			goto _iter_begin_1c38bd024;
		}
		_iter_end_1c38bd024:;
	};
}



inline void _1c12186da_traitWrappers(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1c38bd761:;
		if (it != expr.end()) {
			jule::Ptr<_1c12161bb_traitHash> _69021_hash = *it;
			{
				{
					auto &expr = _69021_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c38c0ab5:;
					if (it != expr.end()) {
						jule::Ptr<_1be45e6e1_Fn> _69125_m = *it;
						{
							jule::Str _69221_ident = _69125_m.get()._field_Ident;;
							_69125_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_69125_m.get()._field_Ident=((_69221_ident + jule::Str("_", 1)) + _1c0046629_Itoa(_69021_hash.get()._field_i));
							_1c121850e_func(_self_, _69125_m);
							_69125_m.get()._field_Ident=_69221_ident;
							if ((_69021_hash.get()._field_s == nullptr)) {
								if (_231e8259c_Production) {
									_1c11e9710_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1c11e9710_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1c38c0ab5;
							};
							jule::Bool _70821_ptr = (!(_1be45d745_IsRef(_69125_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1be45e6e1_Fn> _71025_sm = _1be38d71e_FindMethod(_69021_hash.get()._field_s.ptr(), _69125_m.get()._field_Ident,false);;
							if (((_71025_sm == nullptr) || (_71025_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1c38c0ab5;
							};
							_1c11e9ea2_addIndent(_self_);
							_1c11e9710_write(_self_, jule::Str("{\n", 2));
							_1c11eb6e0_indent(_self_);
							if ((!(_1be45eb53_IsVoid(_71025_sm.ptr())))) {
								_1c11e9710_write(_self_, jule::Str("return ", 7));
							};
							_1c11e9710_write(_self_, static__1c11a5710_func(_71025_sm));
							_1c11e9710_write(_self_, jule::Str("(", 1));
							if (_70821_ptr) {
								_1c11e9710_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1c11e9710_write(_self_, static__1c122068c_structureIns(_69021_hash.get()._field_s));
								_1c11e9710_write(_self_, jule::Str(">(", 2));
								if ((!(_231e8259c_Production))) {
									_1c11e9710_write(_self_, jule::Str("_00___file", 10));
								};
								_1c11e9710_write(_self_, jule::Str(")", 1));
							} else {
								_1c11e9710_write(_self_, jule::Str("_self_.data.as<", 15));
								_1c11e9710_write(_self_, static__1c12203e5_structure(_71025_sm.get()._field_Owner));
								_1c11e9710_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69125_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1c38c9e10:;
								if (it != expr.end()) {
									jule::Ptr<_1be45cda4_Param> _73624_mp = *it;
									{
										_1c11e9710_write(_self_, jule::Str(", ", 2));
										_1c11e9710_write(_self_, static__1c11a5ee6_param(_73624_mp));
									}
									_iter_next_1c38c9e10:;
									++it;
									goto _iter_begin_1c38c9e10;
								}
								_iter_end_1c38c9e10:;
							};
							_1c11e9710_write(_self_, jule::Str(");\n}\n", 5));
							_1c11eae92_doneIndent(_self_);
						}
						_iter_next_1c38c0ab5:;
						++it;
						goto _iter_begin_1c38c0ab5;
					}
					_iter_end_1c38c0ab5:;
				};
			}
			_iter_next_1c38bd761:;
			++it;
			goto _iter_begin_1c38bd761;
		}
		_iter_end_1c38bd761:;
	};
}



inline void _1c12188b6_traitDatas(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	jule::Ptr<_1be47159e_Trait> _74717_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1c38cb6d6:;
		if (it != expr.end()) {
			jule::Ptr<_1c12161bb_traitHash> _74821_hash = *it;
			{
				jule::Str _74917_ident = static__1c11a5c4e_traitDecl(_74821_hash.get()._field_t);;
				if ((_74821_hash.get()._field_t != _74717_old)) {
					if ((_74717_old != nullptr)) {
						_1c11eae92_doneIndent(_self_);
						_1c11eb6e0_indent(_self_);
						_1c11e9710_write(_self_, jule::Str("};\n", 3));
					};
					_1c11e9710_write(_self_, jule::Str("static ", 7));
					_1c11e9710_write(_self_, _74917_ident);
					_1c11e9710_write(_self_, jule::Str("MptrData ", 9));
					_1c11e9710_write(_self_, _74917_ident);
					_1c11e9710_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74717_old=_74821_hash.get()._field_t;
					_1c11e9ea2_addIndent(_self_);
				};
				_1c11eb6e0_indent(_self_);
				_1c11e9710_write(_self_, jule::Str("{\n", 2));
				_1c11e9ea2_addIndent(_self_);
				{
					auto &expr = _74821_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c38d0520:;
					if (it != expr.end()) {
						jule::Ptr<_1be45e6e1_Fn> _76725_m = *it;
						{
							jule::Str _76821_mIdent = static__1c11a5710_func(_76725_m);;
							_1c11eb6e0_indent(_self_);
							_1c11e9710_write(_self_, jule::Str(".", 1));
							_1c11e9710_write(_self_, _76821_mIdent);
							_1c11e9710_write(_self_, jule::Str("=", 1));
							_1c11e9710_write(_self_, _76821_mIdent);
							_1c11e9710_write(_self_, jule::Str("_", 1));
							_1c11e9710_write(_self_, _1c0046629_Itoa(_74821_hash.get()._field_i));
							_1c11e9710_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1c38d0520:;
						++it;
						goto _iter_begin_1c38d0520;
					}
					_iter_end_1c38d0520:;
				};
				_1c11eae92_doneIndent(_self_);
				_1c11eb6e0_indent(_self_);
				_1c11e9710_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1c38cb6d6:;
			++it;
			goto _iter_begin_1c38cb6d6;
		}
		_iter_end_1c38cb6d6:;
	};
	if ((_74717_old != nullptr)) {
		_1c11eae92_doneIndent(_self_);
		_1c11eb6e0_indent(_self_);
		_1c11e9710_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1c1218a92_globals(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1c38d4227:;
		if (it != expr.end()) {
			jule::Ptr<_1c0081334_Var> _79021_v = *it;
			{
				_1c11e9710_write(_self_, static__1c1221c98_kind(_79021_v.get()._field_Kind.get()._field_Kind));
				_1c11e9710_write(_self_, jule::Str(" ", 1));
				if (_79021_v.get()._field_Reference) {
					_1c11e9710_write(_self_, jule::Str("&", 1));
				};
				_1c11e9710_write(_self_, static__1c11a6a74_var(_79021_v));
				_1c11e9710_write(_self_, jule::Str(" = ", 3));
				_1c119d9b1_val(_self_.get()._field_ec, _79021_v.get()._field_Value);
				_1c11e9710_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1c38d4227:;
			++it;
			goto _iter_begin_1c38d4227;
		}
		_iter_end_1c38d4227:;
	};
}



inline void _1c1218c6d_decls(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c11d8cc6_traitDecls(_self_);
	_1c11d9b51_structurePlainDecls(_self_);
	_1c12172bb_structureDecls(_self_);
	_1c1217794_funcDecls(_self_);
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
	_1c12178c6_traitDataTypes(_self_);
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
	_1c12186da_traitWrappers(_self_);
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
	_1c12188b6_traitDatas(_self_);
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
	_1c1218a92_globals(_self_);
}



inline void _1c1218ee3_structureMethods(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be3b359b_StructIns>& _81841_s) {
	{
		auto &expr = _81841_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c38da89e:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _81921_f = *it;
			{
				_1c121850e_func(_self_, _81921_f);
				_1c11e9710_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1c38da89e:;
			++it;
			goto _iter_begin_1c38da89e;
		}
		_iter_end_1c38da89e:;
	};
}



inline void _1c1219268_structureDeriveDefs(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be3b359b_StructIns>& _82544_s) {
	if (_1be3782a8_IsDerives(_82544_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1c11e9710_write(_self_, static__1c11a1541_cloneFuncDef(_82544_s.get()._field_Decl));
		_1c11e9710_write(_self_, jule::Str("{\n", 2));
		_1c11e9ea2_addIndent(_self_);
		_1c11eb6e0_indent(_self_);
		_1c11e9710_write(_self_, static__1c122068c_structureIns(_82544_s));
		_1c11e9710_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82544_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1c38dd5e9:;
			if (it != expr.end()) {
				jule::Ptr<_1be38e8b8_FieldIns> _83320_f = *it;
				{
					jule::Str _83421_ident = static__1c11a67cc_field(_83320_f.get()._field_Decl);;
					_1c11eb6e0_indent(_self_);
					_1c11e9710_write(_self_, jule::Str("clone.", 6));
					_1c11e9710_write(_self_, _83421_ident);
					_1c11e9710_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1c11e9710_write(_self_, _83421_ident);
					_1c11e9710_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1c38dd5e9:;
				++it;
				goto _iter_begin_1c38dd5e9;
			}
			_iter_end_1c38dd5e9:;
		};
		_1c11eb6e0_indent(_self_);
		_1c11e9710_write(_self_, jule::Str("return clone;\n", 14));
		_1c11eae92_doneIndent(_self_);
		_1c11e9710_write(_self_, jule::Str("}", 1));
	};
}



inline void _1c12194dd_structureOstream(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be3b359b_StructIns>& _84941_s) {
	_1c11eb6e0_indent(_self_);
	_1c11e9710_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1c11e9710_write(_self_, static__1c11a6535_structureIns(_84941_s));
	_1c11e9710_write(_self_, jule::Str(" _Src) {\n", 9));
	_1c11e9ea2_addIndent(_self_);
	_1c11eb6e0_indent(_self_);
	jule::Ptr<_1be45e6e1_Fn> _85717_fts = _1be38d71e_FindMethod(_84941_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1c0082775_Str(_85717_fts)) {
		_1c11e9710_write(_self_, jule::Str("_Stream << ", 11));
		_1c11e9710_write(_self_, static__1c11a5710_func(_85717_fts));
		_1c11e9710_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1c11e9710_write(_self_, jule::Str("_Stream << \"", 12));
		_1c11e9710_write(_self_, _84941_s.get()._field_Decl.get()._field_Ident);
		_1c11e9710_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84941_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1c38e5ed6:;
			if (it != expr.end()) {
				jule::I64 _86718_i = it - expr.begin();
				jule::Ptr<_1be38e8b8_FieldIns> _86725_f = *it;
				{
					_1c11eb6e0_indent(_self_);
					_1c11e9710_write(_self_, jule::Str("_Stream << \"", 12));
					_1c11e9710_write(_self_, _86725_f.get()._field_Decl.get()._field_Ident);
					_1c11e9710_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1be3b359b_StructIns> _87421_strct = _1c010c888_Struct(_86725_f.get()._field_Kind.ptr());;
					if ((((_87421_strct != nullptr) && (_87421_strct.get()._field_Decl != nullptr)) && _87421_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1c11e9710_write(_self_, jule::Str(" cpp.", 5));
						_1c11e9710_write(_self_, static__1c11a67cc_field(_86725_f.get()._field_Decl));
						_1c11e9710_write(_self_, jule::Str("\"", 1));
					} else {
						_1c11e9710_write(_self_, jule::Str("\" << _Src.", 10));
						_1c11e9710_write(_self_, static__1c11a67cc_field(_86725_f.get()._field_Decl));
					};
					if (((_86718_i + 1LL) < _84941_s.get()._field_Fields.len())) {
						_1c11e9710_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1c11e9710_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1c38e5ed6:;
				++it;
				_86718_i++;
				goto _iter_begin_1c38e5ed6;
			}
			_iter_end_1c38e5ed6:;
		};
		_1c11eb6e0_indent(_self_);
		_1c11e9710_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1c11eb6e0_indent(_self_);
	_1c11e9710_write(_self_, jule::Str("return _Stream;\n", 16));
	_1c11eae92_doneIndent(_self_);
	_1c11e9710_write(_self_, jule::Str("}", 1));
}



inline void _1c1219763_structureIns(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be3b359b_StructIns>& _90037_s) {
	_1c1218ee3_structureMethods(_self_, _90037_s);
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
	_1c1219268_structureDeriveDefs(_self_, _90037_s);
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
	_1c12194dd_structureOstream(_self_, _90037_s);
}



inline void _1c12199d8_structure(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1be387251_Struct>& _90834_s) {
	{
		auto &expr = _90834_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c38edecd:;
		if (it != expr.end()) {
			jule::Ptr<_1be3b359b_StructIns> _90921_ins = *it;
			{
				_1c1219763_structureIns(_self_, _90921_ins);
				_1c11e9710_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1c38edecd:;
			++it;
			goto _iter_begin_1c38edecd;
		}
		_iter_end_1c38edecd:;
	};
}



inline void _1c1219bb4_structures(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c38ee75e:;
		if (it != expr.end()) {
			jule::Ptr<_1be387251_Struct> _91621_s = *it;
			{
				if ((_91621_s.get()._field_Token != nullptr)) {
					_1c12199d8_structure(_self_, _91621_s);
					_1c11e9710_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1c38ee75e:;
			++it;
			goto _iter_begin_1c38ee75e;
		}
		_iter_end_1c38ee75e:;
	};
}



inline void _1c1219d90_funcs(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c11d7874_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c005e312_Package>&)>([=](jule::Ptr<_1c005e312_Package>& _92535_pkg) mutable -> void {
		_1c121abd7_iterFiles(_92535_pkg,jule::Fn<void(jule::Ptr<_1c00c8524_SymbolTable>&)>([=](jule::Ptr<_1c00c8524_SymbolTable>& _92636_file) mutable -> void {
			{
				auto &expr = _92636_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1c39034ee:;
				if (it != expr.end()) {
					jule::Ptr<_1be45e6e1_Fn> _92729_f = *it;
					{
						if (((!(_231e81a74_Test)) && _1c122498d_hasDirective(_92729_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1c39034ee;
						};
						if (((!(_92729_f.get()._field_CppLinked)) && (_92729_f.get()._field_Token != nullptr))) {
							_1c121850e_func(_self_, _92729_f);
							_1c11e9710_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1c39034ee:;
					++it;
					goto _iter_begin_1c39034ee;
				}
				_iter_end_1c39034ee:;
			};
		}));
	}));
}



inline void _1c121a115_pushInit(jule::Ptr<_1c12163a8_ObjectCoder> _self_, jule::Ptr<_1c005e312_Package>& _94033_pkg) {
	_1c121abd7_iterFiles(_94033_pkg,jule::Fn<void(jule::Ptr<_1c00c8524_SymbolTable>&)>([=](jule::Ptr<_1c00c8524_SymbolTable>& _94132_file) mutable -> void {
		{
			auto &expr = _94132_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1c3905da3:;
			if (it != expr.end()) {
				jule::Ptr<_1be45e6e1_Fn> _94220_f = *it;
				{
					if ((_94220_f.get()._field_Ident == jule::Str("init", 4))) {
						_1c11eb6e0_indent(_self_);
						_1c11e9710_write(_self_, static__1c11a5710_func(_94220_f));
						_1c11e9710_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1c3905da3:;
				++it;
				goto _iter_begin_1c3905da3;
			}
			_iter_end_1c3905da3:;
		};
	}));
}



inline void _1c121a2e1_initCaller(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c11e9710_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1c11e9ea2_addIndent(_self_);
	_1c11d7874_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1c005e312_Package>&)>([=](jule::Ptr<_1c005e312_Package>& _95535_pkg) mutable -> void {
		_1c121a115_pushInit(_self_, _95535_pkg);
	}));
	_1c11eae92_doneIndent(_self_);
	_1c11e9710_write(_self_, jule::Str("\n}", 2));
}



inline void _1c121a4bc_end(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c11e9710_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_231e81a74_Test) {
		_1c11e9710_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1c11e9710_write(_self_, jule::Str("entry_point();", 14));
	};
	_1c11e9710_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1c121a698_serializeHead(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c11d0a37_prepareStructures(_self_);
	_1c11d7e07_buildTraitMap(_self_);
	_1c11cc209_head(_self_);
	_1c11ea700_links(_self_);
	_1c11e9710_write(_self_, jule::Str("\n", 1));
	_1c1218c6d_decls(_self_);
	_1c11e9710_write(_self_, jule::Str("\n", 1));
	_1c1219bb4_structures(_self_);
	_1c1219d90_funcs(_self_);
	_1c121a2e1_initCaller(_self_);
	_1c11e9710_write(_self_, jule::Str("\n\n", 2));
}



inline void _1c121a874_Serialize(jule::Ptr<_1c12163a8_ObjectCoder> _self_) {
	_1c121a698_serializeHead(_self_);
	_1c121a4bc_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1c12163a8_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1c395a424_parseInteger(_1bd9076d4_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::I64 _19083_x = jule::I64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_1c395d12a:;
			{
				_19083_x = 0LL;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_1d63616b9_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1c395d603:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_1d63616b9_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1c395d48d:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_1d63616b9_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1c395d6e1:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1c395d757:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1c395cc84:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_1c395cba7:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1c39634d7_parseInteger(_1bd9076d4_argParser* _self_, jule::Str& _19031_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19039_parser) {
	jule::U64 _19083_x = jule::U64();
	jule::Bool _19089_ok = jule::Bool();
	{
		
		if (_19031_s.empty()) {
			_case_begin_1c3966199:;
			{
				_19083_x = 0LLU;
				_19089_ok = false;
				return std::make_tuple(_19083_x,_19089_ok);
			}
		}
		else if (_1d63616b9_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1c3966672:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),16LL);
			}
		}
		else if (_1d63616b9_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1c396650c:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),2LL);
			}
		}
		else if (_1d63616b9_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1c3966760:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(2LL),8LL);
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1c39667c6:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1c3965d03:;
			{
				std::tie(_19083_x,_19089_ok) = _19039_parser(_19031_s,10LL);
			}
		}
		_match_end_1c3965c26:;
	};
	return std::make_tuple(_19083_x,_19089_ok);
}



inline jule::Str _1bd961e47_getData(_1bd9076d4_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _233b4bd58_processFlag(_1bd9076d4_argParser* _self_, jule::Trait<_233aec512_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1c394294a_Flag>>()) {
			_case_begin_1c3957597:;
			{
				jule::Ptr<_1c394294a_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_1c394294a_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1c3957531:;
	};
	jule::Str _22513_data = _1bd961e47_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _233aec512_CommonFlag_mptr_data[(_21735_flag).type_offset]._233aeb29c_Name(_21735_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1c3936774_Flag>>()) {
			_case_begin_1c3958c5d:;
			{
				jule::Ptr<_1c3936774_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_1c3936774_Flag>();;
				jule::Bool _23332_ok;;
				std::tie((*(_23221_intf.get()._field_data)),_23332_ok) = _1c395a424_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1bec506b8_ParseInt(_23370_s,_23378_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _233aec512_CommonFlag_mptr_data[(_21735_flag).type_offset]._233aeb29c_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c393a437_Flag>>()) {
			_case_begin_1c3959687:;
			{
				jule::Ptr<_1c393a437_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_1c393a437_Flag>();;
				jule::Bool _24133_ok;;
				std::tie((*(_24021_uintf.get()._field_data)),_24133_ok) = _1c39634d7_parseInteger(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1bebc3a37_ParseUint(_24171_s,_24179_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _233aec512_CommonFlag_mptr_data[(_21735_flag).type_offset]._233aeb29c_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c393de1e_Flag>>()) {
			_case_begin_1c39596ed:;
			{
				jule::Ptr<_1c393de1e_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_1c393de1e_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1becd9477_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _233aec512_CommonFlag_mptr_data[(_21735_flag).type_offset]._233aeb29c_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c3946432_Flag>>()) {
			_case_begin_1c3959764:;
			{
				(*(_21735_flag.operator jule::Ptr<_1c3946432_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_1c3959621:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _233b4e454_singleDash(_1bd9076d4_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25730_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1c396d558:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_233aec512_CommonFlag> _26321_flag = _1bd900138_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _233b4bd58_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1c396d558:;
			++it;
			goto _iter_begin_1c396d558;
		}
		_iter_end_1c396d558:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1bd90c7d8_doubleDash(_1bd9076d4_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_233aec512_CommonFlag> _27617_flag = _1bd8d1b97_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27230_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _233b4bd58_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1bd96a22a_tryArg(_1bd9076d4_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1bd90c7d8_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _233b4e454_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _233b1c389_parse(_1bd9076d4_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1bd96a22a_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1c397662c:;
	}
	_iter_end_1c397662c:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1bd9076d4_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2338d0d73_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _233909e13_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();
	};
	{
		return static_cast<jule::Str>(_6924_s);
	};
}



inline jule::I64 _23207ad49_GetLastErrno(void) {
	return errno;
}



inline jule::I64 _23390a694_Stat(jule::U8* _3916_path, struct stat* _3933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_3916_path)), _3933_stat));
}



inline jule::I64 _23390a7c6_Open(jule::U8* _4416_path, jule::I64 _4429_flag, jule::I64 _4440_mode) {
	return static_cast<jule::I64>(open(((char*)(_4416_path)),_4429_flag,_4440_mode));
}



inline jule::U8* _23390a908_Getcwd(jule::U8* _5018_buff, jule::U64 _5031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5018_buff)),_5031_bufflen)));
}



inline DIR* _23390aa3a_Opendir(jule::U8* _5519_path) {
	return opendir(((char*)(_5519_path)));
}



inline struct dirent* _23390ab6c_Readdir(DIR* _5823_dir) {
	return readdir(_5823_dir);
}



inline jule::I64 _23390aed0_Closedir(DIR* _6124_dir) {
	return static_cast<jule::I64>(closedir(_6124_dir));
}



inline jule::I64 _23390b376_Mkdir(jule::U8* _7017_path, jule::I64 _7030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7017_path)),_7030_mode));
}



inline jule::I64 _23390b4a8_Rmdir(jule::U8* _7517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_7517_path))));
}



inline jule::I64 _23390b5da_Unlink(jule::U8* _7818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_7818_path))));
}



inline jule::I64 _233935e2d_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));
}



inline jule::I64 _233936318_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));
}



inline jule::I64 _23393668c_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));
}



inline jule::I64 _233936a77_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));
}



inline void _233936c86_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _23399c439_getLastOsError(void) {
	jule::I64 _309_err = _23207ad49_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c13dae95:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c13db00b:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1c13db072:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1c13db0d8:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c13db32a:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c13db391:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c13db407:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_1c13dad0d:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1c13daca8:;
	};
}



inline jule::Slice<jule::Str> _2339c3152_Args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _2339c35c5_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _2339c451b_getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _2339c451b_getwd(void) {
	jule::U8* _1113_buff = _23390a908_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_23399c439_getLastOsError());
	};
	jule::Str _159_pwd = _233909e13_BytePtrToStr(_1113_buff);;
	{
		_2338d0d73_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Slice<jule::U8> _218562a64_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();
}



inline jule::Bool _2009ae78c_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_200a28c79__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);
	};
	return _200a32733_isExcludingLatin(_2009b970e_Letter,_7613_r);
}



inline jule::Bool _200a31b50_is16(jule::Slice<_200a3008d_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1c19d0ce8:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_200a3008d_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1c19d0ce8:;
				++it;
				_19313_i++;
				goto _iter_begin_1c19d0ce8;
			}
			_iter_end_1c19d0ce8:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_200a3008d_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1c19ce676:;
	}
	_iter_end_1c19ce676:;;
	return false;
}



inline jule::Bool _200a31e91_is32(jule::Slice<_200a30511_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1c19d7481:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_200a30511_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));
						};
					};
				}
				_iter_next_1c19d7481:;
				++it;
				_23013_i++;
				goto _iter_begin_1c19d7481;
			}
			_iter_end_1c19d7481:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_200a30511_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1c19d411a:;
	}
	_iter_end_1c19d411a:;;
	return false;
}



inline jule::Bool _200a32733_isExcludingLatin(jule::Ptr<_200a30984_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_200a3008d_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _200a31b50_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));
		};
	};
	jule::Slice<_200a30511_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _200a31e91_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));
	};
	return false;
}



inline jule::Bool _200a329ca_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_200a28c79__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);
	};
	return _200a32733_isExcludingLatin(_2009c179e_Upper,_29512_r);
}



inline std::tuple<jule::I32,jule::I64> _1d639e43d_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	jule::I32 _18228_r = jule::I32();
	jule::I64 _18237_size = jule::I64();
	if ((_18215_p.len() < 1LL)) {
		_18228_r = 65533LL;
		_18237_size = 0LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _1d639d2d8_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_1d639d85a_acceptRange _1969_accept = _1d639dbbd_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18228_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18237_size = 2LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18228_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18237_size = 3LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18228_r = 65533LL;
		_18237_size = 1LL;
		return std::make_tuple(_18228_r,_18237_size);
	};
	_18228_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18237_size = 4LL;
	return std::make_tuple(_18228_r,_18237_size);
}



inline std::tuple<jule::I32,jule::I64> _1d639e75c_DecodeRuneStr(jule::Str _22918_s) {
	jule::I32 _22928_r = jule::I32();
	jule::I64 _22937_size = jule::I64();
	if ((_22918_s.len() < 1LL)) {
		_22928_r = 65533LL;
		_22937_size = 0LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _1d639d2d8_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_1d639d85a_acceptRange _2439_accept = _1d639dbbd_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 2LL)) {
		_22928_r = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		_22937_size = 2LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	if ((_2429_sz <= 3LL)) {
		_22928_r = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		_22937_size = 3LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		_22928_r = 65533LL;
		_22937_size = 1LL;
		return std::make_tuple(_22928_r,_22937_size);
	};
	_22928_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	_22937_size = 4LL;
	return std::make_tuple(_22928_r,_22937_size);
}



inline std::tuple<jule::I32,jule::I64> _1d639ea04_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	jule::I32 _27632_r = jule::I32();
	jule::I64 _27641_size = jule::I64();
	if ((_27619_p.len() == 0LL)) {
		_27632_r = 65533LL;
		_27641_size = 0LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27632_r=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((_27632_r < 128LL)) {
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1d63a13c9_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1c1a2decd;
			};
		}
	_iter_next_1c1a2decd:;
	}
	_iter_end_1c1a2decd:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27632_r,_27641_size) = _1d639e43d_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27641_size) != _2809_end)) {
		_27632_r = 65533LL;
		_27641_size = 1LL;
		return std::make_tuple(_27632_r,_27641_size);
	};
	return std::make_tuple(_27632_r,_27641_size);
}



inline jule::Slice<jule::U8> _1d63a07a2_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));
	};
	return _1d63a0ae3_appendRuneNonASCII(_40519_p,_40530_r);
}



inline jule::Slice<jule::U8> _1d63a0ae3_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1c1a446ec:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1c1a42d8d:;
			{
				_41242_r=128LL;
				goto _case_begin_1c1a42e04;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1c1a42e04:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1c1a42376:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));
			}
		}
		_match_end_1c1a42321:;
	};
}



inline jule::I64 _1d63a1132_RuneCountStr(jule::Str _47317_s) {
	jule::I64 _47327_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (_47327_n)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1c1a4bb44;
			};
			jule::U8 _48213_x = _1d639d2d8_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1c1a4bb44;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1c1a4bb44;
			};
			_1d639d85a_acceptRange _49213_accept = _1d639dbbd_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1c1a4bb44:;
	}
	_iter_end_1c1a4bb44:;;
	return _47327_n;
}



inline jule::Bool _1d63a13c9_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);
}



inline jule::Str _200a79329_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	jule::Str _1913_ss = jule::Str::alloc((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1913_ss+=_1111_s;
		}
	_iter_next_1c1a81ad0:;
	}
	_iter_end_1c1a81ad0:;;
	return _1913_ss;
}



inline jule::Bool _200a7a5c2_hasPrefix(jule::Str& _2615_s, jule::Str& _2624_sub, jule::I64 _2638_start) {
	if (((_2624_sub.len() == 0LL) || ((_2615_s.len() - _2638_start) < _2624_sub.len()))) {
		return false;
	};
	jule::I64 _3113_i = 0LL;;
	for (; (_3113_i < _2624_sub.len()); std::tie(_3113_i,_2638_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2638_start + 1LL)))) {
		{
			if ((_2615_s[_2638_start] != _2624_sub[_3113_i])) {
				return false;
			};
		}
	_iter_next_1c1a84b9e:;
	}
	_iter_end_1c1a84b9e:;;
	return true;
}



inline jule::Bool _1d63616b9_HasPrefix(jule::Str _4114_s, jule::Str _4122_sub) {
	return _200a7a5c2_hasPrefix(_4114_s,_4122_sub,0LL);
}



inline jule::Bool _1d63698d1_hasSuffix(jule::Str& _4515_s, jule::Str& _4524_sub, jule::I64 _4538_start) {
	if (((_4524_sub.len() == 0LL) || ((_4515_s.len() - _4538_start) < _4524_sub.len()))) {
		return false;
	};
	_4538_start=static_cast<jule::I64>((_4515_s.len() - _4538_start));
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4524_sub.len()); (_5113_i)++) {
		{
			if ((_4515_s[((_4538_start - _5113_i) - 1LL)] != _4524_sub[((_4524_sub.len() - _5113_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1c1a8ba1e:;
	}
	_iter_end_1c1a8ba1e:;;
	return true;
}



inline jule::Bool _1d637218b_HasSuffix(jule::Str _6114_s, jule::Str _6122_sub) {
	return _1d63698d1_hasSuffix(_6114_s,_6122_sub,0LL);
}



inline jule::I64 _200a78b0e_FindAt(jule::Str _6911_s, jule::Str _6919_sub, jule::I64 _6933_i) {
	if ((((_6933_i < 0LL) || (_6911_s.len() < _6919_sub.len())) || (_6919_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_6933_i < _6911_s.len()); (_6933_i)++) {
		{
			if (_200a7a5c2_hasPrefix(_6911_s,_6919_sub,_6933_i)) {
				return _6933_i;
			};
		}
	_iter_next_1c1a904c3:;
	}
	_iter_end_1c1a904c3:;;
	return -1LL;
}



inline jule::I64 _1d6353bea_FindLastAt(jule::Str _9215_s, jule::Str _9223_sub, jule::I64 _9233_i) {
	jule::I64 _9313_j = ((_9233_i - _9223_sub.len()) + 1LL);;
	if (((((_9223_sub.len() == 0LL) || (_9233_i < 0LL)) || (_9233_i >= _9215_s.len())) || (_9313_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;;
			jule::I64 _10017_z = 0LL;;
			for (; (_10017_z < _9223_sub.len()); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if ((_9215_s[_9917_k] != _9223_sub[_10017_z])) {
						goto _iter_next_1c1a92b79;
					};
				}
			_iter_next_1c1a94b59:;
			}
			_iter_end_1c1a94b59:;;
			return _9313_j;
		}
	_iter_next_1c1a92b79:;
	}
	_iter_end_1c1a92b79:;;
	return -1LL;
}



inline jule::I64 _1d6358d21_FindLast(jule::Str _11413_s, jule::Str _11421_sub) {
	return static_cast<jule::I64>(_1d6353bea_FindLastAt(_11413_s,_11421_sub,static_cast<jule::I64>((_11413_s.len() - 1LL))));
}



inline jule::I64 _1d63a2474_findRune(jule::Slice<jule::U8>& _17014_s, jule::I32 _17025_r) {
	jule::I64 _17113_i = 0LL;;
	while ((_17113_i < _17014_s.len())) {
		{
			jule::I32 _17314_br;;
			jule::I64 _17318_n;;
			std::tie(_17314_br,_17318_n) = _1d639e43d_DecodeRune(_17014_s.slice(_17113_i));
			if ((_17025_r == _17314_br)) {
				return _17113_i;
			};
			_17113_i+=_17318_n;
		}
	_iter_next_1c1a9c623:;
	}
	_iter_end_1c1a9c623:;;
	return -1LL;
}



inline jule::I64 _1d63a2919_FindLastByte(jule::Str _19717_s, jule::U8 _19725_b) {
	jule::I64 _19813_i = (_19717_s.len() - 1LL);;
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if ((_19717_s[_19813_i] == _19725_b)) {
				return _19813_i;
			};
		}
	_iter_next_1c1aa067b:;
	}
	_iter_end_1c1aa067b:;;
	return -1LL;
}



inline jule::I64 _1d63a2de2_FindAny(jule::Str _23812_s, jule::Str _23820_runes) {
	jule::Slice<jule::U8> _2399_sb = _218562a64_Stobs(_23812_s);;
	jule::Slice<jule::U8> _24013_rb = _218562a64_Stobs(_23820_runes);;
	jule::I64 _24113_i = 0LL;;
	while ((_24113_i < _2399_sb.len())) {
		{
			jule::I32 _24314_r;;
			jule::I64 _24317_n;;
			std::tie(_24314_r,_24317_n) = _1d639e43d_DecodeRune(_2399_sb.slice(_24113_i));
			if ((_1d63a2474_findRune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			};
			_24113_i+=_24317_n;
		}
	_iter_next_1c1aa5087:;
	}
	_iter_end_1c1aa5087:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _1d63a3343_Split(jule::Str _27210_s, jule::Str _27218_sub, jule::I64 _27232_n) {
	jule::I64 _27313_cap = _27232_n;;
	if ((_27232_n < 0LL)) {
		_27313_cap=16LL;
	};
	jule::Slice<jule::Str> _27713_parts = jule::Slice<jule::Str>::alloc(0LL,_27313_cap);;
	if ((_27232_n == 0LL)) {
		return _27713_parts;
	};
	if ((_27232_n < 0LL)) {
		_27232_n=static_cast<jule::I64>(_27210_s.len());
	};
	jule::I64 _28413_i = 0LL;;
	for (; (_27232_n > 0LL); (_27232_n)--) {
		{
			jule::I64 _28613_j = _200a78b0e_FindAt(_27210_s,_27218_sub,_28413_i);;
			if ((_28613_j == -1LL)) {
				goto _iter_end_1c1aabc5e;
			};
			_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27210_s.slice(_28413_i,_28613_j));;
			_28413_i=static_cast<jule::I64>((_28613_j + _27218_sub.len()));
		}
	_iter_next_1c1aabc5e:;
	}
	_iter_end_1c1aabc5e:;;
	if (((_27232_n > 0LL) && (_28413_i < _27210_s.len()))) {
		_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27210_s.slice(_28413_i));;
	};
	return _27713_parts;
}



inline jule::Bool _1d63a3684_Contains(jule::Str _30013_s, jule::Str _30021_sub) {
	return (_200a78b0e_FindAt(_30013_s,_30021_sub,0LL) != -1LL);
}



inline jule::Bool _1d63a4157_ContainsAny(jule::Str _31616_s, jule::Str _31624_runes) {
	return (_1d63a2de2_FindAny(_31616_s,_31624_runes) != -1LL);
}



inline jule::I64 _1d63a4498_Count(jule::Str _32210_s, jule::Str _32218_sub) {
	if ((_32218_sub.len() == 0LL)) {
		return 0LL;
	};
	jule::I64 _32613_n = 0LL;;
	jule::I64 _32713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _32913_j = _200a78b0e_FindAt(_32210_s,_32218_sub,_32713_i);;
			if ((_32913_j == -1LL)) {
				goto _iter_end_1c1ab267c;
			};
			(_32613_n)++;
			_32713_i=static_cast<jule::I64>((_32913_j + _32218_sub.len()));
		}
	_iter_next_1c1ab267c:;
	}
	_iter_end_1c1ab267c:;;
	return _32613_n;
}



inline jule::Str _1d63a492c_Replace(jule::Str _34212_s, jule::Str _34220_sub, jule::Str _34230_new, jule::I64 _34244_n) {
	if (((_34244_n == 0LL) || (_34220_sub == _34230_new))) {
		return _34212_s;
	};
	jule::I64 _3479_m = _1d63a4498_Count(_34212_s,_34220_sub);;
	if ((_3479_m == 0LL)) {
		return _34212_s;
	};
	if (((_34244_n < 0LL) || (_3479_m < _34244_n))) {
		_34244_n=_3479_m;
	};
	jule::Str _35513_ss = jule::Str::alloc((_34212_s.len() + (_34244_n * (_34230_new.len() - _34220_sub.len()))));;
	jule::I64 _35613_i = 0LL;;
	for (; (_34244_n > 0LL); (_34244_n)--) {
		{
			jule::I64 _35813_j = _200a78b0e_FindAt(_34212_s,_34220_sub,_35613_i);;
			if ((_35813_j == -1LL)) {
				goto _iter_end_1c1ab6681;
			};
			_35513_ss+=_34212_s.slice(_35613_i,_35813_j);
			_35513_ss+=_34230_new;
			_35613_i=static_cast<jule::I64>((_35813_j + _34220_sub.len()));
		}
	_iter_next_1c1ab6681:;
	}
	_iter_end_1c1ab6681:;;
	_35513_ss+=_34212_s.slice(_35613_i);
	return _35513_ss;
}



inline void _1d63a273d_trimLeft(jule::Slice<jule::U8>& _39818_s, jule::Slice<jule::U8>& _39830_cutset) {
	jule::I64 _39913_i = 0LL;;
	while ((_39913_i < _39818_s.len())) {
		{
			jule::I32 _40114_r;;
			jule::I64 _40117_n;;
			std::tie(_40114_r,_40117_n) = _1d639e43d_DecodeRune(_39818_s.slice(_39913_i));
			if ((_1d63a2474_findRune(_39830_cutset,_40114_r) == -1LL)) {
				_39818_s=_39818_s.slice(_39913_i);
				return;;
			};
			_39913_i+=_40117_n;
		}
	_iter_next_1c1abb543:;
	}
	_iter_end_1c1abb543:;;
	_39818_s=nullptr;
}



inline jule::Str _1d63a59d8_TrimLeft(jule::Str _41313_s, jule::Str _41321_cutset) {
	jule::Slice<jule::U8> _41413_bytes = _218562a64_Stobs(_41313_s);;
	jule::Slice<jule::U8> _4159_bcutset = _218562a64_Stobs(_41321_cutset);;
	_1d63a273d_trimLeft(_41413_bytes,_4159_bcutset);
	return static_cast<jule::Str>(_41413_bytes);
}



inline void _1d63a5c91_trimRight(jule::Slice<jule::U8>& _42019_s, jule::Slice<jule::U8>& _42031_cutset) {
	jule::I64 _42113_i = _42019_s.len();;
	while ((_42113_i > 0LL)) {
		{
			jule::I32 _42314_r;;
			jule::I64 _42317_n;;
			std::tie(_42314_r,_42317_n) = _1d639ea04_DecodeLastRune(_42019_s.slice(0LL,_42113_i));
			if ((_1d63a2474_findRune(_42031_cutset,_42314_r) == -1LL)) {
				_42019_s=_42019_s.slice(0LL,_42113_i);
				return;;
			};
			_42113_i-=_42317_n;
		}
	_iter_next_1c1abe997:;
	}
	_iter_end_1c1abe997:;;
	_42019_s=nullptr;
}



inline jule::Str _1d63a6423_Trim(jule::Str _4449_s, jule::Str _44417_cutset) {
	jule::Slice<jule::U8> _44513_bytes = _218562a64_Stobs(_4449_s);;
	jule::Slice<jule::U8> _4469_bcutset = _218562a64_Stobs(_44417_cutset);;
	_1d63a273d_trimLeft(_44513_bytes,_4469_bcutset);
	_1d63a5c91_trimRight(_44513_bytes,_4469_bcutset);
	return static_cast<jule::Str>(_44513_bytes);
}



inline jule::Str _1d63a6764_Join(jule::Slice<jule::Str> _4549_parts, jule::Str _45423_sep) {
	{
		auto _match_expr{ _4549_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c1ac3da8:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c1ac3e30:;
			{
				return _4549_parts[0LL];
			}
		}
		_match_end_1c1ac3c21:;
	};
	jule::Str _46113_s = _4549_parts[0LL];;
	{
		auto expr = _4549_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1c1ac5096:;
		if (it != expr.end()) {
			jule::Str &_46212_part = *it;
			{
				_46113_s+=_45423_sep;
				_46113_s+=_46212_part;
			}
			_iter_next_1c1ac5096:;
			++it;
			goto _iter_begin_1c1ac5096;
		}
		_iter_end_1c1ac5096:;
	};
	return _46113_s;
}



inline jule::Str _1d63a7d3c_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _1d63aaa65_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _1d63aa4d2_IsPathSep(_1099_originalPath[0LL])) && _1d63aa4d2_IsPathSep(_1099_originalPath[1LL]))) {
			return _1d63a83c0_FromSlash(_1099_originalPath);
		};
		return (_1099_originalPath + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _1d63aa4d2_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_1d63a707d_lazyBuff _12713_out = _1d63a707d_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1d63a7776_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1d63aa4d2_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1c1ad44e5:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1d63aa4d2_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1c1ad71da:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1d63aa4d2_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1c1ad7251:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1c1ada199:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1d63aa4d2_IsPathSep(static_cast<jule::U8>(_1d63a7501_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1c1ada496:;
									}
									_iter_end_1c1ada496:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1c1ada210:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1d63a7776_append(&_12713_out, 47LLU);
									};
									_1d63a7776_append(&_12713_out, '.');
									_1d63a7776_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1c1ad9cd1:;
						};
					}
				}
				else {
					_case_begin_1c1ad2867:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1d63a7776_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_1d63aa4d2_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_1d63a7776_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1c1ad3ea6:;
						}
						_iter_end_1c1ad3ea6:;;
					}
				}
				_match_end_1c1ad278a:;
			};
		}
	_iter_next_1c1ad1de9:;
	}
	_iter_end_1c1ad1de9:;;
	if ((_12713_out._field_w == 0LL)) {
		_1d63a7776_append(&_12713_out, '.');
	};
	return _1d63a83c0_FromSlash(_1d63a79da_string(&_12713_out));
}



inline jule::Str _1d63a83c0_FromSlash(jule::Str _21114_path) {
	if ((47LL == '/')) {
		return _21114_path;
	};
	return _1d63a492c_Replace(_21114_path,jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1d63a86de_Join(jule::Slice<jule::Str> _2259_elem) {
	return _1d63ab12b_join(_2259_elem);
}



inline jule::Str _1d63a8986_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1d63aa4d2_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);
			};
		}
	_iter_next_1c1ae0127:;
	}
	_iter_end_1c1ae0127:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1d63a8c2d_Abs(jule::Str _2458_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _1d63aad84_abs(_2458_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1d63a8ec5_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25413_path.len() > 0LL) && _1d63aa4d2_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_1c1ae1e09:;
	}
	_iter_end_1c1ae1e09:;;
	(_25413_path).mut_slice(_1d63a95e1_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1d63aa4d2_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1c1ae3dc8:;
	}
	_iter_end_1c1ae3dc8:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);
	};
	return _25413_path;
}



inline jule::Str _1d63a9349_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _1d63a95e1_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1d63aa4d2_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1c1ae634d:;
	}
	_iter_end_1c1ae634d:;;
	jule::Str _2919_dir = _1d63a7d3c_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _1d63a95e1_VolumeName(jule::Str _30315_path) {
	return _1d63a83c0_FromSlash(_30315_path.slice(0LL,_1d63aaa65_volumeNameLen(_30315_path)));
}



inline jule::Bool _1d63aa4d2_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);
}



inline jule::Bool _1d63aa7bd_IsAbs(jule::Str _5310_path) {
	return _1d63616b9_HasPrefix(_5310_path,jule::Str("/", 1));
}



inline jule::I64 _1d63aaa65_volumeNameLen(jule::Str _5918_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1d63aad84_abs(jule::Str _638_path) {
	jule::Bool _6326_ok = jule::Bool();
	if (_1d63aa7bd_IsAbs(_638_path)) {
		_6326_ok = true;
		return std::make_tuple(_1d63a7d3c_Clean(_638_path),_6326_ok);
	};
	jule::Str _679_wd = ({
		auto except = _2339c35c5_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			_6326_ok = false;
			return std::make_tuple(jule::Str(),_6326_ok);
		} jule::Str();});
	});;
	_6326_ok = true;
	return std::make_tuple(_1d63ab12b_join(jule::Slice<jule::Str>::make({_679_wd,_638_path})),_6326_ok);
}



inline jule::Str _1d63ab12b_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_1c1b01105:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _1d63a7d3c_Clean(_1d63a6764_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));
				};
			}
			_iter_next_1c1b01105:;
			++it;
			_749_i++;
			goto _iter_begin_1c1b01105;
		}
		_iter_end_1c1b01105:;
	};
	return jule::Str();
}



inline jule::I64 _2320921d4_getLastFsError(void) {
	jule::I64 _729_err = _23207ad49_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c1b0e036:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c1b0d51e:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1c1b0d992:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1c1b0da08:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c1b0da6e:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c1b0dad5:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1c1b0e245:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c1b0e2ab:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c1b0e322:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c1b0e388:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c1b0e3ee:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c1b0e465:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c1b0e4cb:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c1b0e553:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c1b0e5ca:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1c1b0e652:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c1b0e6c9:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c1b0e751:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c1b0e7c8:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c1b0e850:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1c1b0e8c7:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c1b0e94e:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c1b0e9c6:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c1b0ea4d:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c1b0eac5:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1c1b0eb4c:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1c1b0ebc4:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1c1b0ec4b:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1c1b0d80a:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1c1b0d7a5:;
	};
}



inline jule::I64 _231eee76d_getLastProcessError(void) {
	jule::I64 _429_err = _23207ad49_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c1b3605d:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1c1b364d1:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1c1b36547:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c1b365ad:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c1b36624:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c1b36866:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c1b368cc:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1c1b36943:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1c1b369a9:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 67LL) {
			_case_begin_1c1b36a20:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1c1b36a86:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1c1b36349:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1c1b362e4:;
	};
}



inline jule::Slice<char*> _2320029c4_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL,(_2024_s.len() + 1LL));;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_1c1b43521:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_1c1b43521:;
			++it;
			_229_i++;
			goto _iter_begin_1c1b43521;
		}
		_iter_end_1c1b43521:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;
}



inline jule::I64 _232002e25_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _2320029c4_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));
	};
}



inline jule::I64 _232003310_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _2320029c4_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _2320029c4_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));
	};
}



inline void _232003e26_Exit(jule::I64 _129_code) {
	_233936c86_Exit(_129_code);
}



inline jule::Str _232004124_Executable(void) {
	return jule::executable();
}



inline jule::Bool _1d6428bb0_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));
}



inline jule::Bool _1d6428d8b_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _1d6427681_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1c1b76bb4:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3121_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1c1b76bb4:;
			++it;
			goto _iter_begin_1c1b76bb4;
		}
		_iter_end_1c1b76bb4:;
	};
	return false;
}



inline jule::Bool _1d6429133_IsValidCppExt(jule::Str _4218_ext) {
	if ((_4218_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _1d6426d12_CppExts;
		auto it = expr.begin();
		_iter_begin_1c1b78ba5:;
		if (it != expr.end()) {
			jule::Str &_4612_e = *it;
			{
				if ((_4218_ext == _4612_e)) {
					return true;
				};
			}
			_iter_next_1c1b78ba5:;
			++it;
			goto _iter_begin_1c1b78ba5;
		}
		_iter_end_1c1b78ba5:;
	};
	{
		auto &expr = _1d6426e00_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1c1b798ed:;
		if (it != expr.end()) {
			jule::Str &_5112_e = *it;
			{
				if ((_4218_ext == _5112_e)) {
					return true;
				};
			}
			_iter_next_1c1b798ed:;
			++it;
			goto _iter_begin_1c1b798ed;
		}
		_iter_end_1c1b798ed:;
	};
	return false;
}



inline jule::Str _1d6435c44_Logf(jule::Str _2949_fmt, jule::Slice<jule::Any> _29422_args) {
	return _1d643665c_applyFmt(_2949_fmt,jule::Any(_29422_args));
}



inline jule::Str _1d6436030_argToStr(jule::Any _29813_arg) {
	{
		auto &_match_expr{ _29813_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1c1b7aaca:;
			{
				return _29813_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1c1b7ab41:;
			{
				return static_cast<jule::Str>(_29813_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1c1b7aba7:;
			{
				return static_cast<jule::Str>(_29813_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1c1b79c72:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1c1b7a6bd:;
	};
}



inline jule::I64 _1d64362c7_findNextFmt(jule::Str _31116_fmt) {
	{
		auto &expr = _31116_fmt;
		auto it = expr.begin();
		_iter_begin_1c1b7be0b:;
		if (it != expr.end()) {
			jule::I64 _3129_i = it - expr.begin();
			jule::U8 &_31212_b = *it;
			{
				if ((_31212_b == '@')) {
					return _3129_i;
				};
			}
			_iter_next_1c1b7be0b:;
			++it;
			_3129_i++;
			goto _iter_begin_1c1b7be0b;
		}
		_iter_end_1c1b7be0b:;
	};
	return -1LL;
}



inline jule::Str _1d643665c_applyFmt(jule::Str _32017_fmt, jule::Slice<jule::Any> _32027_args) {
	jule::Str _32113_s = jule::Str();;
	{
		auto &expr = _32027_args;
		auto it = expr.begin();
		_iter_begin_1c1b7d737:;
		if (it != expr.end()) {
			jule::Any &_32212_arg = *it;
			{
				jule::I64 _32313_i = _1d64362c7_findNextFmt(_32017_fmt);;
				if ((_32313_i == -1LL)) {
					goto _iter_end_1c1b7d737;
				};
				_32113_s+=_32017_fmt.slice(0LL,_32313_i);
				_32113_s+=_1d6436030_argToStr(jule::Any(_32212_arg));
				(_32017_fmt).mut_slice((_32313_i + 1LL));;
			}
			_iter_next_1c1b7d737:;
			++it;
			goto _iter_begin_1c1b7d737;
		}
		_iter_end_1c1b7d737:;
	};
	_32113_s+=_32017_fmt;
	return _32113_s;
}



inline jule::Bool _1d6437729_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));
}



inline jule::Bool _1d6438b59_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));
}



inline jule::Bool _1d6438e12_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));
}



inline jule::Bool _1d64391a9_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));
}



inline jule::Bool _1d64394c8_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));
}



inline jule::Bool _1d6439770_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1d6439a17_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1d6439cae_IsUnix(jule::Str _5511_os) {
	return (_1d6438e12_IsDarwin(_5511_os) || _1d64391a9_IsLinux(_5511_os));
}



inline jule::Bool _1d643a133_Is32Bit(jule::Str _5812_arch) {
	return _1d64394c8_IsI386(_5812_arch);
}



inline jule::Bool _1d643a3ca_Is64Bit(jule::Str _6112_arch) {
	return (_1d6439770_IsAmd64(_6112_arch) || _1d6439a17_IsArm64(_6112_arch));
}



inline void _231eb6449_init(void) {
	jule::Str _2513_path = _232004124_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_231ee2640_PathWd=({
			auto except = _2339c35c5_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_231edeede_PathExec=_1d63a9349_Dir(_2513_path);
		_231edd130_PathStdlib=_1d63a86de_Join(jule::Slice<jule::Str>::make({_231edeede_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_231eecdba_PathApi=_1d63a86de_Join(jule::Slice<jule::Str>::make({_231edeede_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1d675dc1a_IsUnaryOp(jule::Str _31014_kind) {
	{
		auto &expr = _1d66b4544_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1c1bc7275:;
		if (it != expr.end()) {
			jule::Str &_31112_op = *it;
			{
				if ((_31014_kind == _31112_op)) {
					return true;
				};
			}
			_iter_next_1c1bc7275:;
			++it;
			goto _iter_begin_1c1bc7275;
		}
		_iter_end_1c1bc7275:;
	};
	return false;
}



inline jule::Bool _1d675e006_IsBinOp(jule::Str _32012_kind) {
	{
		auto &expr = _1d66b4885_BinOps;
		auto it = expr.begin();
		_iter_begin_1c1bc7b7c:;
		if (it != expr.end()) {
			jule::Str &_32112_op = *it;
			{
				if ((_32012_kind == _32112_op)) {
					return true;
				};
			}
			_iter_next_1c1bc7b7c:;
			++it;
			goto _iter_begin_1c1bc7b7c;
		}
		_iter_end_1c1bc7b7c:;
	};
	return false;
}



inline jule::Bool _1d675e5bc_IsStr(jule::Str _34010_k) {
	return ((!(_34010_k.empty())) && ((_34010_k[0LL] == '\"') || _1d675e864_IsRawStr(_34010_k)));
}



inline jule::Bool _1d675e864_IsRawStr(jule::Str _34313_k) {
	return ((!(_34313_k.empty())) && (_34313_k[0LL] == '`'));
}



inline jule::Bool _1d675eb0b_IsRune(jule::Str _34711_k) {
	return ((!(_34711_k.empty())) && (_34711_k[0LL] == '\''));
}



inline jule::Bool _1d6760227_IsBool(jule::Str _35311_k) {
	return ((_35311_k == jule::Str("true", 4)) || (_35311_k == jule::Str("false", 5)));
}



inline jule::Bool _1d67604be_IsFloat(jule::Str _35612_k) {
	if (_1d63616b9_HasPrefix(_35612_k,jule::Str("0x", 2))) {
		return _1d63a4157_ContainsAny(_35612_k,jule::Str(".pP", 3));
	};
	return _1d63a4157_ContainsAny(_35612_k,jule::Str(".eE", 3));
}



inline jule::Bool _1d6760766_IsNum(jule::Str _36410_k) {
	if (_36410_k.empty()) {
		return false;
	};
	jule::U8 _3699_b = _36410_k[0LL];;
	return ((_3699_b == '.') || (('0' <= _3699_b) && (_3699_b <= '9')));
}



inline jule::Bool _1d6760ca5_IsIgnoreIdent(jule::Str _37918_ident) {
	return (_37918_ident == jule::Str("_", 1));
}



inline jule::Bool _1d676104c_IsAnonIdent(jule::Str _38216_ident) {
	return (_38216_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1d676158b_IsSpace(jule::I32 _39512_r) {
	{
		auto &expr = _1d66b42d0_Spaces;
		auto it = expr.begin();
		_iter_begin_1c1bd1a54:;
		if (it != expr.end()) {
			jule::I32 &_39612_cr = *it;
			{
				if ((_39512_r == _39612_cr)) {
					return true;
				};
			}
			_iter_next_1c1bd1a54:;
			++it;
			goto _iter_begin_1c1bd1a54;
		}
		_iter_end_1c1bd1a54:;
	};
	return false;
}



inline jule::Bool _1d67619dc_IsLetter(jule::I32 _40513_r) {
	return _2009ae78c_IsLetter(_40513_r);
}



inline jule::Bool _1d676202b_IsDecimal(jule::U8 _42514_b) {
	return (('0' <= _42514_b) && (_42514_b <= '9'));
}



inline jule::Bool _1d67622c3_IsBinary(jule::U8 _42813_b) {
	return ((_42813_b == '0') || (_42813_b == '1'));
}



inline jule::Bool _1d676256a_IsOctal(jule::U8 _43112_b) {
	return (('0' <= _43112_b) && (_43112_b <= '7'));
}



inline jule::Bool _1d6762812_IsHex(jule::U8 _43410_b) {
	{
		
		if ((('0' <= _43410_b) && (_43410_b <= '9'))) {
			_case_begin_1c1bd68b1:;
			{
				return true;
			}
		}
		else if ((('a' <= _43410_b) && (_43410_b <= 'f'))) {
			_case_begin_1c1bd6196:;
			{
				return true;
			}
		}
		else if ((('A' <= _43410_b) && (_43410_b <= 'F'))) {
			_case_begin_1c1bd620c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c1bd6130:;
			{
				return false;
			}
		}
		_match_end_1c1bd6075:;
	};
}



inline jule::Bool _1d6762aa9_IsAssign(jule::U64 _44913_id) {
	return (((((((_44913_id == static_cast<jule::U64>(2LLU)) || (_44913_id == static_cast<jule::U64>(30LLU))) || (_44913_id == static_cast<jule::U64>(33LLU))) || (_44913_id == static_cast<jule::U64>(20LLU))) || (_44913_id == static_cast<jule::U64>(27LLU))) || (_44913_id == static_cast<jule::U64>(3LLU))) || (_44913_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _1d6762d51_IsPostfixOp(jule::Str _46016_kind) {
	{
		auto &expr = _1d6757ad2_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1c1bd830d:;
		if (it != expr.end()) {
			jule::Str &_46112_op = *it;
			{
				if ((_46016_kind == _46112_op)) {
					return true;
				};
			}
			_iter_next_1c1bd830d:;
			++it;
			goto _iter_begin_1c1bd830d;
		}
		_iter_end_1c1bd830d:;
	};
	return false;
}



inline jule::Bool _1d67630e8_IsAssignOp(jule::Str _47015_kind) {
	if (_1d6762d51_IsPostfixOp(_47015_kind)) {
		return true;
	};
	{
		auto &expr = _1d6757e23_AssignOps;
		auto it = expr.begin();
		_iter_begin_1c1bdad16:;
		if (it != expr.end()) {
			jule::Str &_47412_op = *it;
			{
				if ((_47015_kind == _47412_op)) {
					return true;
				};
			}
			_iter_next_1c1bdad16:;
			++it;
			goto _iter_begin_1c1bdad16;
		}
		_iter_end_1c1bdad16:;
	};
	return false;
}



inline jule::Ptr<_1d676389b_File> _1d6764dca_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_1d676389b_File>(_1d676389b_File{._field_Path=_6315_path, });
}



inline _1d6435804_Log _1d6766706_makeErr(jule::I64 _11012_row, jule::I64 _11022_col, jule::Ptr<_1d676389b_File>& _11033_f, jule::Str _11043_fmt, jule::Slice<jule::Any> _11056_args) {
	return _1d6435804_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11012_row, ._field_Column=_11022_col, ._field_Path=_11033_f.get()._field_Path, ._field_Text=_1d6435c44_Logf(_11043_fmt,jule::Any(_11056_args)), };
}



inline jule::Bool _1d6766a8b_bytesHasPrefix(jule::Slice<jule::U8>& _12020_bytes, jule::Str _12035_prefix) {
	if ((_12020_bytes.len() < _12035_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12035_prefix;
		auto it = expr.begin();
		_iter_begin_1c1beb288:;
		if (it != expr.end()) {
			jule::I64 _1249_i = it - expr.begin();
			{
				if ((_12020_bytes[_1249_i] != _12035_prefix[_1249_i])) {
					return false;
				};
			}
			_iter_next_1c1beb288:;
			++it;
			_1249_i++;
			goto _iter_begin_1c1beb288;
		}
		_iter_end_1c1beb288:;
	};
	return true;
}



inline jule::Str _1d6766dcc_floatFmtE(jule::Slice<jule::U8>& _13215_txt, jule::I64 _13232_i) {
	jule::Str _13242_lit = jule::Str();
	(_13232_i)++;
	if ((_13232_i >= _13215_txt.len())) {
		return _13242_lit;
	};
	jule::U8 _13813_b = _13215_txt[_13232_i];;
	if ((_13813_b == '_')) {
		return _13242_lit;
	};
	if (((_13813_b == '+') || (_13813_b == '-'))) {
		(_13232_i)++;
		if ((_13232_i >= _13215_txt.len())) {
			return _13242_lit;
		};
		if ((_13215_txt[_13232_i] == '_')) {
			return _13242_lit;
		};
	};
	jule::I64 _1529_first = _13232_i;;
	for (; (_13232_i < _13215_txt.len()); (_13232_i)++) {
		{
			_13813_b=_13215_txt[_13232_i];
			if (((_13813_b != '_') && (!(_1d676202b_IsDecimal(_13813_b))))) {
				goto _iter_end_1c1bee9ea;
			};
		}
	_iter_next_1c1bee9ea:;
	}
	_iter_end_1c1bee9ea:;;
	if ((_13232_i == _1529_first)) {
		_13242_lit = jule::Str();
		return _13242_lit;
	};
	_13242_lit = static_cast<jule::Str>(_13215_txt.slice(0LL,_13232_i));
	return _13242_lit;
}



inline jule::Str _1d6767262_floatFmtP(jule::Slice<jule::U8>& _16615_txt, jule::I64 _16628_i) {
	return _1d6766dcc_floatFmtE(_16615_txt,_16628_i);
}



inline jule::Str _1d67675a3_floatFmtDotnp(jule::Slice<jule::U8>& _17019_txt, jule::I64 _17036_i) {
	if ((_17019_txt[_17036_i] != '.')) {
		return jule::Str();
	};
	(_17036_i)++;
	_julec_label_loop:;
	for (; (_17036_i < _17019_txt.len()); (_17036_i)++) {
		{
			jule::U8 _17813_b = _17019_txt[_17036_i];;
			{
				
				if ((_17813_b == '_') || _1d676202b_IsDecimal(_17813_b)) {
					_case_begin_1c1c02cb7:;
					{
						goto _iter_next_1c1c014d0;
					}
				}
				else if (_1d676dbb4_isFloatFmtP(_17813_b,_17036_i)) {
					_case_begin_1c1c02d2d:;
					{
						return _1d6767262_floatFmtP(_17019_txt,_17036_i);
					}
				}
				else {
					_case_begin_1c1c02c51:;
					{
						goto _iter_end_1c1c014d0;
					}
				}
				_match_end_1c1c02bda:;
			};
		}
	_iter_next_1c1c014d0:;
	}
	_iter_end_1c1c014d0:;;
	return jule::Str();
}



inline jule::Str _1d67678e4_floatFmtDotfp(jule::Slice<jule::U8>& _19119_txt, jule::I64 _19136_i) {
	_19136_i+=2LL;
	return _1d6766dcc_floatFmtE(_19119_txt,_19136_i);
}



inline jule::Str _1d6767c35_floatFmtDotp(jule::Slice<jule::U8>& _19618_txt, jule::I64 _19635_i) {
	(_19635_i)++;
	return _1d6766dcc_floatFmtE(_19618_txt,_19635_i);
}



inline jule::Str _1d676cee3_floatNum(jule::Slice<jule::U8>& _20114_txt, jule::I64 _20131_i) {
	jule::Str _20141_lit = jule::Str();
	(_20131_i)++;
	if ((_20131_i >= _20114_txt.len())) {
		_20141_lit = static_cast<jule::Str>(_20114_txt);
		return _20141_lit;
	};
	if ((_20114_txt[_20131_i] == '_')) {
		(_20131_i)--;
		_20141_lit = static_cast<jule::Str>(_20114_txt.slice(0LL,_20131_i));
		return _20141_lit;
	};
	for (; (_20131_i < _20114_txt.len()); (_20131_i)++) {
		{
			jule::U8 _21113_b = _20114_txt[_20131_i];;
			if (((_20131_i > 1LL) && ((_21113_b == 'e') || (_21113_b == 'E')))) {
				_20141_lit = _1d6766dcc_floatFmtE(_20114_txt,_20131_i);
				return _20141_lit;
			};
			if (((_21113_b != '_') && (!(_1d676202b_IsDecimal(_21113_b))))) {
				goto _iter_end_1c1c055d3;
			};
		}
	_iter_next_1c1c055d3:;
	}
	_iter_end_1c1c055d3:;;
	if ((_20131_i == 1LL)) {
		return _20141_lit;
	};
	_20141_lit = static_cast<jule::Str>(_20114_txt.slice(0LL,_20131_i));
	return _20141_lit;
}



inline jule::Str _1d676d28a_commonNum(jule::Slice<jule::U8>& _22615_txt) {
	jule::Str _22630_lit = jule::Str();
	jule::I64 _22713_i = 0LL;;
	_julec_label_loop:;
	for (; (_22713_i < _22615_txt.len()); (_22713_i)++) {
		{
			jule::U8 _23013_b = _22615_txt[_22713_i];;
			{
				
				if ((_23013_b == '.')) {
					_case_begin_1c1c09d24:;
					{
						_22630_lit = _1d676cee3_floatNum(_22615_txt,_22713_i);
						return _22630_lit;
					}
				}
				else if ((_23013_b == '_')) {
					_case_begin_1c1c09d9b:;
					{
						goto _iter_next_1c1c090a9;
					}
				}
				else if (_1d676d873_isFloatFmtE(_23013_b,_22713_i)) {
					_case_begin_1c1c09e23:;
					{
						_22630_lit = _1d6766dcc_floatFmtE(_22615_txt,_22713_i);
						return _22630_lit;
					}
				}
				else if ((!(_1d676202b_IsDecimal(_23013_b)))) {
					_case_begin_1c1c09e9a:;
					{
						goto _iter_end_1c1c090a9;
					}
				}
				_match_end_1c1c09c47:;
			};
		}
	_iter_next_1c1c090a9:;
	}
	_iter_end_1c1c090a9:;;
	if ((_22713_i == 0LL)) {
		return _22630_lit;
	};
	_22630_lit = static_cast<jule::Str>(_22615_txt.slice(0LL,_22713_i));
	return _22630_lit;
}



inline jule::Str _1d676d532_binaryNum(jule::Slice<jule::U8>& _24915_txt) {
	jule::Str _24930_lit = jule::Str();
	if ((!(_1d6766a8b_bytesHasPrefix(_24915_txt,jule::Str("0b", 2))))) {
		_24930_lit = jule::Str();
		return _24930_lit;
	};
	if ((_24915_txt.len() < 2LL)) {
		return _24930_lit;
	};
	;
	jule::I64 _25813_i = 2LL;;
	for (; (_25813_i < _24915_txt.len()); (_25813_i)++) {
		{
			if (((_24915_txt[_25813_i] != '_') && (!(_1d67622c3_IsBinary(_24915_txt[_25813_i]))))) {
				goto _iter_end_1c1c0d586;
			};
		}
	_iter_next_1c1c0d586:;
	}
	_iter_end_1c1c0d586:;;
	if ((_25813_i == 2LL)) {
		return _24930_lit;
	};
	_24930_lit = static_cast<jule::Str>(_24915_txt.slice(0LL,_25813_i));
	return _24930_lit;
}



inline jule::Bool _1d676d873_isFloatFmtE(jule::U8 _27116_b, jule::I64 _27125_i) {
	return ((_27125_i > 0LL) && ((_27116_b == 'e') || (_27116_b == 'E')));
}



inline jule::Bool _1d676dbb4_isFloatFmtP(jule::U8 _27516_b, jule::I64 _27525_i) {
	return ((_27525_i > 0LL) && ((_27516_b == 'p') || (_27516_b == 'P')));
}



inline jule::Bool _1d676e005_isFloatFmtDotnp(jule::Slice<jule::U8>& _27921_txt, jule::I64 _27938_i) {
	if ((_27921_txt[_27938_i] != '.')) {
		return false;
	};
	(_27938_i)++;
	_julec_label_loop:;
	for (; (_27938_i < _27921_txt.len()); (_27938_i)++) {
		{
			jule::U8 _28613_b = _27921_txt[_27938_i];;
			{
				
				if ((_28613_b == '_') || _1d676202b_IsDecimal(_28613_b)) {
					_case_begin_1c1c12e81:;
					{
						goto _iter_next_1c1c10ea1;
					}
				}
				else if (_1d676dbb4_isFloatFmtP(_28613_b,_27938_i)) {
					_case_begin_1c1c12ee7:;
					{
						return true;
					}
				}
				else {
					_case_begin_1c1c12e1a:;
					{
						goto _iter_end_1c1c10ea1;
					}
				}
				_match_end_1c1c12da4:;
			};
		}
	_iter_next_1c1c10ea1:;
	}
	_iter_end_1c1c10ea1:;;
	return false;
}



inline jule::Bool _1d676e346_isFloatFmtDotp(jule::Slice<jule::U8>& _30020_txt, jule::I64 _30033_i) {
	{
		
		if ((_30020_txt.len() < 3LL)) {
			_case_begin_1c1c14c85:;
			{
				goto _case_begin_1c1c14548;
			}
		}
		else if ((_30020_txt[_30033_i] != '.')) {
			_case_begin_1c1c14548:;
			{
				goto _case_begin_1c1c145ae;
			}
		}
		else if (((_30020_txt[(_30033_i + 1LL)] != 'p') && (_30020_txt[(_30033_i + 1LL)] != 'P'))) {
			_case_begin_1c1c145ae:;
			{
				return false;
			}
		}
		else {
			_case_begin_1c1c144d2:;
			{
				return true;
			}
		}
		_match_end_1c1c14405:;
	};
}



inline jule::Bool _1d676e687_isFloatFmtDotfp(jule::Slice<jule::U8>& _31321_txt, jule::I64 _31334_i) {
	{
		
		if ((_31321_txt.len() < 4LL)) {
			_case_begin_1c1c17095:;
			{
				goto _case_begin_1c1c168d0;
			}
		}
		else if ((_31321_txt[_31334_i] != '.')) {
			_case_begin_1c1c168d0:;
			{
				goto _case_begin_1c1c16946;
			}
		}
		else if (((_31321_txt[(_31334_i + 1LL)] != 'f') && (_31321_txt[(_31334_i + 1LL)] != 'F'))) {
			_case_begin_1c1c16946:;
			{
				goto _case_begin_1c1c169ac;
			}
		}
		else if (((_31321_txt[(_31334_i + 2LL)] != 'p') && (_31321_txt[(_31334_i + 1LL)] != 'P'))) {
			_case_begin_1c1c169ac:;
			{
				return false;
			}
		}
		else {
			_case_begin_1c1c16391:;
			{
				return true;
			}
		}
		_match_end_1c1c162b4:;
	};
}



inline jule::Str _1d676ead8_octalNum(jule::Slice<jule::U8>& _32814_txt) {
	jule::Str _32829_lit = jule::Str();
	if ((_32814_txt[0LL] != '0')) {
		_32829_lit = jule::Str();
		return _32829_lit;
	};
	if ((_32814_txt.len() < 2LL)) {
		return _32829_lit;
	};
	jule::I64 _33613_octalStart = 1LL;;
	jule::Bool _33813_o = false;;
	if ((_32814_txt[1LL] == 'o')) {
		if ((_32814_txt.len() < 3LL)) {
			return _32829_lit;
		};
		(_33613_octalStart)++;
		_33813_o=true;
	};
	jule::I64 _34713_i = _33613_octalStart;;
	for (; (_34713_i < _32814_txt.len()); (_34713_i)++) {
		{
			jule::U8 _34913_b = _32814_txt[_34713_i];;
			if ((_34913_b == '.')) {
				if (_33813_o) {
					_32829_lit = jule::Str();
					return _32829_lit;
				};
				_32829_lit = _1d676cee3_floatNum(_32814_txt,_34713_i);
				return _32829_lit;
			};
			if (_1d676d873_isFloatFmtE(_34913_b,_34713_i)) {
				_32829_lit = _1d6766dcc_floatFmtE(_32814_txt,_34713_i);
				return _32829_lit;
			};
			if (((_34913_b != '_') && (!(_1d676256a_IsOctal(_34913_b))))) {
				goto _iter_end_1c1c1bdbe;
			};
		}
	_iter_next_1c1c1bdbe:;
	}
	_iter_end_1c1c1bdbe:;;
	if ((_34713_i == _33613_octalStart)) {
		return _32829_lit;
	};
	_32829_lit = static_cast<jule::Str>(_32814_txt.slice(0LL,_34713_i));
	return _32829_lit;
}



inline jule::Str _1d676ed80_hexNum(jule::Slice<jule::U8>& _37012_txt) {
	jule::Str _37027_lit = jule::Str();
	if ((_37012_txt.len() < 3LL)) {
		return _37027_lit;
	};
	if (((_37012_txt[0LL] != '0') || ((_37012_txt[1LL] != 'x') && (_37012_txt[1LL] != 'X')))) {
		return _37027_lit;
	};
	;
	jule::I64 _37913_i = 2LL;;
	_julec_label_loop:;
	for (; (_37913_i < _37012_txt.len()); (_37913_i)++) {
		{
			jule::U8 _38213_b = _37012_txt[_37913_i];;
			{
				
				if (_1d676e346_isFloatFmtDotp(_37012_txt,_37913_i)) {
					_case_begin_1c1c22a1d:;
					{
						_37027_lit = _1d6767c35_floatFmtDotp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_1d676e687_isFloatFmtDotfp(_37012_txt,_37913_i)) {
					_case_begin_1c1c22a95:;
					{
						_37027_lit = _1d67678e4_floatFmtDotfp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_1d676dbb4_isFloatFmtP(_38213_b,_37913_i)) {
					_case_begin_1c1c22b1c:;
					{
						_37027_lit = _1d6767262_floatFmtP(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (_1d676e005_isFloatFmtDotnp(_37012_txt,_37913_i)) {
					_case_begin_1c1c22b94:;
					{
						_37027_lit = _1d67675a3_floatFmtDotnp(_37012_txt,_37913_i);
						return _37027_lit;
					}
				}
				else if (((_38213_b != '_') && (!(_1d6762812_IsHex(_38213_b))))) {
					_case_begin_1c1c22c1b:;
					{
						goto _iter_end_1c1c21c2b;
					}
				}
				_match_end_1c1c22930:;
			};
		}
	_iter_next_1c1c21c2b:;
	}
	_iter_end_1c1c21c2b:;;
	if ((_37913_i == 2LL)) {
		return _37027_lit;
	};
	_37027_lit = static_cast<jule::Str>(_37012_txt.slice(0LL,_37913_i));
	return _37027_lit;
}



inline jule::Str _1d67701c1_hexEscape(jule::Slice<jule::U8>& _40315_txt, jule::I64 _40328_n) {
	jule::Str _40338_seq = jule::Str();
	if ((_40315_txt.len() < _40328_n)) {
		return _40338_seq;
	};
	;
	jule::I64 _40913_i = 2LL;;
	for (; (_40913_i < _40328_n); (_40913_i)++) {
		{
			if ((!(_1d6762812_IsHex(_40315_txt[_40913_i])))) {
				return _40338_seq;
			};
		}
	_iter_next_1c1c25834:;
	}
	_iter_end_1c1c25834:;;
	_40338_seq=static_cast<jule::Str>(_40315_txt.slice(0LL,_40328_n));
	return _40338_seq;
}



inline jule::Str _1d6770468_bigUnicodePointEscape(jule::Slice<jule::U8>& _42127_txt) {
	return _1d67701c1_hexEscape(_42127_txt,10LL);
}



inline jule::Str _1d6770732_littleUnicodePointEscape(jule::Slice<jule::U8>& _42630_txt) {
	return _1d67701c1_hexEscape(_42630_txt,6LL);
}



inline jule::Str _1d67708db_hexByteEscape(jule::Slice<jule::U8>& _43119_txt) {
	return _1d67701c1_hexEscape(_43119_txt,4LL);
}



inline jule::Str _1d6770b72_byteEscape(jule::Slice<jule::U8>& _43616_txt) {
	jule::Str _43631_seq = jule::Str();
	if ((_43616_txt.len() < 4LL)) {
		return _43631_seq;
	};
	if ((((!(_1d676256a_IsOctal(_43616_txt[1LL]))) || (!(_1d676256a_IsOctal(_43616_txt[2LL])))) || (!(_1d676256a_IsOctal(_43616_txt[3LL]))))) {
		return _43631_seq;
	};
	_43631_seq = static_cast<jule::Str>(_43616_txt.slice(0LL,4LL));
	return _43631_seq;
}



inline jule::Slice<_1d6435804_Log> _1d677566b_Lex(jule::Ptr<_1d676389b_File> _82512_f, jule::I64 _82522_mode) {
	if ((_82512_f == nullptr)) {
		return nullptr;
	};
	_1d6771359_lex _83013_lex = _1d6771359_lex{._field_mode=_82522_mode, ._field_file=_82512_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1d6773dea_newLine(&_83013_lex);
	_1d6771de8_lex(&_83013_lex);
	if ((_83013_lex._field_errors.len() > 0LL)) {
		return _83013_lex._field_errors;
	};
	_82512_f.get()._field_Tokens=_83013_lex._field_tokens;
	return nullptr;
}



inline void _1be456d15_lshiftUnsig(_1be3e8c63_Const& _58721_c, _1be3e8c63_Const& _58732_x) {
	jule::U64 _5889_l = _1be450d64_AsU64(&_58721_c);;
	jule::U64 _5899_r = _1be450d64_AsU64(&_58732_x);;
	_1be4515c3_SetU64(&_58721_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1be457112_rshiftUnsig(_1be3e8c63_Const& _59321_c, _1be3e8c63_Const& _59332_x) {
	jule::U64 _5949_l = _1be450d64_AsU64(&_59321_c);;
	jule::U64 _5959_r = _1be450d64_AsU64(&_59332_x);;
	_1be4515c3_SetU64(&_59321_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::I64 _1c0004032_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1c000b743_Len64(_6119_x)));
}



inline jule::I64 _1c0005088_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1c0005c26_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));
}



inline jule::I64 _1c000597e_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1c00046d6__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1c0005c26_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1c0004d35__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1c000b49b_Len32(jule::U32 _35214_x) {
	jule::I64 _35224_n = jule::I64();
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		_35224_n=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		_35224_n+=8LL;
	};
	_35224_n = static_cast<jule::I64>((_35224_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return _35224_n;
}



inline jule::I64 _1c000b743_Len64(jule::U64 _36614_x) {
	jule::I64 _36624_n = jule::I64();
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		_36624_n=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		_36624_n+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		_36624_n+=8LL;
	};
	_36624_n = static_cast<jule::I64>((_36624_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return _36624_n;
}



inline std::tuple<jule::U64,jule::U64> _1c000c403_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	jule::U64 _41540_sum = jule::U64();
	jule::U64 _41550_carryout = jule::U64();
	_41540_sum=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	_41550_carryout=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(_41540_sum)))) >> 63LLU));
	return std::make_tuple(_41540_sum,_41550_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1c000da86_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	jule::U64 _49928_hi = jule::U64();
	jule::U64 _49937_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49928_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49937_lo=static_cast<jule::U64>((_49910_x * _49918_y));
	return std::make_tuple(_49928_hi,_49937_lo);
}



inline jule::U32 _1bee2a40e_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));
}



inline jule::F32 _1bee2a6ea_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));
}



inline jule::U64 _1bee2a992_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));
}



inline jule::F64 _1bee2acb1_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1bee2d3bd_Frexp(jule::F64 _4714_f) {
	jule::F64 _4724_frac = jule::F64();
	jule::I64 _4735_exp = jule::I64();
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1c1e1abd3:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		else if (_1bee98c96_IsInf(_4714_f,0LL) || _1bee91992_IsNaN(_4714_f)) {
			_case_begin_1c1e1ac5a:;
			{
				_4724_frac = _4714_f;
				_4735_exp = 0LL;
				return std::make_tuple(_4724_frac,_4735_exp);
			}
		}
		_match_end_1c1e1aae5:;
	};
	std::tie(_4714_f,_4735_exp) = _1bee9a3a2_normalize(_4714_f);
	jule::U64 _5613_x = _1bee2a992_F64Bits(_4714_f);;
	_4735_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4724_frac=static_cast<jule::F64>(_1bee2acb1_F64FromBits(_5613_x));
	return std::make_tuple(_4724_frac,_4735_exp);
}



inline jule::F64 _1bee90a5c_NaN(void) {
	return static_cast<jule::F64>(_1bee2acb1_F64FromBits(9221120237041090561LLU));
}



inline jule::Bool _1bee91992_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);
}



inline jule::F64 _1bee93433_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1bee2acb1_F64FromBits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1bee2acb1_F64FromBits(18442240474082181120LLU));
}



inline jule::Bool _1bee98c96_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1bee9a3a2_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1beeb1ee0_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1beeaa56b_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1bee91992_IsNaN(_1118_x) || _1bee98c96_IsInf(_1118_x,1LL)) {
			_case_begin_1c1e5de35:;
			{
				return _1118_x;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1c1e5deac:;
			{
				return static_cast<jule::F64>(_1bee90a5c_NaN());
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1c1e5e034:;
			{
				return static_cast<jule::F64>(_1bee93433_Inf(-1LL));
			}
		}
		_match_end_1c1e5dd69:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1bee2d3bd_Frexp(_1118_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1beeb1ee0_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1bee2acb1_F64FromBits(static_cast<jule::U64>((_1bee2a992_F64Bits(_438_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1c0017430_Modf(jule::F64 _449_f) {
	jule::F64 _4419_integer = jule::F64();
	jule::F64 _4433_frac = jule::F64();
	;
	jule::F64 _469_absF = _1beeb1ee0_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1c1ed1161:;
		}
		_iter_end_1c1ed1161:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4419_integer = _4713_i;
	_4433_frac = static_cast<jule::F64>((_449_f - _4713_i));
	return std::make_tuple(_4419_integer,_4433_frac);
}



inline jule::F64 _1c0017be4_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1bee2d3bd_Frexp(_449_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1beeaa56b_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1be976cb3_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1be98b46a_genericFtoa(jule::Slice<jule::U8>::alloc(0LL,_1beb20973_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL)),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));
}



inline jule::Slice<jule::U8> _1be98b46a_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1beb1953d_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1c0d7959e:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1bee2a40e_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1beb1953d_floatInfo>)((&(_1be966c3c_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c0d7978b:;
			{
				_8313_bits=static_cast<jule::U64>(_1bee2a992_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1beb1953d_floatInfo>)((&(_1be96c1c6_f64info))));
			}
		}
		else {
			_case_begin_1c0d78e72:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1c0d77b30:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1c0d7ce32:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1c0d8041d:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1c0d805a5:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1c0d7e41c:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1c0d7e340:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c0d7d97c:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1c0d7937e:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1c0d7cdcc:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1bea33259_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1beae6d12_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1bea1b341_decimalSlice _13213_digs = _1bea1b341_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1be9d2181_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c0d84752:;
				{
					_8258_prec=static_cast<jule::I64>(_1beb20973_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c0d847c9:;
				{
					_8258_prec=static_cast<jule::I64>(_1beb20973_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c0d84873:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1c0d838b6:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c0d86dd6:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c0d86743:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1c0d8691e:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1c0d867cb:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1bedae173_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1bee15938_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1be9e40e9_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1bea1a9e4_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);
}



inline jule::Slice<jule::U8> _1be9e40e9_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1beb1953d_floatInfo& _18327_flt) {
	_1c0044803_decimal _18413_d = _1c0044803_decimal{};;
	_1c00449e0_assign(&_18413_d, _1835_mant);
	_1c0044b22_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1bea1b341_decimalSlice _18713_digs = _1bea1b341_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1bea1cbb1_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1bea1b341_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c0d8bb55:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c0d8e4a4:;
				{
					_18233_prec=static_cast<jule::I64>(_1beb20973_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c0d8e51a:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1c0d8db24:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c0d8d53b:;
				{
					_1c0044eb8_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c0d8d5a2:;
				{
					_1c0044eb8_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c0d8d629:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1c0044eb8_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1c0d8d481:;
		};
		_18713_digs=_1bea1b341_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1bea1a9e4_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);
}



inline jule::Slice<jule::U8> _1bea1a9e4_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1bea1b341_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1c0d94531:;
			{
				return _1bea31b1a_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c0d94597:;
			{
				return _1bea322be_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1c0d9460d:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1bea31b1a_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1bea322be_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_1beb20973_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1c0d943dd:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1bea1cbb1_roundShortest(_1c0044803_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1beb1953d_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_1c0044803_decimal _28713_upper = _1c0044803_decimal{};;
	_1c00449e0_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1c0044b22_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1c0044803_decimal _30613_lower = _1c0044803_decimal{};;
	_1c00449e0_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1c0044b22_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1c0da260a;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1c0da7951:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1c0da79c8:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1c0da7a50:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1c0da7885:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1c0daabeb:;
					{
						_1c0044eb8_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1c0daac62:;
					{
						_1c0044c54_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1c0daacd9:;
					{
						_1c0044d86_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1c0daab52:;
			};
		}
	_iter_next_1c0da260a:;
	}
	_iter_end_1c0da260a:;;
}



inline jule::Slice<jule::U8> _1bea31b1a_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1bea1b341_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1beb1a594_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1c0db0ae1:;
		}
		_iter_end_1c0db0ae1:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1c0db36b5:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1c0db4980:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1c0db2d02:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1c0db1262:;
	};
	return _39613_dst;
}



inline jule::Slice<jule::U8> _1bea322be_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1bea1b341_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1beb1a594_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1c0db75cb:;
		}
		_iter_end_1c0db75cb:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1c0db8d3b:;
		}
		_iter_end_1c0db8d3b:;;
	};
	return _45113_dst;
}



inline jule::Slice<jule::U8> _1bea33259_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1beb1953d_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	std::tie(_48413_dst,std::ignore) = _1c00469c0_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	std::tie(_48413_dst,std::ignore) = _1c00469c0_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
	return _48413_dst;
}



inline jule::Slice<jule::U8> _1beae6d12_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1beb1953d_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1c0dbe0d8:;
	}
	_iter_end_1c0dbe0d8:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1c0dc3ebc:;
		}
		_iter_end_1c0dc3ebc:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1c0dc67d8:;
		}
		_iter_end_1c0dc67d8:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1beb7b6e3_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1c0dc8c2a:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1c0dcb3e2:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1c0dc8e8e:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1c0dc6e15:;
	};
	return _50613_dst;
}



inline jule::I64 _1beb1a594_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1beb20973_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1beb7b6e3_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1beba1493_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	if (_5118_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1c0dd11c7:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1c0dd1073:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1beb7b6e3_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1c0dd2e43:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1beb7b6e3_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1c0dd2c56:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1beb7b6e3_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1c0dd2ccd:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c0dd28b0:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1c0dd27d3:;
					};
				};
			}
		}
		else {
			_case_begin_1c0dd02c5:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1c0dd0270:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1c0dd7b18:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c0dd7255:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1c0dd751e:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1c0dd7398:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c0dd760c:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c0dd8cb2:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1c0dd8c5c:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1c0dd9cc4:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1c0ddb424:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1beb7b6e3_lower(_10912_c)) && (_1beb7b6e3_lower(_10912_c) <= 'z'))) {
						_case_begin_1c0ddb2e2:;
						{
							_11017_d=static_cast<jule::U8>(((_1beb7b6e3_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1c0ddb358:;
						{
							goto _iter_next_1c0dd9cc4;
						}
					}
					else {
						_case_begin_1c0ddad5d:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1c0ddace7:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					return std::make_tuple(_10013_maxVal,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1c0dd9cc4:;
			++it;
			goto _iter_begin_1c0dd9cc4;
		}
		_iter_end_1c0dd9cc4:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1bebc3a37_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1beba1493_parseUint(_14618_s,_14630_base,_14645_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1bec506b8_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1beba1493_parseUint(_17217_s,_17225_base,_17240_bitSize);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1be967d1a_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	jule::F64 _4157_f = jule::F64();
	jule::Bool _4165_ok = jule::Bool();
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			_4157_f=static_cast<jule::F64>(_1bee2acb1_F64FromBits(9223372036854775808LLU));
		};
		_4165_ok = true;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::I64 _579_clz = _1c0004032_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi;;
	jule::U64 _6323_xLo;;
	std::tie(_6314_xHi,_6323_xLo) = _1c000da86_Mul64(_4122_man,_1bea070c9_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi;;
		jule::U64 _6719_yLo;;
		std::tie(_6714_yHi,_6719_yLo) = _1c000da86_Mul64(_4122_man,_1bea070c9_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
		jule::U64 _6818_mergedHi = _6314_xHi;;
		jule::U64 _6828_mergedLo = (_6323_xLo + _6714_yHi);;
		std::tie(_6818_mergedHi,_6828_mergedLo) = std::make_tuple(_6314_xHi,(_6323_xLo + _6714_yHi));
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			_4157_f = 0LL;
			_4165_ok = false;
			return std::make_tuple(_4157_f,_4165_ok);
		};
		std::tie(_6314_xHi,_6323_xLo) = std::make_tuple(_6818_mergedHi,_6828_mergedLo);
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		_4157_f = 0LL;
		_4165_ok = false;
		return std::make_tuple(_4157_f,_4165_ok);
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	_4157_f = static_cast<jule::F64>(_1bee2acb1_F64FromBits(_10313_retBits));
	_4165_ok = true;
	return std::make_tuple(_4157_f,_4165_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1bed206cd_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	jule::F32 _11057_f = jule::F32();
	jule::Bool _11065_ok = jule::Bool();
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			_11057_f=static_cast<jule::F32>(_1bee2a6ea_F32FromBits(2147483648LLU));
		};
		_11065_ok = true;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::I64 _1329_clz = _1c0004032_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1c000da86_Mul64(_11022_man,_1bea070c9_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1c000da86_Mul64(_11022_man,_1bea070c9_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			_11057_f = 0LL;
			_11065_ok = false;
			return std::make_tuple(_11057_f,_11065_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		_11057_f = 0LL;
		_11065_ok = false;
		return std::make_tuple(_11057_f,_11065_ok);
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	_11057_f = static_cast<jule::F32>(_1bee2a6ea_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	_11065_ok = true;
	return std::make_tuple(_11057_f,_11065_ok);
}



inline jule::I64 _1bec10cd8_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1c0e1389c:;
	}
	_iter_end_1c0e1389c:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1bea30a81_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1c0e182a8:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1c0e18330;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1c0e18330:;
			{
				jule::I64 _8317_caseN = _1bec10cd8_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1bee93433_Inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1c0e183a7:;
			{
				if ((_1bec10cd8_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1bee90a5c_NaN());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1c0e181dc:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1bed5db6c_readFloat(jule::Str _10314_s) {
	jule::U64 _10324_mantissa = jule::U64();
	jule::I64 _10339_exp = jule::I64();
	jule::Bool _10349_neg = jule::Bool();
	jule::Bool _10360_trunc = jule::Bool();
	jule::Bool _10373_hex = jule::Bool();
	jule::I64 _10384_i = jule::I64();
	jule::Bool _10392_ok = jule::Bool();
	if ((_10384_i >= _10314_s.len())) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	{
		
		if ((_10314_s[_10384_i] == '+')) {
			_case_begin_1c0e1e501:;
			{
				(_10384_i)++;
			}
		}
		else if ((_10314_s[_10384_i] == '-')) {
			_case_begin_1c0e1e567:;
			{
				_10349_neg=true;
				(_10384_i)++;
			}
		}
		_match_end_1c0e1e325:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((_10384_i + 2LL) < _10314_s.len()) && (_10314_s[_10384_i] == '0')) && (_1beb7b6e3_lower(_10314_s[(_10384_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		_10384_i+=2LL;
		_11913_expChar='p';
		_10373_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10384_i < _10314_s.len()); (_10384_i)++) {
		{
			jule::U8 _13313_c = _10314_s[_10384_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1c0e2597a:;
					{
						goto _iter_next_1c0e24d75;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1c0e25a02:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1c0e24d75;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1c0e25a79:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1c0e24d75;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=_11713_base;
							_10324_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							_10360_trunc=true;
						};
						goto _iter_next_1c0e24d75;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1beb7b6e3_lower(_13313_c))) && (_1beb7b6e3_lower(_13313_c) <= 'f'))) {
					_case_begin_1c0e25b01:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							_10324_mantissa*=16LLU;
							_10324_mantissa+=static_cast<jule::U64>(((_1beb7b6e3_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							_10360_trunc=true;
						};
						goto _iter_next_1c0e24d75;
					}
				}
				_match_end_1c0e2589d:;
			};
			goto _iter_end_1c0e24d75;
		}
	_iter_next_1c0e24d75:;
	}
	_iter_end_1c0e24d75:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((_10384_i < _10314_s.len()) && (_1beb7b6e3_lower(_10314_s[_10384_i]) == _11913_expChar))) {
		(_10384_i)++;
		if ((_10384_i >= _10314_s.len())) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[_10384_i] == '+')) {
			(_10384_i)++;
		} else if ((_10314_s[_10384_i] == '-')) {
			(_10384_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10384_i >= _10314_s.len()) || (_10314_s[_10384_i] < '0')) || (_10314_s[_10384_i] > '9'))) {
			return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10384_i < _10314_s.len()) && ((('0' <= _10314_s[_10384_i]) && (_10314_s[_10384_i] <= '9')) || (_10314_s[_10384_i] == '_'))); (_10384_i)++) {
			{
				if ((_10314_s[_10384_i] == '_')) {
					goto _iter_next_1c0e3059a;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[_10384_i])) - '0'));
				};
			}
		_iter_next_1c0e3059a:;
		}
		_iter_end_1c0e3059a:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
	};
	if ((_10324_mantissa != 0LLU)) {
		_10339_exp=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	_10392_ok=true;
	return std::make_tuple(_10324_mantissa,_10339_exp,_10349_neg,_10360_trunc,_10373_hex,_10384_i,_10392_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1be9ad6ac_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1be96c1c6_f64info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1c0e3ac37:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1c0e3acae:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1bea601dc_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1bea601dc_f64pow10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1c0e3ad36:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1bea601dc_f64pow10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1c0e3ab7c:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1bea022a0_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1be966c3c_f32info._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1c0e40d5d:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1c0e40dd5:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1bea76e5c_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1bea76e5c_f32pow10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1c0e40e5c:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1bea76e5c_f32pow10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1c0e40ca3:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1bea56b51_atofHex(jule::Str _55112_s, _1beb1953d_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1c0e468ad:;
	}
	_iter_end_1c0e468ad:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1c0e46d75:;
	}
	_iter_end_1c0e46d75:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1c0e489ae:;
	}
	_iter_end_1c0e489ae:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _1be966c3c_f32info)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1bee2a6ea_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1bee2acb1_F64FromBits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1bebca225_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1bea30a81_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1bed5db6c_readFloat(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1bea56b51_atofHex(_61611_s.slice(0LL,_61629_n),_1be966c3c_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1bea022a0_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1bed206cd_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_fUp = 0LL;;
			std::tie(_65321_fUp,_62450_ok) = _1bed206cd_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_fUp))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1c0044803_decimal _66213_d = _1c0044803_decimal{};;
	if ((!(_1bedac4d4_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1bea31400_floatBits(&_66213_d, _1be966c3c_f32info);
	_61621_f=static_cast<jule::F32>(_1bee2a6ea_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1bec50cd4_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1bea30a81_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1bed5db6c_readFloat(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1bea56b51_atofHex(_67411_s.slice(0LL,_67429_n),_1be96c1c6_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1be9ad6ac_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1be967d1a_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_fUp = 0LL;;
			std::tie(_71021_fUp,_68250_ok) = _1be967d1a_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_fUp))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1c0044803_decimal _71913_d = _1c0044803_decimal{};;
	if ((!(_1bedac4d4_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1bea31400_floatBits(&_71913_d, _1be96c1c6_f64info);
	_67421_f=static_cast<jule::F64>(_1bee2acb1_F64FromBits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1bec9b703_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1bebca225_atof32(_73121_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1bec50cd4_atof64(_73121_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1becd9477_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1bec9b703_parseFloatPrefix(_76515_s,_76523_bit_size);
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1bedae173_ryuFtoaFixed32(_1bea1b341_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		std::tie(_4924_d._field_nd,_4924_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1c000b49b_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1beaba2ad_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1c00439de_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1c0043c53_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extraMask)));
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1bee1c27a_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _1bee15938_ryuFtoaFixed64(_1bea1b341_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		std::tie(_12124_d._field_nd,_12124_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1c000b743_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1beaba2ad_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1c0043b21_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1c0043c53_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extraMask)));
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1bee1c27a_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _1bee1c27a_formatDecimal(_1bea1b341_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1beb19a27_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20044_m / 10LLU);;
			jule::U64 _20417_b = (_20044_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20044_m / 10LLU),(_20044_m % 10LL));
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1c227a372:;
	}
	_iter_end_1c227a372:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1c227dd6a:;
	}
	_iter_end_1c227dd6a:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1c22844ad:;
	}
	_iter_end_1c22844ad:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _1be9d2181_ryuFtoaShortest(_1bea1b341_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1beb1953d_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		std::tie(_26125_d._field_nd,_26125_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1c0005c26_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1c004377a_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1c0043538_computeBounds(_26146_mant,_26157_exp,_26168_flt);
	if ((_27326_e2 == 0LL)) {
		_1c004377a_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1beaba2ad_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _1be966c3c_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1c00439de_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1c00439de_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1c00439de_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1c0043b21_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1c0043b21_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1c0043b21_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1c0043c53_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1c0043c53_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1c0043c53_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extraMask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extraMask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extraMask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1c004377a_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _1beaba2ad_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));
}



inline jule::I64 _1beb4745b_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1c0043538_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1beb1953d_floatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39518_mant)),static_cast<jule::U64>(((2LLU * _39518_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39518_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39518_mant)),static_cast<jule::U64>(((4LLU * _39518_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1c004377a_ryuDigits(_1bea1b341_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1c0043d85_divmod1e9(_40936_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1c0043d85_divmod1e9(_40948_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1c0043d85_divmod1e9(_40962_upper);
	if ((_41210_uhi == 0LLU)) {
		_1c00438ac_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1c00438ac_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1c22a4c4d:;
		}
		_iter_end_1c22a4c4d:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1c00438ac_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1c22a703b:;
	}
	_iter_end_1c22a703b:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1c22a49c8:;
	}
	_iter_end_1c22a49c8:;;
}



inline void _1c00438ac_ryuDigits32(_1bea1b341_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45458_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45458_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45458_central / 10LLU),(_45458_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1c22aa913;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45442_lower,_45458_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1c22aa913:;
	}
	_iter_end_1c22aa913:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1c22b2541:;
	}
	_iter_end_1c22b2541:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1c00439de_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	jule::U32 _53450_resM = jule::U32();
	jule::I64 _53461_resE = jule::I64();
	jule::Bool _53472_exact = jule::Bool();
	if ((_53440_q == 0LL)) {
		_53450_resM = static_cast<jule::U32>((_53419_m << 6LLU));
		_53461_resE = static_cast<jule::I64>((_53431_e2 - 6LL));
		_53472_exact = true;
		return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1bea070c9_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1c000da86_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
	_53431_e2+=((_1beb4745b_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	_53450_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53461_resE = _53431_e2;
	_53472_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53450_resM,_53461_resE,_53472_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1c0043b21_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	jule::U64 _56251_resM = jule::U64();
	jule::I64 _56262_resE = jule::I64();
	jule::Bool _56273_exact = jule::Bool();
	if ((_56241_q == 0LL)) {
		_56251_resM = static_cast<jule::U64>((_56220_m << 8LLU));
		_56262_resE = static_cast<jule::I64>((_56232_e2 - 8LL));
		_56273_exact = true;
		return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1bea070c9_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1beb4745b_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1c000da86_Mul64(_56220_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1c000da86_Mul64(_56220_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1c000c403_Add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56251_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56262_resE = _56232_e2;
	_56273_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56251_resM,_56262_resE,_56273_exact);
}



inline jule::Bool _1c0043c53_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1c22c1ece:;
	}
	_iter_end_1c22c1ece:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1c0043d85_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1c004535e_trim(_1c0044803_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1c22c6522:;
	}
	_iter_end_1c22c6522:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _1c0045491_rightShift(_1c0044803_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1c22c98bb:;
				}
				_iter_end_1c22c98bb:;;
				goto _iter_end_1c22c8348;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1c22c8348:;
	}
	_iter_end_1c22c8348:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1c22cc193:;
	}
	_iter_end_1c22cc193:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1c22ccced:;
	}
	_iter_end_1c22ccced:;;
	_46320_a._field_nd=_46513_w;
	_1c004535e_trim(_46320_a);
}



inline jule::Bool _1c00455c3_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);
			};
		}
	_iter_next_1c22d1b26:;
	}
	_iter_end_1c22d1b26:;;
	return false;
}



inline void _1c0045705_leftShift(_1c0044803_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1beb1b562_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1c00455c3_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_1beb1b562_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1c22d54cb:;
	}
	_iter_end_1c22d54cb:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1c22d7ae9:;
	}
	_iter_end_1c22d7ae9:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_1c004535e_trim(_53119_a);
}



inline jule::Bool _1c0045837_shouldRoundUp(_1c0044803_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_57819_a._field_d[_57831_nd] >= '5');
}



inline jule::Str _1c00463b5_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1c004675b_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1c00469c0_fmtBits(nullptr,_6012_i,_6020_base,false,false);
	return _6413_s;
}



inline jule::Str _1c00464e7_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1c004675b_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1c00469c0_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1c0046629_Itoa(jule::I64 _809_i) {
	return _1c00464e7_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);
}



inline jule::Str _1c004675b_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1c004688d_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1c00469c0_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	jule::Slice<jule::U8> _10180_d = jule::Slice<jule::U8>();
	jule::Str _10191_s = jule::Str();
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1c2326ece:;
		}
		_iter_end_1c2326ece:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1c004688d_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1c0005088_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1c2330aed:;
		}
		_iter_end_1c2330aed:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1c233388c:;
		}
		_iter_end_1c233388c:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		_10180_d=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10180_d,_10191_s);
	};
	_10191_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10180_d,_10191_s);
}



inline jule::Str _1be57a026_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c234e204:;
			{
				return _1be55860e_SysInt;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c234e26a:;
			{
				return _1be59cbd6_SysUint;
			}
		}
		else {
			_case_begin_1c234e0d3:;
			{
				return _4515_kind;
			}
		}
		_match_end_1c234e028:;
	};
}



inline jule::I64 _1be581758_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1c2350986:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1c23509ec:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1c23502e3:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1c2350359:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1c23503c0:;
			{
				return _1be5580d1_BitSize;
			}
		}
		else {
			_case_begin_1c235027c:;
			{
				return -1LL;
			}
		}
		_match_end_1c234eed5:;
	};
}



inline jule::Str _1be5a59e1_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1c235259d:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c2352614:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c235267a:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c235278a:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1c2351932:;
			{
				return jule::Str();
			}
		}
		_match_end_1c235247c:;
	};
}



inline jule::Str _1be5b7904_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1c2353923:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c2353989:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c2353a00:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c2353cec:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1c2352e94:;
			{
				return jule::Str();
			}
		}
		_match_end_1c2352d51:;
	};
}



inline jule::Str _1be5e191c_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1c2354e0d:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c2354e74:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1c23544d4:;
			{
				return jule::Str();
			}
		}
		_match_end_1c2354391:;
	};
}



inline jule::Bool _1be7827b1_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _1becd9477_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1be7a1846_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1c23589e4:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1c23598e6:;
			{
				return 64LL;
			}
		}
		_match_end_1c2359c48:;
	};
}



inline jule::I64 _1be852287_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1c235ae03:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1c235ae69:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1c235aee1:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1c235abc2:;
			{
				return 64LL;
			}
		}
		_match_end_1c235aae5:;
	};
}



inline jule::I64 _1be86a02a_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1c235cc6d:;
			{
				return 8LL;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1c235ccd4:;
			{
				return 16LL;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1c235cd5b:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1c235cbb3:;
			{
				return 64LL;
			}
		}
		_match_end_1c235d2e0:;
	};
}



inline void _1be86a756_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _231edcc9a_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1c235dbd6:;
				{
					_1be5580d1_BitSize=64LL;
					_1be55860e_SysInt=jule::Str("i64", 3);
					_1be59cbd6_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1c235e500:;
				{
					_1be5580d1_BitSize=32LL;
					_1be55860e_SysInt=jule::Str("i32", 3);
					_1be59cbd6_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1c235db09:;
		};
	};
}



inline void _1be877d18_init(void) {
	_1be86a756_UpdateTarget();
}



inline jule::F64 _1be906ec9_Min(jule::Str _6112_k) {
	_6112_k=_1be57a026_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c2362349:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c23623b0:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c2361ce9:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c2361d71:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c2361de8:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c2361e70:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1c235ed4c:;
			{
				return 0LL;
			}
		}
		_match_end_1c235eb60:;
	};
}



inline jule::F64 _1be90ed06_Max(jule::Str _8312_k) {
	_8312_k=_1be57a026_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c23620e6:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c2363a43:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c2363aa9:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c2363b20:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c2363b86:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c2363dea:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c2363e61:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c2363ec7:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c236404e:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c23640c6:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1c23638ab:;
			{
				return 0LL;
			}
		}
		_match_end_1c2362811:;
	};
}



inline jule::Bool _1be91b818_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));
}



inline jule::Bool _1be927d0d_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));
}



inline jule::Bool _1be947dc7_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));
}



inline jule::Bool _1be94e494_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));
}



inline jule::Bool _1be5572ab_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));
}



inline jule::Bool _1be50d3b6_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));
}



inline jule::Bool _1be5ce641_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));
}



inline jule::Bool _1be5d01ad_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));
}



inline jule::Bool _1be7c26be_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));
}



inline jule::Bool _1be7c3802_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));
}



inline jule::Bool _1be7c895b_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c236c5b8:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c236c82c:;
			{
				return (_7036_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c236c893:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c236c909:;
			{
				return (_7036_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c236c970:;
			{
				return _1be91b818_IsI8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c236c9d6:;
			{
				return _1be927d0d_IsI16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c236ca4c:;
			{
				return _1be947dc7_IsI32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c236cab3:;
			{
				return _1be94e494_IsI64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c236cb3a:;
			{
				return _1be5572ab_IsU8Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c236cba1:;
			{
				return _1be50d3b6_IsU16Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c236cc28:;
			{
				return _1be5ce641_IsU32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c236cca0:;
			{
				return _1be5d01ad_IsU64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c236cd27:;
			{
				return _1be7c26be_IsF32Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c236cd9e:;
			{
				return _1be7c3802_IsF64Compatible(_7036_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1c236ce26:;
			{
				return (_7036_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1c236ce9d:;
			{
				return (_7036_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1c236c376:;
			{
				return false;
			}
		}
		_match_end_1c236c2aa:;
	};
}



inline jule::Bool _1be7cdab5_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));
}



inline jule::Bool _1be948339_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));
}



inline jule::Bool _1be559357_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));
}



inline jule::Bool _1be78211d_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));
}



inline jule::Bool _1c0047482_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));
}



inline jule::Bool _1c00475b4_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));
}



inline jule::Bool _1c00476e6_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));
}



inline jule::Bool _1c0047828_IsF64Greater(jule::Str _15017_k) {
	return true;
}



inline jule::Bool _1c004795a_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c2375db8:;
			{
				return _1c0047d9a_IsSigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c2375e2e:;
			{
				return _1c0047ecc_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c237612c:;
			{
				return _1c0047ecc_IsUnsigInt(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c2376193:;
			{
				return _1be7cdab5_IsI16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c2376209:;
			{
				return _1be948339_IsI32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c2376281:;
			{
				return _1be559357_IsI64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c2376308:;
			{
				return _1be78211d_IsU16Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c2376380:;
			{
				return _1c0047482_IsU32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c237645c:;
			{
				return _1c00475b4_IsU64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c23764c3:;
			{
				return _1c00476e6_IsF32Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c2376539:;
			{
				return _1c0047828_IsF64Greater(_15527_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c23765a0:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c2375b76:;
			{
				return false;
			}
		}
		_match_end_1c237555a:;
	};
}



inline jule::Bool _1c0047d9a_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));
}



inline jule::Bool _1c0047ecc_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1c004810e_IsInt(jule::Str _4610_k) {
	return (_1c0047d9a_IsSigInt(_4610_k) || _1c0047ecc_IsUnsigInt(_4610_k));
}



inline jule::Bool _1c0048241_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));
}



inline jule::Bool _1c0048373_IsNum(jule::Str _5610_k) {
	return (_1c004810e_IsInt(_5610_k) || _1c0048241_IsFloat(_5610_k));
}



inline jule::Bool _1c00484a5_IsSigNum(jule::Str _6113_k) {
	return (_1c0047d9a_IsSigInt(_6113_k) || _1c0048241_IsFloat(_6113_k));
}



inline jule::Bool _1c00993d5_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);
}



inline jule::I32 _1c0099517_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1c00b69eb_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1d639e43d_DecodeRune(_1811_bytes);
	};
	return _2313_r;
}



inline jule::Str _1c00b618d_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);
}



inline jule::Str _1c00b6446_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4210_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1c00b6d3c_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _1d639e43d_DecodeRune(_4210_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1d63a07a2_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1c23840d5:;
	}
	_iter_end_1c23840d5:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1c00b66dd_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	jule::U8 _6238_seq = jule::U8();
	jule::Bool _6249_ok = jule::Bool();
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6238_seq,_6249_ok);
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1c2388c00:;
			{
				_6238_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c2388c66:;
			{
				_6238_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c2388ccc:;
			{
				_6238_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1c2388d43:;
			{
				_6238_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1c2388dba:;
			{
				_6238_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c2388e42:;
			{
				_6238_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1c2388eb9:;
			{
				_6238_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1c2389041:;
			{
				_6238_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1c23890b8:;
			{
				_6238_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1c2389140:;
			{
				_6238_seq='\v';
			}
		}
		_match_end_1c2388ace:;
	};
	_6249_ok=(_6238_seq != 0LLU);
	return std::make_tuple(_6238_seq,_6249_ok);
}



inline jule::I32 _1c00b69eb_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b;;
	jule::Bool _9313_ok;;
	std::tie(_9310_b,_9313_ok) = _1c00b66dd_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1c238e8c6:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1bebc3a37_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c238e981:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1bebc3a37_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c238e9e7:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1bebc3a37_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1c238d7a4:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1bebc3a37_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));
			}
		}
		_match_end_1c238d74e:;
	};
}



inline jule::Slice<jule::U8> _1c00b6d3c_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _1c00b69eb_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));
}



inline jule::I64 _1bcc6c2a8_findFormatPrefix(jule::Slice<jule::U8>& _922_bytes, jule::I64& _938_start) {
	jule::I64 _1013_i = _938_start;;
	while ((_1013_i < _922_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _1d639e43d_DecodeRune(_922_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1c23d5884:;
	}
	_iter_end_1c23d5884:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1bcc6c63d_getFormatRange(jule::I64& _2624_i, jule::Slice<jule::U8>& _2637_bytes) {
	jule::I64 _279_start = _2624_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2624_i < _2637_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _1d639e43d_DecodeRune(_2637_bytes.slice(_2624_i));
			_2624_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1c23d86ab:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1c23d8733:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2637_bytes.slice(_279_start,_2624_i);
						};
					}
				}
				_match_end_1c23d829e:;
			};
		}
	_iter_next_1c23d77ed:;
	}
	_iter_end_1c23d77ed:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1bcc6c8d5_fmtByDefault(jule::Any& _4518_arg) {
	if ((_4518_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4518_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1c23da702:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1be976cb3_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4518_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1c23da3a0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1be976cb3_FmtFloat(static_cast<jule::F64>(_4518_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1c23d8ab8:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c00464e7_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1c23d8b2e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c00464e7_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1c23da092:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c00464e7_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1c23da108:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c00464e7_FmtInt(static_cast<jule::I64>(_4518_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1c23da16e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c00463b5_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1c23da1d5:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c00463b5_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1c23da24b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c00463b5_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1c23da779:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1c00463b5_FmtUint(static_cast<jule::U64>(_4518_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1c23da7e0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4518_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1c23da856:;
			{
				if (_4518_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1c23d79a7:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4518_arg));
			}
		}
		_match_end_1c23d7952:;
	};
}



inline jule::Slice<jule::U8> _1bcc6cc6a_applyFmtByDefault(jule::I64& _8327_j, jule::Slice<jule::Any>& _8336_args) {
	jule::Any _849_arg = _8336_args[_8327_j];;
	(_8327_j)++;
	return _1bcc6c8d5_fmtByDefault(_849_arg);
}



inline jule::Slice<jule::U8> _1bcc6d155_applyFmt(jule::Slice<jule::U8>& _9118_fmt, jule::I64& _9136_j, jule::Slice<jule::Any>& _9145_args) {
	if ((_9118_fmt.len() == 2LL)) {
		return _1bcc6cc6a_applyFmtByDefault(_9136_j,_9145_args);
	};
	if (((_9118_fmt.len() == 4LL) && (_9118_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9118_fmt;
}



inline jule::Slice<jule::U8> _1bcc6d496_formatBytes(jule::Str _10516_fmt, jule::Slice<jule::Any> _10526_args) {
	jule::Slice<jule::U8> _10613_fmtBytes = static_cast<jule::Slice<jule::U8>>(_10516_fmt);;
	if ((_10526_args.len() == 0LL)) {
		return _10613_fmtBytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10516_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1bcc6c2a8_findFormatPrefix(_10613_fmtBytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1bcc6c2a8_findFormatPrefix(_10613_fmtBytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1bcc6c63d_getFormatRange(_11613_i,_10613_fmtBytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1c23e54ba;
			};
			_11213_bytes=jule::append(_11213_bytes,_1bcc6d155_applyFmt(_11917_format,_11413_j,_10526_args));
			if ((_11413_j >= _10526_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmtBytes.len());
				goto _iter_end_1c23e54ba;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1c23e54ba:;
	}
	_iter_end_1c23e54ba:;;
	if ((_11513_last < _10613_fmtBytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmtBytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1bcc6d7d7_Format(jule::Str _16511_fmt, jule::Slice<jule::Any> _16521_args) {
	return static_cast<jule::Str>(_1bcc6d496_formatBytes(_16511_fmt,jule::Any(_16521_args)));
}



inline jule::Bool _1be4644a4_parameterUsesGenerics(jule::Ptr<_1be45cda4_Param>& _37427_p, jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>& _37439_generics) {
	if (_1be45d4d1_IsSelf(_37427_p.ptr())) {
		return false;
	};
	return _1c0120bdc_kindUsesGenerics(_37427_p.get()._field_Kind.get()._field_Decl.get()._field_Kind,_37439_generics);
}



inline jule::Ptr<_1c010d47c_TypeSymbol> _1be46697e_buildType(jule::Ptr<_1be396a24_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Decl=_9418_t, });
}



inline jule::Ptr<_1c00ce30a_Value> _1be466c6a_buildExpr(jule::Ptr<_1be39b045_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1c00ce30a_Value>(_1c00ce30a_Value{._field_Expr=_10318_expr, });
}



inline jule::Ptr<_1c0108631_TypeAlias> _1be467012_buildTypeAlias(jule::Ptr<_1be3ad178_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1c0108631_TypeAlias>(_1c0108631_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1be46697e_buildType(_11223_decl.get()._field_Kind), });
}



inline jule::Ptr<_1be37971b_Field> _1be467331_buildField(jule::Ptr<_1be3b1764_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1be37971b_Field>(_1be37971b_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1be46697e_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});
}



inline jule::Slice<jule::Ptr<_1be37971b_Field>> _1be4675c8_buildFields(jule::Slice<jule::Ptr<_1be3b1764_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_1be37971b_Field>> _13513_fields = jule::Slice<jule::Ptr<_1be37971b_Field>>::alloc(0LL,_13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1c271e470:;
		if (it != expr.end()) {
			jule::Ptr<_1be3b1764_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1be467331_buildField(_13617_decl));;
			}
			_iter_next_1c271e470:;
			++it;
			goto _iter_begin_1c271e470;
		}
		_iter_end_1c271e470:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1be387251_Struct> _1be467870_buildStruct(jule::Ptr<_1be3b20c2_StructDecl> _14220_decl) {
	return jule::new_ptr<_1be387251_Struct>(_1be387251_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1be4675c8_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });
}



inline jule::Ptr<_1be45cda4_Param> _1be467b17_buildParam(jule::Ptr<_1be3a7518_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1be45cda4_Param>(_1be45cda4_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1be46697e_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});
}



inline jule::Slice<jule::Ptr<_1be45cda4_Param>> _1be467e8b_buildParams(jule::Slice<jule::Ptr<_1be3a7518_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_1be45cda4_Param>> _16613_params = jule::Slice<jule::Ptr<_1be45cda4_Param>>::alloc(0LL,_16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1c27222ca:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a7518_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1be467b17_buildParam(_16717_decl));;
			}
			_iter_next_1c27222ca:;
			++it;
			goto _iter_begin_1c27222ca;
		}
		_iter_end_1c27222ca:;
	};
	return _16613_params;
}



inline jule::Ptr<_1be45c6de_RetType> _1be468233_buildRetType(jule::Ptr<_1be399b37_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1be45c6de_RetType>(_1be45c6de_RetType{._field_Kind=_1be46697e_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});
}



inline jule::Ptr<_1be45e6e1_Fn> _1be4684ca_buildFn(jule::Ptr<_1be3a8838_FnDecl> _18316_decl) {
	return jule::new_ptr<_1be45e6e1_Fn>(_1be45e6e1_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1be468233_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1be467e8b_buildParams(_18316_decl.get()._field_Params), });
}



inline jule::Slice<jule::Ptr<_1be45e6e1_Fn>> _1be468772_buildMethods(jule::Slice<jule::Ptr<_1be3a8838_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_1be45e6e1_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1be45e6e1_Fn>>::alloc(0LL,_20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1c2725c5c:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a8838_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1be4684ca_buildFn(_20317_decl));;
			}
			_iter_next_1c2725c5c:;
			++it;
			goto _iter_begin_1c2725c5c;
		}
		_iter_end_1c2725c5c:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1be47159e_Trait> _1be468a19_buildTrait(jule::Ptr<_1be3b26cc_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1be47159e_Trait>(_1be47159e_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1be468772_buildMethods(_20919_decl.get()._field_Methods), });
}



inline jule::Ptr<_1be472bee_EnumItem> _1be468cb1_buildEnumItem(jule::Ptr<_1be3ae9d7_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1be472bee_EnumItem>(_1be472bee_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1be466c6a_buildExpr(_21822_decl.get()._field_Expr)});
}



inline jule::Slice<jule::Ptr<_1be472bee_EnumItem>> _1be469058_buildEnumItems(jule::Slice<jule::Ptr<_1be3ae9d7_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_1be472bee_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1be472bee_EnumItem>>::alloc(0LL,_22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1c27283e1:;
		if (it != expr.end()) {
			jule::Ptr<_1be3ae9d7_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1be468cb1_buildEnumItem(_22817_decl));;
			}
			_iter_next_1c27283e1:;
			++it;
			goto _iter_begin_1c27283e1;
		}
		_iter_end_1c27283e1:;
	};
	return _22713_items;
}



inline jule::Ptr<_1be4736e4_Enum> _1be469300_buildEnum(jule::Ptr<_1be3b0510_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1be4736e4_Enum>(_1be4736e4_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1be46697e_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1be469058_buildEnumItems(_23418_decl.get()._field_Items)});
}



inline jule::Ptr<_1be474728_TypeEnumItem> _1be469751_buildTypeEnumItem(jule::Ptr<_1be3b1016_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1be474728_TypeEnumItem>(_1be474728_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1be46697e_buildType(_24426_decl.get()._field_Kind)});
}



inline jule::Slice<jule::Ptr<_1be474728_TypeEnumItem>> _1be4699e8_buildTypeEnumItems(jule::Slice<jule::Ptr<_1be3b1016_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_1be474728_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1be474728_TypeEnumItem>>::alloc(0LL,_25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1c272abda:;
		if (it != expr.end()) {
			jule::Ptr<_1be3b1016_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1be469751_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1c272abda:;
			++it;
			goto _iter_begin_1c272abda;
		}
		_iter_end_1c272abda:;
	};
	return _25313_items;
}



inline jule::Ptr<_1be474cde_TypeEnum> _1be469c90_buildTypeEnum(jule::Ptr<_1be3b1214_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1be474cde_TypeEnum>(_1be474cde_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1be4699e8_buildTypeEnumItems(_26022_decl.get()._field_Items)});
}



inline jule::Ptr<_1c0081334_Var> _1be46a037_buildVar(jule::Ptr<_1be3a9817_VarDecl> _26917_decl) {
	return jule::new_ptr<_1c0081334_Var>(_1c0081334_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1be46697e_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1be466c6a_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1be46554e_new(), ._field_Directives=_26917_decl.get()._field_Directives, });
}



inline jule::Slice<jule::Ptr<_1c0081334_Var>> _1be46a2ce_buildVars(jule::Slice<jule::Ptr<_1be3a9817_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1c0081334_Var>> _28713_vars = jule::Slice<jule::Ptr<_1c0081334_Var>>::alloc(0LL,_28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1c272de96:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a9817_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1be46a037_buildVar(_28817_decl));;
			}
			_iter_next_1c272de96:;
			++it;
			goto _iter_begin_1c272de96;
		}
		_iter_end_1c272de96:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1be50ab22_Impl> _1be46a576_buildImpl(jule::Ptr<_1be3b2cd7_Impl> _29418_decl) {
	return jule::new_ptr<_1be50ab22_Impl>(_1be50ab22_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1be468772_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_1be46a2ce_buildVars(_29418_decl.get()._field_Statics)});
}



inline jule::Bool _1be4d7cca_matchConstraint(jule::Str& _14221_c, jule::Ptr<_1c0109324_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1c278a6d9:;
			{
				jule::Ptr<_1c010dceb_Prim> _14513_prim = _1c010b436_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;
				};
				return _1c00484a5_IsSigNum(_14513_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1c278a750:;
			{
				jule::Ptr<_1c010dceb_Prim> _15113_prim = _1c010b436_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;
				};
				return _1c0047ecc_IsUnsigInt(_15113_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1c278a882:;
			{
				jule::Ptr<_1c010dceb_Prim> _15713_prim = _1c010b436_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;
				};
				return _1c0048241_IsFloat(_15713_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1c278a8e8:;
			{
				jule::Ptr<_1c010dceb_Prim> _16313_prim = _1c010b436_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;
				};
				return _1c0048373_IsNum(_16313_prim.get()._field_Kind);
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1c278a95e:;
			{
				return _1c010a721_Mutable(_14234_g.ptr());
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1c278a9c5:;
			{
				return (!(_1c010a721_Mutable(_14234_g.ptr())));
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1c278aa3b:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1c278aaa2:;
			{
				jule::Ptr<_1c010dceb_Prim> _17513_prim = _1c010b436_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1c0048373_IsNum(_17513_prim.get()._field_Kind) || _1c0112030_IsStr(_17513_prim.ptr()));
				};
				if ((_1c010b90e_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;
				};
				jule::Ptr<_1be3b359b_StructIns> _18213_s = _1c010c888_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));
				};
				jule::Ptr<_1be4736e4_Enum> _18913_enm = _1c010bb73_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _1c0048373_IsNum(_1c0109720_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));
				};
				return false;
			}
		}
		else {
			_case_begin_1c278a40e:;
			{
				return false;
			}
		}
		_match_end_1c278a354:;
	};
}



inline jule::Bool _1be4d98c0_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _1be48d27a_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1c2794db9:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;
				};
			}
			_iter_next_1c2794db9:;
			++it;
			goto _iter_begin_1c2794db9;
		}
		_iter_end_1c2794db9:;
	};
	return false;
}



inline jule::Ptr<_1c004b5b8_scopeChecker> _1be4e3b93_newScopeCheckerBase(jule::Ptr<_1c0064504_Sema>& _5929_s, jule::Ptr<_1be462392_FnIns> _5943_owner) {
	return jule::new_ptr<_1c004b5b8_scopeChecker>(_1c004b5b8_scopeChecker{._field_s=_5929_s, ._field_owner=_5943_owner, ._field_table=jule::new_ptr<_1c00c8524_SymbolTable>(), });
}



inline jule::Ptr<_1c004b5b8_scopeChecker> _1be4e4721_newScopeChecker(jule::Ptr<_1c0064504_Sema>& _6725_s, jule::Ptr<_1be462392_FnIns> _6739_owner) {
	jule::Ptr<_1c004b5b8_scopeChecker> _6813_base = _1be4e3b93_newScopeCheckerBase(_6725_s,_6739_owner);;
	_6813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c004b1de_scopeLabel>>>(nullptr);
	_6813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c004b3cb_scopeGoto>>>(nullptr);
	return _6813_base;
}



inline jule::Ptr<_1c004b1de_scopeLabel> _1be4e55ce_findLabelParent(jule::Str _7720_ident, jule::Ptr<_1c004b5b8_scopeChecker> _7736_scope) {
	jule::Ptr<_1c004b1de_scopeLabel> _7813_label = _1c004cd39_findLabelScope(_7736_scope, _7720_ident);;
	while ((_7813_label == nullptr)) {
		{
			if (((_7736_scope.get()._field_parent == nullptr) || (_7736_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_7736_scope=_7736_scope.get()._field_parent;
			_7813_label=_1c004cd39_findLabelScope(_7736_scope, _7720_ident);
		}
	_iter_next_1c27a9ebc:;
	}
	_iter_end_1c27a9ebc:;;
	return _7813_label;
}



inline jule::Bool _1be4d9727_modelIsGotoScope(jule::Any _9121_Model, jule::Ptr<_1c00487b3_Scope>& _9134_sc) {
	{
		auto &_match_expr{ _9121_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be4580e1_FnCallExprModel>>()) {
			_case_begin_1c27abdae:;
			{
				jule::Ptr<_1be4580e1_FnCallExprModel> _9413_fcem = _9121_Model.operator jule::Ptr<_1be4580e1_FnCallExprModel>();;
				if ((_9413_fcem.get()._field_Except == _9134_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c00cd282_Data>>()) {
			_case_begin_1c27abe36:;
			{
				jule::Ptr<_1c00cd282_Data> _9913_d = _9121_Model.operator jule::Ptr<_1c00cd282_Data>();;
				return _1be4d9727_modelIsGotoScope(jule::Any(_9913_d.get()._field_Model),_9134_sc);
			}
		}
		_match_end_1c27abc9e:;
	};
	return false;
}



inline jule::Bool _1be4e659c_stmtIsGotoScope(jule::Any& _10521_stmt, jule::Ptr<_1c00487b3_Scope>& _10534_sc) {
	{
		auto &_match_expr{ _10521_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1c00487b3_Scope>>()) {
			_case_begin_1c27ae09d:;
			{
				return (_10521_stmt.operator jule::Ptr<_1c00487b3_Scope>() == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049066_InfIter>>()) {
			_case_begin_1c27ae114:;
			{
				return (_10521_stmt.operator jule::Ptr<_1c0049066_InfIter>().get()._field_Scope == _10534_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049440_RangeIter>>()) {
			_case_begin_1c27ae17a:;
			{
				jule::Ptr<_1c0049440_RangeIter> _11213_it = _10521_stmt.operator jule::Ptr<_1c0049440_RangeIter>();;
				return ((_11213_it.get()._field_Scope == _10534_sc) || _1be4d9727_modelIsGotoScope(jule::Any(_11213_it.get()._field_Expr.get()._field_Model),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0049253_WhileIter>>()) {
			_case_begin_1c27ae268:;
			{
				jule::Ptr<_1c0049253_WhileIter> _11513_it = _10521_stmt.operator jule::Ptr<_1c0049253_WhileIter>();;
				return (((_11513_it.get()._field_Scope == _10534_sc) || _1be4d9727_modelIsGotoScope(jule::Any(_11513_it.get()._field_Expr),_10534_sc)) || _1be4d9727_modelIsGotoScope(jule::Any(_11513_it.get()._field_Next),_10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c004a496_Match>>()) {
			_case_begin_1c27ae2e0:;
			{
				jule::Ptr<_1c004a496_Match> _12013_m = _10521_stmt.operator jule::Ptr<_1c004a496_Match>();;
				{
					auto &expr = _12013_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1c27b2dd7:;
					if (it != expr.end()) {
						jule::Ptr<_1c004a9e6_Case> &_12116_c = *it;
						{
							if ((_12116_c.get()._field_Scope == _10534_sc)) {
								return true;
							};
							{
								auto &expr = _12116_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1c27b3da5:;
								if (it != expr.end()) {
									jule::Ptr<_1c00cd282_Data> &_12520_expr = *it;
									{
										if (_1be4d9727_modelIsGotoScope(jule::Any(_12520_expr.get()._field_Model),_10534_sc)) {
											return true;
										};
									}
									_iter_next_1c27b3da5:;
									++it;
									goto _iter_begin_1c27b3da5;
								}
								_iter_end_1c27b3da5:;
							};
						}
						_iter_next_1c27b2dd7:;
						++it;
						goto _iter_begin_1c27b2dd7;
					}
					_iter_end_1c27b2dd7:;
				};
				return ((_12013_m.get()._field_Default != nullptr) && (_12013_m.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c0048d79_Conditional>>()) {
			_case_begin_1c27ae367:;
			{
				jule::Ptr<_1c0048d79_Conditional> _13313_c = _10521_stmt.operator jule::Ptr<_1c0048d79_Conditional>();;
				{
					auto &expr = _13313_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1c27b548e:;
					if (it != expr.end()) {
						jule::Ptr<_1c00489a0_If> &_13416_elif = *it;
						{
							if (((_13416_elif.get()._field_Scope == _10534_sc) || _1be4d9727_modelIsGotoScope(jule::Any(_13416_elif.get()._field_Expr),_10534_sc))) {
								return true;
							};
						}
						_iter_next_1c27b548e:;
						++it;
						goto _iter_begin_1c27b548e;
					}
					_iter_end_1c27b548e:;
				};
				return ((_13313_c.get()._field_Default != nullptr) && (_13313_c.get()._field_Default.get()._field_Scope == _10534_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c00cd282_Data>>()) {
			_case_begin_1c27ae3de:;
			{
				jule::Ptr<_1c00cd282_Data> _14113_d = _10521_stmt.operator jule::Ptr<_1c00cd282_Data>();;
				return _1be4d9727_modelIsGotoScope(jule::Any(_14113_d.get()._field_Model),_10534_sc);
			}
		}
		else {
			_case_begin_1c27ac387:;
			{
				return false;
			}
		}
		_match_end_1c27ac332:;
	};
}



inline jule::I64 _1be4e745a_countMatchType(jule::Ptr<_1c004a496_Match>& _14820_m, jule::Ptr<_1c0109324_TypeKind>& _14832_t) {
	jule::I64 _14913_n = 0LL;;
	jule::Str _1509_kind = _1c0109720_Str(_14832_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14820_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c27b84b4:;
		if (it != expr.end()) {
			jule::Ptr<_1c004a9e6_Case> &_15212_c = *it;
			{
				if ((_15212_c == nullptr)) {
					goto _iter_next_1c27b84b4;
				};
				{
					auto &expr = _15212_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1c27b8d55:;
					if (it != expr.end()) {
						jule::Ptr<_1c00cd282_Data> &_15716_expr = *it;
						{
							if ((_15716_expr == nullptr)) {
								goto _iter_end_1c27b84b4;
							};
							if ((_1509_kind == _1c0109720_Str(_15716_expr.get()._field_Model.operator jule::Ptr<_1c0109324_TypeKind>().ptr()))) {
								(_14913_n)++;
							};
						}
						_iter_next_1c27b8d55:;
						++it;
						goto _iter_begin_1c27b8d55;
					}
					_iter_end_1c27b8d55:;
				};
			}
			_iter_next_1c27b84b4:;
			++it;
			goto _iter_begin_1c27b84b4;
		}
		_iter_end_1c27b84b4:;
	};
	return _14913_n;
}



inline jule::Slice<jule::Ptr<_1c00cd282_Data>> _1be505215_getDatasFromTupleData(jule::Ptr<_1c00cd282_Data>& _17231_d) {
	if ((_1c010d0c5_Tup(_17231_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17231_d.get()._field_Model };
			
			if (_match_expr.type_is<jule::Ptr<_1be459d18_TupleExprModel>>()) {
				_case_begin_1c27bd09b:;
				{
					return _17231_d.get()._field_Model.operator jule::Ptr<_1be459d18_TupleExprModel>().get()._field_Datas;
				}
			}
			else {
				_case_begin_1c27ba9a0:;
				{
					jule::Ptr<_1c0113a6a_Tuple> _17821_t = _1c010d0c5_Tup(_17231_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1c00cd282_Data>> _17921_r = jule::Slice<jule::Ptr<_1c00cd282_Data>>::alloc(0LL,_17821_t.get()._field_Types.len());;
					{
						auto &expr = _17821_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1c27bbebd:;
						if (it != expr.end()) {
							jule::Ptr<_1c0109324_TypeKind> _18025_kind = *it;
							{
								_17921_r = jule::alloc_for_append(_17921_r,1);_17921_r.__push(jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=_18025_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1c27bbebd:;
							++it;
							goto _iter_begin_1c27bbebd;
						}
						_iter_end_1c27bbebd:;
					};
					return _17921_r;
				}
			}
			_match_end_1c27ba829:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1c00cd282_Data>>::make({_17231_d});
	};
}



inline jule::Slice<jule::Any> _1be50815d_getExprModels(jule::Any& _19323_m) {
	{
		auto &_match_expr{ _19323_m };
		
		if (_match_expr.type_is<jule::Ptr<_1be39bbc2_TupleExpr>>()) {
			_case_begin_1c27bd4ec:;
			{
				jule::Ptr<_1be39bbc2_TupleExpr> _19617_tup = _19323_m.operator jule::Ptr<_1be39bbc2_TupleExpr>();;
				jule::Slice<jule::Any> _19717_models = jule::Slice<jule::Any>::alloc(0LL,_19617_tup.get()._field_Expr.len());;
				{
					auto &expr = _19617_tup.get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1c27beaa3:;
					if (it != expr.end()) {
						jule::Ptr<_1be39b045_Expr> _19821_expr = *it;
						{
							_19717_models = jule::alloc_for_append(_19717_models,1);_19717_models.__push(_19821_expr.get()._field_Kind);;
						}
						_iter_next_1c27beaa3:;
						++it;
						goto _iter_begin_1c27beaa3;
					}
					_iter_end_1c27beaa3:;
				};
				return _19717_models;
			}
		}
		else {
			_case_begin_1c27baa9e:;
			{
				return jule::Slice<jule::Any>::make({_19323_m});
			}
		}
		_match_end_1c27baa49:;
	};
}



inline jule::Bool _1be508b97_checkMut(jule::Ptr<_1c0064504_Sema>& _20718_s, jule::Ptr<_1c00cd282_Data>& _20729_left, jule::Ptr<_1c00cd282_Data> _20746_right, jule::Ptr<_1d675d511_Token> _20760_op) {
	jule::Bool _20774_ok = jule::Bool();
	{
		
		if ((!(_20729_left.get()._field_Mutable))) {
			_case_begin_1c27c1335:;
			{
				_1c00671b6_pushErr(_20718_s.ptr(), _20760_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else if ((((_20746_right != nullptr) && (!(_20746_right.get()._field_Mutable))) && _1c010a721_Mutable(_20746_right.get()._field_Kind.ptr()))) {
			_case_begin_1c27c1445:;
			{
				if (((_20760_op.get()._field_Kind != jule::Str("=", 1)) && (_1c010c888_Struct(_20746_right.get()._field_Kind.ptr()) != nullptr))) {
					_20774_ok = true;
					return _20774_ok;
				};
				_1c00671b6_pushErr(_20718_s.ptr(), _20760_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_20746_right.get()._field_Kind.ptr()))}));
				_20774_ok = false;
				return _20774_ok;
			}
		}
		else {
			_case_begin_1c27c0c08:;
			{
				_20774_ok = true;
				return _20774_ok;
			}
		}
		_match_end_1c27c02bd:;
	};
}



inline jule::Bool _1be509725_checkAssign(jule::Ptr<_1c0064504_Sema>& _22621_s, jule::Ptr<_1c00cd282_Data>& _22636_left, jule::Ptr<_1c00cd282_Data> _22653_right, jule::Ptr<_1d675d511_Token> _22667_op) {
	jule::Bool _22681_ok = jule::Bool();
	jule::Ptr<_1be462392_FnIns> _2279_f = _1c010c624_Fn(_22636_left.get()._field_Kind.ptr());;
	if ((((_2279_f != nullptr) && (_2279_f.get()._field_Decl != nullptr)) && _2279_f.get()._field_Decl.get()._field_Global)) {
		_1c00671b6_pushErr(_22621_s.ptr(), _22667_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_22681_ok = false;
		return _22681_ok;
	};
	{
		
		if (_1c00cdb45_IsConst(_22636_left.ptr())) {
			_case_begin_1c27c634b:;
			{
				_1c00671b6_pushErr(_22621_s.ptr(), _22667_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1c00674d5_pushSugggestion(_22621_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_22636_left.get()._field_Lvalue))) {
			_case_begin_1c27c6428:;
			{
				_1c00671b6_pushErr(_22621_s.ptr(), _22667_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else if ((!(_1be508b97_checkMut(_22621_s,_22636_left,_22653_right,_22667_op)))) {
			_case_begin_1c27c64a0:;
			{
				_22681_ok = false;
				return _22681_ok;
			}
		}
		else {
			_case_begin_1c27c5bec:;
			{
				_22681_ok = true;
				return _22681_ok;
			}
		}
		_match_end_1c27c5a98:;
	};
}



inline jule::Bool _1be504d91_isValidAstStForNextSt(jule::Any& _24831_n) {
	{
		auto &_match_expr{ _24831_n };
		
		if (_match_expr.type_is<jule::Ptr<_1be3a579c_AssignSt>>()) {
			_case_begin_1c27c655a:;
			{
				return (!(_24831_n.operator jule::Ptr<_1be3a579c_AssignSt>().get()._field_Declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39b045_Expr>>()) {
			_case_begin_1c27c65c1:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c27c7d42:;
			{
				return false;
			}
		}
		_match_end_1c27c812d:;
	};
}



inline jule::Bool _1be4a6b9a_isValidStForNextSt(jule::Any& _25924_st) {
	{
		auto &_match_expr{ _25924_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c0049dd0_Postfix>>() || _match_expr.type_is<jule::Ptr<_1c004a0bc_Assign>>() || _match_expr.type_is<jule::Ptr<_1c004a2a9_MultiAssign>>()) {
			_case_begin_1c27c8eb9:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c00cd282_Data>>()) {
			_case_begin_1c27c9030:;
			{
				{
					auto &_match_expr{ _25924_st.operator jule::Ptr<_1c00cd282_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1be4580e1_FnCallExprModel>>()) {
						_case_begin_1c27ca482:;
						{
							return true;
						}
					}
					else {
						_case_begin_1c27ca41b:;
						{
							return false;
						}
					}
					_match_end_1c27ca1a7:;
				};
			}
		}
		else {
			_case_begin_1c27c88d1:;
			{
				return false;
			}
		}
		_match_end_1c27c87e3:;
	};
}



inline jule::Bool _1be4e3456_stmtIsDef(jule::Any& _27715_st) {
	{
		auto &_match_expr{ _27715_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c27cb120:;
			{
				return true;
			}
		}
		else {
			_case_begin_1c27ca0a8:;
			{
				return false;
			}
		}
		_match_end_1c27ca053:;
	};
}



inline jule::Ptr<_1c0081334_Var> _1c0058eaa_findVarInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1c293cb22:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1c0081334_Var> _4817_v = _1c00c9206_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1c293cb22:;
			++it;
			goto _iter_begin_1c293cb22;
		}
		_iter_end_1c293cb22:;
	};
	return nullptr;
}



inline jule::Ptr<_1c0108631_TypeAlias> _1c00593d9_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1c293e1c8:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1c0108631_TypeAlias> _6017_ta = _1c00c95ad_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1c293e1c8:;
			++it;
			goto _iter_begin_1c293e1c8;
		}
		_iter_end_1c293e1c8:;
	};
	return nullptr;
}



inline jule::Ptr<_1be387251_Struct> _1c00597c4_findStructInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1c294076d:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1be387251_Struct> _7217_s = _1c00c9965_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1c294076d:;
			++it;
			goto _iter_begin_1c294076d;
		}
		_iter_end_1c294076d:;
	};
	return nullptr;
}



inline jule::Ptr<_1be45e6e1_Fn> _1c0059c36_findFnInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1c2941d13:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1be45e6e1_Fn> _8417_f = _1c00c9d1c_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1c2941d13:;
			++it;
			goto _iter_begin_1c2941d13;
		}
		_iter_end_1c2941d13:;
	};
	return nullptr;
}



inline jule::Ptr<_1be47159e_Trait> _1c005a044_findTraitInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1c294240c:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1be47159e_Trait> _9617_t = _1c00ca12a_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1c294240c:;
			++it;
			goto _iter_begin_1c294240c;
		}
		_iter_end_1c294240c:;
	};
	return nullptr;
}



inline jule::Ptr<_1be4736e4_Enum> _1c005a385_findEnumInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1c29437b5:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1be4736e4_Enum> _10817_e = _1c00ca438_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1c29437b5:;
			++it;
			goto _iter_begin_1c29437b5;
		}
		_iter_end_1c29437b5:;
	};
	return nullptr;
}



inline jule::Ptr<_1be474cde_TypeEnum> _1c005a6c6_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1c2944b7e:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1be474cde_TypeEnum> _12017_e = _1c00ca746_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1c2944b7e:;
			++it;
			goto _iter_begin_1c2944b7e;
		}
		_iter_end_1c2944b7e:;
	};
	return nullptr;
}



inline jule::Bool _1c00618db_isStdPackage(jule::Str _35017_f, jule::Str _35025_p) {
	return _1d63616b9_HasPrefix(_35017_f,_1d63a86de_Join(jule::Slice<jule::Str>::make({_231edd130_PathStdlib,_35025_p})));
}



inline jule::Bool _1c0062645_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type_is<jule::Ptr<_1c0081334_Var>>()) {
			_case_begin_1c295bc2e:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
			_case_begin_1c295bc95:;
			{
				jule::Ptr<_1be459378_StructSubIdentExprModel> _1717_model = _1228_m.operator jule::Ptr<_1be459378_StructSubIdentExprModel>();;
				return _1c0062645_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be458e5a_TraitSubIdentExprModel>>()) {
			_case_begin_1c295bd0b:;
			{
				jule::Ptr<_1be458e5a_TraitSubIdentExprModel> _2017_model = _1228_m.operator jule::Ptr<_1be458e5a_TraitSubIdentExprModel>();;
				return _1c0062645_isValidModelForRef(_2017_model.get()._field_Expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457651_UnaryExprModel>>()) {
			_case_begin_1c295be82:;
			{
				jule::Ptr<_1be457651_UnaryExprModel> _2317_unary = _1228_m.operator jule::Ptr<_1be457651_UnaryExprModel>();;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1c010b90e_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1c010b69a_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;
				};
				return _1c0062645_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);
			}
		}
		else {
			_case_begin_1c29566b8:;
			{
				return false;
			}
		}
		_match_end_1c2956663:;
	};
}



inline _1d6435804_Log _1c0062ada_compilerErr(jule::Ptr<_1d675d511_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1d6435804_Log _4213_log = _1d6435804_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_1d6435c44_Logf(_4144_fmt,jule::Any(_4157_args)), };;
	if (_4132_line) {
		_4213_log._field_Line=_1d6764a78_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;
}



inline jule::Bool _1c0062e2b_impIsLookupable(jule::Ptr<_1c005b3a8_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _1c005dc7e_existIdent(_5521_i.ptr(), _5537_ident);
		};
	};
	return _5521_i.get()._field_ImportAll;
}



inline void _1c0063228_appendRetVars(jule::Slice<jule::Ptr<_1c0081334_Var>>& _6723_dest, jule::Ptr<_1be462392_FnIns>& _6742_f) {
	if ((_1be45eb53_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c0109324_TypeKind>> _7213_types = _1be4634b4_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1c2965683:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _7317_ident = *it;
			{
				if ((_1d6760ca5_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1d676104c_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1c2965683;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_1c0081334_Var>(_1c0081334_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1c00ce30a_Value>(_1c00ce30a_Value{._field_Data=jule::new_ptr<_1c00cd282_Data>()}), }));;
			}
			_iter_next_1c2965683:;
			++it;
			_7310_i++;
			goto _iter_begin_1c2965683;
		}
		_iter_end_1c2965683:;
	};
}



inline void _1c00634d1_appendParamVars(jule::Slice<jule::Ptr<_1c0081334_Var>>& _9325_dest, jule::Ptr<_1be462392_FnIns>& _9344_f) {
	if ((_9344_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9344_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c2966d16:;
		if (it != expr.end()) {
			jule::Ptr<_1be4614c3_ParamIns> _9817_p = *it;
			{
				if ((_1d6760ca5_IsIgnoreIdent(_9817_p.get()._field_Decl.get()._field_Ident) || _1d676104c_IsAnonIdent(_9817_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1c2966d16;
				};
				jule::Ptr<_1c0081334_Var> _10317_v = jule::new_ptr<_1c0081334_Var>(_1c0081334_Var{._field_Scope=_9344_f.get()._field_Scope, ._field_Token=_9817_p.get()._field_Decl.get()._field_Token, ._field_Ident=_9817_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_9817_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_9817_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(), ._field_Value=jule::new_ptr<_1c00ce30a_Value>(_1c00ce30a_Value{._field_Data=jule::new_ptr<_1c00cd282_Data>()}), });;
				{
					
					if (_1be45d4d1_IsSelf(_9817_p.get()._field_Decl.ptr())) {
						_case_begin_1c296aad9:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1c0108de5_Kind>(_9344_f.get()._field_Owner, 0)});
							_10317_v.get()._field_Reference=(!(_1be45d745_IsRef(_9817_p.get()._field_Decl.ptr())));
							if (_1be45d745_IsRef(_9817_p.get()._field_Decl.ptr())) {
								_10317_v.get()._field_Ident=_10317_v.get()._field_Ident.slice(1LL);
								_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c0112580_Sptr>(_1c0112580_Sptr{._field_Elem=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_CppIdent=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10317_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_9817_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1c296a7cb:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c0112edc_Slc>(_1c0112edc_Slc{._field_Elem=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_CppIdent=_9817_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_9817_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1c2969445:;
						{
							_10317_v.get()._field_Kind.get()._field_Kind=_9817_p.get()._field_Kind;
						}
					}
					_match_end_1c296a677:;
				};
				_9325_dest = jule::alloc_for_append(_9325_dest,1);_9325_dest.__push(_10317_v);;
			}
			_iter_next_1c2966d16:;
			++it;
			goto _iter_begin_1c2966d16;
		}
		_iter_end_1c2966d16:;
	};
}



inline void _1c00637ab_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c0108631_TypeAlias>>& _15334_dest, jule::Ptr<_1be462392_FnIns>& _15359_f) {
	jule::I64 _15413_size = _15359_f.get()._field_Generics.len();;
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15413_size+=_15359_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15413_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15359_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c2970ced:;
		if (it != expr.end()) {
			jule::I64 _16310_i = it - expr.begin();
			jule::Ptr<_1c0107ae7_InsGeneric> _16317_g = *it;
			{
				jule::Ptr<_1be3a4108_GenericDecl> _16417_decl = _15359_f.get()._field_Decl.get()._field_Generics[_16310_i];;
				_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1c0108631_TypeAlias>(_1c0108631_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16417_decl.get()._field_Token, ._field_Ident=_16417_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=_16317_g.get()._field_Kind}), }));;
			}
			_iter_next_1c2970ced:;
			++it;
			_16310_i++;
			goto _iter_begin_1c2970ced;
		}
		_iter_end_1c2970ced:;
	};
	if ((_15359_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1be3b359b_StructIns> _17617_owner = _15359_f.get()._field_Owner;;
		{
			auto &expr = _17617_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c297266d:;
			if (it != expr.end()) {
				jule::I64 _17714_i = it - expr.begin();
				jule::Ptr<_1c0107ae7_InsGeneric> _17721_g = *it;
				{
					jule::Ptr<_1be3a4108_GenericDecl> _17821_decl = _17617_owner.get()._field_Decl.get()._field_Generics[_17714_i];;
					_15334_dest = jule::alloc_for_append(_15334_dest,1);_15334_dest.__push(jule::new_ptr<_1c0108631_TypeAlias>(_1c0108631_TypeAlias{._field_Scope=_15359_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_17821_decl.get()._field_Token, ._field_Ident=_17821_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=_17721_g.get()._field_Kind}), }));;
				}
				_iter_next_1c297266d:;
				++it;
				_17714_i++;
				goto _iter_begin_1c297266d;
			}
			_iter_end_1c297266d:;
		};
	};
}



inline jule::Ptr<_1c00c8524_SymbolTable> _1c0063b0d_findFile(jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>& _19118_files, jule::Ptr<_1d676389b_File>& _19142_handler) {
	{
		auto &expr = _19118_files;
		auto it = expr.begin();
		_iter_begin_1c297165b:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _19217_fl = *it;
			{
				if ((_19217_fl.get()._field_File == _19142_handler)) {
					return _19217_fl;
				};
			}
			_iter_next_1c297165b:;
			++it;
			goto _iter_begin_1c297165b;
		}
		_iter_end_1c297165b:;
	};
	return nullptr;
}



inline void _1c0064070_pushSugggestion(_1d6435804_Log* _20031_log, jule::Str _20042_fmt, jule::Slice<jule::Any> _20055_args) {
	_20031_log->_field_Suggestion=_1d6435c44_Logf(_20042_fmt,jule::Any(_20055_args));
}



inline jule::Bool _1c00a27c8_traitHasReferenceReceiver(jule::Ptr<_1be47159e_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c2b8a5cd:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1c2b8a5cd;
				};
				jule::Ptr<_1be45cda4_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_1be45d745_IsRef(_3313_p.ptr()) && _1be45d4d1_IsSelf(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1c2b8a5cd:;
			++it;
			goto _iter_begin_1c2b8a5cd;
		}
		_iter_end_1c2b8a5cd:;
	};
	return false;
}



inline jule::Bool _1c0099803_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1c00cd282_Data>& _4132_d) {
	jule::Str _429_value = _1be976cb3_FmtFloat(static_cast<jule::F64>(_1be4510c8_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _1be7827b1_CheckBitFloat(_429_value,static_cast<jule::I64>(_1be581758_BitsizeOf(_4120_kind)));
}



inline jule::Bool _1c0099935_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1c00cd282_Data>& _4630_d) {
	jule::F64 _479_min = _1be906ec9_Min(_4618_kind);;
	jule::F64 _489_max = _1be90ed06_Max(_4618_kind);;
	{
		
		if (_1be452c34_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1c2b922e9:;
			{
				jule::F64 _5113_x = _1be45088b_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1c0017430_Modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1be4524e7_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1c2b92360:;
			{
				jule::F64 _5813_x = _1be4510c8_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1be452283_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1c2b923c6:;
			{
				jule::F64 _6313_x = _1be4510c8_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1c2b921a6:;
	};
	return false;
}



inline jule::Bool _1c00b5d80_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1c00cd282_Data>& _6932_d) {
	jule::F64 _709_max = _1be90ed06_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1c00993d5_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1be44edda_ReadI64(_6932_d.get()._field_Constant.ptr()))));
	};
	{
		
		if (_1be452c34_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1c2507dd5:;
			{
				jule::F64 _7713_x = _1be45088b_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1c0017430_Modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1be4524e7_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1c2507e4b:;
			{
				jule::F64 _8713_x = _1be4510c8_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1be452283_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1c2507eb2:;
			{
				jule::F64 _9213_x = _1be4510c8_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1c251164c:;
	};
	return false;
}



inline jule::Bool _1c00b5eb2_intAssignable(jule::Str _9818_kind, jule::Ptr<_1c00cd282_Data>& _9830_d) {
	{
		
		if (_1c0047d9a_IsSigInt(_9818_kind)) {
			_case_begin_1c2585a89:;
			{
				return _1c0099935_sigAssignable(_9818_kind,_9830_d);
			}
		}
		else if (_1c0047ecc_IsUnsigInt(_9818_kind)) {
			_case_begin_1c25853d5:;
			{
				return _1c00b5d80_unsigAssignable(_9818_kind,_9830_d);
			}
		}
		else {
			_case_begin_1c25843d4:;
			{
				return false;
			}
		}
		_match_end_1c2582b63:;
	};
}



inline jule::Ptr<_1be36332b_Directive> _1c0103a6b_findDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>& _420623_directives, jule::Str _420654_d) {
	{
		auto &expr = _420623_directives;
		auto it = expr.begin();
		_iter_begin_1c2bbe2d2:;
		if (it != expr.end()) {
			jule::Ptr<_1be36332b_Directive> _420717_dr = *it;
			{
				if ((_420717_dr.get()._field_Tag.get()._field_Kind == _420654_d)) {
					return _420717_dr;
				};
			}
			_iter_next_1c2bbe2d2:;
			++it;
			goto _iter_begin_1c2bbe2d2;
		}
		_iter_end_1c2bbe2d2:;
	};
	return nullptr;
}



inline jule::Any _1c0103e01_findBuiltinsImport(jule::Str _421523_ident, jule::Ptr<_1c005b3a8_ImportInfo> _421535_imp) {
	return jule::Any(_1bcc70278_findPackageBuiltinDef(_421535_imp.get()._field_LinkPath,_421523_ident));
}



inline void _1c0104110_fitBitsize(jule::Ptr<_1c00cd282_Data>& _422220_d) {
	jule::Ptr<_1c010dceb_Prim> _422313_prim = _1c010b436_Prim(_422220_d.get()._field_Kind.ptr());;
	jule::I64 _42249_z = _1be581758_BitsizeOf(_1c010e15e_Str(_422313_prim.ptr()));;
	if ((_42249_z == 64LL)) {
		return;;
	};
	jule::I64 _422913_k = 0LL;;
	{
		
		if (_1be452283_IsI64(_422220_d.get()._field_Constant.ptr())) {
			_case_begin_1c2bc2192:;
			{
				_422913_k=static_cast<jule::I64>(_1be852287_BitsizeOfInt(static_cast<jule::I64>(_1be44edda_ReadI64(_422220_d.get()._field_Constant.ptr()))));
				if ((_422913_k > _42249_z)) {
					_422313_prim.get()._field_Kind=_1be5a59e1_IntFromBits(_422913_k);
				};
			}
		}
		else if (_1be4524e7_IsU64(_422220_d.get()._field_Constant.ptr())) {
			_case_begin_1c2bc2219:;
			{
				_422913_k=static_cast<jule::I64>(_1be86a02a_BitsizeOfUint(static_cast<jule::U64>(_1be45014e_ReadU64(_422220_d.get()._field_Constant.ptr()))));
				if ((_422913_k > _42249_z)) {
					_422313_prim.get()._field_Kind=_1be5b7904_UintFromBits(_422913_k);
				};
			}
		}
		else if (_1be452c34_IsF64(_422220_d.get()._field_Constant.ptr())) {
			_case_begin_1c2bc2291:;
			{
				_422913_k=static_cast<jule::I64>(_1be7a1846_BitsizeOfFloat(static_cast<jule::F64>(_1be45088b_ReadF64(_422220_d.get()._field_Constant.ptr()))));
				if ((_422913_k > _42249_z)) {
					_422313_prim.get()._field_Kind=_1be5e191c_FloatFromBits(_422913_k);
				};
			}
		}
		_match_end_1c2bc20c6:;
	};
}



inline void _1c010440c_makeStructLitAlloc(jule::Ptr<_1c00cd282_Data>& _424928_d, jule::Ptr<_1be457a2a_StructLitExprModel>& _424943_lit) {
	_424928_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c0112580_Sptr>(_1c0112580_Sptr{._field_Elem=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_424943_lit.get()._field_Strct, 0)})}), 7)});
	_424928_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be457c17_AllocStructLitExprModel>(_1be457c17_AllocStructLitExprModel{._field_Lit=_424943_lit}));
}



inline jule::Ptr<_1c0081334_Var> _1c010474d_buildErrorVar(jule::Ptr<_1c00487b3_Scope>& _426023_s, jule::Ptr<_1be3a0313_FnCallExpr>& _426039_fc) {
	return jule::new_ptr<_1c0081334_Var>(_1c0081334_Var{._field_Scope=_426023_s, ._field_Token=_426039_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1c00ce30a_Value>(_1c00ce30a_Value{._field_Data=jule::new_ptr<_1c00cd282_Data>()}), });
}



inline jule::Any _1c0104a8e_findBuiltinsSema(jule::Str _427921_ident, jule::Ptr<_1c0064504_Sema> _427937_s) {
	{
		auto &expr = _427937_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c2bc7e9a:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _428017_imp = *it;
			{
				if ((_428017_imp.get()._field_ImportAll || _1c005dc7e_existIdent(_428017_imp.ptr(), _427921_ident))) {
					jule::Any _428221_def = _1c0103e01_findBuiltinsImport(_427921_ident,_428017_imp);;
					if ((_428221_def != nullptr)) {
						return jule::Any(_428221_def);
					};
				};
			}
			_iter_next_1c2bc7e9a:;
			++it;
			goto _iter_begin_1c2bc7e9a;
		}
		_iter_end_1c2bc7e9a:;
	};
	jule::Str _429013_ppath = _1d6764292_Dir(_427937_s.get()._field_file.get()._field_File.ptr());;
	if (_1d63616b9_HasPrefix(_429013_ppath,_231edd130_PathStdlib)) {
		(_429013_ppath).mut_slice(_231edd130_PathStdlib.len());;
		_429013_ppath=(jule::Str("std", 3) + _1d63a492c_Replace(_429013_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1bcc70278_findPackageBuiltinDef(_429013_ppath,_427921_ident));
	};
	return nullptr;
}



inline jule::Bool _1c0104d36_isOkForShifting(jule::Ptr<_1c00cd282_Data>& _430425_d) {
	if (_1c00cdb45_IsConst(_430425_d.ptr())) {
		{
			
			if (_1be452283_IsI64(_430425_d.get()._field_Constant.ptr())) {
				_case_begin_1c2bcbaa3:;
				{
					return (_1be44edda_ReadI64(_430425_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else if (_1be4524e7_IsU64(_430425_d.get()._field_Constant.ptr())) {
				_case_begin_1c2bcb366:;
				{
					return true;
				}
			}
			else if (_1be452c34_IsF64(_430425_d.get()._field_Constant.ptr())) {
				_case_begin_1c2bcb3cc:;
				{
					return (_1be45088b_ReadF64(_430425_d.get()._field_Constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1c2bcb300:;
				{
					return false;
				}
			}
			_match_end_1c2bcb223:;
		};
	};
	jule::Ptr<_1c010dceb_Prim> _43179_prim = _1c010b436_Prim(_430425_d.get()._field_Kind.ptr());;
	return ((_43179_prim != nullptr) && _1c004810e_IsInt(_1c010e15e_Str(_43179_prim.ptr())));
}



inline jule::Bool _1c01051dd_isInstancedStruct(jule::Ptr<_1be3b359b_StructIns> _432122_s) {
	return (_432122_s.get()._field_Decl.get()._field_Generics.len() == _432122_s.get()._field_Generics.len());
}



inline jule::Bool _1c01054a7_isPtrArithmeticCompatibleInt(jule::Ptr<_1c00cd282_Data>& _432538_d) {
	if (_1c00cdb45_IsConst(_432538_d.ptr())) {
		return _1c00b5eb2_intAssignable(jule::Str("int", 3),_432538_d);
	};
	_1c00b71e4_typeCompatibilityChecker _432913_tcc = _1c00b71e4_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_432538_d.get()._field_Kind, };;
	return _1c00b87cd_check(&_432913_tcc);
}



inline void _1c01056e9_applyCastKindModel(jule::Ptr<_1c00cd282_Data>& _433828_d, jule::Ptr<_1c0109324_TypeKind>& _433843_t) {
	_433828_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be457e04_CastingExprModel>(_1be457e04_CastingExprModel{._field_Expr=_433828_d.get()._field_Model, ._field_Kind=_433843_t, ._field_ExprKind=_433828_d.get()._field_Kind}));
}



inline void _1c01059a2_applyCastKind(jule::Ptr<_1c00cd282_Data>& _434623_d, jule::Ptr<_1c0109324_TypeKind>& _434638_t) {
	_1c01056e9_applyCastKindModel(_434623_d,_434638_t);
	_434623_d.get()._field_Kind=_434638_t;
}



inline jule::Ptr<_1c00cd282_Data> _1c0105ba0_buildVoidData(void) {
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("void", 4)), 6)}), });
}



inline jule::Str _1c0105e69_checkDataForIntegerIndexing(jule::Ptr<_1c00cd282_Data>& _435937_d) {
	jule::Str _435949_err_fmt = jule::Str();
	if ((_435937_d == nullptr)) {
		_435949_err_fmt = jule::Str();
		return _435949_err_fmt;
	};
	{
		
		if ((_1c010b436_Prim(_435937_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1c2bd2735:;
			{
				_435949_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _435949_err_fmt;
			}
		}
		else if ((!(_1c004810e_IsInt(_1c010e15e_Str(_1c010b436_Prim(_435937_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1c2bd279b:;
			{
				_435949_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _435949_err_fmt;
			}
		}
		else if (_1c00cdb45_IsConst(_435937_d.ptr())) {
			_case_begin_1c2bd2812:;
			{
				if ((_1be4510c8_AsF64(_435937_d.get()._field_Constant.ptr()) < 0LL)) {
					_435949_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _435949_err_fmt;
				};
			}
		}
		else if ((_1c010b436_Prim(_435937_d.get()._field_Kind.ptr()) == nullptr) || _1c00cdb45_IsConst(_435937_d.ptr()) || (_1be57a026_RealKindOf(_1c010e15e_Str(_1c010b436_Prim(_435937_d.get()._field_Kind.ptr()).ptr())) != _1be57a026_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1c2bd2878:;
			{
				jule::Ptr<_1c0109324_TypeKind> _437617_t = jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)});;
				_1c01059a2_applyCastKind(_435937_d,_437617_t);
			}
		}
		_match_end_1c2bd2d0c:;
	};
	_435949_err_fmt = jule::Str();
	return _435949_err_fmt;
}



inline void _1c0106233_applyCastModelByEnum(jule::Ptr<_1c00cd282_Data>& _438530_d, jule::Ptr<_1be4736e4_Enum> _438544_e) {
	if ((_438544_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1c010dceb_Prim> _43899_p = _1c010b436_Prim(_438544_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1c0112030_IsStr(_43899_p.ptr())) {
		return;;
	};
	_1c01056e9_applyCastKindModel(_438530_d,_438544_e.get()._field_Kind.get()._field_Kind);
}



inline void _1c01064db_castConstByType(jule::Str& _439621_t, jule::Ptr<_1c00cd282_Data>& _439634_d) {
	{
		
		if (_1c0047d9a_IsSigInt(_439621_t)) {
			_case_begin_1c2bd8609:;
			{
				{
					auto _match_expr{ _1be581758_BitsizeOf(_1be57a026_RealKindOf(_439621_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1c2bd930d:;
						{
							_1be45134d_SetI64(_439634_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1be450b00_AsI64(_439634_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1c2bd9374:;
						{
							_1be45134d_SetI64(_439634_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1be450b00_AsI64(_439634_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1c2bd93da:;
						{
							_1be45134d_SetI64(_439634_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1be450b00_AsI64(_439634_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1c2bd9451:;
						{
							_1be45134d_SetI64(_439634_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1be450b00_AsI64(_439634_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c2bd92a8:;
				};
			}
		}
		else if (_1c0047ecc_IsUnsigInt(_439621_t)) {
			_case_begin_1c2bd8681:;
			{
				{
					auto _match_expr{ _1be581758_BitsizeOf(_1be57a026_RealKindOf(_439621_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1c2bdc92c:;
						{
							_1be4515c3_SetU64(_439634_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1be450d64_AsU64(_439634_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1c2bdc993:;
						{
							_1be4515c3_SetU64(_439634_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1be450d64_AsU64(_439634_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1c2bdca09:;
						{
							_1be4515c3_SetU64(_439634_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1be450d64_AsU64(_439634_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1c2bdca70:;
						{
							_1be4515c3_SetU64(_439634_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1be450d64_AsU64(_439634_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c2bdbe9d:;
				};
			}
		}
		else if (_1c0048241_IsFloat(_439621_t)) {
			_case_begin_1c2bd8708:;
			{
				{
					auto _match_expr{ _1be581758_BitsizeOf(_1be57a026_RealKindOf(_439621_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1c2be0d3c:;
						{
							_1be451d43_SetF64(_439634_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1be4510c8_AsF64(_439634_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1c2be1090:;
						{
							_1be451d43_SetF64(_439634_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1be4510c8_AsF64(_439634_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c2be05cd:;
				};
			}
		}
		_match_end_1c2bd84c7:;
	};
}



inline void _1c01069e7_updateModelToGenericIns(jule::Any& _443033_m, jule::Ptr<_1be462392_FnIns>& _443052_f) {
	{
		auto &_match_expr{ _443033_m };
		
		if (_match_expr.type_is<jule::Ptr<_1be462392_FnIns>>()) {
			_case_begin_1c2be228e:;
			{
				_443033_m=static_cast<jule::Any>(_443052_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459378_StructSubIdentExprModel>>()) {
			_case_begin_1c2be14d0:;
			{
				_443033_m.operator jule::Ptr<_1be459378_StructSubIdentExprModel>().get()._field_Method=_443052_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be459565_StructStaticIdentExprModel>>()) {
			_case_begin_1c2be1546:;
			{
				_443033_m.operator jule::Ptr<_1be459565_StructStaticIdentExprModel>().get()._field_Method=_443052_f;
			}
		}
		_match_end_1c2bda463:;
	};
}



inline jule::Bool _1c0106c39_pushSubIdentFromExpr(jule::Any _444129_expr, jule::Ptr<_1be397739_SubIdentTypeDecl>& _444150_t) {
	{
		auto &_match_expr{ _444129_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1be39d0ad_IdentExpr>>()) {
			_case_begin_1c2be444a:;
			{
				jule::Ptr<_1be39d0ad_IdentExpr> _444417_e = _444129_expr.operator jule::Ptr<_1be39d0ad_IdentExpr>();;
				_444150_t.get()._field_Idents = jule::alloc_for_append(_444150_t.get()._field_Idents,1);_444150_t.get()._field_Idents.__push(jule::new_ptr<_1be3970da_IdentTypeDecl>(_1be3970da_IdentTypeDecl{._field_Token=_444417_e.get()._field_Token, ._field_Ident=_444417_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be39e851_SubIdentExpr>>()) {
			_case_begin_1c2be44b1:;
			{
				jule::Ptr<_1be39e851_SubIdentExpr> _445017_e = _444129_expr.operator jule::Ptr<_1be39e851_SubIdentExpr>();;
				if ((!(_1c0106c39_pushSubIdentFromExpr(_445017_e.get()._field_Expr.get()._field_Kind,_444150_t)))) {
					return false;
				};
				_444150_t.get()._field_Idents = jule::alloc_for_append(_444150_t.get()._field_Idents,1);_444150_t.get()._field_Idents.__push(jule::new_ptr<_1be3970da_IdentTypeDecl>(_1be3970da_IdentTypeDecl{._field_Token=_445017_e.get()._field_Ident, ._field_Ident=_445017_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1c2be437e:;
			{
				return false;
			}
		}
		_match_end_1c2be4329:;
	};
	return true;
}



inline jule::Bool _1c0120bdc_kindUsesGenerics(jule::Any& _157322_k, jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>& _157340_generics) {
	{
		auto &expr = _157340_generics;
		auto it = expr.begin();
		_iter_begin_1c2edb5aa:;
		if (it != expr.end()) {
			jule::Ptr<_1be3a4108_GenericDecl> &_157412_g = *it;
			{
				if (static__1c01207e1_exist(_157412_g.get()._field_Ident,_157322_k)) {
					return true;
				};
			}
			_iter_next_1c2edb5aa:;
			++it;
			goto _iter_begin_1c2edb5aa;
		}
		_iter_end_1c2edb5aa:;
	};
	return false;
}



inline jule::Bool _1c0121072_hasDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>& _158322_directives, jule::Str _158353_tag) {
	{
		auto &expr = _158322_directives;
		auto it = expr.begin();
		_iter_begin_1c2edc6ee:;
		if (it != expr.end()) {
			jule::Ptr<_1be36332b_Directive> _158417_dr = *it;
			{
				if ((_158417_dr.get()._field_Tag.get()._field_Kind == _158353_tag)) {
					return true;
				};
			}
			_iter_next_1c2edc6ee:;
			++it;
			goto _iter_begin_1c2edc6ee;
		}
		_iter_end_1c2edc6ee:;
	};
	return false;
}



inline jule::Bool _1c0121319_canGetPtr(jule::Ptr<_1c00cd282_Data>& _159219_d) {
	if (((!(_159219_d.get()._field_Lvalue)) || _1c00cdb45_IsConst(_159219_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1c010c624_Fn(_159219_d.get()._field_Kind.ptr()) != nullptr) || (_1c010bb73_Enum(_159219_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1c2ede35a:;
			{
				return false;
			}
		}
		else {
			_case_begin_1c2eddb1d:;
			{
				return true;
			}
		}
		_match_end_1c2edda0d:;
	};
}



inline jule::Bool _1c0121638_isValidForSptrType(jule::Ptr<_1c0109324_TypeKind>& _160528_t) {
	jule::Ptr<_1be3b359b_StructIns> _160613_s = _1c010c888_Struct(_160528_t.ptr());;
	if ((((_160613_s != nullptr) && (_160613_s.get()._field_Decl != nullptr)) && _160613_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1c01218d0_isValidForRef(jule::Ptr<_1c0109324_TypeKind>& _161423_t) {
	return (_1c010c624_Fn(_161423_t.ptr()) == nullptr);
}



inline jule::Bool _1c0121b99_isBuiltinStrConvertable(jule::Ptr<_1c0109324_TypeKind>& _161733_t) {
	return (((!(_1c010a4ac_Void(_161733_t.ptr()))) && (_1c010c624_Fn(_161733_t.ptr()) == nullptr)) && (_1c010d0c5_Tup(_161733_t.ptr()) == nullptr));
}



inline jule::Str _1c0121e1e_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1d675d511_Token>>& _162127_tokens) {
	jule::Str _162213_s = _162127_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _162127_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1c2ee30b7:;
		if (it != expr.end()) {
			jule::Ptr<_1d675d511_Token> &_162312_token = *it;
			{
				_162213_s+=jule::Str("::", 2);
				_162213_s+=_162312_token.get()._field_Kind;
			}
			_iter_next_1c2ee30b7:;
			++it;
			goto _iter_begin_1c2ee30b7;
		}
		_iter_end_1c2ee30b7:;
	};
	return _162213_s;
}



inline jule::Ptr<_1c010dceb_Prim> _1c01222c6_buildPrimType(jule::Str _163018_kind) {
	return jule::new_ptr<_1c010dceb_Prim>(_1c010dceb_Prim{._field_Kind=_163018_kind});
}



inline jule::Ptr<_1be387251_Struct> _1c012256d_getStructFromKind(jule::Ptr<_1c0109324_TypeKind> _163626_k) {
	{
		
		if ((_163626_k == nullptr)) {
			_case_begin_1c2ee43a4:;
			{
				return nullptr;
			}
		}
		else if ((_1c010c888_Struct(_163626_k.ptr()) != nullptr)) {
			_case_begin_1c2ee441a:;
			{
				return _1c010c888_Struct(_163626_k.ptr()).get()._field_Decl;
			}
		}
		else if ((_1c010b69a_Sptr(_163626_k.ptr()) != nullptr)) {
			_case_begin_1c2ee4481:;
			{
				return _1c012256d_getStructFromKind(_1c010b69a_Sptr(_163626_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1c010c3b0_Slc(_163626_k.ptr()) != nullptr)) {
			_case_begin_1c2ee44e7:;
			{
				return _1c012256d_getStructFromKind(_1c010c3b0_Slc(_163626_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1c010c14b_Arr(_163626_k.ptr()) != nullptr)) {
			_case_begin_1c2ee47a0:;
			{
				return _1c012256d_getStructFromKind(_1c010c14b_Arr(_163626_k.ptr()).get()._field_Elem);
			}
		}
		else if ((_1c010b90e_Ptr(_163626_k.ptr()) != nullptr)) {
			_case_begin_1c2ee4816:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1c2ee433d:;
			{
				return nullptr;
			}
		}
		_match_end_1c2e7c55c:;
	};
}



inline jule::Bool _1c0122815_isPrim(jule::Str _165911_kind) {
	return ((((((((((((((((_165911_kind == jule::Str("i8", 2)) || (_165911_kind == jule::Str("i16", 3))) || (_165911_kind == jule::Str("i32", 3))) || (_165911_kind == jule::Str("i64", 3))) || (_165911_kind == jule::Str("u8", 2))) || (_165911_kind == jule::Str("u16", 3))) || (_165911_kind == jule::Str("u32", 3))) || (_165911_kind == jule::Str("u64", 3))) || (_165911_kind == jule::Str("f32", 3))) || (_165911_kind == jule::Str("f64", 3))) || (_165911_kind == jule::Str("int", 3))) || (_165911_kind == jule::Str("uint", 4))) || (_165911_kind == jule::Str("uintptr", 7))) || (_165911_kind == jule::Str("bool", 4))) || (_165911_kind == jule::Str("str", 3))) || (_165911_kind == jule::Str("any", 3)));
}



inline void _1c0122abd_applyImplicitCast(jule::Ptr<_1c0109324_TypeKind>& _167827_dest, jule::Ptr<_1c00cd282_Data>& _167849_d) {
	if (_1c010a248_IsNil(_167849_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1c010dceb_Prim> _16829_destPrim = _1c010b436_Prim(_167827_dest.ptr());;
	jule::Ptr<_1c010dceb_Prim> _16839_prim = _1c010b436_Prim(_167849_d.get()._field_Kind.ptr());;
	if ((_16829_destPrim != nullptr)) {
		if (_1c0112294_IsAny(_16829_destPrim.ptr())) {
			_1c01059a2_applyCastKind(_167849_d,_167827_dest);
			return;;
		};
		if (((((((!(_1c0109ed4_CppLinked(_167849_d.get()._field_Kind.ptr()))) && (!(_167849_d.get()._field_Kind.get()._field_Variadic))) && (!(_167849_d.get()._field_Lvalue))) && (!(_1c00cdb45_IsConst(_167849_d.ptr())))) && (_16839_prim != nullptr)) && _1c0048373_IsNum(_16839_prim.get()._field_Kind))) {
			_1c01059a2_applyCastKind(_167849_d,_167827_dest);
		};
		return;;
	};
	if (((_1c010caec_Trait(_167827_dest.ptr()) != nullptr) && (_1c010caec_Trait(_167849_d.get()._field_Kind.ptr()) == nullptr))) {
		_1c01056e9_applyCastKindModel(_167849_d,_167827_dest);
		return;;
	};
	if (((_1c010bdd7_TypeEnum(_167827_dest.ptr()) != nullptr) && (_1c010bdd7_TypeEnum(_167849_d.get()._field_Kind.ptr()) == nullptr))) {
		_1c01056e9_applyCastKindModel(_167849_d,_167827_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1c00c8524_SymbolTable>,jule::Slice<_1d6435804_Log>> _1c01259b1_buildSymbols(jule::Ptr<_1be3621a4_Ast>& _1522_ast, jule::Trait<_1c0058b25_Importer>& _1538_importer, jule::Ptr<_1be46aac6_symbolBuilder> _1562_owner) {
	jule::Ptr<_1be46aac6_symbolBuilder> _1613_sb = jule::new_ptr<_1be46aac6_symbolBuilder>(_1be46aac6_symbolBuilder{._field_owner=_1562_owner, ._field_importer=_1538_importer, ._field_ast=_1522_ast, });;
	_1be470a76_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1c005e312_Package>,jule::Slice<_1d6435804_Log>> _1c0125de0_analyzePackage(jule::Slice<jule::Ptr<_1be3621a4_Ast>>& _2924_files, jule::Trait<_1c0058b25_Importer>& _2944_importer, jule::I64& _2965_flags) {
	jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1c00c8524_SymbolTable>>::alloc(0LL,_2924_files.len());;
	{
		auto &expr = _2924_files;
		auto it = expr.begin();
		_iter_begin_1c30e6154:;
		if (it != expr.end()) {
			jule::Ptr<_1be3621a4_Ast> _3217_f = *it;
			{
				jule::Ptr<_1c00c8524_SymbolTable> _3318_table;;
				jule::Slice<_1d6435804_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1c01259b1_buildSymbols(_3217_f,_2944_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1c30e6154:;
			++it;
			goto _iter_begin_1c30e6154;
		}
		_iter_end_1c30e6154:;
	};
	jule::Ptr<_1c0064504_Sema> _4013_sema = jule::new_ptr<_1c0064504_Sema>(_1c0064504_Sema{._field_flags=_2965_flags});;
	_1c007d353_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1c005e312_Package> _4813_pkg = jule::new_ptr<_1c005e312_Package>(_1c005e312_Package{._field_Files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1c005e312_Package>,jule::Slice<_1d6435804_Log>> _1c01262ca_AnalyzePackage(jule::Slice<jule::Ptr<_1be3621a4_Ast>> _7223_files, jule::Trait<_1c0058b25_Importer> _7242_importer, jule::I64 _7262_flags) {
	if ((_7223_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1c005e312_Package> _7614_package;;
	jule::Slice<_1d6435804_Log> _7627_logs;;
	std::tie(_7614_package,_7627_logs) = _1c0125de0_analyzePackage(_7223_files,_7242_importer,_7262_flags);
	return std::make_tuple(_7614_package,_7627_logs);
}



inline jule::Ptr<_1be462392_FnIns> _1bcc6e046_findBuiltinFn(jule::Str _2218_ident) {
	{
		auto &_match_expr{ _2218_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1c30edc94:;
			{
				static jule::Ptr<_1be462392_FnIns> _2520_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc71730_builtinCallerOut), });;
				return _2520_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1c30edd0a:;
			{
				static jule::Ptr<_1be462392_FnIns> _2820_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc71b1a_builtinCallerOutln), });;
				return _2820_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1c30ee019:;
			{
				static jule::Ptr<_1be462392_FnIns> _3120_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc72005_builtinCallerNew), });;
				return _3120_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1c30ee080:;
			{
				static jule::Ptr<_1be462392_FnIns> _3420_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc723e0_builtinCallerPanic), });;
				return _3420_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1c30ee0e6:;
			{
				static jule::Ptr<_1be462392_FnIns> _3720_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc72a0b_builtinCallerMake), });;
				return _3720_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1c30ee15c:;
			{
				static jule::Ptr<_1be462392_FnIns> _4020_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc72de6_builtinCallerAppend), });;
				return _4020_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1c30ee1c3:;
			{
				static jule::Ptr<_1be462392_FnIns> _4320_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc73be9_builtinCallerCopy), });;
				return _4320_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1c30ee239:;
			{
				static jule::Ptr<_1be462392_FnIns> _4620_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc740d4_builtinCallerClone), });;
				return _4620_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1c30ee305:;
			{
				static jule::Ptr<_1be462392_FnIns> _4920_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc744be_builtinCallerAssert), });;
				return _4920_f;
			}
		}
		else {
			_case_begin_1c30eda85:;
			{
				return nullptr;
			}
		}
		_match_end_1c30ed4e1:;
	};
}



inline jule::Ptr<_1c0108631_TypeAlias> _1bcc6e332_findBuiltinTypeAlias(jule::Str _5625_ident) {
	{
		auto &_match_expr{ _5625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1c3104a69:;
			{
				static jule::Ptr<_1c0108631_TypeAlias> _5920_t = jule::new_ptr<_1c0108631_TypeAlias>(_1c0108631_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _5920_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1c3104ad0:;
			{
				static jule::Ptr<_1c0108631_TypeAlias> _6920_t = jule::new_ptr<_1c0108631_TypeAlias>(_1c0108631_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1c010d47c_TypeSymbol>(_1c010d47c_TypeSymbol{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _6920_t;
			}
		}
		else {
			_case_begin_1c310420b:;
			{
				return nullptr;
			}
		}
		_match_end_1c30ee69b:;
	};
}



inline jule::Any _1bcc6e5c9_findBuiltinDef(jule::Str _8319_ident) {
	jule::Ptr<_1be462392_FnIns> _8413_f = _1bcc6e046_findBuiltinFn(_8319_ident);;
	if ((_8413_f != nullptr)) {
		return jule::Any(_8413_f);
	};
	jule::Ptr<_1c0108631_TypeAlias> _8813_ta = _1bcc6e332_findBuiltinTypeAlias(_8319_ident);;
	if ((_8813_ta != nullptr)) {
		return jule::Any(_8813_ta);
	};
	return nullptr;
}



inline jule::Any _1bcc6e8e8_findBuiltinDefStdDebug(jule::Str _9527_ident) {
	{
		auto &_match_expr{ _9527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1c3108540:;
			{
				static jule::Ptr<_1be462392_FnIns> _9820_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc75d94_builtinCallerStdDebugOut), });;
				return jule::Any(_9820_f);
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1c31085a6:;
			{
				static jule::Ptr<_1be462392_FnIns> _10120_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc7627e_builtinCallerStdDebugOutln), });;
				return jule::Any(_10120_f);
			}
		}
		else {
			_case_begin_1c3108133:;
			{
				return nullptr;
			}
		}
		_match_end_1c3107ee0:;
	};
}



inline jule::Any _1bcc6eb90_findBuiltinDefStdMem(jule::Str _10825_ident) {
	{
		auto &_match_expr{ _10825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1c3108991:;
			{
				static jule::Ptr<_1be462392_FnIns> _11120_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc748cb_builtinCallerStdMemSizeOf), });;
				return jule::Any(_11120_f);
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1c3108a07:;
			{
				static jule::Ptr<_1be462392_FnIns> _11420_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc74bd9_builtinCallerStdMemAlignOf), });;
				return jule::Any(_11420_f);
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1c3108a6d:;
			{
				static jule::Ptr<_1be462392_FnIns> _11720_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc75107_builtinCallerStdMemFree), });;
				return jule::Any(_11720_f);
			}
		}
		else {
			_case_begin_1c3109530:;
			{
				return nullptr;
			}
		}
		_match_end_1c310a09c:;
	};
}



inline jule::Any _1bcc6ee59_findBuiltinDefStdJuleIntegrated(jule::Str _12436_ident) {
	{
		auto &_match_expr{ _12436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1c310a476:;
			{
				static jule::Ptr<_1be462392_FnIns> _12720_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc75536_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_12720_f);
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1c310a4dc:;
			{
				static jule::Ptr<_1be462392_FnIns> _13020_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_Decl=jule::new_ptr<_1be45e6e1_Fn>(_1be45e6e1_Fn{._field_Generics=jule::Slice<jule::Ptr<_1be3a4108_GenericDecl>>::alloc(1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc75954_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_13020_f);
			}
		}
		else {
			_case_begin_1c310c665:;
			{
				return nullptr;
			}
		}
		_match_end_1c310c522:;
	};
}



inline jule::Any _1bcc70278_findPackageBuiltinDef(jule::Str _14226_link_path, jule::Str _14242_ident) {
	{
		auto &_match_expr{ _14226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1c310e6ab:;
			{
				return jule::Any(_1bcc6e8e8_findBuiltinDefStdDebug(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1c310e722:;
			{
				return jule::Any(_1bcc6eb90_findBuiltinDefStdMem(_14242_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1c310e788:;
			{
				return jule::Any(_1bcc6ee59_findBuiltinDefStdJuleIntegrated(_14242_ident));
			}
		}
		else {
			_case_begin_1c310c863:;
			{
				return nullptr;
			}
		}
		_match_end_1c310d468:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1bcc70795_builtinCallerCommonPlain(jule::Ptr<_1c00ced00_Eval>& _15534_e, jule::Ptr<_1be3a0313_FnCallExpr>& _15549_fc, jule::Ptr<_1c00cd282_Data>& _15571_d) {
	jule::Ptr<_1be462392_FnIns> _15613_f = _1c010c624_Fn(_15571_d.get()._field_Kind.ptr());;
	_1c00c0032_fnCallArgChecker _15813_fcac = _1c00c0032_fnCallArgChecker{._field_e=_15534_e, ._field_args=_15549_fc.get()._field_Args, ._field_errorToken=_15549_fc.get()._field_Token, ._field_f=_15613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1c00c23ec_check(&_15813_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1be4580e1_FnCallExprModel> _16913_model = jule::new_ptr<_1be4580e1_FnCallExprModel>(_1be4580e1_FnCallExprModel{._field_Token=_15549_fc.get()._field_Token, ._field_Func=_15613_f, ._field_Expr=_15571_d.get()._field_Model, ._field_Args=_15813_fcac._field_argModels, });;
	if ((_15613_f.get()._field_Result == nullptr)) {
		_15571_d=_1c0105ba0_buildVoidData();
	} else {
		_15571_d=jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=_15613_f.get()._field_Result, });
	};
	_15571_d.get()._field_Model=static_cast<jule::Any>(_16913_model);
	return _15571_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc70b19_builtinCallerCommon(jule::Ptr<_1c00ced00_Eval>& _18829_e, jule::Ptr<_1be3a0313_FnCallExpr>& _18844_fc, jule::Ptr<_1c00cd282_Data>& _18866_d) {
	return _1bcc70795_builtinCallerCommonPlain(_18829_e,_18844_fc,_18866_d);
}



inline jule::Ptr<_1c00cd282_Data> _1bcc71004_builtinCallerCommonMut(jule::Ptr<_1c00ced00_Eval>& _19232_e, jule::Ptr<_1be3a0313_FnCallExpr>& _19247_fc, jule::Ptr<_1c00cd282_Data>& _19269_d) {
	if ((!(_19269_d.get()._field_Mutable))) {
		_1c00d030b_pushErr(_19232_e.ptr(), _19247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1bcc70b19_builtinCallerCommon(_19232_e,_19247_fc,_19269_d);
}



inline jule::Ptr<_1c00cd282_Data> _1bcc71345_builtinCallerError(jule::Ptr<_1c00ced00_Eval>& _19928_e, jule::Ptr<_1be3a0313_FnCallExpr>& _19943_fc) {
	if ((_19943_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_19943_fc.get()._field_Args.len() > 1LL)) {
		_1c00d030b_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _20713_expr = _1c00eaab8_evalExpr(_19928_e, _19943_fc.get()._field_Args[0LL]);;
	if ((_20713_expr == nullptr)) {
		return nullptr;
	};
	if (_1c00cd66c_IsNil(_20713_expr.ptr())) {
		_1c00d030b_pushErr(_19928_e.ptr(), _19943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _21613_d = _1c0105ba0_buildVoidData();;
	_21613_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45b248_BuiltinErrorCallExprModel>(_1be45b248_BuiltinErrorCallExprModel{._field_Err=_20713_expr.get()._field_Model}));
	return _21613_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc71730_builtinCallerOut(jule::Ptr<_1c00ced00_Eval>& _22426_e, jule::Ptr<_1be3a0313_FnCallExpr>& _22441_fc, jule::Ptr<_1c00cd282_Data>& ) {
	if ((_22441_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_22441_fc.get()._field_Args.len() > 1LL)) {
		_1c00d030b_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _23313_expr = _1c00eaab8_evalExpr(_22426_e, _22441_fc.get()._field_Args[0LL]);;
	if ((_23313_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1c0121b99_isBuiltinStrConvertable(_23313_expr.get()._field_Kind)))) {
		_1c00d030b_pushErr(_22426_e.ptr(), _22441_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c00cd282_Data> _24313_d = _1c0105ba0_buildVoidData();;
	_24313_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45a005_BuiltinOutCallExprModel>(_1be45a005_BuiltinOutCallExprModel{._field_Expr=_23313_expr.get()._field_Model, }));
	return _24313_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc71b1a_builtinCallerOutln(jule::Ptr<_1c00ced00_Eval>& _24828_e, jule::Ptr<_1be3a0313_FnCallExpr>& _24843_fc, jule::Ptr<_1c00cd282_Data>& _24865_d) {
	_24865_d=_1bcc71730_builtinCallerOut(_24828_e,_24843_fc,_24865_d);
	if ((_24865_d == nullptr)) {
		return nullptr;
	};
	_24865_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45a1e2_BuiltinOutlnCallExprModel>(_1be45a1e2_BuiltinOutlnCallExprModel{._field_Expr=_24865_d.get()._field_Model.operator jule::Ptr<_1be45a005_BuiltinOutCallExprModel>().get()._field_Expr, }));
	return _24865_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc72005_builtinCallerNew(jule::Ptr<_1c00ced00_Eval>& _26026_e, jule::Ptr<_1be3a0313_FnCallExpr>& _26041_fc, jule::Ptr<_1c00cd282_Data>& _26063_d) {
	if ((_26041_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_26041_fc.get()._field_Args.len() > 2LL)) {
		_1c00d030b_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _26913_t = _1c00ea49c_evalExprKind(_26026_e, _26041_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_26913_t == nullptr)) {
		return nullptr;
	};
	if ((!(_26913_t.get()._field_Decl))) {
		_1c00d030b_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1c0121638_isValidForSptrType(_26913_t.get()._field_Kind)))) {
		jule::Ptr<_1be3b359b_StructIns> _28017_s = _1c010c888_Struct(_26913_t.get()._field_Kind.ptr());;
		if ((((_28017_s != nullptr) && (_28017_s.get()._field_Decl != nullptr)) && _28017_s.get()._field_Decl.get()._field_CppLinked)) {
			_1c00d030b_pushErr(_26026_e.ptr(), _26041_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_26063_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c0112580_Sptr>(_1c0112580_Sptr{._field_Elem=_26913_t.get()._field_Kind}), 7)});
	if ((_26041_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1c0109324_TypeKind> _29417_old = _26026_e.get()._field_prefix;;
		_26026_e.get()._field_prefix=_26913_t.get()._field_Kind;
		jule::Ptr<_1c00cd282_Data> _29717_init = _1c00eaab8_evalExpr(_26026_e, _26041_fc.get()._field_Args[1LL]);;
		_26026_e.get()._field_prefix=_29417_old;
		if ((_29717_init != nullptr)) {
			jule::Ptr<_1d675d511_Token> _30221_token = _26041_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_1c0070db2_checkValidityForInitExpr(_26026_e.get()._field_s, (!(_26026_e.get()._field_immutable)),false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_1c006d178_checkAssignType(_26026_e.get()._field_s, false,_26913_t.get()._field_Kind,_29717_init,_30221_token);
			_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45a5bb_BuiltinNewCallExprModel>(_1be45a5bb_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, ._field_Init=_29717_init.get()._field_Model}));
		};
	} else {
		_26063_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45a5bb_BuiltinNewCallExprModel>(_1be45a5bb_BuiltinNewCallExprModel{._field_Kind=_26913_t.get()._field_Kind, }));
	};
	return _26063_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc723e0_builtinCallerPanic(jule::Ptr<_1c00ced00_Eval>& _32228_e, jule::Ptr<_1be3a0313_FnCallExpr>& _32243_fc, jule::Ptr<_1c00cd282_Data>& ) {
	if ((_32243_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_32243_fc.get()._field_Args.len() > 1LL)) {
		_1c00d030b_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _33113_expr = _1c00eaab8_evalExpr(_32228_e, _32243_fc.get()._field_Args[0LL]);;
	if ((_33113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1c010b436_Prim(_33113_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1c0112030_IsStr(_1c010b436_Prim(_33113_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1c00d030b_pushErr(_32228_e.ptr(), _32243_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _34013_d = _1c0105ba0_buildVoidData();;
	_34013_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45a7a8_BuiltinPanicCallExprModel>(_1be45a7a8_BuiltinPanicCallExprModel{._field_Token=_32243_fc.get()._field_Token, ._field_Expr=_33113_expr.get()._field_Model}));
	return _34013_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc72a0b_builtinCallerMake(jule::Ptr<_1c00ced00_Eval>& _34827_e, jule::Ptr<_1be3a0313_FnCallExpr>& _34842_fc, jule::Ptr<_1c00cd282_Data>& _34864_d) {
	if ((_34842_fc.get()._field_Args.len() < 2LL)) {
		if ((_34842_fc.get()._field_Args.len() == 1LL)) {
			_1c00d030b_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1c00d030b_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1c00cd282_Data> _35813_t = _1c00ea49c_evalExprKind(_34827_e, _34842_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_35813_t.get()._field_Decl))) {
			_case_begin_1c313434b:;
			{
				goto _match_end_1c3134637;
			}
		}
		else if ((_1c010c3b0_Slc(_35813_t.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c31343b2:;
			{
				if ((_34842_fc.get()._field_Args.len() > 3LL)) {
					_1c00d030b_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1c010b436_Prim(_35813_t.get()._field_Kind.ptr()) != nullptr) && _1c0112030_IsStr(_1c010b436_Prim(_35813_t.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c3134428:;
			{
				if ((_34842_fc.get()._field_Args.len() > 2LL)) {
					_1c00d030b_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1c3134637:;
	};
	_1c00d030b_pushErr(_34827_e.ptr(), _34842_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_34864_d.get()._field_Kind=_35813_t.get()._field_Kind;
	jule::Ptr<_1c00cd282_Data> _38213_len = _1c00eaab8_evalExpr(_1c006c870_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[1LL]);;
	if ((_38213_len == nullptr)) {
		return nullptr;
	};
	_1c00d88ec_checkIntegerIndexingByData(_34827_e.ptr(), _38213_len,_34842_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1be45ab82_BuiltinMakeCallExprModel> _38913_model = jule::new_ptr<_1be45ab82_BuiltinMakeCallExprModel>(_1be45ab82_BuiltinMakeCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Len=_38213_len.get()._field_Model, });;
	_34864_d.get()._field_Model=static_cast<jule::Any>(_38913_model);
	if ((_34842_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1c00cd282_Data> _39517_cap = _1c00eaab8_evalExpr(_1c006c870_evalp(_34827_e.get()._field_s, _34827_e.get()._field_lookup,_35813_t.get()._field_Kind), _34842_fc.get()._field_Args[2LL]);;
		if ((_39517_cap == nullptr)) {
			return _34864_d;
		};
		_1c00d88ec_checkIntegerIndexingByData(_34827_e.ptr(), _39517_cap,_34842_fc.get()._field_Args[2LL].get()._field_Token);
		_38913_model.get()._field_Cap=_39517_cap.get()._field_Model;
	};
	return _34864_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc72de6_builtinCallerAppend(jule::Ptr<_1c00ced00_Eval>& _40529_e, jule::Ptr<_1be3a0313_FnCallExpr>& _40544_fc, jule::Ptr<_1c00cd282_Data>& _40566_d) {
	if ((_40544_fc.get()._field_Args.len() < 2LL)) {
		if ((_40544_fc.get()._field_Args.len() == 1LL)) {
			_1c00d030b_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1c00d030b_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1c00cd282_Data> _41513_t = _1c00eaab8_evalExpr(_40529_e, _40544_fc.get()._field_Args[0LL]);;
	if ((_41513_t == nullptr)) {
		return nullptr;
	};
	if ((_1c010c3b0_Slc(_41513_t.get()._field_Kind.ptr()) == nullptr)) {
		_1c00d030b_pushErr(_40529_e.ptr(), _40544_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1be462392_FnIns> _42513_f = jule::new_ptr<_1be462392_FnIns>(_1be462392_FnIns{._field_Params=jule::Slice<jule::Ptr<_1be4614c3_ParamIns>>::make({jule::new_ptr<_1be4614c3_ParamIns>(_1be4614c3_ParamIns{._field_Decl=jule::new_ptr<_1be45cda4_Param>(_1be45cda4_Param{._field_Mutable=true, }), ._field_Kind=_41513_t.get()._field_Kind}),jule::new_ptr<_1be4614c3_ParamIns>(_1be4614c3_ParamIns{._field_Decl=jule::new_ptr<_1be45cda4_Param>(_1be45cda4_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1c010c3b0_Slc(_41513_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41513_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1c00cd282_Data>(jule::Ptr<_1c00ced00_Eval>&,jule::Ptr<_1be3a0313_FnCallExpr>&,jule::Ptr<_1c00cd282_Data>&)>(_1bcc70795_builtinCallerCommonPlain), });;
	_40566_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_42513_f, 1)});
	_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45993e_CommonIdentExprModel>(_1be45993e_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}));
	_40566_d=_1bcc70795_builtinCallerCommonPlain(_40529_e,_40544_fc,_40566_d);
	if ((_40566_d != nullptr)) {
		jule::Ptr<_1be4580e1_FnCallExprModel> _45317_model = _40566_d.get()._field_Model.operator jule::Ptr<_1be4580e1_FnCallExprModel>();;
		_40566_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45ad6e_BuiltinAppendCallExprModel>(_1be45ad6e_BuiltinAppendCallExprModel{._field_Dest=_45317_model.get()._field_Args[0LL], ._field_Elements=_45317_model.get()._field_Args[1LL]}));
	};
	return _40566_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc7337a_callerCopySlice(jule::Ptr<_1c00cd282_Data>& _46225_dest, jule::Ptr<_1c00ced00_Eval>& _46243_e, jule::Ptr<_1be3a0313_FnCallExpr>& _46258_fc, jule::Ptr<_1c00cd282_Data>& _46280_d) {
	if ((!(_46225_dest.get()._field_Mutable))) {
		_1c00d030b_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _46713_src = _1c00eaab8_evalExpr(_46243_e, _46258_fc.get()._field_Args[1LL]);;
	if ((_46713_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c0112edc_Slc> _47113_slc = _1c010c3b0_Slc(_46713_src.get()._field_Kind.ptr());;
	if ((_47113_slc != nullptr)) {
		if (((!(_46713_src.get()._field_Mutable)) && _1c010a721_Mutable(_47113_slc.get()._field_Elem.ptr()))) {
			_1c00d030b_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1c0109a2d_Equals(_46225_dest.get()._field_Kind, _46713_src.get()._field_Kind)))) {
			_1c00d030b_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1c010dceb_Prim> _48113_dest_prim = _1c010b436_Prim(_1c010c3b0_Slc(_46225_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1c010dceb_Prim> _48213_prim = _1c010b436_Prim(_46713_src.get()._field_Kind.ptr());;
		if (((((_48113_dest_prim == nullptr) || (_48213_prim == nullptr)) || (!(_1c0112030_IsStr(_48213_prim.ptr())))) || (!(_1c0110605_IsU8(_48113_dest_prim.ptr()))))) {
			_1c00d030b_pushErr(_46243_e.ptr(), _46258_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_46225_dest.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_46713_src.get()._field_Kind.ptr()))}));
		};
	};
	_46280_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)});
	_46280_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45b05b_BuiltinCopyCallExprModel>(_1be45b05b_BuiltinCopyCallExprModel{._field_Dest=_46225_dest, ._field_Src=_46713_src}));
	return _46280_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc7380e_callerCopyStr(jule::Ptr<_1c00cd282_Data>& _49623_dest, jule::Ptr<_1c00ced00_Eval>& _49641_e, jule::Ptr<_1be3a0313_FnCallExpr>& _49656_fc, jule::Ptr<_1c00cd282_Data>& _49678_d) {
	if ((!(_49623_dest.get()._field_Mutable))) {
		_1c00d030b_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _50113_src = _1c00eaab8_evalExpr(_49641_e, _49656_fc.get()._field_Args[1LL]);;
	if ((_50113_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1c010b436_Prim(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c31573c4:;
			{
				if (_1c0112030_IsStr(_1c010b436_Prim(_50113_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1c010c3b0_Slc(_50113_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c315743a:;
			{
				jule::Ptr<_1c0112edc_Slc> _51117_slc = _1c010c3b0_Slc(_50113_src.get()._field_Kind.ptr());;
				if (((_1c010b436_Prim(_51117_slc.get()._field_Elem.ptr()) != nullptr) && _1c0110605_IsU8(_1c010b436_Prim(_51117_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1c3157858:;
	};
	_1c00d030b_pushErr(_49641_e.ptr(), _49656_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_49623_dest.get()._field_Kind.ptr())),jule::Any(_1c0109720_Str(_50113_src.get()._field_Kind.ptr()))}));
	_julec_label_end:;
	_49678_d.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("int", 3)), 6)});
	_49678_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45b05b_BuiltinCopyCallExprModel>(_1be45b05b_BuiltinCopyCallExprModel{._field_Dest=_49623_dest, ._field_Src=_50113_src}));
	return _49678_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc73be9_builtinCallerCopy(jule::Ptr<_1c00ced00_Eval>& _52627_e, jule::Ptr<_1be3a0313_FnCallExpr>& _52642_fc, jule::Ptr<_1c00cd282_Data>& _52664_d) {
	if ((_52642_fc.get()._field_Args.len() < 2LL)) {
		if ((_52642_fc.get()._field_Args.len() == 1LL)) {
			_1c00d030b_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1c00d030b_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_52642_fc.get()._field_Args.len() > 2LL)) {
		_1c00d030b_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _53913_dest = _1c00eaab8_evalExpr(_52627_e, _52642_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53913_dest == nullptr)) {
			_case_begin_1c3161aa4:;
			{
				return nullptr;
			}
		}
		else if ((_1c010c3b0_Slc(_53913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c3161b1a:;
			{
				return _1bcc7337a_callerCopySlice(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else if (((_1c010b436_Prim(_53913_dest.get()._field_Kind.ptr()) != nullptr) && _1c0112030_IsStr(_1c010b436_Prim(_53913_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c3161b81:;
			{
				return _1bcc7380e_callerCopyStr(_53913_dest,_52627_e,_52642_fc,_52664_d);
			}
		}
		else {
			_case_begin_1c3161a3d:;
			{
				_1c00d030b_pushErr(_52627_e.ptr(), _52642_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1c31619d8:;
	};
}



inline jule::Ptr<_1c00cd282_Data> _1bcc740d4_builtinCallerClone(jule::Ptr<_1c00ced00_Eval>& _55328_e, jule::Ptr<_1be3a0313_FnCallExpr>& _55343_fc, jule::Ptr<_1c00cd282_Data>& ) {
	if ((_55343_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_55343_fc.get()._field_Args.len() > 1LL)) {
		_1c00d030b_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _56213_d = _1c00ea49c_evalExprKind(_55328_e, _55343_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_56213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c010ae5d_SupportsCloning(_56213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1c010c3b0_Slc(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1c010cd61_Map(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1c010c14b_Arr(_56213_d.get()._field_Kind.ptr()) != nullptr) || (_1c010b69a_Sptr(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1c3167813:;
				{
					{
						_1c00d030b_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_56213_d.get()._field_Kind.ptr()))}));
					};
				}
			}
			else if ((_1c010c888_Struct(_56213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1c3167879:;
				{
					{
						_1c00d030b_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1c316779c:;
				{
					{
						_1c00d030b_pushErr(_55328_e.ptr(), _55343_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1c0109720_Str(_56213_d.get()._field_Kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1c31673d4:;
		};
	};
	_56213_d.get()._field_Mutable=true;
	_56213_d.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45a3ce_BuiltinCloneCallExprModel>(_1be45a3ce_BuiltinCloneCallExprModel{._field_Expr=_56213_d.get()._field_Model}));
	return _56213_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc744be_builtinCallerAssert(jule::Ptr<_1c00ced00_Eval>& _59529_e, jule::Ptr<_1be3a0313_FnCallExpr>& _59544_fc, jule::Ptr<_1c00cd282_Data>& ) {
	if ((_59544_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_59544_fc.get()._field_Args.len() > 2LL)) {
		_1c00d030b_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _60413_expr = _1c00eaab8_evalExpr(_59529_e, _59544_fc.get()._field_Args[0LL]);;
	if ((_60413_expr == nullptr)) {
		return nullptr;
	};
	if (((_1c010b436_Prim(_60413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1c0111cbb_IsBool(_1c010b436_Prim(_60413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1c00d030b_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1be45a995_BuiltinAssertCallExprModel> _61313_model = jule::new_ptr<_1be45a995_BuiltinAssertCallExprModel>(_1be45a995_BuiltinAssertCallExprModel{._field_Token=_59544_fc.get()._field_Token, ._field_Expr=_60413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_59544_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1c00cd282_Data> _62117_log = _1c00eaab8_evalExpr(_59529_e, _59544_fc.get()._field_Args[1LL]);;
		if ((_62117_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1c00cdb45_IsConst(_62117_log.ptr()))) || (_1c010b436_Prim(_62117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1c0112030_IsStr(_1c010b436_Prim(_62117_log.get()._field_Kind.ptr()).ptr()))))) {
			_1c00d030b_pushErr(_59529_e.ptr(), _59544_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1c0109720_Str(_62117_log.get()._field_Kind.ptr()))}));
			return nullptr;
		};
		_61313_model.get()._field_Log=_1be450627_ReadStr(_62117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1c00cd282_Data> _63413_d = _1c0105ba0_buildVoidData();;
	_63413_d.get()._field_Model=static_cast<jule::Any>(_61313_model);
	return _63413_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc748cb_builtinCallerStdMemSizeOf(jule::Ptr<_1c00ced00_Eval>& _63935_e, jule::Ptr<_1be3a0313_FnCallExpr>& _63950_fc, jule::Ptr<_1c00cd282_Data>& ) {
	jule::Ptr<_1c00cd282_Data> _64013_result = jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_63950_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _64013_result;
	};
	if ((_63950_fc.get()._field_Args.len() > 1LL)) {
		_1c00d030b_pushErr(_63935_e.ptr(), _63950_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _65213_d = _1c00ea49c_evalExprKind(_63935_e, _63950_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_65213_d == nullptr)) {
		return _64013_result;
	};
	_64013_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be459147_SizeofExprModel>(_1be459147_SizeofExprModel{._field_Expr=_65213_d.get()._field_Model}));
	return _64013_result;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc74bd9_builtinCallerStdMemAlignOf(jule::Ptr<_1c00ced00_Eval>& _66136_e, jule::Ptr<_1be3a0313_FnCallExpr>& _66151_fc, jule::Ptr<_1c00cd282_Data>& ) {
	jule::Ptr<_1c00cd282_Data> _66213_result = jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_66151_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _66213_result;
	};
	if ((_66151_fc.get()._field_Args.len() > 1LL)) {
		_1c00d030b_pushErr(_66136_e.ptr(), _66151_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _67413_d = _1c00ea49c_evalExprKind(_66136_e, _66151_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_67413_d == nullptr)) {
		return _66213_result;
	};
	_66213_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45b8a8_AlignofExprModel>(_1be45b8a8_AlignofExprModel{._field_Expr=_67413_d.get()._field_Model}));
	return _66213_result;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc75107_builtinCallerStdMemFree(jule::Ptr<_1c00ced00_Eval>& _68333_e, jule::Ptr<_1be3a0313_FnCallExpr>& _68348_fc, jule::Ptr<_1c00cd282_Data>& ) {
	if ((_68348_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_68348_fc.get()._field_Args.len() > 1LL)) {
		_1c00d030b_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _69213_d = _1c00ea49c_evalExprKind(_68333_e, _68348_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_69213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c010abe9_PerformsRC(_69213_d.get()._field_Kind.ptr())))) {
		_1c00d030b_pushErr(_68333_e.ptr(), _68348_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _70113_result = _1c0105ba0_buildVoidData();;
	_70113_result.get()._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45c15b_FreeExprModel>(_1be45c15b_FreeExprModel{._field_Expr=_69213_d.get()._field_Model}));
	return _70113_result;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc75536_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1c00ced00_Eval>& _70645_e, jule::Ptr<_1be3a0313_FnCallExpr>& _70660_fc, jule::Ptr<_1c00cd282_Data>& ) {
	if ((_70660_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_70660_fc.get()._field_Args.len() > 1LL)) {
		_1c00d030b_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c00cd282_Data> _71513_d = _1c00ea49c_evalExprKind(_70645_e, _70660_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_71513_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1c0121b99_isBuiltinStrConvertable(_71513_d.get()._field_Kind)))) {
		_1c00d030b_pushErr(_70645_e.ptr(), _70660_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1c00cd282_Data>(_1c00cd282_Data{._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(_1c01222c6_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=static_cast<jule::Any>(jule::new_ptr<_1be45bc82_IntegratedToStrExprModel>(_1be45bc82_IntegratedToStrExprModel{._field_Expr=_71513_d.get()._field_Model})), });
}



inline jule::Ptr<_1c00cd282_Data> _1bcc75954_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1c00ced00_Eval>& _73344_e, jule::Ptr<_1be3a0313_FnCallExpr>& _73359_fc, jule::Ptr<_1c00cd282_Data>& _73381_d) {
	if ((!(_1c00d0c46_isUnsafe(_73344_e.ptr())))) {
		_1c00d030b_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_73359_fc.get()._field_Args.len() < 1LL)) {
		_1c00d030b_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1c00cd282_Data> _74313_argd = _1c00eaab8_evalExpr(_73344_e, _73359_fc.get()._field_Args[0LL]);;
	if ((_74313_argd == nullptr)) {
		return nullptr;
	};
	if (((_1c010b436_Prim(_74313_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1c0112030_IsStr(_1c010b436_Prim(_74313_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1c00d030b_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1c0109720_Str(_74313_argd.get()._field_Kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1c00cdb45_IsConst(_74313_argd.ptr()))) || (!(_1be4529c0_IsStr(_74313_argd.get()._field_Constant.ptr()))))) {
		_1c00d030b_pushErr(_73344_e.ptr(), _73359_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1c00cd282_Data> _75813_r = _1c0105ba0_buildVoidData();;
	jule::Ptr<_1be462392_FnIns> _76013_f = _1c010c624_Fn(_73381_d.get()._field_Kind.ptr());;
	if ((_76013_f.get()._field_Generics.len() > 0LL)) {
		_75813_r.get()._field_Kind=_76013_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1be45be6e_BackendEmitExprModel> _76513_model = jule::new_ptr<_1be45be6e_BackendEmitExprModel>(_1be45be6e_BackendEmitExprModel{._field_Code=_1be450627_ReadStr(_74313_argd.get()._field_Constant.ptr()), });;
	if ((_73359_fc.get()._field_Args.len() > 1LL)) {
		_76513_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL,(_73359_fc.get()._field_Args.len() - 1LL));
		{
			auto expr = _73359_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1c3191d7b:;
			if (it != expr.end()) {
				jule::Ptr<_1be39b045_Expr> _77121_arg = *it;
				{
					_74313_argd=_1c00ea49c_evalExprKind(_73344_e, _77121_arg.get()._field_Kind);
					if ((_74313_argd == nullptr)) {
						return nullptr;
					};
					_76513_model.get()._field_Exprs = jule::alloc_for_append(_76513_model.get()._field_Exprs,1);_76513_model.get()._field_Exprs.__push(_74313_argd.get()._field_Model);;
				}
				_iter_next_1c3191d7b:;
				++it;
				goto _iter_begin_1c3191d7b;
			}
			_iter_end_1c3191d7b:;
		};
	};
	_75813_r.get()._field_Model=static_cast<jule::Any>(_76513_model);
	return _75813_r;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc75d94_builtinCallerStdDebugOut(jule::Ptr<_1c00ced00_Eval>& _78434_e, jule::Ptr<_1be3a0313_FnCallExpr>& _78449_fc, jule::Ptr<_1c00cd282_Data>& _78471_d) {
	_78471_d=_1bcc71730_builtinCallerOut(_78434_e,_78449_fc,_78471_d);
	if ((_78471_d == nullptr)) {
		return nullptr;
	};
	_78471_d.get()._field_Model.operator jule::Ptr<_1be45a005_BuiltinOutCallExprModel>().get()._field_Debug=true;
	return _78471_d;
}



inline jule::Ptr<_1c00cd282_Data> _1bcc7627e_builtinCallerStdDebugOutln(jule::Ptr<_1c00ced00_Eval>& _79336_e, jule::Ptr<_1be3a0313_FnCallExpr>& _79351_fc, jule::Ptr<_1c00cd282_Data>& _79373_d) {
	_79373_d=_1bcc71b1a_builtinCallerOutln(_79336_e,_79351_fc,_79373_d);
	if ((_79373_d == nullptr)) {
		return nullptr;
	};
	_79373_d.get()._field_Model.operator jule::Ptr<_1be45a1e2_BuiltinOutlnCallExprModel>().get()._field_Debug=true;
	return _79373_d;
}



inline jule::Bool _1c02c8dea_FindModuleFile(jule::Slice<jule::Ptr<_23214d823_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_1c319727c:;
		if (it != expr.end()) {
			jule::Ptr<_23214d823_DirEntry> &_1312_d = *it;
			{
				if (((!(_2320909eb_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1c319727c:;
			++it;
			goto _iter_begin_1c319727c;
		}
		_iter_end_1c319727c:;
	};
	return false;
}



inline jule::Str _1c02c902c_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_23214d823_DirEntry>> _2617_dirents = ({
				auto except = static__1d63ab67b_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1c3197535;
				} jule::Slice<jule::Ptr<_23214d823_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1c02c8dea_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_1d63a9349_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1c3197535;
			};
		}
	_iter_next_1c3197535:;
	}
	_iter_end_1c3197535:;;
	return jule::Str();
}



inline jule::Slice<_1d6435804_Log> _1c02c92b3_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__23214e89b_Read(_1d63a86de_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1d6435804_Log>::make({_1d6435804_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _539_s = _1d63a6423_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1d6435804_Log>::make({_1d6435804_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1c097c34a_FileInfo> _1c09c3a45_ParseFile(jule::Ptr<_1d676389b_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1c097c34a_FileInfo> _2713_finf = jule::new_ptr<_1c097c34a_FileInfo>();;
	std::tie(_2713_finf.get()._field_Ast,_2713_finf.get()._field_Errors) = _1c09c4073_parseFileset(_2318_f);
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_1be3621a4_Ast>,jule::Slice<_1d6435804_Log>> _1c09c4073_parseFileset(jule::Ptr<_1d676389b_File> _5521_f) {
	jule::Ptr<_1c09e2976_parser> _5613_p = jule::new_ptr<_1c09e2976_parser>();;
	_1c0a02348_parse(_5613_p, _5521_f);
	return std::make_tuple(_5613_p.get()._field_ast,_5613_p.get()._field_errors);
}



inline jule::Ptr<_1be3a6d42_ScopeTree> _1c09c497a_newScope(void) {
	return jule::new_ptr<_1be3a6d42_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1c09c4c88_isSt(jule::Ptr<_1d675d511_Token> _509_current, jule::Ptr<_1d675d511_Token> _5026_prev) {
	jule::Bool _5042_ok = jule::Bool();
	jule::Bool _5052_terminated = jule::Bool();
	_5042_ok=((_509_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_5026_prev.get()._field_Row < _509_current.get()._field_Row));
	_5052_terminated=(_509_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_5042_ok,_5052_terminated);
}



inline jule::Bool _1c09c50c9_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1d675d511_Token>>& _5626_tokens, jule::I64& _5645_i) {
	if (((_5645_i > 1LL) && (_5626_tokens[(_5645_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1d675d511_Token> _6213_prev = _5626_tokens[(_5645_i - 1LL)];;
		return ((_6213_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6213_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1d675e006_IsBinOp(_6213_prev.get()._field_Kind)) && (_6213_prev.get()._field_Row < _5626_tokens[_5645_i].get()._field_Row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _1c09c545e_nextStPos(jule::Slice<jule::Ptr<_1d675d511_Token>>& _7115_tokens, jule::I64 _7133_start) {
	jule::I64 _7213_braceN = 0LL;;
	jule::I64 _7313_i = _7133_start;;
	for (; (_7313_i < _7115_tokens.len()); (_7313_i)++) {
		{
			jule::Bool _7517_ok = false;;
			jule::Bool _7617_terminated = false;;
			jule::Ptr<_1d675d511_Token> _7713_tok = _7115_tokens[_7313_i];;
			{
				auto &_match_expr{ _7713_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1c322d478:;
					{
						{
							auto &_match_expr{ _7713_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1c3230128:;
								{
									if (((_7213_braceN == 0LL) && (_7313_i > _7133_start))) {
										if ((!(_1c09c50c9_prevIsIncompleteExpr(_7115_tokens,_7313_i)))) {
											std::tie(_7517_ok,_7617_terminated) = _1c09c4c88_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
											if (_7517_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7213_braceN)++;
								}
							}
							else {
								_case_begin_1c322dca3:;
								{
									(_7213_braceN)--;
									if (((_7213_braceN == 0LL) && ((_7313_i + 1LL) < _7115_tokens.len()))) {
										std::tie(_7517_ok,_7617_terminated) = _1c09c4c88_isSt(_7115_tokens[(_7313_i + 1LL)],_7713_tok);
										if (_7517_ok) {
											(_7313_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1c322dad8:;
						};
						goto _iter_next_1c322bab4;
					}
				}
				_match_end_1c322d423:;
			};
			if ((_7213_braceN != 0LL)) {
				goto _iter_next_1c322bab4;
			};
			if ((_7313_i > _7133_start)) {
				if (_1c09c50c9_prevIsIncompleteExpr(_7115_tokens,_7313_i)) {
					goto _iter_next_1c322bab4;
				};
				std::tie(_7517_ok,_7617_terminated) = _1c09c4c88_isSt(_7713_tok,_7115_tokens[(_7313_i - 1LL)]);
			} else {
				std::tie(_7517_ok,_7617_terminated) = _1c09c4c88_isSt(_7713_tok,_7713_tok);
			};
			if ((!(_7517_ok))) {
				goto _iter_next_1c322bab4;
			};
			_julec_label_return:;
			if (_7617_terminated) {
				(_7313_i)++;
			};
			return std::make_tuple(_7313_i,_7617_terminated);
		}
	_iter_next_1c322bab4:;
	}
	_iter_end_1c322bab4:;;
	return std::make_tuple(_7313_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1d675d511_Token>>,jule::Bool> _1c09c57a0_skipSt(jule::I64& _13316_i, jule::Slice<jule::Ptr<_1d675d511_Token>> _13328_tokens) {
	jule::I64 _1349_start = _13316_i;;
	jule::Bool _13513_terminated = false;;
	std::tie(_13316_i,_13513_terminated) = _1c09c545e_nextStPos(_13328_tokens,_1349_start);
	jule::Slice<jule::Ptr<_1d675d511_Token>> _13713_stTokens = _13328_tokens.slice(_1349_start,_13316_i);;
	if (_13513_terminated) {
		if ((_13713_stTokens.len() == 1LL)) {
			std::tie(_13713_stTokens,_13513_terminated) = _1c09c57a0_skipSt(_13316_i,_13328_tokens);
			return std::make_tuple(_13713_stTokens,_13513_terminated);
		};
		_13713_stTokens=_13713_stTokens.slice(0LL,(_13713_stTokens.len() - 1LL));
	};
	return std::make_tuple(_13713_stTokens,_13513_terminated);
}



inline jule::Slice<jule::Ptr<_1c09c5a9c_stmt>> _1c09c5e43_splitStmts(jule::Slice<jule::Ptr<_1d675d511_Token>>& _15520_tokens) {
	jule::Slice<jule::Ptr<_1c09c5a9c_stmt>> _15613_stmts = jule::Slice<jule::Ptr<_1c09c5a9c_stmt>>::alloc(0LL,20LL);;
	jule::I64 _15713_pos = 0LL;;
	while ((_15713_pos < _15520_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1d675d511_Token>> _15918_stmt;;
			jule::Bool _15924_terminated;;
			std::tie(_15918_stmt,_15924_terminated) = _1c09c57a0_skipSt(_15713_pos,_15520_tokens);
			_15613_stmts = jule::alloc_for_append(_15613_stmts,1);_15613_stmts.__push(jule::new_ptr<_1c09c5a9c_stmt>(_1c09c5a9c_stmt{._field_tokens=_15918_stmt, ._field_terminated=_15924_terminated}));;
		}
	_iter_next_1c3237bbe:;
	}
	_iter_end_1c3237bbe:;;
	return _15613_stmts;
}



inline jule::Bool _1c09dc586_isTypeOp(jule::Str& _89314_kind) {
	return (((_89314_kind == jule::Str("&", 1)) || (_89314_kind == jule::Str("&&", 2))) || (_89314_kind == jule::Str("*", 1)));
}



inline jule::Bool _1c09dc872_isTypeRange(jule::Slice<jule::Ptr<_1d675d511_Token>>& _90021_tokens) {
	jule::Bool _90113_op = false;;
	{
		auto &expr = _90021_tokens;
		auto it = expr.begin();
		_iter_begin_1c2c63a4c:;
		if (it != expr.end()) {
			jule::I64 _9029_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _90212_token = *it;
			{
				if ((_90212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_90212_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_90113_op) {
							return true;
						};
						jule::I64 _90825_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_1d675d511_Token>> _90925_lTokens = _90021_tokens.slice(_9029_i);;
						{
							auto &expr = _90925_lTokens;
							auto it = expr.begin();
							_iter_begin_1c2c64e7c:;
							if (it != expr.end()) {
								jule::Ptr<_1d675d511_Token> _91024_lToken = *it;
								{
									{
										auto &_match_expr{ _91024_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_1c2c66731:;
											{
												{
													auto &_match_expr{ _91024_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1c2c670a0:;
														{
															(_90825_rangeN)++;
															goto _iter_next_1c2c64e7c;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1c2c67127:;
														{
															(_90825_rangeN)--;
															goto _iter_next_1c2c64e7c;
														}
													}
													_match_end_1c2c66dc4:;
												};
											}
										}
										_match_end_1c2c66511:;
									};
									if ((_90825_rangeN == 0LL)) {
										return _1c09dc586_isTypeOp(_91024_lToken.get()._field_Kind);
									};
								}
								_iter_next_1c2c64e7c:;
								++it;
								goto _iter_begin_1c2c64e7c;
							}
							_iter_end_1c2c64e7c:;
						};
						return true;
					};
				};
				if ((!(_1c09dc586_isTypeOp(_90212_token.get()._field_Kind)))) {
					return false;
				};
				_90113_op=true;
			}
			_iter_next_1c2c63a4c:;
			++it;
			_9029_i++;
			goto _iter_begin_1c2c63a4c;
		}
		_iter_end_1c2c63a4c:;
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1d675d511_Token>> _1c09dcb19_getBlockExpr(jule::Slice<jule::Ptr<_1d675d511_Token>>& _93822_tokens) {
	jule::I64 _93913_braceN = 0LL;;
	jule::I64 _94013_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93822_tokens;
		auto it = expr.begin();
		_iter_begin_1c2c689ca:;
		if (it != expr.end()) {
			jule::I64 _9419_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _94112_tok = *it;
			{
				{
					auto &_match_expr{ _94112_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1c2c69866:;
						{
							(_94013_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1c2c698dd:;
						{
							{
								auto &_match_expr{ _94112_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1c2c6a647:;
									{
										if (((_93913_braceN > 0LL) || (_94013_skipToNextBraceClose > 0LL))) {
											if ((_94013_skipToNextBraceClose > 0LL)) {
												(_94013_skipToNextBraceClose)--;
											};
											(_93913_braceN)++;
											goto _match_end_1c2c6a779;
										};
										return _93822_tokens.slice(0LL,_9419_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1c2c6aceb:;
									{
										(_93913_braceN)++;
									}
								}
								else {
									_case_begin_1c2c6a889:;
									{
										(_93913_braceN)--;
									}
								}
								_match_end_1c2c6a779:;
							};
						}
					}
					_match_end_1c2c6968a:;
				};
			}
			_iter_next_1c2c689ca:;
			++it;
			_9419_i++;
			goto _iter_begin_1c2c689ca;
		}
		_iter_end_1c2c689ca:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1d675d511_Token>>,jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c09dce9e_splitDelim(jule::Slice<jule::Ptr<_1d675d511_Token>>& _96920_tokens, jule::U64 _96938_delim) {
	jule::I64 _97013_rangeN = 0LL;;
	{
		auto &expr = _96920_tokens;
		auto it = expr.begin();
		_iter_begin_1c2c6c55b:;
		if (it != expr.end()) {
			jule::I64 _9719_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _97112_token = *it;
			{
				{
					auto &_match_expr{ _97112_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1c2c6d13e:;
						{
							{
								auto &_match_expr{ _97112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1c2c6d78d:;
									{
										(_97013_rangeN)++;
										goto _iter_next_1c2c6c55b;
									}
								}
								else {
									_case_begin_1c2c6da24:;
									{
										(_97013_rangeN)--;
									}
								}
								_match_end_1c2c6d859:;
							};
						}
					}
					else if (_match_expr == _96938_delim) {
						_case_begin_1c2c6d1b6:;
						{
							if ((_97013_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1d675d511_Token>> _98525_l = _96920_tokens.slice(0LL,_9719_i);;
								jule::Slice<jule::Ptr<_1d675d511_Token>> _98625_r = _96920_tokens.slice((_9719_i + 1LL));;
								return std::make_tuple(_98525_l,_98625_r);
							};
						}
					}
					_match_end_1c2c6ce0d:;
				};
			}
			_iter_next_1c2c6c55b:;
			++it;
			_9719_i++;
			goto _iter_begin_1c2c6c55b;
		}
		_iter_end_1c2c6c55b:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1c09dd246_findLowestPrecOp(jule::Slice<jule::Ptr<_1d675d511_Token>>& _99622_tokens) {
	jule::U8 _100113_prec = 255LLU;;
	jule::I64 _100213_precPos = -1LL;;
	jule::I64 _100413_braceN = 0LL;;
	jule::Bool _100513_skipToNextBraceOpen = false;;
	{
		auto &expr = _99622_tokens;
		auto it = expr.begin();
		_iter_begin_1c2c71928:;
		if (it != expr.end()) {
			jule::I64 _10069_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> &_100612_token = *it;
			{
				{
					
					if ((_100612_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1c2c7273c:;
						{
							{
								auto &_match_expr{ _100612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1c2c73375:;
									{
										_100513_skipToNextBraceOpen=false;
										goto _case_begin_1c2c73ab2;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1c2c73ab2:;
									{
										(_100413_braceN)++;
									}
								}
								else {
									_case_begin_1c2c7360b:;
									{
										(_100413_braceN)--;
									}
								}
								_match_end_1c2c73441:;
							};
							goto _iter_next_1c2c71928;
						}
					}
					else if (_100513_skipToNextBraceOpen) {
						_case_begin_1c2c727b4:;
						{
							goto _iter_next_1c2c71928;
						}
					}
					else if ((_100612_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1c2c7283b:;
						{
							_100513_skipToNextBraceOpen=true;
							goto _iter_next_1c2c71928;
						}
					}
					else if ((_10069_i == 0LL)) {
						_case_begin_1c2c728b3:;
						{
							goto _iter_next_1c2c71928;
						}
					}
					else if ((_100612_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1c2c7293a:;
						{
							goto _iter_next_1c2c71928;
						}
					}
					else if ((_100413_braceN > 0LL)) {
						_case_begin_1c2c729b2:;
						{
							goto _iter_next_1c2c71928;
						}
					}
					_match_end_1c2c725c7:;
				};
				jule::Ptr<_1d675d511_Token> _103313_left = _99622_tokens[(_10069_i - 1LL)];;
				if (((_103313_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_103313_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1c2c71928;
				};
				if ((((_10069_i > 1LL) && (_103313_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_103313_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_1d675d511_Token> _104117_lleft = _99622_tokens[(_10069_i - 2LL)];;
					if (((_104117_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_104117_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100612_token.get()._field_Kind == jule::Str("&", 1)) || (_100612_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1c2c71928;
						};
					};
				};
				jule::U8 _105013_p = _1d675d8b8_Prec(_100612_token.ptr());;
				if (((_105013_p != 0LLU) && (_105013_p <= _100113_prec))) {
					_100113_prec=_105013_p;
					_100213_precPos=_10069_i;
				};
			}
			_iter_next_1c2c71928:;
			++it;
			_10069_i++;
			goto _iter_begin_1c2c71928;
		}
		_iter_end_1c2c71928:;
	};
	return _100213_precPos;
}



inline jule::Ptr<_1be39d0ad_IdentExpr> _1c09dd4dd_buildIdentExpr(jule::Ptr<_1d675d511_Token>& _105924_token) {
	return jule::new_ptr<_1be39d0ad_IdentExpr>(_1be39d0ad_IdentExpr{._field_Token=_105924_token, ._field_Ident=_105924_token.get()._field_Kind, ._field_CppLinked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1d675d511_Token>>,jule::I64> _1c09dd785_getRangeExprTokens(jule::Slice<jule::Ptr<_1d675d511_Token>>& _106728_tokens) {
	jule::I64 _106813_rangeN = 0LL;;
	jule::I64 _106913_i = (_106728_tokens.len() - 1LL);;
	for (; (_106913_i >= 0LL); (_106913_i)--) {
		{
			jule::Ptr<_1d675d511_Token> _107113_tok = _106728_tokens[_106913_i];;
			if ((_107113_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _107113_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1c2c7b3a0:;
						{
							(_106813_rangeN)++;
						}
					}
					else {
						_case_begin_1c2c7bc63:;
						{
							(_106813_rangeN)--;
						}
					}
					_match_end_1c2c7ba54:;
				};
			};
			if ((_106813_rangeN == 0LL)) {
				return std::make_tuple(_106728_tokens.slice(0LL,_106913_i),_106813_rangeN);
			};
		}
	_iter_next_1c2c7aba7:;
	}
	_iter_end_1c2c7aba7:;;
	return std::make_tuple(nullptr,_106813_rangeN);
}



inline jule::Bool _1c09de4de_checkAssignTokens(jule::Slice<jule::Ptr<_1d675d511_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_1d6762aa9_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1c2d217ec:;
		if (it != expr.end()) {
			jule::Ptr<_1d675d511_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c2d22424:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1c2d226ee:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1c2d224e0:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1c2d217ec;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1d67630e8_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;
				};
			}
			_iter_next_1c2d217ec:;
			++it;
			goto _iter_begin_1c2d217ec;
		}
		_iter_end_1c2d217ec:;
	};
	return false;
}



inline _1d6435804_Log _1c09e0710_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_1d676389b_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _1d6435804_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_1d6435c44_Logf(_5243_fmt,jule::Any(_5256_args)), };
}



inline jule::Slice<jule::Ptr<_1d675d511_Token>> _1c09e0bd8_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1d675d511_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1d675d511_Token> _769_tok = _7163_tokens[_7115_i];;
	if (((_769_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_769_tok.get()._field_Kind != _7123_open))) {
		return nullptr;
	};
	(_7115_i)++;
	jule::I64 _8213_rangeN = 1LL;;
	jule::I64 _839_start = _7115_i;;
	for (; ((_8213_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_1d675d511_Token> _8513_token = _7163_tokens[_7115_i];;
			if ((_8513_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8513_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1c2d28749:;
						{
							(_8213_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1c2d287c1:;
						{
							(_8213_rangeN)--;
						}
					}
					_match_end_1c2d28518:;
				};
			};
		}
	_iter_next_1c2d2700b:;
	}
	_iter_end_1c2d2700b:;;
	return _7163_tokens.slice(_839_start,(_7115_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1d675d511_Token>>,jule::Slice<jule::Ptr<_1d675d511_Token>>> _1c09e0e80_rangeLast(jule::Slice<jule::Ptr<_1d675d511_Token>>& _10619_tokens) {
	jule::Slice<jule::Ptr<_1d675d511_Token>> _10639_cutted = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	jule::Slice<jule::Ptr<_1d675d511_Token>> _10657_cut = jule::Slice<jule::Ptr<_1d675d511_Token>>();
	if ((_10619_tokens.len() == 0LL)) {
		_10639_cutted = _10619_tokens;
		_10657_cut = nullptr;
		return std::make_tuple(_10639_cutted,_10657_cut);
	} else if ((_10619_tokens[(_10619_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		_10639_cutted = _10619_tokens;
		_10657_cut = nullptr;
		return std::make_tuple(_10639_cutted,_10657_cut);
	};
	jule::I64 _11313_braceN = 0LL;;
	jule::I64 _11413_i = (_10619_tokens.len() - 1LL);;
	for (; (_11413_i >= 0LL); (_11413_i)--) {
		{
			jule::Ptr<_1d675d511_Token> _11613_token = _10619_tokens[_11413_i];;
			if ((_11613_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11613_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1c2d2be01:;
						{
							(_11313_braceN)++;
							goto _iter_next_1c2d297a0;
						}
					}
					else {
						_case_begin_1c2d2c808:;
						{
							(_11313_braceN)--;
						}
					}
					_match_end_1c2d2c5e9:;
				};
			};
			if ((_11313_braceN == 0LL)) {
				_10639_cutted = _10619_tokens.slice(0LL,_11413_i);
				_10657_cut = _10619_tokens.slice(_11413_i);
				return std::make_tuple(_10639_cutted,_10657_cut);
			};
		}
	_iter_next_1c2d297a0:;
	}
	_iter_end_1c2d297a0:;;
	_10639_cutted = _10619_tokens;
	_10657_cut = nullptr;
	return std::make_tuple(_10639_cutted,_10657_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>,jule::Slice<_1d6435804_Log>> _1c09e136a_partsKind(jule::Slice<jule::Ptr<_1d675d511_Token>>& _13819_tokens, jule::Str _13837_kind, jule::Bool _13854_expr_must) {
	if ((_13819_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _14313_parts = nullptr;;
	jule::Slice<_1d6435804_Log> _14413_errors = nullptr;;
	jule::I64 _14613_rangeN = 0LL;;
	jule::I64 _14713_last = 0LL;;
	{
		auto &expr = _13819_tokens;
		auto it = expr.begin();
		_iter_begin_1c2d30ee3:;
		if (it != expr.end()) {
			jule::I64 _1489_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _14812_token = *it;
			{
				if ((_14812_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14812_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c2d32038:;
							{
								(_14613_rangeN)++;
								goto _iter_next_1c2d30ee3;
							}
						}
						else {
							_case_begin_1c2d32313:;
							{
								(_14613_rangeN)--;
							}
						}
						_match_end_1c2d32104:;
					};
				};
				if ((_14613_rangeN > 0LL)) {
					goto _iter_next_1c2d30ee3;
				};
				if ((_14812_token.get()._field_Kind == _13837_kind)) {
					if ((_13854_expr_must && ((_1489_i - _14713_last) <= 0LL))) {
						_1d6435804_Log _16721_err = _1c09e0710_makeErr(_14812_token.get()._field_Row,_14812_token.get()._field_Column,_14812_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14413_errors = jule::alloc_for_append(_14413_errors,1);_14413_errors.__push(_16721_err);;
					};
					_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13819_tokens.slice(_14713_last,_1489_i));;
					_14713_last=static_cast<jule::I64>((_1489_i + 1LL));
				};
			}
			_iter_next_1c2d30ee3:;
			++it;
			_1489_i++;
			goto _iter_begin_1c2d30ee3;
		}
		_iter_end_1c2d30ee3:;
	};
	if ((_14713_last < _13819_tokens.len())) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(_13819_tokens.slice(_14713_last));;
	} else if ((!(_13854_expr_must))) {
		_14313_parts = jule::alloc_for_append(_14313_parts,1);_14313_parts.__push(jule::Slice<jule::Ptr<_1d675d511_Token>>());;
	};
	return std::make_tuple(_14313_parts,_14413_errors);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>>,jule::Slice<_1d6435804_Log>> _1c09e1755_parts(jule::Slice<jule::Ptr<_1d675d511_Token>>& _19015_tokens, jule::U64 _19033_id, jule::Bool _19046_expr_must) {
	if ((_19015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1d675d511_Token>>> _19513_parts = nullptr;;
	jule::Slice<_1d6435804_Log> _19613_errors = nullptr;;
	jule::I64 _19813_rangeN = 0LL;;
	jule::I64 _19913_last = 0LL;;
	{
		auto &expr = _19015_tokens;
		auto it = expr.begin();
		_iter_begin_1c2d37a11:;
		if (it != expr.end()) {
			jule::I64 _2009_i = it - expr.begin();
			jule::Ptr<_1d675d511_Token> _20012_token = *it;
			{
				if ((_20012_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _20012_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c2d38a56:;
							{
								(_19813_rangeN)++;
								goto _iter_next_1c2d37a11;
							}
						}
						else {
							_case_begin_1c2d38d31:;
							{
								(_19813_rangeN)--;
							}
						}
						_match_end_1c2d38b22:;
					};
				};
				if ((_19813_rangeN > 0LL)) {
					goto _iter_next_1c2d37a11;
				};
				if ((_20012_token.get()._field_Id == _19033_id)) {
					if ((_19046_expr_must && ((_2009_i - _19913_last) <= 0LL))) {
						_1d6435804_Log _21921_err = _1c09e0710_makeErr(_20012_token.get()._field_Row,_20012_token.get()._field_Column,_20012_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19613_errors = jule::alloc_for_append(_19613_errors,1);_19613_errors.__push(_21921_err);;
					};
					_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last,_2009_i));;
					_19913_last=static_cast<jule::I64>((_2009_i + 1LL));
				};
			}
			_iter_next_1c2d37a11:;
			++it;
			_2009_i++;
			goto _iter_begin_1c2d37a11;
		}
		_iter_end_1c2d37a11:;
	};
	if ((_19913_last < _19015_tokens.len())) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(_19015_tokens.slice(_19913_last));;
	} else if ((!(_19046_expr_must))) {
		_19513_parts = jule::alloc_for_append(_19513_parts,1);_19513_parts.__push(jule::Slice<jule::Ptr<_1d675d511_Token>>());;
	};
	return std::make_tuple(_19513_parts,_19613_errors);
}



inline jule::Str _1c09e19ec_getCloseKindOfBrace(jule::Str _23624_left) {
	{
		auto &_match_expr{ _23624_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1c2d3c571:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1c2d3c5d7:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1c2d3c64d:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1c2d3c032:;
			{
				return jule::Str();
			}
		}
		_match_end_1c2d3be77:;
	};
}



inline _1d6435804_Log _1c09e1dd7_compilerErr(jule::Ptr<_1d675d511_Token>& _24917_token, jule::Str& _24933_fmt, jule::Slice<jule::Any> _24946_args) {
	return _1d6435804_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24917_token.get()._field_Row, ._field_Column=_24917_token.get()._field_Column, ._field_Path=_24917_token.get()._field_File.get()._field_Path, ._field_Text=_1d6435c44_Logf(_24933_fmt,jule::Any(_24946_args)), ._field_Line=_1d6764a78_GetRow(_24917_token.get()._field_File.ptr(), _24917_token.get()._field_Row), };
}



inline void _1c09e2316_pushSuggestion(_1d6435804_Log* _26030_log, jule::Str _26041_fmt, jule::Slice<jule::Any> _26054_args) {
	_26030_log->_field_Suggestion=_1d6435c44_Logf(_26041_fmt,jule::Any(_26054_args));
}



inline jule::Str _1c09e25ad_tokstoa(jule::Slice<jule::Ptr<_1d675d511_Token>>& _26413_tokens) {
	jule::I64 _26513_n = 0LL;;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_1c2d407e9:;
		if (it != expr.end()) {
			jule::Ptr<_1d675d511_Token> &_26612_token = *it;
			{
				_26513_n+=_26612_token.get()._field_Kind.len();
			}
			_iter_next_1c2d407e9:;
			++it;
			goto _iter_begin_1c2d407e9;
		}
		_iter_end_1c2d407e9:;
	};
	jule::Str _26913_s = jule::Str::alloc(_26513_n);;
	{
		auto &expr = _26413_tokens;
		auto it = expr.begin();
		_iter_begin_1c2d414ba:;
		if (it != expr.end()) {
			jule::Ptr<_1d675d511_Token> &_27012_token = *it;
			{
				_26913_s+=_27012_token.get()._field_Kind;
			}
			_iter_next_1c2d414ba:;
			++it;
			goto _iter_begin_1c2d414ba;
		}
		_iter_end_1c2d414ba:;
	};
	return _26913_s;
}



inline jule::Bool _1c0a02623_isPub(jule::Str& _204111_ident) {
	jule::I32 _204210_r;;
	std::tie(_204210_r,std::ignore) = _1d639e75c_DecodeRuneStr(_204111_ident);
	return _200a329ca_IsUpper(_204210_r);
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a02e92_buildVoidType(void) {
	return jule::new_ptr<_1be396a24_TypeDecl>();
}



inline jule::Ptr<_1be396a24_TypeDecl> _1c0a03206_buildPrimType(jule::Ptr<_1d675d511_Token> _2322_t) {
	return jule::new_ptr<_1be396a24_TypeDecl>(_1be396a24_TypeDecl{._field_Token=_2322_t, ._field_Kind=static_cast<jule::Any>(jule::new_ptr<_1be3970da_IdentTypeDecl>(_1be3970da_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }))});
}



inline jule::I64 _1c0a03547_mapColon(jule::Slice<jule::Ptr<_1d675d511_Token>>& _3618_tokens, jule::I64& _3641_i) {
	jule::I64 _3651_delim = jule::I64();
	_3651_delim=-1LL;
	jule::I64 _3813_rangeN = 0LL;;
	for (; (_3641_i < _3618_tokens.len()); (_3641_i)++) {
		{
			jule::Ptr<_1d675d511_Token> _4013_token = _3618_tokens[_3641_i];;
			if ((_4013_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c3362ada:;
						{
							(_3813_rangeN)++;
							goto _iter_next_1c33623d1;
						}
					}
					else {
						_case_begin_1c336349d:;
						{
							(_3813_rangeN)--;
						}
					}
					_match_end_1c336328e:;
				};
			};
			if ((_3813_rangeN == 0LL)) {
				if (((_3618_tokens.len() - _3641_i) == 1LL)) {
					return _3651_delim;
				};
				if ((_3618_tokens[(_3641_i + 1LL)].get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_3651_delim = static_cast<jule::I64>((_3641_i + 1LL));
					return _3651_delim;
				};
				goto _iter_end_1c33623d1;
			};
		}
	_iter_next_1c33623d1:;
	}
	_iter_end_1c33623d1:;;
	return _3651_delim;
}



inline std::tuple<jule::Bool,jule::Bool> _1c02a3963_checkOs(jule::Str _912_arg) {
	jule::Bool _924_ok = jule::Bool();
	jule::Bool _934_exist = jule::Bool();
	_924_ok=false;
	_934_exist=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1c33b67ed:;
			{
				_924_ok=_1d6438b59_IsWindows(_231eed6a1_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1c33b6402:;
			{
				_924_ok=_1d6438e12_IsDarwin(_231eed6a1_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1c33b61d2:;
			{
				_924_ok=_1d64391a9_IsLinux(_231eed6a1_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1c33b6248:;
			{
				_924_ok=_1d6439cae_IsUnix(_231eed6a1_Os);
			}
		}
		else {
			_case_begin_1c33b59a6:;
			{
				_924_ok=true;
				_934_exist=false;
			}
		}
		_match_end_1c33b5db3:;
	};
	return std::make_tuple(_924_ok,_934_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1c029d95d_checkArch(jule::Str _2814_arg) {
	jule::Bool _2826_ok = jule::Bool();
	jule::Bool _2836_exist = jule::Bool();
	_2826_ok=false;
	_2836_exist=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1c33b8976:;
			{
				_2826_ok=_1d64394c8_IsI386(_231edcc9a_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1c33b8756:;
			{
				_2826_ok=_1d6439770_IsAmd64(_231edcc9a_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1c33b87bc:;
			{
				_2826_ok=_1d6439a17_IsArm64(_231edcc9a_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1c33b8833:;
			{
				_2826_ok=_1d643a3ca_Is64Bit(_231edcc9a_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1c33b8899:;
			{
				_2826_ok=_1d643a133_Is32Bit(_231edcc9a_Arch);
			}
		}
		else {
			_case_begin_1c33b802a:;
			{
				_2826_ok=true;
				_2836_exist=false;
			}
		}
		_match_end_1c33b8437:;
	};
	return std::make_tuple(_2826_ok,_2836_exist);
}



inline jule::Bool _1c029da90_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1d63a8ec5_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _1d63a8986_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _1d63a2919_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok;;
		jule::Bool _6726_exist;;
		std::tie(_6718_ok,_6726_exist) = _1c02a3963_checkOs(_5029_p);
		if (_6726_exist) {
			return _6718_ok;
		};
		std::tie(_6718_ok,_6726_exist) = _1c029d95d_checkArch(_5029_p);
		return ((!(_6726_exist)) || _6718_ok);
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_1d63a2919_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok;;
		jule::Bool _8826_exist;;
		std::tie(_8818_ok,_8826_exist) = _1c02a3963_checkOs(_5813_a1);
		if (_8826_exist) {
			return _8818_ok;
		};
		std::tie(_8818_ok,_8826_exist) = _1c029d95d_checkArch(_5813_a1);
		return ((!(_8826_exist)) || _8818_ok);
	};
	jule::Bool _9614_ok;;
	jule::Bool _9622_exist;;
	std::tie(_9614_ok,_9622_exist) = _1c029d95d_checkArch(_5813_a1);
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;
		};
		std::tie(_9614_ok,_9622_exist) = _1c02a3963_checkOs(_6113_a2);
		return ((!(_9622_exist)) || _9614_ok);
	};
	std::tie(_9614_ok,_9622_exist) = _1c02a3963_checkOs(_5813_a1);
	return ((!(_9622_exist)) || _9614_ok);
}



inline void _1c02b81c5_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_231eed6a1_Os);;
	if (_1d6439cae_IsUnix(_231eed6a1_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1c02b8428_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_231edcc9a_Arch);;
	if (_1d643a3ca_Is64Bit(_231edcc9a_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_1d643a133_Is32Bit(_231edcc9a_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1c02b86d1_initVars(jule::Slice<jule::Str>& _5518_vars, _1c02b7db7_CompileInfo& _5532_info) {
	_1c02b81c5_setOsVars(_5518_vars);
	_1c02b8428_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c33c48c7:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c33c4ac5:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1c33c5488:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c33c6401:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c33c6148:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c33c61ae:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1c33c639b:;
	};
}



inline jule::Slice<jule::U8> _1be17656d_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__23214e89b_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_232003e26_Exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1d6435804_Log _1c01d8876_flatCompilerErr(jule::Str _4120_text) {
	return _1d6435804_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };
}



inline void _1c08886a7_pushPasses(jule::Ptr<_1c005e312_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c3569242:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1c3569c26:;
					if (it != expr.end()) {
						_1be46662c_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1c3569c26;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1c356aa6d:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1c3569c26;
										};
									}
									_iter_next_1c356aa6d:;
									++it;
									goto _iter_begin_1c356aa6d;
								}
								_iter_end_1c356aa6d:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1c3569c26:;
						++it;
						goto _iter_begin_1c3569c26;
					}
					_iter_end_1c3569c26:;
				};
			}
			_iter_next_1c3569242:;
			++it;
			goto _iter_begin_1c3569242;
		}
		_iter_end_1c3569242:;
	};
}



inline jule::Slice<jule::Str> _1c08b5bce_getAllUniquePasses(jule::Ptr<_1c005e312_Package>& _12828_pkg, jule::Slice<jule::Ptr<_1c005b3a8_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1c08886a7_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1c356bec0:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1c08886a7_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1c356bec0:;
			++it;
			goto _iter_begin_1c356bec0;
		}
		_iter_end_1c356bec0:;
	};
	return _12913_passes;
}



inline _1c02b7db7_CompileInfo _1c08d9395_buildCompileInfo(void) {
	_1c02b7db7_CompileInfo _14213_info = _1c02b7db7_CompileInfo{._field_Prod=_231e8259c_Production, ._field_Test=_231e81a74_Test, };;
	{
		auto &_match_expr{ _231e80d2b_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c356d7c9:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c356d851:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1c356d752:;
	};
	{
		auto &_match_expr{ _231e81304_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c356c1bd:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c356dc2a:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c356dc91:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1c356dae8:;
	};
	return _14213_info;
}



inline void _1c0b15e1d_EliminateDefines(jule::Ptr<_1c0977e39_IR>& _28526_ir) {
	jule::Ptr<_1c0ad59c0_ObjectDeadCode> _28613_ocd = static__1c0ad5e87_new(_28526_ir);;
	_1c0b15b54_elimanate(_28613_ocd);
}



inline jule::Ptr<_1be36332b_Directive> _1c0b162a3_findDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1c35b0e15:;
		if (it != expr.end()) {
			jule::Ptr<_1be36332b_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1c35b0e15:;
			++it;
			goto _iter_begin_1c35b0e15;
		}
		_iter_end_1c35b0e15:;
	};
	return nullptr;
}



inline jule::Bool _1c0b165e4_hasDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_1c0b162a3_findDirective(_30118_directives,_30149_tag) != nullptr);
}



inline void _1c0b1a241_eliminateDeadCodeOfScope(jule::Ptr<_1c00487b3_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1c0049a06_Label>> _2429_labels = jule::Slice<jule::Ptr<_1c0049a06_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1c0049be3_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1c0049be3_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1c0b1733c_scopeDeadCode> _24413_sdc = jule::new_ptr<_1c0b1733c_scopeDeadCode>(_1c0b1733c_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1c0049a06_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1c0049be3_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1c0b19e55_optimizeStmts(_24413_sdc);
	};
}



inline void _1c0b1a4c7_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1be45e6e1_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1c36041bc:;
		if (it != expr.end()) {
			jule::Ptr<_1be45e6e1_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1c36047c7:;
					if (it != expr.end()) {
						jule::Ptr<_1be462392_FnIns> _25621_ins = *it;
						{
							_1c0b1a241_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1c36047c7:;
						++it;
						goto _iter_begin_1c36047c7;
					}
					_iter_end_1c36047c7:;
				};
			}
			_iter_next_1c36041bc:;
			++it;
			goto _iter_begin_1c36041bc;
		}
		_iter_end_1c36041bc:;
	};
}



inline void _1c0b1a719_eliminateFunctionsScopePackage(jule::Ptr<_1c005e312_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c3604c8e:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _26317_f = *it;
			{
				_1c0b1a4c7_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1c3604c8e:;
			++it;
			goto _iter_begin_1c3604c8e;
		}
		_iter_end_1c3604c8e:;
	};
}



inline void _1c0b1a9b1_eliminateScopePackage(jule::Ptr<_1c005e312_Package>& _26831_pkg) {
	_1c0b1a719_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1c0b1abc0_EliminateScopes(jule::Ptr<_1c0977e39_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1c005b3a8_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1c0b1a9b1_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1c3606862:;
	}
	_iter_end_1c3606862:;;
	_1c0b1a9b1_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _1bca571b4_isStdPackage(jule::Str _39917_f, jule::Str _39925_p) {
	return _1d63616b9_HasPrefix(_39917_f,_1d63a86de_Join(jule::Slice<jule::Str>::make({_231edd130_PathStdlib,_39925_p})));
}



inline jule::Bool _1bcb4a3c8_isConstantValidConditionalCase(jule::Ptr<_1c00489a0_If>& _40336_i) {
	{
		auto &_match_expr{ _40336_i.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1be3e8c63_Const>>()) {
			_case_begin_1c36776a2:;
			{
				jule::Ptr<_1be3e8c63_Const> _40613_c = _40336_i.get()._field_Expr.operator jule::Ptr<_1be3e8c63_Const>();;
				return (_1be45275b_IsBool(_40613_c.ptr()) && _1be4503b3_ReadBool(_40613_c.ptr()));
			}
		}
		_match_end_1c36774e8:;
	};
	return false;
}



inline jule::Bool _1bcb58848_isUnreachableExpr(jule::Any& _41223_expr) {
	{
		auto &_match_expr{ _41223_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1be3e8c63_Const>>()) {
			_case_begin_1c36780ba:;
			{
				jule::Ptr<_1be3e8c63_Const> _41513_c = _41223_expr.operator jule::Ptr<_1be3e8c63_Const>();;
				return (_1be45275b_IsBool(_41513_c.ptr()) && (!(_1be4503b3_ReadBool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1be457464_BinopExprModel>>()) {
			_case_begin_1c3678131:;
			{
				jule::Ptr<_1be457464_BinopExprModel> _41813_m = _41223_expr.operator jule::Ptr<_1be457464_BinopExprModel>();;
				if ((_41813_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_1bcb58848_isUnreachableExpr(_41813_m.get()._field_Left.get()._field_Model) || _1bcb58848_isUnreachableExpr(_41813_m.get()._field_Right.get()._field_Model));
				};
			}
		}
		_match_end_1c36785b5:;
	};
	return false;
}



inline jule::Bool _1bcb61e17_isConstantValidMatchCase(jule::Ptr<_1c004a9e6_Case>& _42730_case) {
	{
		auto &expr = _42730_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c367b112:;
		if (it != expr.end()) {
			jule::Ptr<_1c00cd282_Data> &_42812_expr = *it;
			{
				if (((_1c00cdb45_IsConst(_42812_expr.ptr()) && _1be45275b_IsBool(_42812_expr.get()._field_Constant.ptr())) && _1be4503b3_ReadBool(_42812_expr.get()._field_Constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1c367b112:;
			++it;
			goto _iter_begin_1c367b112;
		}
		_iter_end_1c367b112:;
	};
	return false;
}



inline jule::Bool _1bcb9a538_isUnreachableConditionalCase(jule::Ptr<_1c00489a0_If>& _43634_i) {
	return _1bcb58848_isUnreachableExpr(_43634_i.get()._field_Expr);
}



inline jule::Bool _1bcb9c826_isUnreachableMatchCase(jule::Ptr<_1c004a9e6_Case>& _44028_case) {
	{
		auto &expr = _44028_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c367cd17:;
		if (it != expr.end()) {
			jule::Ptr<_1c00cd282_Data> &_44112_expr = *it;
			{
				if ((!(_1bcb58848_isUnreachableExpr(_44112_expr.get()._field_Model)))) {
					return false;
				};
			}
			_iter_next_1c367cd17:;
			++it;
			goto _iter_begin_1c367cd17;
		}
		_iter_end_1c367cd17:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1bcc56e1e_checkForBitShiftOpt(jule::Ptr<_1be457277_OperandExprModel>& _42725_l, jule::Ptr<_1be457277_OperandExprModel>& _42748_r) {
	jule::Bool _42772_ok = jule::Bool();
	jule::U64 _42782_x = jule::U64();
	if (((!(_1c004810e_IsInt(_1c0109720_Str(_42725_l.get()._field_Kind.ptr())))) || (!(_1c004810e_IsInt(_1c0109720_Str(_42748_r.get()._field_Kind.ptr())))))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	{
		auto &_match_expr{ _42748_r.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be3e8c63_Const>>()) {
			_case_begin_1c36b6988:;
			{
				goto _match_end_1c36b745b;
			}
		}
		else {
			_case_begin_1c36b759e:;
			{
				_42772_ok = false;
				_42782_x = 0LLU;
				return std::make_tuple(_42772_ok,_42782_x);
			}
		}
		_match_end_1c36b745b:;
	};
	_42782_x=static_cast<jule::U64>(_1be450d64_AsU64(_42748_r.get()._field_Model.operator jule::Ptr<_1be3e8c63_Const>().ptr()));
	if (((_42782_x == 0LLU) || ((_42782_x & 1LL) != 0LLU))) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	jule::F64 _4419_j = _1c0017be4_Log2(static_cast<jule::F64>(static_cast<jule::F64>(_42782_x)));;
	jule::U64 _4429_z = static_cast<jule::U64>(_4419_j);;
	if ((static_cast<jule::F64>(_4429_z) != _4419_j)) {
		_42772_ok = false;
		_42782_x = 0LLU;
		return std::make_tuple(_42772_ok,_42782_x);
	};
	_42772_ok = true;
	_42782_x = _4429_z;
	return std::make_tuple(_42772_ok,_42782_x);
}



inline void _1bcc57804_PushOptLevel(jule::I64 _3217_level) {
	_1d6ceb164_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_1d6d0072e_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_1d6d019c7_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_1d6d0e7a4_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_1bca1e302_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_1bca23dd9_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_1bca2ba29_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_1bca39b03_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _1c0aaac70_detectEnabled(void) {
	_1c0a22ac7_exprEnabled=(((_1bca2ba29_Ptr || _1d6d0e7a4_Math) || _1bca1e302_Access) || _1bca39b03_Cond);
	_1c0a23c2c_scopeEnabled=((_1bca39b03_Cond || _1d6d019c7_Append) || _1d6ceb164_Copy);
}



inline void _1c0b38083_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_232003e26_Exit(1LL);
}



inline jule::U64 _1c1215693_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1c12159d4_unixYearToSeconds(jule::U64 _26222_y, jule::Bool& _26240_leap) {
	if (((_26222_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26222_y - 68LLU) >> 2LLU);;
		_26240_leap=(((_26222_y - 68LLU) & 3LLU) == 0LLU);
		if (_26240_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26222_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26222_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26222_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26240_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26240_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26240_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26240_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26222_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1c1215d69_unixMonthToSeconds(jule::U64 _31923_m, jule::Bool _31936_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31923_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1c3749059:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c37491ad:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c3749224:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c374928a:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c3749301:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c3749367:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1c37493cd:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1c3749444:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c37494aa:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1c3749521:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c3749598:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1c3749004:;
	};
	if ((_31936_leap && (_31923_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1c1190b07_isCopyOptimizable(jule::Ptr<_1c00cd282_Data>& _74123_expr) {
	if ((!(_74123_expr.get()._field_Lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _74123_expr.get()._field_Model };
		
		if (_match_expr.type_is<jule::Ptr<_1be458c6d_SlicingExprModel>>()) {
			_case_begin_1c37c8b88:;
			{
				return false;
			}
		}
		_match_end_1c37c91a5:;
	};
	return true;
}



inline jule::Bool _1c1190e8c_isIterCopyOptimizable(jule::Ptr<_1c00cd282_Data>& _75227_expr, jule::Ptr<_1c0081334_Var>& _75241_v) {
	if (((!(_75227_expr.get()._field_Lvalue)) && (!(_1c010a721_Mutable(_75227_expr.get()._field_Kind.ptr()))))) {
		return true;
	};
	return ((!(_75241_v.get()._field_Mutable)) && (!(_75227_expr.get()._field_Mutable)));
}



inline jule::Str _1c119e088_decomposeCommonEsq(jule::U8 _114123_b) {
	{
		auto &_match_expr{ _114123_b };
		
		if (_match_expr == '\\') {
			_case_begin_1c387e9db:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c387ea52:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c387eca5:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1c387ed1b:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1c387ed82:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1c387ede8:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1c387ee70:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1c387eee7:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1c388006e:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1c38800e6:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1c387e876:;
			{
				return jule::Str();
			}
		}
		_match_end_1c387e7bb:;
	};
}



inline jule::Str _1c119e374_sbtoa(jule::U8 _116810_b) {
	if ((_116810_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_116810_b < 128LLU)) {
		jule::Str _117313_seq = _1c119e088_decomposeCommonEsq(_116810_b);;
		if ((!(_117313_seq.empty()))) {
			return _117313_seq;
		};
		if (((32LL <= _116810_b) && (_116810_b <= 126LLU))) {
			return static_cast<jule::Str>(_116810_b);
		};
	};
	jule::Str _11819_seq = _1c00463b5_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_116810_b)),8LL);;
	if ((_11819_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11819_seq);
	};
	return (jule::Str("\\", 1) + _11819_seq);
}



inline jule::Str _1c119e61b_cstrBytes(jule::Slice<jule::U8> _118814_bytes) {
	jule::Str _118913_lit = jule::Str::alloc(_118814_bytes.len());;
	{
		auto &expr = _118814_bytes;
		auto it = expr.begin();
		_iter_begin_1c388567e:;
		if (it != expr.end()) {
			jule::U8 &_119012_b = *it;
			{
				_118913_lit+=_1c119e374_sbtoa(_119012_b);
			}
			_iter_next_1c388567e:;
			++it;
			goto _iter_begin_1c388567e;
		}
		_iter_end_1c388567e:;
	};
	return _118913_lit;
}



inline jule::Str _1c119e93a_cstrLit(jule::Slice<jule::U8> _119612_bytes) {
	return ((jule::Str("\"", 1) + _1c119e61b_cstrBytes(_119612_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1c119ec48_ftoa(jule::F64 _12009_f, jule::I64 _120017_bitsize) {
	if ((_120017_bitsize != 32LL)) {
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::I64>(_12009_f)))) {
			return _1c119eee0_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12009_f)));
		};
		if ((_12009_f == static_cast<jule::F64>(static_cast<jule::U64>(_12009_f)))) {
			return _1c11a0287_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12009_f)));
		};
	};
	jule::Str _120913_m = _1be976cb3_FmtFloat(_12009_f,'f',-1LL,_120017_bitsize);;
	if ((!(_1d63a3684_Contains(_120913_m,jule::Str(".", 1))))) {
		_120913_m+=jule::Str(".0", 2);
	};
	return _120913_m;
}



inline jule::Str _1c119eee0_itoa(jule::I64 _12169_x) {
	{
		
		if ((_12169_x == jule::MAX_I64)) {
			_case_begin_1c38897e8:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12169_x == jule::MIN_I64)) {
			_case_begin_1c3889881:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1c38896c7:;
	};
	jule::Str _12249_fmt = _1c00464e7_FmtInt(_12169_x,10LL);;
	if (_1d643a3ca_Is64Bit(jule::Str("amd64", 5))) {
		return (_12249_fmt + jule::Str("LL", 2));
	};
	return (_12249_fmt + jule::Str("L", 1));
}



inline jule::Str _1c11a0287_utoa(jule::U64 _12319_x) {
	{
		
		if ((_12319_x == jule::MAX_U64)) {
			_case_begin_1c388b61e:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1c388b50e:;
	};
	jule::Str _12379_fmt = _1c00463b5_FmtUint(_12319_x,10LL);;
	if (_1d643a3ca_Is64Bit(jule::Str("amd64", 5))) {
		return (_12379_fmt + jule::Str("LLU", 3));
	};
	return (_12379_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1c11a063e_isForwarded(jule::Ptr<_1c00487b3_Scope>& _124417_s) {
	jule::Any _12459_last = _124417_s.get()._field_Stmts[(_124417_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12459_last };
		
		if (_match_expr.type_is<jule::Ptr<_1c00cd282_Data>>()) {
			_case_begin_1c388d8eb:;
			{
				{
					auto &_match_expr{ _12459_last.operator jule::Ptr<_1c00cd282_Data>().get()._field_Model };
					
					if (_match_expr.type_is<jule::Ptr<_1be45b248_BuiltinErrorCallExprModel>>()) {
						_case_begin_1c388e512:;
						{
							return true;
						}
					}
					else {
						_case_begin_1c388e49b:;
						{
							return false;
						}
					}
					_match_end_1c388e1d2:;
				};
			}
		}
		else {
			_case_begin_1c388d841:;
			{
				return true;
			}
		}
		_match_end_1c388d7db:;
	};
}



inline jule::Bool _1c11a0908_isBuiltinCallHasDebuginf(jule::Ptr<_1be4580e1_FnCallExprModel>& _125930_m) {
	if ((!(_1be463728_IsBuiltin(_125930_m.get()._field_Func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _125930_m.get()._field_Expr };
		
		if (_match_expr.type_is<jule::Ptr<_1be459b2b_CommonSubIdentExprModel>>()) {
			_case_begin_1c389029e:;
			{
				jule::Ptr<_1be459b2b_CommonSubIdentExprModel> _126513_csie = _125930_m.get()._field_Expr.operator jule::Ptr<_1be459b2b_CommonSubIdentExprModel>();;
				return (_126513_csie.get()._field_Ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1c388de7e:;
			{
				return false;
			}
		}
		_match_end_1c388de29:;
	};
}



inline void _1c121abd7_iterFiles(jule::Ptr<_1c005e312_Package>& _100219_pkg, jule::Fn<void(jule::Ptr<_1c00c8524_SymbolTable>&)> _100234_f) {
	{
		auto &expr = _100219_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c3a024aa:;
		if (it != expr.end()) {
			jule::Ptr<_1c00c8524_SymbolTable> _100317_file = *it;
			{
				_100234_f(_100317_file);
			}
			_iter_next_1c3a024aa:;
			++it;
			goto _iter_begin_1c3a024aa;
		}
		_iter_end_1c3a024aa:;
	};
}



inline void _1c121ae3a_prepareStructure(jule::Ptr<_1be387251_Struct>& _100826_s) {
	{
		auto &expr = _100826_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c3a030c1:;
		if (it != expr.end()) {
			jule::Ptr<_1be3b359b_StructIns> _100917_ins = *it;
			{
				{
					auto &expr = _100917_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c3a037db:;
					if (it != expr.end()) {
						jule::Ptr<_1be45e6e1_Fn> _101021_m = *it;
						{
							if (_101021_m.get()._field_Statically) {
								goto _iter_next_1c3a037db;
							};
							{
								auto &expr = _101021_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1c3a045bc:;
								if (it != expr.end()) {
									jule::Ptr<_1be462392_FnIns> _101425_mins = *it;
									{
										jule::Ptr<_1be4614c3_ParamIns> _101525_p = _101425_mins.get()._field_Params[0LL];;
										if ((!(_1be45d745_IsRef(_101525_p.get()._field_Decl.ptr())))) {
											_101525_p.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c121bde7_customType>(_1c121bde7_customType{._field_kind=static__1c121d79a_asPtr(static__1c1221c98_kind(_101525_p.get()._field_Kind))}), 13)});
										} else {
											_101525_p.get()._field_Kind=jule::new_ptr<_1c0109324_TypeKind>(_1c0109324_TypeKind{._field_Kind=jule::Trait<_1c0108de5_Kind>(jule::new_ptr<_1c121bde7_customType>(_1c121bde7_customType{._field_kind=static__1c1221c98_kind(_101525_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1c3a045bc:;
									++it;
									goto _iter_begin_1c3a045bc;
								}
								_iter_end_1c3a045bc:;
							};
						}
						_iter_next_1c3a037db:;
						++it;
						goto _iter_begin_1c3a037db;
					}
					_iter_end_1c3a037db:;
				};
			}
			_iter_next_1c3a030c1:;
			++it;
			goto _iter_begin_1c3a030c1;
		}
		_iter_end_1c3a030c1:;
	};
}



inline jule::Str _1c121b1d2_concatAllParts(jule::Slice<jule::Ptr<_1d675d511_Token>> _103519_parts) {
	jule::I64 _103613_n = 0LL;;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1c3a035dd:;
		if (it != expr.end()) {
			jule::Ptr<_1d675d511_Token> &_103712_part = *it;
			{
				_103613_n+=_103712_part.get()._field_Kind.len();
			}
			_iter_next_1c3a035dd:;
			++it;
			goto _iter_begin_1c3a035dd;
		}
		_iter_end_1c3a035dd:;
	};
	if ((_103613_n == 0LL)) {
		return jule::Str();
	};
	jule::Str _104313_s = jule::Str::alloc(_103613_n);;
	{
		auto &expr = _103519_parts;
		auto it = expr.begin();
		_iter_begin_1c3a08082:;
		if (it != expr.end()) {
			jule::Ptr<_1d675d511_Token> &_104412_p = *it;
			{
				_104313_s+=_104412_p.get()._field_Kind;
			}
			_iter_next_1c3a08082:;
			++it;
			goto _iter_begin_1c3a08082;
		}
		_iter_end_1c3a08082:;
	};
	return _104313_s;
}



inline jule::Ptr<_1be36332b_Directive> _1c1224608_findDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>& _32923_directives, jule::Str _32954_tag) {
	{
		auto &expr = _32923_directives;
		auto it = expr.begin();
		_iter_begin_1c390dcce:;
		if (it != expr.end()) {
			jule::Ptr<_1be36332b_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_Tag.get()._field_Kind == _32954_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1c390dcce:;
			++it;
			goto _iter_begin_1c390dcce;
		}
		_iter_end_1c390dcce:;
	};
	return nullptr;
}



inline jule::Bool _1c122498d_hasDirective(jule::Slice<jule::Ptr<_1be36332b_Directive>>& _33918_directives, jule::Str _33949_tag) {
	return (_1c1224608_findDirective(_33918_directives,_33949_tag) != nullptr);
}



inline void _232005b4d_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _232005c80_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_232005b4d_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _232005a60_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _232005a60_HelpMap;
		auto it = expr.begin();
		_iter_begin_1c3ae527e:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1c3ae527e:;
			++it;
			goto _iter_begin_1c3ae527e;
		}
		_iter_end_1c3ae527e:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _232005a60_HelpMap;
		auto it = expr.begin();
		_iter_begin_1c3ae80c8:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_200a79329_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1c3ae80c8:;
			++it;
			_519_i++;
			goto _iter_begin_1c3ae80c8;
		}
		_iter_end_1c3ae80c8:;
	};
	jule::outln(_4913_s);
}



inline void _232005db2_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_232005b4d_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _232005ee4_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _232006126_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _232006258_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_232005b4d_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1c3b002ab:;
			{
				_232005ee4_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1c3aeee9d:;
			{
				_232006126_toolDistarch();
			}
		}
		else {
			_case_begin_1c3aed771:;
			{
				_232005b4d_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1c3aeecd3:;
	};
}



inline void _2320063ce_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_232005b4d_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _231e80d2b_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _231e81304_CppStd));
}



inline void _2320066ba_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_232005b4d_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1c3b04821:;
			{
				({
					auto except = static__232150490_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_232005b4d_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1c3b03149:;
			{
				_232005b4d_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1c3b043ae:;
	};
}



inline jule::Bool _232006962_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1c3b05a75:;
			{
				_232005c80_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1c3b05adb:;
			{
				_232005db2_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1c3b05b52:;
			{
				_232006258_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1c3b06339:;
			{
				_2320063ce_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1c3b063a0:;
			{
				_2320066ba_mod(_15320_args);
			}
		}
		else {
			_case_begin_1c3b05998:;
			{
				return false;
			}
		}
		_match_end_1c3b058cc:;
	};
	return true;
}



inline void _232006ac7_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _2339c3152_Args();;
	if ((_18913_args.len() < 2LL)) {
		_232006ac7_showInfo();
		return;;
	};
	if (_232006962_processCommand(_18913_args)) {
		return;;
	};
	_1bd94d74c_compileCommand(_18913_args);
}



inline void _1bd8deb0b_init(void) {
	_231e80d2b_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_233937270_File> _233b29d8b_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _1d63a9349_Dir(_4316_path);;
	({
		auto except = static__2320979c0_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1d63ab88a_Create(_449_dir);
				if (!except.ok()) {
					_1c0b38083_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__23214c811_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_1c0b38083_Throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _233b3d1ce_clearObjects(void) {
	({
		auto except = static__232093cc9_Remove(_1bd8a5ae4_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1d63aba99_Remove(_233b08c38_OutDir);
}



inline void _233b4ed28_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_231eeeeee_Cmd> _7313_cmd = static__23200042d_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_1d63a3343_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _232000692_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1c3b0dc26:;
					{
						static__1c0b35833_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1c3b0d4ea:;
					{
						static__1c0b35833_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1c3b0d75e:;
					{
						static__1c0b35833_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1c3b0d7c5:;
					{
						static__1c0b35833_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1c3b0d63d:;
					{
						static__1c0b35833_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1c3b0d583:;
			};
			_1c0b38083_Throw(jule::Str());
			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _231e80d2b_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1c0b35833_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_1c0b38083_Throw(jule::Str());
	};
	_233b3d1ce_clearObjects();
}



inline jule::Bool _233b53832_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _1d63a2919_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;
	};
	return _1d6429133_IsValidCppExt(_10420_path.slice(_1059_offset));
}



inline void _233b56d63_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _231e81304_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c3b13632:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c3b13698:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c3b137ec:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1c3b134de:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_231e8259c_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _233b5c143_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _231e81304_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c3b15d71:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c3b15dd7:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c3b1603b:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1c3b15c2d:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_231e8259c_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1bd897b2a_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_1c0977e39_IR>& _16436_ir) {
	jule::Str &_16510_compiler = _231e81090_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(64LL);;
	{
		auto &_match_expr{ _231e80d2b_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c3b1877a:;
			{
				_233b5c143_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c3b18cca:;
			{
				_233b56d63_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1c3b18a66:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1c3b1911b:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1c3b1911b:;
			++it;
			goto _iter_begin_1c3b1911b;
		}
		_iter_end_1c3b1911b:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1c3b1a4e6:;
		if (it != expr.end()) {
			jule::Ptr<_1c005b3a8_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _233b53832_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1c3b1a4e6:;
			++it;
			goto _iter_begin_1c3b1a4e6;
		}
		_iter_end_1c3b1a4e6:;
	};
	if ((!(_233b10745_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_233b10745_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	return std::make_tuple(_16510_compiler,_16613_cmd);
}



inline jule::Str _1bd8a5ae4_getCompilePath(void) {
	return _1d63a86de_Join(jule::Slice<jule::Str>::make({_233b08c38_OutDir,_233b104ae_OutName}));
}



inline void _1bd8a7684_applyTargetIndependentOptimizations(jule::Ptr<_1c0977e39_IR>& _20545_ir) {
	jule::Ptr<_1c0ae0aeb_Optimizer> _20713_opt = static__1c0a4e582_New(_20545_ir);;
	_1c0aa59d4_Optimize(_20713_opt.ptr());
}



inline void _1bd8a8388_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _231e80d2b_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c3b1bdcc:;
			{
				_1c0b38083_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c3b1cc02:;
			{
				if (_231e81090_CompilerPath.empty()) {
					_231e81090_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c3b1cc68:;
			{
				if (_231e81090_CompilerPath.empty()) {
					_231e81090_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1c3b1cb8b:;
			{
				_1c0b38083_Throw((jule::Str("invalid option value for --compiler: ", 37) + _231e80d2b_Compiler));
			}
		}
		_match_end_1c3b1c8c2:;
	};
}



inline void _1bd8ba6ec_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_1c0b38083_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1bd8d0217_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_1c0b38083_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1bd8d0d72_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_1c0b38083_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _1d63a3343_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_1c0b38083_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os = _2499_parts[0LL];;
	jule::Str _25414_arch = _2499_parts[1LL];;
	std::tie(_25410_os,_25414_arch) = std::make_tuple(_2499_parts[0LL],_2499_parts[1LL]);
	if ((_25410_os != jule::Str("native", 6))) {
		_1bd8d0217_checkTargetOs(_25410_os);
		_231eed6a1_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1bd8ba6ec_checkTargetArch(_25414_arch);
		_231edcc9a_Arch=_25414_arch;
	};
	_1be86a756_UpdateTarget();
}



inline void _1bd901b40_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_1c0b38083_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1c3b25820:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1c3b25d70:;
			{
				_1bcc57804_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1c3b25600:;
			{
				_1c0b38083_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1c3b2559a:;
	};
}



inline void _1bd91215b_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _231e81304_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c3b25dd6:;
			{
				goto _match_end_1c3b26bd9;
			}
		}
		else {
			_case_begin_1c3b267ee:;
			{
				_1c0b38083_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _231e81304_CppStd));
			}
		}
		_match_end_1c3b26bd9:;
	};
}



inline jule::Slice<jule::Str> _1bd917d21_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1bd8ead15_FlagSet> _29613_fs = static__1bd8cb3cd_New();;
	_1c3b292b3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1c3b292b3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1c3b292b3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_233b10745_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_231e81568_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_231e817cc_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1c3b292b3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_231e80d2b_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1c3b292b3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_231e81090_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_231e8259c_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_231e81d71_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_231e8228e_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1c3b292b3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_231e81304_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d6ceb164_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d6d0072e_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d6d019c7_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d6d0e7a4_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bca1e302_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bca23dd9_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bca2ba29_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1c3b32de3_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1bca39b03_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1bd94a57e_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_1c0b38083_Throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1bd8a8388_checkCompilerFlag();
	_1bd91215b_checkCppStdFlag();
	_1bd8d0d72_checkTargetFlag(_29413_target);
	_1bd901b40_checkOptFlag(_29313_opt);
	return _31813_content;
}



inline void _1bd948cb9_setupSemaFlags(jule::I64& _33124_flags) {
	if (_231e81568_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1c0977e39_IR> _233b3822e_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1bd917d21_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1bd948cb9_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_1c0b38083_Throw(_1d6435c44_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1c0b38083_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok;;
	std::tie(_34814_path,_34820_ok) = _1d63a8c2d_Abs(_3389_content[0LL]);
	if ((!(_34820_ok))) {
		_1c0b38083_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_233937638_Status> _3549_inf = ({
		auto except = static__2320979c0_Of(_231edd130_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1c0b38083_Throw(_1d6435c44_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_233937638_Status>();});
	});;
	if ((!(_2320909eb_IsDir(_3549_inf.ptr())))) {
		_1c0b38083_Throw(_1d6435c44_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1c0977e39_IR> _36214_ir;;
	jule::Slice<_1d6435804_Log> _36218_logs;;
	std::tie(_36214_ir,_36218_logs) = static__1c07dc81a_Build(_34814_path,_34013_semaFlags);
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1c0b38083_Throw(_1d6435c44_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1c0b37615_PrintLogs(_36218_logs);
		_1c0b38083_Throw(jule::Str());
	};
	return _36214_ir;
}



inline void _1bd94d74c_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_231e81a74_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_1c0977e39_IR> _38313_ir = _233b3822e_buildIr(_37724_args);;
	;
	if ((!(_231e81a74_Test))) {
		jule::Ptr<_1be45e6e1_Fn> _38817_main = _1c0060ab6_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_1c0b38083_Throw(_1d6435c44_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1bd8a7684_applyTargetIndependentOptimizations(_38313_ir);
	_1c085829d_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	std::tie(_39910_compiler,_39920_compilerCmd) = _1bd897b2a_genCompileCmd(_1bd8a5ae4_getCompilePath(),_38313_ir);
	jule::Ptr<_1c12163a8_ObjectCoder> _40113_oc = static__1c11e93d0_New(_38313_ir,_1c1215ece_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_231e81a74_Test) {
		jule::Ptr<_1c11a2421_TestCoder> _40617_tc = static__1c11a2894_New(_40113_oc);;
		_1c11a3ac6_Serialize(_40617_tc);
	} else {
		_1c121a874_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1bd8a5ae4_getCompilePath();;
	jule::Ptr<_233937270_File> _41313_file = _233b29d8b_openOutput(_4129_path);;
	({
		auto except = _232095858_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1c0b38083_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _23214da10_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_231e817cc_Transpilation))) {
		_233b4ed28_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_231eb6449_init();
	_1be877d18_init();
	_1bd8deb0b_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}