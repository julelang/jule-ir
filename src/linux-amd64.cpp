// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 29/7/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1dcd899c1_comptimeRangeKind{};
struct _1dcdc9a33_Importer{};
struct _1dce81ec5_Kind{};
struct _1dcea0763_Lookup{};
struct _1c450d5c0_CommonFlag{};
struct _23a869d27_Range16;
struct _23a86a29a_Range32;
struct _23a86a71d_RangeTable;
struct _23a94dd73_acceptRange;
struct _23a990205_lazyBuff;
struct _239897053_DirEntry;
struct _2398972b7_Directory;
struct _2398a4626_File;
struct _2398a6c22_Status;
struct _23ab096b0_cmdAttrs;
struct _23aa28854_Log;
struct _23ae26b42_Token;
struct _23ae2becc_File;
struct _23ae2dcae_kindPair;
struct _23ae34820_lex;
struct _23b6109bd_floatInfo;
struct _24a20cac8_decimalSlice;
struct _24a21de91_leftCheat;
struct _24a21e964_decimal;
struct _24a233549_Const;
struct _1dcd080d2_Ast;
struct _1dcd08e6d_Node;
struct _1dcd09369_Directive;
struct _1dcd3bd80_TypeDecl;
struct _1dcd3c446_IdentTypeDecl;
struct _1dcd3c732_SubIdentTypeDecl;
struct _1dcd3caa6_NamespaceTypeDecl;
struct _1dcd3cd92_SptrTypeDecl;
struct _1dcd3d28d_SlcTypeDecl;
struct _1dcd3d579_TupleTypeDecl;
struct _1dcd3d865_PtrTypeDecl;
struct _1dcd3e03b_ArrTypeDecl;
struct _1dcd3e745_MapTypeDecl;
struct _1dcd3eaec_RetTypeDecl;
struct _1dcd4100a_Expr;
struct _1dcd412e6_RangeExpr;
struct _1dcd4189b_UseExpr;
struct _1dcd41b87_TupleExpr;
struct _1dcd4203e_LitExpr;
struct _1dcd4267c_UnsafeExpr;
struct _1dcd42b00_IdentExpr;
struct _1dcd43309_UnaryExpr;
struct _1dcd436b1_VariadicExpr;
struct _1dcd43a68_CastExpr;
struct _1dcd43e20_NsSelectionExpr;
struct _1dcd44393_SubIdentExpr;
struct _1dcd44816_BinopExpr;
struct _1dcd44e21_FnCallExpr;
struct _1dcd458a0_FieldExprPair;
struct _1dcd46175_StructLit;
struct _1dcd465e8_BraceLit;
struct _1dcd46ecd_KeyValPair;
struct _1dcd4764e_SliceExpr;
struct _1dcd47eac_IndexingExpr;
struct _1dcd485b7_SlicingExpr;
struct _1dcd488a3_Constraint;
struct _1dcd48d26_GenericDecl;
struct _1dcd491cd_LabelSt;
struct _1dcd49585_GotoSt;
struct _1dcd49871_FallSt;
struct _1dcd49e7b_AssignLeft;
struct _1dcd4a4ba_AssignSt;
struct _1dcd4b3ab_Stmt;
struct _1dcd4b9b6_ScopeTree;
struct _1dcd4c18c_ParamDecl;
struct _1dcd4d4ac_FnDecl;
struct _1dcd4e48b_VarDecl;
struct _1dcd4e843_RetSt;
struct _1dcd4eea3_Iter;
struct _1dcd50778_WhileKind;
struct _1dcd51119_RangeKind;
struct _1dcd514c1_BreakSt;
struct _1dcd51878_ContSt;
struct _1dcd51ceb_If;
struct _1dcd521a3_Else;
struct _1dcd52626_Conditional;
struct _1dcd52cec_TypeAliasDecl;
struct _1dcd53270_Case;
struct _1dcd53946_MatchCase;
struct _1dcd541d8_UseDecl;
struct _1dcd5465b_EnumItemDecl;
struct _1dcd55184_EnumDecl;
struct _1dcd55959_TypeEnumItemDecl;
struct _1dcd56064_TypeEnumDecl;
struct _1dcd562c8_FieldDecl;
struct _1dcd56b25_StructDecl;
struct _1dcd572eb_TraitDecl;
struct _1dcd57906_Impl;
struct _1dcd58a6c_Field;
struct _1dcd5a82c_Operators;
struct _1dcd5b641_Struct;
struct _1dcd5d962_FieldIns;
struct _1dcd6335c_OperandExprModel;
struct _1dcd63824_BinopExprModel;
struct _1dcd63bcb_UnaryExprModel;
struct _1dcd640c7_StructArgExprModel;
struct _1dcd6447e_StructLitExprModel;
struct _1dcd6478c_AllocStructLitExprModel;
struct _1dcd64cdc_CastingExprModel;
struct _1dcd6568e_FnCallExprModel;
struct _1dcd65a46_SliceExprModel;
struct _1dcd65eb9_IndexingExprModel;
struct _1dcd66371_AnonFnExprModel;
struct _1dcd66728_KeyValPairExprModel;
struct _1dcd66b9b_MapExprModel;
struct _1dcd671da_SlicingExprModel;
struct _1dcd67729_TraitSubIdentExprModel;
struct _1dcd68010_StructSubIdentExprModel;
struct _1dcd683a6_StructStaticIdentExprModel;
struct _1dcd6876e_ArrayExprModel;
struct _1dcd68a5a_CommonIdentExprModel;
struct _1dcd690bb_CommonSubIdentExprModel;
struct _1dcd693b8_TupleExprModel;
struct _1dcd69792_BuiltinOutCallExprModel;
struct _1dcd69b7c_BuiltinOutlnCallExprModel;
struct _1dcd69e9b_BuiltinCloneCallExprModel;
struct _1dcd6a386_BuiltinNewCallExprModel;
struct _1dcd6a771_BuiltinPanicCallExprModel;
struct _1dcd6ac27_BuiltinAssertCallExprModel;
struct _1dcd6b1cd_BuiltinMakeCallExprModel;
struct _1dcd6b5b8_BuiltinAppendCallExprModel;
struct _1dcd6b8d7_BuiltinLenCallExprModel;
struct _1dcd6bc06_BuiltinCapCallExprModel;
struct _1dcd6c3aa_BuiltinDeleteCallExprModel;
struct _1dcd6c71d_BuiltinCopyCallExprModel;
struct _1dcd6cb08_BuiltinErrorCallExprModel;
struct _1dcd6ce05_SizeofExprModel;
struct _1dcd6d1e1_AlignofExprModel;
struct _1dcd6d4cc_RuneExprModel;
struct _1dcd6d7da_IntegratedToStrExprModel;
struct _1dcd6dba3_BackendEmitExprModel;
struct _1dcd6de8e_FreeExprModel;
struct _1dcd6e951_RetType;
struct _1dcd7015a_Param;
struct _1dcd71997_Fn;
struct _1dcd73779_ParamIns;
struct _1dcd74648_FnIns;
struct _1dcd775a2_ReferenceStack;
struct _1dcd788d3_Pass;
struct _1dcd7d124_symbolBuilder;
struct _1dcd83bb8_Trait;
struct _1dcd85956_EnumItem;
struct _1dcd8644b_Enum;
struct _1dcd874b3_TypeEnumItem;
struct _1dcd87a46_TypeEnum;
struct _1dcd89b9c_comptimeRange;
struct _1dcd8a692_comptimeStructField;
struct _1dcd8c1bb_comptimeStructFields;
struct _1dcd8d695_comptimeStatic;
struct _1dcd90257_comptimeStatics;
struct _1dcd91698_comptimeEnumField;
struct _1dcd928b9_comptimeEnumFields;
struct _1dcd93e1a_comptimeParam;
struct _1dcd95eb6_comptimeParams;
struct _1dcd9747e_comptimeTypeInfos;
struct _1dcd98947_comptimeTypeInfo;
struct _1dcd9e442_comptimeValue;
struct _1dcda1a3d_comptimeFiles;
struct _1dcda3006_comptimeFile;
struct _1dcda6d62_constraintChecker;
struct _1dcda8c10_Impl;
struct _1dcdadc6a_Scope;
struct _1dcdae166_If;
struct _1dcdae452_Else;
struct _1dcdae7c6_Conditional;
struct _1dcdaeab2_InfIter;
struct _1dcdb0035_WhileIter;
struct _1dcdb091a_RangeIter;
struct _1dcdb0d16_ContSt;
struct _1dcdb11bd_BreakSt;
struct _1dcdb14a9_Label;
struct _1dcdb1795_GotoSt;
struct _1dcdb1b4c_Postfix;
struct _1dcdb20c0_Assign;
struct _1dcdb2477_MultiAssign;
struct _1dcdb2a82_Match;
struct _1dcdb35cc_Case;
struct _1dcdb3ba4_FallSt;
struct _1dcdb4006_RetSt;
struct _1dcdb4611_scopeLabel;
struct _1dcdb4a84_scopeGoto;
struct _1dcdb5898_scopeChecker;
struct _1dcdc6601_directiveChecker;
struct _1dcdcc6d4_ImportInfo;
struct _1dcdd031e_Package;
struct _1dcdd4e8e_commonSemaMeta;
struct _1dcdd59a6_Sema;
struct _1dce02a5b_missingRetChecker;
struct _1dce04c6c_IterRelation;
struct _1dce05cb2_Var;
struct _1dce06a60_FuncPattern;
struct _1dce3d734_typeCompatibilityChecker;
struct _1dce4035c_assignTypeChecker;
struct _1dce41d42_dynamicTypeAnnotation;
struct _1dce4673c_fnCallArgChecker;
struct _1dce49113_structLitChecker;
struct _1dce4abe7_rangeChecker;
struct _1dce4d1e4_retTypeChecker;
struct _1dce502b2_SymbolTable;
struct _1dce54cbc_Data;
struct _1dce55d45_Value;
struct _1dce5683a_Eval;
struct _1dce7377a_unaryEval;
struct _1dce7554b_binaryEval;
struct _1dce80ba5_InsGeneric;
struct _1dce816de_TypeAlias;
struct _1dce82437_TypeKind;
struct _1dce892da_TypeSymbol;
struct _1dce89b8c_Prim;
struct _1dce8d3dd_Sptr;
struct _1dce8dd4a_Slc;
struct _1dce8e950_Tuple;
struct _1dce90401_Map;
struct _1dce90ee5_Arr;
struct _1dce91952_Ptr;
struct _1dce92898_referencer;
struct _1dce93778_typeChecker;
struct _1dce9ab6a_identTypeLookup;
struct _1de3bc310_FileInfo;
struct _1de414885_stmt;
struct _1de4151b0_scopeParser;
struct _1de421694_exprBuilder;
struct _1de42ceca_assignInfo;
struct _1de4318c4_parser;
struct _1de4425e9_typeBuilder;
struct _207188c73_CompileInfo;
struct _20718a0c6_directiveEval;
struct _1de4465dc_JuleImporter;
struct _1de44b38e_OrderedDefines;
struct _1de44b603_defineOrderer;
struct _1de54bea6_liveTable;
struct _1de583086_scopeDeadCode;
struct _1de586ee1_exprDeadCode;
struct _1dd0566a4_StrCompExprModel;
struct _1dd056a6c_StrAppendExprModel;
struct _1dd056d58_UnsafeBinopExprModel;
struct _1dd0571dd_UnsafeIndexingExprModel;
struct _1dd057573_PushToSliceExprModel;
struct _1dd05792a_AppendToSliceExprModel;
struct _1dd057e69_MutSlicingExprModel;
struct _1dd058453_StrInsertBeginExprModel;
struct _1dd0586ea_InlineStdInternalNosafeStobs;
struct _1dd05992c_scopeOptimizer;
struct _1dd06026d_exprOptimizer;
struct _1de44cdb8_stdCacheData;
struct _1de58e0a3_Optimizer;
struct _1de5b1658_AnsiEscape;
struct _1de5b2bdc_Logger;
struct _1c4482467_AbsTime;
struct _1c4482b0a_Time;
struct _23b4336d1_scopeCoder;
struct _23b43bbc3_exprCoder;
struct _23b44b991_deriveCoder;
struct _23b44d377_TestCoder;
struct _23b4508b8_identCoder;
struct _1c448a2e9_SerializationInfo;
struct _1c448a7b1_traitHash;
struct _1c448ab68_traitCast;
struct _1c449a4b3_customType;
struct _1c449ae64_typeCoder;
struct _1c44a3a2c_resultCoder;
struct _1d43e8797_Flag;
struct _1d43ec229_Flag;
struct _1d44008d1_Flag;
struct _1d44040cc_Flag;
struct _1d4407784_Flag;
struct _1c451002d_FlagSet;
struct _1c4512739_argParser;
struct _1c448bb8b_ObjectCoder;
struct _1de54c36e_ObjectDeadCode;
struct _1de448d4d_IR;
struct _1dcd5e457_StructIns;
struct _23aab5aab_Cmd;
struct _23a869d27_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_23a869d27_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_23a869d27_Range16 _other) { return !this->operator==(_other); }


};
struct _23a86a29a_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_23a86a29a_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_23a86a29a_Range32 _other) { return !this->operator==(_other); }


};
struct _23a86a71d_RangeTable {
	jule::Slice<_23a869d27_Range16> _field_R16;
	jule::Slice<_23a86a29a_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _23a94dd73_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_23a94dd73_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_23a94dd73_acceptRange _other) { return !this->operator==(_other); }


};
struct _23a990205_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _239897053_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_2398a6c22_Status> _field_Stat;
	

	inline bool operator==(_239897053_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_239897053_DirEntry _other) { return !this->operator==(_other); }


};
struct _2398972b7_Directory {
	

	inline bool operator==(_2398972b7_Directory _other) { return true; }

	inline bool operator!=(_2398972b7_Directory _other) { return !this->operator==(_other); }


};
struct _2398a4626_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_2398a4626_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_2398a4626_File _other) { return !this->operator==(_other); }


};
struct _2398a6c22_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_2398a6c22_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_2398a6c22_Status _other) { return !this->operator==(_other); }


};
struct _23ab096b0_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	inline bool operator==(_23ab096b0_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_23ab096b0_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _23aa28854_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_23aa28854_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_23aa28854_Log _other) { return !this->operator==(_other); }


};
struct _23ae26b42_Token {
	jule::Ptr<_23ae2becc_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_23ae26b42_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_23ae26b42_Token _other) { return !this->operator==(_other); }


};
struct _23ae2becc_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_Tokens;
	


};
struct _23ae2dcae_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_23ae2dcae_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_23ae2dcae_kindPair _other) { return !this->operator==(_other); }


};
struct _23ae34820_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_tokens;
	jule::Ptr<_23ae2becc_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_23aa28854_Log> _field_errors;
	


};
struct _23b6109bd_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_23b6109bd_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_23b6109bd_floatInfo _other) { return !this->operator==(_other); }


};
struct _24a20cac8_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _24a21de91_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_24a21de91_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_24a21de91_leftCheat _other) { return !this->operator==(_other); }


};
struct _24a21e964_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_24a21e964_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_24a21e964_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _24a238b37_Eq(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a238e45_Lt(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a239253_LtEq(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a239561_Gt(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a23986e_GtEq(_24a233549_Const*, _24a233549_Const);
struct _24a233549_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_24a233549_Const _other) { return _24a238b37_Eq(this, _other); }

	inline bool operator!=(_24a233549_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_24a233549_Const _other) { return _24a239561_Gt(this, _other); }

	inline jule::Bool operator>=(_24a233549_Const _other) { return _24a23986e_GtEq(this, _other); }

	inline jule::Bool operator<(_24a233549_Const _other) { return _24a238e45_Lt(this, _other); }

	inline jule::Bool operator<=(_24a233549_Const _other) { return _24a239253_LtEq(this, _other); }


};
struct _1dcd080d2_Ast {
	jule::Ptr<_23ae2becc_File> _field_File;
	jule::Slice<jule::Ptr<_1dcd09369_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1dcd541d8_UseDecl>> _field_UseDecls;
	jule::Slice<_1dcd08e6d_Node> _field_Nodes;
	


};
struct _1dcd08e6d_Node {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1dcd08e6d_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1dcd08e6d_Node _other) { return !this->operator==(_other); }


};
struct _1dcd09369_Directive {
	jule::Ptr<_23ae26b42_Token> _field_Tag;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_Args;
	


};
struct _1dcd3bd80_TypeDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1dcd3bd80_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dcd3bd80_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd3c446_IdentTypeDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _field_Generics;
	


};
struct _1dcd3c732_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1dcd3c446_IdentTypeDecl>> _field_Idents;
	


};
struct _1dcd3caa6_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_Idents;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Kind;
	


};
struct _1dcd3cd92_SptrTypeDecl {
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Elem;
	

	inline bool operator==(_1dcd3cd92_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1dcd3cd92_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd3d28d_SlcTypeDecl {
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Elem;
	

	inline bool operator==(_1dcd3d28d_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1dcd3d28d_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd3d579_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _field_Types;
	


};
struct _1dcd3d865_PtrTypeDecl {
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Elem;
	

	inline bool operator==(_1dcd3d865_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1dcd3d865_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd3e03b_ArrTypeDecl {
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Elem;
	jule::Ptr<_1dcd4100a_Expr> _field_Size;
	

	inline bool operator==(_1dcd3e03b_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1dcd3e03b_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd3e745_MapTypeDecl {
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Key;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Val;
	

	inline bool operator==(_1dcd3e745_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1dcd3e745_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1dcd3eaec_RetTypeDecl {
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_Idents;
	


};
struct _1dcd4100a_Expr {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1dcd4100a_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dcd4100a_Expr _other) { return !this->operator==(_other); }


};
struct _1dcd412e6_RangeExpr {
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	

	inline bool operator==(_1dcd412e6_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd412e6_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1dcd4189b_UseExpr {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	

	inline bool operator==(_1dcd4189b_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd4189b_UseExpr _other) { return !this->operator==(_other); }


};
struct _1dcd41b87_TupleExpr {
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _field_Expr;
	


};
struct _1dcd4203e_LitExpr {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1dcd4203e_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1dcd4203e_LitExpr _other) { return !this->operator==(_other); }


};
struct _1dcd4267c_UnsafeExpr {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	

	inline bool operator==(_1dcd4267c_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd4267c_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1dcd42b00_IdentExpr {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1dcd42b00_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1dcd42b00_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1dcd43309_UnaryExpr {
	jule::Ptr<_23ae26b42_Token> _field_Op;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	

	inline bool operator==(_1dcd43309_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd43309_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1dcd436b1_VariadicExpr {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	

	inline bool operator==(_1dcd436b1_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd436b1_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1dcd43a68_CastExpr {
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Kind;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	

	inline bool operator==(_1dcd43a68_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd43a68_CastExpr _other) { return !this->operator==(_other); }


};
struct _1dcd43e20_NsSelectionExpr {
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_Ns;
	jule::Ptr<_23ae26b42_Token> _field_Ident;
	


};
struct _1dcd44393_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	jule::Ptr<_23ae26b42_Token> _field_Ident;
	

	inline bool operator==(_1dcd44393_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dcd44393_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1dcd44816_BinopExpr {
	jule::Ptr<_1dcd4100a_Expr> _field_Left;
	jule::Ptr<_1dcd4100a_Expr> _field_Right;
	jule::Ptr<_23ae26b42_Token> _field_Op;
	

	inline bool operator==(_1dcd44816_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1dcd44816_BinopExpr _other) { return !this->operator==(_other); }


};
struct _1dcd44e21_FnCallExpr {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _field_Args;
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1dcd458a0_FieldExprPair {
	jule::Ptr<_23ae26b42_Token> _field_Field;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	

	inline bool operator==(_1dcd458a0_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd458a0_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1dcd46175_StructLit {
	jule::Ptr<_23ae26b42_Token> _field_End;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _field_Exprs;
	


};
struct _1dcd465e8_BraceLit {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_End;
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _field_Exprs;
	


};
struct _1dcd46ecd_KeyValPair {
	jule::Ptr<_1dcd4100a_Expr> _field_Key;
	jule::Ptr<_1dcd4100a_Expr> _field_Val;
	jule::Ptr<_23ae26b42_Token> _field_Colon;
	

	inline bool operator==(_1dcd46ecd_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1dcd46ecd_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1dcd4764e_SliceExpr {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_End;
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _field_Exprs;
	


};
struct _1dcd47eac_IndexingExpr {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_End;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	jule::Ptr<_1dcd4100a_Expr> _field_Index;
	

	inline bool operator==(_1dcd47eac_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1dcd47eac_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1dcd485b7_SlicingExpr {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_End;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	jule::Ptr<_1dcd4100a_Expr> _field_Start;
	jule::Ptr<_1dcd4100a_Expr> _field_To;
	

	inline bool operator==(_1dcd485b7_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1dcd485b7_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1dcd488a3_Constraint {
	jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _field_Mask;
	


};
struct _1dcd48d26_GenericDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1dcd488a3_Constraint> _field_Constraint;
	

	inline bool operator==(_1dcd48d26_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1dcd48d26_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1dcd491cd_LabelSt {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1dcd491cd_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dcd491cd_LabelSt _other) { return !this->operator==(_other); }


};
struct _1dcd49585_GotoSt {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_Label;
	

	inline bool operator==(_1dcd49585_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1dcd49585_GotoSt _other) { return !this->operator==(_other); }


};
struct _1dcd49871_FallSt {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	

	inline bool operator==(_1dcd49871_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1dcd49871_FallSt _other) { return !this->operator==(_other); }


};
struct _1dcd49e7b_AssignLeft {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	

	inline bool operator==(_1dcd49e7b_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd49e7b_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1dcd4a4ba_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_23ae26b42_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1dcd49e7b_AssignLeft>> _field_Left;
	jule::Ptr<_1dcd4100a_Expr> _field_Right;
	


};
struct _1dcd4b3ab_Stmt {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1dcd4b3ab_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1dcd4b3ab_Stmt _other) { return !this->operator==(_other); }


};
struct _1dcd4b9b6_ScopeTree {
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1dcd4b3ab_Stmt> _field_Stmts;
	jule::Ptr<_23ae26b42_Token> _field_End;
	


};
struct _1dcd4c18c_ParamDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1dcd4c18c_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dcd4c18c_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1dcd4d4ac_FnDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1dcd09369_Directive>> _field_Directives;
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> _field_Generics;
	jule::Ptr<_1dcd3eaec_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1dcd4c18c_ParamDecl>> _field_Params;
	


};
struct _1dcd4e48b_VarDecl {
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Scope;
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1dcd09369_Directive>> _field_Directives;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Kind;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	


};
struct _1dcd4e843_RetSt {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	

	inline bool operator==(_1dcd4e843_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd4e843_RetSt _other) { return !this->operator==(_other); }


};
struct _1dcd4eea3_Iter {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Scope;
	

	inline bool operator==(_1dcd4eea3_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dcd4eea3_Iter _other) { return !this->operator==(_other); }


};
struct _1dcd50778_WhileKind {
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_23ae26b42_Token> _field_NextToken;
	

	inline bool operator==(_1dcd50778_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1dcd50778_WhileKind _other) { return !this->operator==(_other); }


};
struct _1dcd51119_RangeKind {
	jule::Ptr<_23ae26b42_Token> _field_InToken;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	jule::Ptr<_1dcd4e48b_VarDecl> _field_KeyA;
	jule::Ptr<_1dcd4e48b_VarDecl> _field_KeyB;
	

	inline bool operator==(_1dcd51119_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1dcd51119_RangeKind _other) { return !this->operator==(_other); }


};
struct _1dcd514c1_BreakSt {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_Label;
	

	inline bool operator==(_1dcd514c1_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1dcd514c1_BreakSt _other) { return !this->operator==(_other); }


};
struct _1dcd51878_ContSt {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_Label;
	

	inline bool operator==(_1dcd51878_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1dcd51878_ContSt _other) { return !this->operator==(_other); }


};
struct _1dcd51ceb_If {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Scope;
	

	inline bool operator==(_1dcd51ceb_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dcd51ceb_If _other) { return !this->operator==(_other); }


};
struct _1dcd521a3_Else {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Scope;
	

	inline bool operator==(_1dcd521a3_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dcd521a3_Else _other) { return !this->operator==(_other); }


};
struct _1dcd52626_Conditional {
	jule::Ptr<_1dcd51ceb_If> _field_Head;
	jule::Slice<jule::Ptr<_1dcd51ceb_If>> _field_Tail;
	jule::Ptr<_1dcd521a3_Else> _field_Default;
	


};
struct _1dcd52cec_TypeAliasDecl {
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Kind;
	

	inline bool operator==(_1dcd52cec_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dcd52cec_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1dcd53270_Case {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _field_Exprs;
	


};
struct _1dcd53946_MatchCase {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1dcd53270_Case>> _field_Cases;
	jule::Ptr<_1dcd521a3_Else> _field_Default;
	


};
struct _1dcd541d8_UseDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1dcd5465b_EnumItemDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	

	inline bool operator==(_1dcd5465b_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd5465b_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1dcd55184_EnumDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1dcd5465b_EnumItemDecl>> _field_Items;
	jule::Ptr<_23ae26b42_Token> _field_End;
	


};
struct _1dcd55959_TypeEnumItemDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Kind;
	

	inline bool operator==(_1dcd55959_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dcd55959_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1dcd56064_TypeEnumDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1dcd55959_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_23ae26b42_Token> _field_End;
	


};
struct _1dcd562c8_FieldDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Kind;
	jule::Ptr<_1dcd4100a_Expr> _field_Default;
	

	inline bool operator==(_1dcd562c8_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1dcd562c8_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1dcd56b25_StructDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1dcd562c8_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1dcd09369_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> _field_Generics;
	


};
struct _1dcd572eb_TraitDecl {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_23ae26b42_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1dcd4d4ac_FnDecl>> _field_Methods;
	


};
struct _1dcd57906_Impl {
	jule::Ptr<_23ae26b42_Token> _field_End;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Base;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1dcd4d4ac_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1dcd4e48b_VarDecl>> _field_Statics;
	


};
struct _1dcd58a6c_Field {
	jule::Ptr<_1dcd5b641_Struct> _field_Owner;
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1dce892da_TypeSymbol> _field_Kind;
	jule::Ptr<_1dcd4100a_Expr> _field_Default;
	

	inline bool operator==(_1dcd58a6c_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1dcd58a6c_Field _other) { return !this->operator==(_other); }


};
struct _1dcd5a82c_Operators {
	jule::Ptr<_1dcd74648_FnIns> _field_Eq;
	jule::Ptr<_1dcd74648_FnIns> _field_Gt;
	jule::Ptr<_1dcd74648_FnIns> _field_GtEq;
	jule::Ptr<_1dcd74648_FnIns> _field_Lt;
	jule::Ptr<_1dcd74648_FnIns> _field_LtEq;
	jule::Ptr<_1dcd74648_FnIns> _field_Shl;
	jule::Ptr<_1dcd74648_FnIns> _field_Shr;
	jule::Ptr<_1dcd74648_FnIns> _field_Add;
	jule::Ptr<_1dcd74648_FnIns> _field_Sub;
	jule::Ptr<_1dcd74648_FnIns> _field_Div;
	jule::Ptr<_1dcd74648_FnIns> _field_Mul;
	jule::Ptr<_1dcd74648_FnIns> _field_Mod;
	jule::Ptr<_1dcd74648_FnIns> _field_BitAnd;
	jule::Ptr<_1dcd74648_FnIns> _field_BitOr;
	jule::Ptr<_1dcd74648_FnIns> _field_BitXor;
	jule::Ptr<_1dcd74648_FnIns> _field_Neg;
	jule::Ptr<_1dcd74648_FnIns> _field_Pos;
	jule::Ptr<_1dcd74648_FnIns> _field_BitNot;
	jule::Ptr<_1dcd74648_FnIns> _field_AddAssign;
	jule::Ptr<_1dcd74648_FnIns> _field_SubAssign;
	jule::Ptr<_1dcd74648_FnIns> _field_DivAssign;
	jule::Ptr<_1dcd74648_FnIns> _field_MulAssign;
	jule::Ptr<_1dcd74648_FnIns> _field_ModAssign;
	jule::Ptr<_1dcd74648_FnIns> _field_ShlAssign;
	jule::Ptr<_1dcd74648_FnIns> _field_ShrAssign;
	jule::Ptr<_1dcd74648_FnIns> _field_BitOrAssign;
	jule::Ptr<_1dcd74648_FnIns> _field_BitAndAssign;
	jule::Ptr<_1dcd74648_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1dcd5a82c_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1dcd5a82c_Operators _other) { return !this->operator==(_other); }


};
struct _1dcd5b641_Struct {
	jule::Ptr<_1dcdd59a6_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1dcd5b641_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1dcd5b641_Struct>> _field_Uses;
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1dcd58a6c_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1dcd71997_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1dcd09369_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1dcd83bb8_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1dcd5e457_StructIns>> _field_Instances;
	


};
struct _1dcd5d962_FieldIns {
	jule::Ptr<_1dcd58a6c_Field> _field_Decl;
	jule::Ptr<_1dce82437_TypeKind> _field_Kind;
	jule::Ptr<_1dce54cbc_Data> _field_Default;
	

	inline bool operator==(_1dcd5d962_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1dcd5d962_FieldIns _other) { return !this->operator==(_other); }


};
struct _1dcd6335c_OperandExprModel {
	jule::Ptr<_1dce82437_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1dcd6335c_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1dcd6335c_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd63824_BinopExprModel {
	jule::Ptr<_1dcd6335c_OperandExprModel> _field_Left;
	jule::Ptr<_1dcd6335c_OperandExprModel> _field_Right;
	jule::Ptr<_23ae26b42_Token> _field_Op;
	

	inline bool operator==(_1dcd63824_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1dcd63824_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd63bcb_UnaryExprModel {
	jule::Ptr<_1dce54cbc_Data> _field_Expr;
	jule::Ptr<_23ae26b42_Token> _field_Op;
	

	inline bool operator==(_1dcd63bcb_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1dcd63bcb_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd640c7_StructArgExprModel {
	jule::Ptr<_1dcd5d962_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1dcd640c7_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd640c7_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6447e_StructLitExprModel {
	jule::Ptr<_1dcd5e457_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1dcd640c7_StructArgExprModel>> _field_Args;
	


};
struct _1dcd6478c_AllocStructLitExprModel {
	jule::Ptr<_1dcd6447e_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1dcd6478c_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1dcd6478c_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd64cdc_CastingExprModel {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1dce82437_TypeKind> _field_Kind;
	jule::Ptr<_1dce82437_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1dcd64cdc_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1dcd64cdc_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6568e_FnCallExprModel {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dcd74648_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1dcdadc6a_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1dcd65a46_SliceExprModel {
	jule::Ptr<_1dce82437_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1dcd65eb9_IndexingExprModel {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dce54cbc_Data> _field_Expr;
	jule::Ptr<_1dce54cbc_Data> _field_Index;
	

	inline bool operator==(_1dcd65eb9_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1dcd65eb9_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd66371_AnonFnExprModel {
	jule::Ptr<_1dcd74648_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1dcd66371_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1dcd66371_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd66728_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1dcd66728_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1dcd66728_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd66b9b_MapExprModel {
	jule::Ptr<_1dce82437_TypeKind> _field_KeyKind;
	jule::Ptr<_1dce82437_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1dcd66728_KeyValPairExprModel>> _field_Entries;
	


};
struct _1dcd671da_SlicingExprModel {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1dcd671da_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1dcd671da_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd67729_TraitSubIdentExprModel {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1dcd71997_Fn> _field_Method;
	jule::Ptr<_1dcd83bb8_Trait> _field_Trt;
	

	inline bool operator==(_1dcd67729_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1dcd67729_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd68010_StructSubIdentExprModel {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Ptr<_1dce54cbc_Data> _field_Expr;
	jule::Ptr<_1dcd74648_FnIns> _field_Method;
	jule::Ptr<_1dcd5d962_FieldIns> _field_Field;
	jule::Ptr<_1dcd5e457_StructIns> _field_Owner;
	

	inline bool operator==(_1dcd68010_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1dcd68010_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd683a6_StructStaticIdentExprModel {
	jule::Ptr<_1dcd5e457_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1dcd74648_FnIns> _field_Method;
	

	inline bool operator==(_1dcd683a6_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1dcd683a6_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6876e_ArrayExprModel {
	jule::Ptr<_1dce90ee5_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1dcd68a5a_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	inline bool operator==(_1dcd68a5a_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dcd68a5a_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd690bb_CommonSubIdentExprModel {
	jule::Ptr<_1dce82437_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1dcd690bb_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dcd690bb_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd693b8_TupleExprModel {
	jule::Slice<jule::Ptr<_1dce54cbc_Data>> _field_Datas;
	


};
struct _1dcd69792_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1dcd69792_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1dcd69792_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd69b7c_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1dcd69b7c_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1dcd69b7c_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd69e9b_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1dcd69e9b_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd69e9b_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6a386_BuiltinNewCallExprModel {
	jule::Ptr<_1dce82437_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1dcd6a386_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1dcd6a386_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6a771_BuiltinPanicCallExprModel {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1dcd6a771_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd6a771_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6ac27_BuiltinAssertCallExprModel {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1dcd6ac27_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1dcd6ac27_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6b1cd_BuiltinMakeCallExprModel {
	jule::Ptr<_1dce82437_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1dcd6b1cd_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1dcd6b1cd_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6b5b8_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1dcd6b5b8_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1dcd6b5b8_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6b8d7_BuiltinLenCallExprModel {
	jule::Ptr<_1dce54cbc_Data> _field_Expr;
	

	inline bool operator==(_1dcd6b8d7_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd6b8d7_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6bc06_BuiltinCapCallExprModel {
	jule::Ptr<_1dce54cbc_Data> _field_Expr;
	

	inline bool operator==(_1dcd6bc06_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd6bc06_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6c3aa_BuiltinDeleteCallExprModel {
	jule::Ptr<_1dce54cbc_Data> _field_Dest;
	jule::Ptr<_1dce54cbc_Data> _field_Key;
	

	inline bool operator==(_1dcd6c3aa_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1dcd6c3aa_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6c71d_BuiltinCopyCallExprModel {
	jule::Ptr<_1dce54cbc_Data> _field_Dest;
	jule::Ptr<_1dce54cbc_Data> _field_Src;
	

	inline bool operator==(_1dcd6c71d_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1dcd6c71d_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6cb08_BuiltinErrorCallExprModel {
	jule::Ptr<_1dcd74648_FnIns> _field_Func;
	jule::Ptr<_1dce54cbc_Data> _field_Err;
	

	inline bool operator==(_1dcd6cb08_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1dcd6cb08_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6ce05_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1dcd6ce05_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd6ce05_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6d1e1_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1dcd6d1e1_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd6d1e1_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6d4cc_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1dcd6d4cc_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1dcd6d4cc_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6d7da_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1dcd6d7da_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd6d7da_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6dba3_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1dcd6de8e_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1dcd6de8e_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcd6de8e_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1dcd6e951_RetType {
	jule::Ptr<_1dce892da_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_Idents;
	


};
struct _1dcd7015a_Param {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1dce892da_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1dcd7015a_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dcd7015a_Param _other) { return !this->operator==(_other); }


};
struct _1dcd71997_Fn {
	jule::Ptr<_1dcdd59a6_Sema> _field_sema;
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1dcd09369_Directive>> _field_Directives;
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> _field_Generics;
	jule::Ptr<_1dcd6e951_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1dcd7015a_Param>> _field_Params;
	jule::Ptr<_1dcd5b641_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1dcd74648_FnIns>> _field_Instances;
	


};
struct _1dcd73779_ParamIns {
	jule::Ptr<_1dcd7015a_Param> _field_Decl;
	jule::Ptr<_1dce82437_TypeKind> _field_Kind;
	

	inline bool operator==(_1dcd73779_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dcd73779_ParamIns _other) { return !this->operator==(_other); }


};
struct _1dcd74648_FnIns {
	jule::Ptr<_1dcd5e457_StructIns> _field_Owner;
	jule::Ptr<_1dcd71997_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1dce80ba5_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1dcd73779_ParamIns>> _field_Params;
	jule::Ptr<_1dce82437_TypeKind> _field_Result;
	jule::Ptr<_1dcdadc6a_Scope> _field_Scope;
	jule::Ptr<_1dcd775a2_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1dcd775a2_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1dcd788d3_Pass {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1dcd788d3_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1dcd788d3_Pass _other) { return !this->operator==(_other); }


};
struct _1dcd7d124_symbolBuilder {
	jule::Ptr<_1dcd7d124_symbolBuilder> _field_owner;
	jule::Trait<_1dcdc9a33_Importer> _field_importer;
	jule::Slice<_23aa28854_Log> _field_errors;
	jule::Ptr<_1dcd080d2_Ast> _field_ast;
	jule::Ptr<_1dce502b2_SymbolTable> _field_table;
	


};
struct _1dcd83bb8_Trait {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1dce892da_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1dcd71997_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1dcd5b641_Struct>> _field_Implemented;
	


};
struct _1dcd85956_EnumItem {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1dce55d45_Value> _field_Value;
	

	inline bool operator==(_1dcd85956_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1dcd85956_EnumItem _other) { return !this->operator==(_other); }


};
struct _1dcd8644b_Enum {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1dce892da_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1dcd85956_EnumItem>> _field_Items;
	


};
struct _1dcd874b3_TypeEnumItem {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1dce892da_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1dcd874b3_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dcd874b3_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1dcd87a46_TypeEnum {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1dcd874b3_TypeEnumItem>> _field_Items;
	


};
struct _1dcd89b9c_comptimeRange {
	jule::Trait<_1dcd899c1_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1dcd89b9c_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dcd89b9c_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1dcd8a692_comptimeStructField {
	jule::Ptr<_1dcd5d962_FieldIns> _field_field;
	

	inline bool operator==(_1dcd8a692_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1dcd8a692_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1dcd8c1bb_comptimeStructFields {
	jule::Slice<jule::Ptr<_1dcd5d962_FieldIns>> _field_fields;
	


};
struct _1dcd8d695_comptimeStatic {
	jule::Ptr<_1dce05cb2_Var> _field_field;
	

	inline bool operator==(_1dcd8d695_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1dcd8d695_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1dcd90257_comptimeStatics {
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _field_fields;
	


};
struct _1dcd91698_comptimeEnumField {
	jule::Ptr<_1dcd85956_EnumItem> _field_field;
	

	inline bool operator==(_1dcd91698_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1dcd91698_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1dcd928b9_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1dcd85956_EnumItem>> _field_fields;
	


};
struct _1dcd93e1a_comptimeParam {
	jule::Ptr<_1dcd73779_ParamIns> _field_param;
	

	inline bool operator==(_1dcd93e1a_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1dcd93e1a_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1dcd95eb6_comptimeParams {
	jule::Slice<jule::Ptr<_1dcd73779_ParamIns>> _field_params;
	


};
struct _1dcd9747e_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1dcd98947_comptimeTypeInfo>> _field_types;
	


};
struct _1dcd98947_comptimeTypeInfo {
	jule::Ptr<_1dce82437_TypeKind> _field_base;
	

	inline bool operator==(_1dcd98947_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1dcd98947_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1dcd9e442_comptimeValue {
	jule::Ptr<_1dce54cbc_Data> _field_data;
	

	inline bool operator==(_1dcd9e442_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1dcd9e442_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1dcda1a3d_comptimeFiles {
	jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>> _field_files;
	


};
struct _1dcda3006_comptimeFile {
	jule::Ptr<_1dce502b2_SymbolTable> _field_file;
	

	inline bool operator==(_1dcda3006_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1dcda3006_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1dcda6d62_constraintChecker {
	jule::Ptr<_1dcdd59a6_Sema> _field_s;
	jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1dce80ba5_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _field_genericsA;
	jule::Ptr<_1dcd74648_FnIns> _field_fi;
	jule::Ptr<_1dcd5e457_StructIns> _field_si;
	jule::Ptr<_23ae26b42_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1dcda8c10_Impl {
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Base;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1dcd71997_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _field_Statics;
	


};
struct _1dcdadc6a_Scope {
	jule::Ptr<_1dcdadc6a_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1dcdae166_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1dcdadc6a_Scope> _field_Scope;
	

	inline bool operator==(_1dcdae166_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dcdae166_If _other) { return !this->operator==(_other); }


};
struct _1dcdae452_Else {
	jule::Ptr<_1dcdadc6a_Scope> _field_Scope;
	

	inline bool operator==(_1dcdae452_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dcdae452_Else _other) { return !this->operator==(_other); }


};
struct _1dcdae7c6_Conditional {
	jule::Slice<jule::Ptr<_1dcdae166_If>> _field_Elifs;
	jule::Ptr<_1dcdae452_Else> _field_Default;
	


};
struct _1dcdaeab2_InfIter {
	jule::Ptr<_1dcdadc6a_Scope> _field_Scope;
	

	inline bool operator==(_1dcdaeab2_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dcdaeab2_InfIter _other) { return !this->operator==(_other); }


};
struct _1dcdb0035_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1dcdadc6a_Scope> _field_Scope;
	

	inline bool operator==(_1dcdb0035_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dcdb0035_WhileIter _other) { return !this->operator==(_other); }


};
struct _1dcdb091a_RangeIter {
	jule::Ptr<_1dce54cbc_Data> _field_Expr;
	jule::Ptr<_1dcdadc6a_Scope> _field_Scope;
	jule::Ptr<_1dce05cb2_Var> _field_KeyA;
	jule::Ptr<_1dce05cb2_Var> _field_KeyB;
	

	inline bool operator==(_1dcdb091a_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1dcdb091a_RangeIter _other) { return !this->operator==(_other); }


};
struct _1dcdb0d16_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1dcdb0d16_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1dcdb0d16_ContSt _other) { return !this->operator==(_other); }


};
struct _1dcdb11bd_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1dcdb11bd_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1dcdb11bd_BreakSt _other) { return !this->operator==(_other); }


};
struct _1dcdb14a9_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1dcdb14a9_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dcdb14a9_Label _other) { return !this->operator==(_other); }


};
struct _1dcdb1795_GotoSt {
	jule::Str _field_Ident;
	

	inline bool operator==(_1dcdb1795_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dcdb1795_GotoSt _other) { return !this->operator==(_other); }


};
struct _1dcdb1b4c_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1dcdb1b4c_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1dcdb1b4c_Postfix _other) { return !this->operator==(_other); }


};
struct _1dcdb20c0_Assign {
	jule::Ptr<_1dcd6335c_OperandExprModel> _field_L;
	jule::Ptr<_1dcd6335c_OperandExprModel> _field_R;
	jule::Ptr<_23ae26b42_Token> _field_Op;
	

	inline bool operator==(_1dcdb20c0_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1dcdb20c0_Assign _other) { return !this->operator==(_other); }


};
struct _1dcdb2477_MultiAssign {
	jule::Slice<jule::Ptr<_1dce54cbc_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1dcdb2a82_Match {
	jule::Ptr<_1dce54cbc_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1dcdb35cc_Case>> _field_Cases;
	jule::Ptr<_1dcdb35cc_Case> _field_Default;
	


};
struct _1dcdb35cc_Case {
	jule::Ptr<_1dcdb2a82_Match> _field_Owner;
	jule::Ptr<_1dcdadc6a_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1dce54cbc_Data>> _field_Exprs;
	jule::Ptr<_1dcdb35cc_Case> _field_Next;
	


};
struct _1dcdb3ba4_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1dcdb3ba4_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1dcdb3ba4_FallSt _other) { return !this->operator==(_other); }


};
struct _1dcdb4006_RetSt {
	jule::Ptr<_1dcd74648_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1dcdb4006_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dcdb4006_RetSt _other) { return !this->operator==(_other); }


};
struct _1dcdb4611_scopeLabel {
	jule::Ptr<_23ae26b42_Token> _field_token;
	jule::Ptr<_1dcdb14a9_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1dcdb5898_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1dcdb4611_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1dcdb4611_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1dcdb4a84_scopeGoto {
	jule::Ptr<_1dcd49585_GotoSt> _field_gt;
	jule::Ptr<_1dcdb5898_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1dcdb4a84_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1dcdb4a84_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1dcdb5898_scopeChecker {
	jule::Ptr<_23ae26b42_Token> _field_calledFrom;
	jule::Ptr<_1dcdd59a6_Sema> _field_s;
	jule::Ptr<_1dcd74648_FnIns> _field_owner;
	jule::Ptr<_1dcdb5898_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1dce502b2_SymbolTable> _field_table;
	jule::Ptr<_1dcdadc6a_Scope> _field_scope;
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_tree;
	jule::Ptr<_1dcd74648_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1dcdb4611_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1dcdb4a84_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1dcdb5898_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1dcdb5898_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1dcdc6601_directiveChecker {
	jule::Ptr<_1dcdd59a6_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1dcd09369_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1dcdc6601_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1dcdc6601_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1dcdcc6d4_ImportInfo {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_Selected;
	jule::Ptr<_1dcdd031e_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1dcdd031e_Package {
	jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>> _field_Files;
	


};
struct _1dcdd4e8e_commonSemaMeta {
	jule::Slice<jule::Ptr<_1dcd98947_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1dcdd59a6_Sema {
	jule::Slice<_23aa28854_Log> _field_errors;
	jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>> _field_files;
	jule::Ptr<_1dce502b2_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1dcdd4e8e_commonSemaMeta> _field_meta;
	


};
struct _1dce02a5b_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1dce04c6c_IterRelation {
	jule::Ptr<_1dce05cb2_Var> _field_Range;
	

	inline bool operator==(_1dce04c6c_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1dce04c6c_IterRelation _other) { return !this->operator==(_other); }


};
struct _1dce05cb2_Var {
	jule::Ptr<_1dcdadc6a_Scope> _field_Scope;
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1dce892da_TypeSymbol> _field_Kind;
	jule::Ptr<_1dce55d45_Value> _field_Value;
	jule::Ptr<_1dcd775a2_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1dcd09369_Directive>> _field_Directives;
	jule::Ptr<_1dce04c6c_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _field_Depends;
	


};
struct _1dce06a60_FuncPattern {
	


};
struct _1dce3d734_typeCompatibilityChecker {
	jule::Ptr<_1dcdd59a6_Sema> _field_s;
	jule::Ptr<_1dce82437_TypeKind> _field_dest;
	jule::Ptr<_1dce82437_TypeKind> _field_src;
	jule::Ptr<_23ae26b42_Token> _field_errorToken;
	

	inline bool operator==(_1dce3d734_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1dce3d734_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1dce4035c_assignTypeChecker {
	jule::Ptr<_1dcdd59a6_Sema> _field_s;
	jule::Ptr<_1dce82437_TypeKind> _field_dest;
	jule::Ptr<_1dce54cbc_Data> _field_d;
	jule::Ptr<_23ae26b42_Token> _field_errorToken;
	

	inline bool operator==(_1dce4035c_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1dce4035c_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1dce41d42_dynamicTypeAnnotation {
	jule::Ptr<_1dce5683a_Eval> _field_e;
	jule::Ptr<_1dcd74648_FnIns> _field_f;
	jule::Ptr<_1dcd73779_ParamIns> _field_p;
	jule::Ptr<_1dce54cbc_Data> _field_a;
	jule::Ptr<_23ae26b42_Token> _field_errorToken;
	jule::Ptr<_1dce82437_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1dce82437_TypeKind>> _field_ignored;
	


};
struct _1dce4673c_fnCallArgChecker {
	jule::Ptr<_1dce5683a_Eval> _field_e;
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _field_args;
	jule::Ptr<_23ae26b42_Token> _field_errorToken;
	jule::Ptr<_1dcd74648_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1dce82437_TypeKind>> _field_ignored;
	


};
struct _1dce49113_structLitChecker {
	jule::Ptr<_1dce5683a_Eval> _field_e;
	jule::Ptr<_23ae26b42_Token> _field_errorToken;
	jule::Ptr<_1dcd5e457_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1dcd640c7_StructArgExprModel>> _field_args;
	


};
struct _1dce4abe7_rangeChecker {
	jule::Ptr<_1dcdb5898_scopeChecker> _field_sc;
	jule::Ptr<_1dcd51119_RangeKind> _field_rang;
	jule::Ptr<_1dcdb091a_RangeIter> _field_Kind;
	jule::Ptr<_1dce54cbc_Data> _field_d;
	

	inline bool operator==(_1dce4abe7_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1dce4abe7_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1dce4d1e4_retTypeChecker {
	jule::Ptr<_1dcdb5898_scopeChecker> _field_sc;
	jule::Ptr<_1dcd74648_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1dce82437_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _field_exprs;
	jule::Ptr<_23ae26b42_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1dce502b2_SymbolTable {
	jule::Ptr<_23ae2becc_File> _field_File;
	jule::Slice<_1dcd788d3_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1dcdcc6d4_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1dcd5b641_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1dcd71997_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1dcd83bb8_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1dcd8644b_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1dcd87a46_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1dcda8c10_Impl>> _field_Impls;
	


};
struct _1dce54cbc_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1dce82437_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_24a233549_Const> _field_Constant;
	

	inline bool operator==(_1dce54cbc_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1dce54cbc_Data _other) { return !this->operator==(_other); }


};
struct _1dce55d45_Value {
	jule::Ptr<_1dcd4100a_Expr> _field_Expr;
	jule::Ptr<_1dce54cbc_Data> _field_Data;
	

	inline bool operator==(_1dce55d45_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1dce55d45_Value _other) { return !this->operator==(_other); }


};
struct _1dce5683a_Eval {
	jule::Ptr<_1dcdd59a6_Sema> _field_s;
	jule::Trait<_1dcea0763_Lookup> _field_lookup;
	jule::Ptr<_1dce82437_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1dce05cb2_Var> _field_owner;
	jule::Ptr<_1dcd5d962_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1dce5683a_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1dce5683a_Eval _other) { return !this->operator==(_other); }


};
struct _1dce7377a_unaryEval {
	jule::Ptr<_1dce5683a_Eval> _field_e;
	jule::Ptr<_1dce54cbc_Data> _field_d;
	jule::Ptr<_1dcd43309_UnaryExpr> _field_u;
	

	inline bool operator==(_1dce7377a_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1dce7377a_unaryEval _other) { return !this->operator==(_other); }


};
struct _1dce7554b_binaryEval {
	jule::Ptr<_1dce5683a_Eval> _field_e;
	jule::Ptr<_1dce54cbc_Data> _field_l;
	jule::Ptr<_1dce54cbc_Data> _field_r;
	jule::Ptr<_23ae26b42_Token> _field_op;
	

	inline bool operator==(_1dce7554b_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1dce7554b_binaryEval _other) { return !this->operator==(_other); }


};
struct _1dce80ba5_InsGeneric {
	jule::Ptr<_1dce82437_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1dce82437_TypeKind>> _field_Constraint;
	


};
struct _1dce816de_TypeAlias {
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1dce892da_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _field_Generics;
	


};
struct _1dce82437_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1dce81ec5_Kind> _field_Kind;
	

	inline bool operator==(_1dce82437_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dce82437_TypeKind _other) { return !this->operator==(_other); }


};
struct _1dce892da_TypeSymbol {
	jule::Ptr<_1dcd3bd80_TypeDecl> _field_Decl;
	jule::Ptr<_1dce82437_TypeKind> _field_Kind;
	

	inline bool operator==(_1dce892da_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dce892da_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1dce89b8c_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1dce89b8c_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dce89b8c_Prim _other) { return !this->operator==(_other); }


};
struct _1dce8d3dd_Sptr {
	jule::Ptr<_1dce82437_TypeKind> _field_Elem;
	

	inline bool operator==(_1dce8d3dd_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1dce8d3dd_Sptr _other) { return !this->operator==(_other); }


};
struct _1dce8dd4a_Slc {
	jule::Ptr<_1dce82437_TypeKind> _field_Elem;
	

	inline bool operator==(_1dce8dd4a_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1dce8dd4a_Slc _other) { return !this->operator==(_other); }


};
struct _1dce8e950_Tuple {
	jule::Slice<jule::Ptr<_1dce82437_TypeKind>> _field_Types;
	


};
struct _1dce90401_Map {
	jule::Ptr<_1dce82437_TypeKind> _field_Key;
	jule::Ptr<_1dce82437_TypeKind> _field_Val;
	

	inline bool operator==(_1dce90401_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1dce90401_Map _other) { return !this->operator==(_other); }


};
struct _1dce90ee5_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1dce82437_TypeKind> _field_Elem;
	

	inline bool operator==(_1dce90ee5_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1dce90ee5_Arr _other) { return !this->operator==(_other); }


};
struct _1dce91952_Ptr {
	jule::Ptr<_1dce82437_TypeKind> _field_Elem;
	

	inline bool operator==(_1dce91952_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1dce91952_Ptr _other) { return !this->operator==(_other); }


};
struct _1dce92898_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1dce92898_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1dce92898_referencer _other) { return !this->operator==(_other); }


};
struct _1dce93778_typeChecker {
	jule::Ptr<_1dcdd59a6_Sema> _field_s;
	jule::Trait<_1dcea0763_Lookup> _field_rootLookup;
	jule::Trait<_1dcea0763_Lookup> _field_lookup;
	jule::Ptr<_1dce92898_referencer> _field_referencer;
	jule::Ptr<_1dcd775a2_ReferenceStack> _field_refers;
	jule::Ptr<_23ae26b42_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1dce82437_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1dce816de_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1dce9ab6a_identTypeLookup {
	

	inline bool operator==(_1dce9ab6a_identTypeLookup _other) { return true; }

	inline bool operator!=(_1dce9ab6a_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1de3bc310_FileInfo {
	jule::Ptr<_1dcd080d2_Ast> _field_Ast;
	jule::Slice<_23aa28854_Log> _field_Errors;
	


};
struct _1de414885_stmt {
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1de4151b0_scopeParser {
	jule::Ptr<_1de4318c4_parser> _field_p;
	jule::Ptr<_1dcd4b9b6_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1de414885_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1de421694_exprBuilder {
	jule::Ptr<_1de4318c4_parser> _field_p;
	

	inline bool operator==(_1de421694_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1de421694_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1de42ceca_assignInfo {
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_l;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_r;
	jule::Ptr<_23ae26b42_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1de4318c4_parser {
	jule::Ptr<_1dcd080d2_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1dcd09369_Directive>> _field_directives;
	jule::Slice<_23aa28854_Log> _field_errors;
	jule::Ptr<_1de421694_exprBuilder> _field_ep;
	


};
struct _1de4425e9_typeBuilder {
	jule::Ptr<_1de4318c4_parser> _field_p;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _207188c73_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	inline bool operator==(_207188c73_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_207188c73_CompileInfo _other) { return !this->operator==(_other); }


};
struct _20718a0c6_directiveEval {
	jule::Slice<_23aa28854_Log> _field_logs;
	jule::Ptr<_1dcd09369_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1de4465dc_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1dcdcc6d4_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1de44b38e_OrderedDefines {
	jule::Slice<jule::Ptr<_1dcd5b641_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _field_Globals;
	


};
struct _1de44b603_defineOrderer {
	

	inline bool operator==(_1de44b603_defineOrderer _other) { return true; }

	inline bool operator!=(_1de44b603_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1de54bea6_liveTable {
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1dcd74648_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1dcd5e457_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1dcd83bb8_Trait>> _field_traits;
	


};
struct _1de583086_scopeDeadCode {
	jule::Ptr<_1de583086_scopeDeadCode> _field_parent;
	jule::Ptr<_1dcdadc6a_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1dcdb14a9_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1dcdb1795_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1de583086_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1de583086_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1de586ee1_exprDeadCode {
	jule::Ptr<_1de583086_scopeDeadCode> _field_s;
	

	inline bool operator==(_1de586ee1_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1de586ee1_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1dd0566a4_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_24a233549_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1dd0566a4_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1dd0566a4_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1dd056a6c_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1dd056a6c_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd056a6c_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _1dd056d58_UnsafeBinopExprModel {
	jule::Ptr<_1dcd63824_BinopExprModel> _field_Node;
	

	inline bool operator==(_1dd056d58_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1dd056d58_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1dd0571dd_UnsafeIndexingExprModel {
	jule::Ptr<_1dcd65eb9_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1dd0571dd_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1dd0571dd_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1dd057573_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1dcd65a46_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1dd057573_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1dd057573_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1dd05792a_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1dd05792a_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1dd05792a_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1dd057e69_MutSlicingExprModel {
	jule::Ptr<_23ae26b42_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1dd057e69_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1dd057e69_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1dd058453_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1dd058453_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd058453_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
struct _1dd0586ea_InlineStdInternalNosafeStobs {
	jule::Any _field_Str = jule::Any(nullptr);
	

	inline bool operator==(_1dd0586ea_InlineStdInternalNosafeStobs _other) {
		return 
			this->_field_Str == _other._field_Str;
	}

	inline bool operator!=(_1dd0586ea_InlineStdInternalNosafeStobs _other) { return !this->operator==(_other); }


};
struct _1dd05992c_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1dcdadc6a_Scope> _field_scope;
	

	inline bool operator==(_1dd05992c_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1dd05992c_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1dd06026d_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1dd06026d_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1dd06026d_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1de44cdb8_stdCacheData {
	jule::Ptr<_1dcd74648_FnIns> _field_f;
	jule::Fn<void(_1dd06026d_exprOptimizer*,_1de44cdb8_stdCacheData*,jule::Ptr<_1dcd6568e_FnCallExprModel>*)> _field_do;
	


};
struct _1de58e0a3_Optimizer {
	jule::Ptr<_1de448d4d_IR> _field_ir;
	

	inline bool operator==(_1de58e0a3_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1de58e0a3_Optimizer _other) { return !this->operator==(_other); }


};
struct _1de5b1658_AnsiEscape {
	

	inline bool operator==(_1de5b1658_AnsiEscape _other) { return true; }

	inline bool operator!=(_1de5b1658_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1de5b2bdc_Logger {
	

	inline bool operator==(_1de5b2bdc_Logger _other) { return true; }

	inline bool operator!=(_1de5b2bdc_Logger _other) { return !this->operator==(_other); }


};
struct _1c4482467_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1c4482467_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1c4482467_AbsTime _other) { return !this->operator==(_other); }


};
struct _1c4482b0a_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1c4482b0a_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1c4482b0a_Time _other) { return !this->operator==(_other); }


};
struct _23b4336d1_scopeCoder {
	jule::Ptr<_1c448bb8b_ObjectCoder> _field_oc;
	

	inline bool operator==(_23b4336d1_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_23b4336d1_scopeCoder _other) { return !this->operator==(_other); }


};
struct _23b43bbc3_exprCoder {
	jule::Ptr<_1c448bb8b_ObjectCoder> _field_oc;
	

	inline bool operator==(_23b43bbc3_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_23b43bbc3_exprCoder _other) { return !this->operator==(_other); }


};
struct _23b44b991_deriveCoder {
	jule::Ptr<_1c448bb8b_ObjectCoder> _field_oc;
	

	inline bool operator==(_23b44b991_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_23b44b991_deriveCoder _other) { return !this->operator==(_other); }


};
struct _23b44d377_TestCoder {
	jule::Ptr<_1dcd5e457_StructIns> _field_t;
	jule::Ptr<_1dcd71997_Fn> _field_tmReset;
	jule::Ptr<_1dcd71997_Fn> _field_tmFailed;
	jule::Ptr<_1dcd71997_Fn> _field_tmSkipped;
	jule::Ptr<_1c448bb8b_ObjectCoder> _field_oc;
	

	inline bool operator==(_23b44d377_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_23b44d377_TestCoder _other) { return !this->operator==(_other); }


};
struct _23b4508b8_identCoder {
	

	inline bool operator==(_23b4508b8_identCoder _other) { return true; }

	inline bool operator!=(_23b4508b8_identCoder _other) { return !this->operator==(_other); }


};
struct _1c448a2e9_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1c448a2e9_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1c448a2e9_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1c448a7b1_traitHash {
	jule::Ptr<_1dcd83bb8_Trait> _field_t;
	jule::Ptr<_1dcd5e457_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1c448a7b1_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c448a7b1_traitHash _other) { return !this->operator==(_other); }


};
struct _1c448ab68_traitCast {
	jule::Ptr<_1dcd83bb8_Trait> _field_t1;
	jule::Ptr<_1dcd83bb8_Trait> _field_t2;
	

	inline bool operator==(_1c448ab68_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1c448ab68_traitCast _other) { return !this->operator==(_other); }


};
struct _1c449a4b3_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1c449a4b3_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c449a4b3_customType _other) { return !this->operator==(_other); }


};
struct _1c449ae64_typeCoder {
	jule::Ptr<_1c448bb8b_ObjectCoder> _field_oc;
	jule::Ptr<_1c44a3a2c_resultCoder> _field_rc;
	

	inline bool operator==(_1c449ae64_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1c449ae64_typeCoder _other) { return !this->operator==(_other); }


};
struct _1c44a3a2c_resultCoder {
	jule::Ptr<_1c449ae64_typeCoder> _field_tc;
	

	inline bool operator==(_1c44a3a2c_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1c44a3a2c_resultCoder _other) { return !this->operator==(_other); }


};
struct _1d43e8797_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1d43e8797_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d43e8797_Flag _other) { return !this->operator==(_other); }


};struct _1d43ec229_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1d43ec229_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d43ec229_Flag _other) { return !this->operator==(_other); }


};struct _1d44008d1_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1d44008d1_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d44008d1_Flag _other) { return !this->operator==(_other); }


};struct _1d44040cc_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1d44040cc_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d44040cc_Flag _other) { return !this->operator==(_other); }


};struct _1d4407784_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1d4407784_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d4407784_Flag _other) { return !this->operator==(_other); }


};
struct _1c451002d_FlagSet {
	jule::Slice<jule::Trait<_1c450d5c0_CommonFlag>> _field_flags;
	


};
struct _1c4512739_argParser {
	_1c451002d_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1c448bb8b_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1de448d4d_IR> _field_ir;
	_1c448a2e9_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1c448a7b1_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1dce82437_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1c448ab68_traitCast> _field_traitCastMap;
	jule::Ptr<_23b43bbc3_exprCoder> _field_ec;
	jule::Ptr<_23b4336d1_scopeCoder> _field_sc;
	jule::Ptr<_1c449ae64_typeCoder> _field_tc;
	jule::Ptr<_23b44b991_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1de54c36e_ObjectDeadCode {
	_1de54bea6_liveTable _field_live;
	jule::Ptr<_1de448d4d_IR> _field_ir;
	


};
struct _1de448d4d_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1dcdd031e_Package> _field_Main;
	jule::Slice<jule::Ptr<_1dcdcc6d4_ImportInfo>> _field_Used;
	_1de44b38e_OrderedDefines _field_Ordered;
	


};
struct _1dcd5e457_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1dcd5b641_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1dce80ba5_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1dcd5d962_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1dcd71997_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1dcd775a2_ReferenceStack> _field_Refers;
	_1dcd5a82c_Operators _field_Operators;
	


};
struct _23aab5aab_Cmd {
	_23ab096b0_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1dce54cbc_Data__jule_tuple_x_1dce54cbc_Data {
	jule::Ptr<_1dce54cbc_Data> __jule_result_arg0;
	jule::Ptr<_1dce54cbc_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1dcd53270_Case__jule_tuple_bool {
	jule::Ptr<_1dcd53270_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1dcd53270_Case__jule_tuple_x_1dcd521a3_Else {
	jule::Slice<jule::Ptr<_1dcd53270_Case>> __jule_result_arg0;
	jule::Ptr<_1dcd521a3_Else> __jule_result_arg1;
};
struct __jule_tuple__1dcd4b17a_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool {
	jule::Ptr<_1dcd4a4ba_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1dcd3bd80_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1dcd3eaec_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1dcd3eaec_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log {
	jule::Slice<jule::Ptr<_1dcd080d2_Ast>> __jule_result_arg0;
	jule::Slice<_23aa28854_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_23aa28854_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_23aa28854_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1de448d4d_IR__jule_tuple_s_23aa28854_Log {
	jule::Ptr<_1de448d4d_IR> __jule_result_arg0;
	jule::Slice<_23aa28854_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__23b5dc8e0_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__23b5dc8e0_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1dce502b2_SymbolTable__jule_tuple_s_23aa28854_Log {
	jule::Ptr<_1dce502b2_SymbolTable> __jule_result_arg0;
	jule::Slice<_23aa28854_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1dcdd031e_Package__jule_tuple_s_23aa28854_Log {
	jule::Ptr<_1dcdd031e_Package> __jule_result_arg0;
	jule::Slice<_23aa28854_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log {
	jule::Ptr<_1dcd080d2_Ast> __jule_result_arg0;
	jule::Slice<_23aa28854_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_23ae26b42_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_23ae26b42_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token {
	jule::Slice<jule::Ptr<_23ae26b42_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_23ae26b42_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_23ae26b42_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log {
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> __jule_result_arg0;
	jule::Slice<_23aa28854_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U8 _23a990634_index(_23a990205_lazyBuff*, jule::I64);
inline void _23a9908a9_append(_23a990205_lazyBuff*, jule::U8);
inline jule::Str _23a990b1d_string(_23a990205_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_239897053_DirEntry>>> static__23a994616_Read(jule::Str);
inline jule::VoidExceptional static__23a994814_Create(jule::Str);
inline jule::VoidExceptional static__23a994a23_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_2398a4626_File>> static__239896041_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__239896250_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _2398966a1_Write(_2398a4626_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _2398969ae_Read(_2398a4626_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_2398a4626_File> static__2398a4a44_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_2398a4626_File>> static__2398a4cdb_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2398a5083_Read(jule::Str);
inline jule::VoidExceptional static__2398a53d5_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _2398a6051_WriteStr(_2398a4626_File*, jule::Str*);
inline jule::VoidExceptional _2398a622c_Close(_2398a4626_File*);
inline jule::Exceptional<jule::Ptr<_2398a6c22_Status>> static__2398979e3_Of(jule::Str);
inline jule::Bool _2398a70da_IsDir(_2398a6c22_Status*);
inline jule::Bool _2398a734e_IsReg(_2398a6c22_Status*);
inline jule::U64 _2398a75b3_Size(_2398a6c22_Status*);
inline jule::U8 _23ae26ea5_Prec(_23ae26b42_Token*);
inline void _23ae2c395_Fill(_23ae2becc_File*, jule::Slice<jule::U8>);
inline jule::Str _23ae2c609_Dir(_23ae2becc_File*);
inline jule::Str _23ae2c86d_Name(_23ae2becc_File*);
inline jule::Str _23ae2cde0_GetRow(_23ae2becc_File*, jule::I64);
inline void _23ae34d70_pushErr(_23ae34820_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _23ae3536a_lex(_23ae34820_lex*);
inline jule::Str _23ae35678_id(_23ae34820_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _23ae358dc_resume(_23ae34820_lex*);
inline void _23ae35b62_lexLineComment(_23ae34820_lex*, jule::Ptr<_23ae26b42_Token>*);
inline void _23ae35dd7_lexRangeComment(_23ae34820_lex*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Str _23ae361e5_num(_23ae34820_lex*, jule::Slice<jule::U8>*);
inline jule::Str _23ae36503_escapeSeq(_23ae34820_lex*, jule::Slice<jule::U8>*);
inline jule::Str _23ae368aa_getRune(_23ae34820_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _23ae36bb8_lexRune(_23ae34820_lex*, jule::Slice<jule::U8>*);
inline jule::Str _23ae36e2c_lexStr(_23ae34820_lex*);
inline void _23ae3736c_newLine(_23ae34820_lex*);
inline jule::Bool _23ae37867_isOp(_23ae34820_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _23ae37c1e_lexBasicOps(_23ae34820_lex*, jule::Slice<jule::U8>, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _23ae380c6_lexId(_23ae34820_lex*, jule::Slice<jule::U8>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _23ae3847d_lexNum(_23ae34820_lex*, jule::Slice<jule::U8>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Ptr<_23ae26b42_Token> _23ae386e2_token(_23ae34820_lex*);
inline jule::Bool _24a216a38_set(_24a21e964_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _24a216d46_floatBits(_24a21e964_decimal*, _23b6109bd_floatInfo*);
inline void _24a21ece9_assign(_24a21e964_decimal*, jule::U64);
inline void _24a22006e_shift(_24a21e964_decimal*, jule::I64);
inline void _24a2202e4_roundDown(_24a21e964_decimal*, jule::I64);
inline void _24a220569_roundUp(_24a21e964_decimal*, jule::I64);
inline void _24a2207de_round(_24a21e964_decimal*, jule::I64);
inline jule::U64 _24a220a53_roundedInteger(_24a21e964_decimal*);
inline jule::Ptr<_24a233549_Const> static__24a233978_NewI64(jule::I64);
inline jule::Ptr<_24a233549_Const> static__24a233c20_NewU64(jule::U64);
inline jule::Ptr<_24a233549_Const> static__24a233eb7_NewBool(jule::Bool);
inline jule::Ptr<_24a233549_Const> static__24a23425e_NewStr(jule::Str);
inline jule::Ptr<_24a233549_Const> static__24a234506_NewF64(jule::F64);
inline jule::Ptr<_24a233549_Const> static__24a234704_NewNil(void);
inline jule::I64 _24a234d42_ReadI64(_24a233549_Const*);
inline jule::U64 _24a2350a6_ReadU64(_24a233549_Const*);
inline jule::Bool _24a23531a_ReadBool(_24a233549_Const*);
inline jule::Str _24a23557e_ReadStr(_24a233549_Const*);
inline jule::F64 _24a2357e3_ReadF64(_24a233549_Const*);
inline jule::I64 _24a235a57_AsI64(_24a233549_Const*);
inline jule::U64 _24a235cbb_AsU64(_24a233549_Const*);
inline jule::F64 _24a236030_AsF64(_24a233549_Const*);
inline void _24a2362a5_SetI64(_24a233549_Const*, jule::I64);
inline void _24a23652a_SetU64(_24a233549_Const*, jule::U64);
inline void _24a2367a0_SetBool(_24a233549_Const*, jule::Bool);
inline void _24a236a25_SetStr(_24a233549_Const*, jule::Str);
inline void _24a236c9a_SetF64(_24a233549_Const*, jule::F64);
inline jule::Bool _24a2371da_IsI64(_24a233549_Const*);
inline jule::Bool _24a23744e_IsU64(_24a233549_Const*);
inline jule::Bool _24a2376b3_IsBool(_24a233549_Const*);
inline jule::Bool _24a237927_IsStr(_24a233549_Const*);
inline jule::Bool _24a237b8b_IsF64(_24a233549_Const*);
inline jule::Bool _24a237e00_IsNil(_24a233549_Const*);
inline jule::Bool _24a23851b_And(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a238829_Or(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a239b7c_Add(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a239e8a_Sub(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a23a298_Mul(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a23a5a6_Div(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a23a8b4_Mod(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a23abc2_BitwiseAnd(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a23aed0_BitwiseOr(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a23b2dd_Xor(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a23b5eb_Lshift(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _24a23b909_Rshift(_24a233549_Const*, _24a233549_Const);
inline jule::Bool _1dcd3dbb7_IsUnsafe(_1dcd3d865_PtrTypeDecl*);
inline jule::Bool _1dcd3e38d_AutoSized(_1dcd3e03b_ArrTypeDecl*);
inline jule::Bool _1dcd42391_IsNil(_1dcd4203e_LitExpr*);
inline jule::Bool _1dcd45284_Unhandled(_1dcd44e21_FnCallExpr*);
inline jule::Bool _1dcd454e8_Ignored(_1dcd44e21_FnCallExpr*);
inline jule::Bool _1dcd4c500_IsSelf(_1dcd4c18c_ParamDecl*);
inline jule::Bool _1dcd4d80e_IsAnon(_1dcd4d4ac_FnDecl*);
inline jule::Bool _1dcd50305_IsInf(_1dcd4eea3_Iter*);
inline jule::Bool _1dcd50aca_IsWhileNext(_1dcd50778_WhileKind*);
inline jule::Ptr<_1dcd5d962_FieldIns> _1dcd58dd0_instance(jule::Ptr<_1dcd58a6c_Field>);
inline jule::Ptr<_1dcd5e457_StructIns> _1dcd5baa3_instance(jule::Ptr<_1dcd5b641_Struct>);
inline jule::Ptr<_1dcd5e457_StructIns> _1dcd5bd7d_appendInstance(_1dcd5b641_Struct*, jule::Ptr<_1dcd5e457_StructIns>*);
inline jule::Ptr<_1dcd71997_Fn> _1dcd5c235_FindMethod(_1dcd5b641_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce05cb2_Var> _1dcd5c543_FindStatic(_1dcd5b641_Struct*, jule::Str);
inline jule::Ptr<_1dcd58a6c_Field> _1dcd5c851_FindField(_1dcd5b641_Struct*, jule::Str);
inline jule::Bool _1dcd5cb5e_IsImplements(_1dcd5b641_Struct*, jule::Ptr<_1dcd83bb8_Trait>);
inline jule::Bool _1dcd5ce6c_IsDerives(_1dcd5b641_Struct*, jule::Str);
inline jule::Bool _1dcd5d27a_IsUses(_1dcd5b641_Struct*, jule::Ptr<_1dcd5b641_Struct>);
inline jule::Ptr<_1dcd73779_ParamIns> _1dcd704ce_instance(jule::Ptr<_1dcd7015a_Param>);
inline jule::Bool _1dcd70743_IsSelf(_1dcd7015a_Param*);
inline jule::Bool _1dcd709a7_IsRef(_1dcd7015a_Param*);
inline jule::Bool _1dcd71e09_IsVoid(_1dcd71997_Fn*);
inline jule::Bool _1dcd7216d_IsMethod(_1dcd71997_Fn*);
inline jule::Bool _1dcd723d2_IsEntryPoint(_1dcd71997_Fn*);
inline jule::Bool _1dcd72646_IsInit(_1dcd71997_Fn*);
inline jule::Bool _1dcd728aa_IsAnon(_1dcd71997_Fn*);
inline jule::Bool _1dcd72b1e_AnyVar(_1dcd71997_Fn*);
inline jule::Ptr<_1dcd74648_FnIns> _1dcd72d83_instanceForce(jule::Ptr<_1dcd71997_Fn>);
inline jule::Ptr<_1dcd74648_FnIns> _1dcd730e7_instance(jule::Ptr<_1dcd71997_Fn>);
inline jule::Ptr<_1dcd74648_FnIns> _1dcd733c2_appendInstance(_1dcd71997_Fn*, jule::Ptr<_1dcd74648_FnIns>*);
inline jule::Str _1dcd73acb_Str(_1dcd73779_ParamIns*);
inline jule::Str _1dcd74978_Str(_1dcd74648_FnIns*);
inline jule::Bool _1dcd74c86_Equal(jule::Ptr<_1dcd74648_FnIns>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Bool _1dcd751e8_EqualFn(jule::Ptr<_1dcd74648_FnIns>, jule::Ptr<_1dcd74648_FnIns>*);
inline jule::Bool _1dcd75506_equalTrait(jule::Ptr<_1dcd74648_FnIns>, jule::Ptr<_1dcd74648_FnIns>*);
inline jule::Slice<jule::Ptr<_1dce82437_TypeKind>> _1dcd7576a_Types(_1dcd74648_FnIns*);
inline jule::Bool _1dcd759ce_IsBuiltin(_1dcd74648_FnIns*);
inline jule::Bool _1dcd75c43_IsAnon(_1dcd74648_FnIns*);
inline jule::Bool _1dcd76051_Same(_1dcd74648_FnIns*, jule::Ptr<_1dcd74648_FnIns>);
inline jule::Str _1dcd7635e_GetKindStr(_1dcd74648_FnIns*, jule::Bool);
inline jule::Ptr<_1dcd775a2_ReferenceStack> static__1dcd777b1_new(void);
inline jule::I64 _1dcd77b8a_Len(_1dcd775a2_ReferenceStack*);
inline jule::Any _1dcd77e98_At(_1dcd775a2_ReferenceStack*, jule::I64);
inline void _1dcd7821d_Push(_1dcd775a2_ReferenceStack*, jule::Any);
inline jule::Bool _1c47db75a_Exist(_1dcd775a2_ReferenceStack*, jule::Ptr<_1dcd74648_FnIns>);
inline jule::Bool _1c47eed78_Exist(_1dcd775a2_ReferenceStack*, jule::Ptr<_1dce05cb2_Var>);
inline jule::Bool _1c6bb1237_Exist(_1dcd775a2_ReferenceStack*, jule::Ptr<_1dcd5e457_StructIns>);
inline jule::Bool _1c6ae1ee2_Exist(_1dcd775a2_ReferenceStack*, jule::Ptr<_1dcd83bb8_Trait>);
inline void _1dcd7d94e_pushErr(_1dcd7d124_symbolBuilder*, jule::Ptr<_23ae26b42_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1dcd7e136_pushSuggestion(_1dcd7d124_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dcd7e4dd_checkCppUseDeclPath(_1dcd7d124_symbolBuilder*, jule::Ptr<_1dcd541d8_UseDecl>*, jule::Str);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcd7e7b8_buildCppHeaderImport(_1dcd7d124_symbolBuilder*, jule::Ptr<_1dcd541d8_UseDecl>*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcd7eac6_buildStdImport(_1dcd7d124_symbolBuilder*, jule::Ptr<_1dcd541d8_UseDecl>*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcd7edd4_buildIdentImport(jule::Ptr<_1dcd7d124_symbolBuilder>, jule::Ptr<_1dcd541d8_UseDecl>*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcd801e2_buildImport(jule::Ptr<_1dcd7d124_symbolBuilder>, jule::Ptr<_1dcd541d8_UseDecl>*);
inline jule::Bool _1dcd80500_checkDuplicateUseDecl(_1dcd7d124_symbolBuilder*, jule::Ptr<_1dcdcc6d4_ImportInfo>*);
inline void _1dcd8081e_implImportSelections(_1dcd7d124_symbolBuilder*, jule::Ptr<_1dcdcc6d4_ImportInfo>*, jule::Ptr<_1dcd541d8_UseDecl>*);
inline jule::Str _1dcd80b2c_getAsLinkPath(jule::Ptr<_1dcd7d124_symbolBuilder>, jule::Str);
inline void _1dcd80ee5_pushCycleError(jule::Ptr<_1dcd7d124_symbolBuilder>, jule::Ptr<_1dcd7d124_symbolBuilder>*, jule::Str, jule::Str*);
inline void _1dcd813ad_pushCrossCycleError(jule::Ptr<_1dcd7d124_symbolBuilder>, jule::Ptr<_1dcd7d124_symbolBuilder>*, jule::Ptr<_1dcdcc6d4_ImportInfo>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1dcd81765_checkImportCycles(jule::Ptr<_1dcd7d124_symbolBuilder>, jule::Ptr<_1dcdcc6d4_ImportInfo>, jule::Ptr<_1dcd541d8_UseDecl>*);
inline void _1dcd81b50_checkPackageAccessibility(_1dcd7d124_symbolBuilder*, jule::Ptr<_1dcd541d8_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1dcd82018_importPackage(jule::Ptr<_1dcd7d124_symbolBuilder>, jule::Ptr<_1dcdcc6d4_ImportInfo>*, jule::Ptr<_1dcd541d8_UseDecl>*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcd82326_importUseDecl(jule::Ptr<_1dcd7d124_symbolBuilder>, jule::Ptr<_1dcd541d8_UseDecl>*);
inline void _1dcd82502_importUseDecls(jule::Ptr<_1dcd7d124_symbolBuilder>);
inline void _1dcd82777_appendNode(_1dcd7d124_symbolBuilder*, _1dcd08e6d_Node*);
inline void _1dcd82953_appendNodes(_1dcd7d124_symbolBuilder*);
inline void _1dcd82bc8_pushDirectivePass(_1dcd7d124_symbolBuilder*, jule::Ptr<_1dcd09369_Directive>*);
inline void _1dcd82da4_appendTopDirectives(_1dcd7d124_symbolBuilder*);
inline void _1dcd83080_build(jule::Ptr<_1dcd7d124_symbolBuilder>);
inline jule::Str _1dcd84070_Str(_1dcd83bb8_Trait*);
inline jule::Bool _1dcd8437d_Equal(jule::Ptr<_1dcd83bb8_Trait>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Bool _1dcd84757_IsBuiltin(_1dcd83bb8_Trait*);
inline jule::Ptr<_1dcd71997_Fn> _1dcd84a65_FindMethod(_1dcd83bb8_Trait*, jule::Str);
inline jule::Ptr<_1dcd71997_Fn> _1dcd85181_findMethodInherit(_1dcd83bb8_Trait*, jule::Str*);
inline jule::Bool _1dcd85cec_AutoExpr(_1dcd85956_EnumItem*);
inline jule::Str _1dcd867ae_Str(_1dcd8644b_Enum*);
inline jule::Bool _1dcd86abc_Equal(jule::Ptr<_1dcd8644b_Enum>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1dcd85956_EnumItem> _1dcd86eb8_FindItem(_1dcd8644b_Enum*, jule::Str);
inline jule::Str _1dcd87d76_Str(_1dcd87a46_TypeEnum*);
inline jule::Bool _1dcd88184_Equal(jule::Ptr<_1dcd87a46_TypeEnum>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1dcd874b3_TypeEnumItem> _1dcd88580_FindItem(_1dcd87a46_TypeEnum*, jule::Str);
inline jule::Str _1dcd8a054_Str(_1dcd89b9c_comptimeRange*);
inline jule::Bool _1dcd8a362_Equal(jule::Ptr<_1dcd89b9c_comptimeRange>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Str _1dcd8aa05_Str(_1dcd8a692_comptimeStructField*);
inline jule::Bool _1dcd8ad13_Equal(jule::Ptr<_1dcd8a692_comptimeStructField>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1dce54cbc_Data> _1dcd8b2db__Name(jule::Ptr<_1dcd8a692_comptimeStructField>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd8b693__Type(jule::Ptr<_1dcd8a692_comptimeStructField>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd8ba4a__Public(jule::Ptr<_1dcd8a692_comptimeStructField>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd8bd58_subIdent(jule::Ptr<_1dcd8a692_comptimeStructField>, jule::Str);
inline jule::Str _1dcd8c540_Str(_1dcd8c1bb_comptimeStructFields*);
inline jule::Bool _1dcd8c84d_Equal(jule::Ptr<_1dcd8c1bb_comptimeStructFields>, jule::Ptr<_1dce82437_TypeKind>);
inline void _1dcd8cc7c_ready(_1dcd8c1bb_comptimeStructFields*, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline void _1dcd8d145_step(_1dcd8c1bb_comptimeStructFields*, jule::I64, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline jule::I64 _1dcd8d3a9_len(_1dcd8c1bb_comptimeStructFields*);
inline jule::Str _1dcd8da08_Str(_1dcd8d695_comptimeStatic*);
inline jule::Bool _1dcd8dd16_Equal(jule::Ptr<_1dcd8d695_comptimeStatic>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1dce54cbc_Data> _1dcd8e2de__Name(jule::Ptr<_1dcd8d695_comptimeStatic>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd8e696__Type(jule::Ptr<_1dcd8d695_comptimeStatic>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd8ea4d__Public(jule::Ptr<_1dcd8d695_comptimeStatic>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd8ed5b_subIdent(jule::Ptr<_1dcd8d695_comptimeStatic>, jule::Str);
inline jule::Str _1dcd905ba_Str(_1dcd90257_comptimeStatics*);
inline jule::Bool _1dcd908c8_Equal(jule::Ptr<_1dcd90257_comptimeStatics>, jule::Ptr<_1dce82437_TypeKind>);
inline void _1dcd90c80_ready(_1dcd90257_comptimeStatics*, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline void _1dcd91148_step(_1dcd90257_comptimeStatics*, jule::I64, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline jule::I64 _1dcd913ac_len(_1dcd90257_comptimeStatics*);
inline jule::Str _1dcd91a0b_Str(_1dcd91698_comptimeEnumField*);
inline jule::Bool _1dcd91d19_Equal(jule::Ptr<_1dcd91698_comptimeEnumField>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1dce54cbc_Data> _1dcd922c0__Name(jule::Ptr<_1dcd91698_comptimeEnumField>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd925cd_subIdent(jule::Ptr<_1dcd91698_comptimeEnumField>, jule::Str);
inline jule::Str _1dcd92d3c_Str(_1dcd928b9_comptimeEnumFields*);
inline jule::Bool _1dcd9314a_Equal(jule::Ptr<_1dcd928b9_comptimeEnumFields>, jule::Ptr<_1dce82437_TypeKind>);
inline void _1dcd93502_ready(_1dcd928b9_comptimeEnumFields*, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline void _1dcd938ba_step(_1dcd928b9_comptimeEnumFields*, jule::I64, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline jule::I64 _1dcd93b2e_len(_1dcd928b9_comptimeEnumFields*);
inline jule::Str _1dcd9427d_Str(_1dcd93e1a_comptimeParam*);
inline jule::Bool _1dcd9458b_Equal(jule::Ptr<_1dcd93e1a_comptimeParam>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1dce54cbc_Data> _1dcd94a75__Name(jule::Ptr<_1dcd93e1a_comptimeParam>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd94e2c__Type(jule::Ptr<_1dcd93e1a_comptimeParam>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd952d4__Variadic(jule::Ptr<_1dcd93e1a_comptimeParam>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9568b__Reference(jule::Ptr<_1dcd93e1a_comptimeParam>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd95999_subIdent(jule::Ptr<_1dcd93e1a_comptimeParam>, jule::Str);
inline jule::Str _1dcd96329_Str(_1dcd95eb6_comptimeParams*);
inline jule::Bool _1dcd96637_Equal(jule::Ptr<_1dcd95eb6_comptimeParams>, jule::Ptr<_1dce82437_TypeKind>);
inline void _1dcd96a66_ready(_1dcd95eb6_comptimeParams*, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline void _1dcd96e2e_step(_1dcd95eb6_comptimeParams*, jule::I64, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline jule::I64 _1dcd97193_len(_1dcd95eb6_comptimeParams*);
inline jule::Str _1dcd977e2_Str(_1dcd9747e_comptimeTypeInfos*);
inline jule::Bool _1dcd97b00_Equal(jule::Ptr<_1dcd9747e_comptimeTypeInfos>, jule::Ptr<_1dce82437_TypeKind>);
inline void _1dcd9802e_ready(_1dcd9747e_comptimeTypeInfos*, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline void _1dcd983e7_step(_1dcd9747e_comptimeTypeInfos*, jule::I64, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline jule::I64 _1dcd9865b_len(_1dcd9747e_comptimeTypeInfos*);
inline jule::Str _1dcd98caa_Str(_1dcd98947_comptimeTypeInfo*);
inline jule::Bool _1dcd990b8_Equal(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1dce54cbc_Data> _1dcd996b2__Str(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd99a69__Kind(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd99e21__Bits(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9a2c8__Elem(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9a680__Size(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9aa37__Key(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9adde__Value(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9b296__Fields(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9b64d__Statics(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9ba05__Public(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9bdac__Binded(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9c264__Ordered(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9c61b__Comparable(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9c9c3__Mutable(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9cd7a__Types(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9d232__Exceptional(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9d5d9__CanNil(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9d991__Result(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9dd48__Params(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcd9e156_subIdent(jule::Ptr<_1dcd98947_comptimeTypeInfo>, jule::Str);
inline jule::Str _1dcd9e7a5_Str(_1dcd9e442_comptimeValue*);
inline jule::Bool _1dcd9eab3_Equal(jule::Ptr<_1dcd9e442_comptimeValue>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1dce54cbc_Data> _1dcda00be__Unwrap(jule::Ptr<_1dcd9e442_comptimeValue>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda0476__Type(jule::Ptr<_1dcd9e442_comptimeValue>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda082d__Lvalue(jule::Ptr<_1dcd9e442_comptimeValue>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda0bd5__Mutable(jule::Ptr<_1dcd9e442_comptimeValue>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda108c__Const(jule::Ptr<_1dcd9e442_comptimeValue>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda1444__Field(jule::Ptr<_1dcd9e442_comptimeValue>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda1752_subIdent(jule::Ptr<_1dcd9e442_comptimeValue>, jule::Str);
inline jule::Str _1dcda1da1_Str(_1dcda1a3d_comptimeFiles*);
inline jule::Bool _1dcda21ae_Equal(jule::Ptr<_1dcda1a3d_comptimeFiles>, jule::Ptr<_1dce82437_TypeKind>);
inline void _1dcda25dd_ready(_1dcda1a3d_comptimeFiles*, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline void _1dcda29a6_step(_1dcda1a3d_comptimeFiles*, jule::I64, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
inline jule::I64 _1dcda2c1a_len(_1dcda1a3d_comptimeFiles*);
inline jule::Str _1dcda3369_Str(_1dcda3006_comptimeFile*);
inline jule::Bool _1dcda3677_Equal(jule::Ptr<_1dcda3006_comptimeFile>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1dce54cbc_Data> _1dcda3b50__Path(jule::Ptr<_1dcda3006_comptimeFile>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda4007__Name(jule::Ptr<_1dcda3006_comptimeFile>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda43ae__Dir(jule::Ptr<_1dcda3006_comptimeFile>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda46bc_subIdent(jule::Ptr<_1dcda3006_comptimeFile>, jule::Str);
inline jule::Fn<jule::Bool(jule::Ptr<_1dcdd59a6_Sema>*,jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>*)> _1dcda724c_readyFn(jule::Ptr<_1dcda6d62_constraintChecker>);
inline jule::Bool _1dcda74b1_readyFi(jule::Ptr<_1dcda6d62_constraintChecker>);
inline jule::Bool _1dcda7725_readySi(jule::Ptr<_1dcda6d62_constraintChecker>);
inline jule::Bool _1dcda7989_ready(jule::Ptr<_1dcda6d62_constraintChecker>);
inline jule::Bool _1dcda7bed_check(jule::Ptr<_1dcda6d62_constraintChecker>);
inline jule::Bool _1dcda90b7_IsTraitImpl(_1dcda8c10_Impl*);
inline jule::Bool _1dcda932b_IsStructImpl(_1dcda8c10_Impl*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcdb5d1b_SelectPackage(_1dcdb5898_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)>);
inline jule::Ptr<_1dce05cb2_Var> _1dcdb61c3_FindVar(_1dcdb5898_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce816de_TypeAlias> _1dcdb657a_FindTypeAlias(_1dcdb5898_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5b641_Struct> _1dcdb6932_FindStruct(_1dcdb5898_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd71997_Fn> _1dcdb6cd9_FindFn(_1dcdb5898_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd83bb8_Trait> _1dcdb70e7_FindTrait(_1dcdb5898_scopeChecker*, jule::Str);
inline jule::Ptr<_1dcd8644b_Enum> _1dcdb7405_FindEnum(_1dcdb5898_scopeChecker*, jule::Str);
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcdb7713_FindTypeEnum(_1dcdb5898_scopeChecker*, jule::Str);
inline jule::Bool _1dcdb7a43_isUnsafe(jule::Ptr<_1dcdb5898_scopeChecker>);
inline jule::Bool _1dcdb7ca7_isRoot(_1dcdb5898_scopeChecker*);
inline void _1dcdb7e83_stop(_1dcdb5898_scopeChecker*);
inline jule::Bool _1dcdb81e7_stopped(_1dcdb5898_scopeChecker*);
inline jule::Bool _1dcdb845b_isDeferred(jule::Ptr<_1dcdb5898_scopeChecker>);
inline jule::Ptr<_1dcdb5898_scopeChecker> _1dcdb86c0_getRoot(jule::Ptr<_1dcdb5898_scopeChecker>);
inline jule::Ptr<_1dcdb5898_scopeChecker> _1dcdb8934_getHardRoot(jule::Ptr<_1dcdb5898_scopeChecker>);
inline jule::Ptr<_1dcdb14a9_Label> _1dcdb8c42_findLabel(_1dcdb5898_scopeChecker*, jule::Str);
inline jule::Ptr<_1dcdb4611_scopeLabel> _1dcdb9050_findLabelScope(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Str);
inline jule::Ptr<_1dcdb4611_scopeLabel> _1dcdb935d_findLabelAll(_1dcdb5898_scopeChecker*, jule::Str);
inline jule::Bool _1dcdb9715_isDuplicatedIdent(_1dcdb5898_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1dcdb998a_checkVarDecl(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4e48b_VarDecl>);
inline void _1dcdb9c10_checkTypeAliasDecl(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd52cec_TypeAliasDecl>);
inline jule::Ptr<_1dcdadc6a_Scope> _1dcdb9e74_getChild(_1dcdb5898_scopeChecker*);
inline void _1dcdba33c_checkChildSsc(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4b9b6_ScopeTree>*, jule::Ptr<_1dcdadc6a_Scope>*, jule::Ptr<_1dcdb5898_scopeChecker>*);
inline jule::Ptr<_1dcdadc6a_Scope> _1dcdba6e4_checkChildSc(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4b9b6_ScopeTree>*, jule::Ptr<_1dcdb5898_scopeChecker>*);
inline jule::Ptr<_1dcdadc6a_Scope> _1dcdbaa02_checkChild(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4b9b6_ScopeTree>*);
inline void _1dcdbac77_checkAnonScope(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4b9b6_ScopeTree>);
inline void _1dcdbb096_processErrorCall(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel>*, jule::Ptr<_23ae26b42_Token>);
inline void _1dcdbb31b_checkExpr(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4100a_Expr>);
inline jule::Ptr<_1dcdae166_If> _1dcdbb629_checkIf(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd51ceb_If>);
inline jule::Ptr<_1dcdae452_Else> _1dcdbb937_checkElse(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd521a3_Else>);
inline void _1dcdbbbac_checkConditional(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd52626_Conditional>);
inline void _1dcdbc11e_checkIterScopeSsc(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Uintptr, jule::Ptr<_1dcd4b9b6_ScopeTree>, jule::Ptr<_1dcdadc6a_Scope>*, jule::Ptr<_1dcdb5898_scopeChecker>);
inline jule::Ptr<_1dcdadc6a_Scope> _1dcdbc570_checkIterScopeSc(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Uintptr, jule::Ptr<_1dcd4b9b6_ScopeTree>, jule::Ptr<_1dcdb5898_scopeChecker>);
inline jule::Ptr<_1dcdadc6a_Scope> _1dcdbc927_checkIterScope(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Uintptr, jule::Ptr<_1dcd4b9b6_ScopeTree>*);
inline void _1dcdbcb9c_checkInfIter(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4eea3_Iter>*);
inline void _1dcdbce22_checkWhileIter(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4eea3_Iter>*);
inline void _1dcdbd2da_checkComptimeRangeIter(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4eea3_Iter>*, jule::Ptr<_1dcdb091a_RangeIter>*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dcdbd560_checkRangeIter(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4eea3_Iter>*);
inline void _1dcdbd7d5_checkIter(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4eea3_Iter>);
inline jule::Bool _1dcdbdae3_checkValidContLabel(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Uintptr);
inline jule::Bool _1dcdbde01_checkValidBreakLabel(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1dcdb0d16_ContSt> _1dcdbe20e_checkContValidScope(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd51878_ContSt>);
inline void _1dcdbe484_checkCont(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd51878_ContSt>);
inline void _1dcdbe709_checkLabel(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd491cd_LabelSt>);
inline void _1dcdbe97e_pushGoto(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd49585_GotoSt>);
inline void _1dcdbec04_checkPostfix(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4a4ba_AssignSt>);
inline jule::Bool _1dcdc0012_isNewAssignIdent(_1dcdb5898_scopeChecker*, jule::Str);
inline jule::Bool _1dcdc0463_checkStructureAssignOp(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd5e457_StructIns>*, jule::Ptr<_1dcd4a4ba_AssignSt>*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dcdc06d8_checkSingleAssign(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4a4ba_AssignSt>*);
inline void _1dcdc0c16_processEndPartOfMultiAssign(_1dcdb5898_scopeChecker*, jule::Ptr<_1dcdb2477_MultiAssign>*, jule::Ptr<_1dcd4a4ba_AssignSt>*, jule::Ptr<_1dcd49e7b_AssignLeft>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dcdc0e9c_checkMultiAssign(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4a4ba_AssignSt>*);
inline void _1dcdc1222_checkAssignSt(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4a4ba_AssignSt>);
inline jule::Ptr<_1dcdadc6a_Scope> _1dcdc15c9_checkCaseScope(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcdb35cc_Case>*, jule::Ptr<_1dcd4b9b6_ScopeTree>*);
inline jule::Ptr<_1dcdb35cc_Case> _1dcdc1ac4_checkCase(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcdb2a82_Match>, jule::I64, jule::Ptr<_1dcd53270_Case>, jule::Ptr<_1dce54cbc_Data>);
inline void _1dcdc1e8c_checkCases(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd53946_MatchCase>*, jule::Ptr<_1dcdb2a82_Match>, jule::Ptr<_1dce54cbc_Data>);
inline jule::Ptr<_1dcdb35cc_Case> _1dcdc2344_checkDefault(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcdb2a82_Match>, jule::Ptr<_1dcd521a3_Else>);
inline void _1dcdc2663_checkComptimePanic(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_23ae26b42_Token>, jule::Ptr<_1dcdadc6a_Scope>*);
inline void _1dcdc2982_processConstMatch(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcdb2a82_Match>*, jule::Ptr<_1dcd53946_MatchCase>*);
inline void _1dcdc2c07_checkTypeMatch(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd53946_MatchCase>*);
inline void _1dcdc2e7c_checkCommonMatch(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd53946_MatchCase>*);
inline void _1dcdc3202_checkMatch(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd53946_MatchCase>);
inline void _1dcdc3477_checkFall(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd49871_FallSt>);
inline jule::Ptr<_1dcdb11bd_BreakSt> _1dcdc3785_checkBreakWithLabel(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd514c1_BreakSt>);
inline jule::Ptr<_1dcdb11bd_BreakSt> _1dcdc3a93_checkPlainBreak(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd514c1_BreakSt>);
inline void _1dcdc3d18_checkBreak(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd514c1_BreakSt>);
inline void _1dcdc408d_checkRet(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4e843_RetSt>);
inline void _1dcdc4313_checkUseExpr(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4189b_UseExpr>);
inline void _1dcdc4588_checkNode(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Any*);
inline void _1dcdc4764_checkResult(jule::Ptr<_1dcdb5898_scopeChecker>);
inline void _1dcdc4940_checkTree(jule::Ptr<_1dcdb5898_scopeChecker>);
inline void _1dcdc4c5e_checkGoto(_1dcdb5898_scopeChecker*, jule::Ptr<_1dcdb4a84_scopeGoto>*, jule::Ptr<_1dcdb4611_scopeLabel>*);
inline void _1dcdc4e3a_checkGotos(_1dcdb5898_scopeChecker*);
inline void _1dcdc5116_checkLabels(_1dcdb5898_scopeChecker*);
inline void _1dcdc52e2_checkVars(_1dcdb5898_scopeChecker*);
inline void _1dcdc54bd_checkAliases(_1dcdb5898_scopeChecker*);
inline void _1dcdc57dc_check(jule::Ptr<_1dcdb5898_scopeChecker>, jule::Ptr<_1dcd4b9b6_ScopeTree>*, jule::Ptr<_1dcdadc6a_Scope>*);
inline jule::Ptr<_1dcdb5898_scopeChecker> _1dcdc5a51_newChildChecker(jule::Ptr<_1dcdb5898_scopeChecker>);
inline void _1dcdc69ec_checkCdef(_1dcdc6601_directiveChecker*, jule::Ptr<_1dcd09369_Directive>*);
inline void _1dcdc6c72_checkTypedef(_1dcdc6601_directiveChecker*, jule::Ptr<_1dcd09369_Directive>*);
inline void _1dcdc6ee7_checkDerive(_1dcdc6601_directiveChecker*, jule::Ptr<_1dcd09369_Directive>*);
inline void _1dcdc726c_checkNamespace(_1dcdc6601_directiveChecker*, jule::Ptr<_1dcd09369_Directive>*);
inline void _1dcdc74e2_checkDeprecated(_1dcdc6601_directiveChecker*, jule::Ptr<_1dcd09369_Directive>*);
inline void _1dcdc7767_checkTest(_1dcdc6601_directiveChecker*, jule::Ptr<_1dcd09369_Directive>*);
inline void _1dcdc79dc_checkDirective(_1dcdc6601_directiveChecker*, jule::Ptr<_1dcd09369_Directive>*);
inline void _1dcdc7bb8_check(_1dcdc6601_directiveChecker*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcdccb9b_SelectPackage(_1dcdcc6d4_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)>);
inline jule::Ptr<_1dce05cb2_Var> _1dcdcd053_FindVar(_1dcdcc6d4_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce816de_TypeAlias> _1dcdcd40a_FindTypeAlias(_1dcdcc6d4_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5b641_Struct> _1dcdcd7b2_FindStruct(_1dcdcc6d4_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd71997_Fn> _1dcdcdb69_FindFn(_1dcdcc6d4_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd83bb8_Trait> _1dcdcde77_FindTrait(_1dcdcc6d4_ImportInfo*, jule::Str);
inline jule::Ptr<_1dcd8644b_Enum> _1dcdce285_FindEnum(_1dcdcc6d4_ImportInfo*, jule::Str);
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcdce593_FindTypeEnum(_1dcdcc6d4_ImportInfo*, jule::Str);
inline jule::Bool _1dcdce97d_isLookupable(_1dcdcc6d4_ImportInfo*, jule::Str);
inline jule::Bool _1dcdcec8b_existIdent(_1dcdcc6d4_ImportInfo*, jule::Str);
inline jule::Bool _1dcdd0022_isAccessibleViaSelection(_1dcdcc6d4_ImportInfo*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcdd0792_SelectPackage(_1dcdd031e_Package*, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)>);
inline jule::Ptr<_1dce05cb2_Var> _1dcdd0b49_FindVar(_1dcdd031e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce816de_TypeAlias> _1dcdd1001_FindTypeAlias(_1dcdd031e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5b641_Struct> _1dcdd13a8_FindStruct(_1dcdd031e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd71997_Fn> _1dcdd1760_FindFn(_1dcdd031e_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd83bb8_Trait> _1dcdd1a6d_FindTrait(_1dcdd031e_Package*, jule::Str);
inline jule::Ptr<_1dcd8644b_Enum> _1dcdd1d7b_FindEnum(_1dcdd031e_Package*, jule::Str);
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcdd2189_FindTypeEnum(_1dcdd031e_Package*, jule::Str);
inline jule::Ptr<_1dcd98947_comptimeTypeInfo> _1dcdd53ce_pushComptimeTypeInfo(_1dcdd4e8e_commonSemaMeta*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcdd5e29_SelectPackage(_1dcdd59a6_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)>);
inline jule::Ptr<_1dce05cb2_Var> _1dcdd62d1_FindVar(_1dcdd59a6_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce816de_TypeAlias> _1dcdd6688_FindTypeAlias(_1dcdd59a6_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5b641_Struct> _1dcdd6a40_FindStruct(_1dcdd59a6_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd71997_Fn> _1dcdd6de7_FindFn(_1dcdd59a6_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd83bb8_Trait> _1dcdd7205_FindTrait(_1dcdd59a6_Sema*, jule::Str);
inline jule::Ptr<_1dcd8644b_Enum> _1dcdd7513_FindEnum(_1dcdd59a6_Sema*, jule::Str);
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcdd7821_FindTypeEnum(_1dcdd59a6_Sema*, jule::Str);
inline jule::Bool _1dcdd7bea_isFlag(_1dcdd59a6_Sema*, jule::I64);
inline void _1dcdd7e70_setCurrentFile(_1dcdd59a6_Sema*, jule::Ptr<_1dce502b2_SymbolTable>);
inline void _1dcdd8338_pushErr(_1dcdd59a6_Sema*, jule::Ptr<_23ae26b42_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dcdd8657_pushSuggestion(_1dcdd59a6_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dcdd8a0e_isAccessibleDefine(_1dcdd59a6_Sema*, jule::Bool, jule::Ptr<_23ae26b42_Token>);
inline jule::Bool _1dcdd8e60_isDuplicatedIdent(_1dcdd59a6_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1dcdd927e_checkDirectives(jule::Ptr<_1dcdd59a6_Sema>, jule::Slice<jule::Ptr<_1dcd09369_Directive>>*, jule::Any);
inline jule::Bool _1dcdd96d0_checkGenericQuantity(_1dcdd59a6_Sema*, jule::I64, jule::I64, jule::Ptr<_23ae26b42_Token>);
inline jule::Bool _1dcdd9aa9_isDuplicatedImportSelection(_1dcdd59a6_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1dcdd9e72_getImportDef(_1dcdd59a6_Sema*, jule::Str, jule::Ptr<_1dcdcc6d4_ImportInfo>*);
inline jule::Bool _1c676ceae_checkImportSelection(_1dcdd59a6_Sema*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dce05cb2_Var>*);
inline jule::Bool _1c6771b3e_checkImportSelection(_1dcdd59a6_Sema*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dce816de_TypeAlias>*);
inline jule::Bool _1c6775747_checkImportSelection(_1dcdd59a6_Sema*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dcd5b641_Struct>*);
inline jule::Bool _1c677963b_checkImportSelection(_1dcdd59a6_Sema*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dcd83bb8_Trait>*);
inline jule::Bool _1c677d266_checkImportSelection(_1dcdd59a6_Sema*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dcd8644b_Enum>*);
inline jule::Bool _1c6781d91_checkImportSelection(_1dcdd59a6_Sema*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dcd87a46_TypeEnum>*);
inline jule::Bool _1c67859bb_checkImportSelection(_1dcdd59a6_Sema*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dcd71997_Fn>*);
inline jule::Bool _1dcdda659_checkImportSelectedSelections(_1dcdd59a6_Sema*, jule::Ptr<_1dcdcc6d4_ImportInfo>*);
inline jule::Bool _1c67899c0_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema*, jule::Slice<jule::Ptr<_1dce05cb2_Var>>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1c678cd58_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema*, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1c678d4b8_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema*, jule::Slice<jule::Ptr<_1dcd5b641_Struct>>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1c679106a_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema*, jule::Slice<jule::Ptr<_1dcd71997_Fn>>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1c67925dd_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema*, jule::Slice<jule::Ptr<_1dcd83bb8_Trait>>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1c6796779_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema*, jule::Slice<jule::Ptr<_1dcd8644b_Enum>>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1c679932b_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema*, jule::Slice<jule::Ptr<_1dcd87a46_TypeEnum>>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1dcddad85_checkImportAllSelections(_1dcdd59a6_Sema*, jule::Ptr<_1dcdcc6d4_ImportInfo>*);
inline jule::Bool _1dcddb1a4_checkImportSelections(_1dcdd59a6_Sema*, jule::Ptr<_1dcdcc6d4_ImportInfo>*);
inline jule::Bool _1dcddb4b2_isUseAliasDuplication(_1dcdd59a6_Sema*, jule::Ptr<_1dcdcc6d4_ImportInfo>*);
inline jule::Bool _1dcddb7c0_checkImport(_1dcdd59a6_Sema*, jule::Ptr<_1dcdcc6d4_ImportInfo>*);
inline void _1dcddb99b_checkImports(_1dcdd59a6_Sema*);
inline void _1dcddbb77_implFileImpls(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dcddbd53_implImpls(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dcddc02e_checkEnums(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dcddc20a_checkFileInherits(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dcddc3d6_checkInherits(jule::Ptr<_1dcdd59a6_Sema>);
inline _1dce93778_typeChecker _1dcddc837_typeChecker(jule::Ptr<_1dcdd59a6_Sema>, jule::Trait<_1dcea0763_Lookup>, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>, jule::Ptr<_1dce92898_referencer>);
inline jule::Ptr<_1dce82437_TypeKind> _1dcddcd32_buildTypeWithRefers(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd3bd80_TypeDecl>*, jule::Trait<_1dcea0763_Lookup>, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>, jule::Ptr<_1dce92898_referencer>);
inline jule::Bool _1dcddd32c_checkTypeWithRefers(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce892da_TypeSymbol>*, jule::Trait<_1dcea0763_Lookup>, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>, jule::Ptr<_1dce92898_referencer>);
inline jule::Ptr<_1dcda6d62_constraintChecker> _1dcddd591_constraintChecker(jule::Ptr<_1dcdd59a6_Sema>);
inline jule::Bool _1dcddd948_checkType(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce892da_TypeSymbol>*, jule::Trait<_1dcea0763_Lookup>);
inline jule::Ptr<_1dce82437_TypeKind> _1dcdddd99_buildTypeWithGenerics(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd3bd80_TypeDecl>*, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>, jule::Ptr<_1dcd775a2_ReferenceStack>);
inline jule::Ptr<_1dce82437_TypeKind> _1dcdde4b5_selectType(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd3bd80_TypeDecl>*);
inline jule::Ptr<_1dce5683a_Eval> _1dcdde916_evalpd(jule::Ptr<_1dcdd59a6_Sema>, jule::Trait<_1dcea0763_Lookup>, jule::Ptr<_1dce82437_TypeKind>, jule::Ptr<_1dce05cb2_Var>);
inline jule::Ptr<_1dce5683a_Eval> _1dcddecbd_evalp(jule::Ptr<_1dcdd59a6_Sema>, jule::Trait<_1dcea0763_Lookup>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1dce5683a_Eval> _1dcde00cb_eval(jule::Ptr<_1dcdd59a6_Sema>, jule::Trait<_1dcea0763_Lookup>);
inline jule::Bool _1dcde05c6_checkAssignType(jule::Ptr<_1dcdd59a6_Sema>, jule::Bool, jule::Ptr<_1dce82437_TypeKind>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_23ae26b42_Token>);
inline jule::Bool _1dcde0a27_checkTypeCompatibility(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce82437_TypeKind>*, jule::Ptr<_1dce82437_TypeKind>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Ptr<_1dce82437_TypeKind> _1dcde0e9a_buildNonGenericTypeKind(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd3bd80_TypeDecl>*, jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>>*, jule::Slice<jule::Ptr<_1dce82437_TypeKind>>*);
inline jule::Bool _1dcde1385_buildFnNonGenericTypeKinds(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd74648_FnIns>*, jule::Slice<jule::Ptr<_1dce82437_TypeKind>>*);
inline jule::Ptr<_1dcd74648_FnIns> _1dcde16a4_getTraitCheckFnKind(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd71997_Fn>*);
inline jule::Bool _1dcde1b05_checkConstraintsFn(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd74648_FnIns>*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dcd74648_FnIns>);
inline jule::Bool _1dcde2056_checkConstraintsStruct(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5e457_StructIns>*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dcd5e457_StructIns>);
inline jule::Bool _1dcde240d_fnEnvironment(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd74648_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1dcdd59a6_Sema>*,jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>*)>);
inline void _1dcde2683_checkFnParamKind(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd73779_ParamIns>*);
inline jule::Bool _1dcde2991_reloadFnInsTypes(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd74648_FnIns>);
inline jule::Bool _1dcde2e14_checkRefValidityForInitExpr(jule::Ptr<_1dcdd59a6_Sema>, jule::Bool, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1dcde34db_checkValidityForInitExpr(jule::Ptr<_1dcdd59a6_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1dce82437_TypeKind>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1dcde38a4_checkTypeAliasDeclKind(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce816de_TypeAlias>*, jule::Trait<_1dcea0763_Lookup>);
inline void _1dcde3bc3_checkTypeAliasDecl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce816de_TypeAlias>*, jule::Trait<_1dcea0763_Lookup>);
inline void _1dcde3e48_checkTypeAliasDeclDup(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce816de_TypeAlias>*);
inline jule::Bool _1dcde41ac_checkTypeAliasDecls(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1c6826be4_checkEnumItemsDup(_1dcdd59a6_Sema*, jule::Slice<jule::Ptr<_1dcd85956_EnumItem>>);
inline void _1c683123c_checkEnumItemsDup(_1dcdd59a6_Sema*, jule::Slice<jule::Ptr<_1dcd874b3_TypeEnumItem>>);
inline void _1dcde46a7_checkEnumItemsStr(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd8644b_Enum>*);
inline void _1c680d280_checkEnumItemInt(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd8644b_Enum>*, jule::Ptr<_1dce89b8c_Prim>*, jule::Ptr<_1dcd85956_EnumItem>*, jule::U64*);
inline void _1c681a9b8_checkEnumItemInt(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd8644b_Enum>*, jule::Ptr<_1dce89b8c_Prim>*, jule::Ptr<_1dcd85956_EnumItem>*, jule::I64*);
inline void _1c680990d_checkEnumItemsInt1(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce89b8c_Prim>*, jule::Ptr<_1dcd8644b_Enum>*);
inline void _1c6809248_checkEnumItemsInt1(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce89b8c_Prim>*, jule::Ptr<_1dcd8644b_Enum>*);
inline void _1dcde5257_checkEnumItemsInt(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd8644b_Enum>*);
inline void _1dcde54cc_checkEnumDecl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd8644b_Enum>*);
inline void _1dcde5752_checkTypeEnumDecl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd87a46_TypeEnum>*);
inline jule::Bool _1dcde59b6_checkEnumDecls(jule::Ptr<_1dcdd59a6_Sema>);
inline jule::Bool _1dcde5c2a_checkTypeEnumDecls(jule::Ptr<_1dcdd59a6_Sema>);
inline jule::Bool _1dcde6038_checkDeclGenerics(_1dcdd59a6_Sema*, jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>>*);
inline jule::Bool _1dcde6346_checkFnDeclParamsDup(_1dcdd59a6_Sema*, jule::Ptr<_1dcd71997_Fn>*);
inline jule::Bool _1dcde6654_checkFnDeclResultDup(_1dcdd59a6_Sema*, jule::Ptr<_1dcd71997_Fn>*);
inline jule::Bool _1dcde6962_checkFnVariadicParam(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd71997_Fn>*);
inline void _1dcde6bd7_checkFnDeclPrototype(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd71997_Fn>*);
inline jule::Bool _1dcde7138_catchTraitInheritCycle(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd83bb8_Trait>, jule::Ptr<_1dcd83bb8_Trait>, jule::Str*);
inline jule::Bool _1dcde7468__checkTraitDeclInherits(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd83bb8_Trait>*);
inline void _1dcde76ee_checkTraitDeclInherits(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd83bb8_Trait>*);
inline void _1dcde7974_checkTraitDeclMethod(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd71997_Fn>*);
inline void _1dcde7be9_checkTraitDeclMethods(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd83bb8_Trait>*);
inline void _1dcde7e6e_checkTraitDecl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd83bb8_Trait>*);
inline jule::Bool _1dcde81d3_checkTraitDecls(jule::Ptr<_1dcdd59a6_Sema>);
inline jule::Bool _1dcde858a_checkTraitImplMethods(_1dcdd59a6_Sema*, jule::Ptr<_1dcd83bb8_Trait>*, jule::Ptr<_1dcda8c10_Impl>*);
inline jule::Bool _1dcde8942_implToStruct(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5b641_Struct>*, jule::Ptr<_1dcda8c10_Impl>*);
inline void _1dcde8bb7_implTrait(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcda8c10_Impl>*);
inline void _1dcde8e3c_implStruct(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcda8c10_Impl>*);
inline void _1dcde91b2_implImpl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcda8c10_Impl>*);
inline void _1dcde94d1_checkVarDecl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce05cb2_Var>*, jule::Trait<_1dcea0763_Lookup>);
inline void _1dcde9756_checkGlobalVarDecl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce05cb2_Var>*);
inline jule::Bool _1dcde99ba_checkGlobalDecls(jule::Ptr<_1dcdd59a6_Sema>);
inline jule::Bool _1dcde9d72_checkStructTraitImpl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5b641_Struct>*, jule::Ptr<_1dcd83bb8_Trait>*);
inline jule::Bool _1dcdea180_checkStructImpls(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5b641_Struct>*);
inline jule::Bool _1dcdea48d_checkStructFields(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5b641_Struct>*);
inline void _1dcdea713_checkStructDecl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5b641_Struct>*);
inline jule::Bool _1dcdea977_checkStructDecls(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dcdeabec_checkAnonFnDecl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd71997_Fn>*);
inline void _1dcdeae72_checkFnDecl(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd71997_Fn>*);
inline jule::Bool _1dcdeb280_checkFuncDecls(jule::Ptr<_1dcdd59a6_Sema>, jule::Slice<jule::Ptr<_1dcd71997_Fn>>*);
inline jule::Bool _1dcdeb4e4_checkFnDecls(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dcdeb8ac_pushCycleError(_1dcdd59a6_Sema*, jule::Str*, jule::Str*, jule::Str*);
inline jule::Bool _1dcdebd0d_checkCrossCycle(_1dcdd59a6_Sema*, jule::Ptr<_1dcd5b641_Struct>*, jule::Ptr<_1dcd5b641_Struct>*, jule::Str*);
inline jule::Bool _1dcdec281_checkStructDeriveIllegalCycles(_1dcdd59a6_Sema*, jule::Str, jule::Ptr<_1dcd5b641_Struct>*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dcdec5c2_checkStructInsDeriveClone(_1dcdd59a6_Sema*, jule::Ptr<_1dcd5e457_StructIns>);
inline void _1dcdec7ae_checkPackageDecls(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dcdecb00_checkDataForTypeInference(_1dcdd59a6_Sema*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_23ae26b42_Token>*);
inline void _1dcdecd86_checkVar(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce05cb2_Var>*);
inline void _1dcded1a5_checkTypeVar(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dce05cb2_Var>*, jule::Trait<_1dcea0763_Lookup>);
inline void _1dcded381_checkGlobalTypes(jule::Ptr<_1dcdd59a6_Sema>);
inline jule::Ptr<_1dcd74648_FnIns> _1dcded738_readyToCheckFn(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5e457_StructIns>*, jule::Ptr<_1dcd71997_Fn>*);
inline void _1dcdeda57_checkTypeMethod(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5e457_StructIns>*, jule::Ptr<_1dcd71997_Fn>*);
inline jule::Ptr<_1dcd74648_FnIns> _1dcdedea8_checkStructInsOp(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5e457_StructIns>*, jule::Ptr<_1dcd71997_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1dcd71997_Fn>)>);
inline jule::Bool _1dcdee360_checkStructEnv(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5e457_StructIns>*, jule::Ptr<_23ae26b42_Token>);
inline jule::Bool _1dcdee717_precheckStructIns(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5e457_StructIns>*, jule::Ptr<_23ae26b42_Token>);
inline void _1dcdee98c_checkStructIns(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1dcdeec12_checkTypeStruct(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5b641_Struct>*);
inline void _1dcdeeddd_checkStructTypes(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dce00185_checkStructInsOperators(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5e457_StructIns>);
inline void _1dce0041b_precheckStructType(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd5b641_Struct>*);
inline void _1dce005e7_precheckStructTypes(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dce0086c_checkRets(_1dcdd59a6_Sema*, jule::Ptr<_1dcd74648_FnIns>*);
inline void _1dce00b8b_checkFnInsSc(_1dcdd59a6_Sema*, jule::Ptr<_1dcd74648_FnIns>*, jule::Ptr<_1dcdb5898_scopeChecker>*);
inline void _1dce00eaa_checkFnInsCaller(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd74648_FnIns>*, jule::Ptr<_23ae26b42_Token>);
inline void _1dce01230_checkFnIns(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd74648_FnIns>*);
inline void _1dce014a5_checkTypeFn(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd71997_Fn>*);
inline void _1dce0172a_checkTestFn(_1dcdd59a6_Sema*, jule::Ptr<_1dcd74648_FnIns>*);
inline void _1dce019a0_precheckTypeFn(jule::Ptr<_1dcdd59a6_Sema>, jule::Ptr<_1dcd71997_Fn>*);
inline void _1dce01b7b_precheckFnTypes(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dce01d57_checkFnTypes(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dce02033_checkPackageTypes(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dce0220e_setFileSemaFields(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dce023da_setSemaFields(jule::Ptr<_1dcdd59a6_Sema>);
inline void _1dce02660_check(jule::Ptr<_1dcdd59a6_Sema>, jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>*);
inline _1dce02a5b_missingRetChecker static__1dce02e24_new(void);
inline jule::Bool _1dce031ee_checkConditional(_1dce02a5b_missingRetChecker*, jule::Ptr<_1dcdae7c6_Conditional>);
inline jule::Bool _1dce0350c_checkMatch(_1dce02a5b_missingRetChecker*, jule::Ptr<_1dcdb2a82_Match>);
inline jule::Bool _1dce0381a_checkInfIter(_1dce02a5b_missingRetChecker*, jule::Ptr<_1dcdaeab2_InfIter>);
inline jule::Bool _1dce03b28_checkScope(_1dce02a5b_missingRetChecker*, jule::Ptr<_1dcdadc6a_Scope>);
inline jule::Bool _1dce03e36_check(_1dce02a5b_missingRetChecker*, jule::Ptr<_1dcdadc6a_Scope>);
inline jule::Bool _1dce06136_IsInitialized(_1dce05cb2_Var*);
inline jule::Bool _1dce0639a_IsTypeInferred(_1dce05cb2_Var*);
inline jule::Bool _1dce0660e_untypedConstant(_1dce05cb2_Var*);
inline jule::Bool static__1dce0718c_Dispose(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce07434_Str(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce07775_logical(jule::Ptr<_1dcd71997_Fn>*, jule::Str);
inline jule::Bool static__1dce07a1c_Eq(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce07cb4_Gt(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0805b_GtEq(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce08303_Lt(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0859a_LtEq(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce088db_result(jule::Ptr<_1dcd71997_Fn>*, jule::Str);
inline jule::Bool static__1dce08b83_Shl(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce08e2a_Shr(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce091c2_Add(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce09469_Sub(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce09711_Div(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce099a8_Mul(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce09c50_Mod(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce09ee7_BitAnd(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0a28e_BitOr(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0a536_BitXor(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0a877_unary(jule::Ptr<_1dcd71997_Fn>*, jule::Str);
inline jule::Bool static__1dce0ab1e_Neg(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0adb6_Pos(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0b15d_BitNot(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0b49e_assign(jule::Ptr<_1dcd71997_Fn>*, jule::Str);
inline jule::Bool static__1dce0b746_AddAssign(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0b9dd_SubAssign(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0bc85_DivAssign(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0c02c_MulAssign(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0c2c4_ModAssign(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0c56b_ShlAssign(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0c813_ShrAssign(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0caaa_BitOrAssign(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0cd52_BitAndAssign(jule::Ptr<_1dcd71997_Fn>);
inline jule::Bool static__1dce0d0e9_BitXorAssign(jule::Ptr<_1dcd71997_Fn>);
inline void _1dce3dc0c_pushErr(_1dce3d734_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dce3de71_checkTrait(_1dce3d734_typeCompatibilityChecker*);
inline jule::Bool _1dce3e1d5_checkPtr(_1dce3d734_typeCompatibilityChecker*);
inline jule::Bool _1dce3e449_checkPrim(_1dce3d734_typeCompatibilityChecker*);
inline jule::Bool _1dce3e801_typeEnum(_1dce3d734_typeCompatibilityChecker*, jule::Ptr<_1dcd87a46_TypeEnum>*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce3ea65_checkTypeEnum(_1dce3d734_typeCompatibilityChecker*);
inline jule::Bool _1dce3ecc9_check(_1dce3d734_typeCompatibilityChecker*);
inline void _1dce407be_pushErr(_1dce4035c_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dce40a33_checkValidity(_1dce4035c_assignTypeChecker*);
inline jule::Bool _1dce40c97_checkConst(_1dce4035c_assignTypeChecker*);
inline jule::Bool _1dce4100b_isPrim(_1dce4035c_assignTypeChecker*);
inline jule::Bool _1dce41270_checkCompatibility(_1dce4035c_assignTypeChecker*);
inline jule::Bool _1dce414d4_check(_1dce4035c_assignTypeChecker*);
inline jule::Bool _1c62d2e0e_annotateConstraintElem(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1c62d323e_annotateConstraintElem(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1c62d2727_annotateConstraintElem(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1c62d7012_annotateConstraintElem(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce426d3_annotateConstraintMap(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce429e1_annotateConstraintTup(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce42cee_annotateConstraintFn(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce4312e_annotateConstraintIdent(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce4344d_annotateConstraint(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline void _1dce4376c_pushGeneric(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*, jule::I64);
inline jule::Bool _1dce43a7a_annotatePrim(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce43d88_annotateArr(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce44196_annotateSlc(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce4454d_checkMapKey(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce4485b_annotateMap(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce44b69_annotateFn(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce44e77_annotatePtr(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce45285_annotateSptr(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce45593_annotateStruct(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce458a1_annotateAny(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce45bae_annotateKind(_1dce41d42_dynamicTypeAnnotation*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce45e23_annotate(_1dce41d42_dynamicTypeAnnotation*);
inline void _1dce46c8c_pushErrToken(_1dce4673c_fnCallArgChecker*, jule::Ptr<_23ae26b42_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dce470ab_pushErr(_1dce4673c_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1dcd73779_ParamIns>> _1dce47320_getParams(_1dce4673c_fnCallArgChecker*);
inline jule::Bool _1dce475ea_checkCounts(_1dce4673c_fnCallArgChecker*, jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>*);
inline jule::Bool _1dce47a4b_checkArg(_1dce4673c_fnCallArgChecker*, jule::Ptr<_1dcd73779_ParamIns>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Bool _1dce47e03_push(_1dce4673c_fnCallArgChecker*, jule::Ptr<_1dcd73779_ParamIns>*, jule::Ptr<_1dcd4100a_Expr>);
inline jule::Bool _1dce482aa_pushVariadic(_1dce4673c_fnCallArgChecker*, jule::Ptr<_1dcd73779_ParamIns>*, jule::I64);
inline jule::Bool _1dce485b8_checkArgs(_1dce4673c_fnCallArgChecker*, jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>*);
inline jule::Bool _1dce4884e_checkDynamicTypeAnnotation(_1dce4673c_fnCallArgChecker*);
inline jule::Bool _1dce48ac4_check(_1dce4673c_fnCallArgChecker*);
inline void _1dce4961e_pushErr(_1dce49113_structLitChecker*, jule::Ptr<_23ae26b42_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dce4993d_pushSuggestion(_1dce49113_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1dce49d06_pushMatch(_1dce49113_structLitChecker*, jule::Ptr<_1dcd5d962_FieldIns>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_23ae26b42_Token>*);
inline void _1dce4a125_checkPair(_1dce49113_structLitChecker*, jule::Ptr<_1dcd458a0_FieldExprPair>*, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>*);
inline jule::Bool _1dce4a433_readyExprs(_1dce49113_structLitChecker*, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>*);
inline void _1dce4a6a8_check(_1dce49113_structLitChecker*, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>*);
inline jule::Ptr<_1dce05cb2_Var> _1dce4b1ae_buildVar(_1dce4abe7_rangeChecker*, jule::Ptr<_1dcd4e48b_VarDecl>*);
inline void _1dce4b38a_setSizeKey(_1dce4abe7_rangeChecker*);
inline void _1dce4b753_checkRangeExprValidity(_1dce4abe7_rangeChecker*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce82437_TypeKind>*);
inline void _1dce4b92e_checkSlice(_1dce4abe7_rangeChecker*);
inline void _1dce4bb0a_checkArray(_1dce4abe7_rangeChecker*);
inline void _1dce4bcd6_checkMapKeyA(_1dce4abe7_rangeChecker*);
inline void _1dce4beb2_checkMapKeyB(_1dce4abe7_rangeChecker*);
inline void _1dce4c18d_checkMap(_1dce4abe7_rangeChecker*);
inline void _1dce4c369_checkStr(_1dce4abe7_rangeChecker*);
inline void _1dce4c545_checkComptime(_1dce4abe7_rangeChecker*);
inline jule::Bool _1dce4c7a9_checkComptimeRange(_1dce4abe7_rangeChecker*);
inline jule::Bool _1dce4ca1d_check(_1dce4abe7_rangeChecker*);
inline void _1dce4d601_prepareTypes(_1dce4d1e4_retTypeChecker*);
inline void _1dce4d876_prepareExprs(_1dce4d1e4_retTypeChecker*, jule::Ptr<_1dcd4100a_Expr>*);
inline void _1dce4da52_checkExprs(_1dce4d1e4_retTypeChecker*);
inline jule::Bool _1dce4dd60_check(_1dce4d1e4_retTypeChecker*, jule::Ptr<_1dcd4100a_Expr>*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dce50779_SelectPackage(_1dce502b2_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)>);
inline jule::Ptr<_1dce05cb2_Var> _1dce50b31_FindVar(_1dce502b2_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce816de_TypeAlias> _1dce50ed8_FindTypeAlias(_1dce502b2_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5b641_Struct> _1dce51390_FindStruct(_1dce502b2_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd71997_Fn> _1dce51747_FindFn(_1dce502b2_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd83bb8_Trait> _1dce51a55_FindTrait(_1dce502b2_SymbolTable*, jule::Str);
inline jule::Ptr<_1dcd8644b_Enum> _1dce51d63_FindEnum(_1dce502b2_SymbolTable*, jule::Str);
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dce52171_FindTypeEnum(_1dce502b2_SymbolTable*, jule::Str);
inline jule::Ptr<_1dce05cb2_Var> _1dce52737_findVar(_1dce502b2_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1dce816de_TypeAlias> _1dce52b88_findTypeAlias(_1dce502b2_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1dce53040_defByIdent(_1dce502b2_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1dce53491_isDuplicatedIdent(_1dce502b2_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
inline jule::Bool _1dce55163_IsNil(_1dce54cbc_Data*);
inline jule::Bool _1dce553c7_IsVoid(_1dce54cbc_Data*);
inline jule::Bool _1dce5563b_IsConst(_1dce54cbc_Data*);
inline jule::Bool _1dce55949_GoodOperand(_1dce54cbc_Data*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce56d46_pushErr(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dce57165_pushSuggestion(_1dce5683a_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1dce57341_allowBuiltin(_1dce5683a_Eval*);
inline void _1dce5751c_disallowBuiltin(_1dce5683a_Eval*);
inline jule::Bool _1dce57781_isUnsafe(_1dce5683a_Eval*);
inline jule::Bool _1dce579e5_isGlobal(_1dce5683a_Eval*);
inline jule::Bool _1dce57cc0_applyNumericPrefix(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce58034_litNil(_1dce5683a_Eval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce58342_litStr(_1dce5683a_Eval*, jule::Ptr<_1dcd4203e_LitExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce58650_litBool(_1dce5683a_Eval*, jule::Ptr<_1dcd4203e_LitExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce5895d_litRune(_1dce5683a_Eval*, jule::Ptr<_1dcd4203e_LitExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce58c6b_litFloat(_1dce5683a_Eval*, jule::Ptr<_1dcd4203e_LitExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce59079_litInt(_1dce5683a_Eval*, jule::Ptr<_1dcd4203e_LitExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce59387_litNum(_1dce5683a_Eval*, jule::Ptr<_1dcd4203e_LitExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce59695_evalLit(_1dce5683a_Eval*, jule::Ptr<_1dcd4203e_LitExpr>);
inline jule::Any _1dce599a3_findBuiltins(_1dce5683a_Eval*, jule::Str);
inline jule::Any _1dce59d5a_getDef(_1dce5683a_Eval*, jule::Str, jule::Bool);
inline void _1c47d8d1d_pushReference(_1dce5683a_Eval*, jule::Ptr<_1dcd74648_FnIns>*);
inline void _1c47ec480_pushReference(_1dce5683a_Eval*, jule::Ptr<_1dce05cb2_Var>*);
inline void _1c6bad7c8_pushReference(_1dce5683a_Eval*, jule::Ptr<_1dcd5e457_StructIns>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce5a3dd__evalEnum(_1dce5683a_Eval*, jule::Ptr<_1dcd8644b_Enum>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5a795_evalEnum(_1dce5683a_Eval*, jule::Ptr<_1dcd8644b_Enum>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5aaa3__evalTypeEnum(_1dce5683a_Eval*, jule::Ptr<_1dcd87a46_TypeEnum>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5ae5a_evalTypeEnum(_1dce5683a_Eval*, jule::Ptr<_1dcd87a46_TypeEnum>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5b268__evalStruct(_1dce5683a_Eval*, jule::Ptr<_1dcd5e457_StructIns>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5b620_evalStruct(_1dce5683a_Eval*, jule::Ptr<_1dcd5e457_StructIns>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5b92d_evalFnIns(_1dce5683a_Eval*, jule::Ptr<_1dcd74648_FnIns>);
inline void _1dce5bc4c_checkDeprecated(_1dce5683a_Eval*, jule::Slice<jule::Ptr<_1dcd09369_Directive>>*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5c104_evalFn(_1dce5683a_Eval*, jule::Ptr<_1dcd71997_Fn>, jule::Ptr<_23ae26b42_Token>);
inline void _1dce5c4bc_pushIllegalCycleError(_1dce5683a_Eval*, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*, jule::Str*);
inline jule::Bool _1dce5c874_checkCrossCycle(_1dce5683a_Eval*, jule::Ptr<_1dce05cb2_Var>*, jule::Str*);
inline jule::Bool _1dce5cc2b_checkIllegalCycles(_1dce5683a_Eval*, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5d0d3_evalVar(_1dce5683a_Eval*, jule::Ptr<_1dce05cb2_Var>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5d48a_evalTypeAlias(_1dce5683a_Eval*, jule::Ptr<_1dce816de_TypeAlias>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5d842_evalDef(_1dce5683a_Eval*, jule::Any, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5db50_evalIdent(_1dce5683a_Eval*, jule::Ptr<_1dcd42b00_IdentExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5de5d_evalUnary(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd43309_UnaryExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5e26b_evalVariadic(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd436b1_VariadicExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5e579_evalUnsafe(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd4267c_UnsafeExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5e887_evalArr(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd4764e_SliceExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce5ecd8_evalExpSlc(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd4764e_SliceExpr>, jule::Ptr<_1dce82437_TypeKind>, jule::Any);
inline jule::Ptr<_1dce54cbc_Data> _1dce600e6_evalSliceExpr(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd4764e_SliceExpr>);
inline void _1dce60437_checkIntegerIndexingByData(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_23ae26b42_Token>);
inline void _1dce60811_indexingPtr(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd47eac_IndexingExpr>*);
inline void _1dce60bc9_indexingArr(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd47eac_IndexingExpr>*);
inline void _1dce61092_indexingSlc(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd47eac_IndexingExpr>*);
inline void _1dce6145a_indexingMap(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd47eac_IndexingExpr>*);
inline void _1dce61823_indexingStr(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd47eac_IndexingExpr>*);
inline void _1dce61bdb_toIndexing(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd47eac_IndexingExpr>*);
inline jule::Bool _1dce6215e_pushGenericsFromExprSubIdent(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd44393_SubIdentExpr>*, jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>*, jule::Ptr<_1dcd4100a_Expr>*);
inline jule::Bool _1dce62527_pushGenericsFromData(jule::Ptr<_1dce5683a_Eval>, jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>*, jule::Ptr<_1dcd4100a_Expr>*);
inline void _1dce62868_evalIdentDeclFromIndexing(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd47eac_IndexingExpr>*);
inline jule::Bool _1dce62cca_checkGenericFn(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd74648_FnIns>*, jule::Ptr<_23ae26b42_Token>*, jule::Any*);
inline void _1dce6311b_evalFnGenericFromIndexing(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd47eac_IndexingExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce6343a_evalIndexing(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd47eac_IndexingExpr>);
inline __jule_tuple_x_1dce54cbc_Data__jule_tuple_x_1dce54cbc_Data _1dce63748_evalSlicingExprs(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd485b7_SlicingExpr>*);
inline void _1dce639bd_slicingArr(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce63d86_slicingStr(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce642e8_checkSlicing(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd485b7_SlicingExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce64606_evalSlicing(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd485b7_SlicingExpr>);
inline void _1dce649be_castPtr(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline void _1dce64d87_castStruct(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline void _1dce65250_castRef(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline void _1dce65618_castSlc(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline void _1dce65937_castStr(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline void _1dce65d00_castInt(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline void _1dce661b8_castNum(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline void _1dce66581_castPrim(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline void _1dce668a0_castConstant(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce66c68_castTypeEnum(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_23ae26b42_Token>*);
inline void _1dce67131_castTypeEnumT(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce67582_evalCastByTypeNData(_1dce5683a_Eval*, jule::Ptr<_1dce82437_TypeKind>, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce679d3_evalCastT(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dce82437_TypeKind>*, jule::Ptr<_1dcd4100a_Expr>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce67ce1_evalCast(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd43a68_CastExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce680ee_evalNsSelection(_1dce5683a_Eval*, jule::Ptr<_1dcd43e20_NsSelectionExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce68550_evalStructLitExplicit(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd5e457_StructIns>, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6885d_evalStructLit(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd46175_StructLit>);
inline _1dce93778_typeChecker _1dce68ac2_typeChecker(_1dce5683a_Eval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce68dd0_evalType(_1dce5683a_Eval*, jule::Ptr<_1dcd3bd80_TypeDecl>);
inline void _1dce691ee_callTypeFn(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce6951d_callBuiltinFn(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce6985e_checkFnOfConcurrentCall(_1dce5683a_Eval*, jule::Ptr<_1dcd74648_FnIns>*, jule::Ptr<_23ae26b42_Token>);
inline void _1dce69c5a_processExceptionalHandler(_1dce5683a_Eval*, jule::Ptr<_1dcd74648_FnIns>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce6a08a_callFn(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce6a398_evalFnCall(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd44e21_FnCallExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6a750_evalEnumStatic(_1dce5683a_Eval*, jule::Ptr<_1dcd8644b_Enum>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6ab07_evalTypeEnumStatic(_1dce5683a_Eval*, jule::Ptr<_1dcd87a46_TypeEnum>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6aeae_evalStructStatic(_1dce5683a_Eval*, jule::Ptr<_1dcd5e457_StructIns>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6b410_evalTraitSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_1dcd83bb8_Trait>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6b92c_evalStructSubIdentField(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd5e457_StructIns>*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dcd5d962_FieldIns>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce6be38_evalStructSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_1dcd5e457_StructIns>, jule::Ptr<_1dcd44393_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1dce54cbc_Data> _1dce6c2e0_evalSliceSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6c697_evalArraySubIdent(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6c9a5_evalIntTypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6ccb3_evalUintTypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6d0c1_evalI8TypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6d3ce_evalI16TypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6d6dc_evalI32TypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6d9ea_evalI64TypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6dd08_evalU8TypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6e116_evalU16TypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6e424_evalU32TypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6e732_evalU64TypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6ea40_evalF32TypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce6ed4d_evalF64TypeStatic(_1dce5683a_Eval*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce70205_evalPrimStatic(_1dce5683a_Eval*, jule::Str, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dce54cbc_Data> _1dce705ac_evalTypeStatic(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_1dcd44393_SubIdentExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1c69c6745_comptimeObjSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dcd98947_comptimeTypeInfo>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd44393_SubIdentExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1c69c9e30_comptimeObjSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dcd8a692_comptimeStructField>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd44393_SubIdentExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1c69cd5a4_comptimeObjSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dcd91698_comptimeEnumField>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd44393_SubIdentExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1c69d1ee2_comptimeObjSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dcd93e1a_comptimeParam>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd44393_SubIdentExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1c69d5666_comptimeObjSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dcd8d695_comptimeStatic>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd44393_SubIdentExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1c69d8cda_comptimeObjSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dcd9e442_comptimeValue>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd44393_SubIdentExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1c69dc45e_comptimeObjSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dcda3006_comptimeFile>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd44393_SubIdentExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce70db5_evalObjSubIdent(_1dce5683a_Eval*, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_1dcd44393_SubIdentExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce711c3_evalSubIdent(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd44393_SubIdentExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce714d1_evalTuple(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd41b87_TupleExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce71888_evalMap(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dce90401_Map>, jule::Ptr<_1dcd465e8_BraceLit>);
inline jule::Ptr<_1dce54cbc_Data> _1dce71b96_evalBraceLit(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd465e8_BraceLit>);
inline jule::Ptr<_1dce54cbc_Data> _1dce71ea4_evalAnonFn(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd4d4ac_FnDecl>);
inline jule::Ptr<_1dce54cbc_Data> _1dce722b2_evalBinop(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd44816_BinopExpr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce725c0_evalExprKind(jule::Ptr<_1dce5683a_Eval>, jule::Any);
inline jule::Ptr<_1dce54cbc_Data> _1dce728cd_eval1(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd4100a_Expr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce72bdb_eval(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd4100a_Expr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce72ee9_evalExpr1(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd4100a_Expr>);
inline jule::Ptr<_1dce54cbc_Data> _1dce73307_evalExpr(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_1dcd4100a_Expr>);
inline _1dce7377a_unaryEval static__1dce73ba9_new(jule::Ptr<_1dce5683a_Eval>);
inline void _1dce73d85_minus(_1dce7377a_unaryEval*);
inline void _1dce74061_plus(_1dce7377a_unaryEval*);
inline void _1dce7423c_caret(_1dce7377a_unaryEval*);
inline void _1dce74418_excl(_1dce7377a_unaryEval*);
inline void _1dce745e4_star(_1dce7377a_unaryEval*);
inline void _1dce747c0_amper(_1dce7377a_unaryEval*);
inline void _1dce7499b_typeDecl(_1dce7377a_unaryEval*);
inline void _1dce74b77_evalData(_1dce7377a_unaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce74e85_eval(_1dce7377a_unaryEval*, jule::Ptr<_1dcd43309_UnaryExpr>);
inline _1dce7554b_binaryEval static__1dce75b23_newPlain(jule::Ptr<_1dce5683a_Eval>);
inline _1dce7554b_binaryEval static__1dce75e31_new(jule::Ptr<_1dce5683a_Eval>, jule::Ptr<_23ae26b42_Token>);
inline jule::Bool _1dce76195_checkTypeCompatibility(_1dce7554b_binaryEval*);
inline jule::Bool _1dce7643c_checkStructCommonOperatorCompatibility(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce766d4_evalComptimeTypeInfo(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce76948_evalNil(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce76bac_evalEnum(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce76e21_evalTypeEnum(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce77185_evalSptr(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce773e9_evalPtr(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce7765d_evalArr(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce778c2_evalSlc(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce77b36_evalStruct(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce77d9a_evalTrait(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce7810e_evalAny(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce78373_evalBool(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce785d7_evalStr(_1dce7554b_binaryEval*);
inline void _1dce787b3_setTypeToGreater(_1dce7554b_binaryEval*);
inline void _1dce78a05_checkModData(_1dce7554b_binaryEval*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce78bd1_mod(_1dce7554b_binaryEval*);
inline jule::Bool _1dce79088_numbersAreCompatibile(_1dce7554b_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1dce54cbc_Data> _1dce792ec_evalFloat(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce79561_evalInt(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce797c5_evalPrim(_1dce7554b_binaryEval*);
inline void _1dce799a1_checkSpecialCases(_1dce7554b_binaryEval*);
inline jule::Ptr<_1dce54cbc_Data> _1dce79c15_evalOp(_1dce7554b_binaryEval*);
inline void _1dce79e8a_evalConst(_1dce7554b_binaryEval*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce7a210_checkData(_1dce7554b_binaryEval*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce7a3db_checkDatas(_1dce7554b_binaryEval*);
inline void _1dce7a661_setModel(_1dce7554b_binaryEval*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce7a8d6_postEval(_1dce7554b_binaryEval*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce7ac8d_solveExplicit(_1dce7554b_binaryEval*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce7b09b_eval(_1dce7554b_binaryEval*, jule::Ptr<_1dcd44816_BinopExpr>*);
inline jule::Str _1dce827de_Str(_1dce82437_TypeKind*);
inline jule::Bool _1dce82aec_Equal(jule::Ptr<_1dce82437_TypeKind>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Bool _1dce83229_Binded(_1dce82437_TypeKind*);
inline jule::Bool _1dce8348d_IsNil(_1dce82437_TypeKind*);
inline jule::Bool _1dce83702_Void(_1dce82437_TypeKind*);
inline jule::Bool _1dce83966_Comparable(_1dce82437_TypeKind*);
inline jule::Bool _1dce83bca_Mutable(_1dce82437_TypeKind*);
inline jule::Bool _1dce83e3e_Ordered(_1dce82437_TypeKind*);
inline jule::Bool _1dce841a3_NilCompatible(_1dce82437_TypeKind*);
inline jule::Bool _1dce84417_PerformsRC(_1dce82437_TypeKind*);
inline jule::Bool _1dce8467b_SupportsCloning(_1dce82437_TypeKind*);
inline jule::Bool _1dce848e0_Variadicable(_1dce82437_TypeKind*);
inline jule::Ptr<_1dce89b8c_Prim> _1dce84b54_Prim(_1dce82437_TypeKind*);
inline jule::Ptr<_1dce8d3dd_Sptr> _1dce84db8_Sptr(_1dce82437_TypeKind*);
inline jule::Ptr<_1dce91952_Ptr> _1dce8512c_Ptr(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd8644b_Enum> _1dce85391_Enum(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dce85605_TypeEnum(_1dce82437_TypeKind*);
inline jule::Ptr<_1dce90ee5_Arr> _1dce85869_Arr(_1dce82437_TypeKind*);
inline jule::Ptr<_1dce8dd4a_Slc> _1dce85acd_Slc(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd74648_FnIns> _1dce85d42_Fn(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd5e457_StructIns> _1dce860a6_Struct(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd83bb8_Trait> _1dce8631a_Trait(_1dce82437_TypeKind*);
inline jule::Ptr<_1dce90401_Map> _1dce8657e_Map(_1dce82437_TypeKind*);
inline jule::Ptr<_1dce8e950_Tuple> _1dce867e3_Tup(_1dce82437_TypeKind*);
inline jule::Bool _1dce86a57_comptime(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd8c1bb_comptimeStructFields> _1dce86cbb_comptimeStructFields(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd8a692_comptimeStructField> _1dce87030_comptimeStructField(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd928b9_comptimeEnumFields> _1dce87294_comptimeEnumFields(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd91698_comptimeEnumField> _1dce87508_comptimeEnumField(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd95eb6_comptimeParams> _1dce8776c_comptimeParams(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd93e1a_comptimeParam> _1dce879d1_comptimeParam(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd89b9c_comptimeRange> _1dce87c45_comptimeRange(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd9747e_comptimeTypeInfos> _1dce87ea9_comptimeTypeInfos(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd98947_comptimeTypeInfo> _1dce8821d_comptimeTypeInfo(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd90257_comptimeStatics> _1dce88482_comptimeStatics(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd8d695_comptimeStatic> _1dce886e6_comptimeStatic(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcd9e442_comptimeValue> _1dce8895a_comptimeValue(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcda3006_comptimeFile> _1dce88bbe_comptimeFile(_1dce82437_TypeKind*);
inline jule::Ptr<_1dcda1a3d_comptimeFiles> _1dce88e33_comptimeFiles(_1dce82437_TypeKind*);
inline jule::Bool _1dce8964d_checked(_1dce892da_TypeSymbol*);
inline jule::Str _1dce89ebc_Str(_1dce89b8c_Prim*);
inline jule::Bool _1dce8a2ca_Equal(jule::Ptr<_1dce89b8c_Prim>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Bool _1dce8a74d_IsConstraint(_1dce89b8c_Prim*);
inline jule::Bool _1dce8a9b2_IsI8(_1dce89b8c_Prim*);
inline jule::Bool _1dce8ac26_IsI16(_1dce89b8c_Prim*);
inline jule::Bool _1dce8ae8a_IsI32(_1dce89b8c_Prim*);
inline jule::Bool _1dce8b1ee_IsI64(_1dce89b8c_Prim*);
inline jule::Bool _1dce8b463_IsU8(_1dce89b8c_Prim*);
inline jule::Bool _1dce8b6c7_IsU16(_1dce89b8c_Prim*);
inline jule::Bool _1dce8b93b_IsU32(_1dce89b8c_Prim*);
inline jule::Bool _1dce8bba0_IsU64(_1dce89b8c_Prim*);
inline jule::Bool _1dce8be14_IsF32(_1dce89b8c_Prim*);
inline jule::Bool _1dce8c178_IsF64(_1dce89b8c_Prim*);
inline jule::Bool _1dce8c3dc_IsInt(_1dce89b8c_Prim*);
inline jule::Bool _1dce8c651_IsUint(_1dce89b8c_Prim*);
inline jule::Bool _1dce8c8b5_IsUintptr(_1dce89b8c_Prim*);
inline jule::Bool _1dce8cb29_IsBool(_1dce89b8c_Prim*);
inline jule::Bool _1dce8cd8d_IsStr(_1dce89b8c_Prim*);
inline jule::Bool _1dce8d102_IsAny(_1dce89b8c_Prim*);
inline jule::Str _1dce8d751_Str(_1dce8d3dd_Sptr*);
inline jule::Bool _1dce8da5e_Equal(jule::Ptr<_1dce8d3dd_Sptr>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Str _1dce8e2bd_Str(_1dce8dd4a_Slc*);
inline jule::Bool _1dce8e5cb_Equal(jule::Ptr<_1dce8dd4a_Slc>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Str _1dce8ecb3_Str(_1dce8e950_Tuple*);
inline jule::Bool _1dce900c1_Equal(jule::Ptr<_1dce8e950_Tuple>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Str _1dce90764_Str(_1dce90401_Map*);
inline jule::Bool _1dce90a72_Equal(jule::Ptr<_1dce90401_Map>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Str _1dce91358_Str(_1dce90ee5_Arr*);
inline jule::Bool _1dce91666_Equal(jule::Ptr<_1dce90ee5_Arr>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Str _1dce91cb5_Str(_1dce91952_Ptr*);
inline jule::Bool _1dce920c3_Equal(jule::Ptr<_1dce91952_Ptr>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Bool _1dce92425_IsUnsafe(_1dce91952_Ptr*);
inline void _1dce93e71_pushErr(_1dce93778_typeChecker*, jule::Ptr<_23ae26b42_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dce9414c_allowBuiltin(_1dce93778_typeChecker*);
inline void _1dce94328_disallowBuiltin(_1dce93778_typeChecker*);
inline void _1c6adc77e_pushReference(_1dce93778_typeChecker*, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c6ae03a8_pushReference(_1dce93778_typeChecker*, jule::Ptr<_1dcd83bb8_Trait>*);
inline void _1dce94823_pushReferenceByKind(_1dce93778_typeChecker*, jule::Ptr<_1dce82437_TypeKind>*);
inline void _1dce94bdb_pushCycleError(_1dce93778_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _1dce95093_checkCrossCycle(_1dce93778_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _1dce9544a_checkIllegalCycles(_1dce93778_typeChecker*, jule::Ptr<_1dcd3c446_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1dce81ec5_Kind> _1dce95802_fromTypeAlias(_1dce93778_typeChecker*, jule::Ptr<_1dcd3c446_IdentTypeDecl>*, jule::Ptr<_1dce816de_TypeAlias>*);
inline jule::Ptr<_1dcd8644b_Enum> _1dce95ba9_fromEnum(_1dce93778_typeChecker*, jule::Ptr<_1dcd3c446_IdentTypeDecl>*, jule::Ptr<_1dcd8644b_Enum>*);
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dce96061_fromTypeEnum(_1dce93778_typeChecker*, jule::Ptr<_1dcd3c446_IdentTypeDecl>*, jule::Ptr<_1dcd87a46_TypeEnum>*);
inline jule::Ptr<_1dcd83bb8_Trait> _1dce96418_fromTrait(_1dce93778_typeChecker*, jule::Ptr<_1dcd3c446_IdentTypeDecl>*, jule::Ptr<_1dcd83bb8_Trait>*);
inline jule::Bool _1dce967c0_checkStructIns(_1dce93778_typeChecker*, jule::Ptr<_1dcd5e457_StructIns>*, jule::Ptr<_23ae26b42_Token>*);
inline void _1dce96a67_appendUsedStructReference(_1dce93778_typeChecker*, jule::Ptr<_1dcd5b641_Struct>*);
inline jule::Ptr<_1dcd5e457_StructIns> _1dce96e30_buildStructInstance(_1dce93778_typeChecker*, jule::Ptr<_1dcd3c446_IdentTypeDecl>*, jule::Ptr<_1dcd5b641_Struct>*);
inline jule::Ptr<_1dcd5e457_StructIns> _1dce972d7_fromStruct(_1dce93778_typeChecker*, jule::Ptr<_1dcd3c446_IdentTypeDecl>*, jule::Ptr<_1dcd5b641_Struct>*);
inline jule::Trait<_1dce81ec5_Kind> _1dce975e5_getDef(_1dce93778_typeChecker*, jule::Ptr<_1dcd3c446_IdentTypeDecl>*);
inline jule::Trait<_1dce81ec5_Kind> _1dce97903_buildIdent(_1dce93778_typeChecker*, jule::Ptr<_1dcd3c446_IdentTypeDecl>);
inline jule::Trait<_1dce81ec5_Kind> _1dce97c11_buildSubIdent(_1dce93778_typeChecker*, jule::Ptr<_1dcd3c732_SubIdentTypeDecl>);
inline jule::Ptr<_1dce8d3dd_Sptr> _1dce9801e_buildSptrFromType(_1dce93778_typeChecker*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Ptr<_1dce8d3dd_Sptr> _1dce9832c_buildSptr(_1dce93778_typeChecker*, jule::Ptr<_1dcd3cd92_SptrTypeDecl>);
inline jule::Ptr<_1dce91952_Ptr> _1dce9863a_buildPtrFromType(_1dce93778_typeChecker*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Ptr<_1dce91952_Ptr> _1dce98948_buildPtr(_1dce93778_typeChecker*, jule::Ptr<_1dcd3d865_PtrTypeDecl>);
inline jule::Ptr<_1dce8dd4a_Slc> _1dce98c56_buildSlc(_1dce93778_typeChecker*, jule::Ptr<_1dcd3d28d_SlcTypeDecl>);
inline jule::Ptr<_1dce90ee5_Arr> _1dce99064_buildArr(_1dce93778_typeChecker*, jule::Ptr<_1dcd3e03b_ArrTypeDecl>);
inline jule::Ptr<_1dce90401_Map> _1dce99372_buildMap(_1dce93778_typeChecker*, jule::Ptr<_1dcd3e745_MapTypeDecl>);
inline jule::Ptr<_1dce8e950_Tuple> _1dce99680_buildTuple(_1dce93778_typeChecker*, jule::Ptr<_1dcd3d579_TupleTypeDecl>);
inline jule::Bool _1dce9998d_checkFnTypes(_1dce93778_typeChecker*, jule::Ptr<_1dcd74648_FnIns>*);
inline jule::Ptr<_1dcd74648_FnIns> _1dce99c9b_buildFn(_1dce93778_typeChecker*, jule::Ptr<_1dcd4d4ac_FnDecl>);
inline jule::Trait<_1dce81ec5_Kind> _1dce9a0a9_buildByNamespace(_1dce93778_typeChecker*, jule::Ptr<_1dcd3caa6_NamespaceTypeDecl>);
inline jule::Ptr<_1dce82437_TypeKind> _1dce9a3b7_build(_1dce93778_typeChecker*, jule::Any*);
inline jule::Ptr<_1dce82437_TypeKind> _1dce9a6c5_checkDecl(_1dce93778_typeChecker*, jule::Ptr<_1dcd3bd80_TypeDecl>*);
inline jule::Bool static__1dce9b0aa_prim(jule::Str*, jule::Ptr<_1dce89b8c_Prim>);
inline jule::Bool static__1dce9b3eb_exist(jule::Str*, jule::Ptr<_1dce82437_TypeKind>*);
inline void _1de4157ed_stop(_1de4151b0_scopeParser*);
inline jule::Bool _1de415a62_stopped(_1de4151b0_scopeParser*);
inline jule::Bool _1de415cc6_finished(_1de4151b0_scopeParser*);
inline jule::Bool _1de41603a_isLastSt(_1de4151b0_scopeParser*);
inline void _1de416359_pushErr(_1de4151b0_scopeParser*, jule::Ptr<_23ae26b42_Token>, jule::Str);
inline void _1de416678_pushSuggestion(_1de4151b0_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1de4168ed_insertAsNext(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1de414885_stmt> _1de416b62_next(_1de4151b0_scopeParser*);
inline jule::Ptr<_1dcd4b9b6_ScopeTree> _1de417019_buildScope(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dcd4e48b_VarDecl> _1de417327_buildVarSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd4e843_RetSt> _1de417635_buildRetSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd4eea3_Iter> _1de417943_buildWhileNextIter(_1de4151b0_scopeParser*, jule::Ptr<_1de414885_stmt>*);
inline jule::Ptr<_1dcd50778_WhileKind> _1de417c51_buildWhileIterKind(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _1de41805e_getRangeKindKeysTokens(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd4e48b_VarDecl> _1de41836c_buildRangeKindKey(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Slice<jule::Ptr<_1dcd4e48b_VarDecl>> _1de41867a_buildRangeKindKeys(_1de4151b0_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>>*);
inline void _1de4189bb_setupRangeKindKeysPlain(_1de4151b0_scopeParser*, jule::Ptr<_1dcd51119_RangeKind>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de418d1d_setupRangeKindKeysExplicit(_1de4151b0_scopeParser*, jule::Ptr<_1dcd51119_RangeKind>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de41914d_setupRangeKindKeys(_1de4151b0_scopeParser*, jule::Ptr<_1dcd51119_RangeKind>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd51119_RangeKind> _1de41959e_buildRangeIterKind(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Any _1de419956_buildCommonIterKind(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Ptr<_1dcd4eea3_Iter> _1de419c64_buildCommonIter(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd4eea3_Iter> _1de41a072_buildIterSt(_1de4151b0_scopeParser*, jule::Ptr<_1de414885_stmt>*);
inline jule::Ptr<_1dcd514c1_BreakSt> _1de41a380_buildBreakSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd51878_ContSt> _1de41a68d_buildContSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd51ceb_If> _1de41a99b_buildIf(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd521a3_Else> _1de41aca9_buildElse(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd52626_Conditional> _1de41b0b7_buildIfElseChain(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd4100a_Expr> _1de41b3c5_buildCoCallSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd49585_GotoSt> _1de41b6d3_buildGotoSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd49871_FallSt> _1de41b9e1_buildFallSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd52cec_TypeAliasDecl> _1de41bcee_buildTypeAliasSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de41c261_pushCaseExpr(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>, jule::Ptr<_23ae26b42_Token>, jule::Bool, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>*);
inline jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _1de41c6b2_buildCaseExprs(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Ptr<_23ae26b42_Token>*, jule::Bool);
inline jule::Ptr<_1dcd4b9b6_ScopeTree> _1de41c9c0_buildCaseScope(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline __jule_tuple_x_1dcd53270_Case__jule_tuple_bool _1de41cd77_buildCase(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Bool);
inline __jule_tuple_sx_1dcd53270_Case__jule_tuple_x_1dcd521a3_Else _1de41d22e_buildCases(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>, jule::Bool);
inline jule::Ptr<_1dcd53946_MatchCase> _1de41d53c_buildMatchCase(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd4b9b6_ScopeTree> _1de41d84a_buildScopeSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd491cd_LabelSt> _1de41db58_buildLabelSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline __jule_tuple__1dcd4b17a_StmtData__jule_tuple_bool _1de41de66_buildIdSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1de42ceca_assignInfo> _1de41e274_buildAssignInfo(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd49e7b_AssignLeft> _1de41e582_buildAssignL(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Slice<jule::Ptr<_1dcd49e7b_AssignLeft>> _1de41e890_buildAssignLs(_1de4151b0_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>>*);
inline __jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool _1de41eb9d_buildPlainAssign(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline __jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool _1de41eeab_buildDeclAssign(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline __jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool _1de4202b9_buildAssignSt(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd4189b_UseExpr> _1de4205c7_buildUseExpr(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Any _1de4208d5_buildSt(_1de4151b0_scopeParser*, jule::Ptr<_1de414885_stmt>*);
inline void _1de420c04_build(_1de4151b0_scopeParser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Ptr<_1dcd4b9b6_ScopeTree>*);
inline void _1de421e25_pushErr(_1de421694_exprBuilder*, jule::Ptr<_23ae26b42_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1de422244_pushSuggestion(_1de421694_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1dcd41b87_TupleExpr> _1de422552_buildTuple(_1de421694_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>>*);
inline jule::Ptr<_1dcd4203e_LitExpr> _1de422860_buildLit(_1de421694_exprBuilder*, jule::Ptr<_23ae26b42_Token>);
inline jule::Any _1de422e7b_buildSingle(_1de421694_exprBuilder*, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dcd42b00_IdentExpr> _1de423289_buildBindIdent(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd43309_UnaryExpr> _1de423597_buildUnary(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd44393_SubIdentExpr> _1de4238a5_buildObjSubIdent(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd43e20_NsSelectionExpr> _1de423bb3_buildNsSubIdent(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de423ec1_buildType(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Any _1de4242ce_buildSubIdent(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd436b1_VariadicExpr> _1de4245dc_buildVariadic(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Any _1de4248ea_buildOpRight(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd412e6_RangeExpr> _1de424c2a_buildBetweenParentheses(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd43a68_CastExpr> _1de425049_tryBuildCast(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de425412_pushArg(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>, jule::Ptr<_23ae26b42_Token>);
inline jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _1de425720_buildArgs(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd44e21_FnCallExpr> _1de425e7e_buildFnCall(_1de421694_exprBuilder*, jule::Ptr<_23ae26b42_Token>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Any _1de42628c_buildParenthesesRange(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd4267c_UnsafeExpr> _1de42659a_buildUnsafeExpr(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd4d4ac_FnDecl> _1de4268a8_buildAnonFn(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Any _1de426bb6_buildUnsafe(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de42707e_pushRangeLitPart(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>, jule::Ptr<_23ae26b42_Token>, jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _1de4273ae_getBraceRangeLitExprParts(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd458a0_FieldExprPair> _1de4276cd_buildFieldExprPair(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd4100a_Expr> _1de4279db_buildStructLitExpr(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _1de427ce9_buildStructLitExprs(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd46175_StructLit> _1de428129_buildTypedStructLiteral(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd4100a_Expr> _1de428448_buildBraceLitPart(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd465e8_BraceLit> _1de428756_buildBraceLit(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Any _1de428a64_buildBraceRange(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _1de428d72_getEnumerableParts(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd4764e_SliceExpr> _1de429180_buildSlice(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd47eac_IndexingExpr> _1de4295d1_buildIndexing(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>, jule::Slice<jule::Ptr<_23ae26b42_Token>>, jule::Ptr<_23ae26b42_Token>);
inline jule::Ptr<_1dcd485b7_SlicingExpr> _1de429b75_buildSlicing(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_23ae26b42_Token>);
inline jule::Any _1de429e83_buildBracketRange(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Any _1de42a291_buildData(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Any _1de42a648_buildBinop(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::I64);
inline jule::Any _1de42a956_build(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Any _1de42ac64_buildKind(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd4100a_Expr> _1de42b072_buildFromTokens(_1de421694_exprBuilder*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline void _1de431bb0_stop(_1de4318c4_parser*);
inline jule::Bool _1de431e24_stopped(_1de4318c4_parser*);
inline void _1de4322dc_pushErr(_1de4318c4_parser*, jule::Ptr<_23ae26b42_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1de43260b_pushSuggestion(_1de4318c4_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1dcd4100a_Expr> _1de432919_buildExpr(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd09369_Directive> _1de432c27_buildDirective(_1de4318c4_parser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline void _1de432e9c_pushDirective(_1de4318c4_parser*, jule::Ptr<_1dcd09369_Directive>);
inline jule::Ptr<_1dcd4b9b6_ScopeTree> _1de433354_buildScope(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Ptr<_23ae26b42_Token>);
inline __jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool _1de4337a5__buildType(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool _1de433c06_buildType(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1dcd52cec_TypeAliasDecl> _1de434014_buildTypeAliasDecl(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de434333_buildVarTypeAndExpr(jule::Ptr<_1de4318c4_parser>, jule::Ptr<_1dcd4e48b_VarDecl>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de434652_buildVarCommon(jule::Ptr<_1de4318c4_parser>, jule::Ptr<_1dcd4e48b_VarDecl>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline void _1de434a1a_buildVarBegin(_1de4318c4_parser*, jule::Ptr<_1dcd4e48b_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd4e48b_VarDecl> _1de434d28_buildVar(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd48d26_GenericDecl> _1de435136_buildGeneric(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> _1de4354dd_buildGenerics(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Ptr<_23ae26b42_Token>*);
inline jule::Ptr<_1dcd4c18c_ParamDecl> _1de4357eb_buildSelfParam(_1de4318c4_parser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline void _1de435bb4_paramTypeBegin(_1de4318c4_parser*, jule::Ptr<_1dcd4c18c_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de435ed3_buildParamType(jule::Ptr<_1de4318c4_parser>, jule::Ptr<_1dcd4c18c_ParamDecl>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de436302_buildParamBody(jule::Ptr<_1de4318c4_parser>, jule::Ptr<_1dcd4c18c_ParamDecl>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd4c18c_ParamDecl> _1de436610_buildParam(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline void _1de436885_checkParams(_1de4318c4_parser*, jule::Slice<jule::Ptr<_1dcd4c18c_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1dcd4c18c_ParamDecl>> _1de436c3c_buildParams(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Bool);
inline __jule_tuple_x_1dcd3eaec_RetTypeDecl__jule_tuple_bool _1de4370e4_buildMultiRetType(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::I64*);
inline __jule_tuple_x_1dcd3eaec_RetTypeDecl__jule_tuple_bool _1de43749b_buildRetType(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::I64*);
inline jule::Ptr<_1dcd4d4ac_FnDecl> _1de4378ec_buildFnPrototype(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1dcd4d4ac_FnDecl> _1de437d4d_buildFn(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_23ae26b42_Token>> _1de43815b_getUseDeclSelectors(_1de4318c4_parser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline void _1de43847a_buildBindUseDecl(_1de4318c4_parser*, jule::Ptr<_1dcd541d8_UseDecl>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de438799_buildStdUseDecl(_1de4318c4_parser*, jule::Ptr<_1dcd541d8_UseDecl>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline void _1de438ab8_buildIdentUseDecl(_1de4318c4_parser*, jule::Ptr<_1dcd541d8_UseDecl>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline void _1de438dd7_parseUseDecl(_1de4318c4_parser*, jule::Ptr<_1dcd541d8_UseDecl>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd541d8_UseDecl> _1de43928e_buildUseDecl(_1de4318c4_parser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>, jule::Bool);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de439646_buildTypeEnumItemKind(jule::Ptr<_1de4318c4_parser>, jule::I64*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Slice<jule::Ptr<_1dcd55959_TypeEnumItemDecl>> _1de439954_buildTypeEnumItems(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd56064_TypeEnumDecl> _1de439c62_buildTypeEnumDecl(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd4100a_Expr> _1de43a119_buildEnumItemExpr(jule::Ptr<_1de4318c4_parser>, jule::I64*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Slice<jule::Ptr<_1dcd5465b_EnumItemDecl>> _1de43a427_buildEnumItems(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd55184_EnumDecl> _1de43a735_buildEnumDecl(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Any _1de43aa43_buildNodeEnumDecl(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd562c8_FieldDecl> _1de43ad51_buildField(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Slice<jule::Ptr<_1dcd562c8_FieldDecl>> _1de43b15e_buildStructDeclFields(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd56b25_StructDecl> _1de43b46c_buildStructDecl(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de43b6e2_checkMethodReceiver(_1de4318c4_parser*, jule::Ptr<_1dcd4d4ac_FnDecl>*);
inline void _1de43ba11_buildTraitBody(jule::Ptr<_1de4318c4_parser>, jule::Ptr<_1dcd572eb_TraitDecl>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd572eb_TraitDecl> _1de43bd1e_buildTraitDecl(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd4d4ac_FnDecl> _1de43c12c_buildBindFn(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd4e48b_VarDecl> _1de43c43a_buildBindVar(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd56b25_StructDecl> _1de43c748_buildBindStruct(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd52cec_TypeAliasDecl> _1de43ca56_buildBindTypeAlias(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Ptr<_1dcd541d8_UseDecl> _1de43cd64_buildBindUse(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Any _1de43d172_buildBind(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd4d4ac_FnDecl> _1de43d480_getMethod(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de43d79e_parseImplBody(jule::Ptr<_1de4318c4_parser>, jule::Ptr<_1dcd57906_Impl>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd57906_Impl> _1de43daac_buildImpl(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Any _1de43ddba_buildNodeData(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de43e140_applyFnMeta(_1de4318c4_parser*, jule::Ptr<_1dcd4d4ac_FnDecl>*);
inline void _1de43e3b5_applyMeta(_1de4318c4_parser*, _1dcd08e6d_Node*);
inline void _1de43e63a_pushUseDecl(jule::Ptr<_1de4318c4_parser>, jule::Ptr<_1dcd541d8_UseDecl>*);
inline jule::Bool _1de43e948_pushMetaNodes(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline _1dcd08e6d_Node _1de43ec56_parseNode(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de43eecb_appendNode(jule::Ptr<_1de4318c4_parser>, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de44043d_removeRange(_1de4318c4_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Slice<jule::I64>*);
inline void _1de440806_pushWrongOrderCloseErr(_1de4318c4_parser*, jule::Ptr<_23ae26b42_Token>*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Slice<jule::I64>*);
inline void _1de440c68_pushRangeClose(_1de4318c4_parser*, jule::Ptr<_23ae26b42_Token>, jule::Str, jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Slice<jule::I64>*);
inline void _1de440edd_checkRanges(_1de4318c4_parser*, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline void _1de441263_parse(jule::Ptr<_1de4318c4_parser>, jule::Ptr<_23ae2becc_File>*);
inline void _1de442b6b_pushErr(_1de4425e9_typeBuilder*, jule::Ptr<_23ae26b42_Token>, jule::Str);
inline void _1de442e8a_pushSuggestion(_1de4425e9_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de4431ee_buildNamespace(_1de4425e9_typeBuilder*);
inline jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _1de443463_buildGenerics(_1de4425e9_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _1de4436c7_identGenerics(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de44393b_buildIdent(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de443ba0_buildCppLink(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de443e14_buildFn(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de444178_buildPtr(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de4443dc_buildSptr(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de444651_buildOp(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de4448b5_buildSlc(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de444b29_buildArr(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de444d8d_buildMap(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de445102_buildEnumerable(_1de4425e9_typeBuilder*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de445366_step(_1de4425e9_typeBuilder*);
inline __jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool _1de4455ca_build(_1de4425e9_typeBuilder*);
inline void _20718a5d2_pushErr(_20718a0c6_directiveEval*, jule::Ptr<_23ae26b42_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _20718a989_splitOperans(_20718a0c6_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Bool _20718ac97_evalDirectiveIdent(_20718a0c6_directiveEval*, jule::Str);
inline jule::Bool _20718b0a5_evalDirectivePart(_20718a0c6_directiveEval*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Bool _20718b319_eval(_20718a0c6_directiveEval*);
inline jule::Ptr<_1de4465dc_JuleImporter> static__1de4469c7_New(_207188c73_CompileInfo);
inline jule::Slice<jule::Ptr<_1dcdcc6d4_ImportInfo>> _1de446c3b_AllPackages(_1de4465dc_JuleImporter*);
inline void _1de447148_SetModPath(_1de4465dc_JuleImporter*, jule::Str);
inline jule::Str _1de4473ac_GetModPath(_1de4465dc_JuleImporter*);
inline jule::Str _1de4476ba_ModById(_1de4465dc_JuleImporter*, jule::I64);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1de4479c8_GetImport(_1de4465dc_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log _1de447d80_ImportPackage(_1de4465dc_JuleImporter*, jule::Str, jule::Bool);
inline void _1de448105_Imported(_1de4465dc_JuleImporter*, jule::Ptr<_1dcdcc6d4_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_23aa28854_Log _1de448501_isPassBuildDirectives(_1de4465dc_JuleImporter*, jule::Ptr<_1dcd080d2_Ast>*);
inline jule::Bool _1c73d563c_isCommonOrdered(jule::Slice<jule::Ptr<_1dcd5b641_Struct>>, jule::Ptr<_1dcd5b641_Struct>);
inline jule::Bool _1c73da037_isCommonOrdered(jule::Slice<jule::Ptr<_1dce05cb2_Var>>, jule::Ptr<_1dce05cb2_Var>);
inline void _1c73d2260_orderCommon(jule::Slice<jule::Ptr<_1dcd5b641_Struct>>*);
inline void _1c73d2a9b_orderCommon(jule::Slice<jule::Ptr<_1dce05cb2_Var>>*);
inline void static__1de44be83_orderStructures(jule::Slice<jule::Ptr<_1dcd5b641_Struct>>*);
inline void static__1de44c192_orderVars(jule::Slice<jule::Ptr<_1dce05cb2_Var>>*);
inline void _1de58351a_optimizeChild(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdadc6a_Scope>*);
inline void _1de5837b2_optimizeBodyChildExceptional(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdadc6a_Scope>*);
inline void _1de583a48_optimizeBodyChild(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdadc6a_Scope>*);
inline void _1de583cbd_optimizeExprModel(jule::Ptr<_1de583086_scopeDeadCode>, jule::Any*);
inline void _1de583e99_eliminateFollowed(_1de583086_scopeDeadCode*);
inline void _1de58421e_pushGoto(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdb1795_GotoSt>);
inline void _1de584494_pushLabel(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdb14a9_Label>);
inline void _1de584719_optimizeRangeIter(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdb091a_RangeIter>);
inline void _1de58498e_optimizeWhileIter(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdb0035_WhileIter>);
inline void _1de584c14_optimizeInfIter(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdaeab2_InfIter>);
inline void _1de584e89_optimizeConditional(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdae7c6_Conditional>);
inline void _1de58520e_optimizeMatch(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdb2a82_Match>);
inline void _1de585484_optimizeAssign(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdb20c0_Assign>);
inline void _1de585709_optimizeMultiAssign(jule::Ptr<_1de583086_scopeDeadCode>, jule::Ptr<_1dcdb2477_MultiAssign>);
inline void _1de58597e_optimizeStmt(jule::Ptr<_1de583086_scopeDeadCode>, jule::Any);
inline void _1de585b5a_optimizeStmts(jule::Ptr<_1de583086_scopeDeadCode>);
inline _1de586ee1_exprDeadCode static__1de5875c9_new(jule::Ptr<_1de583086_scopeDeadCode>*);
inline void _1de58784e_binary(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd63824_BinopExprModel>);
inline void _1de587ac4_unary(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd63bcb_UnaryExprModel>);
inline void _1de587d49_structureLit(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6447e_StructLitExprModel>);
inline void _1de5880be_allocStructure(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6478c_AllocStructLitExprModel>);
inline void _1de588344_casting(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd64cdc_CastingExprModel>);
inline void _1de5885b9_args(_1de586ee1_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1de58883e_funcCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6568e_FnCallExprModel>);
inline void _1de588ab4_slice(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd65a46_SliceExprModel>);
inline void _1de588d39_array(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6876e_ArrayExprModel>);
inline void _1de5890ae_indexing(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd65eb9_IndexingExprModel>);
inline void _1de589334_anonFunc(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd66371_AnonFnExprModel>);
inline void _1de5895a9_mapExpr(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd66b9b_MapExprModel>);
inline void _1de58982e_slicing(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd671da_SlicingExprModel>);
inline void _1de589aa4_traitSub(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd67729_TraitSubIdentExprModel>);
inline void _1de589d29_structureSub(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd68010_StructSubIdentExprModel>);
inline void _1de58a09e_commonSub(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd690bb_CommonSubIdentExprModel>);
inline void _1de58a324_tuple(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd693b8_TupleExprModel>);
inline void _1de58a599_newCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6a386_BuiltinNewCallExprModel>);
inline void _1de58a81e_outCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd69792_BuiltinOutCallExprModel>);
inline void _1de58aa94_outlnCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd69b7c_BuiltinOutlnCallExprModel>);
inline void _1de58ad19_panicCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6a771_BuiltinPanicCallExprModel>);
inline void _1de58b08e_assertCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6ac27_BuiltinAssertCallExprModel>);
inline void _1de58b314_errorCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel>);
inline void _1de58b589_makeCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>);
inline void _1de58b80e_appendCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6b5b8_BuiltinAppendCallExprModel>);
inline void _1de58ba84_lenCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6b8d7_BuiltinLenCallExprModel>);
inline void _1de58bd09_capCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6bc06_BuiltinCapCallExprModel>);
inline void _1de58c07e_cloneCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd69e9b_BuiltinCloneCallExprModel>);
inline void _1de58c304_deleteCall(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel>);
inline void _1de58c579_sizeof(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6ce05_SizeofExprModel>);
inline void _1de58c7ee_alignof(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6d1e1_AlignofExprModel>);
inline void _1de58ca74_integratedToStr(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6d7da_IntegratedToStrExprModel>);
inline void _1de58cce9_free(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6de8e_FreeExprModel>);
inline void _1de58d06e_backendEmit(_1de586ee1_exprDeadCode*, jule::Ptr<_1dcd6dba3_BackendEmitExprModel>);
inline void _1de58d2e4_optimize(_1de586ee1_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1dd05992c_scopeOptimizer> static__1dd059d8e_new(jule::Ptr<_1dcdadc6a_Scope>);
inline void _1dd05a114_setCurrentStmt(_1dd05992c_scopeOptimizer*, jule::Any);
inline void _1dd05a389_optimizeData(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dce54cbc_Data>);
inline void _1dd05a60e_optimizeVar(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dce05cb2_Var>);
inline void _1dd05a884_optimizeConditional(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdae7c6_Conditional>);
inline void _1dd05ac6e_buildDefaultConstantTrueCase(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb35cc_Case>, jule::I64*, jule::Ptr<_1dcdb2a82_Match>*);
inline void _1dd05ae7d_optimizeMatch(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb2a82_Match>);
inline void _1dd05b203_optimizeRangeIter(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb091a_RangeIter>);
inline void _1dd05b478_optimizeWhileIter(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb0035_WhileIter>);
inline jule::Bool _1dd05b786_substr(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb20c0_Assign>);
inline jule::Bool _1dd05ba94_strInsert(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb20c0_Assign>);
inline jule::Bool _1dd05bda2_strAppend(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb20c0_Assign>);
inline jule::Bool _1dd05c1b0_strAssign(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb20c0_Assign>);
inline void _1dd05c435_optimizeAssign(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb20c0_Assign>);
inline void _1dd05c6aa_optimizeMultiAssign(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb2477_MultiAssign>);
inline void _1dd05c930_optimizeRet(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdb4006_RetSt>);
inline void _1dd05cba5_optimizeStmt(_1dd05992c_scopeOptimizer*, jule::Any);
inline void _1dd05ce2a_optimizeChild(_1dd05992c_scopeOptimizer*, jule::Ptr<_1dcdadc6a_Scope>);
inline void _1dd05d106_optimize(_1dd05992c_scopeOptimizer*);
inline void static__1dd060779_optimize(jule::Any*);
inline jule::Bool _1dd060a76_strCond(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd63824_BinopExprModel>);
inline void _1dd060ceb_binary(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd63824_BinopExprModel>);
inline void _1dd061071_unary(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd63bcb_UnaryExprModel>);
inline void _1dd0612e6_structureLit(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6447e_StructLitExprModel>);
inline void _1dd06156b_allocStructure(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6478c_AllocStructLitExprModel>);
inline void _1dd0617e1_casting(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd64cdc_CastingExprModel>);
inline void _1dd061a66_args(_1dd06026d_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1dd061cdb_scope(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcdadc6a_Scope>*);
inline jule::Bool _1dd06211b_optimizeSpecialFuncCalls(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6568e_FnCallExprModel>*);
inline void _1dd0623a2_funcCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6568e_FnCallExprModel>);
inline void _1dd062627_slice(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd65a46_SliceExprModel>);
inline void _1dd06289c_array(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6876e_ArrayExprModel>);
inline void _1dd062b22_indexing(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd65eb9_IndexingExprModel>);
inline void _1dd062d97_anonFunc(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd66371_AnonFnExprModel>);
inline void _1dd06311c_mapExpr(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd66b9b_MapExprModel>);
inline void _1dd063392_slicing(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd671da_SlicingExprModel>);
inline void _1dd063617_traitSub(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd67729_TraitSubIdentExprModel>);
inline void _1dd06388c_structureSub(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd68010_StructSubIdentExprModel>);
inline void _1dd063b12_commonSub(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd690bb_CommonSubIdentExprModel>);
inline void _1dd063d87_tuple(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd693b8_TupleExprModel>);
inline void _1dd06410c_newCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6a386_BuiltinNewCallExprModel>);
inline void _1dd064382_outCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd69792_BuiltinOutCallExprModel>);
inline void _1dd064607_outlnCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd69b7c_BuiltinOutlnCallExprModel>);
inline void _1dd06487c_panicCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6a771_BuiltinPanicCallExprModel>);
inline void _1dd064b02_assertCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6ac27_BuiltinAssertCallExprModel>);
inline void _1dd064d77_errorCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel>);
inline void _1dd0650ec_makeCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>);
inline void _1dd065372_appendCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6b5b8_BuiltinAppendCallExprModel>);
inline void _1dd0655e7_lenCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6b8d7_BuiltinLenCallExprModel>);
inline void _1dd06586c_capCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6bc06_BuiltinCapCallExprModel>);
inline void _1dd065ae2_cloneCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd69e9b_BuiltinCloneCallExprModel>);
inline void _1dd065d67_deleteCall(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel>);
inline void _1dd0660dc_sizeof(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6ce05_SizeofExprModel>);
inline void _1dd066362_alignof(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6d1e1_AlignofExprModel>);
inline void _1dd0665d7_integratedToStr(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6d7da_IntegratedToStrExprModel>);
inline void _1dd06685c_free(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6de8e_FreeExprModel>);
inline void _1dd066ad2_backendEmit(_1dd06026d_exprOptimizer*, jule::Ptr<_1dcd6dba3_BackendEmitExprModel>);
inline void _1dd066cad_do(_1dd06026d_exprOptimizer*);
inline jule::Ptr<_1de58e0a3_Optimizer> static__1de58e4d2_New(jule::Ptr<_1de448d4d_IR>*);
inline void _1de58e757_optimizeGlobal(_1de58e0a3_Optimizer*, jule::Ptr<_1dce05cb2_Var>*);
inline void _1de58e9cc_optimizeFunction(_1de58e0a3_Optimizer*, jule::Ptr<_1dcd71997_Fn>*);
inline void _1de58ec52_optimizeStruct(_1de58e0a3_Optimizer*, jule::Ptr<_1dcd5b641_Struct>*);
inline void _1de58eec7_optimizeGlobals(_1de58e0a3_Optimizer*, jule::Ptr<_1dcdd031e_Package>*);
inline void _1de59024c_optimizeFunctions(_1de58e0a3_Optimizer*, jule::Ptr<_1dcdd031e_Package>*);
inline void _1de5904c2_optimizeStructs(_1de58e0a3_Optimizer*, jule::Ptr<_1dcdd031e_Package>*);
inline void _1de590747_optimizePackage(_1de58e0a3_Optimizer*, jule::Ptr<_1dcdd031e_Package>*);
inline void _1de590923_Optimize(_1de58e0a3_Optimizer*);
inline void static__1de5b05be_Reset(void);
inline void static__1de591429_Print(jule::Str, jule::Str);
inline void static__1de5b2e2e_LogFlat(_23aa28854_Log*);
inline void static__1de5b313d_LogError(_23aa28854_Log*);
inline void static__1de5b334c_Log(_23aa28854_Log*);
inline void static__1de5b355b_PrintLogs(jule::Slice<_23aa28854_Log>*);
inline _1c4482b0a_Time static__1c4482ea1_Unix(jule::U64);
inline _1c4482b0a_Time static__1c448319e_Now(void);
inline _1c4482467_AbsTime _1c4484766_Abs(_1c4482b0a_Time*);
inline jule::Ptr<_23b4336d1_scopeCoder> static__23b433cca_new(jule::Ptr<_1c448bb8b_ObjectCoder>*);
inline void _1d439e792_iterHead(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb091a_RangeIter>*, jule::Bool*, jule::Str*);
inline void _23b434418_rangeIndexIter(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb091a_RangeIter>*);
inline void _23b43468d_rangeHashmapIter(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb091a_RangeIter>*);
inline void _23b434913_ifCase(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdae166_If>);
inline void _23b434b88_conditional(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdae7c6_Conditional>);
inline void _23b434e0d_infIter(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdaeab2_InfIter>);
inline void _23b435183_whileIter(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb0035_WhileIter>);
inline void _23b435408_rangeIter(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb091a_RangeIter>);
inline void _23b43567d_cont(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb0d16_ContSt>);
inline void _23b435903_label(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb14a9_Label>);
inline void _23b435b78_gotoSt(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb1795_GotoSt>);
inline void _23b435ded_postfix(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb1b4c_Postfix>);
inline void _23b436173_assign(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb20c0_Assign>);
inline void _23b4363e8_mapLookupAssign(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb2477_MultiAssign>*);
inline void _23b43666d_multiAssignTup(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb2477_MultiAssign>*);
inline void _23b4368e3_multiAssignFn(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb2477_MultiAssign>*);
inline void _23b436b68_multiAssign(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb2477_MultiAssign>);
inline jule::Fn<void(void)> _23b436e76_matchExpr(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb2a82_Match>);
inline void _23b437295_case(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb2a82_Match>, jule::Ptr<_1dcdb35cc_Case>);
inline void _23b43751a_matchSt(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb2a82_Match>);
inline void _23b437790_fallSt(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb3ba4_FallSt>);
inline void _23b437a15_breakSt(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb11bd_BreakSt>);
inline void _23b437c8a_setResult(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb4006_RetSt>);
inline void _23b438010_retSt(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdb4006_RetSt>);
inline void _23b438285_var(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dce05cb2_Var>);
inline void _23b43850a_strAppend(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dd056a6c_StrAppendExprModel>);
inline void _23b438780_st(jule::Ptr<_23b4336d1_scopeCoder>, jule::Any);
inline void _23b438a05_scopeStmts(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdadc6a_Scope>*);
inline void _23b438c7a_scope(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcdadc6a_Scope>);
inline void _23b439000_funcScope(jule::Ptr<_23b4336d1_scopeCoder>, jule::Ptr<_1dcd74648_FnIns>);
inline jule::Ptr<_23b43bbc3_exprCoder> static__23b43c07a_new(jule::Ptr<_1c448bb8b_ObjectCoder>*);
inline void _23b43c300_string(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_24a233549_Const>*);
inline void _23b43c575_boolean(jule::Ptr<_23b43bbc3_exprCoder>, jule::Bool);
inline void _23b43c751_nilLit(jule::Ptr<_23b43bbc3_exprCoder>);
inline jule::Bool _23b43ca5e_ftoaSpecialCases(jule::Ptr<_23b43bbc3_exprCoder>, jule::F64*);
inline void _23b43ccd4_float32(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_24a233549_Const>*);
inline void _23b43d059_float64(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_24a233549_Const>*);
inline void _23b43d2ce_constant(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_24a233549_Const>);
inline void _23b43d697_divByZeroBinary(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_23ae26b42_Token>*, jule::Ptr<_1dcd6335c_OperandExprModel>*, jule::Ptr<_1dcd6335c_OperandExprModel>*);
inline void _23b43d91c_unsafeBinary(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd63824_BinopExprModel>);
inline void _23b43db92_binary(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd63824_BinopExprModel>);
inline void _23b43de17_var(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dce05cb2_Var>);
inline void _23b43e18c_structureIns(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd5e457_StructIns>);
inline void _23b43e412_unary(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd63bcb_UnaryExprModel>);
inline void _23b43e687_structureLit(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6447e_StructLitExprModel>);
inline void _23b43e90c_allocStructure(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6478c_AllocStructLitExprModel>);
inline void _23b43eb82_possibleRefExpr(jule::Ptr<_23b43bbc3_exprCoder>, jule::Any);
inline void _23b44004a_castTraitFromTrait(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd64cdc_CastingExprModel>*, jule::Ptr<_1dcd83bb8_Trait>, jule::Ptr<_1dcd83bb8_Trait>);
inline void _23b4402c0_casting(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd64cdc_CastingExprModel>);
inline void _23b440545_models(jule::Ptr<_23b43bbc3_exprCoder>, jule::Slice<jule::Any>);
inline void _23b4407ba_args(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6568e_FnCallExprModel>*);
inline void _23b440a40_modelForCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Any);
inline void _23b440cb5_pushCallInf(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6568e_FnCallExprModel>*);
inline jule::Bool _23b4410c3_isWrapped(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6568e_FnCallExprModel>*);
inline void _23b441348_pureFuncCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6568e_FnCallExprModel>*);
inline void _23b4415bd_coFuncCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6568e_FnCallExprModel>*);
inline void _23b4418dc_writeUseExpr(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd74648_FnIns>*, jule::Ptr<_1dce54cbc_Data>);
inline void _23b441b62_funcCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6568e_FnCallExprModel>);
inline void _23b441dd7_slice(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd65a46_SliceExprModel>);
inline void _23b44215c_indexing(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd65eb9_IndexingExprModel>);
inline void _23b4423d2_unsafeIndexing(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dd0571dd_UnsafeIndexingExprModel>);
inline void _23b442657_anonFunc(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd66371_AnonFnExprModel>);
inline void _23b4428cc_mapExpr(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd66b9b_MapExprModel>);
inline void _23b442b52_slicing(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd671da_SlicingExprModel>);
inline void _23b442dc7_traitSub(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd67729_TraitSubIdentExprModel>);
inline void _23b44314c_structureSub(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd68010_StructSubIdentExprModel>);
inline void _23b4433c2_commonIdent(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd68a5a_CommonIdentExprModel>);
inline void _23b443647_commonSub(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd690bb_CommonSubIdentExprModel>);
inline void _23b4438bc_array(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6876e_ArrayExprModel>);
inline void _23b443b42_funcInsCommon(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd74648_FnIns>);
inline void _23b443db7_funcIns(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd74648_FnIns>);
inline void _23b44413c_tuple(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd693b8_TupleExprModel>);
inline void _23b4443b2_newCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6a386_BuiltinNewCallExprModel>);
inline void _23b444637_outCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd69792_BuiltinOutCallExprModel>);
inline void _23b4448ac_outlnCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd69b7c_BuiltinOutlnCallExprModel>);
inline void _23b444b32_panicCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6a771_BuiltinPanicCallExprModel>);
inline void _23b444da7_assertCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6ac27_BuiltinAssertCallExprModel>);
inline void _23b44512c_errorCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel>);
inline void _23b4453a2_copyCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6c71d_BuiltinCopyCallExprModel>);
inline void _23b445627_lenCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6b8d7_BuiltinLenCallExprModel>);
inline void _23b44589c_capCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6bc06_BuiltinCapCallExprModel>);
inline void _23b445b22_deleteCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel>);
inline void _23b445d97_makeCallSlice(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>*);
inline void _23b44611c_makeCallStr(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>*);
inline void _23b446392_makeCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>);
inline void _23b446617_pushToSlice(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dd057573_PushToSliceExprModel>);
inline void _23b44688c_appendToSlice(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dd05792a_AppendToSliceExprModel>);
inline void _23b446b12_appendCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6b5b8_BuiltinAppendCallExprModel>);
inline void _23b446d87_cloneCall(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd69e9b_BuiltinCloneCallExprModel>);
inline void _23b44710c_sizeof(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6ce05_SizeofExprModel>);
inline void _23b447382_alignof(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6d1e1_AlignofExprModel>);
inline jule::Str _23b447690_runeLit(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6d4cc_RuneExprModel>);
inline void _23b447915_structureStatic(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd683a6_StructStaticIdentExprModel>);
inline void _23b447b8a_integratedToStr(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6d7da_IntegratedToStrExprModel>);
inline void _23b447e10_backendEmit(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6dba3_BackendEmitExprModel>);
inline void _23b448185_free(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dcd6de8e_FreeExprModel>);
inline void _23b44840a_mutSlicing(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dd057e69_MutSlicingExprModel>);
inline void _23b448680_strInsertBegin(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dd058453_StrInsertBeginExprModel>);
inline void _23b448905_strComp(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dd0566a4_StrCompExprModel>);
inline void _23b448b9c_inlineStdInternalNosafeStobs(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dd0586ea_InlineStdInternalNosafeStobs>);
inline void _23b448e33_model(jule::Ptr<_23b43bbc3_exprCoder>, jule::Any);
inline void _23b4491a8_initExpr(jule::Ptr<_23b43bbc3_exprCoder>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_23b44b991_deriveCoder> static__23b44bd37_new(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline jule::Str _23b44c145_cloneFuncDecl(_23b44b991_deriveCoder*, jule::Ptr<_1dcd5b641_Struct>*);
inline jule::Str _23b44c453_cloneFuncDef(_23b44b991_deriveCoder*, jule::Ptr<_1dcd5b641_Struct>*);
inline jule::Ptr<_23b44d377_TestCoder> static__23b44d7a6_New(jule::Ptr<_1c448bb8b_ObjectCoder>*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _23b44da1a_findTestingPackage(jule::Ptr<_23b44d377_TestCoder>);
inline void _23b44dc90_appendTest(jule::Ptr<_23b44d377_TestCoder>, jule::Ptr<_1dcd74648_FnIns>);
inline void _23b44e015_appendPackageTests(jule::Ptr<_23b44d377_TestCoder>, jule::Ptr<_1dcdd031e_Package>*);
inline jule::Bool _23b44e279_readyTestingPackage(jule::Ptr<_23b44d377_TestCoder>);
inline void _23b44e455_callTmReset(jule::Ptr<_23b44d377_TestCoder>);
inline void _23b44e631_callTmFailed(jule::Ptr<_23b44d377_TestCoder>);
inline void _23b44e80c_callTmSkipped(jule::Ptr<_23b44d377_TestCoder>);
inline void _23b44e9d8_Serialize(jule::Ptr<_23b44d377_TestCoder>);
inline jule::Str static__23b450e4b_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__23b451336_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__23b4515cd_func(jule::Ptr<_1dcd71997_Fn>*);
inline jule::Str static__23b451875_funcIns(jule::Ptr<_1dcd74648_FnIns>*);
inline jule::Str static__23b451b1c_traitDecl(jule::Ptr<_1dcd83bb8_Trait>);
inline jule::Str static__23b451db4_param(jule::Ptr<_1dcd7015a_Param>*);
inline jule::Str static__23b45215b_structure(jule::Ptr<_1dcd5b641_Struct>*);
inline jule::Str static__23b452403_structureIns(jule::Ptr<_1dcd5e457_StructIns>*);
inline jule::Str static__23b45269a_field(jule::Ptr<_1dcd58a6c_Field>*);
inline jule::Str static__23b452942_var(jule::Ptr<_1dce05cb2_Var>);
inline jule::Str static__23b452bd9_iterBegin(jule::Uintptr);
inline jule::Str static__23b452e81_iterEnd(jule::Uintptr);
inline jule::Str static__23b453228_iterNext(jule::Uintptr);
inline jule::Str static__23b4534c0_label(jule::Str*);
inline jule::Str static__23b453767_matchEnd(jule::Uintptr);
inline jule::Str static__23b453a0e_caseBegin(jule::Uintptr);
inline jule::Str _1c449a75a_Str(_1c449a4b3_customType*);
inline jule::Bool _1c449aa68_Equal(jule::Ptr<_1c449a4b3_customType>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1c449ae64_typeCoder> static__1c449b4a3_new(jule::Ptr<_1c448bb8b_ObjectCoder>*);
inline jule::Str _1c449b7b1_toType(_1c449ae64_typeCoder*, jule::Str);
inline jule::Str _1c449babe_prim(_1c449ae64_typeCoder*, jule::Ptr<_1dce89b8c_Prim>);
inline jule::Str _1c449bdcc_tuple(_1c449ae64_typeCoder*, jule::Ptr<_1dce8e950_Tuple>);
inline jule::Str _1c449c1da_asSptr(_1c449ae64_typeCoder*, jule::Str);
inline jule::Str _1c449c4e8_asPtr(_1c449ae64_typeCoder*, jule::Str);
inline jule::Str _1c449c806_sptr(_1c449ae64_typeCoder*, jule::Ptr<_1dce8d3dd_Sptr>);
inline jule::Str _1c449cb14_ptr(_1c449ae64_typeCoder*, jule::Ptr<_1dce91952_Ptr>);
inline jule::Str _1c449ce22_enumDecl(_1c449ae64_typeCoder*, jule::Ptr<_1dcd8644b_Enum>);
inline jule::Str _1c449d230_typeEnumDecl(_1c449ae64_typeCoder*, jule::Ptr<_1dcd87a46_TypeEnum>);
inline jule::Str _1c449d53d_asSlice(_1c449ae64_typeCoder*, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Str _1c449d84b_slice(_1c449ae64_typeCoder*, jule::Ptr<_1dce8dd4a_Slc>);
inline jule::Str _1c449db59_mapType(_1c449ae64_typeCoder*, jule::Ptr<_1dce90401_Map>);
inline jule::Str _1c449de67_traitIdent(_1c449ae64_typeCoder*, jule::Str);
inline jule::Str _1c449e275_traitDecl(_1c449ae64_typeCoder*, jule::Ptr<_1dcd83bb8_Trait>);
inline jule::Str _1c449e583_structure(_1c449ae64_typeCoder*, jule::Ptr<_1dcd5b641_Struct>);
inline jule::Str _1c449e891_structureIns(_1c449ae64_typeCoder*, jule::Ptr<_1dcd5e457_StructIns>);
inline jule::Str _1c449eb9e_array(_1c449ae64_typeCoder*, jule::Ptr<_1dce90ee5_Arr>);
inline jule::Str _1c44a02ba_paramIns(_1c449ae64_typeCoder*, jule::Ptr<_1dcd73779_ParamIns>*);
inline void _1c44a08e7_funcInsResult(_1c449ae64_typeCoder*, jule::Str*, jule::Ptr<_1dcd74648_FnIns>*);
inline jule::Str _1c44a0c05_anonFunc(_1c449ae64_typeCoder*, jule::Ptr<_1dcd74648_FnIns>);
inline jule::Str _1c44a1013_func(_1c449ae64_typeCoder*, jule::Ptr<_1dcd74648_FnIns>);
inline jule::Str _1c44a1321_kind(_1c449ae64_typeCoder*, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Ptr<_1c44a3a2c_resultCoder> static__1c44a3ee4_new(jule::Ptr<_1c449ae64_typeCoder>*);
inline void _1c44a4313_ptr(_1c44a3a2c_resultCoder*, jule::Str*, jule::Ptr<_1dce91952_Ptr>);
inline void _1c44a4632_sptr(_1c44a3a2c_resultCoder*, jule::Str*, jule::Ptr<_1dce8d3dd_Sptr>);
inline void _1c44a4951_mapType(_1c44a3a2c_resultCoder*, jule::Str*, jule::Ptr<_1dce90401_Map>);
inline void _1c44a4c70_slice(_1c44a3a2c_resultCoder*, jule::Str*, jule::Ptr<_1dce8dd4a_Slc>);
inline void _1c44a508e_arr(_1c44a3a2c_resultCoder*, jule::Str*, jule::Ptr<_1dce90ee5_Arr>);
inline void _1c44a53ad_func(_1c44a3a2c_resultCoder*, jule::Str*, jule::Ptr<_1dcd74648_FnIns>);
inline void _1c44a56cc_tup(_1c44a3a2c_resultCoder*, jule::Str*, jule::Ptr<_1dce8e950_Tuple>);
inline void _1c44a59eb_codeMut(_1c44a3a2c_resultCoder*, jule::Str*, jule::Ptr<_1dce82437_TypeKind>*);
inline void _1c44a5d1a_codeMut1(_1c44a3a2c_resultCoder*, jule::Str*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Str _1c44a60e5_code(_1c44a3a2c_resultCoder*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Str _1d43e8a83_Name(_1d43e8797_Flag*);
inline jule::Str _1d43e8bb5_What(_1d43e8797_Flag*);
inline void _1d43e8ce7_Reset(_1d43e8797_Flag*);
inline jule::I32 _1d43e8e29_Short(_1d43e8797_Flag*);
inline jule::Str _1d43ebca6_Name(_1d43ec229_Flag*);
inline jule::Str _1d43ec515_What(_1d43ec229_Flag*);
inline void _1d43ec647_Reset(_1d43ec229_Flag*);
inline jule::I32 _1d43ec779_Short(_1d43ec229_Flag*);
inline jule::Str _1d440045d_Name(_1d44008d1_Flag*);
inline jule::Str _1d4400bbc_What(_1d44008d1_Flag*);
inline void _1d4400cee_Reset(_1d44008d1_Flag*);
inline jule::I32 _1d4400e31_Short(_1d44008d1_Flag*);
inline jule::Str _1d4403b59_Name(_1d44040cc_Flag*);
inline jule::Str _1d44043b8_What(_1d44040cc_Flag*);
inline void _1d44044ea_Reset(_1d44040cc_Flag*);
inline jule::I32 _1d440462c_Short(_1d44040cc_Flag*);
inline jule::Str _1d4407311_Name(_1d4407784_Flag*);
inline jule::Str _1d4407a70_What(_1d4407784_Flag*);
inline void _1d4407ba2_Reset(_1d4407784_Flag*);
inline jule::I32 _1d4407cd4_Short(_1d4407784_Flag*);
inline jule::Ptr<_1c451002d_FlagSet> static__1c4510319_New(void);
inline jule::Trait<_1c450d5c0_CommonFlag> _1c4510759_FindFlag(_1c451002d_FlagSet*, jule::Str);
inline jule::Trait<_1c450d5c0_CommonFlag> _1c4510a67_FindFlagShort(_1c451002d_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1c45110d9_Parse(_1c451002d_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1d4407784_Flag> _1d47375a8_addFlagCommon(_1c451002d_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1d44040cc_Flag> _1d47403e6_addFlagCommon(_1c451002d_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1d47354da_AddVar(_1c451002d_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1d473d38e_AddVar(_1c451002d_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1d441a09e_parseInteger(_1c4512739_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1d4422606_parseInteger(_1c4512739_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1c4512eed_getData(_1c4512739_argParser*);
inline jule::VoidExceptional _1c4513240_processFlag(_1c4512739_argParser*, jule::Trait<_1c450d5c0_CommonFlag>*);
inline jule::VoidExceptional _1c45134b5_singleDash(_1c4512739_argParser*, jule::Str*);
inline jule::VoidExceptional _1c451373a_doubleDash(_1c4512739_argParser*, jule::Str*);
inline jule::VoidExceptional _1c4513916_tryArg(_1c4512739_argParser*);
inline jule::VoidExceptional _1c4513ae2_parse(_1c4512739_argParser*);
inline jule::Ptr<_1c448bb8b_ObjectCoder> static__1c448c065_New(jule::Ptr<_1de448d4d_IR>*, _1c448a2e9_SerializationInfo);
inline void _1c448c2da_write(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Str);
inline void _1c448c560_writeR(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Str*);
inline void _1c448c73b_addIndent(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c448c917_doneIndent(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c448cae3_indent(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline jule::I64 _1c448ce01_findAnyType(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::I64 _1c448d20e_pushAnyType(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dce82437_TypeKind>);
inline void _1c448d484_pushResultIns(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd74648_FnIns>*);
inline void _1c448d709_pushResult(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd71997_Fn>*);
inline jule::I64 _1c448dab1_findTypeOffsetS(_1c448bb8b_ObjectCoder*, jule::Ptr<_1dcd83bb8_Trait>, jule::Ptr<_1dcd5e457_StructIns>);
inline jule::I64 _1c448de68_findTypeOffset(_1c448bb8b_ObjectCoder*, jule::Ptr<_1dcd83bb8_Trait>, jule::Ptr<_1dce82437_TypeKind>);
inline void _1c448e287_pushAndWriteMaskMapper(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd83bb8_Trait>, jule::Ptr<_1dcd83bb8_Trait>);
inline void _1c448e50c_locInfo(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_23ae26b42_Token>*);
inline void _1c448e6d8_head(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c448e8b4_links(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c448eb39_prepareStructure(_1c448bb8b_ObjectCoder*, jule::Ptr<_1dcd5b641_Struct>*);
inline void _1c448ed15_prepareStructures(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c449008a_iterPackages(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Fn<void(jule::Ptr<_1dcdd031e_Package>*)>);
inline void _1c4490266_buildTraitMap(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c4490442_traitDecls(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c44906b7_structurePlainDecl(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5b641_Struct>*);
inline void _1c4490893_structurePlainDecls(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c4490b18_fieldDecl(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5d962_FieldIns>*);
inline void _1c4490d8d_structureDestructor(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c4491135_structureDeriveDefsDecls(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c4491465_structureOperatorEq(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Str*, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c4491784_structureOperatorNotEq(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Str*, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c4491b4c_structureOperator(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Str*, jule::Ptr<_1dcd74648_FnIns>*, jule::Str);
inline void _1c4491dc2_structureOperators(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c4492147_structureInsDecl(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c44923bc_structureDecl(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5b641_Struct>*);
inline void _1c4492598_structureDecls(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c4492774_structureMethodDecls(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c44929e9_paramsDecls(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>*);
inline void _1c4492d18_funcHead(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd74648_FnIns>*, jule::Bool);
inline void _1c4493137_funcDeclIns(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd74648_FnIns>*, jule::Bool);
inline void _1c4493456_funcDecl(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd71997_Fn>*, jule::Bool);
inline void _1c449381e_funcDeclTrait(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd83bb8_Trait>*, jule::Ptr<_1dcd71997_Fn>*, jule::Bool);
inline void _1c44939ea_funcDecls(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c4493d19_traitDataTypeMethods(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd83bb8_Trait>*, jule::Ptr<_1dcd83bb8_Trait>*);
inline void _1c4493ee5_traitDataTypes(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c449426a_paramIns(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd73779_ParamIns>*);
inline void _1c44944e0_paramsIns(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>*);
inline void _1c449480e_varInitExpr(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dce05cb2_Var>*, jule::Fn<void(void)>);
inline void _1c4494a84_var(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dce05cb2_Var>);
inline void _1c4494d09_funcIns(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd74648_FnIns>*);
inline void _1c449507e_func(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd71997_Fn>*);
inline void _1c449539d_funcTrait(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1c448a7b1_traitHash>*, jule::Ptr<_1dcd71997_Fn>*);
inline void _1c44956bc_traitWrapper(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd71997_Fn>*, jule::Ptr<_1c448a7b1_traitHash>*);
inline void _1c4495898_traitWrappers(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c4495bb7_traitDataMethods(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd83bb8_Trait>*, jule::Ptr<_1c448a7b1_traitHash>*);
inline void _1c4495ed6_traitData(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1c448a7b1_traitHash>*, jule::Ptr<_1dcd83bb8_Trait>*);
inline void _1c44961b2_traitDatas(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c449638d_globals(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c4496569_decls(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c44967de_structureMethods(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c4496a64_structureDeriveDefs(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c4496cd9_structureOstream(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c449705e_structureIns(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5e457_StructIns>*);
inline void _1c44972d4_structure(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcd5b641_Struct>*);
inline void _1c44974b0_structures(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c449768b_funcs(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c4497911_pushInit(jule::Ptr<_1c448bb8b_ObjectCoder>, jule::Ptr<_1dcdd031e_Package>*);
inline void _1c4497adc_initCaller(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c4497cb8_end(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c4497e94_serializeHead(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline void _1c4498170_Serialize(jule::Ptr<_1c448bb8b_ObjectCoder>);
inline jule::Ptr<_1de54c36e_ObjectDeadCode> static__1de54c803_new(jule::Ptr<_1de448d4d_IR>*);
inline jule::Bool _1c7413516_isLive(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dcd83bb8_Trait>*);
inline jule::Bool _1c7418175_isLive(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dcd74648_FnIns>*);
inline jule::Bool _1c7422569_isLive(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dcd5e457_StructIns>*);
inline jule::Bool _1c7425e63_isLive(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dce05cb2_Var>*);
inline void _1c7413868_pushLive(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dcd83bb8_Trait>);
inline void _1c7418b8c_pushLive(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dcd74648_FnIns>);
inline void _1c741eba4_pushLive(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dcd5e457_StructIns>);
inline void _1c74262b5_pushLive(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dce05cb2_Var>);
inline void _1de57e99a_setReferencesAsLive(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dcd775a2_ReferenceStack>*);
inline void _1de57ec20_inits(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dcdd031e_Package>*);
inline void _1de57ee95_collectLivePackage(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dcdd031e_Package>*);
inline void _1de580171_collectLive(jule::Ptr<_1de54c36e_ObjectDeadCode>);
inline void _1de5803e6_removeDeadGlobals(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1dce05cb2_Var>>*);
inline void _1de58066b_removeDeadFns(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1dcd71997_Fn>>*);
inline void _1de5808e1_removeDeadStructs(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1dcd5b641_Struct>>*);
inline void _1de580b66_removeDeadTraits(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Slice<jule::Ptr<_1dcd83bb8_Trait>>*);
inline void _1de580ddb_removeDeadsFile(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dce502b2_SymbolTable>*);
inline void _1de581161_removeDeadsPackage(jule::Ptr<_1de54c36e_ObjectDeadCode>, jule::Ptr<_1dcdd031e_Package>*);
inline void _1de58133c_removeDeads(jule::Ptr<_1de54c36e_ObjectDeadCode>);
inline void _1de581518_elimanate(jule::Ptr<_1de54c36e_ObjectDeadCode>);
inline __jule_tuple_x_1de448d4d_IR__jule_tuple_s_23aa28854_Log static__1de44928d_Build(jule::Str, jule::I64);
inline void _1de449733_appendStructs(_1de448d4d_IR*, jule::Ptr<_1dcdd031e_Package>*, jule::Slice<jule::Ptr<_1dcd5b641_Struct>>*);
inline jule::Slice<jule::Ptr<_1dcd5b641_Struct>> _1de449997_GetAllStructures(_1de448d4d_IR*);
inline void _1de449cb6_appendGlobals(_1de448d4d_IR*, jule::Ptr<_1dcdd031e_Package>*, jule::Slice<jule::Ptr<_1dce05cb2_Var>>*);
inline jule::Slice<jule::Ptr<_1dce05cb2_Var>> _1de44a02a_GetAllGlobals(_1de448d4d_IR*);
inline void _1de44a206_Order(_1de448d4d_IR*);
inline jule::Str _1dcd5e7ba_Str(_1dcd5e457_StructIns*);
inline jule::Bool _1dcd5eac8_Equal(jule::Ptr<_1dcd5e457_StructIns>, jule::Ptr<_1dce82437_TypeKind>);
inline jule::Bool _1dcd6004b_Same(_1dcd5e457_StructIns*, jule::Ptr<_1dcd5e457_StructIns>);
inline jule::Ptr<_1dcd71997_Fn> _1dcd60403_FindMethod(_1dcd5e457_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5d962_FieldIns> _1dcd60711_FindField(_1dcd5e457_StructIns*, jule::Str);
inline jule::Ptr<_1dce05cb2_Var> _1dcd60a1e_FindStatic(_1dcd5e457_StructIns*, jule::Str);
inline jule::Ptr<_23aab5aab_Cmd> static__23aab5eb8_New(jule::Str);
inline jule::VoidExceptional _23aab6194_Spawn(_23aab5aab_Cmd*);
inline jule::Exceptional<jule::I64> _23aab65d4_Wait(_23aab5aab_Cmd*);
inline jule::VoidExceptional _23ab0a2d7_spawn(_23aab5aab_Cmd*);
inline jule::Exceptional<jule::I64> _23ab0a727_wait(_23aab5aab_Cmd*);
inline void _239825223_Free(void*);
inline jule::Str _23984eacc_BytePtrToStr(jule::U8*);
inline jule::I64 _238993194_GetLastErrno(void);
inline jule::I64 _239863371_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _2398636b2_Stat(jule::U8*, struct stat*);
inline jule::I64 _239863a9c_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _239863ddd_Getcwd(jule::U8*, jule::U64);
inline DIR* _2398643b6_Opendir(jule::U8*);
inline struct dirent* _23986465d_Readdir(DIR*);
inline jule::I64 _239864905_Closedir(DIR*);
inline jule::I64 _239865285_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _23986552c_Rmdir(jule::U8*);
inline jule::I64 _2398657c4_Unlink(jule::U8*);
inline jule::I64 _23989036a_Read(jule::I64, void*, jule::U64);
inline jule::I64 _2398906de_Close(jule::I64);
inline jule::I64 _239890ac9_Write(jule::I64, void*, jule::U64);
inline void _239890cd8_Exit(jule::I64);
inline jule::Slice<jule::U8> _2398a2e1b_Stobs(jule::Str*);
inline void _2398a35c0_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline jule::I64 _2399514e7_getLastOsError(void);
inline jule::Slice<jule::Str> _2399552cb_Args(void);
inline jule::Exceptional<jule::Str> _23995574e_WorkingDir(void);
inline jule::Exceptional<jule::Str> _239956673_getwd(void);
inline jule::Bool _23a803e15_IsLetter(jule::I32);
inline jule::Bool _23a86b8d9_is16(jule::Slice<_23a869d27_Range16>, jule::U16);
inline jule::Bool _23a86bc2a_is32(jule::Slice<_23a86a29a_Range32>, jule::U32);
inline jule::Bool _23a86c4bc_isExcludingLatin(jule::Ptr<_23a86a71d_RangeTable>, jule::I32);
inline jule::Bool _23a86c764_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _23a94e912_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _23a94ec31_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _23a94eec8_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _23a950c76_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _23a9510b7_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _23a951606_RuneCountStr(jule::Str);
inline jule::Bool _23a95189d_RuneStart(jule::U8);
inline jule::I64 _23a97357e_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _23a98589e_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _23a985b68_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _23a985ea9_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _23a986372_Repeat(jule::Str, jule::I64);
inline jule::Bool _23a9867a1_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _23a986ae2_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _23a987054_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _23a987362_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _23a98774c_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _23a988088_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _23a9883c9_FindLast(jule::Str, jule::Str);
inline jule::I64 _23a989672_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _23a989ead_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _23a98acc2_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _23a98b4ed_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _23a98b83e_Contains(jule::Str, jule::Str);
inline jule::Bool _23a98c312_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _23a98c653_Count(jule::Str, jule::Str);
inline jule::Str _23a98cad7_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _23a989b4a_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _23a98db93_TrimLeft(jule::Str, jule::Str);
inline void _23a98de4b_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _23a98e5cd_Trim(jule::Str, jule::Str);
inline jule::Str _23a98e91e_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _23a990eb4_Clean(jule::Str);
inline jule::Str _23a991547_FromSlash(jule::Str);
inline jule::Str _23a991866_Join(jule::Slice<jule::Str>);
inline jule::Str _23a991b0d_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _23a991da5_Abs(jule::Str);
inline jule::Str _23a99214c_Base(jule::Str);
inline jule::Str _23a9924c1_Dir(jule::Str);
inline jule::Str _23a992768_VolumeName(jule::Str);
inline jule::Bool _23a993527_IsPathSep(jule::U8);
inline jule::Bool _23a993813_IsAbs(jule::Str);
inline jule::I64 _23a993aaa_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _23a993dc9_abs(jule::Str);
inline jule::Str _23a994171_join(jule::Slice<jule::Str>);
inline jule::I64 _239895727_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _23aab7360_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _23ab0628e_Itoa(jule::I64);
inline jule::Str _23ab0657a_Utoa(jule::U64);
inline jule::Slice<char*> _23ab09a56_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _23ab09d97_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _23ab0a0a6_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _23ab0ae64_processErrorFromCode(jule::I64);
inline jule::I64 _23ab0b1a6_getLastProcessError(void);
inline void _23ab0b959_Exit(jule::I64);
inline jule::Str _23ab0bb57_Executable(void);
inline jule::Bool _23aa1ad30_IsStdHeaderPath(jule::Str);
inline jule::Bool _23aa1b0d8_IsValidHeaderExt(jule::Str);
inline jule::Bool _23aa1b380_IsValidCppExt(jule::Str);
inline jule::Str _23aa28c94_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _23aa29080_argToStr(jule::Any);
inline jule::I64 _23aa29327_findNextFmt(jule::Str);
inline jule::Str _23aa296ac_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _23aa2a735_IsTopDirective(jule::Str);
inline jule::Bool _23aa2bb65_IsWindows(jule::Str);
inline jule::Bool _23aa2be1d_IsDarwin(jule::Str);
inline jule::Bool _23aa2c1b5_IsLinux(jule::Str);
inline jule::Bool _23aa2c4d4_IsI386(jule::Str);
inline jule::Bool _23aa2c77b_IsAmd64(jule::Str);
inline jule::Bool _23aa2ca23_IsArm64(jule::Str);
inline jule::Bool _23aa2ccba_IsUnix(jule::Str);
inline jule::Bool _23aa2d13e_Is32Bit(jule::Str);
inline jule::Bool _23aa2d3d6_Is64Bit(jule::Str);
inline void _23ab0cdde_init(void);
inline jule::Bool _23ae2734b_IsUnaryOp(jule::Str);
inline jule::Bool _23ae27637_IsBinOp(jule::Str);
inline jule::Bool _23ae27bed_IsStr(jule::Str);
inline jule::Bool _23ae27e95_IsRawStr(jule::Str);
inline jule::Bool _23ae2823c_IsRune(jule::Str);
inline jule::Bool _23ae28858_IsBool(jule::Str);
inline jule::Bool _23ae28b00_IsFloat(jule::Str);
inline jule::Bool _23ae28d97_IsNum(jule::Str);
inline jule::Bool _23ae293d6_IsIgnoreIdent(jule::Str);
inline jule::Bool _23ae2967d_IsAnonIdent(jule::Str);
inline jule::Bool _23ae29bbc_IsSpace(jule::I32);
inline jule::Bool _23ae2a11d_IsLetter(jule::I32);
inline jule::Bool _23ae2a65c_IsDecimal(jule::U8);
inline jule::Bool _23ae2a904_IsBinary(jule::U8);
inline jule::Bool _23ae2ab9b_IsOctal(jule::U8);
inline jule::Bool _23ae2ae43_IsHex(jule::U8);
inline jule::Bool _23ae2b1da_IsAssign(jule::U64);
inline jule::Bool _23ae2b482_IsPostfixOp(jule::Str);
inline jule::Bool _23ae2b729_IsAssignOp(jule::Str);
inline jule::Ptr<_23ae2becc_File> _23ae2d286_NewFileSet(jule::Str);
inline _23aa28854_Log _23ae2ea29_makeErr(jule::I64, jule::I64, jule::Ptr<_23ae2becc_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _23ae2edae_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _23ae30200_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _23ae30585_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _23ae308c6_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _23ae30c17_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _23ae31058_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _23ae314a9_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _23ae31751_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _23ae319e8_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _23ae31d39_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _23ae3217a_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _23ae324bb_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _23ae3280c_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _23ae32b4d_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _23ae3309e_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _23ae33346_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _23ae33687_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _23ae3392e_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _23ae33be8_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _23ae33da2_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _23ae34138_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_23aa28854_Log> _23ae38b32_Lex(jule::Ptr<_23ae2becc_File>, jule::I64);
inline jule::I64 _24a1b2d8b_LeadingZeros64(jule::U64);
inline jule::I64 _24a1b8bc7_TrailingZeros(jule::U64);
inline jule::I64 _24a1b9524_TrailingZeros32(jule::U32);
inline jule::I64 _24a1b97bb_TrailingZeros64(jule::U64);
inline jule::I64 _24a1bedcb_Len32(jule::U32);
inline jule::I64 _24a1c0173_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _24a1c0d33_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _24a1c24b6_Mul64(jule::U64, jule::U64);
inline jule::U32 _24a0e62ec_F32Bits(jule::F32);
inline jule::F32 _24a0e65d8_F32FromBits(jule::U32);
inline jule::U64 _24a0e6880_F64Bits(jule::F64);
inline jule::F64 _24a0e6b9e_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _24a0e918a_Frexp(jule::F64);
inline jule::F64 _24a1c949b_NaN(void);
inline jule::Bool _24a1c9787_IsNaN(jule::F64);
inline jule::F64 _24a1c9a2e_Inf(jule::I64);
inline jule::Bool _24a1c9d3c_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _24a1ca0d4_normalize(jule::F64);
inline jule::F64 _24a1cb9ba_Log(jule::F64);
inline jule::F64 _24a1cc35b_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _24a1d3c9c_Modf(jule::F64);
inline jule::F64 _24a1d4561_Log2(jule::F64);
inline jule::Str _24a20d117_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _24a20d689_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _24a20dd0a_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _23b6109bd_floatInfo*);
inline jule::Slice<jule::U8> _24a20e459_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _24a20cac8_decimalSlice, jule::I64, jule::U8);
inline void _24a20e855_roundShortest(_24a21e964_decimal*, jule::U64, jule::I64, _23b6109bd_floatInfo*);
inline jule::Slice<jule::U8> _24a20ed83_fmtE(jule::Slice<jule::U8>, jule::Bool, _24a20cac8_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _24a210317_fmtF(jule::Slice<jule::U8>, jule::Bool, _24a20cac8_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _24a210922_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _23b6109bd_floatInfo*);
inline jule::Slice<jule::U8> _24a211093_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _23b6109bd_floatInfo*);
inline jule::I64 _24a2113d4_min(jule::I64, jule::I64);
inline jule::I64 _24a211725_max(jule::I64, jule::I64);
inline jule::U8 _24a21224d_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__23b5dc8e0_ConvError _24a21267c_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _24a212a67_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _24a212ec9_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _24a213ae0_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _24a213edb_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _24a215d34_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>*, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _24a216131_special(jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _24a2163c8_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _24a217d58_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _24a218243_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__23b5dc8e0_ConvError _24a218771_atofHex(_23b6109bd_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError _24a218b28_atof32(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError _24a218dc0_atof64(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError _24a219211_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _24a219552_ParseFloat(jule::Str, jule::I64);
inline void _24a219cc2_ryuFtoaFixed32(_24a20cac8_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _24a21a212_ryuFtoaFixed64(_24a20cac8_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _24a21a9e8_formatDecimal(_24a20cac8_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _24a21ae6b_ryuFtoaShortest(_24a20cac8_decimalSlice*, jule::U64, jule::I64, _23b6109bd_floatInfo*);
inline jule::I64 _24a21b213_mulByLog2Log10(jule::I64);
inline jule::I64 _24a21b4aa_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _24a21b895_computeBounds(jule::U64, jule::I64, _23b6109bd_floatInfo*);
inline void _24a21be39_ryuDigits(_24a20cac8_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _24a21c522_ryuDigits32(_24a20cac8_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _24a21c90c_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _24a21cce7_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _24a21d138_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _24a21d3d0_divmod1e9(jule::U64);
inline void _24a22114c_trim(_24a21e964_decimal*);
inline void _24a221405_rightShift(_24a21e964_decimal*, jule::U64);
inline jule::Bool _24a221867_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _24a221adc_leftShift(_24a21e964_decimal*, jule::U64);
inline jule::Bool _24a221e2d_shouldRoundUp(_24a21e964_decimal*, jule::I64);
inline jule::Str _24a22354a_FmtUint(jule::U64, jule::I64);
inline jule::Str _24a2238d0_FmtInt(jule::I64, jule::I64);
inline jule::Str _24a223b77_Itoa(jule::I64);
inline jule::Str _24a223e96_small(jule::I64);
inline jule::Bool _24a22423d_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _24a22476b_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _24a225a47_RealKindOf(jule::Str);
inline jule::I64 _24a225cde_BitsizeOf(jule::Str);
inline jule::Str _24a22610d_IntFromBits(jule::I64);
inline jule::Str _24a2263a5_UintFromBits(jule::I64);
inline jule::Str _24a22664c_FloatFromBits(jule::I64);
inline jule::Bool _24a2271ec_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _24a227494_BitsizeOfFloat(jule::F64);
inline jule::I64 _24a22773b_BitsizeOfInt(jule::I64);
inline jule::I64 _24a2279d3_BitsizeOfUint(jule::U64);
inline void _24a227b48_UpdateTarget(void);
inline void _24a227cad_init(void);
inline jule::I64 _24a22ba4d_MinI(jule::Str);
inline jule::I64 _24a22bd39_MaxI(jule::Str);
inline jule::U64 _24a22c0d1_MaxU(jule::Str);
inline jule::F64 _24a22c2e0_Min(jule::Str);
inline jule::F64 _24a22c587_Max(jule::Str);
inline jule::Bool _24a22c9d8_IsI8Compatible(jule::Str);
inline jule::Bool _24a22ccc4_IsI16Compatible(jule::Str);
inline jule::Bool _24a22d06b_IsI32Compatible(jule::Str);
inline jule::Bool _24a22d38a_IsI64Compatible(jule::Str);
inline jule::Bool _24a22d632_IsU8Compatible(jule::Str);
inline jule::Bool _24a22d8c9_IsU16Compatible(jule::Str);
inline jule::Bool _24a22db71_IsU32Compatible(jule::Str);
inline jule::Bool _24a22dee5_IsU64Compatible(jule::Str);
inline jule::Bool _24a22e28c_IsF32Compatible(jule::Str);
inline jule::Bool _24a22e534_IsF64Compatible(jule::Str);
inline jule::Bool _24a22e875_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _24a22eb1c_IsI16Greater(jule::Str);
inline jule::Bool _24a22edb4_IsI32Greater(jule::Str);
inline jule::Bool _24a23015b_IsI64Greater(jule::Str);
inline jule::Bool _24a230403_IsU16Greater(jule::Str);
inline jule::Bool _24a230854_IsU32Greater(jule::Str);
inline jule::Bool _24a230aeb_IsU64Greater(jule::Str);
inline jule::Bool _24a230d93_IsF32Greater(jule::Str);
inline jule::Bool _24a23113a_IsF64Greater(jule::Str);
inline jule::Bool _24a23147b_IsGreater(jule::Str, jule::Str);
inline jule::Bool _24a2324b0_IsSigInt(jule::Str);
inline jule::Bool _24a23279b_IsUnsigInt(jule::Str);
inline jule::Bool _24a232a43_IsInt(jule::Str);
inline jule::Bool _24a232d62_IsFloat(jule::Str);
inline jule::Bool _24a233109_IsNum(jule::Str);
inline jule::Bool _24a2333a1_IsSigNum(jule::Str);
inline void _24a23bc6c_lshiftUnsig(_24a233549_Const*, _24a233549_Const*);
inline void _24a23c069_rshiftUnsig(_24a233549_Const*, _24a233549_Const*);
inline jule::Bool _1dce24396_IsAscii(jule::I32);
inline jule::I32 _1dce244c8_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1dce3b15a_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1dce3b479_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1dce3b721_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1dce3ba2e_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1dce3bd70_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1dd03bd82_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _1dd042937_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1dd042be0_FmtByDefault(jule::Str*, jule::Any*);
inline void _1dd0430b9_applyFmtByDefault(jule::Str*, jule::I64*, jule::Slice<jule::Any>);
inline void _1dd0434b5_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Str _1dd0437c3_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1dd0454a6_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dcd7675a_parameterUsesGenerics(jule::Ptr<_1dcd73779_ParamIns>*, jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>>*);
inline jule::Ptr<_1dce892da_TypeSymbol> _1dcd78c35_buildType(jule::Ptr<_1dcd3bd80_TypeDecl>);
inline jule::Ptr<_1dce55d45_Value> _1dcd79021_buildExpr(jule::Ptr<_1dcd4100a_Expr>);
inline jule::Ptr<_1dce816de_TypeAlias> _1dcd792b8_buildTypeAlias(jule::Ptr<_1dcd52cec_TypeAliasDecl>);
inline jule::Ptr<_1dcd58a6c_Field> _1dcd795d7_buildField(jule::Ptr<_1dcd562c8_FieldDecl>);
inline jule::Slice<jule::Ptr<_1dcd58a6c_Field>> _1dcd7987e_buildFields(jule::Slice<jule::Ptr<_1dcd562c8_FieldDecl>>*);
inline jule::Ptr<_1dcd5b641_Struct> _1dcd79b26_buildStruct(jule::Ptr<_1dcd56b25_StructDecl>);
inline jule::Ptr<_1dcd7015a_Param> _1dcd79dbd_buildParam(jule::Ptr<_1dcd4c18c_ParamDecl>);
inline jule::Slice<jule::Ptr<_1dcd7015a_Param>> _1dcd7a242_buildParams(jule::Slice<jule::Ptr<_1dcd4c18c_ParamDecl>>*);
inline jule::Ptr<_1dcd6e951_RetType> _1dcd7a4d9_buildRetType(jule::Ptr<_1dcd3eaec_RetTypeDecl>);
inline jule::Ptr<_1dcd71997_Fn> _1dcd7a781_buildFn(jule::Ptr<_1dcd4d4ac_FnDecl>);
inline jule::Slice<jule::Ptr<_1dcd71997_Fn>> _1dcd7aa28_buildMethods(jule::Slice<jule::Ptr<_1dcd4d4ac_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1dce892da_TypeSymbol>> _1dcd7acc0_buildTraitInherits(jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>*);
inline jule::Ptr<_1dcd83bb8_Trait> _1dcd7b067_buildTrait(jule::Ptr<_1dcd572eb_TraitDecl>);
inline jule::Ptr<_1dcd85956_EnumItem> _1dcd7b30e_buildEnumItem(jule::Ptr<_1dcd5465b_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1dcd85956_EnumItem>> _1dcd7b5a6_buildEnumItems(jule::Slice<jule::Ptr<_1dcd5465b_EnumItemDecl>>*);
inline jule::Ptr<_1dcd8644b_Enum> _1dcd7ba07_buildEnum(jule::Ptr<_1dcd55184_EnumDecl>);
inline jule::Ptr<_1dcd874b3_TypeEnumItem> _1dcd7bc9e_buildTypeEnumItem(jule::Ptr<_1dcd55959_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1dcd874b3_TypeEnumItem>> _1dcd7c046_buildTypeEnumItems(jule::Slice<jule::Ptr<_1dcd55959_TypeEnumItemDecl>>*);
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcd7c2dd_buildTypeEnum(jule::Ptr<_1dcd56064_TypeEnumDecl>);
inline jule::Ptr<_1dce05cb2_Var> _1dcd7c585_buildVar(jule::Ptr<_1dcd4e48b_VarDecl>);
inline jule::Slice<jule::Ptr<_1dce05cb2_Var>> _1dcd7c82c_buildVars(jule::Slice<jule::Ptr<_1dcd4e48b_VarDecl>>);
inline jule::Ptr<_1dcda8c10_Impl> _1dcd7cac4_buildImpl(jule::Ptr<_1dcd57906_Impl>);
inline jule::Ptr<_1dce54cbc_Data> _1dcda4a41_buildAsComptimeMethodData(jule::Ptr<_1dcd74648_FnIns>*);
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcda4c2d_findComptimePackage(jule::Ptr<_1dcdd59a6_Sema>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda5091_buildComptimeTypeInfoData(jule::Ptr<_1dcdd59a6_Sema>*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Ptr<_1dce54cbc_Data> _1dcda53c1_buildComptimeValue(jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _1dcda813d_matchConstraint(jule::Str*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dcda8429_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1dcdb5898_scopeChecker> _1dcdaac9a_newScopeCheckerBase(jule::Ptr<_1dcdd59a6_Sema>*, jule::Ptr<_1dcd74648_FnIns>);
inline jule::Ptr<_1dcdb5898_scopeChecker> _1dcdab130_newScopeChecker(jule::Ptr<_1dcdd59a6_Sema>*, jule::Ptr<_1dcd74648_FnIns>);
inline jule::Ptr<_1dcdb4611_scopeLabel> _1dcdab471_findLabelParent(jule::Str, jule::Ptr<_1dcdb5898_scopeChecker>);
inline jule::Bool _1dcdab806_modelIsGotoScope(jule::Any, jule::Ptr<_1dcdadc6a_Scope>*);
inline jule::Bool _1dcdabb47_stmtIsGotoScope(jule::Any*, jule::Ptr<_1dcdadc6a_Scope>*);
inline jule::I64 _1dcdabe88_countMatchType(jule::Ptr<_1dcdb2a82_Match>*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Slice<jule::Ptr<_1dce54cbc_Data>> _1dcdac230_getDatasFromTupleData(jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _1dcdaca6b_checkMut(jule::Ptr<_1dcdd59a6_Sema>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline jule::Bool _1dcdad000_checkAssign(jule::Ptr<_1dcdd59a6_Sema>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>, jule::Ptr<_23ae26b42_Token>);
inline jule::Bool _1dcdad297_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1dcdad53e_isValidStForNextSt(jule::Any*);
inline jule::Bool _1dcdad7d6_stmtIsDef(jule::Any*);
inline jule::Ptr<_1dce05cb2_Var> _1dcdc9deb_findVarInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1dce816de_TypeAlias> _1dcdca32a_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd5b641_Struct> _1dcdca715_findStructInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd71997_Fn> _1dcdcab77_findFnInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1dcd83bb8_Trait> _1dcdcae85_findTraitInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1dcd8644b_Enum> _1dcdcb2c6_findEnumInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcdcb617_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>*, jule::Str);
inline jule::Any _1dcdcbb12_defByIdentPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1dcdd25c9_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1dcdd3333_isValidModelForRef(jule::Any*);
inline _23aa28854_Log _1dcdd37c8_compilerErr(jule::Ptr<_23ae26b42_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dcdd3b19_impIsLookupable(jule::Ptr<_1dcdcc6d4_ImportInfo>*, jule::Str);
inline void _1dcdd3e16_appendRetVars(jule::Slice<jule::Ptr<_1dce05cb2_Var>>*, jule::Ptr<_1dcd74648_FnIns>*);
inline void _1dcdd41be_appendParamVars(jule::Slice<jule::Ptr<_1dce05cb2_Var>>*, jule::Ptr<_1dcd74648_FnIns>*);
inline void _1dcdd4499_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>*, jule::Ptr<_1dcd74648_FnIns>*);
inline jule::Ptr<_1dce502b2_SymbolTable> _1dcdd47eb_findFile(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>*, jule::Ptr<_23ae2becc_File>*);
inline void _1dcdd4c5d_pushSuggestion(_23aa28854_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1dce04299_pushImplemented(jule::Ptr<_1dcd83bb8_Trait>, jule::Ptr<_1dcd5b641_Struct>*);
inline void _1dce04552_pushImplements(jule::Ptr<_1dcd5b641_Struct>*, jule::Ptr<_1dcd83bb8_Trait>);
inline jule::Bool _1dce3c4be_traitHasReferenceReceiver(jule::Ptr<_1dcd83bb8_Trait>*);
inline jule::Bool _1dce3c766_floatAssignable(jule::Str, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _1dce3caa7_sigAssignable(jule::Str, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _1dce3ce3c_unsigAssignable(jule::Str, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _1dce3d27d_intAssignable(jule::Str, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce82437_TypeKind> _1dce4e1a1_lenKind(void);
inline jule::Bool _1dce4e448_isGoodValueToInfer(jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dcd09369_Directive> _1dce7b497_findDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>*, jule::Str);
inline jule::Any _1dce7b82c_findBuiltinsImport(jule::Str, jule::Ptr<_1dcdcc6d4_ImportInfo>);
inline void _1dce7ba3b_fitBitsize(jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce7bd38_makeStructLitAlloc(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd6447e_StructLitExprModel>*);
inline jule::Ptr<_1dce05cb2_Var> _1dce7c179_buildErrorVar(jule::Ptr<_1dcdadc6a_Scope>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Any _1dce7c4ba_findBuiltinsSema(jule::Str, jule::Ptr<_1dcdd59a6_Sema>);
inline jule::Bool _1dce7c762_isOkForShifting(jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _1dce7cb19_isInstancedStruct(jule::Ptr<_1dcd5e457_StructIns>);
inline jule::Bool _1dce7ce7c_isPtrArithmeticCompatible(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce7d1be_applyCastKindModel(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce82437_TypeKind>*);
inline void _1dce7d477_applyCastKind(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce7d675_buildVoidData(void);
inline jule::Str _1dce7d93e_checkDataForIntegerIndexing(jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce7dc08_applyCastModelByEnum(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dcd8644b_Enum>);
inline void _1dce7deb1_castConstByType(jule::Str*, jule::Ptr<_1dce54cbc_Data>*);
inline void _1dce7e4bc_updateModelToGenericIns(jule::Any*, jule::Ptr<_1dcd74648_FnIns>*);
inline jule::Bool _1dce7e70e_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1dcd3c732_SubIdentTypeDecl>*);
inline jule::Str _1dce7e9a6_constoa(jule::Ptr<_24a233549_Const>*);
inline jule::Ptr<_1dce54cbc_Data> _1dce7ece7_evalEnumStatic(jule::Ptr<_1dcd8644b_Enum>*, jule::Ptr<_1dcd85956_EnumItem>*);
inline jule::Bool _1dce9b7e7_kindUsesGenerics(jule::Ptr<_1dce82437_TypeKind>*, jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>>*);
inline jule::Bool _1dce9bb7c_hasDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>*, jule::Str);
inline jule::Bool _1dce9be24_canGetPtr(jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _1dce9c243_isValidForSptrType(jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce9c4da_isValidForRef(jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Bool _1dce9c7a4_isBuiltinStrConvertable(jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Str _1dce9ca29_buildLinkPathByTokens(jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dce89b8c_Prim> _1dce9cdd1_buildPrimType(jule::Str);
inline jule::Ptr<_1dcd5b641_Struct> _1dce9d178_getStructFromKind(jule::Ptr<_1dce82437_TypeKind>);
inline void _1dce9d431_applyImplicitCast(jule::Ptr<_1dce82437_TypeKind>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _1dce9d6c8_validTypeForXof(jule::Ptr<_1dce82437_TypeKind>*);
inline __jule_tuple_x_1dce502b2_SymbolTable__jule_tuple_s_23aa28854_Log _1dcea1478_buildSymbols(jule::Ptr<_1dcd080d2_Ast>*, jule::Trait<_1dcdc9a33_Importer>*, jule::Ptr<_1dcd7d124_symbolBuilder>);
inline __jule_tuple_x_1dcdd031e_Package__jule_tuple_s_23aa28854_Log _1dcea18a7_analyzePackage(jule::Slice<jule::Ptr<_1dcd080d2_Ast>>*, jule::Trait<_1dcdc9a33_Importer>*, jule::I64*);
inline __jule_tuple_x_1dcdd031e_Package__jule_tuple_s_23aa28854_Log _1dcea1c92_AnalyzePackage(jule::Slice<jule::Ptr<_1dcd080d2_Ast>>, jule::Trait<_1dcdc9a33_Importer>, jule::I64);
inline jule::Ptr<_1dcd74648_FnIns> _1dd045c6a_findBuiltinFn(jule::Str);
inline jule::Ptr<_1dce816de_TypeAlias> _1dd045e9b_primTypeAlias(jule::Ptr<_1dce82437_TypeKind>*);
inline jule::Ptr<_1dce816de_TypeAlias> _1dd0497b8_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1dd0499c7_findBuiltinDef(jule::Str);
inline jule::Any _1dd049c6e_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1dd04a016_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1dd04a2d0_findBuiltinDefStdComptime(jule::Str);
inline jule::Any _1dd04a687_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1dd04a962_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1dce54cbc_Data> _1dd04ad6e_builtinCallerCommonPlain(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04b26a_builtinCallerCommon(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04b655_builtinCallerCommonMut(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04b996_builtinCallerError(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04bd81_builtinCallerOut(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04c26b_builtinCallerOutln(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04c887_builtinCallerNew(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04cc72_builtinCallerPanic(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04d15c_builtinCallerMake(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04d547_builtinCallerAppend(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04d9cb_callerCopySlice(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04de60_callerCopyStr(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04e34a_builtinCallerCopy(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04e68b_callerLenSlice(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04e9cc_callerLenMap(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd04ed1d_callerLenArr(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd05015e_callerLenStr(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd0504a0_callerLenComptime(jule::Ptr<_1dce54cbc_Data>*, jule::I64);
inline jule::Ptr<_1dce54cbc_Data> _1dd05088a_builtinCallerLen(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd050bcb_callerCapSlice(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd05101c_callerCapStr(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd051407_builtinCallerCap(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd0519bd_callerDeleteMap(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd051da8_builtinCallerDelete(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd052293_builtinCallerClone(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd05267d_builtinCallerAssert(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd052a8a_builtinCallerStdComptimeTypeOf(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd052ea8_builtinCallerStdComptimeValueOf(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd053261_rangeData(jule::Trait<_1dcd899c1_comptimeRangeKind>);
inline jule::Ptr<_1dce54cbc_Data> _1dd05366d_builtinCallerStdComptimeRange(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd053a8b_builtinCallerStdComptimeLine(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd053ea9_builtinCallerStdComptimeFile(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd0543c7_builtinCallerStdComptimeFiles(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd0547e5_builtinCallerStdMemSizeOf(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd054c13_builtinCallerStdMemAlignOf(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd055131_builtinCallerStdMemFree(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd055560_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd05597d_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd055dbd_builtinCallerStdDebugOut(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Ptr<_1dce54cbc_Data> _1dd0562a8_builtinCallerStdDebugOutln(jule::Ptr<_1dce5683a_Eval>*, jule::Ptr<_1dcd44e21_FnCallExpr>*, jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _20719a1a2_FindModuleFile(jule::Slice<jule::Ptr<_239897053_DirEntry>>*);
inline jule::Str _20719a2d4_FindModuleFileDeep(jule::Str);
inline jule::Slice<_23aa28854_Log> _20719a4d2_CheckModuleFile(jule::Str);
inline jule::Ptr<_1de3bc310_FileInfo> _1de4127c8_ParseFile(jule::Ptr<_23ae2becc_File>);
inline __jule_tuple_x_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log _1de412d5b_parseFileset(jule::Ptr<_23ae2becc_File>);
inline jule::Ptr<_1dcd4b9b6_ScopeTree> _1de413785_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1de413a71_isSt(jule::Ptr<_23ae26b42_Token>, jule::Ptr<_23ae26b42_Token>);
inline jule::Bool _1de413db2_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1de414247_nextStPos(jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::I64);
inline __jule_tuple_sx_23ae26b42_Token__jule_tuple_bool _1de414588_skipSt(jule::I64*, jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Slice<jule::Ptr<_1de414885_stmt>> _1de414c2b_splitStmts(jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Bool _1de42b418_isTypeOp(jule::Str*);
inline jule::Bool _1de42b704_isTypeRange(jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Slice<jule::Ptr<_23ae26b42_Token>> _1de42b99b_getBlockExpr(jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline __jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token _1de42bd31_splitDelim(jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::U64);
inline jule::I64 _1de42c0c8_findLowestPrecOp(jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Ptr<_1dcd42b00_IdentExpr> _1de42c370_buildIdentExpr(jule::Ptr<_23ae26b42_Token>*);
inline __jule_tuple_sx_23ae26b42_Token__jule_tuple_int _1de42c617_getRangeExprTokens(jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Bool _1de42d371_checkAssignTokens(jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline _23aa28854_Log _1de42e592_makeErr(jule::I64, jule::I64, jule::Ptr<_23ae2becc_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_23ae26b42_Token>> _1de42ea6a_range(jule::I64*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline __jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token _1de42ed12_rangeLast(jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline __jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log _1de4301ec_partsKind(jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log _1de4305d7_parts(jule::Slice<jule::Ptr<_23ae26b42_Token>>*, jule::U64, jule::Bool);
inline jule::Str _1de43087e_getCloseKindOfBrace(jule::Str);
inline _23aa28854_Log _1de430c69_compilerErr(jule::Ptr<_23ae26b42_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1de431198_pushSuggestion(_23aa28854_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1de431440_tokstoa(jule::Slice<jule::Ptr<_23ae26b42_Token>>*);
inline jule::Bool _1de441582_isPub(jule::Str*);
inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de441e23_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _20716de56_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _207187bb7_checkArch(jule::Str);
inline jule::Bool _207187d93_isPassFileAnnotation(jule::Str);
inline void _207189081_setOsVars(jule::Slice<jule::Str>*);
inline void _2071892d4_setArchVars(jule::Slice<jule::Str>*);
inline void _20718958c_initVars(jule::Slice<jule::Str>*, _207188c73_CompileInfo*);
inline jule::Slice<jule::U8> _1de445da0_readBuff(jule::Str);
inline _23aa28854_Log _1de446158_flatCompilerErr(jule::Str);
inline void _1de44a569_pushPasses(jule::Ptr<_1dcdd031e_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1de44a8ee_getAllUniquePasses(jule::Ptr<_1dcdd031e_Package>*, jule::Slice<jule::Ptr<_1dcdcc6d4_ImportInfo>>);
inline _207188c73_CompileInfo _1de44aaec_buildCompileInfo(void);
inline void _1de581826_EliminateDefines(jule::Ptr<_1de448d4d_IR>*);
inline jule::Ptr<_1dcd09369_Directive> _1de581bab_findDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>*, jule::Str);
inline jule::Bool _1de581eec_hasDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>*, jule::Str);
inline jule::Bool _1de582382_isTraitMethod(jule::Ptr<_1dcd5e457_StructIns>*, jule::Ptr<_1dcd74648_FnIns>*);
inline void _1de585e8a_eliminateDeadCodeOfScope(jule::Ptr<_1dcdadc6a_Scope>);
inline void _1de586221_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1dcd71997_Fn>>*);
inline void _1de586463_eliminateFunctionsScopePackage(jule::Ptr<_1dcdd031e_Package>*);
inline void _1de58670a_eliminateScopePackage(jule::Ptr<_1dcdd031e_Package>*);
inline void _1de586919_EliminateScopes(jule::Ptr<_1de448d4d_IR>*);
inline jule::Bool _1dd05d546_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1dd05d854_isConstantValidConditionalCase(jule::Ptr<_1dcdae166_If>*);
inline jule::Bool _1dd05db0c_isUnreachableExpr(jule::Any*);
inline jule::Bool _1dd05de4d_isConstantValidMatchCase(jule::Ptr<_1dcdb35cc_Case>*);
inline jule::Bool _1dd05e1e5_isUnreachableConditionalCase(jule::Ptr<_1dcdae166_If>*);
inline jule::Bool _1dd05e49d_isUnreachableMatchCase(jule::Ptr<_1dcdb35cc_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1dd0671ed_checkForBitShiftOpt(jule::Ptr<_1dcd6335c_OperandExprModel>*, jule::Ptr<_1dcd6335c_OperandExprModel>*);
inline jule::Bool _1dd067583_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1dd067c8c_doInternalNosafeStobs(_1dd06026d_exprOptimizer*, _1de44cdb8_stdCacheData*, jule::Ptr<_1dcd6568e_FnCallExprModel>*);
inline void _1de44d54a_buildCache(jule::Ptr<_1de448d4d_IR>*);
inline void _1de44d78c_buildStdInternalNosafeCache(jule::Ptr<_1de448d4d_IR>*);
inline void _1de44db00_pushCache(jule::Ptr<_1dcdd031e_Package>*, jule::Str, jule::Fn<void(_1dd06026d_exprOptimizer*,_1de44cdb8_stdCacheData*,jule::Ptr<_1dcd6568e_FnCallExprModel>*)>);
inline jule::Ptr<_1dcd74648_FnIns> _1de44de85_getFunc(jule::Ptr<_1dcdd031e_Package>*, jule::Str*);
inline jule::Ptr<_1dcdd031e_Package> _1de44e2c6_getPackage(jule::Ptr<_1de448d4d_IR>*, jule::Str*);
inline void _1de451916_PushOptLevel(jule::I64);
inline void _1de590b87_detectEnabled(void);
inline void _1de5b3ec9_Throw(jule::Str);
inline jule::U64 _1c4484a96_unix(void);
inline jule::Bool _23b439396_isCopyOptimizable(jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _23b43972b_isIterCopyOptimizable(jule::Ptr<_1dce54cbc_Data>*, jule::Ptr<_1dce05cb2_Var>*);
inline jule::Str _23b44954e_decomposeCommonEsq(jule::U8);
inline jule::Str _23b44983a_sbtoa(jule::U8);
inline jule::Str _23b449ad2_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _23b449e01_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _23b44a20e_ftoa(jule::F64, jule::I64);
inline jule::Str _23b44a4a6_itoa(jule::I64);
inline jule::Str _23b44a74d_utoa(jule::U64);
inline jule::Bool _23b44ab05_isForwarded(jule::Ptr<_1dcdadc6a_Scope>*);
inline jule::Bool _23b44adbe_isBuiltinCallHasDebuginf(jule::Ptr<_1dcd6568e_FnCallExprModel>*);
inline jule::Bool _23b44b100_isExprComesFromBind(jule::Ptr<_1dce54cbc_Data>*);
inline jule::Bool _23b44b397_isAny(jule::Ptr<_1dce82437_TypeKind>*);
inline void _1c4498527_iterFiles(jule::Ptr<_1dcdd031e_Package>*, jule::Fn<void(jule::Ptr<_1dce502b2_SymbolTable>*)>);
inline jule::Str _1c4498813_concatAllParts(jule::Slice<jule::Ptr<_23ae26b42_Token>>);
inline jule::Bool _1c4498b54_containsTraitMethod(jule::Ptr<_1dcd83bb8_Trait>*, jule::Str*);
inline void _1c4498e51_pushMethodsFromInherit(jule::Ptr<_1dcd83bb8_Trait>*, jule::Ptr<_1dcd83bb8_Trait>*);
inline void _1c449922b_pushMethodsFromInherits(jule::Ptr<_1dcd83bb8_Trait>*, jule::Ptr<_1dcd83bb8_Trait>*);
inline jule::Bool _1c44994d4_isOpMethod(jule::Ptr<_1dcd71997_Fn>*);
inline jule::Bool _1c449977b_isHeadDecl(jule::Ptr<_1dcd71997_Fn>*);
inline jule::Ptr<_1dcd09369_Directive> _1c44a7a20_findDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>*, jule::Str);
inline jule::Bool _1c44a7da5_hasDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>*, jule::Str);
inline jule::Bool _1c44a814c_shouldInitialized(jule::Ptr<_1dce82437_TypeKind>*);
inline void _23ab10cd2_printErrorMessage(jule::Str);
inline void _23ab11035_help(jule::Slice<jule::Str>*);
inline void _23ab11244_version(jule::Slice<jule::Str>*);
inline void _23ab11431_toolDistos(void);
inline void _23ab11596_toolDistarch(void);
inline void _23ab117a5_tool(jule::Slice<jule::Str>*);
inline void _23ab119b4_julenv(jule::Slice<jule::Str>*);
inline void _23ab11ca0_mod(jule::Slice<jule::Str>*);
inline jule::Bool _23ab12047_processCommand(jule::Slice<jule::Str>*);
inline void _23ab121ac_showInfo(void);
void entry_point(void);
inline void _1c45151ba_init(void);
inline jule::Ptr<_2398a4626_File> _1c4515473_openOutput(jule::Str*);
inline void _1c45155d8_clearObjects(void);
inline void _1c45158d5_compileIr(jule::Str, jule::Str);
inline jule::Bool _1c4515b7c_isCppSourceFile(jule::Str);
inline void _1c4515d8b_pushCompCmdClang(jule::Str*);
inline void _1c451609a_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1c45164eb_genCompileCmd(jule::Str, jule::Ptr<_1de448d4d_IR>*);
inline jule::Str _1c45166e9_getCompilePath(void);
inline void _1c451693b_applyTargetIndependentOptimizations(jule::Ptr<_1de448d4d_IR>*);
inline void _1c4516aa1_checkCompilerFlag(void);
inline void _1c4516c6b_checkTargetArch(jule::Str);
inline void _1c4516e7a_checkTargetOs(jule::Str);
inline void _1c4517189_checkTargetFlag(jule::Str*);
inline void _1c4517398_checkOptFlag(jule::Str*);
inline void _1c451771c_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1c45179a3_checkFlags(jule::Slice<jule::Str>*);
inline void _1c4517bb2_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1de448d4d_IR> _1c4517e59_buildIr(jule::Slice<jule::Str>*);
inline void _1c4518168_compileCommand(jule::Slice<jule::Str>*);


struct _1dcd899c1_comptimeRangeKindMptrData {
	void(*_1dcd89251_ready)(jule::Trait<_1dcd899c1_comptimeRangeKind>, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
	void(*_1dcd89619_step)(jule::Trait<_1dcd899c1_comptimeRangeKind>, jule::I64, jule::Ptr<_1dce05cb2_Var>*, jule::Ptr<_1dce05cb2_Var>*);
	jule::I64(*_1dcd8987d_len)(jule::Trait<_1dcd899c1_comptimeRangeKind>);
};

struct _1dcdc9a33_ImporterMptrData {
	void(*_1dcdc8955_SetModPath)(jule::Trait<_1dcdc9a33_Importer>, jule::Str);
	jule::Str(*_1dcdc8b97_GetModPath)(jule::Trait<_1dcdc9a33_Importer>);
	jule::Str(*_1dcdc8ea5_ModById)(jule::Trait<_1dcdc9a33_Importer>, jule::I64);
	jule::Ptr<_1dcdcc6d4_ImportInfo>(*_1dcdc92b3_GetImport)(jule::Trait<_1dcdc9a33_Importer>, jule::Str);
	__jule_tuple_sx_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log(*_1dcdc966a_ImportPackage)(jule::Trait<_1dcdc9a33_Importer>, jule::Str, jule::Bool);
	void(*_1dcdc98e0_Imported)(jule::Trait<_1dcdc9a33_Importer>, jule::Ptr<_1dcdcc6d4_ImportInfo>);
};

struct _1dce81ec5_KindMptrData {
	jule::Str(*_1dce81a74_Str)(jule::Trait<_1dce81ec5_Kind>);
	jule::Bool(*_1dce81d82_Equal)(jule::Trait<_1dce81ec5_Kind>, jule::Ptr<_1dce82437_TypeKind>);
};

struct _1dcea0763_LookupMptrData {
	jule::Ptr<_1dcdcc6d4_ImportInfo>(*_1dce9dc28_SelectPackage)(jule::Trait<_1dcea0763_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)>);
	jule::Ptr<_1dce05cb2_Var>(*_1dce9e0d0_FindVar)(jule::Trait<_1dcea0763_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1dce816de_TypeAlias>(*_1dce9e487_FindTypeAlias)(jule::Trait<_1dcea0763_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1dcd5b641_Struct>(*_1dce9e83e_FindStruct)(jule::Trait<_1dcea0763_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1dcd71997_Fn>(*_1dce9ebe6_FindFn)(jule::Trait<_1dcea0763_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1dcd83bb8_Trait>(*_1dcea0004_FindTrait)(jule::Trait<_1dcea0763_Lookup>, jule::Str);
	jule::Ptr<_1dcd8644b_Enum>(*_1dcea0312_FindEnum)(jule::Trait<_1dcea0763_Lookup>, jule::Str);
	jule::Ptr<_1dcd87a46_TypeEnum>(*_1dcea0620_FindTypeEnum)(jule::Trait<_1dcea0763_Lookup>, jule::Str);
};

struct _1c450d5c0_CommonFlagMptrData {
	jule::Str(*_1c44cd9d0_Name)(jule::Trait<_1c450d5c0_CommonFlag>);
	jule::I32(*_1c44cdb12_Short)(jule::Trait<_1c450d5c0_CommonFlag>);
	jule::Str(*_1c44cdcbb_What)(jule::Trait<_1c450d5c0_CommonFlag>);
	void(*_1c450d48d_Reset)(jule::Trait<_1c450d5c0_CommonFlag>);
};



inline void _1dcd89251_ready_comptimeRangeKind_0(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::Ptr<_1dce05cb2_Var>* _1329_keyA, jule::Ptr<_1dce05cb2_Var>* _1346_keyB) {
	_1dcd8cc7c_ready(_self_.safe_ptr<_1dcd8c1bb_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1dcd89619_step_comptimeRangeKind_0(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1dce05cb2_Var>* _1436_keyA, jule::Ptr<_1dce05cb2_Var>* _1453_keyB) {
	_1dcd8d145_step(_self_.safe_ptr<_1dcd8c1bb_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1dcd8987d_len_comptimeRangeKind_0(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_) {
	return _1dcd8d3a9_len(_self_.safe_ptr<_1dcd8c1bb_comptimeStructFields>());
}
inline void _1dcd89251_ready_comptimeRangeKind_1(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::Ptr<_1dce05cb2_Var>* _1329_keyA, jule::Ptr<_1dce05cb2_Var>* _1346_keyB) {
	_1dcd90c80_ready(_self_.safe_ptr<_1dcd90257_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1dcd89619_step_comptimeRangeKind_1(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1dce05cb2_Var>* _1436_keyA, jule::Ptr<_1dce05cb2_Var>* _1453_keyB) {
	_1dcd91148_step(_self_.safe_ptr<_1dcd90257_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1dcd8987d_len_comptimeRangeKind_1(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_) {
	return _1dcd913ac_len(_self_.safe_ptr<_1dcd90257_comptimeStatics>());
}
inline void _1dcd89251_ready_comptimeRangeKind_2(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::Ptr<_1dce05cb2_Var>* _1329_keyA, jule::Ptr<_1dce05cb2_Var>* _1346_keyB) {
	_1dcd93502_ready(_self_.safe_ptr<_1dcd928b9_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1dcd89619_step_comptimeRangeKind_2(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1dce05cb2_Var>* _1436_keyA, jule::Ptr<_1dce05cb2_Var>* _1453_keyB) {
	_1dcd938ba_step(_self_.safe_ptr<_1dcd928b9_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1dcd8987d_len_comptimeRangeKind_2(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_) {
	return _1dcd93b2e_len(_self_.safe_ptr<_1dcd928b9_comptimeEnumFields>());
}
inline void _1dcd89251_ready_comptimeRangeKind_3(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::Ptr<_1dce05cb2_Var>* _1329_keyA, jule::Ptr<_1dce05cb2_Var>* _1346_keyB) {
	_1dcd96a66_ready(_self_.safe_ptr<_1dcd95eb6_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1dcd89619_step_comptimeRangeKind_3(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1dce05cb2_Var>* _1436_keyA, jule::Ptr<_1dce05cb2_Var>* _1453_keyB) {
	_1dcd96e2e_step(_self_.safe_ptr<_1dcd95eb6_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1dcd8987d_len_comptimeRangeKind_3(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_) {
	return _1dcd97193_len(_self_.safe_ptr<_1dcd95eb6_comptimeParams>());
}
inline void _1dcd89251_ready_comptimeRangeKind_4(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::Ptr<_1dce05cb2_Var>* _1329_keyA, jule::Ptr<_1dce05cb2_Var>* _1346_keyB) {
	_1dcd9802e_ready(_self_.safe_ptr<_1dcd9747e_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1dcd89619_step_comptimeRangeKind_4(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1dce05cb2_Var>* _1436_keyA, jule::Ptr<_1dce05cb2_Var>* _1453_keyB) {
	_1dcd983e7_step(_self_.safe_ptr<_1dcd9747e_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1dcd8987d_len_comptimeRangeKind_4(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_) {
	return _1dcd9865b_len(_self_.safe_ptr<_1dcd9747e_comptimeTypeInfos>());
}
inline void _1dcd89251_ready_comptimeRangeKind_5(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::Ptr<_1dce05cb2_Var>* _1329_keyA, jule::Ptr<_1dce05cb2_Var>* _1346_keyB) {
	_1dcda25dd_ready(_self_.safe_ptr<_1dcda1a3d_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1dcd89619_step_comptimeRangeKind_5(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1dce05cb2_Var>* _1436_keyA, jule::Ptr<_1dce05cb2_Var>* _1453_keyB) {
	_1dcda29a6_step(_self_.safe_ptr<_1dcda1a3d_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1dcd8987d_len_comptimeRangeKind_5(jule::Trait<_1dcd899c1_comptimeRangeKind> _self_) {
	return _1dcda2c1a_len(_self_.safe_ptr<_1dcda1a3d_comptimeFiles>());
}
inline void _1dcdc8955_SetModPath_Importer_0(jule::Trait<_1dcdc9a33_Importer> _self_, jule::Str _1729_path) {
	_1de447148_SetModPath(_self_.safe_ptr<_1de4465dc_JuleImporter>(), _1729_path);
}
inline jule::Str _1dcdc8b97_GetModPath_Importer_0(jule::Trait<_1dcdc9a33_Importer> _self_) {
	return _1de4473ac_GetModPath(_self_.safe_ptr<_1de4465dc_JuleImporter>());
}
inline jule::Str _1dcdc8ea5_ModById_Importer_0(jule::Trait<_1dcdc9a33_Importer> _self_, jule::I64 _2522_id) {
	return _1de4476ba_ModById(_self_.safe_ptr<_1de4465dc_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcdc92b3_GetImport_Importer_0(jule::Trait<_1dcdc9a33_Importer> _self_, jule::Str _3128_path) {
	return _1de4479c8_GetImport(_self_.safe_ptr<_1de4465dc_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log _1dcdc966a_ImportPackage_Importer_0(jule::Trait<_1dcdc9a33_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1de447d80_ImportPackage(_self_.safe_ptr<_1de4465dc_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1dcdc98e0_Imported_Importer_0(jule::Trait<_1dcdc9a33_Importer> _self_, jule::Ptr<_1dcdcc6d4_ImportInfo> _4131__0) {
	_1de448105_Imported(_self_.safe_ptr<_1de4465dc_JuleImporter>(), _4131__0);
}
inline jule::Str _1dce81a74_Str_Kind_0(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd5e7ba_Str(_self_.safe_ptr<_1dcd5e457_StructIns>());
}
inline jule::Bool _1dce81d82_Equal_Kind_0(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd5eac8_Equal(_self_.data.as<_1dcd5e457_StructIns>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_1(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd74978_Str(_self_.safe_ptr<_1dcd74648_FnIns>());
}
inline jule::Bool _1dce81d82_Equal_Kind_1(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd74c86_Equal(_self_.data.as<_1dcd74648_FnIns>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_2(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd84070_Str(_self_.safe_ptr<_1dcd83bb8_Trait>());
}
inline jule::Bool _1dce81d82_Equal_Kind_2(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd8437d_Equal(_self_.data.as<_1dcd83bb8_Trait>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_3(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd867ae_Str(_self_.safe_ptr<_1dcd8644b_Enum>());
}
inline jule::Bool _1dce81d82_Equal_Kind_3(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd86abc_Equal(_self_.data.as<_1dcd8644b_Enum>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_4(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd87d76_Str(_self_.safe_ptr<_1dcd87a46_TypeEnum>());
}
inline jule::Bool _1dce81d82_Equal_Kind_4(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd88184_Equal(_self_.data.as<_1dcd87a46_TypeEnum>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_5(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd8a054_Str(_self_.safe_ptr<_1dcd89b9c_comptimeRange>());
}
inline jule::Bool _1dce81d82_Equal_Kind_5(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd8a362_Equal(_self_.data.as<_1dcd89b9c_comptimeRange>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_6(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd8aa05_Str(_self_.safe_ptr<_1dcd8a692_comptimeStructField>());
}
inline jule::Bool _1dce81d82_Equal_Kind_6(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd8ad13_Equal(_self_.data.as<_1dcd8a692_comptimeStructField>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_7(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd8c540_Str(_self_.safe_ptr<_1dcd8c1bb_comptimeStructFields>());
}
inline jule::Bool _1dce81d82_Equal_Kind_7(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd8c84d_Equal(_self_.data.as<_1dcd8c1bb_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_8(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd8da08_Str(_self_.safe_ptr<_1dcd8d695_comptimeStatic>());
}
inline jule::Bool _1dce81d82_Equal_Kind_8(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd8dd16_Equal(_self_.data.as<_1dcd8d695_comptimeStatic>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_9(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd905ba_Str(_self_.safe_ptr<_1dcd90257_comptimeStatics>());
}
inline jule::Bool _1dce81d82_Equal_Kind_9(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd908c8_Equal(_self_.data.as<_1dcd90257_comptimeStatics>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_10(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd91a0b_Str(_self_.safe_ptr<_1dcd91698_comptimeEnumField>());
}
inline jule::Bool _1dce81d82_Equal_Kind_10(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd91d19_Equal(_self_.data.as<_1dcd91698_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_11(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd92d3c_Str(_self_.safe_ptr<_1dcd928b9_comptimeEnumFields>());
}
inline jule::Bool _1dce81d82_Equal_Kind_11(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd9314a_Equal(_self_.data.as<_1dcd928b9_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_12(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd9427d_Str(_self_.safe_ptr<_1dcd93e1a_comptimeParam>());
}
inline jule::Bool _1dce81d82_Equal_Kind_12(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd9458b_Equal(_self_.data.as<_1dcd93e1a_comptimeParam>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_13(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd96329_Str(_self_.safe_ptr<_1dcd95eb6_comptimeParams>());
}
inline jule::Bool _1dce81d82_Equal_Kind_13(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd96637_Equal(_self_.data.as<_1dcd95eb6_comptimeParams>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_14(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd977e2_Str(_self_.safe_ptr<_1dcd9747e_comptimeTypeInfos>());
}
inline jule::Bool _1dce81d82_Equal_Kind_14(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd97b00_Equal(_self_.data.as<_1dcd9747e_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_15(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd98caa_Str(_self_.safe_ptr<_1dcd98947_comptimeTypeInfo>());
}
inline jule::Bool _1dce81d82_Equal_Kind_15(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd990b8_Equal(_self_.data.as<_1dcd98947_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_16(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcd9e7a5_Str(_self_.safe_ptr<_1dcd9e442_comptimeValue>());
}
inline jule::Bool _1dce81d82_Equal_Kind_16(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcd9eab3_Equal(_self_.data.as<_1dcd9e442_comptimeValue>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_17(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcda1da1_Str(_self_.safe_ptr<_1dcda1a3d_comptimeFiles>());
}
inline jule::Bool _1dce81d82_Equal_Kind_17(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcda21ae_Equal(_self_.data.as<_1dcda1a3d_comptimeFiles>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_18(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dcda3369_Str(_self_.safe_ptr<_1dcda3006_comptimeFile>());
}
inline jule::Bool _1dce81d82_Equal_Kind_18(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dcda3677_Equal(_self_.data.as<_1dcda3006_comptimeFile>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_19(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dce827de_Str(_self_.safe_ptr<_1dce82437_TypeKind>());
}
inline jule::Bool _1dce81d82_Equal_Kind_19(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dce82aec_Equal(_self_.data.as<_1dce82437_TypeKind>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_20(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dce89ebc_Str(_self_.safe_ptr<_1dce89b8c_Prim>());
}
inline jule::Bool _1dce81d82_Equal_Kind_20(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dce8a2ca_Equal(_self_.data.as<_1dce89b8c_Prim>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_21(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dce8d751_Str(_self_.safe_ptr<_1dce8d3dd_Sptr>());
}
inline jule::Bool _1dce81d82_Equal_Kind_21(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dce8da5e_Equal(_self_.data.as<_1dce8d3dd_Sptr>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_22(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dce8e2bd_Str(_self_.safe_ptr<_1dce8dd4a_Slc>());
}
inline jule::Bool _1dce81d82_Equal_Kind_22(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dce8e5cb_Equal(_self_.data.as<_1dce8dd4a_Slc>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_23(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dce8ecb3_Str(_self_.safe_ptr<_1dce8e950_Tuple>());
}
inline jule::Bool _1dce81d82_Equal_Kind_23(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dce900c1_Equal(_self_.data.as<_1dce8e950_Tuple>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_24(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dce90764_Str(_self_.safe_ptr<_1dce90401_Map>());
}
inline jule::Bool _1dce81d82_Equal_Kind_24(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dce90a72_Equal(_self_.data.as<_1dce90401_Map>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_25(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dce91358_Str(_self_.safe_ptr<_1dce90ee5_Arr>());
}
inline jule::Bool _1dce81d82_Equal_Kind_25(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dce91666_Equal(_self_.data.as<_1dce90ee5_Arr>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_26(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1dce91cb5_Str(_self_.safe_ptr<_1dce91952_Ptr>());
}
inline jule::Bool _1dce81d82_Equal_Kind_26(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1dce920c3_Equal(_self_.data.as<_1dce91952_Ptr>(), _5621_other);
}
inline jule::Str _1dce81a74_Str_Kind_27(jule::Trait<_1dce81ec5_Kind> _self_) {
	return _1c449a75a_Str(_self_.safe_ptr<_1c449a4b3_customType>());
}
inline jule::Bool _1dce81d82_Equal_Kind_27(jule::Trait<_1dce81ec5_Kind> _self_, jule::Ptr<_1dce82437_TypeKind> _5621_other) {
	return _1c449aa68_Equal(_self_.data.as<_1c449a4b3_customType>(), _5621_other);
}
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dce9dc28_SelectPackage_Lookup_0(jule::Trait<_1dcea0763_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)> _932_selector) {
	return _1dcdb5d1b_SelectPackage(_self_.safe_ptr<_1dcdb5898_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1dce05cb2_Var> _1dce9e0d0_FindVar_Lookup_0(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1dcdb61c3_FindVar(_self_.safe_ptr<_1dcdb5898_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1dce816de_TypeAlias> _1dce9e487_FindTypeAlias_Lookup_0(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1dcdb657a_FindTypeAlias(_self_.safe_ptr<_1dcdb5898_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1dcd5b641_Struct> _1dce9e83e_FindStruct_Lookup_0(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1dcdb6932_FindStruct(_self_.safe_ptr<_1dcdb5898_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1dcd71997_Fn> _1dce9ebe6_FindFn_Lookup_0(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1dcdb6cd9_FindFn(_self_.safe_ptr<_1dcdb5898_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1dcd83bb8_Trait> _1dcea0004_FindTrait_Lookup_0(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2928_ident) {
	return _1dcdb70e7_FindTrait(_self_.safe_ptr<_1dcdb5898_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1dcd8644b_Enum> _1dcea0312_FindEnum_Lookup_0(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _3327_ident) {
	return _1dcdb7405_FindEnum(_self_.safe_ptr<_1dcdb5898_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcea0620_FindTypeEnum_Lookup_0(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _3731_ident) {
	return _1dcdb7713_FindTypeEnum(_self_.safe_ptr<_1dcdb5898_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dce9dc28_SelectPackage_Lookup_1(jule::Trait<_1dcea0763_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)> _932_selector) {
	return _1dcdccb9b_SelectPackage(_self_.safe_ptr<_1dcdcc6d4_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1dce05cb2_Var> _1dce9e0d0_FindVar_Lookup_1(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1dcdcd053_FindVar(_self_.safe_ptr<_1dcdcc6d4_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1dce816de_TypeAlias> _1dce9e487_FindTypeAlias_Lookup_1(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1dcdcd40a_FindTypeAlias(_self_.safe_ptr<_1dcdcc6d4_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1dcd5b641_Struct> _1dce9e83e_FindStruct_Lookup_1(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1dcdcd7b2_FindStruct(_self_.safe_ptr<_1dcdcc6d4_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1dcd71997_Fn> _1dce9ebe6_FindFn_Lookup_1(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1dcdcdb69_FindFn(_self_.safe_ptr<_1dcdcc6d4_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1dcd83bb8_Trait> _1dcea0004_FindTrait_Lookup_1(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2928_ident) {
	return _1dcdcde77_FindTrait(_self_.safe_ptr<_1dcdcc6d4_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1dcd8644b_Enum> _1dcea0312_FindEnum_Lookup_1(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _3327_ident) {
	return _1dcdce285_FindEnum(_self_.safe_ptr<_1dcdcc6d4_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcea0620_FindTypeEnum_Lookup_1(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _3731_ident) {
	return _1dcdce593_FindTypeEnum(_self_.safe_ptr<_1dcdcc6d4_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dce9dc28_SelectPackage_Lookup_2(jule::Trait<_1dcea0763_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)> _932_selector) {
	return _1dcdd0792_SelectPackage(_self_.safe_ptr<_1dcdd031e_Package>(), _932_selector);
}
inline jule::Ptr<_1dce05cb2_Var> _1dce9e0d0_FindVar_Lookup_2(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1dcdd0b49_FindVar(_self_.safe_ptr<_1dcdd031e_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1dce816de_TypeAlias> _1dce9e487_FindTypeAlias_Lookup_2(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1dcdd1001_FindTypeAlias(_self_.safe_ptr<_1dcdd031e_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1dcd5b641_Struct> _1dce9e83e_FindStruct_Lookup_2(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1dcdd13a8_FindStruct(_self_.safe_ptr<_1dcdd031e_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1dcd71997_Fn> _1dce9ebe6_FindFn_Lookup_2(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1dcdd1760_FindFn(_self_.safe_ptr<_1dcdd031e_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1dcd83bb8_Trait> _1dcea0004_FindTrait_Lookup_2(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2928_ident) {
	return _1dcdd1a6d_FindTrait(_self_.safe_ptr<_1dcdd031e_Package>(), _2928_ident);
}
inline jule::Ptr<_1dcd8644b_Enum> _1dcea0312_FindEnum_Lookup_2(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _3327_ident) {
	return _1dcdd1d7b_FindEnum(_self_.safe_ptr<_1dcdd031e_Package>(), _3327_ident);
}
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcea0620_FindTypeEnum_Lookup_2(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _3731_ident) {
	return _1dcdd2189_FindTypeEnum(_self_.safe_ptr<_1dcdd031e_Package>(), _3731_ident);
}
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dce9dc28_SelectPackage_Lookup_3(jule::Trait<_1dcea0763_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)> _932_selector) {
	return _1dcdd5e29_SelectPackage(_self_.safe_ptr<_1dcdd59a6_Sema>(), _932_selector);
}
inline jule::Ptr<_1dce05cb2_Var> _1dce9e0d0_FindVar_Lookup_3(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1dcdd62d1_FindVar(_self_.safe_ptr<_1dcdd59a6_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1dce816de_TypeAlias> _1dce9e487_FindTypeAlias_Lookup_3(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1dcdd6688_FindTypeAlias(_self_.safe_ptr<_1dcdd59a6_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1dcd5b641_Struct> _1dce9e83e_FindStruct_Lookup_3(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1dcdd6a40_FindStruct(_self_.safe_ptr<_1dcdd59a6_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1dcd71997_Fn> _1dce9ebe6_FindFn_Lookup_3(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1dcdd6de7_FindFn(_self_.safe_ptr<_1dcdd59a6_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1dcd83bb8_Trait> _1dcea0004_FindTrait_Lookup_3(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2928_ident) {
	return _1dcdd7205_FindTrait(_self_.safe_ptr<_1dcdd59a6_Sema>(), _2928_ident);
}
inline jule::Ptr<_1dcd8644b_Enum> _1dcea0312_FindEnum_Lookup_3(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _3327_ident) {
	return _1dcdd7513_FindEnum(_self_.safe_ptr<_1dcdd59a6_Sema>(), _3327_ident);
}
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcea0620_FindTypeEnum_Lookup_3(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _3731_ident) {
	return _1dcdd7821_FindTypeEnum(_self_.safe_ptr<_1dcdd59a6_Sema>(), _3731_ident);
}
inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dce9dc28_SelectPackage_Lookup_4(jule::Trait<_1dcea0763_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)> _932_selector) {
	return _1dce50779_SelectPackage(_self_.safe_ptr<_1dce502b2_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1dce05cb2_Var> _1dce9e0d0_FindVar_Lookup_4(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1dce50b31_FindVar(_self_.safe_ptr<_1dce502b2_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1dce816de_TypeAlias> _1dce9e487_FindTypeAlias_Lookup_4(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1dce50ed8_FindTypeAlias(_self_.safe_ptr<_1dce502b2_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1dcd5b641_Struct> _1dce9e83e_FindStruct_Lookup_4(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1dce51390_FindStruct(_self_.safe_ptr<_1dce502b2_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1dcd71997_Fn> _1dce9ebe6_FindFn_Lookup_4(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1dce51747_FindFn(_self_.safe_ptr<_1dce502b2_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1dcd83bb8_Trait> _1dcea0004_FindTrait_Lookup_4(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _2928_ident) {
	return _1dce51a55_FindTrait(_self_.safe_ptr<_1dce502b2_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1dcd8644b_Enum> _1dcea0312_FindEnum_Lookup_4(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _3327_ident) {
	return _1dce51d63_FindEnum(_self_.safe_ptr<_1dce502b2_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcea0620_FindTypeEnum_Lookup_4(jule::Trait<_1dcea0763_Lookup> _self_, jule::Str _3731_ident) {
	return _1dce52171_FindTypeEnum(_self_.safe_ptr<_1dce502b2_SymbolTable>(), _3731_ident);
}
inline jule::Str _1c44cd9d0_Name_CommonFlag_0(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d43e8a83_Name(_self_.safe_ptr<_1d43e8797_Flag>());
}
inline jule::I32 _1c44cdb12_Short_CommonFlag_0(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d43e8e29_Short(_self_.safe_ptr<_1d43e8797_Flag>());
}
inline jule::Str _1c44cdcbb_What_CommonFlag_0(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d43e8bb5_What(_self_.safe_ptr<_1d43e8797_Flag>());
}
inline void _1c450d48d_Reset_CommonFlag_0(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	_1d43e8ce7_Reset(_self_.safe_ptr<_1d43e8797_Flag>());
}
inline jule::Str _1c44cd9d0_Name_CommonFlag_1(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d43ebca6_Name(_self_.safe_ptr<_1d43ec229_Flag>());
}
inline jule::I32 _1c44cdb12_Short_CommonFlag_1(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d43ec779_Short(_self_.safe_ptr<_1d43ec229_Flag>());
}
inline jule::Str _1c44cdcbb_What_CommonFlag_1(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d43ec515_What(_self_.safe_ptr<_1d43ec229_Flag>());
}
inline void _1c450d48d_Reset_CommonFlag_1(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	_1d43ec647_Reset(_self_.safe_ptr<_1d43ec229_Flag>());
}
inline jule::Str _1c44cd9d0_Name_CommonFlag_2(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d440045d_Name(_self_.safe_ptr<_1d44008d1_Flag>());
}
inline jule::I32 _1c44cdb12_Short_CommonFlag_2(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d4400e31_Short(_self_.safe_ptr<_1d44008d1_Flag>());
}
inline jule::Str _1c44cdcbb_What_CommonFlag_2(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d4400bbc_What(_self_.safe_ptr<_1d44008d1_Flag>());
}
inline void _1c450d48d_Reset_CommonFlag_2(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	_1d4400cee_Reset(_self_.safe_ptr<_1d44008d1_Flag>());
}
inline jule::Str _1c44cd9d0_Name_CommonFlag_3(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d4403b59_Name(_self_.safe_ptr<_1d44040cc_Flag>());
}
inline jule::I32 _1c44cdb12_Short_CommonFlag_3(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d440462c_Short(_self_.safe_ptr<_1d44040cc_Flag>());
}
inline jule::Str _1c44cdcbb_What_CommonFlag_3(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d44043b8_What(_self_.safe_ptr<_1d44040cc_Flag>());
}
inline void _1c450d48d_Reset_CommonFlag_3(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	_1d44044ea_Reset(_self_.safe_ptr<_1d44040cc_Flag>());
}
inline jule::Str _1c44cd9d0_Name_CommonFlag_4(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d4407311_Name(_self_.safe_ptr<_1d4407784_Flag>());
}
inline jule::I32 _1c44cdb12_Short_CommonFlag_4(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d4407cd4_Short(_self_.safe_ptr<_1d4407784_Flag>());
}
inline jule::Str _1c44cdcbb_What_CommonFlag_4(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	return _1d4407a70_What(_self_.safe_ptr<_1d4407784_Flag>());
}
inline void _1c450d48d_Reset_CommonFlag_4(jule::Trait<_1c450d5c0_CommonFlag> _self_) {
	_1d4407ba2_Reset(_self_.safe_ptr<_1d4407784_Flag>());
}


static _1dcd899c1_comptimeRangeKindMptrData _1dcd899c1_comptimeRangeKind_mptr_data[] = {
	{
		._1dcd89251_ready=_1dcd89251_ready_comptimeRangeKind_0,
		._1dcd89619_step=_1dcd89619_step_comptimeRangeKind_0,
		._1dcd8987d_len=_1dcd8987d_len_comptimeRangeKind_0,
	},
	{
		._1dcd89251_ready=_1dcd89251_ready_comptimeRangeKind_1,
		._1dcd89619_step=_1dcd89619_step_comptimeRangeKind_1,
		._1dcd8987d_len=_1dcd8987d_len_comptimeRangeKind_1,
	},
	{
		._1dcd89251_ready=_1dcd89251_ready_comptimeRangeKind_2,
		._1dcd89619_step=_1dcd89619_step_comptimeRangeKind_2,
		._1dcd8987d_len=_1dcd8987d_len_comptimeRangeKind_2,
	},
	{
		._1dcd89251_ready=_1dcd89251_ready_comptimeRangeKind_3,
		._1dcd89619_step=_1dcd89619_step_comptimeRangeKind_3,
		._1dcd8987d_len=_1dcd8987d_len_comptimeRangeKind_3,
	},
	{
		._1dcd89251_ready=_1dcd89251_ready_comptimeRangeKind_4,
		._1dcd89619_step=_1dcd89619_step_comptimeRangeKind_4,
		._1dcd8987d_len=_1dcd8987d_len_comptimeRangeKind_4,
	},
	{
		._1dcd89251_ready=_1dcd89251_ready_comptimeRangeKind_5,
		._1dcd89619_step=_1dcd89619_step_comptimeRangeKind_5,
		._1dcd8987d_len=_1dcd8987d_len_comptimeRangeKind_5,
	},
};
static _1dcdc9a33_ImporterMptrData _1dcdc9a33_Importer_mptr_data[] = {
	{
		._1dcdc8955_SetModPath=_1dcdc8955_SetModPath_Importer_0,
		._1dcdc8b97_GetModPath=_1dcdc8b97_GetModPath_Importer_0,
		._1dcdc8ea5_ModById=_1dcdc8ea5_ModById_Importer_0,
		._1dcdc92b3_GetImport=_1dcdc92b3_GetImport_Importer_0,
		._1dcdc966a_ImportPackage=_1dcdc966a_ImportPackage_Importer_0,
		._1dcdc98e0_Imported=_1dcdc98e0_Imported_Importer_0,
	},
};
static _1dce81ec5_KindMptrData _1dce81ec5_Kind_mptr_data[] = {
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_0,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_0,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_1,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_1,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_2,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_2,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_3,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_3,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_4,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_4,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_5,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_5,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_6,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_6,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_7,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_7,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_8,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_8,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_9,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_9,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_10,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_10,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_11,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_11,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_12,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_12,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_13,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_13,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_14,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_14,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_15,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_15,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_16,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_16,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_17,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_17,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_18,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_18,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_19,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_19,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_20,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_20,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_21,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_21,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_22,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_22,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_23,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_23,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_24,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_24,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_25,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_25,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_26,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_26,
	},
	{
		._1dce81a74_Str=_1dce81a74_Str_Kind_27,
		._1dce81d82_Equal=_1dce81d82_Equal_Kind_27,
	},
};
static _1dcea0763_LookupMptrData _1dcea0763_Lookup_mptr_data[] = {
	{
		._1dce9dc28_SelectPackage=_1dce9dc28_SelectPackage_Lookup_0,
		._1dce9e0d0_FindVar=_1dce9e0d0_FindVar_Lookup_0,
		._1dce9e487_FindTypeAlias=_1dce9e487_FindTypeAlias_Lookup_0,
		._1dce9e83e_FindStruct=_1dce9e83e_FindStruct_Lookup_0,
		._1dce9ebe6_FindFn=_1dce9ebe6_FindFn_Lookup_0,
		._1dcea0004_FindTrait=_1dcea0004_FindTrait_Lookup_0,
		._1dcea0312_FindEnum=_1dcea0312_FindEnum_Lookup_0,
		._1dcea0620_FindTypeEnum=_1dcea0620_FindTypeEnum_Lookup_0,
	},
	{
		._1dce9dc28_SelectPackage=_1dce9dc28_SelectPackage_Lookup_1,
		._1dce9e0d0_FindVar=_1dce9e0d0_FindVar_Lookup_1,
		._1dce9e487_FindTypeAlias=_1dce9e487_FindTypeAlias_Lookup_1,
		._1dce9e83e_FindStruct=_1dce9e83e_FindStruct_Lookup_1,
		._1dce9ebe6_FindFn=_1dce9ebe6_FindFn_Lookup_1,
		._1dcea0004_FindTrait=_1dcea0004_FindTrait_Lookup_1,
		._1dcea0312_FindEnum=_1dcea0312_FindEnum_Lookup_1,
		._1dcea0620_FindTypeEnum=_1dcea0620_FindTypeEnum_Lookup_1,
	},
	{
		._1dce9dc28_SelectPackage=_1dce9dc28_SelectPackage_Lookup_2,
		._1dce9e0d0_FindVar=_1dce9e0d0_FindVar_Lookup_2,
		._1dce9e487_FindTypeAlias=_1dce9e487_FindTypeAlias_Lookup_2,
		._1dce9e83e_FindStruct=_1dce9e83e_FindStruct_Lookup_2,
		._1dce9ebe6_FindFn=_1dce9ebe6_FindFn_Lookup_2,
		._1dcea0004_FindTrait=_1dcea0004_FindTrait_Lookup_2,
		._1dcea0312_FindEnum=_1dcea0312_FindEnum_Lookup_2,
		._1dcea0620_FindTypeEnum=_1dcea0620_FindTypeEnum_Lookup_2,
	},
	{
		._1dce9dc28_SelectPackage=_1dce9dc28_SelectPackage_Lookup_3,
		._1dce9e0d0_FindVar=_1dce9e0d0_FindVar_Lookup_3,
		._1dce9e487_FindTypeAlias=_1dce9e487_FindTypeAlias_Lookup_3,
		._1dce9e83e_FindStruct=_1dce9e83e_FindStruct_Lookup_3,
		._1dce9ebe6_FindFn=_1dce9ebe6_FindFn_Lookup_3,
		._1dcea0004_FindTrait=_1dcea0004_FindTrait_Lookup_3,
		._1dcea0312_FindEnum=_1dcea0312_FindEnum_Lookup_3,
		._1dcea0620_FindTypeEnum=_1dcea0620_FindTypeEnum_Lookup_3,
	},
	{
		._1dce9dc28_SelectPackage=_1dce9dc28_SelectPackage_Lookup_4,
		._1dce9e0d0_FindVar=_1dce9e0d0_FindVar_Lookup_4,
		._1dce9e487_FindTypeAlias=_1dce9e487_FindTypeAlias_Lookup_4,
		._1dce9e83e_FindStruct=_1dce9e83e_FindStruct_Lookup_4,
		._1dce9ebe6_FindFn=_1dce9ebe6_FindFn_Lookup_4,
		._1dcea0004_FindTrait=_1dcea0004_FindTrait_Lookup_4,
		._1dcea0312_FindEnum=_1dcea0312_FindEnum_Lookup_4,
		._1dcea0620_FindTypeEnum=_1dcea0620_FindTypeEnum_Lookup_4,
	},
};
static _1c450d5c0_CommonFlagMptrData _1c450d5c0_CommonFlag_mptr_data[] = {
	{
		._1c44cd9d0_Name=_1c44cd9d0_Name_CommonFlag_0,
		._1c44cdb12_Short=_1c44cdb12_Short_CommonFlag_0,
		._1c44cdcbb_What=_1c44cdcbb_What_CommonFlag_0,
		._1c450d48d_Reset=_1c450d48d_Reset_CommonFlag_0,
	},
	{
		._1c44cd9d0_Name=_1c44cd9d0_Name_CommonFlag_1,
		._1c44cdb12_Short=_1c44cdb12_Short_CommonFlag_1,
		._1c44cdcbb_What=_1c44cdcbb_What_CommonFlag_1,
		._1c450d48d_Reset=_1c450d48d_Reset_CommonFlag_1,
	},
	{
		._1c44cd9d0_Name=_1c44cd9d0_Name_CommonFlag_2,
		._1c44cdb12_Short=_1c44cdb12_Short_CommonFlag_2,
		._1c44cdcbb_What=_1c44cdcbb_What_CommonFlag_2,
		._1c450d48d_Reset=_1c450d48d_Reset_CommonFlag_2,
	},
	{
		._1c44cd9d0_Name=_1c44cd9d0_Name_CommonFlag_3,
		._1c44cdb12_Short=_1c44cdb12_Short_CommonFlag_3,
		._1c44cdcbb_What=_1c44cdcbb_What_CommonFlag_3,
		._1c450d48d_Reset=_1c450d48d_Reset_CommonFlag_3,
	},
	{
		._1c44cd9d0_Name=_1c44cd9d0_Name_CommonFlag_4,
		._1c44cdb12_Short=_1c44cdb12_Short_CommonFlag_4,
		._1c44cdcbb_What=_1c44cdcbb_What_CommonFlag_4,
		._1c450d48d_Reset=_1c450d48d_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd74648_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1dcd74648_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dce05cb2_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1dce05cb2_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd5e457_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1dcd5e457_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd83bb8_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1dcd83bb8_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd57906_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1dcd57906_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd52cec_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1dcd52cec_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd56b25_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1dcd56b25_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4d4ac_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1dcd4d4ac_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd572eb_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1dcd572eb_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4e48b_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1dcd4e48b_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd55184_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1dcd55184_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd56064_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1dcd56064_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24a233549_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_24a233549_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd3c446_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1dcd3c446_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb14a9_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1dcdb14a9_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdadc6a_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1dcdadc6a_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6cb08_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dce54cbc_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1dce54cbc_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6dba3_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1dcd6dba3_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6b5b8_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1dcd6b5b8_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd69e9b_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1dcd69e9b_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd69792_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1dcd69792_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd69b7c_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1dcd69b7c_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6a771_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1dcd6a771_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6ac27_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1dcd6ac27_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6c71d_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1dcd6c71d_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6c3aa_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6de8e_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1dcd6de8e_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6568e_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1dcd6568e_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdae7c6_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1dcdae7c6_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdaeab2_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1dcdaeab2_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd50778_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1dcd50778_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb0035_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1dcdb0035_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd51119_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1dcd51119_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb091a_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1dcdb091a_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb0d16_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1dcdb0d16_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb1795_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1dcdb1795_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb1b4c_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1dcdb1b4c_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb20c0_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1dcdb20c0_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd65eb9_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1dcd65eb9_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb2477_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1dcdb2477_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb2a82_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1dcdb2a82_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb3ba4_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1dcdb3ba4_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb11bd_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1dcdb11bd_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcdb4006_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1dcdb4006_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4b9b6_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1dcd4b9b6_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4100a_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1dcd4100a_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd52626_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1dcd52626_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4eea3_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1dcd4eea3_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd51878_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1dcd51878_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd491cd_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1dcd491cd_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd49585_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1dcd49585_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4a4ba_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1dcd4a4ba_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd53946_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1dcd53946_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd49871_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1dcd49871_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd514c1_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1dcd514c1_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4e843_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1dcd4e843_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4189b_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1dcd4189b_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd71997_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1dcd71997_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd5b641_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1dcd5b641_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dce816de_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1dce816de_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd8644b_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1dcd8644b_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd87a46_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1dcd87a46_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd67729_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1dcd67729_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd68010_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1dcd68010_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd68a5a_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1dcd68a5a_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd690bb_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1dcd690bb_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd63bcb_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1dcd63bcb_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd3e03b_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1dcd3e03b_ArrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd3d28d_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1dcd3d28d_SlcTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd3d865_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1dcd3d865_PtrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd3cd92_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1dcd3cd92_SptrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd3e745_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1dcd3e745_MapTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd3d579_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1dcd3d579_TupleTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd436b1_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1dcd436b1_VariadicExpr> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd65a46_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1dcd65a46_SliceExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd458a0_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1dcd458a0_FieldExprPair> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd46ecd_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1dcd46ecd_KeyValPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd42b00_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1dcd42b00_IdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd41b87_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1dcd41b87_TupleExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd693b8_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1dcd693b8_TupleExprModel> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6d4cc_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1dcd6d4cc_RuneExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dce82437_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1dce82437_TypeKind> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6876e_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1dcd6876e_ArrayExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd44393_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1dcd44393_SubIdentExpr> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd3c732_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1dcd3c732_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd43309_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1dcd43309_UnaryExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd3bd80_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1dcd3bd80_TypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd43e20_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1dcd43e20_NsSelectionExpr> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd3caa6_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1dcd3caa6_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd671da_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1dcd671da_SlicingExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd64cdc_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1dcd64cdc_CastingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4764e_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1dcd4764e_SliceExpr> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6447e_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1dcd6447e_StructLitExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd683a6_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1dcd683a6_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd66b9b_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1dcd66b9b_MapExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd66371_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1dcd66371_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd412e6_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1dcd412e6_RangeExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4203e_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1dcd4203e_LitExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd4267c_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1dcd4267c_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd47eac_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1dcd47eac_IndexingExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd485b7_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1dcd485b7_SlicingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd43a68_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1dcd43a68_CastExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd46175_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1dcd46175_StructLit> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd44e21_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1dcd44e21_FnCallExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd465e8_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1dcd465e8_BraceLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd44816_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1dcd44816_BinopExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd63824_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1dcd63824_BinopExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6478c_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1dcd6478c_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6a386_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1dcd6a386_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6b1cd_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6b8d7_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1dcd6b8d7_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6bc06_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1dcd6bc06_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6ce05_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1dcd6ce05_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6d1e1_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1dcd6d1e1_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dcd6d7da_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1dcd6d7da_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd057e69_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1dd057e69_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd058453_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1dd058453_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd056a6c_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1dd056a6c_StrAppendExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd057573_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1dd057573_PushToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd05792a_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1dd05792a_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd0566a4_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1dd0566a4_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd056d58_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1dd056d58_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd0571dd_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1dd0571dd_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd0586ea_InlineStdInternalNosafeStobs>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1dd0586ea_InlineStdInternalNosafeStobs> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _23ab10b06_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1c45149b1_OutDir = jule::Str("dist", 4);
jule::Str _1c4514c47_OutName = jule::Str("ir.cpp", 6);
jule::Str _1c4515011_Out = jule::Str();
jule::Str _2388e75d2_Compiler = jule::Str();
jule::Str _2388e8858_CompilerPath = jule::Str();
jule::Str _2388e8a78_CppStd = jule::Str("cpp17", 5);
jule::Bool _2388e8d20_Shadowing = false;
jule::Bool _2388e9095_Transpilation = false;
jule::Bool _2388e935e_Test = false;
jule::Bool _2388e9628_RC = true;
jule::Bool _2388e9a02_Safety = true;
jule::Bool _2388e9cbb_Production = false;
jule::Ptr<_23a86a71d_RangeTable> _23a805e5b__L = jule::new_ptr<_23a86a71d_RangeTable>(_23a86a71d_RangeTable{._field_R16=jule::Slice<_23a869d27_Range16>::make({_23a869d27_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_23a869d27_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_23a869d27_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_23a869d27_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_23a869d27_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_23a869d27_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_23a869d27_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_23a869d27_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_23a869d27_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_23a869d27_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_23a869d27_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_23a869d27_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_23a869d27_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_23a869d27_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_23a869d27_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_23a869d27_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_23a869d27_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_23a869d27_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_23a869d27_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_23a869d27_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_23a869d27_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_23a869d27_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_23a869d27_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_23a869d27_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_23a869d27_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_23a869d27_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_23a869d27_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_23a869d27_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_23a869d27_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_23a869d27_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_23a869d27_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_23a869d27_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_23a869d27_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_23a869d27_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_23a869d27_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_23a869d27_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_23a869d27_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_23a869d27_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_23a869d27_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_23a869d27_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_23a869d27_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_23a869d27_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_23a869d27_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_23a869d27_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_23a869d27_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_23a869d27_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_23a869d27_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_23a869d27_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_23a869d27_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_23a869d27_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_23a869d27_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_23a869d27_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_23a869d27_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_23a869d27_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_23a869d27_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_23a869d27_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_23a869d27_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_23a869d27_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_23a869d27_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_23a869d27_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_23a86a29a_Range32>::make({_23a86a29a_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_23a86a29a_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_23a86a29a_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_23a86a29a_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_23a86a29a_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_23a86a29a_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_23a86a29a_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_23a86a29a_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_23a86a29a_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_23a86a29a_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_23a86a29a_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_23a86a29a_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_23a86a29a_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_23a86a29a_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_23a86a29a_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_23a86a29a_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_23a86a29a_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_23a86a29a_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_23a86a29a_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_23a86a29a_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_23a86a29a_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_23a86a29a_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_23a86a29a_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_23a86a29a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_23a86a29a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_23a86a29a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_23a86a29a_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_23a86a29a_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_23a86a29a_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_23a86a29a_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_23a86a29a_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_23a86a71d_RangeTable> _23a806e4b__LU = jule::new_ptr<_23a86a71d_RangeTable>(_23a86a71d_RangeTable{._field_R16=jule::Slice<_23a869d27_Range16>::make({_23a869d27_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_23a869d27_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_23a869d27_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_23a869d27_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_23a869d27_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_23a869d27_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_23a869d27_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_23a869d27_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_23a869d27_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_23a869d27_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_23a869d27_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_23a869d27_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_23a869d27_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_23a869d27_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_23a869d27_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_23a869d27_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_23a869d27_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_23a86a29a_Range32>::make({_23a86a29a_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_23a86a29a_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_23a86a29a_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_23a86a29a_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_23a86a29a_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_23a86a29a_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_23a86a29a_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _23a864184__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _23a94d7e0_first = jule::Array<jule::U8,256>({});
jule::Array<_23a94dd73_acceptRange,16> _23a94e181_acceptRanges = jule::Array<_23a94dd73_acceptRange,16>({_23a94dd73_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_23a94dd73_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_23a94dd73_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_23a94dd73_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_23a94dd73_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _23a9954b3_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _23a996261_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _23aa191c4_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _23ab0be43_PathStdlib = jule::Str();
jule::Str _23ab0c163_PathExec = jule::Str();
jule::Str _23ab0c41b_PathWd = jule::Str();
jule::Str _23ab0c729_PathApi = jule::Str();
jule::Str _23ab0c9e3_Os = jule::Str("linux", 5);
jule::Str _23ab0ccac_Arch = jule::Str("amd64", 5);
jule::Array<jule::I32,5> _23ad7b27d_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _23ad7b49d_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _23ad7b79a_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _23ae21ac6_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _23ae21dc3_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_23ae2dcae_kindPair,31> _23ae2e1dd_keywords = jule::Array<_23ae2dcae_kindPair,31>({_23ae2dcae_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(5LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(5LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(5LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(8LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(3LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(9LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(11LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(12LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(13LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(14LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(15LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(16LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(18LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(20LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(22LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(23LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(24LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(25LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(26LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(27LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(28LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(29LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(30LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(31LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(32LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(33LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(34LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(35LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(36LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(38LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<_23ae2dcae_kindPair,39> _23ae2e52e_basicOps = jule::Array<_23ae2dcae_kindPair,39>({_23ae2dcae_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(21LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(10LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(4LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(7LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(19LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(6LLU)},_23ae2dcae_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<jule::U8,32> _24a1b3496__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _24a1b3a5c__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_23b6109bd_floatInfo _24a20c369_f32info = _23b6109bd_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_23b6109bd_floatInfo _24a20c677_f64info = _23b6109bd_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _24a214959_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _24a216719_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _24a217275_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _24a2175b6_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _24a21a542_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_24a21de91_leftCheat> _24a21e3c0_leftCheats = jule::Slice<_24a21de91_leftCheat>::make({_24a21de91_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_24a21de91_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_24a21de91_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_24a21de91_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_24a21de91_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_24a21de91_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_24a21de91_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_24a21de91_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_24a21de91_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_24a21de91_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_24a21de91_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_24a21de91_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_24a21de91_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_24a21de91_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_24a21de91_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_24a21de91_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_24a21de91_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_24a21de91_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_24a21de91_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_24a21de91_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_24a21de91_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_24a21de91_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_24a21de91_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_24a21de91_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_24a21de91_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_24a21de91_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_24a21de91_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_24a21de91_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_24a21de91_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_24a21de91_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_24a21de91_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_24a21de91_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_24a21de91_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_24a21de91_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_24a21de91_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_24a21de91_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_24a21de91_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_24a21de91_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_24a21de91_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_24a21de91_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_24a21de91_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_24a21de91_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_24a21de91_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_24a21de91_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_24a21de91_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_24a21de91_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_24a21de91_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_24a21de91_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_24a21de91_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_24a21de91_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_24a21de91_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_24a21de91_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_24a21de91_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_24a21de91_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_24a21de91_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_24a21de91_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_24a21de91_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_24a21de91_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_24a21de91_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_24a21de91_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_24a21de91_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _24a224d76_BitSize = 0LL;
jule::Str _24a225096_SysInt = jule::Str();
jule::Str _24a225360_SysUint = jule::Str();
jule::Slice<jule::Str> _1dcda659d_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Ptr<_1dce82437_TypeKind> _1dd046298_primVoid = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("void", 4)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd0465a6_primAny = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("any", 3)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd046870_primStr = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("str", 3)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd046b7d_primBool = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("bool", 4)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd046e47_primUintptr = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("uintptr", 7)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd047211_primUint = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("uint", 4)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd0474ca_primInt = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("int", 3)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd0478a4_primI8 = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("i8", 2)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd047b6d_primI16 = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("i16", 3)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd047e37_primI32 = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("i32", 3)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd048201_primI64 = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("i64", 3)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd0484ba_primU8 = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("u8", 2)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd048784_primU16 = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("u16", 3)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd048a4d_primU32 = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("u32", 3)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd048d17_primU64 = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("u64", 3)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd04928a_primF32 = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("f32", 3)), 20)});
jule::Ptr<_1dce82437_TypeKind> _1dd049554_primF64 = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(jule::Str("f64", 3)), 20)});
jule::Str _1de44c9bc_stdPackageInternalNosafe = jule::Str("std::internal::nosafe", 21);
jule::Map<jule::Uintptr,_1de44cdb8_stdCacheData> _1de44d2e7_stdCache = nullptr;
jule::Bool _1de44ea9b_Copy = false;
jule::Bool _1de44eda9_Deadcode = false;
jule::Bool _1de450173_Append = false;
jule::Bool _1de450481_Math = false;
jule::Bool _1de45074a_Access = false;
jule::Bool _1de450a14_Inline = false;
jule::Bool _1de450ccd_Ptr = false;
jule::Bool _1de4511a7_Cond = false;
jule::Bool _1de451471_Str = false;
jule::Bool _1de45173a_StdInternalNosafe = false;
jule::Bool _1de58d899_exprEnabled = false;
jule::Bool _1de58dab9_scopeEnabled = false;
jule::Bool _1de58dd2d_stdEnabled = false;
jule::Array<jule::U64,12> _1c44819e9_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _23b43301b_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_23a86a71d_RangeTable> _23a814651_Upper = _23a806e4b__LU;
jule::Ptr<_23a86a71d_RangeTable> _23a80d0ea_Letter = _23a805e5b__L;





std::ostream &operator<<(std::ostream &_Stream, _23a869d27_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23a86a29a_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23a86a71d_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23a94dd73_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _23a990634_index(_23a990205_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _23a9908a9_append(_23a990205_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _23a990b1d_string(_23a990205_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _23a990205_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _239897053_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_239897053_DirEntry>>> static__23a994616_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_239897053_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _2398643b6_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_239897053_DirEntry>>>(jule::Any(_239895727_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _23986465d_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1c4d37b41;
			};
			jule::Str _2517_name = _23984eacc_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_2398a6c22_Status> _2621_stat = ({
				auto except = static__2398979e3_Of(_23a991866_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_239897053_DirEntry>>>(except.error);
				} jule::Ptr<_2398a6c22_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_239897053_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_239897053_DirEntry>(_239897053_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat})); };
		}
	_iter_next_1c4d37b41:;
	}
	_iter_end_1c4d37b41:;;
	_239864905_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_239897053_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__23a994814_Create(jule::Str _3922_path) {
	if ((_239865285_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_239895727_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__23a994a23_Remove(jule::Str _5122_path) {
	if ((_23986552c_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_239895727_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2398972b7_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_2398a4626_File>> static__239896041_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _239863a9c_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2398a4626_File>>(jule::Any(_239895727_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_2398a4626_File>>(jule::Any(), static__2398a4a44_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__239896250_Remove(jule::Str _3022_path) {
	if ((_2398657c4_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_239895727_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2398966a1_Write(_2398a4626_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_239890ac9_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_239895727_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _2398969ae_Read(_2398a4626_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_23989036a_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_239895727_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_2398a4626_File> static__2398a4a44_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_2398a4626_File>(_2398a4626_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_2398a4626_File>> static__2398a4cdb_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_2398a4626_File>>(jule::Any(), ({
		auto except = static__239896041_Open(_5622_path, static_cast<jule::I64>(578LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_2398a4626_File>>(except.error);
		} jule::Ptr<_2398a4626_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2398a5083_Read(jule::Str _6820_path) {
	jule::Ptr<_2398a6c22_Status> _6913_s = ({
		auto except = static__2398979e3_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2398a6c22_Status>(nullptr);});
	});;
	if ((!(_2398a734e_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_2398a75b3_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_2398a4626_File> _7917_f = ({
		auto except = static__239896041_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_2398a4626_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _2398a622c_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_2398a75b3_Size(_6913_s.ptr())), static_cast<jule::I64>(_2398a75b3_Size(_6913_s.ptr())), 0);;
	jule::I64 _8313_n = ({
		auto except = _2398969ae_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__2398a53d5_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_2398a4626_File> _9317_f = ({
		auto except = static__239896041_Open(_9221_path, static_cast<jule::I64>(577LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_2398a4626_File>(nullptr);});
	});;
	({
		auto except = _2398966a1_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _2398a622c_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2398a6051_WriteStr(_2398a4626_File* _self_, jule::Str* _12028_data) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I64>(({
		auto except = _2398966a1_Write(_self_, _2398a2e1b_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _2398a622c_Close(_2398a4626_File* _self_) {
	if ((_2398906de_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_239895727_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _2398a4626_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_2398a6c22_Status>> static__2398979e3_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_2398a6c22_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _2398636b2_Stat((&(_1118_path[0LL])), (&(_1517_handle)));;
	if ((_1613_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2398a6c22_Status>>(jule::Any(_239895727_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_2398a6c22_Status> _2017_stat = jule::new_ptr<_2398a6c22_Status>();;
	_2017_stat.get()._field_size=_1517_handle.st_size;
	if (((_1517_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1517_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_2398a6c22_Status>>(jule::Any(), _2017_stat);;
}



inline jule::Bool _2398a70da_IsDir(_2398a6c22_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _2398a734e_IsReg(_2398a6c22_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _2398a75b3_Size(_2398a6c22_Status* _self_) {
	return (*(_self_))._field_size;;
}







std::ostream &operator<<(std::ostream &_Stream, _2398a6c22_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23ab096b0_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23aa28854_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _23ae26ea5_Prec(_23ae26b42_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U64>(6LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1c46e7d4d:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c46e8d71:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1c46e8dd7:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c46e8e5e:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1c46e8ed6:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1c46e8b51:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c46e8aeb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _23ae26b42_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _23ae2c395_Fill(_23ae2becc_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _23ae2c609_Dir(_23ae2becc_File* _self_) {
	return _23a9924c1_Dir((*(_self_))._field_Path);;
}



inline jule::Str _23ae2c86d_Name(_23ae2becc_File* _self_) {
	return _23a99214c_Base((*(_self_))._field_Path);;
}



inline jule::Str _23ae2cde0_GetRow(_23ae2becc_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3917_n = 0LL;;
	jule::I64 _4017_lineStart = 0LL;;
	jule::I64 _4117_i = 0LL;;
	for (; (_4117_i < (*(_self_))._field_Data.len()); (_4117_i)++) {
		{
			if (((*(_self_))._field_Data[_4117_i] != '\n')) {
				goto _iter_next_1c4ddbb7e;
			};
			(_3917_n)++;
			if ((_3917_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4017_lineStart, _4117_i));;
			};
			_4017_lineStart=static_cast<jule::I64>((_4117_i + 1LL));
		}
	_iter_next_1c4ddbb7e:;
	}
	_iter_end_1c4ddbb7e:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _23ae2becc_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23ae2dcae_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _23ae34d70_pushErr(_23ae34820_lex* _self_, jule::Str _44226_fmt, jule::Slice<jule::Any> _44239_args) {
	{ jule::Slice<_23aa28854_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_23ae2ea29_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44226_fmt, _44239_args)); };
}



inline void _23ae3536a_lex(_23ae34820_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_23ae3736c_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_23ae26b42_Token> _45721_token = _23ae386e2_token(_self_);;
			if ((_45721_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_23ae26b42_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_45721_token); };
			};
		}
	_iter_next_1c4e1a064:;
	}
	_iter_end_1c4e1a064:;;
}



inline jule::Str _23ae35678_id(_23ae34820_lex* _self_, jule::Slice<jule::U8>* _46622_ln) {
	if (((*(_46622_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _47014_r = 0;;
	jule::I64 _47021_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune((*(_46622_ln)));
		_47014_r = __jule_assign_result.__jule_result_arg0;
		_47021_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_47014_r != '_') && (!(_23ae2a11d_IsLetter(_47014_r))))) {
		return jule::Str();;
	};
	while ((_47021_i < (*(_46622_ln)).len())) {
		{
			jule::I32 _47618_pr = 0;;
			jule::I64 _47622_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune((*(_46622_ln)).slice(_47021_i));
				_47618_pr = __jule_assign_result.__jule_result_arg0;
				_47622_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_47618_pr != '_') && (!(_23ae2a65c_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_47618_pr)))))) && (!(_23ae2a11d_IsLetter(_47618_pr))))) {
				(*(_self_))._field_pos+=_47021_i;
				return static_cast<jule::Str>((*(_46622_ln)).slice(0LL, _47021_i));;
			};
			_47021_i+=_47622_n;
		}
	_iter_next_1c4e1d1cc:;
	}
	_iter_end_1c4e1d1cc:;;
	(*(_self_))._field_pos+=(*(_46622_ln)).len();
	return static_cast<jule::Str>((*(_46622_ln)));;
}



inline jule::Slice<jule::U8> _23ae358dc_resume(_23ae34820_lex* _self_) {
	jule::I64 _49117_i = (*(_self_))._field_pos;;
	for (; (_49117_i < (*(_self_))._field_file.get()._field_Data.len()); (_49117_i)++) {
		{
			jule::I32 _49317_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_49117_i]);;
			if (_23ae29bbc_IsSpace(_49317_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49317_r };
					
					if (_match_expr == '\n') {
						_case_begin_1c4e223ce:;
						{
							_23ae3736c_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1c4e21db2:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1c4e202ab:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1c4e21c91:;
				};
				goto _iter_next_1c4e206b8;
			};
			jule::I64 _50821_j = _49117_i;;
			for (; (_50821_j < (*(_self_))._field_file.get()._field_Data.len()); (_50821_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_50821_j] == '\n')) {
						goto _iter_end_1c4e21257;
					};
				}
			_iter_next_1c4e21257:;
			}
			_iter_end_1c4e21257:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_49117_i, _50821_j);;
		}
	_iter_next_1c4e206b8:;
	}
	_iter_end_1c4e206b8:;;
	return nullptr;;
}



inline void _23ae35b62_lexLineComment(_23ae34820_lex* _self_, jule::Ptr<_23ae26b42_Token>* _51938_token) {
	jule::I64 _52013_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52317_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_52317_r == '\n') || (_52317_r == '\r'))) {
				goto _iter_end_1c4e246cd;
			};
		}
	_iter_next_1c4e246cd:;
	}
	_iter_end_1c4e246cd:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*(_51938_token)).get()._field_Id=static_cast<jule::U64>(17LLU);
		(*(_51938_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_52013_start, (*(_self_))._field_pos));
	};
}



inline void _23ae35dd7_lexRangeComment(_23ae34820_lex* _self_, jule::Ptr<_23ae26b42_Token>* _53439_token) {
	jule::I64 _53513_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53817_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_53817_r == '\r')) {
				goto _iter_next_1c4e2766a;
			};
			if ((_53817_r == '\n')) {
				_23ae3736c_newLine(_self_);
				goto _iter_next_1c4e2766a;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_53817_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*(_53439_token)).get()._field_Id=static_cast<jule::U64>(17LLU);
					(*(_53439_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53513_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1c4e2766a:;
	}
	_iter_end_1c4e2766a:;;
	_23ae34d70_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _23ae361e5_num(_23ae34820_lex* _self_, jule::Slice<jule::U8>* _56223_txt) {
	jule::Str __jule_func_result;
	if (((*(_56223_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_23ae33346_hexNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_23ae3309e_octalNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_23ae319e8_binaryNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_23ae31751_commonNum(_56223_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _23ae36503_escapeSeq(_23ae34820_lex* _self_, jule::Slice<jule::U8>* _58429_txt) {
	jule::Str _58517_seq = jule::Str();;
	if (((*(_58429_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_58429_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1c4e3160d:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58429_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c4e31542:;
			{
				_58517_seq=_23ae3392e_bigUnicodePointEscape(_58429_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1c4e31278:;
			{
				_58517_seq=_23ae33be8_littleUnicodePointEscape(_58429_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c4e312de:;
			{
				_58517_seq=_23ae33da2_hexByteEscape(_58429_txt);
			}
		}
		else {
			_case_begin_1c4e30b3a:;
			{
				_58517_seq=_23ae34138_byteEscape(_58429_txt);
			}
		}
		_match_end_1c4e31157:;
	};
	_julec_label_end:;
	if (_58517_seq.empty()) {
		((*(_self_))._field_pos)++;
		_23ae34d70_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_58517_seq.len();
	return _58517_seq;;
}



inline jule::Str _23ae368aa_getRune(_23ae34820_lex* _self_, jule::Slice<jule::U8>* _61427_txt, jule::Bool _61440_raw) {
	if (((!(_61440_raw)) && ((*(_61427_txt))[0LL] == '\\'))) {
		return _23ae36503_escapeSeq(_self_, _61427_txt);;
	};
	jule::I32 _61814_r = 0;;
	jule::I64 _61817_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune((*(_61427_txt)));
		_61814_r = __jule_assign_result.__jule_result_arg0;
		_61817_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_61817_n;
	return jule::Str::from_rune(_61814_r);;
}



inline jule::Str _23ae36bb8_lexRune(_23ae34820_lex* _self_, jule::Slice<jule::U8>* _62327_txt) {
	jule::Str _62417_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I64 _62617_n = 0LL;;
	jule::I64 _62717_i = 1LL;;
	for (; (_62717_i < (*(_62327_txt)).len()); (_62717_i)++) {
		{
			if (((*(_62327_txt))[_62717_i] == '\r')) {
				goto _iter_next_1c4e36778;
			};
			if (((*(_62327_txt))[_62717_i] == '\n')) {
				_23ae34d70_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_23ae3736c_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _63917_part = (*(_62327_txt)).slice(_62717_i);;
			jule::Str _64017_r = _23ae368aa_getRune(_self_, &(_63917_part), false);;
			_62417_run+=_64017_r;
			(*(_self_))._field_column+=_23a951606_RuneCountStr(_64017_r);
			if (_64017_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1c4e36778;
			};
			if ((_64017_r.len() > 1LL)) {
				_62717_i+=(_64017_r.len() - 1LL);
			};
			(_62617_n)++;
		}
	_iter_next_1c4e36778:;
	}
	_iter_end_1c4e36778:;;
	if ((_62617_n == 0LL)) {
		_23ae34d70_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_62617_n > 1LL)) {
		_23ae34d70_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _62417_run;;
}



inline jule::Str _23ae36e2c_lexStr(_23ae34820_lex* _self_) {
	jule::Str _66317_s = jule::Str();;
	jule::U8 _66413_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _66613_raw = (_66413_mark == '`');;
	(_66317_s).append(_66413_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _67117_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_67117_ch == '\r')) {
				goto _iter_next_1c4e3c5b4;
			};
			if ((_67117_ch == '\n')) {
				_23ae3736c_newLine(_self_);
				if ((!(_66613_raw))) {
					_23ae34d70_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68321_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _68417_r = _23ae368aa_getRune(_self_, &(_68321_part), _66613_raw);;
			_66317_s+=_68417_r;
			(*(_self_))._field_column+=_23a951606_RuneCountStr(_68417_r);
			if ((_67117_ch == _66413_mark)) {
				goto _iter_end_1c4e3c5b4;
			};
		}
	_iter_next_1c4e3c5b4:;
	}
	_iter_end_1c4e3c5b4:;;
	return _66317_s;;
}



inline void _23ae3736c_newLine(_23ae34820_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _23ae37867_isOp(_23ae34820_lex* _self_, jule::Slice<jule::U8>* _70424_txt, jule::Str _70437_kind, jule::U64 _70448_id, jule::Ptr<_23ae26b42_Token>* _70466_t) {
	if ((!(_23ae2edae_bytesHasPrefix(_70424_txt, _70437_kind)))) {
		return false;;
	};
	(*(_70466_t)).get()._field_Kind=_70437_kind;
	(*(_70466_t)).get()._field_Id=_70448_id;
	(*(_self_))._field_pos+=_70437_kind.len();
	return true;;
}



inline jule::Bool _23ae37c1e_lexBasicOps(_23ae34820_lex* _self_, jule::Slice<jule::U8> _71430_txt, jule::Ptr<_23ae26b42_Token>* _71448_tok) {
	{
		auto expr = &(_23ae2e52e_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4e43444:;
		if (it != expr_end) {
			_23ae2dcae_kindPair *_71516_pair = it;
			{
				if (_23ae37867_isOp(_self_, &(_71430_txt), (*(_71516_pair))._field_kind, (*(_71516_pair))._field_id, _71448_tok)) {
					return true;;
				};
			}
			_iter_next_1c4e43444:;
			++it;
			goto _iter_begin_1c4e43444;
		}
		_iter_end_1c4e43444:;
	};
	return false;;
}



inline jule::Bool _23ae380c6_lexId(_23ae34820_lex* _self_, jule::Slice<jule::U8>* _72425_txt, jule::Ptr<_23ae26b42_Token>* _72443_t) {
	jule::Str _72513_lex = _23ae35678_id(_self_, _72425_txt);;
	if (_72513_lex.empty()) {
		return false;;
	};
	(*(_72443_t)).get()._field_Kind=_72513_lex;
	(*(_72443_t)).get()._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _23ae3847d_lexNum(_23ae34820_lex* _self_, jule::Slice<jule::U8>* _73426_txt, jule::Ptr<_23ae26b42_Token>* _73444_t) {
	jule::Str _73513_lex = _23ae361e5_num(_self_, _73426_txt);;
	if (_73513_lex.empty()) {
		return false;;
	};
	(*(_73444_t)).get()._field_Kind=_73513_lex;
	(*(_73444_t)).get()._field_Id=static_cast<jule::U64>(5LLU);
	return true;;
}



inline jule::Ptr<_23ae26b42_Token> _23ae386e2_token(_23ae34820_lex* _self_) {
	jule::Ptr<_23ae26b42_Token> _74617_t = jule::new_ptr<_23ae26b42_Token>(_23ae26b42_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _75113_txt = _23ae358dc_resume(_self_);;
	if ((_75113_txt == nullptr)) {
		return _74617_t;;
	};
	_74617_t.get()._field_Column=(*(_self_))._field_column;
	_74617_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_23ae3847d_lexNum(_self_, &(_75113_txt), &(_74617_t))) {
			_case_begin_1c4e49280:;
			{
				goto _match_end_1c4e486ad;
			}
		}
		else if ((_75113_txt[0LL] == '\'')) {
			_case_begin_1c4e4979c:;
			{
				_74617_t.get()._field_Kind=_23ae36bb8_lexRune(_self_, &(_75113_txt));
				_74617_t.get()._field_Id=static_cast<jule::U64>(5LLU);
				return _74617_t;;
			}
		}
		else if (((_75113_txt[0LL] == '\"') || (_75113_txt[0LL] == '`'))) {
			_case_begin_1c4e49bcb:;
			{
				_74617_t.get()._field_Kind=_23ae36e2c_lexStr(_self_);
				_74617_t.get()._field_Id=static_cast<jule::U64>(5LLU);
				return _74617_t;;
			}
		}
		else if (_23ae2edae_bytesHasPrefix(&(_75113_txt), jule::Str("//", 2))) {
			_case_begin_1c4e49c42:;
			{
				_23ae35b62_lexLineComment(_self_, &(_74617_t));
				return _74617_t;;
			}
		}
		else if (_23ae2edae_bytesHasPrefix(&(_75113_txt), jule::Str("/*", 2))) {
			_case_begin_1c4e49ca8:;
			{
				_23ae35dd7_lexRangeComment(_self_, &(_74617_t));
				return _74617_t;;
			}
		}
		else if (_23ae37867_isOp(_self_, &(_75113_txt), jule::Str("(", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _23ae37867_isOp(_self_, &(_75113_txt), jule::Str(")", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _23ae37867_isOp(_self_, &(_75113_txt), jule::Str("{", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _23ae37867_isOp(_self_, &(_75113_txt), jule::Str("}", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _23ae37867_isOp(_self_, &(_75113_txt), jule::Str("[", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _23ae37867_isOp(_self_, &(_75113_txt), jule::Str("]", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _23ae37c1e_lexBasicOps(_self_, _75113_txt, &(_74617_t))) {
			_case_begin_1c4e48724:;
			{
				goto _match_end_1c4e486ad;
			}
		}
		else if (_23ae380c6_lexId(_self_, &(_75113_txt), &(_74617_t))) {
			_case_begin_1c4e4878a:;
			{
				{
					auto expr = &(_23ae2e1dd_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c4e4e76e:;
					if (it != expr_end) {
						_23ae2dcae_kindPair *_78920_pair = it;
						{
							if (((*(_78920_pair))._field_kind == _74617_t.get()._field_Kind)) {
								_74617_t.get()._field_Id=(*(_78920_pair))._field_id;
								goto _iter_end_1c4e4e76e;
							};
						}
						_iter_next_1c4e4e76e:;
						++it;
						goto _iter_begin_1c4e4e76e;
					}
					_iter_end_1c4e4e76e:;
				};
			}
		}
		else {
			_case_begin_1c4e47d94:;
			{
				jule::I32 _79618_r = 0;;
				jule::I64 _79621_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune(_75113_txt);
					_79618_r = __jule_assign_result.__jule_result_arg0;
					_79621_sz = __jule_assign_result.__jule_result_arg1;
				});
				_23ae34d70_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79618_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79621_sz;
				return _74617_t;;
			}
		}
		_match_end_1c4e486ad:;
	};
	(*(_self_))._field_column+=_23a951606_RuneCountStr(_74617_t.get()._field_Kind);
	return _74617_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _23ae34820_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _23b6109bd_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24a20cac8_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _24a21de91_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24a216a38_set(_24a21e964_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23917_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23917_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23917_i] == '+')) {
			_case_begin_1c6074d5a:;
			{
				(_23917_i)++;
			}
		}
		else if ((_23822_s[_23917_i] == '-')) {
			_case_begin_1c6075069:;
			{
				(*(_self_))._field_neg=true;
				(_23917_i)++;
			}
		}
		_match_end_1c6074e7b:;
	};
	jule::Bool _25617_sawdot = false;;
	jule::Bool _25717_sawdigits = false;;
	for (; (_23917_i < _23822_s.len()); (_23917_i)++) {
		{
			{
				
				if ((_23822_s[_23917_i] == '_')) {
					_case_begin_1c6076a0a:;
					{
						goto _iter_next_1c6076378;
					}
				}
				else if ((_23822_s[_23917_i] == '.')) {
					_case_begin_1c6076a82:;
					{
						if (_25617_sawdot) {
							return __jule_func_result;;
						};
						_25617_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1c6076378;
					}
				}
				else if ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9'))) {
					_case_begin_1c6076b09:;
					{
						_25717_sawdigits=true;
						if (((_23822_s[_23917_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1c6076378;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23917_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23917_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1c6076378;
					}
				}
				_match_end_1c60768d9:;
			};
			goto _iter_end_1c6076378;
		}
	_iter_next_1c6076378:;
	}
	_iter_end_1c6076378:;;
	if ((!(_25717_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25617_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23917_i < _23822_s.len()) && (_24a21224d_lower(_23822_s[_23917_i]) == 'e'))) {
		(_23917_i)++;
		if ((_23917_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30221_esign = 1LL;;
		if ((_23822_s[_23917_i] == '+')) {
			(_23917_i)++;
		} else if ((_23822_s[_23917_i] == '-')) {
			(_23917_i)++;
			_30221_esign=-1LL;
		};
		if ((((_23917_i >= _23822_s.len()) || (_23822_s[_23917_i] < '0')) || (_23822_s[_23917_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31221_e = 0LL;;
		for (; ((_23917_i < _23822_s.len()) && ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9')) || (_23822_s[_23917_i] == '_'))); (_23917_i)++) {
			{
				if ((_23822_s[_23917_i] == '_')) {
					goto _iter_next_1c607c736;
				};
				if ((_31221_e < 10000LL)) {
					_31221_e=static_cast<jule::I64>((((_31221_e * 10LL) + static_cast<jule::I64>(_23822_s[_23917_i])) - '0'));
				};
			}
		_iter_next_1c607c736:;
		}
		_iter_end_1c607c736:;;
		(*(_self_))._field_dp+=(_31221_e * _30221_esign);
	};
	if ((_23917_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _24a216d46_floatBits(_24a21e964_decimal* _self_, _23b6109bd_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33317_exp = 0LL;;
	jule::U64 _33417_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_out;
	};
	_33317_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35921_n = 0LL;;
			if (((*(_self_))._field_dp >= _24a216719_powtab.len())) {
				_35921_n=27LL;
			} else {
				_35921_n=_24a216719_powtab[(*(_self_))._field_dp];
			};
			_24a22006e_shift(_self_, static_cast<jule::I64>((-(_35921_n))));
			_33317_exp+=_35921_n;
		}
	_iter_next_1c6083286:;
	}
	_iter_end_1c6083286:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36921_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _24a216719_powtab.len())) {
				_36921_n=27LL;
			} else {
				_36921_n=_24a216719_powtab[(-((*(_self_))._field_dp))];
			};
			_24a22006e_shift(_self_, _36921_n);
			_33317_exp-=_36921_n;
		}
	_iter_next_1c6084056:;
	}
	_iter_end_1c6084056:;;
	(_33317_exp)--;
	if ((_33317_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38617_n = (((*(_33229_flt))._field_bias + 1LL) - _33317_exp);;
		_24a22006e_shift(_self_, static_cast<jule::I64>((-(_38617_n))));
		_33317_exp+=_38617_n;
	};
	if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_24a22006e_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33417_mant=static_cast<jule::U64>(_24a220a53_roundedInteger(_self_));
	if ((_33417_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33417_mant>>=1LLU;
		(_33317_exp)++;
		if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_33417_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33317_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_33417_mant=0LLU;
	_33317_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _42217_bits = (_33417_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42217_bits|=(static_cast<jule::U64>(((_33317_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42217_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42217_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _24a21ece9_assign(_24a21e964_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>();;
	jule::I64 _15517_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15717_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15717_v1);
			_15217_buf[_15517_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15517_n)++;
			_15129_v=_15717_v1;
		}
	_iter_next_1c609089d:;
	}
	_iter_end_1c609089d:;;
	(*(_self_))._field_nd=0LL;
	(_15517_n)--;
	for (; (_15517_n >= 0LL); (_15517_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15517_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1c609131b:;
	}
	_iter_end_1c609131b:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_24a22114c_trim(_self_);
}



inline void _24a22006e_shift(_24a21e964_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1c609320d:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1c6093285:;
			{
				while ((_17628_k > 60LL)) {
					{
						_24a221adc_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1c6093d9b:;
				}
				_iter_end_1c6093d9b:;;
				_24a221adc_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1c609330c:;
			{
				while ((_17628_k < -60LL)) {
					{
						_24a221405_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1c6093ce1:;
				}
				_iter_end_1c6093ce1:;;
				_24a221405_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1c60930dc:;
	};
}



inline void _24a2202e4_roundDown(_24a21e964_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_24a22114c_trim(_self_);
}



inline void _24a220569_roundUp(_24a21e964_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21117_i = (_20526_nd - 1LL);;
	for (; (_21117_i >= 0LL); (_21117_i)--) {
		{
			jule::U8 _21317_c = (*(_self_))._field_d[_21117_i];;
			if ((_21317_c < '9')) {
				((*(_self_))._field_d[_21117_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21117_i + 1LL));
				return;;
			};
		}
	_iter_next_1c51cca52:;
	}
	_iter_end_1c51cca52:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _24a2207de_round(_24a21e964_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_24a221e2d_shouldRoundUp(_self_, _23224_nd)) {
		_24a220569_roundUp(_self_, _23224_nd);
	} else {
		_24a2202e4_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _24a220a53_roundedInteger(_24a21e964_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24917_i = 0LL;;
	jule::U64 _25017_n = 0LLU;;
	for (; ((_24917_i < (*(_self_))._field_dp) && (_24917_i < (*(_self_))._field_nd)); (_24917_i)++) {
		{
			_25017_n=static_cast<jule::U64>(((_25017_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24917_i] - '0'))));
		}
	_iter_next_1c51d03d4:;
	}
	_iter_end_1c51d03d4:;;
	for (; (_24917_i < (*(_self_))._field_dp); (_24917_i)++) {
		{
			_25017_n*=10LLU;
		}
	_iter_next_1c51d1dca:;
	}
	_iter_end_1c51d1dca:;;
	if (_24a221e2d_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25017_n)++;
	};
	return _25017_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _24a21e964_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_24a233549_Const> static__24a233978_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_24a233549_Const>(_24a233549_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_24a233549_Const> static__24a233c20_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_24a233549_Const>(_24a233549_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_24a233549_Const> static__24a233eb7_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_24a233549_Const>(_24a233549_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_24a233549_Const> static__24a23425e_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_24a233549_Const>(_24a233549_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_24a233549_Const> static__24a234506_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_24a233549_Const>(_24a233549_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_24a233549_Const> static__24a234704_NewNil(void) {
	return jule::new_ptr<_24a233549_Const>(_24a233549_Const{._field_data=nullptr});;
}



inline jule::I64 _24a234d42_ReadI64(_24a233549_Const* _self_) {
	if ((!(_24a2371da_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _24a2350a6_ReadU64(_24a233549_Const* _self_) {
	if ((!(_24a23744e_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _24a23531a_ReadBool(_24a233549_Const* _self_) {
	if ((!(_24a2376b3_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _24a23557e_ReadStr(_24a233549_Const* _self_) {
	if ((!(_24a237927_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _24a2357e3_ReadF64(_24a233549_Const* _self_) {
	if ((!(_24a237b8b_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _24a235a57_AsI64(_24a233549_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c525338b:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c52539eb:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c5253a62:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1c52538ca:;
			{
				return 0LL;;
			}
		}
		_match_end_1c5253732:;
	};
}



inline jule::U64 _24a235cbb_AsU64(_24a233549_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c525528e:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c5255349:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c52553b0:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1c52540e5:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c52543c0:;
	};
}



inline jule::F64 _24a236030_AsF64(_24a233549_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c525704e:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c5256a21:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c5256aba:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1c5255866:;
			{
				return 0LL;;
			}
		}
		_match_end_1c5255b41:;
	};
}



inline void _24a2362a5_SetI64(_24a233549_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _24a23652a_SetU64(_24a233549_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _24a2367a0_SetBool(_24a233549_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _24a236a25_SetStr(_24a233549_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _24a236c9a_SetF64(_24a233549_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline jule::Bool _24a2371da_IsI64(_24a233549_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c525a7c2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c525aa58:;
			{
				return false;;
			}
		}
		_match_end_1c525aa03:;
	};
}



inline jule::Bool _24a23744e_IsU64(_24a233549_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c525b41b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c525ad22:;
			{
				return false;;
			}
		}
		_match_end_1c525acbc:;
	};
}



inline jule::Bool _24a2376b3_IsBool(_24a233549_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c525bd9a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c525b7b2:;
			{
				return false;;
			}
		}
		_match_end_1c525b75c:;
	};
}



inline jule::Bool _24a237927_IsStr(_24a233549_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c525c829:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c525c241:;
			{
				return false;;
			}
		}
		_match_end_1c525c1db:;
	};
}



inline jule::Bool _24a237b8b_IsF64(_24a233549_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c525d2a8:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c525cbc0:;
			{
				return false;;
			}
		}
		_match_end_1c525cb6a:;
	};
}



inline jule::Bool _24a237e00_IsNil(_24a233549_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _24a23851b_And(_24a233549_Const* _self_, _24a233549_Const _23818_x) {
	{
		
		if ((_24a2376b3_IsBool(_self_) && _24a2376b3_IsBool(&_23818_x))) {
			_case_begin_1c5262697:;
			{
				return (_24a23531a_ReadBool(_self_) && _24a23531a_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1c5262631:;
			{
				return false;;
			}
		}
		_match_end_1c5262224:;
	};
}



inline jule::Bool _24a238829_Or(_24a233549_Const* _self_, _24a233549_Const _24917_x) {
	{
		
		if ((_24a2376b3_IsBool(_self_) && _24a2376b3_IsBool(&_24917_x))) {
			_case_begin_1c52639d9:;
			{
				return (_24a23531a_ReadBool(_self_) || _24a23531a_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1c526317b:;
			{
				return false;;
			}
		}
		_match_end_1c52630b0:;
	};
}



inline jule::Bool _24a238b37_Eq(_24a233549_Const* _self_, _24a233549_Const _26017_x) {
	{
		
		if (_24a237e00_IsNil(_self_)) {
			_case_begin_1c526539d:;
			{
				return _24a237e00_IsNil(&_26017_x);;
			}
		}
		else if (_24a2376b3_IsBool(_self_)) {
			_case_begin_1c5264d4d:;
			{
				return (_24a2376b3_IsBool(&_26017_x) && (_24a23531a_ReadBool(_self_) == _24a23531a_ReadBool(&_26017_x)));;
			}
		}
		else if (_24a237927_IsStr(_self_)) {
			_case_begin_1c5264dc5:;
			{
				return (_24a237927_IsStr(&_26017_x) && (_24a23557e_ReadStr(_self_) == _24a23557e_ReadStr(&_26017_x)));;
			}
		}
		else if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c5265117:;
			{
				return (_24a234d42_ReadI64(_self_) == _24a235a57_AsI64(&_26017_x));;
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c526517d:;
			{
				return (_24a2350a6_ReadU64(_self_) == _24a235cbb_AsU64(&_26017_x));;
			}
		}
		else if (_24a237b8b_IsF64(_self_)) {
			_case_begin_1c52651e4:;
			{
				return (_24a2357e3_ReadF64(_self_) == _24a236030_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1c5264457:;
			{
				return false;;
			}
		}
		_match_end_1c526438b:;
	};
}



inline jule::Bool _24a238e45_Lt(_24a233549_Const* _self_, _24a233549_Const _28717_x) {
	{
		
		if (_24a237927_IsStr(_self_)) {
			_case_begin_1c5268989:;
			{
				return (_24a237927_IsStr(&_28717_x) && (_24a23557e_ReadStr(_self_) < _24a23557e_ReadStr(&_28717_x)));;
			}
		}
		else if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c5268a00:;
			{
				return (_24a234d42_ReadI64(_self_) < _24a235a57_AsI64(&_28717_x));;
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c5268a77:;
			{
				return (_24a2350a6_ReadU64(_self_) < _24a235cbb_AsU64(&_28717_x));;
			}
		}
		else if (_24a237b8b_IsF64(_self_)) {
			_case_begin_1c5268aee:;
			{
				return (_24a2357e3_ReadF64(_self_) < _24a236030_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1c5265744:;
			{
				return false;;
			}
		}
		_match_end_1c5265678:;
	};
}



inline jule::Bool _24a239253_LtEq(_24a233549_Const* _self_, _24a233549_Const _31019_x) {
	{
		
		if (_24a237927_IsStr(_self_)) {
			_case_begin_1c526b64b:;
			{
				return (_24a237927_IsStr(&_31019_x) && (_24a23557e_ReadStr(_self_) <= _24a23557e_ReadStr(&_31019_x)));;
			}
		}
		else if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c526b6b2:;
			{
				return (_24a234d42_ReadI64(_self_) <= _24a235a57_AsI64(&_31019_x));;
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c526b739:;
			{
				return (_24a2350a6_ReadU64(_self_) <= _24a235cbb_AsU64(&_31019_x));;
			}
		}
		else if (_24a237b8b_IsF64(_self_)) {
			_case_begin_1c526b7b1:;
			{
				return (_24a2357e3_ReadF64(_self_) <= _24a236030_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1c5269380:;
			{
				return false;;
			}
		}
		_match_end_1c52692b4:;
	};
}



inline jule::Bool _24a239561_Gt(_24a233549_Const* _self_, _24a233549_Const _33317_x) {
	{
		
		if (_24a237927_IsStr(_self_)) {
			_case_begin_1c526e30d:;
			{
				return (_24a237927_IsStr(&_33317_x) && (_24a23557e_ReadStr(_self_) > _24a23557e_ReadStr(&_33317_x)));;
			}
		}
		else if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c526e374:;
			{
				return (_24a234d42_ReadI64(_self_) > _24a235a57_AsI64(&_33317_x));;
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c526e3eb:;
			{
				return (_24a2350a6_ReadU64(_self_) > _24a235cbb_AsU64(&_33317_x));;
			}
		}
		else if (_24a237b8b_IsF64(_self_)) {
			_case_begin_1c526e473:;
			{
				return (_24a2357e3_ReadF64(_self_) > _24a236030_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1c526c042:;
			{
				return false;;
			}
		}
		_match_end_1c526be76:;
	};
}



inline jule::Bool _24a23986e_GtEq(_24a233549_Const* _self_, _24a233549_Const _35619_x) {
	{
		
		if (_24a237927_IsStr(_self_)) {
			_case_begin_1c5271ec0:;
			{
				return (_24a237927_IsStr(&_35619_x) && (_24a23557e_ReadStr(_self_) >= _24a23557e_ReadStr(&_35619_x)));;
			}
		}
		else if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c5272036:;
			{
				return (_24a234d42_ReadI64(_self_) >= _24a235a57_AsI64(&_35619_x));;
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c52720ad:;
			{
				return (_24a2350a6_ReadU64(_self_) >= _24a235cbb_AsU64(&_35619_x));;
			}
		}
		else if (_24a237b8b_IsF64(_self_)) {
			_case_begin_1c5272135:;
			{
				return (_24a2357e3_ReadF64(_self_) >= _24a236030_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1c526ec04:;
			{
				return false;;
			}
		}
		_match_end_1c526eb38:;
	};
}



inline jule::Bool _24a239b7c_Add(_24a233549_Const* _self_, _24a233549_Const _37722_x) {
	{
		
		if (_24a237927_IsStr(_self_)) {
			_case_begin_1c5274b82:;
			{
				if ((!(_24a237927_IsStr(&_37722_x)))) {
					return false;;
				};
				_24a236a25_SetStr(_self_, (_24a23557e_ReadStr(_self_) + _24a23557e_ReadStr(&_37722_x)));
			}
		}
		else if (_24a237b8b_IsF64(_self_)) {
			_case_begin_1c5274be8:;
			{
				_24a236c9a_SetF64(_self_, static_cast<jule::F64>((_24a2357e3_ReadF64(_self_) + _24a236030_AsF64(&_37722_x))));
			}
		}
		else if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c5274c70:;
			{
				if (_24a237b8b_IsF64(&_37722_x)) {
					_24a236c9a_SetF64(_self_, static_cast<jule::F64>((_24a236030_AsF64(_self_) + _24a2357e3_ReadF64(&_37722_x))));
				} else {
					_24a2362a5_SetI64(_self_, static_cast<jule::I64>((_24a234d42_ReadI64(_self_) + _24a235a57_AsI64(&_37722_x))));
				};
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c5274ce7:;
			{
				if (_24a237b8b_IsF64(&_37722_x)) {
					_24a236c9a_SetF64(_self_, static_cast<jule::F64>((_24a236030_AsF64(_self_) + _24a2357e3_ReadF64(&_37722_x))));
				} else {
					_24a23652a_SetU64(_self_, static_cast<jule::U64>((_24a2350a6_ReadU64(_self_) + _24a235cbb_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1c52728b6:;
			{
				return false;;
			}
		}
		_match_end_1c52727ea:;
	};
	return true;;
}



inline jule::Bool _24a239e8a_Sub(_24a233549_Const* _self_, _24a233549_Const _40622_x) {
	{
		
		if (_24a237b8b_IsF64(_self_)) {
			_case_begin_1c5279acc:;
			{
				_24a236c9a_SetF64(_self_, static_cast<jule::F64>((_24a2357e3_ReadF64(_self_) - _24a236030_AsF64(&_40622_x))));
			}
		}
		else if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c5279b43:;
			{
				if (_24a237b8b_IsF64(&_40622_x)) {
					_24a236c9a_SetF64(_self_, static_cast<jule::F64>((_24a236030_AsF64(_self_) - _24a2357e3_ReadF64(&_40622_x))));
				} else {
					_24a2362a5_SetI64(_self_, static_cast<jule::I64>((_24a234d42_ReadI64(_self_) - _24a235a57_AsI64(&_40622_x))));
				};
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c5279ba9:;
			{
				if (_24a237b8b_IsF64(&_40622_x)) {
					_24a236c9a_SetF64(_self_, static_cast<jule::F64>((_24a236030_AsF64(_self_) - _24a2357e3_ReadF64(&_40622_x))));
				} else {
					_24a23652a_SetU64(_self_, static_cast<jule::U64>((_24a2350a6_ReadU64(_self_) - _24a235cbb_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1c5279406:;
			{
				return false;;
			}
		}
		_match_end_1c527933a:;
	};
	return true;;
}



inline jule::Bool _24a23a298_Mul(_24a233549_Const* _self_, _24a233549_Const _43022_x) {
	{
		
		if (_24a237b8b_IsF64(_self_)) {
			_case_begin_1c527db8b:;
			{
				_24a236c9a_SetF64(_self_, static_cast<jule::F64>((_24a2357e3_ReadF64(_self_) * _24a236030_AsF64(&_43022_x))));
			}
		}
		else if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c527dc02:;
			{
				if (_24a237b8b_IsF64(&_43022_x)) {
					_24a236c9a_SetF64(_self_, static_cast<jule::F64>((_24a236030_AsF64(_self_) * _24a2357e3_ReadF64(&_43022_x))));
				} else {
					_24a2362a5_SetI64(_self_, static_cast<jule::I64>((_24a234d42_ReadI64(_self_) * _24a235a57_AsI64(&_43022_x))));
				};
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c527dc68:;
			{
				if (_24a237b8b_IsF64(&_43022_x)) {
					_24a236c9a_SetF64(_self_, static_cast<jule::F64>((_24a236030_AsF64(_self_) * _24a2357e3_ReadF64(&_43022_x))));
				} else {
					_24a23652a_SetU64(_self_, static_cast<jule::U64>((_24a2350a6_ReadU64(_self_) * _24a235cbb_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1c527d372:;
			{
				return false;;
			}
		}
		_match_end_1c527d2a6:;
	};
	return true;;
}



inline jule::Bool _24a23a5a6_Div(_24a233549_Const* _self_, _24a233549_Const _45822_x) {
	{
		
		if (_24a237b8b_IsF64(_self_)) {
			_case_begin_1c5282c4a:;
			{
				jule::F64 _46117_l = _24a236030_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_24a236c9a_SetF64(_self_, static_cast<jule::F64>(jule::div(_24a2357e3_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c5282cb1:;
			{
				jule::F64 _46717_l = _24a236030_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_24a236c9a_SetF64(_self_, static_cast<jule::F64>(jule::div(_24a236030_AsF64(_self_),_46717_l)));
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c5282d27:;
			{
				jule::F64 _47317_l = _24a236030_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_24a236c9a_SetF64(_self_, static_cast<jule::F64>(jule::div(_24a236030_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1c5282431:;
			{
				return false;;
			}
		}
		_match_end_1c5282365:;
	};
	return true;;
}



inline jule::Bool _24a23a8b4_Mod(_24a233549_Const* _self_, _24a233549_Const _48722_x) {
	{
		
		if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c5286e4c:;
			{
				jule::I64 _49017_l = _24a235a57_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_24a2362a5_SetI64(_self_, static_cast<jule::I64>(jule::mod(_24a234d42_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c5286eb3:;
			{
				jule::U64 _49617_l = _24a235cbb_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_24a23652a_SetU64(_self_, static_cast<jule::U64>(jule::mod(_24a2350a6_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1c5286dd6:;
			{
				return false;;
			}
		}
		_match_end_1c5283520:;
	};
	return true;;
}



inline jule::Bool _24a23abc2_BitwiseAnd(_24a233549_Const* _self_, _24a233549_Const _50929_x) {
	{
		
		if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c5289d84:;
			{
				_24a2362a5_SetI64(_self_, static_cast<jule::I64>((_24a234d42_ReadI64(_self_) & _24a235a57_AsI64(&_50929_x))));
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c5289dea:;
			{
				_24a23652a_SetU64(_self_, static_cast<jule::U64>((_24a2350a6_ReadU64(_self_) & _24a235cbb_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1c5289d1d:;
			{
				return false;;
			}
		}
		_match_end_1c52889dc:;
	};
	return true;;
}



inline jule::Bool _24a23aed0_BitwiseOr(_24a233549_Const* _self_, _24a233549_Const _52328_x) {
	{
		
		if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c528bbee:;
			{
				_24a2362a5_SetI64(_self_, static_cast<jule::I64>((_24a234d42_ReadI64(_self_) | _24a235a57_AsI64(&_52328_x))));
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c528bc65:;
			{
				_24a23652a_SetU64(_self_, static_cast<jule::U64>((_24a2350a6_ReadU64(_self_) | _24a235cbb_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1c528bb88:;
			{
				return false;;
			}
		}
		_match_end_1c528bacd:;
	};
	return true;;
}



inline jule::Bool _24a23b2dd_Xor(_24a233549_Const* _self_, _24a233549_Const _53722_x) {
	{
		
		if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c528da8b:;
			{
				_24a2362a5_SetI64(_self_, static_cast<jule::I64>((_24a234d42_ReadI64(_self_) ^ _24a235a57_AsI64(&_53722_x))));
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c528db02:;
			{
				_24a23652a_SetU64(_self_, static_cast<jule::U64>((_24a2350a6_ReadU64(_self_) ^ _24a235cbb_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1c528da25:;
			{
				return false;;
			}
		}
		_match_end_1c528d96a:;
	};
	return true;;
}



inline jule::Bool _24a23b5eb_Lshift(_24a233549_Const* _self_, _24a233549_Const _55125_x) {
	{
		
		if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c5290928:;
			{
				jule::I64 _55417_l = _24a235a57_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _24a235cbb_AsU64(&_55125_x);;
					_24a2362a5_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_24a23bc6c_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c529098e:;
			{
				_24a23bc6c_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1c52908b2:;
			{
				return false;;
			}
		}
		_match_end_1c5290807:;
	};
	return true;;
}



inline jule::Bool _24a23b909_Rshift(_24a233549_Const* _self_, _24a233549_Const _57125_x) {
	{
		
		if (_24a2371da_IsI64(_self_)) {
			_case_begin_1c5293002:;
			{
				jule::I64 _57417_l = _24a235a57_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _24a235cbb_AsU64(&_57125_x);;
					_24a2362a5_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_24a23c069_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_24a23744e_IsU64(_self_)) {
			_case_begin_1c5293068:;
			{
				_24a23c069_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1c5292e8b:;
			{
				return false;;
			}
		}
		_match_end_1c5292dc0:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _24a233549_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd080d2_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd08e6d_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd09369_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3bd80_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3c446_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3c732_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3caa6_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3cd92_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3d28d_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3d579_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd3dbb7_IsUnsafe(_1dcd3d865_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3d865_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd3e38d_AutoSized(_1dcd3e03b_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3e03b_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3e745_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd3eaec_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4100a_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd412e6_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4189b_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd41b87_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd42391_IsNil(_1dcd4203e_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4203e_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4267c_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd42b00_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd43309_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd436b1_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd43a68_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd43e20_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd44393_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd44816_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd45284_Unhandled(_1dcd44e21_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1dcd454e8_Ignored(_1dcd44e21_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd44e21_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd458a0_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd46175_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd465e8_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd46ecd_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4764e_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd47eac_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd485b7_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd488a3_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd48d26_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd491cd_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd49585_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd49871_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd49e7b_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4a4ba_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4b3ab_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4b9b6_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd4c500_IsSelf(_1dcd4c18c_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4c18c_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd4d80e_IsAnon(_1dcd4d4ac_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4d4ac_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4e48b_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4e843_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd50305_IsInf(_1dcd4eea3_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd4eea3_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd50aca_IsWhileNext(_1dcd50778_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd50778_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd51119_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd514c1_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd51878_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd51ceb_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd521a3_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd52626_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd52cec_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd53270_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd53946_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd541d8_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd5465b_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd55184_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd55959_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd56064_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd562c8_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd56b25_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd572eb_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd57906_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcd5d962_FieldIns> _1dcd58dd0_instance(jule::Ptr<_1dcd58a6c_Field> _self_) {
	return jule::new_ptr<_1dcd5d962_FieldIns>(_1dcd5d962_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd58a6c_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd5a82c_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcd5e457_StructIns> _1dcd5baa3_instance(jule::Ptr<_1dcd5b641_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1dcd5e457_StructIns> _9917_ins = jule::new_ptr<_1dcd5e457_StructIns>(_1dcd5e457_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1dcd5d962_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1dce05cb2_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1dcd777b1_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c649ac0e:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> _10621_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = _9917_ins.get()._field_Statics; __jule_push_dest.push(jule::new_ptr<_1dce05cb2_Var>((*(_10621_s)))); };
			}
			_iter_next_1c649ac0e:;
			++it;
			goto _iter_begin_1c649ac0e;
		}
		_iter_end_1c649ac0e:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c649c073:;
		if (it != expr_end) {
			jule::Ptr<_1dcd58a6c_Field> _11021_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd5d962_FieldIns>> &__jule_push_dest = _9917_ins.get()._field_Fields; __jule_push_dest.push(_1dcd58dd0_instance(_11021_f)); };
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1dce83bca_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1c649c073:;
			++it;
			goto _iter_begin_1c649c073;
		}
		_iter_end_1c649c073:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1dcd71997_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c649decb:;
			if (it != expr_end) {
				jule::Ptr<_1dcd71997_Fn> _12125_f = *it;
				{
					jule::Ptr<_1dcd71997_Fn> _12225_fins = jule::new_ptr<_1dcd71997_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1dcd71997_Fn>> &__jule_push_dest = _9917_ins.get()._field_Methods; __jule_push_dest.push(_12225_fins); };
				}
				_iter_next_1c649decb:;
				++it;
				goto _iter_begin_1c649decb;
			}
			_iter_end_1c649decb:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1dcd5e457_StructIns> _1dcd5bd7d_appendInstance(_1dcd5b641_Struct* _self_, jule::Ptr<_1dcd5e457_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64a1242:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5e457_StructIns> _13921_ains = *it;
			{
				if (_1dcd6004b_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1c64a1242:;
			++it;
			goto _iter_begin_1c64a1242;
		}
		_iter_end_1c64a1242:;
	};
	{ jule::Slice<jule::Ptr<_1dcd5e457_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13338_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1dcd71997_Fn> _1dcd5c235_FindMethod(_1dcd5b641_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64a2650:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1c64a2650:;
			++it;
			goto _iter_begin_1c64a2650;
		}
		_iter_end_1c64a2650:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dce05cb2_Var> _1dcd5c543_FindStatic(_1dcd5b641_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64a2d6a:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1c64a2d6a:;
			++it;
			goto _iter_begin_1c64a2d6a;
		}
		_iter_end_1c64a2d6a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd58a6c_Field> _1dcd5c851_FindField(_1dcd5b641_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64a4652:;
		if (it != expr_end) {
			jule::Ptr<_1dcd58a6c_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1c64a4652:;
			++it;
			goto _iter_begin_1c64a4652;
		}
		_iter_end_1c64a4652:;
	};
	return nullptr;;
}



inline jule::Bool _1dcd5cb5e_IsImplements(_1dcd5b641_Struct* _self_, jule::Ptr<_1dcd83bb8_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64a5532:;
		if (it != expr_end) {
			jule::Ptr<_1dcd83bb8_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1c64a5532:;
			++it;
			goto _iter_begin_1c64a5532;
		}
		_iter_end_1c64a5532:;
	};
	return false;;
}



inline jule::Bool _1dcd5ce6c_IsDerives(_1dcd5b641_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64a5aa4:;
		if (it != expr_end) {
			jule::Ptr<_1dcd09369_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1c64a5aa4:;
			++it;
			goto _iter_begin_1c64a5aa4;
		}
		_iter_end_1c64a5aa4:;
	};
	return false;;
}



inline jule::Bool _1dcd5d27a_IsUses(_1dcd5b641_Struct* _self_, jule::Ptr<_1dcd5b641_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64a7e6e:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1c64a86de:;
				}
				_iter_end_1c64a86de:;;
			}
			_iter_next_1c64a7e6e:;
			++it;
			goto _iter_begin_1c64a7e6e;
		}
		_iter_end_1c64a7e6e:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd5b641_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd5d962_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6335c_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd63824_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd63bcb_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd640c7_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6447e_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6478c_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd64cdc_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6568e_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd65a46_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd65eb9_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd66371_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd66728_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd66b9b_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd671da_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd67729_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd68010_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd683a6_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6876e_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd68a5a_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd690bb_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd693b8_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd69792_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd69b7c_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd69e9b_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6a386_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6a771_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6ac27_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6b1cd_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6b5b8_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6b8d7_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6bc06_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6c3aa_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6c71d_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6cb08_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6ce05_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6d1e1_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6d4cc_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6d7da_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6dba3_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6de8e_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd6e951_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcd73779_ParamIns> _1dcd704ce_instance(jule::Ptr<_1dcd7015a_Param> _self_) {
	return jule::new_ptr<_1dcd73779_ParamIns>(_1dcd73779_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1dcd70743_IsSelf(_1dcd7015a_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1dcd709a7_IsRef(_1dcd7015a_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7015a_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcd71e09_IsVoid(_1dcd71997_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1dcd7216d_IsMethod(_1dcd71997_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1dcd723d2_IsEntryPoint(_1dcd71997_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1dcd72646_IsInit(_1dcd71997_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1dcd728aa_IsAnon(_1dcd71997_Fn* _self_) {
	return _23ae2967d_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1dcd72b1e_AnyVar(_1dcd71997_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1dcd74648_FnIns> _1dcd72d83_instanceForce(jule::Ptr<_1dcd71997_Fn> _self_) {
	jule::Ptr<_1dcd74648_FnIns> _10017_ins = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1dcdadc6a_Scope>(), ._field_Refers=static__1dcd777b1_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64bb1e6:;
		if (it != expr_end) {
			jule::Ptr<_1dcd7015a_Param> _10721_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd73779_ParamIns>> &__jule_push_dest = _10017_ins.get()._field_Params; __jule_push_dest.push(_1dcd704ce_instance(_10721_p)); };
			}
			_iter_next_1c64bb1e6:;
			++it;
			goto _iter_begin_1c64bb1e6;
		}
		_iter_end_1c64bb1e6:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1dcd74648_FnIns> _1dcd730e7_instance(jule::Ptr<_1dcd71997_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1dcd72d83_instanceForce(_self_);;
}



inline jule::Ptr<_1dcd74648_FnIns> _1dcd733c2_appendInstance(_1dcd71997_Fn* _self_, jule::Ptr<_1dcd74648_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1dcd74648_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1dcd74648_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64c052a:;
		if (it != expr_end) {
			jule::Ptr<_1dcd74648_FnIns> _14421_ains = *it;
			{
				if (_1dcd76051_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1c64c052a:;
			++it;
			goto _iter_begin_1c64c052a;
		}
		_iter_end_1c64c052a:;
	};
	{ jule::Slice<jule::Ptr<_1dcd74648_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd71997_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dcd73acb_Str(_1dcd73779_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_1dcd70743_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1dcd709a7_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_1dce827de_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd73779_ParamIns _Src) {
	_Stream << _1dcd73acb_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd74978_Str(_1dcd74648_FnIns* _self_) {
	;
	return _1dcd7635e_GetKindStr(_self_, false);;
}



inline jule::Bool _1dcd74c86_Equal(jule::Ptr<_1dcd74648_FnIns> _self_, jule::Ptr<_1dce82437_TypeKind> _21721_other) {
	jule::Ptr<_1dcd74648_FnIns> _21813_f = _1dce85d42_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1dcd751e8_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _1dcd751e8_EqualFn(jule::Ptr<_1dcd74648_FnIns> _self_, jule::Ptr<_1dcd74648_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1dcd71e09_IsVoid(_self_.get()._field_Decl.ptr()) != _1dcd71e09_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1dcd73779_ParamIns>,jule::Ptr<_1dcd73779_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1dcd73779_ParamIns>,jule::Ptr<_1dcd73779_ParamIns>)>([=](jule::Ptr<_1dcd73779_ParamIns> _23830_p1, jule::Ptr<_1dcd73779_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1dcd70743_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1dcd70743_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1dcd709a7_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1dcd709a7_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1dce82aec_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1c64ccc0d:;
	}
	_iter_end_1c64ccc0d:;;
	if ((!(_1dcd71e09_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1dce82aec_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1dcd75506_equalTrait(jule::Ptr<_1dcd74648_FnIns> _self_, jule::Ptr<_1dcd74648_FnIns>* _28727_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28727_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28727_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_1dcd751e8_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1dce82437_TypeKind>> _1dcd7576a_Types(_1dcd74648_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1c64d1bce:;
			{
				return nullptr;;
			}
		}
		else if ((_1dce867e3_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1c64d1c45:;
			{
				return jule::Slice<jule::Ptr<_1dce82437_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1c64d1b68:;
			{
				return _1dce867e3_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1c64d1a9c:;
	};
}



inline jule::Bool _1dcd759ce_IsBuiltin(_1dcd74648_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1dcd75c43_IsAnon(_1dcd74648_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1dcd728aa_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1dcd76051_Same(_1dcd74648_FnIns* _self_, jule::Ptr<_1dcd74648_FnIns> _33019_f) {
	if ((((*(_self_))._field_Decl != _33019_f.get()._field_Decl) || (_33019_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64d5012:;
		if (it != expr_end) {
			jule::I64 _33513_i = it - expr->begin();
			jule::Ptr<_1dce80ba5_InsGeneric> *_33516_g = it;
			{
				jule::Ptr<_1dce80ba5_InsGeneric> _33617_g2 = _33019_f.get()._field_Generics[_33513_i];;
				if ((((*(_33516_g)).get()._field_Kind.get()._field_BindIdent != _33617_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1dce82aec_Equal((*(_33516_g)).get()._field_Kind, _33617_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1c64d5012:;
			++it;
			_33513_i++;
			goto _iter_begin_1c64d5012;
		}
		_iter_end_1c64d5012:;
	};
	return true;;
}



inline jule::Str _1dcd7635e_GetKindStr(_1dcd74648_FnIns* _self_, jule::Bool _34725_ident) {
	jule::Str _34817_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34817_s).append("unsafe ", 7);
	};
	(_34817_s).append("fn", 2);
	if ((_34725_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34817_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34817_s).append("(", 1);
	jule::I64 _36113_n = (*(_self_))._field_Params.len();;
	if ((_36113_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c64d908d:;
			if (it != expr_end) {
				jule::Ptr<_1dcd73779_ParamIns> *_36320_p = it;
				{
					_34817_s+=_1dcd73acb_Str((*(_36320_p)).ptr());
					(_34817_s).append(",", 1);
				}
				_iter_next_1c64d908d:;
				++it;
				goto _iter_begin_1c64d908d;
			}
			_iter_end_1c64d908d:;
		};
		(_34817_s).mut_slice(0LL, (_34817_s.len() - 1LL));;
	};
	(_34817_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34817_s).append("!", 1);
	};
	if ((!(_1dcd71e09_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34817_s).append(":", 1);
		_34817_s+=_1dce827de_Str((*(_self_))._field_Result.ptr());
	};
	return _34817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd74648_FnIns _Src) {
	_Stream << _1dcd74978_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1dcd775a2_ReferenceStack> static__1dcd777b1_new(void) {
	return jule::new_ptr<_1dcd775a2_ReferenceStack>(_1dcd775a2_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1dcd77b8a_Len(_1dcd775a2_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1dcd77e98_At(_1dcd775a2_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1dcd7821d_Push(_1dcd775a2_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1c47db75a_Exist(_1dcd775a2_ReferenceStack* _self_, jule::Ptr<_1dcd74648_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c47dca36:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c47dca36:;
			++it;
			goto _iter_begin_1c47dca36;
		}
		_iter_end_1c47dca36:;
	};
	return false;;
}

inline jule::Bool _1c47eed78_Exist(_1dcd775a2_ReferenceStack* _self_, jule::Ptr<_1dce05cb2_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4801110:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c4801110:;
			++it;
			goto _iter_begin_1c4801110;
		}
		_iter_end_1c4801110:;
	};
	return false;;
}

inline jule::Bool _1c6bb1237_Exist(_1dcd775a2_ReferenceStack* _self_, jule::Ptr<_1dcd5e457_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6bb2513:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c6bb2513:;
			++it;
			goto _iter_begin_1c6bb2513;
		}
		_iter_end_1c6bb2513:;
	};
	return false;;
}

inline jule::Bool _1c6ae1ee2_Exist(_1dcd775a2_ReferenceStack* _self_, jule::Ptr<_1dcd83bb8_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ae3246:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c6ae3246:;
			++it;
			goto _iter_begin_1c6ae3246;
		}
		_iter_end_1c6ae3246:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd775a2_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd788d3_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1dcd7d94e_pushErr(_1dcd7d124_symbolBuilder* _self_, jule::Ptr<_23ae26b42_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_23aa28854_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1dcdd37c8_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1dcd7e136_pushSuggestion(_1dcd7d124_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1dcdd4c5d_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1dcd7e4dd_checkCppUseDeclPath(_1dcd7d124_symbolBuilder* _self_, jule::Ptr<_1dcd541d8_UseDecl>* _34539_decl, jule::Str _34555_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _23a991b0d_Ext(_34555_path);;
	if (((!(_23aa1b0d8_IsValidHeaderExt(_34613_ext))) && (!(_23aa1b380_IsValidCppExt(_34613_ext))))) {
		_1dcd7d94e_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2398a6c22_Status> _35313_info = ({
		auto except = static__2398979e3_Of(_34555_path);
		(except.ok()) ? (except.result) : ({{
			_1dcd7d94e_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_2398a6c22_Status>(nullptr);});
	});;
	if (_2398a70da_IsDir(_35313_info.ptr())) {
		_1dcd7d94e_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcd7e7b8_buildCppHeaderImport(_1dcd7d124_symbolBuilder* _self_, jule::Ptr<_1dcd541d8_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_23aa1ad30_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_23a991866_Join(jule::Slice<jule::Str>::make({_23ae2c609_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _1dcd7e4dd_checkCppUseDeclPath(_self_, _36544_decl, _36617_path);;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23a991da5_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_1dcd7d94e_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1dcdcc6d4_ImportInfo>(_1dcdcc6d4_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcd7eac6_buildStdImport(_1dcd7d124_symbolBuilder* _self_, jule::Ptr<_1dcd541d8_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_23a98cad7_Replace(_39417_path, jule::Str("::", 2), jule::Str("/", 1), -1LL);
	_39417_path=_23a991866_Join(jule::Slice<jule::Str>::make({_23ab0be43_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23a991da5_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_1dcd7d94e_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2398a6c22_Status> _40413_info = ({
		auto except = static__2398979e3_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_1dcd7d94e_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_2398a6c22_Status>(nullptr);});
	});;
	if ((!(_2398a70da_IsDir(_40413_info.ptr())))) {
		_1dcd7d94e_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _41413_i = (_23a9883c9_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_1dcdcc6d4_ImportInfo>(_1dcdcc6d4_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1dcdd031e_Package>(_1dcdd031e_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcd7edd4_buildIdentImport(jule::Ptr<_1dcd7d124_symbolBuilder> _self_, jule::Ptr<_1dcd541d8_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc8b97_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_1dcd7d94e_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1dcd7e136_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_23a98cad7_Replace(_44017_path, jule::Str("::", 2), jule::Str("/", 1), -1LL);
	_44017_path=_23a991866_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23a991da5_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_1dcd7d94e_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2398a6c22_Status> _45113_info = ({
		auto except = static__2398979e3_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_1dcd7d94e_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_2398a6c22_Status>(nullptr);});
	});;
	if ((!(_2398a70da_IsDir(_45113_info.ptr())))) {
		_1dcd7d94e_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _46113_i = (_23a9883c9_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_1dcdcc6d4_ImportInfo>(_1dcdcc6d4_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1dcdd031e_Package>(_1dcdd031e_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcd801e2_buildImport(jule::Ptr<_1dcd7d124_symbolBuilder> _self_, jule::Ptr<_1dcd541d8_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_Binded) {
			_case_begin_1c60ae0c5:;
			{
				return _1dcd7e7b8_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_1c60ae317:;
			{
				return _1dcd7eac6_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1c60ad8cc:;
			{
				return _1dcd7edd4_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1c60ad822:;
	};
}



inline jule::Bool _1dcd80500_checkDuplicateUseDecl(_1dcd7d124_symbolBuilder* _self_, jule::Ptr<_1dcdcc6d4_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dcdcc6d4_ImportInfo> _49213_lpkg = _1dce50779_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)>([=](jule::Ptr<_1dcdcc6d4_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1dcd7d94e_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1dcd7e136_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1dcd8081e_implImportSelections(_1dcd7d124_symbolBuilder* _self_, jule::Ptr<_1dcdcc6d4_ImportInfo>* _50444_imp, jule::Ptr<_1dcd541d8_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60b2a35:;
		if (it != expr_end) {
			jule::Ptr<_23ae26b42_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c60b3261:;
					if (it != expr_end) {
						jule::Ptr<_23ae26b42_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1c60b3261;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_1dcd7d94e_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_1dcd7e136_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1c60b3261;
							};
						}
						_iter_next_1c60b3261:;
						++it;
						goto _iter_begin_1c60b3261;
					}
					_iter_end_1c60b3261:;
				};
			}
			_iter_next_1c60b2a35:;
			++it;
			goto _iter_begin_1c60b2a35;
		}
		_iter_end_1c60b2a35:;
	};
}



inline jule::Str _1dcd80b2c_getAsLinkPath(jule::Ptr<_1dcd7d124_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_23a986ae2_HasPrefix(_51937_path, _23ab0be43_PathStdlib)) {
		(_51937_path).mut_slice(_23ab0be43_PathStdlib.len());;
		return (jule::Str("std", 3) + _23a98cad7_Replace(_51937_path, jule::Str("/", 1), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23a991da5_Abs(_1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc8b97_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 47LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _23a98cad7_Replace(_51937_path, jule::Str("/", 1), jule::Str("::", 2), -1LL);;
}



inline void _1dcd80ee5_pushCycleError(jule::Ptr<_1dcd7d124_symbolBuilder> _self_, jule::Ptr<_1dcd7d124_symbolBuilder>* _53335_sb, jule::Str _53355_path, jule::Str* _53371_message) {
	;
	jule::Str _53513_refersTo = _23aa28c94_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1dcd80b2c_getAsLinkPath(_self_, _23ae2c609_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1dcd80b2c_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	((*(_53371_message))).buffer.insert(0, (((_23a986372_Repeat(jule::Str(" ", 1), 7LL) + _53513_refersTo) + jule::Str("\n", 1))));;
}



inline void _1dcd813ad_pushCrossCycleError(jule::Ptr<_1dcd7d124_symbolBuilder> _self_, jule::Ptr<_1dcd7d124_symbolBuilder>* _54240_target, jule::Ptr<_1dcdcc6d4_ImportInfo>* _54265_imp, jule::Ptr<_23ae26b42_Token>* _54284_errorToken) {
	jule::Str _54317_message = jule::Str();;
	_1dcd80ee5_pushCycleError(_self_, &(_self_), (*(_54265_imp)).get()._field_Path, &(_54317_message));
	jule::Ptr<_1dcd7d124_symbolBuilder> _54717_owner = _self_.get()._field_owner;;
	jule::Ptr<_1dcd7d124_symbolBuilder> _54817_old = _self_;;
	while ((_54717_owner.get()._field_owner != nullptr)) {
		{
			_1dcd80ee5_pushCycleError(_self_, &(_54817_old.get()._field_owner), _23ae2c609_Dir(_54817_old.get()._field_table.get()._field_File.ptr()), &(_54317_message));
			if ((_54717_owner.get()._field_owner == (*(_54240_target)))) {
				_1dcd80ee5_pushCycleError(_self_, _54240_target, _23ae2c609_Dir(_54717_owner.get()._field_table.get()._field_File.ptr()), &(_54317_message));
				goto _iter_end_1c60ba3ab;
			};
			_54817_old=_54717_owner;
			_54717_owner=_54717_owner.get()._field_owner;
		}
	_iter_next_1c60ba3ab:;
	}
	_iter_end_1c60ba3ab:;;
	_1dcd7d94e_pushErr(_self_.ptr(), _54284_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_54317_message, &__jule_any_type5)}));
}



inline jule::Bool _1dcd81765_checkImportCycles(jule::Ptr<_1dcd7d124_symbolBuilder> _self_, jule::Ptr<_1dcdcc6d4_ImportInfo> _56537_imp, jule::Ptr<_1dcd541d8_UseDecl>* _56556_decl) {
	if ((_56537_imp.get()._field_Path == _23ae2c609_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1dcd7d94e_pushErr(_self_.ptr(), &((*(_56556_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1dcd80b2c_getAsLinkPath(_self_, _56537_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_23ae2c609_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1dcd813ad_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1dcd7d124_symbolBuilder> _58017_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_23ae2c609_Dir(_58017_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1dcd813ad_pushCrossCycleError(_self_, &(_58017_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	if ((_58017_owner.get()._field_owner != nullptr)) {
		_58017_owner=_58017_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1dcd81b50_checkPackageAccessibility(_1dcd7d124_symbolBuilder* _self_, jule::Ptr<_1dcd541d8_UseDecl>* _60145_decl, jule::Str* _60162_mod, jule::Str* _60173_path) {
	if (((_1dcdc9a33_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1dcdc8b97_GetModPath((*(_self_))._field_importer) != (*(_60162_mod))) && _23a98b83e_Contains((*(_60173_path)), jule::Str("internal", 8)))) {
		_1dcd7d94e_pushErr(_self_, &((*(_60145_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1dcd82018_importPackage(jule::Ptr<_1dcd7d124_symbolBuilder> _self_, jule::Ptr<_1dcdcc6d4_ImportInfo>* _60738_imp, jule::Ptr<_1dcd541d8_UseDecl>* _60761_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_60738_imp)).get()._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1dcdcc6d4_ImportInfo> _61217_port = _1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc92b3_GetImport(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path);;
	if ((_61217_port != nullptr)) {
		(*(_60738_imp)).get()._field_Package=_61217_port.get()._field_Package;
		(*(_60738_imp)).get()._field_Duplicate=true;
		jule::Str _61717_oldMod = _1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc8b97_GetModPath(_self_.get()._field_importer);;
		_1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc8955_SetModPath(_self_.get()._field_importer, _1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc8ea5_ModById(_self_.get()._field_importer, (*(_60738_imp)).get()._field_ModId));
		_1dcd81b50_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_61717_oldMod), &(_61217_port.get()._field_Path));
		_1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc8955_SetModPath(_self_.get()._field_importer, _61717_oldMod);
	} else {
		if ((!(_1dcd81765_checkImportCycles(_self_, (*(_60738_imp)), _60761_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62617_oldMod = _1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc8b97_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc8955_SetModPath(_self_.get()._field_importer, _62617_oldMod);
		});;
		if ((*(_60738_imp)).get()._field_Std) {
			_1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc8955_SetModPath(_self_.get()._field_importer, _23ab0be43_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1dcd080d2_Ast>> _63122_asts;;
		jule::Slice<_23aa28854_Log> _63132_errors;;
		({
			__jule_tuple_sx_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log __jule_assign_result = _1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc966a_ImportPackage(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path, (!((*(_60738_imp)).get()._field_Std)));
			_63122_asts = __jule_assign_result.__jule_result_arg0;
			_63132_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63132_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_63132_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1dcd81b50_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_62617_oldMod), &((*(_60738_imp)).get()._field_Path));
		{
			auto expr = &(_63122_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c60c882b:;
			if (it != expr_end) {
				jule::Ptr<_1dcd080d2_Ast> _63925_ast = *it;
				{
					jule::Ptr<_1dce502b2_SymbolTable> _64025_table = nullptr;;
					({
						__jule_tuple_x_1dce502b2_SymbolTable__jule_tuple_s_23aa28854_Log __jule_assign_result = _1dcea1478_buildSymbols(&(_63925_ast), &(_self_.get()._field_importer), _self_);
						_64025_table = __jule_assign_result.__jule_result_arg0;
						_63132_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63132_errors.len() > 0LL)) {
						(_self_.get()._field_errors).append(_63132_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>> &__jule_push_dest = (*(_60738_imp)).get()._field_Package.get()._field_Files; __jule_push_dest.push(_64025_table); };
				}
				_iter_next_1c60c882b:;
				++it;
				goto _iter_begin_1c60c882b;
			}
			_iter_end_1c60c882b:;
		};
	};
	_1dcd8081e_implImportSelections(_self_.ptr(), _60738_imp, _60761_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcd82326_importUseDecl(jule::Ptr<_1dcd7d124_symbolBuilder> _self_, jule::Ptr<_1dcd541d8_UseDecl>* _65438_decl) {
	jule::Ptr<_1dcdcc6d4_ImportInfo> _65517_imp = _1dcd801e2_buildImport(_self_, _65438_decl);;
	if ((_65517_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66117_ok = _1dcd80500_checkDuplicateUseDecl(_self_.ptr(), &(_65517_imp));;
	if ((!(_66117_ok))) {
		return nullptr;;
	};
	_66117_ok=_1dcd82018_importPackage(_self_, &(_65517_imp), _65438_decl);
	{ jule::Slice<jule::Ptr<_1dcdcc6d4_ImportInfo>> &__jule_push_dest = _self_.get()._field_table.get()._field_Imports; __jule_push_dest.push(_65517_imp); };
	if (_66117_ok) {
		_1dcdc9a33_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dcdc98e0_Imported(_self_.get()._field_importer, _65517_imp);
		return _65517_imp;;
	};
	return nullptr;;
}



inline void _1dcd82502_importUseDecls(jule::Ptr<_1dcd7d124_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60cd127:;
		if (it != expr_end) {
			jule::Ptr<_1dcd541d8_UseDecl> _67621_decl = *it;
			{
				_1dcd82326_importUseDecl(_self_, &(_67621_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1c60cd127;
				};
			}
			_iter_next_1c60cd127:;
			++it;
			goto _iter_begin_1c60cd127;
		}
		_iter_end_1c60cd127:;
	};
}



inline void _1dcd82777_appendNode(_1dcd7d124_symbolBuilder* _self_, _1dcd08e6d_Node* _68534_node) {
	{
		auto &_match_expr{ (*(_68534_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1c60ce2c1:;
			{
				{ jule::Slice<jule::Ptr<_1dcda8c10_Impl>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Impls; __jule_push_dest.push(_1dcd7cac4_buildImpl((*(_68534_node))._field_Data.cast_ptr<_1dcd57906_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1c60ce546:;
			{
				jule::Ptr<_1dce816de_TypeAlias> _69021_ta = _1dcd792b8_buildTypeAlias((*(_68534_node))._field_Data.cast_ptr<_1dcd52cec_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeAliases; __jule_push_dest.push(_69021_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1c60ce5ac:;
			{
				jule::Ptr<_1dcd5b641_Struct> _69321_srct = _1dcd79b26_buildStruct((*(_68534_node))._field_Data.cast_ptr<_1dcd56b25_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1dcd5b641_Struct>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Structs; __jule_push_dest.push(_69321_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c60ce623:;
			{
				jule::Ptr<_1dcd71997_Fn> _69621_f = _1dcd7a781_buildFn((*(_68534_node))._field_Data.cast_ptr<_1dcd4d4ac_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1dcd71997_Fn>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Funcs; __jule_push_dest.push(_69621_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c60ce689:;
			{
				jule::Ptr<_1dcd83bb8_Trait> _69921_t = _1dcd7b067_buildTrait((*(_68534_node))._field_Data.cast_ptr<_1dcd572eb_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1dcd83bb8_Trait>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Traits; __jule_push_dest.push(_69921_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c60cede8:;
			{
				jule::Ptr<_1dce05cb2_Var> _70221_v = _1dcd7c585_buildVar((*(_68534_node))._field_Data.cast_ptr<_1dcd4e48b_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_70221_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1c60cee5e:;
			{
				jule::Ptr<_1dcd8644b_Enum> _70521_e = _1dcd7ba07_buildEnum((*(_68534_node))._field_Data.cast_ptr<_1dcd55184_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1dcd8644b_Enum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Enums; __jule_push_dest.push(_70521_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1c60ceec5:;
			{
				jule::Ptr<_1dcd87a46_TypeEnum> _70821_e = _1dcd7c2dd_buildTypeEnum((*(_68534_node))._field_Data.cast_ptr<_1dcd56064_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1dcd87a46_TypeEnum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeEnums; __jule_push_dest.push(_70821_e); };
			}
		}
		else {
			_case_begin_1c60ce4d0:;
			{
				_1dcd7d94e_pushErr(_self_, &((*(_68534_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c60ce47a:;
	};
}



inline void _1dcd82953_appendNodes(_1dcd7d124_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60d6d12:;
		if (it != expr_end) {
			_1dcd08e6d_Node _71621_node = *it;
			{
				_1dcd82777_appendNode(_self_, &(_71621_node));
			}
			_iter_next_1c60d6d12:;
			++it;
			goto _iter_begin_1c60d6d12;
		}
		_iter_end_1c60d6d12:;
	};
}



inline void _1dcd82bc8_pushDirectivePass(_1dcd7d124_symbolBuilder* _self_, jule::Ptr<_1dcd09369_Directive>* _72141_d) {
	if (((*(_72141_d)).get()._field_Args.len() == 0LL)) {
		_1dcd7d94e_pushErr(_self_, &((*(_72141_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72141_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_23ae26b42_Token> _72617_arg = (*(_72141_d)).get()._field_Args[1LL];;
		_1dcd7d94e_pushErr(_self_, &(_72617_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72141_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_23ae26b42_Token> _73013_arg = (*(_72141_d)).get()._field_Args[0LL];;
	if ((_73013_arg.get()._field_Id != static_cast<jule::U64>(5LLU))) {
		_1dcd7d94e_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73013_arg.get()._field_Kind[0LL] != '\"')) {
		_1dcd7d94e_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1dcd788d3_Pass> &__jule_push_dest = (*(_self_))._field_table.get()._field_Passes; __jule_push_dest.push(_1dcd788d3_Pass{._field_Token=(*(_72141_d)).get()._field_Tag, ._field_Text=_73013_arg.get()._field_Kind.slice(1LL, (_73013_arg.get()._field_Kind.len() - 1LL))}); };
}



inline void _1dcd82da4_appendTopDirectives(_1dcd7d124_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60dd269:;
		if (it != expr_end) {
			jule::Ptr<_1dcd09369_Directive> _74821_d = *it;
			{
				{
					auto &_match_expr{ _74821_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1c60dda1c:;
						{
							_1dcd82bc8_pushDirectivePass(_self_, &(_74821_d));
						}
					}
					_match_end_1c60dd995:;
				};
			}
			_iter_next_1c60dd269:;
			++it;
			goto _iter_begin_1c60dd269;
		}
		_iter_end_1c60dd269:;
	};
}



inline void _1dcd83080_build(jule::Ptr<_1dcd7d124_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1dce502b2_SymbolTable>(_1dce502b2_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1dcd82da4_appendTopDirectives(_self_.ptr());
	_1dcd82502_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1dcd82953_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd7d124_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dcd84070_Str(_1dcd83bb8_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1dcd8437d_Equal(jule::Ptr<_1dcd83bb8_Trait> _self_, jule::Ptr<_1dce82437_TypeKind> _2621_other) {
	jule::Ptr<_1dcd83bb8_Trait> _2713_trt = _1dce8631a_Trait(_2621_other.ptr());;
	return (_self_ == _2713_trt);;
}



inline jule::Bool _1dcd84757_IsBuiltin(_1dcd83bb8_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_1dcd71997_Fn> _1dcd84a65_FindMethod(_1dcd83bb8_Trait* _self_, jule::Str _4029_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60e23a0:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_Ident == _4029_ident)) {
					return _4121_f;;
				};
			}
			_iter_next_1c60e23a0:;
			++it;
			goto _iter_begin_1c60e23a0;
		}
		_iter_end_1c60e23a0:;
	};
	return _1dcd85181_findMethodInherit(_self_, &(_4029_ident));;
}



inline jule::Ptr<_1dcd71997_Fn> _1dcd85181_findMethodInherit(_1dcd83bb8_Trait* _self_, jule::Str* _6137_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60e4a56:;
		if (it != expr_end) {
			jule::Ptr<_1dce892da_TypeSymbol> _6221_i = *it;
			{
				if ((_6221_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1c60e4a56;
				};
				jule::Ptr<_1dcd83bb8_Trait> _6621_t = _1dce8631a_Trait(_6221_i.get()._field_Kind.ptr());;
				if ((_6621_t != nullptr)) {
					jule::Ptr<_1dcd71997_Fn> _6825_f2 = _1dcd84a65_FindMethod(_6621_t.ptr(), (*(_6137_ident)));;
					if ((_6825_f2 != nullptr)) {
						return _6825_f2;;
					};
				};
			}
			_iter_next_1c60e4a56:;
			++it;
			goto _iter_begin_1c60e4a56;
		}
		_iter_end_1c60e4a56:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd83bb8_Trait _Src) {
	_Stream << _1dcd84070_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1dcd85cec_AutoExpr(_1dcd85956_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd85956_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dcd867ae_Str(_1dcd8644b_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1dcd86abc_Equal(jule::Ptr<_1dcd8644b_Enum> _self_, jule::Ptr<_1dce82437_TypeKind> _3821_other) {
	jule::Ptr<_1dcd8644b_Enum> _3913_enm = _1dce85391_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1dcd85956_EnumItem> _1dcd86eb8_FindItem(_1dcd8644b_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60e84b6:;
		if (it != expr_end) {
			jule::Ptr<_1dcd85956_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1c60e84b6:;
			++it;
			goto _iter_begin_1c60e84b6;
		}
		_iter_end_1c60e84b6:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd8644b_Enum _Src) {
	_Stream << _1dcd867ae_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd874b3_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dcd87d76_Str(_1dcd87a46_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1dcd88184_Equal(jule::Ptr<_1dcd87a46_TypeEnum> _self_, jule::Ptr<_1dce82437_TypeKind> _8021_other) {
	jule::Ptr<_1dcd87a46_TypeEnum> _8113_tenm = _1dce85605_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1dcd874b3_TypeEnumItem> _1dcd88580_FindItem(_1dcd87a46_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60ea584:;
		if (it != expr_end) {
			jule::Ptr<_1dcd874b3_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1c60ea584:;
			++it;
			goto _iter_begin_1c60ea584;
		}
		_iter_end_1c60ea584:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd87a46_TypeEnum _Src) {
	_Stream << _1dcd87d76_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd8a054_Str(_1dcd89b9c_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _1dcd8a362_Equal(jule::Ptr<_1dcd89b9c_comptimeRange> _self_, jule::Ptr<_1dce82437_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd89b9c_comptimeRange _Src) {
	_Stream << _1dcd8a054_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd8aa05_Str(_1dcd8a692_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _1dcd8ad13_Equal(jule::Ptr<_1dcd8a692_comptimeStructField> _self_, jule::Ptr<_1dce82437_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd8b2db__Name(jule::Ptr<_1dcd8a692_comptimeStructField> _self_, jule::Ptr<_1dce5683a_Eval>* _3926_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _3941_fc) {
	if (((*(_3941_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_3926_e)).ptr(), (*(_3941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _4417_constant = static__24a23425e_NewStr(_self_.get()._field_field.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd8b693__Type(jule::Ptr<_1dcd8a692_comptimeStructField> _self_, jule::Ptr<_1dce5683a_Eval>* _5230_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _5245_fc) {
	if (((*(_5245_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_5230_e)).ptr(), (*(_5245_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1dcda5091_buildComptimeTypeInfoData(&((*(_5230_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd8ba4a__Public(jule::Ptr<_1dcd8a692_comptimeStructField> _self_, jule::Ptr<_1dce5683a_Eval>* _6032_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _6047_fc) {
	if (((*(_6047_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_6032_e)).ptr(), (*(_6047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _6517_constant = static__24a233eb7_NewBool(_self_.get()._field_field.get()._field_Decl.get()._field_Public);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_6517_constant, &__jule_any_type19), ._field_Constant=_6517_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd8bd58_subIdent(jule::Ptr<_1dcd8a692_comptimeStructField> _self_, jule::Str _7328_ident) {
	{
		auto &_match_expr{ _7328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1c6105627:;
			{
				jule::Ptr<_1dcd74648_FnIns> _7621_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _7733_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _7748_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd8b2db__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_7621_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1c610568d:;
			{
				jule::Ptr<_1dcd74648_FnIns> _8321_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _8433_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _8448_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd8ba4a__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_8321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1c610545c:;
			{
				jule::Ptr<_1dcd74648_FnIns> _9021_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _9133_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _9148_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd8b693__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_9021_method));;
			}
		}
		else {
			_case_begin_1c610501c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6104dda:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd8a692_comptimeStructField _Src) {
	_Stream << _1dcd8aa05_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd8c540_Str(_1dcd8c1bb_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _1dcd8c84d_Equal(jule::Ptr<_1dcd8c1bb_comptimeStructFields> _self_, jule::Ptr<_1dce82437_TypeKind> _10921_other) {
	return false;;
}



inline void _1dcd8cc7c_ready(_1dcd8c1bb_comptimeStructFields* _self_, jule::Ptr<_1dce05cb2_Var>* _11329_keyA, jule::Ptr<_1dce05cb2_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*(_11329_keyA)).get()._field_Constant=true;
		(*(_11329_keyA)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_11329_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_11329_keyA)).get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*(_11346_keyB)).get()._field_Constant=true;
		(*(_11346_keyB)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_11346_keyB)).get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd8a692_comptimeStructField>(), 6)})});
	};
}



inline void _1dcd8d145_step(_1dcd8c1bb_comptimeStructFields* _self_, jule::I64 _13523_i, jule::Ptr<_1dce05cb2_Var>* _13536_keyA, jule::Ptr<_1dce05cb2_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		_1dce87030_comptimeStructField((*(_13553_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I64 _1dcd8d3a9_len(_1dcd8c1bb_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd8c1bb_comptimeStructFields _Src) {
	_Stream << _1dcd8c540_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd8da08_Str(_1dcd8d695_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _1dcd8dd16_Equal(jule::Ptr<_1dcd8d695_comptimeStatic> _self_, jule::Ptr<_1dce82437_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd8e2de__Name(jule::Ptr<_1dcd8d695_comptimeStatic> _self_, jule::Ptr<_1dce5683a_Eval>* _16326_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _16341_fc) {
	if (((*(_16341_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_16326_e)).ptr(), (*(_16341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _16817_constant = static__24a23425e_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_16817_constant, &__jule_any_type19), ._field_Constant=_16817_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd8e696__Type(jule::Ptr<_1dcd8d695_comptimeStatic> _self_, jule::Ptr<_1dce5683a_Eval>* _17630_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _17645_fc) {
	if (((*(_17645_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_17630_e)).ptr(), (*(_17645_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1dcda5091_buildComptimeTypeInfoData(&((*(_17630_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind.get()._field_Kind));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd8ea4d__Public(jule::Ptr<_1dcd8d695_comptimeStatic> _self_, jule::Ptr<_1dce5683a_Eval>* _18432_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _18447_fc) {
	if (((*(_18447_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_18432_e)).ptr(), (*(_18447_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _18917_constant = static__24a233eb7_NewBool(_self_.get()._field_field.get()._field_Public);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_18917_constant, &__jule_any_type19), ._field_Constant=_18917_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd8ed5b_subIdent(jule::Ptr<_1dcd8d695_comptimeStatic> _self_, jule::Str _19728_ident) {
	{
		auto &_match_expr{ _19728_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1c6117947:;
			{
				jule::Ptr<_1dcd74648_FnIns> _20021_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _20133_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _20148_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd8e2de__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_20021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1c61179ad:;
			{
				jule::Ptr<_1dcd74648_FnIns> _20721_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _20833_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _20848_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd8ea4d__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_20721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1c611776b:;
			{
				jule::Ptr<_1dcd74648_FnIns> _21421_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _21533_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _21548_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd8e696__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_21421_method));;
			}
		}
		else {
			_case_begin_1c611732b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6117271:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd8d695_comptimeStatic _Src) {
	_Stream << _1dcd8da08_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd905ba_Str(_1dcd90257_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _1dcd908c8_Equal(jule::Ptr<_1dcd90257_comptimeStatics> _self_, jule::Ptr<_1dce82437_TypeKind> _23321_other) {
	return false;;
}



inline void _1dcd90c80_ready(_1dcd90257_comptimeStatics* _self_, jule::Ptr<_1dce05cb2_Var>* _23729_keyA, jule::Ptr<_1dce05cb2_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*(_23729_keyA)).get()._field_Constant=true;
		(*(_23729_keyA)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_23729_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_23729_keyA)).get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*(_23746_keyB)).get()._field_Constant=true;
		(*(_23746_keyB)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_23746_keyB)).get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd8d695_comptimeStatic>(), 8)})});
	};
}



inline void _1dcd91148_step(_1dcd90257_comptimeStatics* _self_, jule::I64 _25923_i, jule::Ptr<_1dce05cb2_Var>* _25936_keyA, jule::Ptr<_1dce05cb2_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		_1dce886e6_comptimeStatic((*(_25953_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I64 _1dcd913ac_len(_1dcd90257_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd90257_comptimeStatics _Src) {
	_Stream << _1dcd905ba_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd91a0b_Str(_1dcd91698_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _1dcd91d19_Equal(jule::Ptr<_1dcd91698_comptimeEnumField> _self_, jule::Ptr<_1dce82437_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd922c0__Name(jule::Ptr<_1dcd91698_comptimeEnumField> _self_, jule::Ptr<_1dce5683a_Eval>* _28726_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _28741_fc) {
	if (((*(_28741_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_28726_e)).ptr(), (*(_28741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _29217_constant = static__24a23425e_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_29217_constant, &__jule_any_type19), ._field_Constant=_29217_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd925cd_subIdent(jule::Ptr<_1dcd91698_comptimeEnumField> _self_, jule::Str _30028_ident) {
	{
		auto &_match_expr{ _30028_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1c61259aa:;
			{
				jule::Ptr<_1dcd74648_FnIns> _30321_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _30433_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _30448_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd922c0__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_30321_method));;
			}
		}
		else {
			_case_begin_1c6125acb:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6125a21:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd91698_comptimeEnumField _Src) {
	_Stream << _1dcd91a0b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd92d3c_Str(_1dcd928b9_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _1dcd9314a_Equal(jule::Ptr<_1dcd928b9_comptimeEnumFields> _self_, jule::Ptr<_1dce82437_TypeKind> _32221_other) {
	return false;;
}



inline void _1dcd93502_ready(_1dcd928b9_comptimeEnumFields* _self_, jule::Ptr<_1dce05cb2_Var>* _32629_keyA, jule::Ptr<_1dce05cb2_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*(_32629_keyA)).get()._field_Constant=true;
		(*(_32629_keyA)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_32629_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_32629_keyA)).get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*(_32646_keyB)).get()._field_Constant=true;
		(*(_32646_keyB)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_32646_keyB)).get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd91698_comptimeEnumField>(), 10)})});
	};
}



inline void _1dcd938ba_step(_1dcd928b9_comptimeEnumFields* _self_, jule::I64 _34823_i, jule::Ptr<_1dce05cb2_Var>* _34836_keyA, jule::Ptr<_1dce05cb2_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		_1dce87508_comptimeEnumField((*(_34853_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I64 _1dcd93b2e_len(_1dcd928b9_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd928b9_comptimeEnumFields _Src) {
	_Stream << _1dcd92d3c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd9427d_Str(_1dcd93e1a_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _1dcd9458b_Equal(jule::Ptr<_1dcd93e1a_comptimeParam> _self_, jule::Ptr<_1dce82437_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd94a75__Name(jule::Ptr<_1dcd93e1a_comptimeParam> _self_, jule::Ptr<_1dce5683a_Eval>* _37626_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _37641_fc) {
	if (((*(_37641_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_37626_e)).ptr(), (*(_37641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _38117_constant = static__24a23425e_NewStr(_self_.get()._field_param.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_38117_constant, &__jule_any_type19), ._field_Constant=_38117_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd94e2c__Type(jule::Ptr<_1dcd93e1a_comptimeParam> _self_, jule::Ptr<_1dce5683a_Eval>* _38930_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _38945_fc) {
	if (((*(_38945_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_38930_e)).ptr(), (*(_38945_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1dcda5091_buildComptimeTypeInfoData(&((*(_38930_e)).get()._field_s), &(_self_.get()._field_param.get()._field_Kind));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd952d4__Variadic(jule::Ptr<_1dcd93e1a_comptimeParam> _self_, jule::Ptr<_1dce5683a_Eval>* _39734_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _39749_fc) {
	if (((*(_39749_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_39734_e)).ptr(), (*(_39749_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _40217_constant = static__24a233eb7_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Variadic);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_40217_constant, &__jule_any_type19), ._field_Constant=_40217_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9568b__Reference(jule::Ptr<_1dcd93e1a_comptimeParam> _self_, jule::Ptr<_1dce5683a_Eval>* _41035_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _41050_fc) {
	if (((*(_41050_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_41035_e)).ptr(), (*(_41050_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _41517_constant = static__24a233eb7_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Reference);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_41517_constant, &__jule_any_type19), ._field_Constant=_41517_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd95999_subIdent(jule::Ptr<_1dcd93e1a_comptimeParam> _self_, jule::Str _42328_ident) {
	{
		auto &_match_expr{ _42328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1c6136acb:;
			{
				jule::Ptr<_1dcd74648_FnIns> _42621_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _42733_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _42748_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd94a75__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_42621_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_1c6136b42:;
			{
				jule::Ptr<_1dcd74648_FnIns> _43321_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _43433_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _43448_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd952d4__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_43321_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_1c6136911:;
			{
				jule::Ptr<_1dcd74648_FnIns> _44021_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _44133_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _44148_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9568b__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_44021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1c6136977:;
			{
				jule::Ptr<_1dcd74648_FnIns> _44721_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _44833_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _44848_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd94e2c__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_44721_method));;
			}
		}
		else {
			_case_begin_1c61364c1:;
			{
				return nullptr;;
			}
		}
		_match_end_1c613638e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd93e1a_comptimeParam _Src) {
	_Stream << _1dcd9427d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd96329_Str(_1dcd95eb6_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _1dcd96637_Equal(jule::Ptr<_1dcd95eb6_comptimeParams> _self_, jule::Ptr<_1dce82437_TypeKind> _46621_other) {
	return false;;
}



inline void _1dcd96a66_ready(_1dcd95eb6_comptimeParams* _self_, jule::Ptr<_1dce05cb2_Var>* _47029_keyA, jule::Ptr<_1dce05cb2_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*(_47029_keyA)).get()._field_Constant=true;
		(*(_47029_keyA)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_47029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_47029_keyA)).get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*(_47046_keyB)).get()._field_Constant=true;
		(*(_47046_keyB)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_47046_keyB)).get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd93e1a_comptimeParam>(), 12)})});
	};
}



inline void _1dcd96e2e_step(_1dcd95eb6_comptimeParams* _self_, jule::I64 _49223_i, jule::Ptr<_1dce05cb2_Var>* _49236_keyA, jule::Ptr<_1dce05cb2_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		_1dce879d1_comptimeParam((*(_49253_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I64 _1dcd97193_len(_1dcd95eb6_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd95eb6_comptimeParams _Src) {
	_Stream << _1dcd96329_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd977e2_Str(_1dcd9747e_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _1dcd97b00_Equal(jule::Ptr<_1dcd9747e_comptimeTypeInfos> _self_, jule::Ptr<_1dce82437_TypeKind> _51621_other) {
	return false;;
}



inline void _1dcd9802e_ready(_1dcd9747e_comptimeTypeInfos* _self_, jule::Ptr<_1dce05cb2_Var>* _52029_keyA, jule::Ptr<_1dce05cb2_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*(_52029_keyA)).get()._field_Constant=true;
		(*(_52029_keyA)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_52029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_52029_keyA)).get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*(_52046_keyB)).get()._field_Constant=true;
		(*(_52046_keyB)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_52046_keyB)).get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd98947_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1dcd983e7_step(_1dcd9747e_comptimeTypeInfos* _self_, jule::I64 _54223_i, jule::Ptr<_1dce05cb2_Var>* _54236_keyA, jule::Ptr<_1dce05cb2_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*(_54253_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1dce81ec5_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I64 _1dcd9865b_len(_1dcd9747e_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd9747e_comptimeTypeInfos _Src) {
	_Stream << _1dcd977e2_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd98caa_Str(_1dcd98947_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _1dce827de_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _1dcd990b8_Equal(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce82437_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd996b2__Str(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _57025_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _57040_fc) {
	if (((*(_57040_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_57025_e)).ptr(), (*(_57040_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _57517_constant = static__24a23425e_NewStr(_1dce827de_Str(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_57517_constant, &__jule_any_type19), ._field_Constant=_57517_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd99a69__Kind(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _58330_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _58345_fc) {
	if (((*(_58345_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_58330_e)).ptr(), (*(_58345_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dcd8644b_Enum> _58817_enm = _1dcdce285_FindEnum(_1dcda4c2d_findComptimePackage(&((*(_58330_e)).get()._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_1dcd85956_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1dce83702_Void(_self_.get()._field_base.ptr())) {
			_case_begin_1c614e8a2:;
			{
				_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_1dce860a6_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c614e9c3:;
			{
				_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_1dce8631a_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c614e6c6:;
			{
				_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_1dce8512c_Ptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c614e73c:;
			{
				if (_1dce92425_IsUnsafe(_1dce8512c_Ptr(_self_.get()._field_base.ptr()).ptr())) {
					_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_1dce84db8_Sptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c6150045:;
			{
				_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_1dce85391_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c61500ab:;
			{
				_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_1dce8657e_Map(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c6150122:;
			{
				_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_1dce85acd_Slc(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c6150188:;
			{
				_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_1dce85869_Arr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c61501ee:;
			{
				_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_1dce85d42_Fn(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c6150265:;
			{
				_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_1dce867e3_Tup(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c61502cb:;
			{
				_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_1dce84b54_Prim(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c6150342:;
			{
				jule::Ptr<_1dce89b8c_Prim> _61817_prim = _1dce84b54_Prim(_self_.get()._field_base.ptr());;
				{
					
					if (_1dce8d102_IsAny(_61817_prim.ptr())) {
						_case_begin_1c6157cc8:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_1dce8cb29_IsBool(_61817_prim.ptr())) {
						_case_begin_1c615848d:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_1dce8cd8d_IsStr(_61817_prim.ptr())) {
						_case_begin_1c6158724:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_1dce8be14_IsF32(_61817_prim.ptr())) {
						_case_begin_1c6158c96:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_1dce8c178_IsF64(_61817_prim.ptr())) {
						_case_begin_1c6158d0c:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_1dce8a9b2_IsI8(_61817_prim.ptr())) {
						_case_begin_1c6158d73:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_1dce8ac26_IsI16(_61817_prim.ptr())) {
						_case_begin_1c6158dd9:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_1dce8ae8a_IsI32(_61817_prim.ptr())) {
						_case_begin_1c6158e50:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_1dce8b1ee_IsI64(_61817_prim.ptr())) {
						_case_begin_1c6158eb6:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_1dce8b463_IsU8(_61817_prim.ptr())) {
						_case_begin_1c615902c:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_1dce8b6c7_IsU16(_61817_prim.ptr())) {
						_case_begin_1c6159093:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_1dce8b93b_IsU32(_61817_prim.ptr())) {
						_case_begin_1c6159109:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_1dce8bba0_IsU64(_61817_prim.ptr())) {
						_case_begin_1c6159170:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_1dce8c3dc_IsInt(_61817_prim.ptr())) {
						_case_begin_1c61591d6:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_1dce8c651_IsUint(_61817_prim.ptr())) {
						_case_begin_1c615924c:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_1dce8c8b5_IsUintptr(_61817_prim.ptr())) {
						_case_begin_1c61592c4:;
						{
							_58917_item=_1dcd86eb8_FindItem(_58817_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_1c61582e5:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1dce827de_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1c615827e:;
				};
			}
		}
		else {
			_case_begin_1c614e572:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1dce827de_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1c614e51c:;
	};
	return _1dce7ece7_evalEnumStatic(&(_58817_enm), &(_58917_item));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd99e21__Bits(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _66130_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _66145_fc) {
	if (((*(_66145_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dce89b8c_Prim> _66613_prim = _1dce84b54_Prim(_self_.get()._field_base.ptr());;
	if ((_66613_prim == nullptr)) {
		_1dce56d46_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _67113_n = _24a225cde_BitsizeOf(_66613_prim.get()._field_Kind);;
	if ((_67113_n == -1LL)) {
		_1dce56d46_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _67617_constant = static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67113_n)));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_67617_constant, &__jule_any_type19), ._field_Constant=_67617_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9a2c8__Elem(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _68430_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _68445_fc) {
	if (((*(_68445_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dce91952_Ptr> _68917_ptr = _1dce8512c_Ptr(_self_.get()._field_base.ptr());;
	if ((_68917_ptr != nullptr)) {
		if (_1dce92425_IsUnsafe(_68917_ptr.ptr())) {
			_1dce56d46_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		return _1dcda5091_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_68917_ptr.get()._field_Elem));;
	};
	jule::Ptr<_1dce8d3dd_Sptr> _69717_sptr = _1dce84db8_Sptr(_self_.get()._field_base.ptr());;
	if ((_69717_sptr != nullptr)) {
		return _1dcda5091_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_69717_sptr.get()._field_Elem));;
	};
	jule::Ptr<_1dce8dd4a_Slc> _70117_slice = _1dce85acd_Slc(_self_.get()._field_base.ptr());;
	if ((_70117_slice != nullptr)) {
		return _1dcda5091_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70117_slice.get()._field_Elem));;
	};
	jule::Ptr<_1dce90ee5_Arr> _70517_array = _1dce85869_Arr(_self_.get()._field_base.ptr());;
	if ((_70517_array != nullptr)) {
		return _1dcda5091_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70517_array.get()._field_Elem));;
	};
	jule::Ptr<_1dcd8644b_Enum> _70917_enm = _1dce85391_Enum(_self_.get()._field_base.ptr());;
	if ((_70917_enm != nullptr)) {
		return _1dcda5091_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70917_enm.get()._field_Kind.get()._field_Kind));;
	};
	_1dce56d46_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9a680__Size(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _71730_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _71745_fc) {
	if (((*(_71745_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dce90ee5_Arr> _72217_arr = _1dce85869_Arr(_self_.get()._field_base.ptr());;
	if ((_72217_arr == nullptr)) {
		_1dce56d46_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _72717_constant = static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_72217_arr.get()._field_N)));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd0474ca_primInt, ._field_Model=jule::Any(_72717_constant, &__jule_any_type19), ._field_Constant=_72717_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9aa37__Key(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _73529_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _73544_fc) {
	if (((*(_73544_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dce90401_Map> _74017_m = _1dce8657e_Map(_self_.get()._field_base.ptr());;
	if ((_74017_m == nullptr)) {
		_1dce56d46_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1dcda5091_buildComptimeTypeInfoData(&((*(_73529_e)).get()._field_s), &(_74017_m.get()._field_Key));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9adde__Value(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _74831_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _74846_fc) {
	if (((*(_74846_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dce90401_Map> _75317_m = _1dce8657e_Map(_self_.get()._field_base.ptr());;
	if ((_75317_m == nullptr)) {
		_1dce56d46_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1dcda5091_buildComptimeTypeInfoData(&((*(_74831_e)).get()._field_s), &(_75317_m.get()._field_Val));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9b296__Fields(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _76132_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _76147_fc) {
	if (((*(_76147_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _76617_s = _1dce860a6_Struct(_self_.get()._field_base.ptr());;
	if ((_76617_s != nullptr)) {
		return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd8c1bb_comptimeStructFields>(_1dcd8c1bb_comptimeStructFields{._field_fields=_76617_s.get()._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1dcd8644b_Enum> _77617_enm = _1dce85391_Enum(_self_.get()._field_base.ptr());;
	if ((_77617_enm != nullptr)) {
		return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd928b9_comptimeEnumFields>(_1dcd928b9_comptimeEnumFields{._field_fields=_77617_enm.get()._field_Items}), 11)}), });;
	};
	_1dce56d46_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9b64d__Statics(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _79033_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _79048_fc) {
	if (((*(_79048_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _79517_s = _1dce860a6_Struct(_self_.get()._field_base.ptr());;
	if ((_79517_s == nullptr)) {
		_1dce56d46_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd90257_comptimeStatics>(_1dcd90257_comptimeStatics{._field_fields=_79517_s.get()._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9ba05__Public(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _80932_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _80947_fc) {
	if (((*(_80947_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Bool _81417_public = false;;
	{
		
		if ((_1dce860a6_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c650c237:;
			{
				_81417_public=_1dce860a6_Struct(_self_.get()._field_base.ptr()).get()._field_Decl.get()._field_Public;
			}
		}
		else if ((_1dce8631a_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c650c29d:;
			{
				_81417_public=_1dce8631a_Trait(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1dce85391_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c650c0b1:;
			{
				_81417_public=_1dce85391_Enum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1dce85605_TypeEnum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1c650c127:;
			{
				_81417_public=_1dce85605_TypeEnum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else {
			_case_begin_1c650a28a:;
			{
				_1dce56d46_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c650b203:;
	};
	jule::Ptr<_24a233549_Const> _82817_constant = static__24a233eb7_NewBool(_81417_public);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_82817_constant, &__jule_any_type19), ._field_Constant=_82817_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9bdac__Binded(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _83632_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _83647_fc) {
	if (((*(_83647_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_83632_e)).ptr(), (*(_83647_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _84117_constant = static__24a233eb7_NewBool(_1dce83229_Binded(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_84117_constant, &__jule_any_type19), ._field_Constant=_84117_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9c264__Ordered(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _84929_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _84944_fc) {
	if (((*(_84944_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_84929_e)).ptr(), (*(_84944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _85417_constant = static__24a233eb7_NewBool(_1dce83e3e_Ordered(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_85417_constant, &__jule_any_type19), ._field_Constant=_85417_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9c61b__Comparable(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _86232_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _86247_fc) {
	if (((*(_86247_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_86232_e)).ptr(), (*(_86247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _86717_constant = static__24a233eb7_NewBool(_1dce83966_Comparable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_86717_constant, &__jule_any_type19), ._field_Constant=_86717_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9c9c3__Mutable(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _87529_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _87544_fc) {
	if (((*(_87544_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_87529_e)).ptr(), (*(_87544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _88017_constant = static__24a233eb7_NewBool(_1dce83bca_Mutable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_88017_constant, &__jule_any_type19), ._field_Constant=_88017_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9cd7a__Types(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _88831_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _88846_fc) {
	if (((*(_88846_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dce8e950_Tuple> _89317_tup = _1dce867e3_Tup(_self_.get()._field_base.ptr());;
	if ((_89317_tup == nullptr)) {
		_1dce56d46_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dcd9747e_comptimeTypeInfos> _89817_infos = jule::new_ptr<_1dcd9747e_comptimeTypeInfos>(_1dcd9747e_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1dcd98947_comptimeTypeInfo>>::alloc(0LL, _89317_tup.get()._field_Types.len())});;
	{
		auto expr = &(_89317_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c651b92d:;
		if (it != expr_end) {
			jule::Ptr<_1dce82437_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd98947_comptimeTypeInfo>> &__jule_push_dest = _89817_infos.get()._field_types; __jule_push_dest.push(_1dcdd53ce_pushComptimeTypeInfo((*(_88831_e)).get()._field_s.get()._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1c651b92d:;
			++it;
			goto _iter_begin_1c651b92d;
		}
		_iter_end_1c651b92d:;
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_89817_infos, 14)}), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9d232__Exceptional(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _91137_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _91152_fc) {
	if (((*(_91152_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dcd74648_FnIns> _91617_f = _1dce85d42_Fn(_self_.get()._field_base.ptr());;
	if ((_91617_f == nullptr)) {
		_1dce56d46_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _92117_constant = static__24a233eb7_NewBool(((_91617_f.get()._field_Decl != nullptr) && _91617_f.get()._field_Decl.get()._field_Exceptional));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_92117_constant, &__jule_any_type19), ._field_Constant=_92117_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9d5d9__CanNil(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _92932_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _92947_fc) {
	if (((*(_92947_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_92932_e)).ptr(), (*(_92947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _93417_constant = static__24a233eb7_NewBool(_1dce841a3_NilCompatible(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_93417_constant, &__jule_any_type19), ._field_Constant=_93417_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9d991__Result(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _94232_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _94247_fc) {
	if (((*(_94247_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dcd74648_FnIns> _94717_f = _1dce85d42_Fn(_self_.get()._field_base.ptr());;
	if ((_94717_f == nullptr)) {
		_1dce56d46_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	if ((_94717_f.get()._field_Result == nullptr)) {
		return _1dcda5091_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_1dd046298_primVoid));;
	};
	return _1dcda5091_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_94717_f.get()._field_Result));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9dd48__Params(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Ptr<_1dce5683a_Eval>* _95832_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _95847_fc) {
	if (((*(_95847_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dcd74648_FnIns> _96317_f = _1dce85d42_Fn(_self_.get()._field_base.ptr());;
	if ((_96317_f == nullptr)) {
		_1dce56d46_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd95eb6_comptimeParams>(_1dcd95eb6_comptimeParams{._field_params=_96317_f.get()._field_Params}), 13)}), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcd9e156_subIdent(jule::Ptr<_1dcd98947_comptimeTypeInfo> _self_, jule::Str _97528_ident) {
	{
		auto &_match_expr{ _97528_ident };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_1c6529584:;
			{
				jule::Ptr<_1dcd74648_FnIns> _97821_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _97933_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _97948_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd996b2__Str(_self_, _97933_e, _97948_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_97821_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_1c6529ce3:;
			{
				jule::Ptr<_1dcd74648_FnIns> _98521_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _98633_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _98648_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd99e21__Bits(_self_, _98633_e, _98648_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_98521_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_1c6529d59:;
			{
				jule::Ptr<_1dcd74648_FnIns> _99221_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _99333_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _99348_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9a2c8__Elem(_self_, _99333_e, _99348_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_99221_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_1c652981a:;
			{
				jule::Ptr<_1dcd74648_FnIns> _99921_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _100033_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _100048_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9a680__Size(_self_, _100033_e, _100048_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_99921_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_1c6529881:;
			{
				jule::Ptr<_1dcd74648_FnIns> _100621_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _100733_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _100748_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9aa37__Key(_self_, _100733_e, _100748_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_100621_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_1c6529908:;
			{
				jule::Ptr<_1dcd74648_FnIns> _101321_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _101433_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _101448_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9adde__Value(_self_, _101433_e, _101448_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_101321_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_1c6529980:;
			{
				jule::Ptr<_1dcd74648_FnIns> _102021_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _102133_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _102148_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9b296__Fields(_self_, _102133_e, _102148_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_102021_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_1c6529dd1:;
			{
				jule::Ptr<_1dcd74648_FnIns> _102721_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _102833_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _102848_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9b64d__Statics(_self_, _102833_e, _102848_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_102721_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_1c6529e58:;
			{
				jule::Ptr<_1dcd74648_FnIns> _103421_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _103533_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _103548_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9dd48__Params(_self_, _103533_e, _103548_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_103421_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_1c6529ed0:;
			{
				jule::Ptr<_1dcd74648_FnIns> _104121_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _104233_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _104248_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9cd7a__Types(_self_, _104233_e, _104248_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_104121_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1c652a057:;
			{
				jule::Ptr<_1dcd74648_FnIns> _104821_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _104933_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _104948_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9ba05__Public(_self_, _104933_e, _104948_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_104821_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_1c652a0ce:;
			{
				jule::Ptr<_1dcd74648_FnIns> _105521_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _105633_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _105648_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9bdac__Binded(_self_, _105633_e, _105648_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_105521_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_1c652a156:;
			{
				jule::Ptr<_1dcd74648_FnIns> _106221_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _106333_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _106348_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9c264__Ordered(_self_, _106333_e, _106348_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_106221_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_1c652a1cd:;
			{
				jule::Ptr<_1dcd74648_FnIns> _106921_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _107033_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _107048_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9c61b__Comparable(_self_, _107033_e, _107048_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_106921_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1c652a255:;
			{
				jule::Ptr<_1dcd74648_FnIns> _107621_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _107733_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _107748_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9c9c3__Mutable(_self_, _107733_e, _107748_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_107621_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_1c652a2cc:;
			{
				jule::Ptr<_1dcd74648_FnIns> _108321_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _108433_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _108448_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9d232__Exceptional(_self_, _108433_e, _108448_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_108321_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_1c652a354:;
			{
				jule::Ptr<_1dcd74648_FnIns> _109021_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _109133_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _109148_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9d5d9__CanNil(_self_, _109133_e, _109148_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_109021_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_1c652a3cb:;
			{
				jule::Ptr<_1dcd74648_FnIns> _109721_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _109833_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _109848_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd9d991__Result(_self_, _109833_e, _109848_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_109721_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_1c652a453:;
			{
				jule::Ptr<_1dcd74648_FnIns> _110421_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _110533_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _110548_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcd99a69__Kind(_self_, _110533_e, _110548_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_110421_method));;
			}
		}
		else {
			_case_begin_1c65296c7:;
			{
				return nullptr;;
			}
		}
		_match_end_1c652961c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd98947_comptimeTypeInfo _Src) {
	_Stream << _1dcd98caa_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcd9e7a5_Str(_1dcd9e442_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _1dcd9eab3_Equal(jule::Ptr<_1dcd9e442_comptimeValue> _self_, jule::Ptr<_1dce82437_TypeKind> _112321_other) {
	return false;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda00be__Unwrap(jule::Ptr<_1dcd9e442_comptimeValue> _self_, jule::Ptr<_1dce5683a_Eval>* _112732_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _112747_fc) {
	if (((*(_112747_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_112732_e)).ptr(), (*(_112747_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return _self_.get()._field_data;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda0476__Type(jule::Ptr<_1dcd9e442_comptimeValue> _self_, jule::Ptr<_1dce5683a_Eval>* _113530_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _113545_fc) {
	if (((*(_113545_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_113530_e)).ptr(), (*(_113545_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1dcda5091_buildComptimeTypeInfoData(&((*(_113530_e)).get()._field_s), &(_self_.get()._field_data.get()._field_Kind));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda082d__Lvalue(jule::Ptr<_1dcd9e442_comptimeValue> _self_, jule::Ptr<_1dce5683a_Eval>* _114332_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _114347_fc) {
	if (((*(_114347_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_114332_e)).ptr(), (*(_114347_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _114817_constant = static__24a233eb7_NewBool(_self_.get()._field_data.get()._field_Lvalue);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_114817_constant, &__jule_any_type19), ._field_Constant=_114817_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda0bd5__Mutable(jule::Ptr<_1dcd9e442_comptimeValue> _self_, jule::Ptr<_1dce5683a_Eval>* _115633_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _115648_fc) {
	if (((*(_115648_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_115633_e)).ptr(), (*(_115648_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _116117_constant = static__24a233eb7_NewBool(_self_.get()._field_data.get()._field_Mutable);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_116117_constant, &__jule_any_type19), ._field_Constant=_116117_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda108c__Const(jule::Ptr<_1dcd9e442_comptimeValue> _self_, jule::Ptr<_1dce5683a_Eval>* _116931_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _116946_fc) {
	if (((*(_116946_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_116931_e)).ptr(), (*(_116946_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _117417_constant = static__24a233eb7_NewBool(_1dce5563b_IsConst(_self_.get()._field_data.ptr()));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_117417_constant, &__jule_any_type19), ._field_Constant=_117417_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda1444__Field(jule::Ptr<_1dcd9e442_comptimeValue> _self_, jule::Ptr<_1dce5683a_Eval>* _118231_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _118246_fc) {
	if (((*(_118246_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _118717_s = _1dce860a6_Struct(_self_.get()._field_data.get()._field_Kind.ptr());;
	if ((_118717_s == nullptr)) {
		_1dce56d46_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_self_.get()._field_data.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dcd4100a_Expr> _119217_arg = (*(_118246_fc)).get()._field_Args[0LL];;
	jule::Ptr<_1dce54cbc_Data> _119317_d = _1dce73307_evalExpr((*(_118231_e)), _119217_arg);;
	if ((_119317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1dce5563b_IsConst(_119317_d.ptr())))) {
		_1dce56d46_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dce89b8c_Prim> _120113_prim = _1dce84b54_Prim(_119317_d.get()._field_Kind.ptr());;
	if (((_120113_prim == nullptr) || (!(_1dce8cd8d_IsStr(_120113_prim.ptr()))))) {
		_1dce56d46_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1dce827de_Str(_119317_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Str _120613_ident = _24a23557e_ReadStr(_119317_d.get()._field_Constant.ptr());;
	jule::Ptr<_1dcd5d962_FieldIns> _120717_f = _1dcd60711_FindField(_118717_s.ptr(), _120613_ident);;
	if ((_120717_f == nullptr)) {
		_1dce56d46_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_118717_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_120613_ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_119317_d=jule::new_ptr<_1dce54cbc_Data>((*(_self_.get()._field_data)));
	_119317_d=_1dce6b92c_evalStructSubIdentField((*(_118231_e)).ptr(), &(_119317_d), &(_118717_s), &(_119217_arg.get()._field_Token), &(_120717_f));
	return _1dcda53c1_buildComptimeValue(&(_119317_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda1752_subIdent(jule::Ptr<_1dcd9e442_comptimeValue> _self_, jule::Str _121728_ident) {
	{
		auto &_match_expr{ _121728_ident };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_1c6562974:;
			{
				jule::Ptr<_1dcd74648_FnIns> _122021_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _122133_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _122148_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcda00be__Unwrap(_self_, _122133_e, _122148_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_122021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1c65629da:;
			{
				jule::Ptr<_1dcd74648_FnIns> _122721_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _122833_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _122848_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcda0476__Type(_self_, _122833_e, _122848_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_122721_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_1c65627ba:;
			{
				jule::Ptr<_1dcd74648_FnIns> _123421_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _123533_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _123548_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcda082d__Lvalue(_self_, _123533_e, _123548_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_123421_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1c6562842:;
			{
				jule::Ptr<_1dcd74648_FnIns> _124121_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _124233_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _124248_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcda0bd5__Mutable(_self_, _124233_e, _124248_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_124121_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_1c65628b9:;
			{
				jule::Ptr<_1dcd74648_FnIns> _124821_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _124933_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _124948_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcda108c__Const(_self_, _124933_e, _124948_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_124821_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_1c65624ac:;
			{
				jule::Ptr<_1dcd74648_FnIns> _125521_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _125633_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _125648_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcda1444__Field(_self_, _125633_e, _125648_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_125521_method));;
			}
		}
		else {
			_case_begin_1c6562358:;
			{
				return nullptr;;
			}
		}
		_match_end_1c65622ae:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd9e442_comptimeValue _Src) {
	_Stream << _1dcd9e7a5_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcda1da1_Str(_1dcda1a3d_comptimeFiles* _self_) {
	return jule::Str("comptimeFiles", 13);;
}



inline jule::Bool _1dcda21ae_Equal(jule::Ptr<_1dcda1a3d_comptimeFiles> _self_, jule::Ptr<_1dce82437_TypeKind> _127421_other) {
	return false;;
}



inline void _1dcda25dd_ready(_1dcda1a3d_comptimeFiles* _self_, jule::Ptr<_1dce05cb2_Var>* _127829_keyA, jule::Ptr<_1dce05cb2_Var>* _127846_keyB) {
	if (((*(_127829_keyA)) != nullptr)) {
		(*(_127829_keyA)).get()._field_Constant=true;
		(*(_127829_keyA)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_127829_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_127829_keyA)).get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_127846_keyB)) != nullptr)) {
		(*(_127846_keyB)).get()._field_Constant=true;
		(*(_127846_keyB)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		(*(_127846_keyB)).get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcda3006_comptimeFile>(), 18)})});
	};
}



inline void _1dcda29a6_step(_1dcda1a3d_comptimeFiles* _self_, jule::I64 _130023_i, jule::Ptr<_1dce05cb2_Var>* _130036_keyA, jule::Ptr<_1dce05cb2_Var>* _130053_keyB) {
	if (((*(_130036_keyA)) != nullptr)) {
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_130023_i)));
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_130053_keyB)) != nullptr)) {
		(*(_130053_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind.cast_ptr<_1dcda3006_comptimeFile>(18).get()._field_file=(*(_self_))._field_files[_130023_i];
	};
}



inline jule::I64 _1dcda2c1a_len(_1dcda1a3d_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcda1a3d_comptimeFiles _Src) {
	_Stream << _1dcda1da1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dcda3369_Str(_1dcda3006_comptimeFile* _self_) {
	return jule::Str("comptimeFile", 12);;
}



inline jule::Bool _1dcda3677_Equal(jule::Ptr<_1dcda3006_comptimeFile> _self_, jule::Ptr<_1dce82437_TypeKind> _132421_other) {
	return false;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda3b50__Path(jule::Ptr<_1dcda3006_comptimeFile> _self_, jule::Ptr<_1dce5683a_Eval>* _132830_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _132845_fc) {
	if (((*(_132845_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_132830_e)).ptr(), (*(_132845_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Path", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _133317_constant = static__24a23425e_NewStr(_self_.get()._field_file.get()._field_File.get()._field_Path);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_133317_constant, &__jule_any_type19), ._field_Constant=_133317_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda4007__Name(jule::Ptr<_1dcda3006_comptimeFile> _self_, jule::Ptr<_1dce5683a_Eval>* _134130_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _134145_fc) {
	if (((*(_134145_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_134130_e)).ptr(), (*(_134145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _134617_constant = static__24a23425e_NewStr(_23ae2c86d_Name(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_134617_constant, &__jule_any_type19), ._field_Constant=_134617_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda43ae__Dir(jule::Ptr<_1dcda3006_comptimeFile> _self_, jule::Ptr<_1dce5683a_Eval>* _135429_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _135444_fc) {
	if (((*(_135444_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_135429_e)).ptr(), (*(_135444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Dir", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_24a233549_Const> _135917_constant = static__24a23425e_NewStr(_23ae2c609_Dir(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(_135917_constant, &__jule_any_type19), ._field_Constant=_135917_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda46bc_subIdent(jule::Ptr<_1dcda3006_comptimeFile> _self_, jule::Str _136728_ident) {
	{
		auto &_match_expr{ _136728_ident };
		
		if (_match_expr == jule::Str("Path", 4)) {
			_case_begin_1c657ae32:;
			{
				jule::Ptr<_1dcd74648_FnIns> _137021_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _137133_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _137148_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcda3b50__Path(_self_, _137133_e, _137148_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_137021_method));;
			}
		}
		else if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1c657ae98:;
			{
				jule::Ptr<_1dcd74648_FnIns> _137721_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _137833_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _137848_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcda4007__Name(_self_, _137833_e, _137848_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_137721_method));;
			}
		}
		else if (_match_expr == jule::Str("Dir", 3)) {
			_case_begin_1c657ac56:;
			{
				jule::Ptr<_1dcd74648_FnIns> _138421_method = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>([=](jule::Ptr<_1dce5683a_Eval>* _138533_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _138548_fc, jule::Ptr<_1dce54cbc_Data>* ) mutable -> jule::Ptr<_1dce54cbc_Data> {
					return _1dcda43ae__Dir(_self_, _138533_e, _138548_fc);;
				}), });;
				return _1dcda4a41_buildAsComptimeMethodData(&(_138421_method));;
			}
		}
		else {
			_case_begin_1c657a849:;
			{
				return nullptr;;
			}
		}
		_match_end_1c657a11d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dcda3006_comptimeFile _Src) {
	_Stream << _1dcda3369_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1dcdd59a6_Sema>*,jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>*)> _1dcda724c_readyFn(jule::Ptr<_1dcda6d62_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1dcdd59a6_Sema>*,jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>*)>([=](jule::Ptr<_1dcdd59a6_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6588d1e:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1dcd48d26_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1dce80ba5_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1c6588d1e;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1dce82437_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c658aeca:;
						if (it != expr_end) {
							jule::Ptr<_1dcd3bd80_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1dce82437_TypeKind> _7229_kind = _1dcddcd32_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1dcea0763_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1c658cb7a:;
											{
												jule::Ptr<_1dcd3c446_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1dcd3c446_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1dcda8429_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(_7637_itd.get()._field_Ident), 20)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1c658cb25:;
									};
									return false;;
								};
								_julec_label_success:;
								{ jule::Slice<jule::Ptr<_1dce82437_TypeKind>> &__jule_push_dest = _6525_generic.get()._field_Constraint; __jule_push_dest.push(_7229_kind); };
							}
							_iter_next_1c658aeca:;
							++it;
							goto _iter_begin_1c658aeca;
						}
						_iter_end_1c658aeca:;
					};
				}
				_iter_next_1c6588d1e:;
				++it;
				_6418_i++;
				goto _iter_begin_1c6588d1e;
			}
			_iter_end_1c6588d1e:;
		};
		return true;;
	});;
}



inline jule::Bool _1dcda74b1_readyFi(jule::Ptr<_1dcda6d62_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1dcde240d_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1dcda724c_readyFn(_self_)));;
}



inline jule::Bool _1dcda7725_readySi(jule::Ptr<_1dcda6d62_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1dcda724c_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1dcda7989_ready(jule::Ptr<_1dcda6d62_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1dcda74b1_readyFi(_self_);;
	};
	return _1dcda7725_readySi(_self_);;
}



inline jule::Bool _1dcda7bed_check(jule::Ptr<_1dcda6d62_constraintChecker> _self_) {
	if ((!(_1dcda7989_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4719d3c:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1dce80ba5_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1c4719d3c;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c471a843:;
					if (it != expr_end) {
						jule::Ptr<_1dce82437_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1dce89b8c_Prim> _12425_prim = _1dce84b54_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1dce8a74d_IsConstraint(_12425_prim.ptr()))) {
								if (_1dcda813d_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1c4719d3c;
								};
								goto _iter_next_1c471a843;
							};
							if (_1dce82aec_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1c4719d3c;
							};
						}
						_iter_next_1c471a843:;
						++it;
						goto _iter_begin_1c471a843;
					}
					_iter_end_1c471a843:;
				};
				_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1c4719d3c:;
			++it;
			_11914_i++;
			goto _iter_begin_1c4719d3c;
		}
		_iter_end_1c4719d3c:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcda6d62_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcda90b7_IsTraitImpl(_1dcda8c10_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1dcda932b_IsStructImpl(_1dcda8c10_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcda8c10_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdadc6a_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdae166_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdae452_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdae7c6_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdaeab2_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb0035_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb091a_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb0d16_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb11bd_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb14a9_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb1795_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb1b4c_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb20c0_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb2477_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb2a82_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb35cc_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb3ba4_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb4006_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb4611_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb4a84_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcdb5d1b_SelectPackage(_1dcdb5898_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)> _45632_selector) {
	return _1dcdd5e29_SelectPackage((*(_self_))._field_s.ptr(), _45632_selector);;
}



inline jule::Ptr<_1dce05cb2_Var> _1dcdb61c3_FindVar(_1dcdb5898_scopeChecker* _self_, jule::Str _46726_ident, jule::Bool _46738_binded) {
	;
	jule::Ptr<_1dce05cb2_Var> _47017_v = _1dce52737_findVar((*(_self_))._field_table.ptr(), _46726_ident, _46738_binded, true);;
	if ((_47017_v != nullptr)) {
		return _47017_v;;
	};
	jule::Ptr<_1dcdb5898_scopeChecker> _47517_parent = (*(_self_))._field_parent;;
	while ((_47517_parent != nullptr)) {
		{
			_47017_v=_1dce52737_findVar(_47517_parent.get()._field_table.ptr(), _46726_ident, _46738_binded, true);
			if ((_47017_v != nullptr)) {
				return _47017_v;;
			};
			_47517_parent=_47517_parent.get()._field_parent;
		}
	_iter_next_1c65b539a:;
	}
	_iter_end_1c65b539a:;;
	return _1dcdd62d1_FindVar((*(_self_))._field_s.ptr(), _46726_ident, _46738_binded);;
}



inline jule::Ptr<_1dce816de_TypeAlias> _1dcdb657a_FindTypeAlias(_1dcdb5898_scopeChecker* _self_, jule::Str _49432_ident, jule::Bool _49444_binded) {
	;
	jule::Ptr<_1dce816de_TypeAlias> _49717_ta = _1dce52b88_findTypeAlias((*(_self_))._field_table.ptr(), _49432_ident, _49444_binded, true);;
	if ((_49717_ta != nullptr)) {
		return _49717_ta;;
	};
	jule::Ptr<_1dcdb5898_scopeChecker> _50217_parent = (*(_self_))._field_parent;;
	while ((_50217_parent != nullptr)) {
		{
			_49717_ta=_1dce52b88_findTypeAlias(_50217_parent.get()._field_table.ptr(), _49432_ident, _49444_binded, true);
			if ((_49717_ta != nullptr)) {
				return _49717_ta;;
			};
			_50217_parent=_50217_parent.get()._field_parent;
		}
	_iter_next_1c65b7e5d:;
	}
	_iter_end_1c65b7e5d:;;
	return _1dcdd6688_FindTypeAlias((*(_self_))._field_s.ptr(), _49432_ident, _49444_binded);;
}



inline jule::Ptr<_1dcd5b641_Struct> _1dcdb6932_FindStruct(_1dcdb5898_scopeChecker* _self_, jule::Str _51929_ident, jule::Bool _51941_binded) {
	return _1dcdd6a40_FindStruct((*(_self_))._field_s.ptr(), _51929_ident, _51941_binded);;
}



inline jule::Ptr<_1dcd71997_Fn> _1dcdb6cd9_FindFn(_1dcdb5898_scopeChecker* _self_, jule::Str _52825_ident, jule::Bool _52837_binded) {
	return _1dcdd6de7_FindFn((*(_self_))._field_s.ptr(), _52825_ident, _52837_binded);;
}



inline jule::Ptr<_1dcd83bb8_Trait> _1dcdb70e7_FindTrait(_1dcdb5898_scopeChecker* _self_, jule::Str _53728_ident) {
	return _1dcdd7205_FindTrait((*(_self_))._field_s.ptr(), _53728_ident);;
}



inline jule::Ptr<_1dcd8644b_Enum> _1dcdb7405_FindEnum(_1dcdb5898_scopeChecker* _self_, jule::Str _54627_ident) {
	return _1dcdd7513_FindEnum((*(_self_))._field_s.ptr(), _54627_ident);;
}



inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcdb7713_FindTypeEnum(_1dcdb5898_scopeChecker* _self_, jule::Str _55531_ident) {
	return _1dcdd7821_FindTypeEnum((*(_self_))._field_s.ptr(), _55531_ident);;
}



inline jule::Bool _1dcdb7a43_isUnsafe(jule::Ptr<_1dcdb5898_scopeChecker> _self_) {
	jule::Ptr<_1dcdb5898_scopeChecker> _56317_scope = _self_;;
	_julec_label_iter:;
	if (_56317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_56317_scope.get()._field_parent != nullptr)) {
		_56317_scope=_56317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1dcdb7ca7_isRoot(_1dcdb5898_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1dcdb7e83_stop(_1dcdb5898_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1dcdb81e7_stopped(_1dcdb5898_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1dcdb845b_isDeferred(jule::Ptr<_1dcdb5898_scopeChecker> _self_) {
	jule::Ptr<_1dcdb5898_scopeChecker> _59617_scope = _self_;;
	_julec_label_iter:;
	if (_59617_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_59617_scope.get()._field_parent != nullptr)) {
		_59617_scope=_59617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1dcdb5898_scopeChecker> _1dcdb86c0_getRoot(jule::Ptr<_1dcdb5898_scopeChecker> _self_) {
	jule::Ptr<_1dcdb5898_scopeChecker> _61417_root = _self_;;
	while (((_61417_root.get()._field_parent != nullptr) && (_61417_root.get()._field_owner == nullptr))) {
		{
			_61417_root=_61417_root.get()._field_parent;
		}
	_iter_next_1c65c1e12:;
	}
	_iter_end_1c65c1e12:;;
	return _61417_root;;
}



inline jule::Ptr<_1dcdb5898_scopeChecker> _1dcdb8934_getHardRoot(jule::Ptr<_1dcdb5898_scopeChecker> _self_) {
	jule::Ptr<_1dcdb5898_scopeChecker> _62417_root = _self_;;
	while ((_62417_root.get()._field_parent != nullptr)) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1c65c2ee0:;
	}
	_iter_end_1c65c2ee0:;;
	return _62417_root;;
}



inline jule::Ptr<_1dcdb14a9_Label> _1dcdb8c42_findLabel(_1dcdb5898_scopeChecker* _self_, jule::Str _63428_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c65c3a29:;
		if (it != expr_end) {
			jule::Any _63521_st = *it;
			{
				{
					auto &_match_expr{ _63521_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1c65c4541:;
						{
							jule::Ptr<_1dcdb14a9_Label> _63825_label = _63521_st.cast_ptr<_1dcdb14a9_Label>(&__jule_any_type21);;
							if ((_63825_label.get()._field_Ident == _63428_ident)) {
								return _63825_label;;
							};
						}
					}
					_match_end_1c65c4442:;
				};
			}
			_iter_next_1c65c3a29:;
			++it;
			goto _iter_begin_1c65c3a29;
		}
		_iter_end_1c65c3a29:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcdb4611_scopeLabel> _1dcdb9050_findLabelScope(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Str _65034_ident) {
	jule::Ptr<_1dcdb4611_scopeLabel> _65117_label = _1dcdb935d_findLabelAll(_self_.ptr(), _65034_ident);;
	if (((_65117_label != nullptr) && (_65117_label.get()._field_scope == _self_))) {
		return _65117_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcdb4611_scopeLabel> _1dcdb935d_findLabelAll(_1dcdb5898_scopeChecker* _self_, jule::Str _66231_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c65c6631:;
		if (it != expr_end) {
			jule::Ptr<_1dcdb4611_scopeLabel> _66321_lbl = *it;
			{
				if ((_66321_lbl.get()._field_label.get()._field_Ident == _66231_ident)) {
					return _66321_lbl;;
				};
			}
			_iter_next_1c65c6631:;
			++it;
			goto _iter_begin_1c65c6631;
		}
		_iter_end_1c65c6631:;
	};
	return nullptr;;
}



inline jule::Bool _1dcdb9715_isDuplicatedIdent(_1dcdb5898_scopeChecker* _self_, jule::Uintptr _67436_itself, jule::Str _67453_ident) {
	jule::Ptr<_1dce05cb2_Var> _67513_v = _1dcdb61c3_FindVar(_self_, _67453_ident, false);;
	if (((_67513_v != nullptr) && (static_cast<jule::Uintptr>(_67513_v) != _67436_itself))) {
		if ((_67513_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_67513_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1dcdd7bea_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1dce816de_TypeAlias> _68313_ta = _1dcdb657a_FindTypeAlias(_self_, _67453_ident, false);;
	if (((_68313_ta != nullptr) && (static_cast<jule::Uintptr>(_68313_ta) != _67436_itself))) {
		if ((_68313_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1dcdd7bea_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1dcdb998a_checkVarDecl(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4e48b_VarDecl> _69436_decl) {
	jule::Ptr<_1dce05cb2_Var> _69517_v = _1dcd7c585_buildVar(_69436_decl);;
	_69517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_69517_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_69517_v, &__jule_any_type8)); };
	});;
	if (_1dcdb9715_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69517_v)), _69517_v.get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _69517_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_69517_v.get()._field_Ident, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1dcdb7e83_stop(_self_.ptr());
		return;;
	};
	_1dcde94d1_checkVarDecl(_self_.get()._field_s, &(_69517_v), jule::Trait<_1dcea0763_Lookup>(_self_, 0));
	if (((!(_1dce0639a_IsTypeInferred(_69517_v.ptr()))) && ((_69517_v.get()._field_Kind == nullptr) || (_69517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1dcded1a5_checkTypeVar(_self_.get()._field_s, &(_69517_v), jule::Trait<_1dcea0763_Lookup>(_self_, 0));
}



inline void _1dcdb9c10_checkTypeAliasDecl(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd52cec_TypeAliasDecl> _71842_decl) {
	jule::Ptr<_1dce816de_TypeAlias> _71917_ta = _1dcd792b8_buildTypeAlias(_71842_decl);;
	if (_1dcdb9715_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_71917_ta)), _71917_ta.get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _71917_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_71917_ta.get()._field_Ident, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1dcdb7e83_stop(_self_.ptr());
		return;;
	};
	_1dcde3bc3_checkTypeAliasDecl(_self_.get()._field_s, &(_71917_ta), jule::Trait<_1dcea0763_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> &__jule_push_dest = _self_.get()._field_table.get()._field_TypeAliases; __jule_push_dest.push(_71917_ta); };
	if ((_71917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1dcdb7e83_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1dcdadc6a_Scope> _1dcdb9e74_getChild(_1dcdb5898_scopeChecker* _self_) {
	return jule::new_ptr<_1dcdadc6a_Scope>(_1dcdadc6a_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1dcdba33c_checkChildSsc(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4b9b6_ScopeTree>* _74238_tree, jule::Ptr<_1dcdadc6a_Scope>* _74261_s, jule::Ptr<_1dcdb5898_scopeChecker>* _74277_ssc) {
	(*(_74277_ssc)).get()._field_parent=_self_;
	_1dcdc57dc_check((*(_74277_ssc)), _74238_tree, _74261_s);
}



inline jule::Ptr<_1dcdadc6a_Scope> _1dcdba6e4_checkChildSc(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4b9b6_ScopeTree>* _74737_tree, jule::Ptr<_1dcdb5898_scopeChecker>* _74760_ssc) {
	jule::Ptr<_1dcdadc6a_Scope> _74817_s = _1dcdb9e74_getChild(_self_.ptr());;
	_1dcdba33c_checkChildSsc(_self_, _74737_tree, &(_74817_s), _74760_ssc);
	return _74817_s;;
}



inline jule::Ptr<_1dcdadc6a_Scope> _1dcdbaa02_checkChild(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4b9b6_ScopeTree>* _75335_tree) {
	jule::Ptr<_1dcdb5898_scopeChecker> _75417_ssc = _1dcdc5a51_newChildChecker(_self_);;
	return _1dcdba6e4_checkChildSc(_self_, _75335_tree, &(_75417_ssc));;
}



inline void _1dcdbac77_checkAnonScope(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4b9b6_ScopeTree> _75838_tree) {
	jule::Ptr<_1dcdadc6a_Scope> _75917_s = _1dcdbaa02_checkChild(_self_, &(_75838_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_75917_s, &__jule_any_type22)); };
}



inline void _1dcdbb096_processErrorCall(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel>* _76341_m, jule::Ptr<_23ae26b42_Token> _76372_err) {
	if (_1dcdb845b_isDeferred(_self_)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dcdb5898_scopeChecker> _76817_root = _1dcdb86c0_getRoot(_self_);;
	if ((!(_76817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1dcdd8657_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_76341_m)).get()._field_Func=_76817_root.get()._field_owner;
}



inline void _1dcdbb31b_checkExpr(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4100a_Expr> _77633_expr) {
	jule::Ptr<_1dce5683a_Eval> _77717_eval = _1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0));;
	_77717_eval.get()._field_ignored=true;
	jule::Ptr<_1dce54cbc_Data> _77917_d = _1dce73307_evalExpr(_77717_eval, _77633_expr);;
	if ((_77917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _77917_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c65db03b:;
			{
				jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel> _78621_m = _77917_d.get()._field_Model.cast_ptr<_1dcd6cb08_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1dcdbb096_processErrorCall(_self_, &(_78621_m), _77633_expr.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_77917_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_1c65db24a:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_77917_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1c65db0e6:;
			{
				_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _77633_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c65db1d4:;
	};
}



inline jule::Ptr<_1dcdae166_If> _1dcdbb629_checkIf(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd51ceb_If> _80631_i) {
	jule::Ptr<_1dcdadc6a_Scope> _80717_s = _1dcdbaa02_checkChild(_self_, &(_80631_i.get()._field_Scope));;
	jule::Ptr<_1dce54cbc_Data> _80917_d = _1dce73307_evalExpr(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), _80631_i.get()._field_Expr);;
	if ((_80917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1dce89b8c_Prim> _81417_prim = _1dce84b54_Prim(_80917_d.get()._field_Kind.ptr());;
	if (((_81417_prim == nullptr) || (!(_1dce8cb29_IsBool(_81417_prim.ptr()))))) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _80631_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1dcdae166_If>(_1dcdae166_If{._field_Expr=_80917_d.get()._field_Model, ._field_Scope=_80717_s});;
}



inline jule::Ptr<_1dcdae452_Else> _1dcdbb937_checkElse(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd521a3_Else> _82633_e) {
	return jule::new_ptr<_1dcdae452_Else>(_1dcdae452_Else{._field_Scope=_1dcdbaa02_checkChild(_self_, &(_82633_e.get()._field_Scope))});;
}



inline void _1dcdbbbac_checkConditional(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd52626_Conditional> _83240_conditional) {
	jule::Ptr<_1dcdae7c6_Conditional> _83317_c = jule::new_ptr<_1dcdae7c6_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_83317_c, &__jule_any_type36)); };
	_83317_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1dcdae166_If>>::alloc(0LL, (_83240_conditional.get()._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1dcdae166_If>> &__jule_push_dest = _83317_c.get()._field_Elifs; __jule_push_dest.push(_1dcdbb629_checkIf(_self_, _83240_conditional.get()._field_Head)); };
	{
		auto expr = &(_83240_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c65e5144:;
		if (it != expr_end) {
			jule::Ptr<_1dcd51ceb_If> _83921_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcdae166_If>> &__jule_push_dest = _83317_c.get()._field_Elifs; __jule_push_dest.push(_1dcdbb629_checkIf(_self_, _83921_elif)); };
			}
			_iter_next_1c65e5144:;
			++it;
			goto _iter_begin_1c65e5144;
		}
		_iter_end_1c65e5144:;
	};
	if ((_83240_conditional.get()._field_Default != nullptr)) {
		_83317_c.get()._field_Default=_1dcdbb937_checkElse(_self_, _83240_conditional.get()._field_Default);
	};
}



inline void _1dcdbc11e_checkIterScopeSsc(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Uintptr _84837_it, jule::Ptr<_1dcd4b9b6_ScopeTree> _84854_tree, jule::Ptr<_1dcdadc6a_Scope>* _84877_s, jule::Ptr<_1dcdb5898_scopeChecker> _84892_ssc) {
	_84892_ssc.get()._field_it=_84837_it;
	_1dcdba33c_checkChildSsc(_self_, &(_84854_tree), _84877_s, &(_84892_ssc));
}



inline jule::Ptr<_1dcdadc6a_Scope> _1dcdbc570_checkIterScopeSc(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Uintptr _85336_it, jule::Ptr<_1dcd4b9b6_ScopeTree> _85353_tree, jule::Ptr<_1dcdb5898_scopeChecker> _85375_ssc) {
	jule::Ptr<_1dcdadc6a_Scope> _85417_scope = _1dcdb9e74_getChild(_self_.ptr());;
	_1dcdbc11e_checkIterScopeSsc(_self_, _85336_it, _85353_tree, &(_85417_scope), _85375_ssc);
	return _85417_scope;;
}



inline jule::Ptr<_1dcdadc6a_Scope> _1dcdbc927_checkIterScope(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Uintptr _85934_it, jule::Ptr<_1dcd4b9b6_ScopeTree>* _85952_tree) {
	jule::Ptr<_1dcdb5898_scopeChecker> _86017_ssc = _1dcdc5a51_newChildChecker(_self_);;
	return _1dcdbc570_checkIterScopeSc(_self_, _85934_it, (*(_85952_tree)), _86017_ssc);;
}



inline void _1dcdbcb9c_checkInfIter(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4eea3_Iter>* _86437_it) {
	jule::Ptr<_1dcdaeab2_InfIter> _86517_kind = jule::new_ptr<_1dcdaeab2_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_86517_kind, &__jule_any_type37)); };
	_86517_kind.get()._field_Scope=_1dcdbc927_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_86517_kind)), &((*(_86437_it)).get()._field_Scope));
}



inline void _1dcdbce22_checkWhileIter(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4eea3_Iter>* _87039_it) {
	jule::Ptr<_1dcd50778_WhileKind> _87117_wh = (*(_87039_it)).get()._field_Kind.cast_ptr<_1dcd50778_WhileKind>(&__jule_any_type38);;
	if (((_87117_wh.get()._field_Expr == nullptr) && (_87117_wh.get()._field_Next == nullptr))) {
		_1dcdbcb9c_checkInfIter(_self_, _87039_it);
		return;;
	};
	jule::Ptr<_1dcdb0035_WhileIter> _87717_kind = jule::new_ptr<_1dcdb0035_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_87717_kind, &__jule_any_type39)); };
	_87717_kind.get()._field_Scope=_1dcdbc927_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87717_kind)), &((*(_87039_it)).get()._field_Scope));
	if ((_87117_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1dce54cbc_Data> _88221_d = _1dce73307_evalExpr(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), _87117_wh.get()._field_Expr);;
		if ((_88221_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1dce89b8c_Prim> _88717_prim = _1dce84b54_Prim(_88221_d.get()._field_Kind.ptr());;
		if ((_88717_prim == nullptr)) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1dce8cb29_IsBool(_88717_prim.ptr())))) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_87717_kind.get()._field_Expr=_88221_d.get()._field_Model;
	};
	if (_1dcd50aca_IsWhileNext(_87117_wh.ptr())) {
		if ((!(_1dcdad297_isValidAstStForNextSt(&(_87117_wh.get()._field_Next))))) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _90717_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1dcdc4588_checkNode(_self_, &(_87117_wh.get()._field_Next));
		if ((_90717_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91025_st = _self_.get()._field_scope.get()._field_Stmts[_90717_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _90717_n);
			if ((!(_1dcdad53e_isValidStForNextSt(&(_91025_st))))) {
				_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_87717_kind.get()._field_Next=_91025_st;
		};
	};
}



inline void _1dcdbd2da_checkComptimeRangeIter(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4eea3_Iter>* _92047_it, jule::Ptr<_1dcdb091a_RangeIter>* _92063_kind, jule::Ptr<_1dce54cbc_Data>* _92086_d) {
	if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
		if (((!(_1dcdd7bea_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1dcdb9715_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyA.get()._field_Ident))) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1dcdd8657_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
		if (((!(_1dcdd7bea_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1dcdb9715_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyB.get()._field_Ident))) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1dcdd8657_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1dcd89b9c_comptimeRange> _93417_comptime = _1dce87c45_comptimeRange((*(_92086_d)).get()._field_Kind.ptr());;
	_1dcd899c1_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1dcd89251_ready(_93417_comptime.get()._field_kind, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
	jule::I64 _93617_i = 0LL;;
	jule::I64 _93713_errors = _self_.get()._field_s.get()._field_errors.len();;
	for (; (_93617_i < _1dcd899c1_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1dcd8987d_len(_93417_comptime.get()._field_kind)); (_93617_i)++) {
		{
			jule::Ptr<_1dcdb5898_scopeChecker> _93921_ssc = _1dcdc5a51_newChildChecker(_self_);;
			jule::Ptr<_1dcdadc6a_Scope> _94021_scope = _1dcdb9e74_getChild(_self_.ptr());;
			if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
				(*(_92063_kind)).get()._field_KeyA.get()._field_Scope=_94021_scope;
				{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = _93921_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92063_kind)).get()._field_KeyA); };
			};
			if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
				(*(_92063_kind)).get()._field_KeyB.get()._field_Scope=_94021_scope;
				{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = _93921_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92063_kind)).get()._field_KeyB); };
			};
			_1dcd899c1_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1dcd89619_step(_93417_comptime.get()._field_kind, _93617_i, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
			_1dcdba33c_checkChildSsc(_self_, &((*(_92047_it)).get()._field_Scope), &(_94021_scope), &(_93921_ssc));
			if ((_93713_errors != _self_.get()._field_s.get()._field_errors.len())) {
				goto _iter_end_1c660eeb6;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_94021_scope, &__jule_any_type22)); };
		}
	_iter_next_1c660eeb6:;
	}
	_iter_end_1c660eeb6:;;
}



inline void _1dcdbd560_checkRangeIter(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4eea3_Iter>* _95939_it) {
	jule::Ptr<_1dcd51119_RangeKind> _96017_rang = (*(_95939_it)).get()._field_Kind.cast_ptr<_1dcd51119_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_1dce54cbc_Data> _96217_d = _1dce72ee9_evalExpr1(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), _96017_rang.get()._field_Expr);;
	if ((_96217_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1dcdb091a_RangeIter> _96717_kind = jule::new_ptr<_1dcdb091a_RangeIter>(_1dcdb091a_RangeIter{._field_Expr=_96217_d, });;
	_1dce4abe7_rangeChecker _97117_rc = _1dce4abe7_rangeChecker{._field_sc=_self_, ._field_rang=_96017_rang, ._field_Kind=_96717_kind, ._field_d=_96217_d};;
	jule::Bool _97713_ok = _1dce4ca1d_check(&_97117_rc);;
	if ((!(_97713_ok))) {
		return;;
	};
	jule::Ptr<_1dcd89b9c_comptimeRange> _98217_comptimeRange = _1dce87c45_comptimeRange(_96217_d.get()._field_Kind.ptr());;
	if ((_98217_comptimeRange != nullptr)) {
		_1dcdbd2da_checkComptimeRangeIter(_self_, _95939_it, &(_96717_kind), &(_96217_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_96717_kind, &__jule_any_type41)); };
	jule::Ptr<_1dcdb5898_scopeChecker> _99017_ssc = _1dcdc5a51_newChildChecker(_self_);;
	jule::Ptr<_1dcdadc6a_Scope> _99117_scope = _1dcdb9e74_getChild(_self_.ptr());;
	if ((_96717_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1dcdd7bea_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1dcdb9715_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyA.get()._field_Ident))) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1dcdd8657_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyA.get()._field_Scope=_99117_scope;
		{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = _99017_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_96717_kind.get()._field_KeyA); };
	};
	if ((_96717_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1dcdd7bea_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1dcdb9715_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyB.get()._field_Ident))) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1dcdd8657_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyB.get()._field_Scope=_99117_scope;
		{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = _99017_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_96717_kind.get()._field_KeyB); };
	};
	_1dcdbc11e_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96717_kind)), (*(_95939_it)).get()._field_Scope, &(_99117_scope), _99017_ssc);
	_96717_kind.get()._field_Scope=_99117_scope;
}



inline void _1dcdbd7d5_checkIter(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4eea3_Iter> _101533_it) {
	if (_1dcd50305_IsInf(_101533_it.ptr())) {
		_1dcdbcb9c_checkInfIter(_self_, &(_101533_it));
		return;;
	};
	{
		auto &_match_expr{ _101533_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c6620b75:;
			{
				_1dcdbce22_checkWhileIter(_self_, &(_101533_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c66206d0:;
			{
				_1dcdbd560_checkRangeIter(_self_, &(_101533_it));
			}
		}
		else {
			_case_begin_1c66200e7:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1c6620092:;
	};
}



inline jule::Bool _1dcdbdae3_checkValidContLabel(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Uintptr _103139_it) {
	jule::Ptr<_1dcdb5898_scopeChecker> _103217_scope = _self_;;
	_julec_label_iter:;
	if ((_103217_scope.get()._field_it == _103139_it)) {
		return true;;
	};
	if ((_103217_scope.get()._field_parent != nullptr)) {
		_103217_scope=_103217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1dcdbde01_checkValidBreakLabel(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Uintptr _104740_ptr) {
	jule::Ptr<_1dcdb5898_scopeChecker> _104817_scope = _self_;;
	_julec_label_iter:;
	if ((_104817_scope.get()._field_it == _104740_ptr)) {
		return true;;
	};
	if ((_104817_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _105617_mtch = static_cast<jule::Uintptr>(((_1dcdb35cc_Case*)(_104817_scope.get()._field_cse))->_field_Owner);;
		if ((_105617_mtch == _104740_ptr)) {
			return true;;
		};
	};
	if ((_104817_scope.get()._field_parent != nullptr)) {
		_104817_scope=_104817_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1dcdb0d16_ContSt> _1dcdbe20e_checkContValidScope(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd51878_ContSt> _107039_c) {
	if (_1dcdb845b_isDeferred(_self_)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_107039_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1dcdb0d16_ContSt>();;
	};
	jule::Ptr<_1dcdb5898_scopeChecker> _108017_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_108017_scope.get()._field_it == 0LLU) && (_108017_scope.get()._field_parent != nullptr)) && (_108017_scope.get()._field_owner == nullptr))) {
			_case_begin_1c6627ab1:;
			{
				_108017_scope=_108017_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_108017_scope.get()._field_it != 0LLU)) {
			_case_begin_1c6627b38:;
			{
				return jule::new_ptr<_1dcdb0d16_ContSt>(_1dcdb0d16_ContSt{._field_It=_108017_scope.get()._field_it});;
			}
		}
		_match_end_1c6627a06:;
	};
	_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1dcdbe484_checkCont(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd51878_ContSt> _109429_c) {
	jule::Ptr<_1dcdb0d16_ContSt> _109517_cont = _1dcdbe20e_checkContValidScope(_self_, _109429_c);;
	if ((_109517_cont == nullptr)) {
		return;;
	};
	if ((_109429_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1dcdb4611_scopeLabel> _110121_label = _1dcdab471_findLabelParent(_109429_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_110121_label == nullptr)) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_110121_label.get()._field_used=true;
		if (((_110121_label.get()._field_pos + 1LL) >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I64 _111417_i = (_110121_label.get()._field_pos + 1LL);;
		if ((_111417_i >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _111825_st = _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_111417_i];;
			{
				auto &_match_expr{ _111825_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1c663024a:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1dcdaeab2_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_1c6630987:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1dcdb091a_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1c66309ed:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1dcdb0035_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_1c6630800:;
					{
						_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1c663079a:;
			};
		};
	};
	if ((_109517_cont.get()._field_It != 0LLU)) {
		if ((!(_1dcdbdae3_checkValidContLabel(_self_, _109517_cont.get()._field_It)))) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_109517_cont, &__jule_any_type42)); };
}



inline void _1dcdbe709_checkLabel(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd491cd_LabelSt> _114134_l) {
	if ((_1dcdb8c42_findLabel(_self_.ptr(), _114134_l.get()._field_Ident) != nullptr)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _114134_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_114134_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1dcdb14a9_Label> _114717_label = jule::new_ptr<_1dcdb14a9_Label>(_1dcdb14a9_Label{._field_Ident=_114134_l.get()._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_114717_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1dcdb4611_scopeLabel>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(jule::new_ptr<_1dcdb4611_scopeLabel>(_1dcdb4611_scopeLabel{._field_token=_114134_l.get()._field_Token, ._field_label=_114717_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1dcdbe97e_pushGoto(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd49585_GotoSt> _116032_gt) {
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1dcdb1795_GotoSt>(_1dcdb1795_GotoSt{._field_Ident=_116032_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type43)); };
	{ jule::Slice<jule::Ptr<_1dcdb4a84_scopeGoto>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1dcdb4a84_scopeGoto>(_1dcdb4a84_scopeGoto{._field_gt=_116032_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})); };
}



inline void _1dcdbec04_checkPostfix(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4a4ba_AssignSt> _117236_a) {
	if ((_117236_a.get()._field_Left.len() > 1LL)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd4100a_Expr> _117817_expr = _117236_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1dce54cbc_Data> _117917_d = _1dce73307_evalExpr(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), _117817_expr);;
	if ((_117917_d == nullptr)) {
		return;;
	};
	_1dcdad000_checkAssign(&(_self_.get()._field_s), &(_117917_d), nullptr, _117236_a.get()._field_Setter);
	if ((_1dce8512c_Ptr(_117917_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dce91952_Ptr> _118721_ptr = _1dce8512c_Ptr(_117917_d.get()._field_Kind.ptr());;
		if (_1dce92425_IsUnsafe(_118721_ptr.ptr())) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1dce84b54_Prim(_117917_d.get()._field_Kind.ptr()) == nullptr) || (!(_24a233109_IsNum(_1dce84b54_Prim(_117917_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1dcdb1b4c_Postfix>(_1dcdb1b4c_Postfix{._field_Expr=_117917_d.get()._field_Model, ._field_Op=_117236_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44)); };
}



inline jule::Bool _1dcdc0012_isNewAssignIdent(_1dcdb5898_scopeChecker* _self_, jule::Str _120535_ident) {
	if ((_23ae293d6_IsIgnoreIdent(_120535_ident) || _120535_ident.empty())) {
		return false;;
	};
	return (_1dce53040_defByIdent((*(_self_))._field_table.ptr(), _120535_ident, false) == nullptr);;
}



inline jule::Bool _1dcdc0463_checkStructureAssignOp(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd5e457_StructIns>* _121247_s, jule::Ptr<_1dcd4a4ba_AssignSt>* _121267_a, jule::Ptr<_1dce54cbc_Data>* _121286_r) {
	jule::Ptr<_1dcd74648_FnIns> _121517_overload = nullptr;;
	{
		auto &_match_expr{ (*(_121267_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1c664334b:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1c6641dc7:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1c6642317:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1c664237d:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1c66423e4:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1c664245a:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1c66433b2:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1c6643428:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1c664348e:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1c6643505:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1c66422a1:;
			{
				_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1dcd5e7ba_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1c6641c1d:;
	};
	if ((_121517_overload == nullptr)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1dcd5e7ba_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1dcd73779_ParamIns> _124717_p = _121517_overload.get()._field_Params[1LL];;
	return _1dcde05c6_checkAssignType(_self_.get()._field_s, _124717_p.get()._field_Decl.get()._field_Reference, &(_124717_p.get()._field_Kind), _121286_r, (*(_121267_a)).get()._field_Setter);;
}



inline void _1dcdc06d8_checkSingleAssign(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4a4ba_AssignSt>* _125142_a) {
	jule::Ptr<_1dce54cbc_Data> _125217_l = nullptr;;
	if ((!(_23ae293d6_IsIgnoreIdent((*(_125142_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1dcd4100a_Expr> _125521_expr = (*(_125142_a)).get()._field_Left[0LL].get()._field_Expr;;
		_125217_l=_1dce73307_evalExpr(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), _125521_expr);
		if ((_125217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1dce5683a_Eval> _126217_eval = nullptr;;
	if ((_125217_l != nullptr)) {
		_126217_eval=_1dcddecbd_evalp(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0), _125217_l.get()._field_Kind);
	} else {
		_126217_eval=_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0));
	};
	_126217_eval.get()._field_unsafety=_1dcdb7a43_isUnsafe(_self_);
	jule::Ptr<_1dce54cbc_Data> _126917_r = _1dce73307_evalExpr(_126217_eval, (*(_125142_a)).get()._field_Right);;
	if ((_126917_r == nullptr)) {
		return;;
	};
	if ((_125217_l == nullptr)) {
		if (_1dce83702_Void(_126917_r.get()._field_Kind.ptr())) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_126917_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1dcdad000_checkAssign(&(_self_.get()._field_s), &(_125217_l), _126917_r, (*(_125142_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1dce867e3_Tup(_126917_r.get()._field_Kind.ptr()) != nullptr)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd6335c_OperandExprModel> _129117_lm = jule::new_ptr<_1dcd6335c_OperandExprModel>(_1dcd6335c_OperandExprModel{._field_Kind=_125217_l.get()._field_Kind, ._field_Model=_125217_l.get()._field_Model});;
	jule::Ptr<_1dcd6335c_OperandExprModel> _129517_rm = jule::new_ptr<_1dcd6335c_OperandExprModel>(_1dcd6335c_OperandExprModel{._field_Kind=_126917_r.get()._field_Kind, ._field_Model=_126917_r.get()._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1dcdb20c0_Assign>(_1dcdb20c0_Assign{._field_L=_129117_lm, ._field_R=_129517_rm, ._field_Op=(*(_125142_a)).get()._field_Setter}), &__jule_any_type45)); };
	if ((!(*(_125142_a)).get()._field_Setter.get()._field_Kind.equal("=", 1))) {
		jule::Ptr<_1dcd5e457_StructIns> _130221_strct = _1dce860a6_Struct(_125217_l.get()._field_Kind.ptr());;
		if ((_130221_strct != nullptr)) {
			_1dcdc0463_checkStructureAssignOp(_self_, &(_130221_strct), _125142_a, &(_126917_r));
			return;;
		};
		(*(_125142_a)).get()._field_Setter.get()._field_Kind=(*(_125142_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_125142_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1dce7554b_binaryEval _130921_solver = static__1dce75e31_new(_126217_eval, (*(_125142_a)).get()._field_Setter);;
		_126917_r=_1dce7ac8d_solveExplicit(&_130921_solver, &(_125217_l), &(_126917_r));
		if ((_126917_r == nullptr)) {
			return;;
		};
		((*(_125142_a)).get()._field_Setter.get()._field_Kind).append("=", 1);
		return;;
	};
	_1dce4035c_assignTypeChecker _131817_checker = _1dce4035c_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_125217_l.get()._field_Kind, ._field_d=_126917_r, ._field_errorToken=(*(_125142_a)).get()._field_Setter};;
	if (_1dce414d4_check(&_131817_checker)) {
		_129517_rm.get()._field_Model=_126917_r.get()._field_Model;
		_129117_lm.get()._field_Model=_125217_l.get()._field_Model;
	};
}



inline void _1dcdc0c16_processEndPartOfMultiAssign(_1dcdb5898_scopeChecker* _self_, jule::Ptr<_1dcdb2477_MultiAssign>* _133051_st, jule::Ptr<_1dcd4a4ba_AssignSt>* _133114_a, jule::Ptr<_1dcd49e7b_AssignLeft>* _133133_lexpr, jule::Ptr<_1dce54cbc_Data>* _133158_l, jule::Ptr<_1dce54cbc_Data>* _133173_r) {
	if (((!((*(_133133_lexpr)).get()._field_Reference)) && _23ae293d6_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident))) {
		if (_1dce83702_Void((*(_133173_r)).get()._field_Kind.ptr())) {
			_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_133114_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1dce54cbc_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*(_133114_a)).get()._field_Declarative && ((*(_133133_lexpr)).get()._field_Reference || _1dcdc0012_isNewAssignIdent(_self_, (*(_133133_lexpr)).get()._field_Ident)))) {
		if (_1dcdb9715_isDuplicatedIdent(_self_, 0LLU, (*(_133133_lexpr)).get()._field_Ident)) {
			_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1dcdd8657_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1dcdb7e83_stop(_self_);
			return;;
		};
		if (_23ae293d6_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident)) {
			_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1dce05cb2_Var> _135221_v = jule::new_ptr<_1dce05cb2_Var>(_1dce05cb2_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_133133_lexpr)).get()._field_Token, ._field_Ident=(*(_133133_lexpr)).get()._field_Ident, ._field_Mutable=(*(_133133_lexpr)).get()._field_Mutable, ._field_Reference=(*(_133133_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Expr=(*(_133114_a)).get()._field_Right, ._field_Data=(*(_133173_r))}), });;
		_1dcdecd86_checkVar((*(_self_))._field_s, &(_135221_v));
		_135221_v.get()._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1dce54cbc_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push(jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_135221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_135221_v.get()._field_Mutable, ._field_Reference=_135221_v.get()._field_Reference, ._field_Lvalue=(!(_135221_v.get()._field_Constant)), ._field_Model=jule::Any(_135221_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_135221_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_135221_v, &__jule_any_type8)); };
		return;;
	};
	if (((*(_133133_lexpr)).get()._field_Mutable || (*(_133133_lexpr)).get()._field_Reference)) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1dcdad000_checkAssign(&((*(_self_))._field_s), _133158_l, (*(_133173_r)), (*(_133114_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_1dcde34db_checkValidityForInitExpr((*(_self_))._field_s, (*(_133158_l)).get()._field_Mutable, false, &((*(_133158_l)).get()._field_Kind), _133173_r, &((*(_133114_a)).get()._field_Setter));
	_1dce4035c_assignTypeChecker _139517_checker = _1dce4035c_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_133158_l)).get()._field_Kind, ._field_d=(*(_133173_r)), ._field_errorToken=(*(_133114_a)).get()._field_Setter};;
	_1dce414d4_check(&_139517_checker);
	{ jule::Slice<jule::Ptr<_1dce54cbc_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push((*(_133158_l))); };
}



inline void _1dcdc0e9c_checkMultiAssign(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4a4ba_AssignSt>* _140541_a) {
	jule::Ptr<_1dce54cbc_Data> _140617_rd = _1dce73307_evalExpr(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), (*(_140541_a)).get()._field_Right);;
	if ((_140617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1dce54cbc_Data>> _141017_right = _1dcdac230_getDatasFromTupleData(&(_140617_rd));;
	if ((_141017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _141017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1c666338d:;
				{
					jule::Ptr<_1dcd65eb9_IndexingExprModel> _141425_iem = _141017_right[0LL].get()._field_Model.cast_ptr<_1dcd65eb9_IndexingExprModel>(&__jule_any_type46);;
					if ((_1dce8657e_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_141017_right=jule::Slice<jule::Ptr<_1dce54cbc_Data>>::make({jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dce8657e_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, })});
					};
				}
			}
			_match_end_1c6663338:;
		};
	};
	{
		
		if (((*(_140541_a)).get()._field_Left.len() > _141017_right.len())) {
			_case_begin_1c6662e81:;
			{
				_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_140541_a)).get()._field_Left.len() < _141017_right.len())) {
			_case_begin_1c6663008:;
			{
				_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c6662c2d:;
	};
	jule::Ptr<_1dcdb2477_MultiAssign> _143317_st = jule::new_ptr<_1dcdb2477_MultiAssign>(_1dcdb2477_MultiAssign{._field_R=_140617_rd.get()._field_Model});;
	{
		auto expr = &((*(_140541_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6666c65:;
		if (it != expr_end) {
			jule::I64 _143613_i = it - expr->begin();
			{
				jule::Ptr<_1dcd49e7b_AssignLeft> _143721_lexpr = (*(_140541_a)).get()._field_Left[_143613_i];;
				jule::Ptr<_1dce54cbc_Data> _143821_l = nullptr;;
				if (((!(_23ae293d6_IsIgnoreIdent(_143721_lexpr.get()._field_Ident))) && ((!((*(_140541_a)).get()._field_Declarative)) || (!(_1dcdc0012_isNewAssignIdent(_self_.ptr(), _143721_lexpr.get()._field_Ident)))))) {
					_143821_l=_1dce73307_evalExpr(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), _143721_lexpr.get()._field_Expr);
					if ((_143821_l == nullptr)) {
						goto _iter_next_1c6666c65;
					};
				};
				jule::Ptr<_1dce54cbc_Data> _144621_r = _141017_right[_143613_i];;
				_1dcdc0c16_processEndPartOfMultiAssign(_self_.ptr(), &(_143317_st), _140541_a, &(_143721_lexpr), &(_143821_l), &(_144621_r));
			}
			_iter_next_1c6666c65:;
			++it;
			_143613_i++;
			goto _iter_begin_1c6666c65;
		}
		_iter_end_1c6666c65:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_143317_st, &__jule_any_type47)); };
}



inline void _1dcdc1222_checkAssignSt(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4a4ba_AssignSt> _145237_a) {
	{
		
		if (_23ae2b482_IsPostfixOp(_145237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1c666ad46:;
			{
				_1dcdbec04_checkPostfix(_self_, _145237_a);
			}
		}
		else if (((_145237_a.get()._field_Left.len() == 1LL) && (!(_145237_a.get()._field_Declarative)))) {
			_case_begin_1c666b220:;
			{
				_1dcdc06d8_checkSingleAssign(_self_, &(_145237_a));
			}
		}
		else {
			_case_begin_1c66673b4:;
			{
				_1dcdc0e9c_checkMultiAssign(_self_, &(_145237_a));
			}
		}
		_match_end_1c66672e8:;
	};
}



inline jule::Ptr<_1dcdadc6a_Scope> _1dcdc15c9_checkCaseScope(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcdb35cc_Case>* _146335_c, jule::Ptr<_1dcd4b9b6_ScopeTree>* _146350_tree) {
	jule::Ptr<_1dcdb5898_scopeChecker> _146417_ssc = _1dcdc5a51_newChildChecker(_self_);;
	_146417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_146335_c))));
	return _1dcdba6e4_checkChildSc(_self_, _146350_tree, &(_146417_ssc));;
}



inline jule::Ptr<_1dcdb35cc_Case> _1dcdc1ac4_checkCase(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcdb2a82_Match> _146933_m, jule::I64 _146944_i, jule::Ptr<_1dcd53270_Case> _146956_c, jule::Ptr<_1dce54cbc_Data> _146975_expr) {
	jule::Ptr<_1dcdb35cc_Case> _147017_case = _146933_m.get()._field_Cases[_146944_i];;
	_147017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1dce54cbc_Data>>::alloc(0LL, _146956_c.get()._field_Exprs.len());
	jule::Bool _147217_constMatched = false;;
	jule::Ptr<_1dce5683a_Eval> _147317_eval = _1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0));;
	{
		auto expr = &(_146956_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6670422:;
		if (it != expr_end) {
			jule::Ptr<_1dcd4100a_Expr> _147421_e = *it;
			{
				jule::Ptr<_1dce54cbc_Data> _147521_d = _1dce725c0_evalExprKind(_147317_eval, _147421_e.get()._field_Kind);;
				if ((_147521_d == nullptr)) {
					goto _iter_next_1c6670422;
				};
				if (_146933_m.get()._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1dce54cbc_Data>> &__jule_push_dest = _147017_case.get()._field_Exprs; __jule_push_dest.push(_147521_d); };
					if ((_1dcdabe88_countMatchType(&(_146933_m), &(_147521_d.get()._field_Kind)) > 1LL)) {
						_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_147521_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_146975_expr.get()._field_Kind.get()._field_Generic) {
						_147217_constMatched=(_147217_constMatched || _1dce82aec_Equal(_146975_expr.get()._field_Kind, _147521_d.get()._field_Kind));
					} else {
						if ((_1dce85605_TypeEnum(_146975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1dcde0a27_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
						} else {
							jule::Ptr<_1dcd83bb8_Trait> _149029_trt = _1dce8631a_Trait(_146975_expr.get()._field_Kind.ptr());;
							if ((_149029_trt != nullptr)) {
								_1dcde0a27_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1c6670422;
				} else if (_146933_m.get()._field_Comptime) {
					if ((!(_1dce5563b_IsConst(_147521_d.ptr())))) {
						_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_147217_constMatched=(_147217_constMatched || _24a23531a_ReadBool(_147521_d.get()._field_Constant.ptr()));
					};
				};
				if (_147521_d.get()._field_Decl) {
					_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1dcdd8657_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1c6670422;
				};
				{ jule::Slice<jule::Ptr<_1dce54cbc_Data>> &__jule_push_dest = _147017_case.get()._field_Exprs; __jule_push_dest.push(_147521_d); };
				_1dce4035c_assignTypeChecker _151321_checker = _1dce4035c_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_146975_expr.get()._field_Kind, ._field_d=_147521_d, ._field_errorToken=_147421_e.get()._field_Token};;
				_1dce414d4_check(&_151321_checker);
			}
			_iter_next_1c6670422:;
			++it;
			goto _iter_begin_1c6670422;
		}
		_iter_end_1c6670422:;
	};
	if (((!(_146933_m.get()._field_Comptime)) || _147217_constMatched)) {
		_147017_case.get()._field_Scope=_1dcdc15c9_checkCaseScope(_self_, &(_147017_case), &(_146956_c.get()._field_Scope));
	};
	return _147017_case;;
}



inline void _1dcdc1e8c_checkCases(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd53946_MatchCase>* _152735_m, jule::Ptr<_1dcdb2a82_Match> _152754_rm, jule::Ptr<_1dce54cbc_Data> _152770_expr) {
	_152754_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1dcdb35cc_Case>>::alloc(0LL, (*(_152735_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6679bbd:;
		if (it != expr_end) {
			jule::I64 _152913_i = it - expr->begin();
			{
				jule::Ptr<_1dcdb35cc_Case> _153021_case = jule::new_ptr<_1dcdb35cc_Case>(_1dcdb35cc_Case{._field_Owner=_152754_rm, });;
				if ((_152913_i > 0LL)) {
					_152754_rm.get()._field_Cases[(_152913_i - 1LL)].get()._field_Next=_153021_case;
				};
				{ jule::Slice<jule::Ptr<_1dcdb35cc_Case>> &__jule_push_dest = _152754_rm.get()._field_Cases; __jule_push_dest.push(_153021_case); };
			}
			_iter_next_1c6679bbd:;
			++it;
			_152913_i++;
			goto _iter_begin_1c6679bbd;
		}
		_iter_end_1c6679bbd:;
	};
	if (((_152754_rm.get()._field_Default != nullptr) && ((*(_152735_m)).get()._field_Cases.len() > 0LL))) {
		_152754_rm.get()._field_Cases[(_152754_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_152754_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c667c63d:;
		if (it != expr_end) {
			jule::I64 _154314_i = it - expr->begin();
			jule::Ptr<_1dcd53270_Case> _154321_c = *it;
			{
				_1dcdc1ac4_checkCase(_self_, _152754_rm, _154314_i, _154321_c, _152770_expr);
			}
			_iter_next_1c667c63d:;
			++it;
			_154314_i++;
			goto _iter_begin_1c667c63d;
		}
		_iter_end_1c667c63d:;
	};
}



inline jule::Ptr<_1dcdb35cc_Case> _1dcdc2344_checkDefault(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcdb2a82_Match> _154836_m, jule::Ptr<_1dcd521a3_Else> _154851_d) {
	jule::Ptr<_1dcdb35cc_Case> _154917_def = jule::new_ptr<_1dcdb35cc_Case>(_1dcdb35cc_Case{._field_Owner=_154836_m, });;
	_154917_def.get()._field_Scope=_1dcdc15c9_checkCaseScope(_self_, &(_154917_def), &(_154851_d.get()._field_Scope));
	return _154917_def;;
}



inline void _1dcdc2663_checkComptimePanic(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_23ae26b42_Token> _155638_callToken, jule::Ptr<_1dcdadc6a_Scope>* _155658_s) {
	if (((*(_155658_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _156013_stmt = (*(_155658_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _156013_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c6680751:;
			{
				jule::Ptr<_1dce54cbc_Data> _156317_d = _156013_stmt.cast_ptr<_1dce54cbc_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _156317_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1c66815a9:;
						{
							jule::Ptr<_1dcd6a771_BuiltinPanicCallExprModel> _156621_m = _156317_d.get()._field_Model.cast_ptr<_1dcd6a771_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _156621_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1c6682544:;
									{
										jule::Ptr<_24a233549_Const> _156925_c = _156621_m.get()._field_Expr.cast_ptr<_24a233549_Const>(&__jule_any_type19);;
										if (_24a237927_IsStr(_156925_c.ptr())) {
											if ((_155638_callToken == nullptr)) {
												jule::Ptr<_1dcdb5898_scopeChecker> _157237_root = _1dcdb8934_getHardRoot(_self_);;
												_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _157237_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_24a23557e_ReadStr(_156925_c.ptr()), &__jule_any_type5)}));
											} else {
												_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _155638_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_24a23557e_ReadStr(_156925_c.ptr()), &__jule_any_type5)}));
											};
											_1dcdb7e83_stop(_self_.ptr());
										};
									}
								}
								_match_end_1c6682335:;
							};
						}
					}
					_match_end_1c66811ad:;
				};
			}
		}
		_match_end_1c66806da:;
	};
}



inline void _1dcdc2982_processConstMatch(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcdb2a82_Match>* _158442_tm, jule::Ptr<_1dcd53946_MatchCase>* _158459_m) {
	{
		auto expr = &((*(_158442_tm)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6680c7e:;
		if (it != expr_end) {
			jule::I64 _158514_i = it - expr->begin();
			jule::Ptr<_1dcdb35cc_Case> _158521_c = *it;
			{
				if ((_158521_c.get()._field_Scope != nullptr)) {
					jule::Ptr<_23ae26b42_Token> _158725_token = nullptr;;
					if (((!((*(_158442_tm)).get()._field_TypeMatch)) && (_158521_c.get()._field_Scope.get()._field_Stmts.len() > 0LL))) {
						_158725_token=(*(_158459_m)).get()._field_Cases[_158514_i].get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
					};
					_1dcdc2663_checkComptimePanic(_self_, _158725_token, &(_158521_c.get()._field_Scope));
					(*(_158442_tm)).get()._field_Default=_158521_c;
					(*(_158442_tm)).get()._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1c6680c7e:;
			++it;
			_158514_i++;
			goto _iter_begin_1c6680c7e;
		}
		_iter_end_1c6680c7e:;
	};
	if (((*(_158459_m)).get()._field_Default != nullptr)) {
		(*(_158442_tm)).get()._field_Cases=nullptr;
		(*(_158442_tm)).get()._field_Default=_1dcdc2344_checkDefault(_self_, (*(_158442_tm)), (*(_158459_m)).get()._field_Default);
		if (((*(_158442_tm)).get()._field_Default != nullptr)) {
			jule::Ptr<_23ae26b42_Token> _160125_token = nullptr;;
			if ((!((*(_158442_tm)).get()._field_TypeMatch))) {
				_160125_token=(*(_158459_m)).get()._field_Default.get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
			};
			_1dcdc2663_checkComptimePanic(_self_, _160125_token, &((*(_158442_tm)).get()._field_Default.get()._field_Scope));
		};
	} else {
		(*(_158442_tm)).get()._field_Cases=nullptr;
	};
}



inline void _1dcdc2c07_checkTypeMatch(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd53946_MatchCase>* _161339_m) {
	jule::Ptr<_1dce54cbc_Data> _161417_d = _1dce72bdb_eval(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), (*(_161339_m)).get()._field_Expr);;
	if ((_161417_d == nullptr)) {
		return;;
	};
	if (((!(_161417_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1dce84b54_Prim(_161417_d.get()._field_Kind.ptr()) != nullptr) && _1dce8d102_IsAny(_1dce84b54_Prim(_161417_d.get()._field_Kind.ptr()).ptr())) || (_1dce8631a_Trait(_161417_d.get()._field_Kind.ptr()) != nullptr)) || (_1dce85605_TypeEnum(_161417_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_161339_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcdb2a82_Match> _162517_tm = jule::new_ptr<_1dcdb2a82_Match>(_1dcdb2a82_Match{._field_Expr=_161417_d, ._field_TypeMatch=true, });;
	_162517_tm.get()._field_Comptime=_162517_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic;
	if (((!(_162517_tm.get()._field_Comptime)) && ((*(_161339_m)).get()._field_Default != nullptr))) {
		_162517_tm.get()._field_Default=_1dcdc2344_checkDefault(_self_, _162517_tm, (*(_161339_m)).get()._field_Default);
	};
	_1dcdc1e8c_checkCases(_self_, _161339_m, _162517_tm, _161417_d);
	if (_162517_tm.get()._field_Comptime) {
		_1dcdc2982_processConstMatch(_self_, &(_162517_tm), _161339_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_162517_tm, &__jule_any_type48)); };
}



inline void _1dcdc2e7c_checkCommonMatch(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd53946_MatchCase>* _164641_m) {
	jule::Ptr<_1dce54cbc_Data> _164717_d = nullptr;;
	if (((*(_164641_m)).get()._field_Expr == nullptr)) {
		_164717_d=jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Constant=static__24a233eb7_NewBool(true)});
		_164717_d.get()._field_Model=jule::Any(_164717_d.get()._field_Constant, &__jule_any_type19);
	} else {
		_164717_d=_1dce73307_evalExpr(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), (*(_164641_m)).get()._field_Expr);
		if ((_164717_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1dcdb2a82_Match> _166117_mc = jule::new_ptr<_1dcdb2a82_Match>(_1dcdb2a82_Match{._field_Expr=_164717_d, ._field_Comptime=(((((*(_164641_m)).get()._field_Expr != nullptr) && _1dce5563b_IsConst(_164717_d.ptr())) && _24a2376b3_IsBool(_164717_d.get()._field_Constant.ptr())) && _24a23531a_ReadBool(_164717_d.get()._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_166117_mc, &__jule_any_type48)); };
	if (((!(_166117_mc.get()._field_Comptime)) && ((*(_164641_m)).get()._field_Default != nullptr))) {
		_166117_mc.get()._field_Default=_1dcdc2344_checkDefault(_self_, _166117_mc, (*(_164641_m)).get()._field_Default);
	};
	_1dcdc1e8c_checkCases(_self_, _164641_m, _166117_mc, _164717_d);
	if (_166117_mc.get()._field_Comptime) {
		_1dcdc2982_processConstMatch(_self_, &(_166117_mc), _164641_m);
	};
}



inline void _1dcdc3202_checkMatch(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd53946_MatchCase> _168434_m) {
	if (_168434_m.get()._field_TypeMatch) {
		_1dcdc2c07_checkTypeMatch(_self_, &(_168434_m));
		return;;
	};
	_1dcdc2e7c_checkCommonMatch(_self_, &(_168434_m));
}



inline void _1dcdc3477_checkFall(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd49871_FallSt> _169229_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1dcdb845b_isDeferred(_self_))) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _169229_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1dcdb35cc_Case* _170017_case = ((_1dcdb35cc_Case*)(_self_.get()._field_cse));;
	if (_170017_case->_field_Owner.get()._field_Comptime) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _169229_f.get()._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if ((_170017_case->_field_Next == nullptr)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _169229_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1dcdd8657_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1dcdb3ba4_FallSt>(_1dcdb3ba4_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170017_case->_field_Next))}), &__jule_any_type49)); };
}



inline jule::Ptr<_1dcdb11bd_BreakSt> _1dcdc3785_checkBreakWithLabel(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd514c1_BreakSt> _171539_b) {
	jule::Ptr<_1dcdb11bd_BreakSt> _171617_brk = _1dcdc3a93_checkPlainBreak(_self_, _171539_b);;
	if ((_171617_brk == nullptr)) {
		return nullptr;;
	};
	_171617_brk.get()._field_It=0LLU;
	_171617_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1dcdb4611_scopeLabel> _172617_label = _1dcdab471_findLabelParent(_171539_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_172617_label == nullptr)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_172617_label.get()._field_used=true;
	if (((_172617_label.get()._field_pos + 1LL) >= _172617_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _173913_i = (_172617_label.get()._field_pos + 1LL);;
	if ((_173913_i >= _172617_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _174321_st = _172617_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_173913_i];;
		{
			auto &_match_expr{ _174321_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1c66a1332:;
				{
					_171617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_1dcdaeab2_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1c66a1a6e:;
				{
					_171617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_1dcdb091a_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1c66a1ad5:;
				{
					_171617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_1dcdb0035_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1c66a1b5c:;
				{
					_171617_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174321_st.cast_ptr<_1dcdb2a82_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1c66a18c6:;
				{
					_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1c66a1871:;
		};
	};
	if ((_171617_brk.get()._field_It != 0LLU)) {
		if ((!(_1dcdbde01_checkValidBreakLabel(_self_, _171617_brk.get()._field_It)))) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_171617_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1dcdbde01_checkValidBreakLabel(_self_, _171617_brk.get()._field_Mtch)))) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _171539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_171539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _171617_brk;;
}



inline jule::Ptr<_1dcdb11bd_BreakSt> _1dcdc3a93_checkPlainBreak(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd514c1_BreakSt> _177335_b) {
	if (_1dcdb845b_isDeferred(_self_)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _177335_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcdb5898_scopeChecker> _177917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_177917_scope.get()._field_it == 0LLU) && (_177917_scope.get()._field_cse == 0LLU)) && (_177917_scope.get()._field_parent != nullptr)) && (_177917_scope.get()._field_owner == nullptr))) {
			_case_begin_1c66a7734:;
			{
				_177917_scope=_177917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_177917_scope.get()._field_it != 0LLU)) {
			_case_begin_1c66a77ab:;
			{
				return jule::new_ptr<_1dcdb11bd_BreakSt>(_1dcdb11bd_BreakSt{._field_It=_177917_scope.get()._field_it, });;
			}
		}
		else if ((_177917_scope.get()._field_cse != 0LLU)) {
			_case_begin_1c66a7833:;
			{
				return jule::new_ptr<_1dcdb11bd_BreakSt>(_1dcdb11bd_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1dcdb35cc_Case*)(_177917_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1c66a768a:;
	};
	_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _177335_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1dcdc3d18_checkBreak(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd514c1_BreakSt> _179530_b) {
	if ((_179530_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1dcdb11bd_BreakSt> _179721_brk = _1dcdc3785_checkBreakWithLabel(_self_, _179530_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_179721_brk, &__jule_any_type50)); };
		return;;
	};
	jule::Ptr<_1dcdb11bd_BreakSt> _180217_brk = _1dcdc3a93_checkPlainBreak(_self_, _179530_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_180217_brk, &__jule_any_type50)); };
}



inline void _1dcdc408d_checkRet(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4e843_RetSt> _180632_r) {
	if (_1dcdb845b_isDeferred(_self_)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _180632_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dcdb4006_RetSt> _181117_rt = jule::new_ptr<_1dcdb4006_RetSt>(_1dcdb4006_RetSt{._field_Func=_1dcdb86c0_getRoot(_self_).get()._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_181117_rt, &__jule_any_type51)); };
	jule::Ptr<_1dce4d1e4_retTypeChecker> _181617_rtc = jule::new_ptr<_1dce4d1e4_retTypeChecker>(_1dce4d1e4_retTypeChecker{._field_sc=_self_, ._field_f=_181117_rt.get()._field_Func, ._field_errorToken=_180632_r.get()._field_Token, });;
	jule::Bool _182113_ok = _1dce4dd60_check(_181617_rtc.ptr(), &(_180632_r.get()._field_Expr));;
	if ((!(_182113_ok))) {
		return;;
	};
	if ((_180632_r.get()._field_Expr != nullptr)) {
		_181117_rt.get()._field_Expr=_181617_rtc.get()._field_model;
	};
}



inline void _1dcdc4313_checkUseExpr(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4189b_UseExpr> _183132_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _183132_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1dcdb845b_isDeferred(_self_)) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _183132_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _183132_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1dcdc4588_checkNode(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Any* _184734_node) {
	{
		auto &_match_expr{ (*(_184734_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1c66b43de:;
			{
				_1dcdbac77_checkAnonScope(_self_, (*(_184734_node)).cast_ptr<_1dcd4b9b6_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c66b3bc4:;
			{
				_1dcdb998a_checkVarDecl(_self_, (*(_184734_node)).cast_ptr<_1dcd4e48b_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1c66b429b:;
			{
				_1dcdb9c10_checkTypeAliasDecl(_self_, (*(_184734_node)).cast_ptr<_1dcd52cec_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1c66b40c0:;
			{
				_1dcdbb31b_checkExpr(_self_, (*(_184734_node)).cast_ptr<_1dcd4100a_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1c66b44cc:;
			{
				_1dcdbbbac_checkConditional(_self_, (*(_184734_node)).cast_ptr<_1dcd52626_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1c66b4543:;
			{
				_1dcdbd7d5_checkIter(_self_, (*(_184734_node)).cast_ptr<_1dcd4eea3_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1c66b45a9:;
			{
				_1dcdbe484_checkCont(_self_, (*(_184734_node)).cast_ptr<_1dcd51878_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1c66b4620:;
			{
				_1dcdbe709_checkLabel(_self_, (*(_184734_node)).cast_ptr<_1dcd491cd_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1c66b4686:;
			{
				_1dcdbe97e_pushGoto(_self_, (*(_184734_node)).cast_ptr<_1dcd49585_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1c66b46ec:;
			{
				_1dcdc1222_checkAssignSt(_self_, (*(_184734_node)).cast_ptr<_1dcd4a4ba_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1c66b4763:;
			{
				_1dcdc3202_checkMatch(_self_, (*(_184734_node)).cast_ptr<_1dcd53946_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1c66b47c9:;
			{
				_1dcdc3477_checkFall(_self_, (*(_184734_node)).cast_ptr<_1dcd49871_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1c66b4840:;
			{
				_1dcdc3d18_checkBreak(_self_, (*(_184734_node)).cast_ptr<_1dcd514c1_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c66b48b7:;
			{
				_1dcdc408d_checkRet(_self_, (*(_184734_node)).cast_ptr<_1dcd4e843_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c66b493e:;
			{
				_1dcdc4313_checkUseExpr(_self_, (*(_184734_node)).cast_ptr<_1dcd4189b_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1c66b3d4a:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1c66b3c6d:;
	};
}



inline void _1dcdc4764_checkResult(jule::Ptr<_1dcdb5898_scopeChecker> _self_) {
	_1dcd4b3ab_Stmt _188517_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _188517_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c66bc54b:;
			{
				jule::Ptr<_1dcd4189b_UseExpr> _188821_ue = _188517_stmt._field_Data.cast_ptr<_1dcd4189b_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1dce54cbc_Data> _188921_d = _1dce73307_evalExpr(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), _188821_ue.get()._field_Expr);;
				if ((_188921_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_188921_d, &__jule_any_type24)); };
				jule::Ptr<_1dce4d1e4_retTypeChecker> _189421_rtc = jule::new_ptr<_1dce4d1e4_retTypeChecker>(_1dce4d1e4_retTypeChecker{._field_sc=_self_, ._field_types=_1dcd7576a_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_188821_ue.get()._field_Expr.get()._field_Token, });;
				_1dce4dd60_check(_189421_rtc.ptr(), &(_188821_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1c66bbd0e:;
			{
				jule::Ptr<_1dcd4100a_Expr> _190121_expr = _188517_stmt._field_Data.cast_ptr<_1dcd4100a_Expr>(&__jule_any_type53);;
				jule::Ptr<_1dce54cbc_Data> _190221_d = _1dce73307_evalExpr(_1dcde00cb_eval(_self_.get()._field_s, jule::Trait<_1dcea0763_Lookup>(_self_, 0)), _190121_expr);;
				if ((_190221_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _190221_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1c66c1e68:;
						{
							jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel> _190825_m = _190221_d.get()._field_Model.cast_ptr<_1dcd6cb08_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1dcdbb096_processErrorCall(_self_, &(_190825_m), _190121_expr.get()._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_190221_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1c66c19c3:;
						{
							return;;
						}
					}
					_match_end_1c66c1ab1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1c66bbd75:;
			{
				_1dcdc4588_checkNode(_self_, &(_188517_stmt._field_Data));
			}
		}
		else {
			_case_begin_1c66bbc98:;
			{
				_1dcdc4588_checkNode(_self_, &(_188517_stmt._field_Data));
				return;;
			}
		}
		_match_end_1c66bbb22:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1dcdc4940_checkTree(jule::Ptr<_1dcdb5898_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _193017_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_193017_n)--;
	};
	for (; (_self_.get()._field_i < _193017_n); (_self_.get()._field_i)++) {
		{
			_1dcd4b3ab_Stmt _193821_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1dcdc4588_checkNode(_self_, &(_193821_stmt._field_Data));
			if (_1dcdb81e7_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1c66c4d39:;
	}
	_iter_end_1c66c4d39:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1dcdc4764_checkResult(_self_);
	};
}



inline void _1dcdc4c5e_checkGoto(_1dcdb5898_scopeChecker* _self_, jule::Ptr<_1dcdb4a84_scopeGoto>* _194933_gt, jule::Ptr<_1dcdb4611_scopeLabel>* _194954_label) {
	jule::Ptr<_1dcdb5898_scopeChecker> _195017_gtsc = (*(_194933_gt)).get()._field_scope;;
	while (((_195017_gtsc.get()._field_childIndex - 1LL) > (*(_194954_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_195017_gtsc=_195017_gtsc.get()._field_parent;
		}
	_iter_next_1c66c7721:;
	}
	_iter_end_1c66c7721:;;
	jule::I64 _195517_n = 0LL;;
	if ((_195017_gtsc.get()._field_scope == (*(_194954_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_194933_gt)).get()._field_pos > (*(_194954_label)).get()._field_pos)) {
			return;;
		};
		_195517_n=(*(_194933_gt)).get()._field_pos;
	};
	jule::I64 _196817_i = ((*(_194954_label)).get()._field_pos - 1LL);;
	if ((_195517_n == 0LL)) {
		{
			auto expr = &((*(_194954_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c66c9ba7:;
			if (it != expr_end) {
				jule::I64 _197117_j = it - expr->begin();
				jule::Any _197120_stmt = *it;
				{
					if (_1dcdabb47_stmtIsGotoScope(&(_197120_stmt), &(_195017_gtsc.get()._field_scope))) {
						_195517_n=_197117_j;
						goto _iter_end_1c66c9ba7;
					};
				}
				_iter_next_1c66c9ba7:;
				++it;
				_197117_j++;
				goto _iter_begin_1c66c9ba7;
			}
			_iter_end_1c66c9ba7:;
		};
	};
	for (; (_196817_i >= _195517_n); (_196817_i)--) {
		{
			jule::Any _198121_stmt = (*(_194954_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_196817_i];;
			if (_1dcdad7d6_stmtIsDef(&(_198121_stmt))) {
				_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_194933_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_194933_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1c66cab53:;
	}
	_iter_end_1c66cab53:;;
}



inline void _1dcdc4e3a_checkGotos(_1dcdb5898_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c66c98cc:;
		if (it != expr_end) {
			jule::Ptr<_1dcdb4a84_scopeGoto> _199021_gt = *it;
			{
				jule::Ptr<_1dcdb4611_scopeLabel> _199121_label = _1dcdb935d_findLabelAll(_self_, _199021_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_199121_label == nullptr)) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _199021_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_199021_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1c66c98cc;
				};
				_199121_label.get()._field_used=true;
				_1dcdc4c5e_checkGoto(_self_, &(_199021_gt), &(_199121_label));
			}
			_iter_next_1c66c98cc:;
			++it;
			goto _iter_begin_1c66c98cc;
		}
		_iter_end_1c66c98cc:;
	};
}



inline void _1dcdc5116_checkLabels(_1dcdb5898_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c66cc825:;
		if (it != expr_end) {
			jule::Ptr<_1dcdb4611_scopeLabel> _200316_l = *it;
			{
				if ((!(_200316_l.get()._field_used))) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _200316_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_200316_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1c66cc825:;
			++it;
			goto _iter_begin_1c66cc825;
		}
		_iter_end_1c66cc825:;
	};
}



inline void _1dcdc52e2_checkVars(_1dcdb5898_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c66cebe0:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> _201116_v = *it;
			{
				if (((((!(_201116_v.get()._field_Used)) && (!(_201116_v.get()._field_Constant))) && (!(_23ae293d6_IsIgnoreIdent(_201116_v.get()._field_Ident)))) && (!(_23ae2967d_IsAnonIdent(_201116_v.get()._field_Ident))))) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _201116_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_201116_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1c66cebe0:;
			++it;
			goto _iter_begin_1c66cebe0;
		}
		_iter_end_1c66cebe0:;
	};
}



inline void _1dcdc54bd_checkAliases(_1dcdb5898_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c66d29e5:;
		if (it != expr_end) {
			jule::Ptr<_1dce816de_TypeAlias> _201916_a = *it;
			{
				if ((((!(_201916_a.get()._field_Used)) && (!(_23ae293d6_IsIgnoreIdent(_201916_a.get()._field_Ident)))) && (!(_23ae2967d_IsAnonIdent(_201916_a.get()._field_Ident))))) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _201916_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_201916_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1c66d29e5:;
			++it;
			goto _iter_begin_1c66d29e5;
		}
		_iter_end_1c66d29e5:;
	};
}



inline void _1dcdc57dc_check(jule::Ptr<_1dcdb5898_scopeChecker> _self_, jule::Ptr<_1dcd4b9b6_ScopeTree>* _202730_tree, jule::Ptr<_1dcdadc6a_Scope>* _202753_s) {
	(*(_202753_s)).get()._field_Deferred=(*(_202730_tree)).get()._field_Deferred;
	(*(_202753_s)).get()._field_Unsafety=(*(_202730_tree)).get()._field_Unsafety;
	jule::I64 _203113_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_202730_tree));
	_self_.get()._field_scope=(*(_202753_s));
	_1dcdc4940_checkTree(_self_);
	if ((_203113_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1dcdc52e2_checkVars(_self_.ptr());
		_1dcdc54bd_checkAliases(_self_.ptr());
		if (_1dcdb7ca7_isRoot(_self_.ptr())) {
			_1dcdc4e3a_checkGotos(_self_.ptr());
			_1dcdc5116_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1dcdb5898_scopeChecker> _1dcdc5a51_newChildChecker(jule::Ptr<_1dcdb5898_scopeChecker> _self_) {
	jule::Ptr<_1dcdb5898_scopeChecker> _205117_base = _1dcdaac9a_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_205117_base.get()._field_parent=_self_;
	_205117_base.get()._field_labels=_self_.get()._field_labels;
	_205117_base.get()._field_gotos=_self_.get()._field_gotos;
	_205117_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _205117_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdb5898_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1dcdc69ec_checkCdef(_1dcdc6601_directiveChecker* _self_, jule::Ptr<_1dcd09369_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c66d85de:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1dcd71997_Fn>(&__jule_any_type65).get()._field_Binded) {
					goto _match_end_1c66d8820;
				};
				goto _case_begin_1c66d8875;
			}
		}
		else {
			_case_begin_1c66d8875:;
			{
				_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1c66d8820:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1dcdc6c72_checkTypedef(_1dcdc6601_directiveChecker* _self_, jule::Ptr<_1dcd09369_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c66daa31:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66).get()._field_Binded) {
					goto _match_end_1c66dac51;
				};
				goto _case_begin_1c66daca6;
			}
		}
		else {
			_case_begin_1c66daca6:;
			{
				_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1c66dac51:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1dcdc6ee7_checkDerive(_1dcdc6601_directiveChecker* _self_, jule::Ptr<_1dcd09369_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c66dce95:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66).get()._field_Binded))) {
					goto _match_end_1c66dd1b5;
				};
				goto _case_begin_1c66dd21a;
			}
		}
		else {
			_case_begin_1c66dd21a:;
			{
				_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c66dd1b5:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1dcdd8657_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1c66e163b:;
		}
		else {
			_case_begin_1c66ddaab:;
			{
				_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1c66e1273:;
	};
}



inline void _1dcdc726c_checkNamespace(_1dcdc6601_directiveChecker* _self_, jule::Ptr<_1dcd09369_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c66e295b:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66).get()._field_Binded))) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c66e29c2:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1dcd71997_Fn>(&__jule_any_type65).get()._field_Binded))) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c66e2a38:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8).get()._field_Binded))) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1c66e287e:;
			{
				_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1c66e2829:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_23ae26b42_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(5LLU))) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c66ea458:;
			{
				if ((_1dce7b497_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1dcd09369_Directive> _11625_typedef = jule::new_ptr<_1dcd09369_Directive>(_1dcd09369_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					{ jule::Slice<jule::Ptr<_1dcd09369_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_11625_typedef); };
				};
			}
		}
		_match_end_1c66ea403:;
	};
}



inline void _1dcdc74e2_checkDeprecated(_1dcdc6601_directiveChecker* _self_, jule::Ptr<_1dcd09369_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c66ebcd9:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66).get()._field_Binded) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c66ec669:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1dcd71997_Fn>(&__jule_any_type65).get()._field_Binded) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c66ec6d0:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8).get()._field_Binded) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1c66ec01a:;
			{
				_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1c66ebd72:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_23ae26b42_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(5LLU))) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1dcdc7767_checkTest(_1dcdc6601_directiveChecker* _self_, jule::Ptr<_1dcd09369_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c6701508:;
			{
				jule::Ptr<_1dcd71997_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1dcd71997_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_Binded)) && (!(_1dcd72646_IsInit(_16717_f.ptr())))) && (!(_1dcd723d2_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1c6704d03;
				};
				if (_1dcd7216d_IsMethod(_16717_f.ptr())) {
					_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1c6704d03;
				};
				goto _case_begin_1c6704d58;
			}
		}
		else {
			_case_begin_1c6704d58:;
			{
				_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1c6704d03:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1dcdc79dc_checkDirective(_1dcdc6601_directiveChecker* _self_, jule::Ptr<_1dcd09369_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1c6174542:;
			{
				_1dcdc69ec_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1c61745a8:;
			{
				_1dcdc6c72_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1c617461e:;
			{
				_1dcdc6ee7_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1c6174685:;
			{
				_1dcdc726c_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1c61751be:;
			{
				_1dcdc74e2_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1c6175235:;
			{
				_1dcdc7767_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1c617529b:;
			{
				_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1c61744cb:;
			{
				_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1c6174476:;
	};
}



inline void _1dcdc7bb8_check(_1dcdc6601_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6177479:;
		if (it != expr_end) {
			jule::Ptr<_1dcd09369_Directive> _20821_d = *it;
			{
				_1dcdc79dc_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1c6177479:;
			++it;
			goto _iter_begin_1c6177479;
		}
		_iter_end_1c6177479:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdc6601_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcdccb9b_SelectPackage(_1dcdcc6d4_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1dce05cb2_Var> _1dcdcd053_FindVar(_1dcdcc6d4_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1dcdce97d_isLookupable(_self_, _18926_ident)))) {
		return nullptr;;
	};
	return _1dcdc9deb_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _18926_ident, false);;
}



inline jule::Ptr<_1dce816de_TypeAlias> _1dcdcd40a_FindTypeAlias(_1dcdcc6d4_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1dcdce97d_isLookupable(_self_, _20132_ident)))) {
		return nullptr;;
	};
	return _1dcdca32a_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20132_ident, false);;
}



inline jule::Ptr<_1dcd5b641_Struct> _1dcdcd7b2_FindStruct(_1dcdcc6d4_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1dcdce97d_isLookupable(_self_, _21329_ident)))) {
		return nullptr;;
	};
	return _1dcdca715_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21329_ident, false);;
}



inline jule::Ptr<_1dcd71997_Fn> _1dcdcdb69_FindFn(_1dcdcc6d4_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1dcdce97d_isLookupable(_self_, _22525_ident)))) {
		return nullptr;;
	};
	return _1dcdcab77_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22525_ident, false);;
}



inline jule::Ptr<_1dcd83bb8_Trait> _1dcdcde77_FindTrait(_1dcdcc6d4_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1dcdce97d_isLookupable(_self_, _23628_ident)))) {
		return nullptr;;
	};
	return _1dcdcae85_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23628_ident);;
}



inline jule::Ptr<_1dcd8644b_Enum> _1dcdce285_FindEnum(_1dcdcc6d4_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1dcdce97d_isLookupable(_self_, _24727_ident)))) {
		return nullptr;;
	};
	return _1dcdcb2c6_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _24727_ident);;
}



inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcdce593_FindTypeEnum(_1dcdcc6d4_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1dcdce97d_isLookupable(_self_, _25831_ident)))) {
		return nullptr;;
	};
	return _1dcdcb617_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25831_ident);;
}



inline jule::Bool _1dcdce97d_isLookupable(_1dcdcc6d4_ImportInfo* _self_, jule::Str _26727_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1dcdcec8b_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1dcdcec8b_existIdent(_self_, _26727_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1dcdcec8b_existIdent(_1dcdcc6d4_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c618c2d5:;
		if (it != expr_end) {
			jule::Ptr<_23ae26b42_Token> *_28816_sident = it;
			{
				if (((*(_28816_sident)).get()._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1c618c2d5:;
			++it;
			goto _iter_begin_1c618c2d5;
		}
		_iter_end_1c618c2d5:;
	};
	return false;;
}



inline jule::Bool _1dcdd0022_isAccessibleViaSelection(_1dcdcc6d4_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1dcdcec8b_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdcc6d4_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcdd0792_SelectPackage(_1dcdd031e_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1dce05cb2_Var> _1dcdd0b49_FindVar(_1dcdd031e_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1dcdc9deb_findVarInPackage(&((*(_self_))._field_Files), _31426_ident, _31438_binded);;
}



inline jule::Ptr<_1dce816de_TypeAlias> _1dcdd1001_FindTypeAlias(_1dcdd031e_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1dcdca32a_findTypeAliasInPackage(&((*(_self_))._field_Files), _32032_ident, _32044_binded);;
}



inline jule::Ptr<_1dcd5b641_Struct> _1dcdd13a8_FindStruct(_1dcdd031e_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1dcdca715_findStructInPackage(&((*(_self_))._field_Files), _32629_ident, _32641_binded);;
}



inline jule::Ptr<_1dcd71997_Fn> _1dcdd1760_FindFn(_1dcdd031e_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1dcdcab77_findFnInPackage(&((*(_self_))._field_Files), _33225_ident, _33237_binded);;
}



inline jule::Ptr<_1dcd83bb8_Trait> _1dcdd1a6d_FindTrait(_1dcdd031e_Package* _self_, jule::Str _33828_ident) {
	return _1dcdcae85_findTraitInPackage(&((*(_self_))._field_Files), _33828_ident);;
}



inline jule::Ptr<_1dcd8644b_Enum> _1dcdd1d7b_FindEnum(_1dcdd031e_Package* _self_, jule::Str _34427_ident) {
	return _1dcdcb2c6_findEnumInPackage(&((*(_self_))._field_Files), _34427_ident);;
}



inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcdd2189_FindTypeEnum(_1dcdd031e_Package* _self_, jule::Str _35031_ident) {
	return _1dcdcb617_findTypeEnumInPackage(&((*(_self_))._field_Files), _35031_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdd031e_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcd98947_comptimeTypeInfo> _1dcdd53ce_pushComptimeTypeInfo(_1dcdd4e8e_commonSemaMeta* _self_, jule::Ptr<_1dce82437_TypeKind>* _21344_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61b2948:;
		if (it != expr_end) {
			jule::Ptr<_1dcd98947_comptimeTypeInfo> _21421_t2 = *it;
			{
				if (((_21421_t2.get()._field_base.get()._field_BindIdent == (*(_21344_t)).get()._field_BindIdent) && _1dce82aec_Equal(_21421_t2.get()._field_base, (*(_21344_t))))) {
					return _21421_t2;;
				};
			}
			_iter_next_1c61b2948:;
			++it;
			goto _iter_begin_1c61b2948;
		}
		_iter_end_1c61b2948:;
	};
	jule::Ptr<_1dcd98947_comptimeTypeInfo> _21917_t1 = jule::new_ptr<_1dcd98947_comptimeTypeInfo>(_1dcd98947_comptimeTypeInfo{._field_base=(*(_21344_t))});;
	{ jule::Slice<jule::Ptr<_1dcd98947_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_21917_t1); };
	return _21917_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdd4e8e_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcdd5e29_SelectPackage(_1dcdd59a6_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)> _24232_selector) {
	return _1dce50779_SelectPackage((*(_self_))._field_file.ptr(), _24232_selector);;
}



inline jule::Ptr<_1dce05cb2_Var> _1dcdd62d1_FindVar(_1dcdd59a6_Sema* _self_, jule::Str _25226_ident, jule::Bool _25238_binded) {
	jule::Ptr<_1dce05cb2_Var> _25417_v = _1dcdc9deb_findVarInPackage(&((*(_self_))._field_files), _25226_ident, _25238_binded);;
	if ((_25417_v != nullptr)) {
		return _25417_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61b5a7d:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _26021_imp = *it;
			{
				if ((!(_1dcdd3b19_impIsLookupable(&(_26021_imp), _25226_ident)))) {
					goto _iter_next_1c61b5a7d;
				};
				_25417_v=_1dcdcd053_FindVar(_26021_imp.ptr(), _25226_ident, _25238_binded);
				if (((_25417_v != nullptr) && _1dcdd8a0e_isAccessibleDefine(_self_, _25417_v.get()._field_Public, _25417_v.get()._field_Token))) {
					return _25417_v;;
				};
			}
			_iter_next_1c61b5a7d:;
			++it;
			goto _iter_begin_1c61b5a7d;
		}
		_iter_end_1c61b5a7d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dce816de_TypeAlias> _1dcdd6688_FindTypeAlias(_1dcdd59a6_Sema* _self_, jule::Str _27932_ident, jule::Bool _27944_binded) {
	jule::Ptr<_1dce816de_TypeAlias> _28117_ta = _1dcdca32a_findTypeAliasInPackage(&((*(_self_))._field_files), _27932_ident, _27944_binded);;
	if ((_28117_ta != nullptr)) {
		return _28117_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61b8267:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _28721_imp = *it;
			{
				if ((!(_1dcdd3b19_impIsLookupable(&(_28721_imp), _27932_ident)))) {
					goto _iter_next_1c61b8267;
				};
				_28117_ta=_1dcdcd40a_FindTypeAlias(_28721_imp.ptr(), _27932_ident, _27944_binded);
				if (((_28117_ta != nullptr) && _1dcdd8a0e_isAccessibleDefine(_self_, _28117_ta.get()._field_Public, _28117_ta.get()._field_Token))) {
					return _28117_ta;;
				};
			}
			_iter_next_1c61b8267:;
			++it;
			goto _iter_begin_1c61b8267;
		}
		_iter_end_1c61b8267:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd5b641_Struct> _1dcdd6a40_FindStruct(_1dcdd59a6_Sema* _self_, jule::Str _30629_ident, jule::Bool _30641_binded) {
	jule::Ptr<_1dcd5b641_Struct> _30817_s = _1dcdca715_findStructInPackage(&((*(_self_))._field_files), _30629_ident, _30641_binded);;
	if ((_30817_s != nullptr)) {
		return _30817_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61ba951:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _31321_imp = *it;
			{
				if ((!(_1dcdd3b19_impIsLookupable(&(_31321_imp), _30629_ident)))) {
					goto _iter_next_1c61ba951;
				};
				_30817_s=_1dcdcd7b2_FindStruct(_31321_imp.ptr(), _30629_ident, _30641_binded);
				if (((_30817_s != nullptr) && _1dcdd8a0e_isAccessibleDefine(_self_, _30817_s.get()._field_Public, _30817_s.get()._field_Token))) {
					return _30817_s;;
				};
			}
			_iter_next_1c61ba951:;
			++it;
			goto _iter_begin_1c61ba951;
		}
		_iter_end_1c61ba951:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd71997_Fn> _1dcdd6de7_FindFn(_1dcdd59a6_Sema* _self_, jule::Str _33125_ident, jule::Bool _33137_binded) {
	jule::Ptr<_1dcd71997_Fn> _33317_f = _1dcdcab77_findFnInPackage(&((*(_self_))._field_files), _33125_ident, _33137_binded);;
	if ((_33317_f != nullptr)) {
		return _33317_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61bd13a:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _33921_imp = *it;
			{
				if ((!(_1dcdd3b19_impIsLookupable(&(_33921_imp), _33125_ident)))) {
					goto _iter_next_1c61bd13a;
				};
				_33317_f=_1dcdcdb69_FindFn(_33921_imp.ptr(), _33125_ident, _33137_binded);
				if (((_33317_f != nullptr) && _1dcdd8a0e_isAccessibleDefine(_self_, _33317_f.get()._field_Public, _33317_f.get()._field_Token))) {
					return _33317_f;;
				};
			}
			_iter_next_1c61bd13a:;
			++it;
			goto _iter_begin_1c61bd13a;
		}
		_iter_end_1c61bd13a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd83bb8_Trait> _1dcdd7205_FindTrait(_1dcdd59a6_Sema* _self_, jule::Str _35828_ident) {
	jule::Ptr<_1dcd83bb8_Trait> _36017_t = _1dcdcae85_findTraitInPackage(&((*(_self_))._field_files), _35828_ident);;
	if ((_36017_t != nullptr)) {
		return _36017_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61c0516:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _36621_imp = *it;
			{
				if ((!(_1dcdd3b19_impIsLookupable(&(_36621_imp), _35828_ident)))) {
					goto _iter_next_1c61c0516;
				};
				_36017_t=_1dcdcde77_FindTrait(_36621_imp.ptr(), _35828_ident);
				if (((_36017_t != nullptr) && _1dcdd8a0e_isAccessibleDefine(_self_, _36017_t.get()._field_Public, _36017_t.get()._field_Token))) {
					return _36017_t;;
				};
			}
			_iter_next_1c61c0516:;
			++it;
			goto _iter_begin_1c61c0516;
		}
		_iter_end_1c61c0516:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd8644b_Enum> _1dcdd7513_FindEnum(_1dcdd59a6_Sema* _self_, jule::Str _38527_ident) {
	jule::Ptr<_1dcd8644b_Enum> _38717_e = _1dcdcb2c6_findEnumInPackage(&((*(_self_))._field_files), _38527_ident);;
	if ((_38717_e != nullptr)) {
		return _38717_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61c299c:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1dcdd3b19_impIsLookupable(&(_39321_imp), _38527_ident)))) {
					goto _iter_next_1c61c299c;
				};
				_38717_e=_1dcdce285_FindEnum(_39321_imp.ptr(), _38527_ident);
				if (((_38717_e != nullptr) && _1dcdd8a0e_isAccessibleDefine(_self_, _38717_e.get()._field_Public, _38717_e.get()._field_Token))) {
					return _38717_e;;
				};
			}
			_iter_next_1c61c299c:;
			++it;
			goto _iter_begin_1c61c299c;
		}
		_iter_end_1c61c299c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcdd7821_FindTypeEnum(_1dcdd59a6_Sema* _self_, jule::Str _41231_ident) {
	jule::Ptr<_1dcd87a46_TypeEnum> _41417_e = _1dcdcb617_findTypeEnumInPackage(&((*(_self_))._field_files), _41231_ident);;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61c4e33:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _42021_imp = *it;
			{
				if ((!(_1dcdd3b19_impIsLookupable(&(_42021_imp), _41231_ident)))) {
					goto _iter_next_1c61c4e33;
				};
				_41417_e=_1dcdce593_FindTypeEnum(_42021_imp.ptr(), _41231_ident);
				if (((_41417_e != nullptr) && _1dcdd8a0e_isAccessibleDefine(_self_, _41417_e.get()._field_Public, _41417_e.get()._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_1c61c4e33:;
			++it;
			goto _iter_begin_1c61c4e33;
		}
		_iter_end_1c61c4e33:;
	};
	return nullptr;;
}



inline jule::Bool _1dcdd7bea_isFlag(_1dcdd59a6_Sema* _self_, jule::I64 _43621_flags) {
	return (((*(_self_))._field_flags & _43621_flags) == _43621_flags);;
}



inline void _1dcdd7e70_setCurrentFile(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dce502b2_SymbolTable> _43837_f) {
	(*(_self_))._field_file=_43837_f;
}



inline void _1dcdd8338_pushErr(_1dcdd59a6_Sema* _self_, jule::Ptr<_23ae26b42_Token> _44026_token, jule::Str _44041_fmt, jule::Slice<jule::Any> _44054_args) {
	{ jule::Slice<_23aa28854_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1dcdd37c8_compilerErr(&(_44026_token), true, _44041_fmt, _44054_args)); };
}



inline void _1dcdd8657_pushSuggestion(_1dcdd59a6_Sema* _self_, jule::Str _44533_fmt, jule::Slice<jule::Any> _44546_args) {
	{
		_1dcdd4c5d_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _44533_fmt, _44546_args);
	};
}



inline jule::Bool _1dcdd8a0e_isAccessibleDefine(_1dcdd59a6_Sema* _self_, jule::Bool _45033_public, jule::Ptr<_23ae26b42_Token> _45047_token) {
	return ((_45033_public || (_45047_token.get()._field_File == nullptr)) || (_23ae2c609_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _23ae2c609_Dir(_45047_token.get()._field_File.ptr())));;
}



inline jule::Bool _1dcdd8e60_isDuplicatedIdent(_1dcdd59a6_Sema* _self_, jule::Uintptr _45732_itself, jule::Str _45749_ident, jule::Bool _45761_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c675dc3b:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> *_45816_f = it;
			{
				if (_1dce53491_isDuplicatedIdent((*(_45816_f)).ptr(), _45732_itself, _45749_ident, _45761_binded)) {
					return true;;
				};
				{
					auto expr = &((*(_45816_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c675e7ca:;
					if (it != expr_end) {
						jule::Ptr<_1dcdcc6d4_ImportInfo> *_46320_imp = it;
						{
							{
								auto expr = &((*(_46320_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c6760347:;
								if (it != expr_end) {
									jule::Ptr<_23ae26b42_Token> *_46424_selected = it;
									{
										if (((*(_46424_selected)).get()._field_Kind == _45749_ident)) {
											return true;;
										};
									}
									_iter_next_1c6760347:;
									++it;
									goto _iter_begin_1c6760347;
								}
								_iter_end_1c6760347:;
							};
						}
						_iter_next_1c675e7ca:;
						++it;
						goto _iter_begin_1c675e7ca;
					}
					_iter_end_1c675e7ca:;
				};
			}
			_iter_next_1c675dc3b:;
			++it;
			goto _iter_begin_1c675dc3b;
		}
		_iter_end_1c675dc3b:;
	};
	return false;;
}



inline void _1dcdd927e_checkDirectives(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Slice<jule::Ptr<_1dcd09369_Directive>>* _47440_d, jule::Any _47466_o) {
	_1dcdc6601_directiveChecker _47517_dc = _1dcdc6601_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1dcd09369_Directive>>>)((&((*(_47440_d)))))), ._field_o=_47466_o};;
	_1dcdc7bb8_check(&_47517_dc);
}



inline jule::Bool _1dcdd96d0_checkGenericQuantity(_1dcdd59a6_Sema* _self_, jule::I64 _48339_required, jule::I64 _48354_given, jule::Ptr<_23ae26b42_Token> _48366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_48339_required == 0LL) && (_48354_given > 0LL))) {
			_case_begin_1c6762745:;
			{
				_1dcdd8338_pushErr(_self_, _48366_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_48339_required > 0LL) && (_48354_given == 0LL))) {
			_case_begin_1c67627bc:;
			{
				_1dcdd8338_pushErr(_self_, _48366_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required < _48354_given)) {
			_case_begin_1c6762844:;
			{
				_1dcdd8338_pushErr(_self_, _48366_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required > _48354_given)) {
			_case_begin_1c67628bb:;
			{
				_1dcdd8338_pushErr(_self_, _48366_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c67626bd:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c6762602:;
	};
}



inline jule::Bool _1dcdd9aa9_isDuplicatedImportSelection(_1dcdd59a6_Sema* _self_, jule::Uintptr _50242_itself, jule::Str _50259_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67652a3:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> *_50316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_50316_imp))) == _50242_itself)) {
					goto _iter_end_1c67652a3;
				};
				if (_1dcdcec8b_existIdent((*(_50316_imp)).ptr(), _50259_ident)) {
					return true;;
				};
			}
			_iter_next_1c67652a3:;
			++it;
			goto _iter_begin_1c67652a3;
		}
		_iter_end_1c67652a3:;
	};
	return false;;
}



inline jule::Any _1dcdd9e72_getImportDef(_1dcdd59a6_Sema* _self_, jule::Str _51527_ident, jule::Ptr<_1dcdcc6d4_ImportInfo>* _51544_imp) {
	if ((_1dd04a962_findPackageBuiltinDef((*(_51544_imp)).get()._field_LinkPath, _51527_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_51544_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c676711d:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _51921_f = *it;
			{
				;
				jule::Any _52221_def = _1dce53040_defByIdent(_51921_f.ptr(), _51527_ident, false);;
				if ((_52221_def != nullptr)) {
					return _52221_def;;
				};
			}
			_iter_next_1c676711d:;
			++it;
			goto _iter_begin_1c676711d;
		}
		_iter_end_1c676711d:;
	};
	return nullptr;;
}



inline jule::Bool _1c676ceae_checkImportSelection(_1dcdd59a6_Sema* _self_, jule::Ptr<_23ae26b42_Token>* _53043_ident, jule::Ptr<_1dce05cb2_Var>* _53059_s) {
	if ((!(_1dcdd8a0e_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dcdcbb12_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c6771b3e_checkImportSelection(_1dcdd59a6_Sema* _self_, jule::Ptr<_23ae26b42_Token>* _53043_ident, jule::Ptr<_1dce816de_TypeAlias>* _53059_s) {
	if ((!(_1dcdd8a0e_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dcdcbb12_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c6775747_checkImportSelection(_1dcdd59a6_Sema* _self_, jule::Ptr<_23ae26b42_Token>* _53043_ident, jule::Ptr<_1dcd5b641_Struct>* _53059_s) {
	if ((!(_1dcdd8a0e_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dcdcbb12_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c677963b_checkImportSelection(_1dcdd59a6_Sema* _self_, jule::Ptr<_23ae26b42_Token>* _53043_ident, jule::Ptr<_1dcd83bb8_Trait>* _53059_s) {
	if ((!(_1dcdd8a0e_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dcdcbb12_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c677d266_checkImportSelection(_1dcdd59a6_Sema* _self_, jule::Ptr<_23ae26b42_Token>* _53043_ident, jule::Ptr<_1dcd8644b_Enum>* _53059_s) {
	if ((!(_1dcdd8a0e_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dcdcbb12_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c6781d91_checkImportSelection(_1dcdd59a6_Sema* _self_, jule::Ptr<_23ae26b42_Token>* _53043_ident, jule::Ptr<_1dcd87a46_TypeEnum>* _53059_s) {
	if ((!(_1dcdd8a0e_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dcdcbb12_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c67859bb_checkImportSelection(_1dcdd59a6_Sema* _self_, jule::Ptr<_23ae26b42_Token>* _53043_ident, jule::Ptr<_1dcd71997_Fn>* _53059_s) {
	if ((!(_1dcdd8a0e_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dcdcbb12_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1dcdd8338_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1dcdda659_checkImportSelectedSelections(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcdcc6d4_ImportInfo>* _54453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_54453_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6768be1:;
		if (it != expr_end) {
			jule::Ptr<_23ae26b42_Token> _54616_ident = *it;
			{
				if (_54616_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1c6768be1;
				};
				if (_1dcdd9aa9_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_54453_imp)))), _54616_ident.get()._field_Kind)) {
					_1dcdd8338_pushErr(_self_, _54616_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
					_1dcdd8657_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c6768be1;
				};
				jule::Any _55821_def = _1dcdd9e72_getImportDef(_self_, _54616_ident.get()._field_Kind, _54453_imp);;
				{
					auto &_match_expr{ _55821_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1c676bbe4:;
						{
							goto _iter_next_1c6768be1;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1c6769bd1:;
						{
							jule::Ptr<_1dce05cb2_Var> _56425_v = _55821_def.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
							__jule_func_result=(_1c676ceae_checkImportSelection(_self_, &(_54616_ident), &(_56425_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1c676b320:;
						{
							jule::Ptr<_1dce816de_TypeAlias> _56725_ta = _55821_def.cast_ptr<_1dce816de_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1c6771b3e_checkImportSelection(_self_, &(_54616_ident), &(_56725_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1c676b386:;
						{
							jule::Ptr<_1dcd5b641_Struct> _57025_s = _55821_def.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1c6775747_checkImportSelection(_self_, &(_54616_ident), &(_57025_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1c676bd26:;
						{
							jule::Ptr<_1dcd83bb8_Trait> _57325_t = _55821_def.cast_ptr<_1dcd83bb8_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1c677963b_checkImportSelection(_self_, &(_54616_ident), &(_57325_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1c676bd8c:;
						{
							jule::Ptr<_1dcd8644b_Enum> _57625_e = _55821_def.cast_ptr<_1dcd8644b_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1c677d266_checkImportSelection(_self_, &(_54616_ident), &(_57625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1c676be03:;
						{
							jule::Ptr<_1dcd87a46_TypeEnum> _57925_e = _55821_def.cast_ptr<_1dcd87a46_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1c6781d91_checkImportSelection(_self_, &(_54616_ident), &(_57925_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1c676be69:;
						{
							jule::Ptr<_1dcd71997_Fn> _58225_f = _55821_def.cast_ptr<_1dcd71997_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1c67859bb_checkImportSelection(_self_, &(_54616_ident), &(_58225_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1c676b133:;
						{
							_1dcdd8338_pushErr(_self_, _54616_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1c6768be1;
						}
					}
					_match_end_1c676b0cd:;
				};
			}
			_iter_next_1c6768be1:;
			++it;
			goto _iter_begin_1c6768be1;
		}
		_iter_end_1c6768be1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c67899c0_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema* _self_, jule::Slice<jule::Ptr<_1dce05cb2_Var>>* _59362_s, jule::Ptr<_23ae26b42_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c678b52c:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1c676ceae_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1c678b52c:;
			++it;
			goto _iter_begin_1c678b52c;
		}
		_iter_end_1c678b52c:;
	};
	return _59417_ok;;
}

inline jule::Bool _1c678cd58_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema* _self_, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>* _59362_s, jule::Ptr<_23ae26b42_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c678e134:;
		if (it != expr_end) {
			jule::Ptr<_1dce816de_TypeAlias> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1c6771b3e_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1c678e134:;
			++it;
			goto _iter_begin_1c678e134;
		}
		_iter_end_1c678e134:;
	};
	return _59417_ok;;
}

inline jule::Bool _1c678d4b8_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema* _self_, jule::Slice<jule::Ptr<_1dcd5b641_Struct>>* _59362_s, jule::Ptr<_23ae26b42_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6791c2a:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1c6775747_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1c6791c2a:;
			++it;
			goto _iter_begin_1c6791c2a;
		}
		_iter_end_1c6791c2a:;
	};
	return _59417_ok;;
}

inline jule::Bool _1c679106a_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema* _self_, jule::Slice<jule::Ptr<_1dcd71997_Fn>>* _59362_s, jule::Ptr<_23ae26b42_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6794843:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1c67859bb_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1c6794843:;
			++it;
			goto _iter_begin_1c6794843;
		}
		_iter_end_1c6794843:;
	};
	return _59417_ok;;
}

inline jule::Bool _1c67925dd_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema* _self_, jule::Slice<jule::Ptr<_1dcd83bb8_Trait>>* _59362_s, jule::Ptr<_23ae26b42_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67973e5:;
		if (it != expr_end) {
			jule::Ptr<_1dcd83bb8_Trait> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1c677963b_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1c67973e5:;
			++it;
			goto _iter_begin_1c67973e5;
		}
		_iter_end_1c67973e5:;
	};
	return _59417_ok;;
}

inline jule::Bool _1c6796779_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema* _self_, jule::Slice<jule::Ptr<_1dcd8644b_Enum>>* _59362_s, jule::Ptr<_23ae26b42_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6799e97:;
		if (it != expr_end) {
			jule::Ptr<_1dcd8644b_Enum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1c677d266_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1c6799e97:;
			++it;
			goto _iter_begin_1c6799e97;
		}
		_iter_end_1c6799e97:;
	};
	return _59417_ok;;
}

inline jule::Bool _1c679932b_checkImportsAllSelectionsFromCollection(_1dcdd59a6_Sema* _self_, jule::Slice<jule::Ptr<_1dcd87a46_TypeEnum>>* _59362_s, jule::Ptr<_23ae26b42_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c679cad2:;
		if (it != expr_end) {
			jule::Ptr<_1dcd87a46_TypeEnum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1c6781d91_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1c679cad2:;
			++it;
			goto _iter_begin_1c679cad2;
		}
		_iter_end_1c679cad2:;
	};
	return _59417_ok;;
}



inline jule::Bool _1dcddad85_checkImportAllSelections(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcdcc6d4_ImportInfo>* _60344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_60344_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67865e3:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> *_60516_file = it;
			{
				__jule_func_result=(_1c67899c0_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Vars), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c678cd58_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeAliases), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c678d4b8_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Structs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c679106a_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Funcs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c67925dd_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Traits), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c6796779_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Enums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1c679932b_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeEnums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1c67865e3:;
			++it;
			goto _iter_begin_1c67865e3;
		}
		_iter_end_1c67865e3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dcddb1a4_checkImportSelections(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcdcc6d4_ImportInfo>* _61745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_61745_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1dcdda659_checkImportSelectedSelections(_self_, _61745_imp);
		return __jule_func_result;;
	} else if ((*(_61745_imp)).get()._field_ImportAll) {
		__jule_func_result = _1dcddad85_checkImportAllSelections(_self_, _61745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dcddb4b2_isUseAliasDuplication(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcdcc6d4_ImportInfo>* _62641_imp) {
	if (((*(_62641_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67a0156:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _63121_imp2 = *it;
			{
				if ((_63121_imp2 == (*(_62641_imp)))) {
					goto _iter_end_1c67a0156;
				};
				if ((_63121_imp2.get()._field_Alias == (*(_62641_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_63121_imp2.get()._field_Ident == _63121_imp2.get()._field_LinkPath) && (_63121_imp2.get()._field_Ident == (*(_62641_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1c67a0156:;
			++it;
			goto _iter_begin_1c67a0156;
		}
		_iter_end_1c67a0156:;
	};
	return false;;
}



inline jule::Bool _1dcddb7c0_checkImport(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcdcc6d4_ImportInfo>* _64635_imp) {
	if (((*(_64635_imp)).get()._field_Binded || ((*(_64635_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1dcddb4b2_isUseAliasDuplication(_self_, _64635_imp)) {
		_1dcdd8338_pushErr(_self_, (*(_64635_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_64635_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_64635_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1dcdd59a6_Sema> _65721_sema = jule::new_ptr<_1dcdd59a6_Sema>(_1dcdd59a6_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1dce02660_check(_65721_sema, &((*(_64635_imp)).get()._field_Package.get()._field_Files));
		if ((_65721_sema.get()._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append(_65721_sema.get()._field_errors);;
			_65721_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1dcddb1a4_checkImportSelections(_self_, _64635_imp);;
}



inline void _1dcddb99b_checkImports(_1dcdd59a6_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67a48db:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _67221_file = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_, _67221_file);
				{
					auto expr = &(_67221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c67a639e:;
					if (it != expr_end) {
						jule::Ptr<_1dcdcc6d4_ImportInfo> _67425_imp = *it;
						{
							jule::Bool _67521_ok = _1dcddb7c0_checkImport(_self_, &(_67425_imp));;
							if ((!(_67521_ok))) {
								return;;
							};
						}
						_iter_next_1c67a639e:;
						++it;
						goto _iter_begin_1c67a639e;
					}
					_iter_end_1c67a639e:;
				};
			}
			_iter_next_1c67a48db:;
			++it;
			goto _iter_begin_1c67a48db;
		}
		_iter_end_1c67a48db:;
	};
}



inline void _1dcddbb77_implFileImpls(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67a6008:;
		if (it != expr_end) {
			jule::Ptr<_1dcda8c10_Impl> _68521_imp = *it;
			{
				_1dcde91b2_implImpl(_self_, &(_68521_imp));
			}
			_iter_next_1c67a6008:;
			++it;
			goto _iter_begin_1c67a6008;
		}
		_iter_end_1c67a6008:;
	};
}



inline void _1dcddbd53_implImpls(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67a78cd:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _69121_file = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_.ptr(), _69121_file);
				_1dcddbb77_implFileImpls(_self_);
			}
			_iter_next_1c67a78cd:;
			++it;
			goto _iter_begin_1c67a78cd;
		}
		_iter_end_1c67a78cd:;
	};
}



inline void _1dcddc02e_checkEnums(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67a8c75:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _69821_file = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_.ptr(), _69821_file);
				{
					
					if ((!(_1dcde59b6_checkEnumDecls(_self_)))) {
						_case_begin_1c67a9748:;
					}
					else if ((!(_1dcde5c2a_checkTypeEnumDecls(_self_)))) {
						_case_begin_1c67a97c0:;
					}
					_match_end_1c67a969e:;
				};
			}
			_iter_next_1c67a8c75:;
			++it;
			goto _iter_begin_1c67a8c75;
		}
		_iter_end_1c67a8c75:;
	};
}



inline void _1dcddc20a_checkFileInherits(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67a922b:;
		if (it != expr_end) {
			jule::Ptr<_1dcd83bb8_Trait> _70821_t = *it;
			{
				jule::Bool _70917_ok = _1dcde7468__checkTraitDeclInherits(_self_, &(_70821_t));;
				if ((!(_70917_ok))) {
					return;;
				};
			}
			_iter_next_1c67a922b:;
			++it;
			goto _iter_begin_1c67a922b;
		}
		_iter_end_1c67a922b:;
	};
}



inline void _1dcddc3d6_checkInherits(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67aa507:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _71721_file = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_.ptr(), _71721_file);
				_1dcddc20a_checkFileInherits(_self_);
			}
			_iter_next_1c67aa507:;
			++it;
			goto _iter_begin_1c67aa507;
		}
		_iter_end_1c67aa507:;
	};
}



inline _1dce93778_typeChecker _1dcddc837_typeChecker(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Trait<_1dcea0763_Lookup> _72335_l, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _72350_generics, jule::Ptr<_1dce92898_referencer> _72413_referencer) {
	_1dce93778_typeChecker _72517_tc = _1dce93778_typeChecker{._field_s=_self_, ._field_rootLookup=_72335_l, ._field_lookup=_72335_l, ._field_referencer=_72413_referencer, ._field_useGenerics=_72350_generics, };;
	{
		auto &_match_expr{ _72335_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c67acce0:;
			{
				jule::Ptr<_1dcdb5898_scopeChecker> _73421_hard = _1dcdb8934_getHardRoot(_72335_l.cast_ptr<_1dcdb5898_scopeChecker>(0));;
				_72517_tc._field_refers=_73421_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1c67acc02:;
	};
	if (((_72413_referencer != nullptr) && (_72413_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _72413_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1c67ae187:;
				{
					_72517_tc._field_ownerAlias=_72413_referencer.get()._field_owner.cast_ptr<_1dce816de_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1c67ae132:;
		};
	};
	return _72517_tc;;
}



inline jule::Ptr<_1dce82437_TypeKind> _1dcddcd32_buildTypeWithRefers(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd3bd80_TypeDecl>* _75044_t, jule::Trait<_1dcea0763_Lookup> _75067_l, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _75113_generics, jule::Ptr<_1dce92898_referencer> _75141_referencer) {
	return ({ auto _wrap_copy = _1dcddc837_typeChecker(_self_, _75067_l, _75113_generics, _75141_referencer); _1dce9a6c5_checkDecl(&_wrap_copy, _75044_t); });;
}



inline jule::Bool _1dcddd32c_checkTypeWithRefers(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce892da_TypeSymbol>* _75744_t, jule::Trait<_1dcea0763_Lookup> _75764_l, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _75813_generics, jule::Ptr<_1dce92898_referencer> _75841_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1dce8964d_checked((*(_75744_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_75744_t)).get()._field_Kind=_1dcddcd32_buildTypeWithRefers(_self_, &((*(_75744_t)).get()._field_Decl), _75764_l, _75813_generics, _75841_referencer);
	__jule_func_result = _1dce8964d_checked((*(_75744_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1dcda6d62_constraintChecker> _1dcddd591_constraintChecker(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	return jule::new_ptr<_1dcda6d62_constraintChecker>(_1dcda6d62_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1dcddd948_checkType(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce892da_TypeSymbol>* _77234_t, jule::Trait<_1dcea0763_Lookup> _77254_l) {
	return _1dcddd32c_checkTypeWithRefers(_self_, _77234_t, _77254_l, nullptr, nullptr);;
}



inline jule::Ptr<_1dce82437_TypeKind> _1dcdddd99_buildTypeWithGenerics(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd3bd80_TypeDecl>* _77846_t, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _77913_generics, jule::Ptr<_1dcd775a2_ReferenceStack> _77941_refers) {
	jule::Ptr<_1dce93778_typeChecker> _78017_tc = jule::new_ptr<_1dce93778_typeChecker>(_1dce93778_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1dcea0763_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1dcea0763_Lookup>(_self_, 3), ._field_refers=_77941_refers, ._field_useGenerics=_77913_generics, });;
	return _1dce9a6c5_checkDecl(_78017_tc.ptr(), _77846_t);;
}



inline jule::Ptr<_1dce82437_TypeKind> _1dcdde4b5_selectType(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd3bd80_TypeDecl>* _79635_t) {
	jule::Ptr<_1dce93778_typeChecker> _79717_tc = jule::new_ptr<_1dce93778_typeChecker>(_1dce93778_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1dcea0763_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1dcea0763_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1dce9a6c5_checkDecl(_79717_tc.ptr(), _79635_t);;
}



inline jule::Ptr<_1dce5683a_Eval> _1dcdde916_evalpd(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Trait<_1dcea0763_Lookup> _80830_l, jule::Ptr<_1dce82437_TypeKind> _80845_p, jule::Ptr<_1dce05cb2_Var> _80863_owner) {
	jule::Ptr<_1dce5683a_Eval> _80917_e = jule::new_ptr<_1dce5683a_Eval>(_1dce5683a_Eval{._field_s=_self_, ._field_lookup=_80830_l, ._field_owner=_80863_owner, });;
	{
		auto &_match_expr{ _80830_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c67b7228:;
			{
				_80917_e.get()._field_unsafety=_1dcdb7a43_isUnsafe(_80830_l.cast_ptr<_1dcdb5898_scopeChecker>(0));
			}
		}
		_match_end_1c67b71b2:;
	};
	_80917_e.get()._field_prefix=_80845_p;
	return _80917_e;;
}



inline jule::Ptr<_1dce5683a_Eval> _1dcddecbd_evalp(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Trait<_1dcea0763_Lookup> _82329_l, jule::Ptr<_1dce82437_TypeKind> _82344_p) {
	return _1dcdde916_evalpd(_self_, _82329_l, _82344_p, nullptr);;
}



inline jule::Ptr<_1dce5683a_Eval> _1dcde00cb_eval(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Trait<_1dcea0763_Lookup> _82828_l) {
	return _1dcddecbd_evalp(_self_, _82828_l, nullptr);;
}



inline jule::Bool _1dcde05c6_checkAssignType(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Bool _83235_destIsRef, jule::Ptr<_1dce82437_TypeKind>* _83257_dest, jule::Ptr<_1dce54cbc_Data>* _83314_d, jule::Ptr<_23ae26b42_Token> _83328_errorToken) {
	if ((*(_83314_d)).get()._field_Decl) {
		_1dcdd8338_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_83235_destIsRef) {
		if ((!(_1dce82aec_Equal((*(_83257_dest)), (*(_83314_d)).get()._field_Kind)))) {
			_1dcdd8338_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_83257_dest)).ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str((*(_83314_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1dce4035c_assignTypeChecker> _84421_atc = jule::new_ptr<_1dce4035c_assignTypeChecker>(_1dce4035c_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_83257_dest)), ._field_d=(*(_83314_d)), ._field_errorToken=_83328_errorToken});;
		jule::Bool _85017_ok = _1dce414d4_check(_84421_atc.ptr());;
		if ((!(_85017_ok))) {
			return false;;
		};
	};
	if (((!(_1dce5563b_IsConst((*(_83314_d)).ptr()))) || (_1dce84b54_Prim((*(_83257_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _86017_kind = _1dce84b54_Prim((*(_83257_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_24a2324b0_IsSigInt(_86017_kind)) {
			_case_begin_1c67bd4d7:;
			{
				_24a2362a5_SetI64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_24a235a57_AsI64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_24a23279b_IsUnsigInt(_86017_kind)) {
			_case_begin_1c67bd55e:;
			{
				_24a23652a_SetU64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_24a235cbb_AsU64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_24a232d62_IsFloat(_86017_kind)) {
			_case_begin_1c67bd5d6:;
			{
				_24a236c9a_SetF64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_24a236030_AsF64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1c67bd41b:;
	};
	return true;;
}



inline jule::Bool _1dcde0a27_checkTypeCompatibility(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce82437_TypeKind>* _87447_dest, jule::Ptr<_1dce82437_TypeKind>* _87514_src, jule::Ptr<_23ae26b42_Token>* _87535_errorToken) {
	if (((*(_87514_src)) == nullptr)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1dce867e3_Tup((*(_87514_src)).ptr()) != nullptr)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1dce3d734_typeCompatibilityChecker _88917_tcc = _1dce3d734_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_87447_dest)), ._field_src=(*(_87514_src)), ._field_errorToken=(*(_87535_errorToken))};;
	if (_1dce3ecc9_check(&_88917_tcc)) {
		return true;;
	};
	_1dcdd8338_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1dce82437_TypeKind> _1dcde0e9a_buildNonGenericTypeKind(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd3bd80_TypeDecl>* _91048_ast, jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>>* _91114_generics, jule::Slice<jule::Ptr<_1dce82437_TypeKind>>* _91150_ignored) {
	jule::Ptr<_1dce93778_typeChecker> _91217_tc = jule::new_ptr<_1dce93778_typeChecker>(_1dce93778_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1dcea0763_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1dcea0763_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_91114_generics)), ._field_ignoredGenerics=(&((*(_91150_ignored)))), });;
	return _1dce9a6c5_checkDecl(_91217_tc.ptr(), _91048_ast);;
}



inline jule::Bool _1dcde1385_buildFnNonGenericTypeKinds(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd74648_FnIns>* _92251_f, jule::Slice<jule::Ptr<_1dce82437_TypeKind>>* _92267_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> _92417_generics = nullptr;;
	if (_1dcd7216d_IsMethod((*(_92251_f)).get()._field_Decl.ptr())) {
		_92417_generics=jule::append((*(_92251_f)).get()._field_Decl.get()._field_Generics,(*(_92251_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_92417_generics=(*(_92251_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_92251_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67c7128:;
		if (it != expr_end) {
			jule::Ptr<_1dcd73779_ParamIns> _93121_p = *it;
			{
				if ((!(_1dcd70743_IsSelf(_93121_p.get()._field_Decl.ptr())))) {
					_93121_p.get()._field_Kind=_1dcde0e9a_buildNonGenericTypeKind(_self_, &(_93121_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
					__jule_func_result=(__jule_func_result && (_93121_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1c67c7128:;
			++it;
			goto _iter_begin_1c67c7128;
		}
		_iter_end_1c67c7128:;
	};
	if ((!(_1dcd71e09_IsVoid((*(_92251_f)).get()._field_Decl.ptr())))) {
		(*(_92251_f)).get()._field_Result=_1dcde0e9a_buildNonGenericTypeKind(_self_, &((*(_92251_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
		__jule_func_result=(__jule_func_result && ((*(_92251_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1dcd74648_FnIns> _1dcde16a4_getTraitCheckFnKind(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd71997_Fn>* _94444_f) {
	if (((*(_94444_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_94444_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1dcd74648_FnIns> _94817_ins = _1dcd72d83_instanceForce((*(_94444_f)));;
	jule::Ptr<_1dce93778_typeChecker> _95017_tc = jule::new_ptr<_1dce93778_typeChecker>(_1dce93778_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1dcea0763_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1dcea0763_Lookup>(_self_, 3), });;
	{
		auto expr = &(_94817_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67cb24d:;
		if (it != expr_end) {
			jule::Ptr<_1dcd73779_ParamIns> _95521_p = *it;
			{
				if ((!(_1dcd70743_IsSelf(_95521_p.get()._field_Decl.ptr())))) {
					_95521_p.get()._field_Kind=_1dce9a6c5_checkDecl(_95017_tc.ptr(), &(_95521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1c67cb24d:;
			++it;
			goto _iter_begin_1c67cb24d;
		}
		_iter_end_1c67cb24d:;
	};
	if ((!(_1dcd71e09_IsVoid((*(_94444_f)).ptr())))) {
		_94817_ins.get()._field_Result=_1dce9a6c5_checkDecl(_95017_tc.ptr(), &((*(_94444_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _94817_ins;;
}



inline jule::Bool _1dcde1b05_checkConstraintsFn(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd74648_FnIns>* _96743_f, jule::Ptr<_23ae26b42_Token>* _96759_et, jule::Ptr<_1dcd74648_FnIns> _96775_exist) {
	jule::Ptr<_1dcda6d62_constraintChecker> _96817_cc = _1dcddd591_constraintChecker(_self_);;
	_96817_cc.get()._field_et=(*(_96759_et));
	_96817_cc.get()._field_fi=(*(_96743_f));
	if ((_96775_exist != nullptr)) {
		{
			auto expr = &(_96775_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c67ce54d:;
			if (it != expr_end) {
				jule::I64 _97218_i = it - expr->begin();
				jule::Ptr<_1dce80ba5_InsGeneric> _97225_g = *it;
				{
					(*(_96743_f)).get()._field_Generics[_97218_i].get()._field_Constraint=_97225_g.get()._field_Constraint;
				}
				_iter_next_1c67ce54d:;
				++it;
				_97218_i++;
				goto _iter_begin_1c67ce54d;
			}
			_iter_end_1c67ce54d:;
		};
	} else {
		_96817_cc.get()._field_uniq=true;
	};
	return _1dcda7bed_check(_96817_cc);;
}



inline jule::Bool _1dcde2056_checkConstraintsStruct(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5e457_StructIns>* _98147_s, jule::Ptr<_23ae26b42_Token>* _98167_et, jule::Ptr<_1dcd5e457_StructIns> _98183_exist) {
	jule::Ptr<_1dcda6d62_constraintChecker> _98217_cc = _1dcddd591_constraintChecker(_self_);;
	_98217_cc.get()._field_et=(*(_98167_et));
	_98217_cc.get()._field_si=(*(_98147_s));
	if ((_98183_exist != nullptr)) {
		{
			auto expr = &(_98183_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c67d1d36:;
			if (it != expr_end) {
				jule::I64 _98618_i = it - expr->begin();
				jule::Ptr<_1dce80ba5_InsGeneric> _98625_g = *it;
				{
					(*(_98147_s)).get()._field_Generics[_98618_i].get()._field_Constraint=_98625_g.get()._field_Constraint;
				}
				_iter_next_1c67d1d36:;
				++it;
				_98618_i++;
				goto _iter_begin_1c67d1d36;
			}
			_iter_end_1c67d1d36:;
		};
	} else {
		_98217_cc.get()._field_uniq=true;
	};
	return _1dcda7bed_check(_98217_cc);;
}



inline jule::Bool _1dcde240d_fnEnvironment(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd74648_FnIns>* _99838_f, jule::Fn<jule::Bool(jule::Ptr<_1dcdd59a6_Sema>*,jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>*)> _99849_algo) {
	jule::Ptr<_1dcdd59a6_Sema> _99917_sema = (*(_99838_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1dce502b2_SymbolTable> _100017_old = (*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1dcdd7e70_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100017_old);
	});;
	jule::Ptr<_1dce502b2_SymbolTable> _100217_file = _1dcdd47eb_findFile(&((*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_99838_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_100217_file != nullptr)) {
		_1dcdd7e70_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100217_file);
	};
	jule::I64 _100717_size = (*(_99838_f)).get()._field_Generics.len();;
	if ((((*(_99838_f)).get()._field_Decl != nullptr) && ((*(_99838_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_100717_size+=(*(_99838_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _101217_generics = jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>::alloc(0LL, _100717_size);;
	_1dcdd4499_appendGenericTypeAliases(&(_101217_generics), _99838_f);
	jule::Bool _101513_ok = _99849_algo(&(_99917_sema), &(_101217_generics));;
	if ((_99917_sema != _self_)) {
		(_self_.get()._field_errors).append(_99917_sema.get()._field_errors);;
		_99917_sema.get()._field_errors=nullptr;
	};
	return _101513_ok;;
}



inline void _1dcde2683_checkFnParamKind(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd73779_ParamIns>* _102541_p) {
	(*(_102541_p)).get()._field_Kind.get()._field_Variadic=(*(_102541_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_102541_p)).get()._field_Decl.get()._field_Reference && (!(_1dce9c4da_isValidForRef(&((*(_102541_p)).get()._field_Kind)))))) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_102541_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_102541_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1dcde2991_reloadFnInsTypes(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd74648_FnIns> _103240_f) {
	if ((_1dcd759ce_IsBuiltin(_103240_f.ptr()) || _1dcd75c43_IsAnon(_103240_f.ptr()))) {
		return true;;
	};
	return _1dcde240d_fnEnvironment(_self_, &(_103240_f), jule::Fn<jule::Bool(jule::Ptr<_1dcdd59a6_Sema>*,jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>*)>([=](jule::Ptr<_1dcdd59a6_Sema>* _103643_sema, jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>* _103661_generics) mutable -> jule::Bool {
		jule::Bool _103721_ok = true;;
		{
			auto expr = &(_103240_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c67dc44b:;
			if (it != expr_end) {
				jule::Ptr<_1dcd73779_ParamIns> _103825_p = *it;
				{
					if (_1dcd70743_IsSelf(_103825_p.get()._field_Decl.ptr())) {
						if (_1dcd709a7_IsRef(_103825_p.get()._field_Decl.ptr())) {
							_103825_p.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dce8d3dd_Sptr>(_1dce8d3dd_Sptr{._field_Elem=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_103240_f.get()._field_Owner, 0)})}), 21)});
						} else {
							_103825_p.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_103240_f.get()._field_Owner, 0)});
						};
					} else {
						_103825_p.get()._field_Kind=_1dcdddd99_buildTypeWithGenerics((*(_103643_sema)), &(_103825_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
						if ((_103825_p.get()._field_Kind != nullptr)) {
							_1dcde2683_checkFnParamKind(_self_, &(_103825_p));
						} else {
							_103721_ok=false;
						};
					};
				}
				_iter_next_1c67dc44b:;
				++it;
				goto _iter_begin_1c67dc44b;
			}
			_iter_end_1c67dc44b:;
		};
		if ((!(_1dcd71e09_IsVoid(_103240_f.get()._field_Decl.ptr())))) {
			_103240_f.get()._field_Result=_1dcdddd99_buildTypeWithGenerics((*(_103643_sema)), &(_103240_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
			_103721_ok=((_103240_f.get()._field_Result != nullptr) && _103721_ok);
		};
		return _103721_ok;;
	}));;
}



inline jule::Bool _1dcde2e14_checkRefValidityForInitExpr(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Bool _106847_leftMut, jule::Ptr<_1dce54cbc_Data>* _106867_d, jule::Ptr<_23ae26b42_Token>* _106882_errorToken) {
	{
		auto &_match_expr{ (*(_106867_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c67e1ac1:;
			{
				goto _match_end_1c67e1b59;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1c67e260a:;
			{
				jule::Ptr<_1dcd67729_TraitSubIdentExprModel> _107321_model = (*(_106867_d)).get()._field_Model.cast_ptr<_1dcd67729_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1dcdd3333_isValidModelForRef(&(_107321_model.get()._field_Expr))))) {
					_1dcdd8338_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107321_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c67e2671:;
			{
				jule::Ptr<_1dcd68010_StructSubIdentExprModel> _107921_model = (*(_106867_d)).get()._field_Model.cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1dcdd3333_isValidModelForRef(&(_107921_model.get()._field_Expr.get()._field_Model))))) {
					_1dcdd8338_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107921_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1c67e1dce:;
			{
				_1dcdd8338_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c67e1e45:;
			{
				jule::Ptr<_1dcd63bcb_UnaryExprModel> _108921_unary = (*(_106867_d)).get()._field_Model.cast_ptr<_1dcd63bcb_UnaryExprModel>(&__jule_any_type74);;
				if (_108921_unary.get()._field_Op.get()._field_Kind.equal("*", 1)) {
					if ((!(_1dcdd3333_isValidModelForRef(&((*(_106867_d)).get()._field_Model))))) {
						_1dcdd8338_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1c67e1b59;
				};
				goto _case_begin_1c67e1d02;
			}
		}
		else {
			_case_begin_1c67e1d02:;
			{
				_1dcdd8338_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c67e1b59:;
	};
	if ((_106847_leftMut && (!((*(_106867_d)).get()._field_Mutable)))) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1dcde34db_checkValidityForInitExpr(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Bool _110944_leftMut, jule::Bool _110959_leftRef, jule::Ptr<_1dce82437_TypeKind>* _111010_leftKind, jule::Ptr<_1dce54cbc_Data>* _111036_d, jule::Ptr<_23ae26b42_Token>* _111051_errorToken) {
	if (((_110944_leftMut && (!((*(_111036_d)).get()._field_Mutable))) && _1dce83bca_Mutable((*(_111036_d)).get()._field_Kind.ptr()))) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_111051_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_111036_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_110959_leftRef) {
		if ((!(_1dcde2e14_checkRefValidityForInitExpr(_self_, _110944_leftMut, _111036_d, _111051_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1dce4035c_assignTypeChecker> _112017_atc = jule::new_ptr<_1dce4035c_assignTypeChecker>(_1dce4035c_assignTypeChecker{._field_s=_self_, ._field_d=(*(_111036_d)), ._field_errorToken=(*(_111051_errorToken))});;
	return _1dce40a33_checkValidity(_112017_atc.ptr());;
}



inline jule::Bool _1dcde38a4_checkTypeAliasDeclKind(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce816de_TypeAlias>* _112847_ta, jule::Trait<_1dcea0763_Lookup> _112867_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dce502b2_SymbolTable> _112917_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1dcdd7e70_setCurrentFile(_self_.ptr(), _112917_old);
	});;
	if (((*(_112847_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1dce502b2_SymbolTable> _113421_file = _1dcdd47eb_findFile(&(_self_.get()._field_files), &((*(_112847_ta)).get()._field_Token.get()._field_File));;
		if ((_113421_file != nullptr)) {
			_1dcdd7e70_setCurrentFile(_self_.ptr(), _113421_file);
		};
	};
	__jule_func_result=_1dcddd32c_checkTypeWithRefers(_self_, &((*(_112847_ta)).get()._field_Kind), _112867_l, nullptr, jule::new_ptr<_1dce92898_referencer>(_1dce92898_referencer{._field_ident=(*(_112847_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_112847_ta)), &__jule_any_type67), ._field_refs=(&((*(_112847_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1dce85869_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1dce85869_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_112847_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1dcde3bc3_checkTypeAliasDecl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce816de_TypeAlias>* _115143_ta, jule::Trait<_1dcea0763_Lookup> _115163_l) {
	if (_23ae293d6_IsIgnoreIdent((*(_115143_ta)).get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_115143_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1dcde38a4_checkTypeAliasDeclKind(_self_, _115143_ta, _115163_l);
}



inline void _1dcde3e48_checkTypeAliasDeclDup(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce816de_TypeAlias>* _115946_ta) {
	if (_23ae293d6_IsIgnoreIdent((*(_115946_ta)).get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1dcdd8e60_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_115946_ta)))), (*(_115946_ta)).get()._field_Ident, (*(_115946_ta)).get()._field_Binded)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115946_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1dcde38a4_checkTypeAliasDeclKind(_self_, _115946_ta, jule::Trait<_1dcea0763_Lookup>(_self_, 3));
}



inline jule::Bool _1dcde41ac_checkTypeAliasDecls(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68034ea:;
		if (it != expr_end) {
			jule::Ptr<_1dce816de_TypeAlias> _117221_ta = *it;
			{
				_1dcde3e48_checkTypeAliasDeclDup(_self_, &(_117221_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c68034ea:;
			++it;
			goto _iter_begin_1c68034ea;
		}
		_iter_end_1c68034ea:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c6826be4_checkEnumItemsDup(_1dcdd59a6_Sema* _self_, jule::Slice<jule::Ptr<_1dcd85956_EnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6827e6a:;
		if (it != expr_end) {
			jule::Ptr<_1dcd85956_EnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_1c6827e6a;
				} else if (_23ae293d6_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_1dcdd8338_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6828b08:;
						if (it != expr_end) {
							jule::Ptr<_1dcd85956_EnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_1c6828b08;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_1dcdd8338_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_1dcdd8657_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1c6828b08;
								};
							}
							_iter_next_1c6828b08:;
							++it;
							goto _iter_begin_1c6828b08;
						}
						_iter_end_1c6828b08:;
					};
				};
			}
			_iter_next_1c6827e6a:;
			++it;
			goto _iter_begin_1c6827e6a;
		}
		_iter_end_1c6827e6a:;
	};
}

inline void _1c683123c_checkEnumItemsDup(_1dcdd59a6_Sema* _self_, jule::Slice<jule::Ptr<_1dcd874b3_TypeEnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6832491:;
		if (it != expr_end) {
			jule::Ptr<_1dcd874b3_TypeEnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_1c6832491;
				} else if (_23ae293d6_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_1dcdd8338_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c683312e:;
						if (it != expr_end) {
							jule::Ptr<_1dcd874b3_TypeEnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_1c683312e;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_1dcdd8338_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_1dcdd8657_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1c683312e;
								};
							}
							_iter_next_1c683312e:;
							++it;
							goto _iter_begin_1c683312e;
						}
						_iter_end_1c683312e:;
					};
				};
			}
			_iter_next_1c6832491:;
			++it;
			goto _iter_begin_1c6832491;
		}
		_iter_end_1c6832491:;
	};
}



inline void _1dcde46a7_checkEnumItemsStr(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd8644b_Enum>* _120342_e) {
	jule::Ptr<_1dce5683a_Eval> _120417_eval = _1dcde00cb_eval(_self_, jule::Trait<_1dcea0763_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_120342_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6804de2:;
		if (it != expr_end) {
			jule::Ptr<_1dcd85956_EnumItem> _120521_item = *it;
			{
				if (_1dcd85cec_AutoExpr(_120521_item.ptr())) {
					_120521_item.get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Constant=static__24a23425e_NewStr(_120521_item.get()._field_Ident)})});
					_120521_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120521_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1dce54cbc_Data> _121425_d = _1dce73307_evalExpr(_120417_eval, _120521_item.get()._field_Value.get()._field_Expr);;
					if ((_121425_d == nullptr)) {
						goto _iter_next_1c6804de2;
					};
					if ((!(_1dce5563b_IsConst(_121425_d.ptr())))) {
						_1dcdd8338_pushErr(_self_.ptr(), _120521_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1dcde05c6_checkAssignType(_self_, false, &((*(_120342_e)).get()._field_Kind.get()._field_Kind), &(_121425_d), _120521_item.get()._field_Token);
					_120521_item.get()._field_Value.get()._field_Data=_121425_d;
				};
			}
			_iter_next_1c6804de2:;
			++it;
			goto _iter_begin_1c6804de2;
		}
		_iter_end_1c6804de2:;
	};
}



inline void _1c680d280_checkEnumItemInt(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce5683a_Eval>* _122946_eval, jule::Ptr<_1dcd8644b_Enum>* _122964_e, jule::Ptr<_1dce89b8c_Prim>* _122975_prim, jule::Ptr<_1dcd85956_EnumItem>* _122993_item, jule::U64* _1229115_n) {
	if (_1dcd85cec_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		{
			
{
				_case_begin_1c6810d54:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__24a233c20_NewU64((*(_1229115_n)));
				}
			}
			_match_end_1c6810705:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1dce54cbc_Data> _124421_d = _1dce73307_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_1dce5563b_IsConst(_124421_d.ptr())))) {
			_1dcdd8338_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1dcde05c6_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_1c6814132:;
				{
					(*(_1229115_n))=static_cast<jule::U64>(_24a2350a6_ReadU64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1c6814044:;
		};
	};
}

inline void _1c681a9b8_checkEnumItemInt(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce5683a_Eval>* _122946_eval, jule::Ptr<_1dcd8644b_Enum>* _122964_e, jule::Ptr<_1dce89b8c_Prim>* _122975_prim, jule::Ptr<_1dcd85956_EnumItem>* _122993_item, jule::I64* _1229115_n) {
	if (_1dcd85cec_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()});
		{
			
{
				_case_begin_1c681d4c1:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__24a233978_NewI64((*(_1229115_n)));
				}
			}
			_match_end_1c681cde9:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1dce54cbc_Data> _124421_d = _1dce73307_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_1dce5563b_IsConst(_124421_d.ptr())))) {
			_1dcdd8338_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1dcde05c6_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_1c6821936:;
				{
					(*(_1229115_n))=static_cast<jule::I64>(_24a234d42_ReadI64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1c68218c0:;
		};
	};
}



inline void _1c680990d_checkEnumItemsInt1(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce89b8c_Prim>* _126444_prim, jule::Ptr<_1dcd8644b_Enum>* _126462_e) {
	jule::U64 _126517_max = 0LLU;;
	{
		
{
			_case_begin_1c680b778:;
			{
				_126517_max=static_cast<jule::U64>(_24a22c0d1_MaxU(_1dce89ebc_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_1c680b547:;
	};
	jule::Ptr<_1dce5683a_Eval> _127517_eval = _1dcde00cb_eval(_self_, jule::Trait<_1dcea0763_Lookup>(_self_, 3));;
	jule::U64 _127617_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1dcd85956_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_1c680d280_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1c681485d:;
				{
					_127617_n=static_cast<jule::U64>(_24a235cbb_AsU64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1c680d5b0:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c68100ea:;
		if (it != expr_end) {
			jule::Ptr<_1dcd85956_EnumItem> _128921_item = *it;
			{
				if (((_1dcd85cec_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LLU)) && ((_126517_max - _127617_n) <= 0LLU))) {
					_1dcdd8338_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1c68100ea;
				};
				(_127617_n)++;
				_1c680d280_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_1c68100ea:;
			++it;
			goto _iter_begin_1c68100ea;
		}
		_iter_end_1c68100ea:;
	};
}

inline void _1c6809248_checkEnumItemsInt1(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce89b8c_Prim>* _126444_prim, jule::Ptr<_1dcd8644b_Enum>* _126462_e) {
	jule::I64 _126517_max = 0LL;;
	{
		
{
			_case_begin_1c6818c5d:;
			{
				_126517_max=static_cast<jule::I64>(_24a22bd39_MaxI(_1dce89ebc_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_1c6818ae8:;
	};
	jule::Ptr<_1dce5683a_Eval> _127517_eval = _1dcde00cb_eval(_self_, jule::Trait<_1dcea0763_Lookup>(_self_, 3));;
	jule::I64 _127617_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1dcd85956_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_1c681a9b8_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1c681b3d1:;
				{
					_127617_n=static_cast<jule::I64>(_24a235a57_AsI64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1c6819ba4:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c681c14b:;
		if (it != expr_end) {
			jule::Ptr<_1dcd85956_EnumItem> _128921_item = *it;
			{
				if (((_1dcd85cec_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LL)) && ((_126517_max - _127617_n) <= 0LL))) {
					_1dcdd8338_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1c681c14b;
				};
				(_127617_n)++;
				_1c681a9b8_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_1c681c14b:;
			++it;
			goto _iter_begin_1c681c14b;
		}
		_iter_end_1c681c14b:;
	};
}



inline void _1dcde5257_checkEnumItemsInt(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd8644b_Enum>* _129942_e) {
	jule::Ptr<_1dce89b8c_Prim> _130013_prim = _1dce84b54_Prim((*(_129942_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_24a2324b0_IsSigInt(_130013_prim.get()._field_Kind)) {
			_case_begin_1c6816a2a:;
			{
				_1c6809248_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		else {
			_case_begin_1c68091d2:;
			{
				_1c680990d_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		_match_end_1c680917c:;
	};
}



inline void _1dcde54cc_checkEnumDecl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd8644b_Enum>* _130938_e) {
	if (_23ae293d6_IsIgnoreIdent((*(_130938_e)).get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1dcdd8e60_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_130938_e)))), (*(_130938_e)).get()._field_Ident, false)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_130938_e)).get()._field_Items.len() == 0LL)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1c6826be4_checkEnumItemsDup(_self_.ptr(), (*(_130938_e)).get()._field_Items);
	if (((*(_130938_e)).get()._field_Kind != nullptr)) {
		if ((!(_1dcddd948_checkType(_self_, &((*(_130938_e)).get()._field_Kind), jule::Trait<_1dcea0763_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_130938_e)).get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	jule::Ptr<_1dce89b8c_Prim> _133317_t = _1dce84b54_Prim((*(_130938_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_133317_t == nullptr)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1dce8cd8d_IsStr(_133317_t.ptr())) {
			_case_begin_1c682c8cb:;
			{
				_1dcde46a7_checkEnumItemsStr(_self_, _130938_e);
			}
		}
		else if (_24a232a43_IsInt(_1dce89ebc_Str(_133317_t.ptr()))) {
			_case_begin_1c682c4e1:;
			{
				_1dcde5257_checkEnumItemsInt(_self_, _130938_e);
			}
		}
		else {
			_case_begin_1c682b91e:;
			{
				_1dcdd8338_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c682b7ba:;
	};
}



inline void _1dcde5752_checkTypeEnumDecl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd87a46_TypeEnum>* _135042_e) {
	if (_23ae293d6_IsIgnoreIdent((*(_135042_e)).get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1dcdd8e60_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_135042_e)))), (*(_135042_e)).get()._field_Ident, false)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_135042_e)).get()._field_Ident, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_135042_e)).get()._field_Items.len() == 0LL)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_135042_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1c683123c_checkEnumItemsDup(_self_.ptr(), (*(_135042_e)).get()._field_Items);
	{
		auto expr = &((*(_135042_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6831638:;
		if (it != expr_end) {
			jule::Ptr<_1dcd874b3_TypeEnumItem> _136421_item = *it;
			{
				if ((_136421_item.get()._field_Kind == nullptr)) {
					_1dcdd8338_pushErr(_self_.ptr(), _136421_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1c6831638;
				};
				jule::Bool _136917_ok = _1dcddd948_checkType(_self_, &(_136421_item.get()._field_Kind), jule::Trait<_1dcea0763_Lookup>(_self_, 3));;
				if ((!(_136917_ok))) {
					goto _iter_next_1c6831638;
				};
				jule::Ptr<_1dce89b8c_Prim> _137317_p = _1dce84b54_Prim(_136421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_137317_p != nullptr) && _1dce8d102_IsAny(_137317_p.ptr()))) {
					_1dcdd8338_pushErr(_self_.ptr(), _136421_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c6831638:;
			++it;
			goto _iter_begin_1c6831638;
		}
		_iter_end_1c6831638:;
	};
	if (((*(_135042_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1dcd874b3_TypeEnumItem> _137921_item = (*(_135042_e)).get()._field_Items[0LL];;
		_1dce82437_TypeKind _138017_tk = _1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>((*(_135042_e)), 4)};;
		if (((_137921_item.get()._field_Kind.get()._field_Kind != nullptr) && _1dce82aec_Equal(_137921_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1dce82437_TypeKind>)((&(_138017_tk))))))) {
			_1dcdd8338_pushErr(_self_.ptr(), _137921_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1dcd87d76_Str((*(_135042_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1dcde59b6_checkEnumDecls(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6839bd5:;
		if (it != expr_end) {
			jule::Ptr<_1dcd8644b_Enum> _139121_e = *it;
			{
				_1dcde54cc_checkEnumDecl(_self_, &(_139121_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6839bd5:;
			++it;
			goto _iter_begin_1c6839bd5;
		}
		_iter_end_1c6839bd5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dcde5c2a_checkTypeEnumDecls(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c683b07c:;
		if (it != expr_end) {
			jule::Ptr<_1dcd87a46_TypeEnum> _140321_e = *it;
			{
				_1dcde5752_checkTypeEnumDecl(_self_, &(_140321_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c683b07c:;
			++it;
			goto _iter_begin_1c683b07c;
		}
		_iter_end_1c683b07c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dcde6038_checkDeclGenerics(_1dcdd59a6_Sema* _self_, jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>>* _141337_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _141337_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c683c3ad:;
		if (it != expr_end) {
			jule::I64 _141513_i = it - expr->begin();
			jule::Ptr<_1dcd48d26_GenericDecl> *_141516_g = it;
			{
				if (_23ae293d6_IsIgnoreIdent((*(_141516_g)).get()._field_Ident)) {
					_1dcdd8338_pushErr(_self_, (*(_141516_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c683c3ad;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _141337_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c683d1c2:;
					if (it != expr_end) {
						jule::I64 _142417_j = it - expr->begin();
						jule::Ptr<_1dcd48d26_GenericDecl> *_142420_ct = it;
						{
							{
								
								if ((_142417_j >= _141513_i)) {
									_case_begin_1c683e668:;
									{
										goto _iter_end_1c683d1c2;
									}
								}
								else if (((*(_141516_g)).get()._field_Ident == (*(_142420_ct)).get()._field_Ident)) {
									_case_begin_1c683e6e0:;
									{
										_1dcdd8338_pushErr(_self_, (*(_141516_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141516_g)).get()._field_Ident, &__jule_any_type5)}));
										_1dcdd8657_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1c683d1c2;
									}
								}
								_match_end_1c683e558:;
							};
						}
						_iter_next_1c683d1c2:;
						++it;
						_142417_j++;
						goto _iter_begin_1c683d1c2;
					}
					_iter_end_1c683d1c2:;
				};
			}
			_iter_next_1c683c3ad:;
			++it;
			_141513_i++;
			goto _iter_begin_1c683c3ad;
		}
		_iter_end_1c683c3ad:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dcde6346_checkFnDeclParamsDup(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcd71997_Fn>* _144040_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_144040_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c684159e:;
		if (it != expr_end) {
			jule::I64 _144313_i = it - expr->begin();
			jule::Ptr<_1dcd7015a_Param> *_144316_p = it;
			{
				{
					auto expr = &((*(_144040_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c684214e:;
					if (it != expr_end) {
						jule::Ptr<_1dcd48d26_GenericDecl> *_144520_g = it;
						{
							if (((*(_144316_p)).get()._field_Ident == (*(_144520_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1dcdd8338_pushErr(_self_, (*(_144316_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144316_p)).get()._field_Ident, &__jule_any_type5)}));
								_1dcdd8657_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1c684159e;
							};
						}
						_iter_next_1c684214e:;
						++it;
						goto _iter_begin_1c684214e;
					}
					_iter_end_1c684214e:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_144040_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c68429bd:;
					if (it != expr_end) {
						jule::I64 _145517_j = it - expr->begin();
						jule::Ptr<_1dcd7015a_Param> *_145520_jp = it;
						{
							{
								
								if ((_145517_j >= _144313_i)) {
									_case_begin_1c6844409:;
									{
										goto _iter_end_1c68429bd;
									}
								}
								else if (_23ae293d6_IsIgnoreIdent((*(_144316_p)).get()._field_Ident) || _23ae293d6_IsIgnoreIdent((*(_145520_jp)).get()._field_Ident) || _23ae2967d_IsAnonIdent((*(_144316_p)).get()._field_Ident) || _23ae2967d_IsAnonIdent((*(_145520_jp)).get()._field_Ident)) {
									_case_begin_1c6844481:;
									{
										goto _iter_end_1c68429bd;
									}
								}
								else if (((*(_144316_p)).get()._field_Ident == (*(_145520_jp)).get()._field_Ident)) {
									_case_begin_1c6844508:;
									{
										__jule_func_result=false;
										_1dcdd8338_pushErr(_self_, (*(_144316_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144316_p)).get()._field_Ident, &__jule_any_type5)}));
										_1dcdd8657_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1c684159e;
									}
								}
								_match_end_1c68442d8:;
							};
						}
						_iter_next_1c68429bd:;
						++it;
						_145517_j++;
						goto _iter_begin_1c68429bd;
					}
					_iter_end_1c68429bd:;
				};
			}
			_iter_next_1c684159e:;
			++it;
			_144313_i++;
			goto _iter_begin_1c684159e;
		}
		_iter_end_1c684159e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dcde6654_checkFnDeclResultDup(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcd71997_Fn>* _147740_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1dcd71e09_IsVoid((*(_147740_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_147740_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6847088:;
		if (it != expr_end) {
			jule::I64 _148413_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> *_148416_v = it;
			{
				if ((_23ae293d6_IsIgnoreIdent((*(_148416_v)).get()._field_Kind) || _23ae2967d_IsAnonIdent((*(_148416_v)).get()._field_Kind))) {
					goto _iter_next_1c6847088;
				};
				{
					auto expr = &((*(_147740_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c68484eb:;
					if (it != expr_end) {
						jule::Ptr<_1dcd48d26_GenericDecl> *_148920_g = it;
						{
							if (((*(_148416_v)).get()._field_Kind == (*(_148920_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1c68484eb:;
						++it;
						goto _iter_begin_1c68484eb;
					}
					_iter_end_1c68484eb:;
				};
				{
					auto expr = &((*(_147740_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6849420:;
					if (it != expr_end) {
						jule::Ptr<_1dcd7015a_Param> *_149520_p = it;
						{
							if (((*(_148416_v)).get()._field_Kind == (*(_149520_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1c6849420:;
						++it;
						goto _iter_begin_1c6849420;
					}
					_iter_end_1c6849420:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_147740_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c684a7a6:;
					if (it != expr_end) {
						jule::I64 _150317_j = it - expr->begin();
						jule::Ptr<_23ae26b42_Token> *_150320_jv = it;
						{
							{
								
								if ((_150317_j >= _148413_i)) {
									_case_begin_1c684b499:;
									{
										goto _iter_end_1c684a7a6;
									}
								}
								else if (((*(_150320_jv)).get()._field_Kind == (*(_148416_v)).get()._field_Kind)) {
									_case_begin_1c684b521:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1c684b389:;
							};
						}
						_iter_next_1c684a7a6:;
						++it;
						_150317_j++;
						goto _iter_begin_1c684a7a6;
					}
					_iter_end_1c684a7a6:;
				};
				goto _iter_next_1c6847088;
				_julec_label_exist:;
				_1dcdd8338_pushErr(_self_, (*(_148416_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_148416_v)).get()._field_Kind, &__jule_any_type5)}));
				_1dcdd8657_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1c6847088:;
			++it;
			_148413_i++;
			goto _iter_begin_1c6847088;
		}
		_iter_end_1c6847088:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dcde6962_checkFnVariadicParam(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd71997_Fn>* _152245_f) {
	if (((*(_152245_f)).get()._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1dcd7015a_Param> _152617_param = (*(_152245_f)).get()._field_Params[((*(_152245_f)).get()._field_Params.len() - 1LL)];;
	if ((_152617_param.get()._field_Variadic && _152617_param.get()._field_Reference)) {
		_1dcdd8338_pushErr(_self_.ptr(), _152617_param.get()._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1dcde6bd7_checkFnDeclPrototype(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd71997_Fn>* _153545_f) {
	if (((*(_153545_f)).get()._field_Exceptional && (*(_153545_f)).get()._field_Binded)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_153545_f)).get()._field_Exceptional) {
		if (_1dcd723d2_IsEntryPoint((*(_153545_f)).ptr())) {
			_1dcdd8338_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1dcd72646_IsInit((*(_153545_f)).ptr())) {
			_1dcdd8338_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1dcde6038_checkDeclGenerics(_self_.ptr(), &((*(_153545_f)).get()._field_Generics))))) {
			_case_begin_1c685104d:;
		}
		else if ((!(_1dcde6346_checkFnDeclParamsDup(_self_.ptr(), _153545_f)))) {
			_case_begin_1c68510c5:;
		}
		else if ((!(_1dcde6654_checkFnDeclResultDup(_self_.ptr(), _153545_f)))) {
			_case_begin_1c685114c:;
		}
		else if ((!(_1dcde6962_checkFnVariadicParam(_self_, _153545_f)))) {
			_case_begin_1c6852307:;
		}
		_match_end_1c6851614:;
	};
}



inline jule::Bool _1dcde7138_catchTraitInheritCycle(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd83bb8_Trait> _155742_t1, jule::Ptr<_1dcd83bb8_Trait> _155758_t2, jule::Str* _155775_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_155758_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68541d8:;
		if (it != expr_end) {
			jule::Ptr<_1dce892da_TypeSymbol> _155921_i = *it;
			{
				if ((_155921_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1c68541d8;
				};
				jule::Ptr<_1dcd83bb8_Trait> _156321_t3 = _1dce8631a_Trait(_155921_i.get()._field_Kind.ptr());;
				if ((_155742_t1 == _156321_t3)) {
					_1dcdeb8ac_pushCycleError(_self_.ptr(), &(_155758_t2.get()._field_Ident), &(_156321_t3.get()._field_Ident), _155775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1dcde7138_catchTraitInheritCycle(_self_, _155742_t1, _156321_t3, _155775_message)))) {
					_1dcdeb8ac_pushCycleError(_self_.ptr(), &(_155758_t2.get()._field_Ident), &(_156321_t3.get()._field_Ident), _155775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c68541d8:;
			++it;
			goto _iter_begin_1c68541d8;
		}
		_iter_end_1c68541d8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dcde7468__checkTraitDeclInherits(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd83bb8_Trait>* _157648_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_157648_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6856d89:;
		if (it != expr_end) {
			jule::I64 _157814_i = it - expr->begin();
			jule::Ptr<_1dce892da_TypeSymbol> _157821_it = *it;
			{
				if ((!(_1dcddd948_checkType(_self_, &(_157821_it), jule::Trait<_1dcea0763_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1c6856d89;
				};
				jule::Ptr<_1dcd83bb8_Trait> _158321_t2 = _1dce8631a_Trait(_157821_it.get()._field_Kind.ptr());;
				if ((_158321_t2 == nullptr)) {
					_1dcdd8338_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_157648_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_1dce827de_Str(_157821_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1c6856d89;
				};
				{
					auto expr = &((*(_157648_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c68587c5:;
					if (it != expr_end) {
						jule::I64 _158917_j = it - expr->begin();
						jule::Ptr<_1dce892da_TypeSymbol> _158920_it2 = *it;
						{
							if ((_158917_j >= _157814_i)) {
								goto _iter_end_1c68587c5;
							};
							if (((_158920_it2.get()._field_Kind != nullptr) && _1dce82aec_Equal(_157821_it.get()._field_Kind, _158920_it2.get()._field_Kind))) {
								_1dcdd8338_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_158321_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_1c68587c5;
							};
						}
						_iter_next_1c68587c5:;
						++it;
						_158917_j++;
						goto _iter_begin_1c68587c5;
					}
					_iter_end_1c68587c5:;
				};
				if (((*(_157648_t)) == _158321_t2)) {
					_1dcdd8338_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_157648_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					jule::Str _160325_message = jule::Str();;
					__jule_func_result=(__jule_func_result && _1dcde7138_catchTraitInheritCycle(_self_, (*(_157648_t)), _158321_t2, &(_160325_message)));
					if ((_160325_message.len() > 0LL)) {
						jule::Str _160629_errMsg = _160325_message;;
						_160325_message=jule::Str();
						_1dcdeb8ac_pushCycleError(_self_.ptr(), &((*(_157648_t)).get()._field_Ident), &(_158321_t2.get()._field_Ident), &(_160325_message));
						_160629_errMsg+=_160325_message;
						_1dcdd8338_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_160629_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_1c6856d89:;
			++it;
			_157814_i++;
			goto _iter_begin_1c6856d89;
		}
		_iter_end_1c6856d89:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1dcde76ee_checkTraitDeclInherits(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd83bb8_Trait>* _161747_t) {
	{
		auto expr = &((*(_161747_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6856a59:;
		if (it != expr_end) {
			jule::I64 _161814_i = it - expr->begin();
			jule::Ptr<_1dce892da_TypeSymbol> _161821_it = *it;
			{
				jule::Ptr<_1dcd83bb8_Trait> _161921_t1 = _1dce8631a_Trait(_161821_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_161747_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c68601e4:;
					if (it != expr_end) {
						jule::I64 _162018_j = it - expr->begin();
						jule::Ptr<_1dce892da_TypeSymbol> _162025_it2 = *it;
						{
							if ((_162018_j == _161814_i)) {
								goto _iter_next_1c68601e4;
							};
							jule::Ptr<_1dcd83bb8_Trait> _162425_t2 = _1dce8631a_Trait(_162025_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_161921_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c68615be:;
								if (it != expr_end) {
									jule::Ptr<_1dcd71997_Fn> _162529_t1m = *it;
									{
										jule::Ptr<_1dcd71997_Fn> _162629_t2m = _1dcd84a65_FindMethod(_162425_t2.ptr(), _162529_t1m.get()._field_Ident);;
										if ((_162629_t2m == nullptr)) {
											goto _iter_next_1c68615be;
										};
										jule::Ptr<_1dcd74648_FnIns> _163025_t1f = _1dcde16a4_getTraitCheckFnKind(_self_, &(_162529_t1m));;
										jule::Ptr<_1dcd74648_FnIns> _163125_t2f = _1dcde16a4_getTraitCheckFnKind(_self_, &(_162629_t2m));;
										if ((!(_1dcd75506_equalTrait(_163025_t1f, &(_163125_t2f))))) {
											_1dcdd8338_pushErr(_self_.ptr(), _161821_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_161747_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_162425_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_1dcd7635e_GetKindStr(_163025_t1f.ptr(), true), &__jule_any_type5),jule::Any(_1dcd7635e_GetKindStr(_163125_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_1c68615be:;
									++it;
									goto _iter_begin_1c68615be;
								}
								_iter_end_1c68615be:;
							};
						}
						_iter_next_1c68601e4:;
						++it;
						_162018_j++;
						goto _iter_begin_1c68601e4;
					}
					_iter_end_1c68601e4:;
				};
			}
			_iter_next_1c6856a59:;
			++it;
			_161814_i++;
			goto _iter_begin_1c6856a59;
		}
		_iter_end_1c6856a59:;
	};
}



inline void _1dcde7974_checkTraitDeclMethod(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd71997_Fn>* _164245_f) {
	if (_23ae293d6_IsIgnoreIdent((*(_164245_f)).get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_164245_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_23ae2967d_IsAnonIdent((*(_164245_f)).get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_164245_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*(_164245_f)).get()._field_sema=_self_;
	_1dcde6bd7_checkFnDeclPrototype(_self_, _164245_f);
	jule::Ptr<_1dcd74648_FnIns> _165017_ins = _1dcd730e7_instance((*(_164245_f)));;
	_1dcde2991_reloadFnInsTypes(_self_, _165017_ins);
	_165017_ins.get()._field_reloaded=true;
	_1dcd733c2_appendInstance((*(_164245_f)).ptr(), &(_165017_ins));
}



inline void _1dcde7be9_checkTraitDeclMethods(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd83bb8_Trait>* _165646_t) {
	{
		auto expr = &((*(_165646_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c686699d:;
		if (it != expr_end) {
			jule::I64 _165714_i = it - expr->begin();
			jule::Ptr<_1dcd71997_Fn> _165721_f = *it;
			{
				_1dcde7974_checkTraitDeclMethod(_self_, &(_165721_f));
				(*(_165646_t)).get()._field_Mutable=((*(_165646_t)).get()._field_Mutable || _165721_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1dcd85181_findMethodInherit((*(_165646_t)).ptr(), &(_165721_f.get()._field_Ident)) != nullptr)) {
					_1dcdd8338_pushErr(_self_.ptr(), _165721_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_165721_f.get()._field_Ident, &__jule_any_type5)}));
					_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1c686699d;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_165646_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c68696a4:;
					if (it != expr_end) {
						jule::I64 _167417_j = it - expr->begin();
						jule::Ptr<_1dcd71997_Fn> _167420_jf = *it;
						{
							{
								
								if ((_167417_j >= _165714_i)) {
									_case_begin_1c686a2ba:;
									{
										goto _iter_end_1c68696a4;
									}
								}
								else if ((_165721_f.get()._field_Ident == _167420_jf.get()._field_Ident)) {
									_case_begin_1c686a342:;
									{
										_1dcdd8338_pushErr(_self_.ptr(), _165721_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_165721_f.get()._field_Ident, &__jule_any_type5)}));
										_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1c68696a4;
									}
								}
								_match_end_1c686a1aa:;
							};
						}
						_iter_next_1c68696a4:;
						++it;
						_167417_j++;
						goto _iter_begin_1c68696a4;
					}
					_iter_end_1c68696a4:;
				};
			}
			_iter_next_1c686699d:;
			++it;
			_165714_i++;
			goto _iter_begin_1c686699d;
		}
		_iter_end_1c686699d:;
	};
}



inline void _1dcde7e6e_checkTraitDecl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd83bb8_Trait>* _169339_t) {
	if (_23ae293d6_IsIgnoreIdent((*(_169339_t)).get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_169339_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1dcdd8e60_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_169339_t)))), (*(_169339_t)).get()._field_Ident, false)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_169339_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_169339_t)).get()._field_Ident, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1dcde76ee_checkTraitDeclInherits(_self_, _169339_t);
	_1dcde7be9_checkTraitDeclMethods(_self_, _169339_t);
}



inline jule::Bool _1dcde81d3_checkTraitDecls(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c686dda1:;
		if (it != expr_end) {
			jule::Ptr<_1dcd83bb8_Trait> _170721_t = *it;
			{
				_1dcde7e6e_checkTraitDecl(_self_, &(_170721_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c686dda1:;
			++it;
			goto _iter_begin_1c686dda1;
		}
		_iter_end_1c686dda1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dcde858a_checkTraitImplMethods(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcd83bb8_Trait>* _171745_base, jule::Ptr<_1dcda8c10_Impl>* _171760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_171760_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6870666:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> *_171916_f = it;
			{
				if ((_1dcd84a65_FindMethod((*(_171745_base)).ptr(), (*(_171916_f)).get()._field_Ident) == nullptr)) {
					_1dcdd8338_pushErr(_self_, (*(_171916_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_171745_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_171916_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c6870666:;
			++it;
			goto _iter_begin_1c6870666;
		}
		_iter_end_1c6870666:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dcde8942_implToStruct(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5b641_Struct>* _172837_dest, jule::Ptr<_1dcda8c10_Impl>* _172857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_172857_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68726bd:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _173221_f = *it;
			{
				if (((_1dcd5c235_FindMethod((*(_172837_dest)).ptr(), _173221_f.get()._field_Ident, _173221_f.get()._field_Statically) != nullptr) || (_1dcd5c851_FindField((*(_172837_dest)).ptr(), _173221_f.get()._field_Ident) != nullptr))) {
					_1dcdd8338_pushErr(_self_.ptr(), _173221_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_172837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_173221_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1c68726bd;
				};
				if ((((*(_172837_dest)).get()._field_Generics.len() > 0LL) && (_173221_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_173221_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6874945:;
						if (it != expr_end) {
							jule::Ptr<_1dcd48d26_GenericDecl> _174024_fg = *it;
							{
								{
									auto expr = &((*(_172837_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c687522b:;
									if (it != expr_end) {
										jule::Ptr<_1dcd48d26_GenericDecl> _174128_dg = *it;
										{
											if ((_174024_fg.get()._field_Ident == _174128_dg.get()._field_Ident)) {
												_1dcdd8338_pushErr(_self_.ptr(), _174024_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1c687522b:;
										++it;
										goto _iter_begin_1c687522b;
									}
									_iter_end_1c687522b:;
								};
							}
							_iter_next_1c6874945:;
							++it;
							goto _iter_begin_1c6874945;
						}
						_iter_end_1c6874945:;
					};
				};
				_1dcdd927e_checkDirectives(_self_, &(_173221_f.get()._field_Directives), jule::Any(_173221_f, &__jule_any_type65));
				_173221_f.get()._field_sema=_self_;
				_173221_f.get()._field_Owner=(*(_172837_dest));
				{ jule::Slice<jule::Ptr<_1dcd71997_Fn>> &__jule_push_dest = (*(_172837_dest)).get()._field_Methods; __jule_push_dest.push(_173221_f); };
			}
			_iter_next_1c68726bd:;
			++it;
			goto _iter_begin_1c68726bd;
		}
		_iter_end_1c68726bd:;
	};
	{
		auto expr = &((*(_172857_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c687752a:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> _175721_v = *it;
			{
				;
				if (((_1dcd5c235_FindMethod((*(_172837_dest)).ptr(), _175721_v.get()._field_Ident, true) != nullptr) || (_1dcd5c543_FindStatic((*(_172837_dest)).ptr(), _175721_v.get()._field_Ident) != nullptr))) {
					_1dcdd8338_pushErr(_self_.ptr(), _175721_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_172837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_175721_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1c687752a;
				};
				{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = (*(_172837_dest)).get()._field_Statics; __jule_push_dest.push(_175721_v); };
			}
			_iter_next_1c687752a:;
			++it;
			goto _iter_begin_1c687752a;
		}
		_iter_end_1c687752a:;
	};
	return __jule_func_result;;
}



inline void _1dcde8bb7_implTrait(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcda8c10_Impl>* _177034_decl) {
	jule::Ptr<_1dce82437_TypeKind> _177117_base_t = _1dcdde4b5_selectType(_self_, &((*(_177034_decl)).get()._field_Base));;
	if ((_177117_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1dcd83bb8_Trait> _177517_base = _1dce8631a_Trait(_177117_base_t.ptr());;
	if ((_177517_base == nullptr)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_177117_base_t.ptr()), &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dce82437_TypeKind> _178217_destT = _1dcdde4b5_selectType(_self_, &((*(_177034_decl)).get()._field_Dest));;
	if ((_178217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _178617_destS = _1dce860a6_Struct(_178217_destT.ptr());;
	if ((_178617_destS == nullptr)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_178217_destT.ptr()), &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd5b641_Struct> _179317_dest = _178617_destS.get()._field_Decl;;
	if ((_23ae2c609_Dir(_179317_dest.get()._field_Token.get()._field_File.ptr()) != _23ae2c609_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1dce04299_pushImplemented(_177517_base, &(_179317_dest));
	_1dce04552_pushImplements(&(_179317_dest), _177517_base);
	if (((*(_177034_decl)).get()._field_Statics.len() > 0LL)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1dcde858a_checkTraitImplMethods(_self_.ptr(), &(_177517_base), _177034_decl)))) {
			_case_begin_1c68807b9:;
		}
		else if ((!(_1dcde8942_implToStruct(_self_, &(_179317_dest), _177034_decl)))) {
			_case_begin_1c6880841:;
		}
		_match_end_1c687dc7e:;
	};
}



inline void _1dcde8e3c_implStruct(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcda8c10_Impl>* _181335_decl) {
	jule::Ptr<_1dce82437_TypeKind> _181417_destT = _1dcdde4b5_selectType(_self_, &((*(_181335_decl)).get()._field_Dest));;
	if ((_181417_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _181817_destS = _1dce860a6_Struct(_181417_destT.ptr());;
	if ((_181817_destS == nullptr)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_181335_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_181417_destT.ptr()), &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd5b641_Struct> _182517_dest = _181817_destS.get()._field_Decl;;
	if ((_23ae2c609_Dir(_182517_dest.get()._field_Token.get()._field_File.ptr()) != _23ae2c609_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_181335_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1dcde8942_implToStruct(_self_, &(_182517_dest), _181335_decl)))) {
			_case_begin_1c6884d51:;
		}
		_match_end_1c6882b73:;
	};
}



inline void _1dcde91b2_implImpl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcda8c10_Impl>* _183733_decl) {
	{
		
		if (_1dcda90b7_IsTraitImpl((*(_183733_decl)).ptr())) {
			_case_begin_1c6885802:;
			{
				_1dcde8bb7_implTrait(_self_, _183733_decl);
			}
		}
		else if (_1dcda932b_IsStructImpl((*(_183733_decl)).ptr())) {
			_case_begin_1c6885879:;
			{
				_1dcde8e3c_implStruct(_self_, _183733_decl);
			}
		}
		_match_end_1c68856e2:;
	};
}



inline void _1dcde94d1_checkVarDecl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce05cb2_Var>* _184837_decl, jule::Trait<_1dcea0763_Lookup> _184853_l) {
	if (_23ae293d6_IsIgnoreIdent((*(_184837_decl)).get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1dce0639a_IsTypeInferred((*(_184837_decl)).ptr())) {
		if ((!(_1dce06136_IsInitialized((*(_184837_decl)).ptr())))) {
			_1dcdd8338_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1dcddd948_checkType(_self_, &((*(_184837_decl)).get()._field_Kind), _184853_l);
	};
	if (((*(_184837_decl)).get()._field_Constant && (*(_184837_decl)).get()._field_Reference)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1dce06136_IsInitialized((*(_184837_decl)).ptr())))) {
		if ((*(_184837_decl)).get()._field_Constant) {
			_1dcdd8338_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_184837_decl)).get()._field_Statically) {
			_1dcdd8338_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_184837_decl)).get()._field_Reference) {
			_1dcdd8338_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1dcde9756_checkGlobalVarDecl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce05cb2_Var>* _188043_decl) {
	if (_1dcdd8e60_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_188043_decl)))), (*(_188043_decl)).get()._field_Ident, (*(_188043_decl)).get()._field_Binded)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_188043_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_188043_decl)).get()._field_Binded && (*(_188043_decl)).get()._field_Constant)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*(_188043_decl)).get()._field_Binded)) && (!((*(_188043_decl)).get()._field_Constant))) && (!((*(_188043_decl)).get()._field_Statically)))) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1dcdd927e_checkDirectives(_self_, &((*(_188043_decl)).get()._field_Directives), jule::Any((*(_188043_decl)), &__jule_any_type8));
	_1dcde94d1_checkVarDecl(_self_, _188043_decl, jule::Trait<_1dcea0763_Lookup>(_self_, 3));
}



inline jule::Bool _1dcde99ba_checkGlobalDecls(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c688e2ab:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> _189821_decl = *it;
			{
				_1dcde9756_checkGlobalVarDecl(_self_, &(_189821_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c688e2ab:;
			++it;
			goto _iter_begin_1c688e2ab;
		}
		_iter_end_1c688e2ab:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dcde9d72_checkStructTraitImpl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5b641_Struct>* _190845_strct, jule::Ptr<_1dcd83bb8_Trait>* _190866_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_190866_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6890994:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _190921_tf = *it;
			{
				jule::Bool _191021_exist = false;;
				jule::Ptr<_1dcd71997_Fn> _191121_sf = _1dcd5c235_FindMethod((*(_190845_strct)).ptr(), _190921_tf.get()._field_Ident, _190921_tf.get()._field_Statically);;
				jule::Ptr<_1dcd74648_FnIns> _191217_tfK = _1dcde16a4_getTraitCheckFnKind(_self_, &(_190921_tf));;
				if ((_191121_sf != nullptr)) {
					jule::Ptr<_1dcd74648_FnIns> _191425_sfK = _1dcde16a4_getTraitCheckFnKind(_self_, &(_191121_sf));;
					_191021_exist=_1dcd75506_equalTrait(_191217_tfK, &(_191425_sfK));
				};
				if (_191021_exist) {
					jule::Ptr<_1dcd09369_Directive> _191821_d = _1dce7b497_findDirective(&(_191121_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_191821_d != nullptr)) {
						_1dcdd8338_pushErr(_self_.ptr(), _191821_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1dcdd8338_pushErr(_self_.ptr(), (*(_190845_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_190866_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_1dcd7635e_GetKindStr(_191217_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c6890994:;
			++it;
			goto _iter_begin_1c6890994;
		}
		_iter_end_1c6890994:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dcdea180_checkStructImpls(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5b641_Struct>* _193241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_193241_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68956be:;
		if (it != expr_end) {
			jule::Ptr<_1dcd83bb8_Trait> _193421_trt = *it;
			{
				__jule_func_result=(_1dcde9d72_checkStructTraitImpl(_self_, _193241_s, &(_193421_trt)) && __jule_func_result);
			}
			_iter_next_1c68956be:;
			++it;
			goto _iter_begin_1c68956be;
		}
		_iter_end_1c68956be:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dcdea48d_checkStructFields(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5b641_Struct>* _194042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_194042_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6896aaa:;
		if (it != expr_end) {
			jule::Ptr<_1dcd58a6c_Field> _194221_f = *it;
			{
				_194221_f.get()._field_Owner=(*(_194042_st));
				{
					auto expr = &((*(_194042_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6897605:;
					if (it != expr_end) {
						jule::Ptr<_1dcd58a6c_Field> _194420_cf = *it;
						{
							if ((_194221_f == _194420_cf)) {
								goto _iter_end_1c6897605;
							} else if ((_194221_f.get()._field_Ident == _194420_cf.get()._field_Ident)) {
								_1dcdd8338_pushErr(_self_.ptr(), _194221_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_194221_f.get()._field_Ident, &__jule_any_type5)}));
								_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1c6897605:;
						++it;
						goto _iter_begin_1c6897605;
					}
					_iter_end_1c6897605:;
				};
			}
			_iter_next_1c6896aaa:;
			++it;
			goto _iter_begin_1c6896aaa;
		}
		_iter_end_1c6896aaa:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1dcdea713_checkStructDecl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5b641_Struct>* _195740_s) {
	if (_23ae293d6_IsIgnoreIdent((*(_195740_s)).get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_195740_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1dcdd8e60_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_195740_s)))), (*(_195740_s)).get()._field_Ident, (*(_195740_s)).get()._field_Binded)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_195740_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_195740_s)).get()._field_Ident, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1dcdd927e_checkDirectives(_self_, &((*(_195740_s)).get()._field_Directives), jule::Any((*(_195740_s)), &__jule_any_type66));
	{
		
		if ((!(_1dcde6038_checkDeclGenerics(_self_.ptr(), &((*(_195740_s)).get()._field_Generics))))) {
			_case_begin_1c6899272:;
		}
		else if ((!(_1dcdea48d_checkStructFields(_self_, _195740_s)))) {
			_case_begin_1c689acce:;
		}
		else if ((!(_1dcdea180_checkStructImpls(_self_, _195740_s)))) {
			_case_begin_1c689ad45:;
		}
		else if ((!(_1dcdeb280_checkFuncDecls(_self_, &((*(_195740_s)).get()._field_Methods))))) {
			_case_begin_1c689adab:;
		}
		_match_end_1c689ab9c:;
	};
}



inline jule::Bool _1dcdea977_checkStructDecls(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c689c5c7:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _197721_s = *it;
			{
				_1dcdea713_checkStructDecl(_self_, &(_197721_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c689c5c7:;
			++it;
			goto _iter_begin_1c689c5c7;
		}
		_iter_end_1c689c5c7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1dcdeabec_checkAnonFnDecl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd71997_Fn>* _198740_f) {
	(*(_198740_f)).get()._field_sema=_self_;
	_1dcde6bd7_checkFnDeclPrototype(_self_, _198740_f);
}



inline void _1dcdeae72_checkFnDecl(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd71997_Fn>* _199236_f) {
	if (_23ae293d6_IsIgnoreIdent((*(_199236_f)).get()._field_Ident)) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1dcd728aa_IsAnon((*(_199236_f)).ptr())) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1dcdd927e_checkDirectives(_self_, &((*(_199236_f)).get()._field_Directives), jule::Any((*(_199236_f)), &__jule_any_type65));
	_1dcdeabec_checkAnonFnDecl(_self_, _199236_f);
	if ((((*(_199236_f)).get()._field_Owner == nullptr) && _1dcdd8e60_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_199236_f)))), (*(_199236_f)).get()._field_Ident, (*(_199236_f)).get()._field_Binded))) {
		if ((*(_199236_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_1dcd71997_Fn> _200421_init = _1dcdd6de7_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_200421_init != nullptr)) {
				return;;
			};
		};
		_1dcdd8338_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_199236_f)).get()._field_Ident, &__jule_any_type5)}));
		_1dcdd8657_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1dcdeb280_checkFuncDecls(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Slice<jule::Ptr<_1dcd71997_Fn>>* _201439_funcs) {
	{
		auto expr = _201439_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68a2ec3:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _201521_f = *it;
			{
				_1dcdeae72_checkFnDecl(_self_, &(_201521_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1c68a2ec3:;
			++it;
			goto _iter_begin_1c68a2ec3;
		}
		_iter_end_1c68a2ec3:;
	};
	return true;;
}



inline jule::Bool _1dcdeb4e4_checkFnDecls(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1dcdeb280_checkFuncDecls(_self_, &(_self_.get()._field_file.get()._field_Funcs));
	return __jule_func_result;;
}



inline void _1dcdeb8ac_pushCycleError(_1dcdd59a6_Sema* _self_, jule::Str* _203030_st1, jule::Str* _203041_st2, jule::Str* _203056_message) {
	;
	jule::Str _203213_refers_to = _23aa28c94_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_203030_st1)), &__jule_any_type5),jule::Any((*(_203041_st2)), &__jule_any_type5)}));;
	((*(_203056_message))).buffer.insert(0, (((_23a986372_Repeat(jule::Str(" ", 1), 7LL) + _203213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1dcdebd0d_checkCrossCycle(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcd5b641_Struct>* _203631_st1, jule::Ptr<_1dcd5b641_Struct>* _203646_st2, jule::Str* _203665_message) {
	{
		auto expr = &((*(_203646_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68a65e2:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> *_203716_u = it;
			{
				if (((*(_203716_u)) == (*(_203631_st1)))) {
					_1dcdeb8ac_pushCycleError(_self_, &((*(_203646_st2)).get()._field_Ident), &((*(_203716_u)).get()._field_Ident), _203665_message);
					return false;;
				};
				if ((!(_1dcdebd0d_checkCrossCycle(_self_, _203631_st1, _203716_u, _203665_message)))) {
					_1dcdeb8ac_pushCycleError(_self_, &((*(_203646_st2)).get()._field_Ident), &((*(_203716_u)).get()._field_Ident), _203665_message);
					return false;;
				};
			}
			_iter_next_1c68a65e2:;
			++it;
			goto _iter_begin_1c68a65e2;
		}
		_iter_end_1c68a65e2:;
	};
	return true;;
}



inline jule::Bool _1dcdec281_checkStructDeriveIllegalCycles(_1dcdd59a6_Sema* _self_, jule::Str _205049_derive, jule::Ptr<_1dcd5b641_Struct>* _205063_st1, jule::Ptr<_1dce82437_TypeKind>* _205082_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dcd5b641_Struct> _205117_st2 = _1dce9d178_getStructFromKind((*(_205082_k)));;
	if ((_205117_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_205063_st1)) == _205117_st2)) {
		_1dcdd8338_pushErr(_self_, (*(_205063_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_205049_derive, &__jule_any_type5),jule::Any((*(_205063_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _206317_message = jule::Str();;
	if ((!(_1dcdebd0d_checkCrossCycle(_self_, _205063_st1, &(_205117_st2), &(_206317_message))))) {
		jule::Str _206521_errMsg = _206317_message;;
		_206317_message=jule::Str();
		_1dcdeb8ac_pushCycleError(_self_, &((*(_205063_st1)).get()._field_Ident), &(_205117_st2.get()._field_Ident), &(_206317_message));
		_206521_errMsg+=_206317_message;
		_1dcdd8338_pushErr(_self_, (*(_205063_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_205049_derive, &__jule_any_type5),jule::Any(_206521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dcdec5c2_checkStructInsDeriveClone(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcd5e457_StructIns> _207548_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1dcd5ce6c_IsDerives(_207548_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_207548_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68ac32e:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5d962_FieldIns> _207921_f = *it;
			{
				if ((_207921_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1c68ac32e;
				};
				if ((!(_1dce8467b_SupportsCloning(_207921_f.get()._field_Kind.ptr())))) {
					_1dcdd8338_pushErr(_self_, _207548_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_207921_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1dcdec281_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_207548_st.get()._field_Decl), &(_207921_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c68ac32e:;
			++it;
			goto _iter_begin_1c68ac32e;
		}
		_iter_end_1c68ac32e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1dcdec7ae_checkPackageDecls(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68abc68:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _209721_f = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_.ptr(), _209721_f);
				if ((!(_1dcde41ac_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c68abc68:;
			++it;
			goto _iter_begin_1c68abc68;
		}
		_iter_end_1c68abc68:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68b061d:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _210421_f = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_.ptr(), _210421_f);
				if ((!(_1dcde81d3_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c68b061d:;
			++it;
			goto _iter_begin_1c68b061d;
		}
		_iter_end_1c68b061d:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68aeebe:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _211121_f = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_.ptr(), _211121_f);
				if ((!(_1dcde99ba_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c68aeebe:;
			++it;
			goto _iter_begin_1c68aeebe;
		}
		_iter_end_1c68aeebe:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68b14cb:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _211821_f = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_.ptr(), _211821_f);
				{
					
					if ((!(_1dcdeb4e4_checkFnDecls(_self_)))) {
						_case_begin_1c68b779b:;
					}
					else if ((!(_1dcdea977_checkStructDecls(_self_)))) {
						_case_begin_1c68b7812:;
					}
					else {
						_case_begin_1c68b7735:;
						{
							goto _iter_next_1c68b14cb;
						}
					}
					_match_end_1c68b76be:;
				};
				return;;
			}
			_iter_next_1c68b14cb:;
			++it;
			goto _iter_begin_1c68b14cb;
		}
		_iter_end_1c68b14cb:;
	};
}



inline void _1dcdecb00_checkDataForTypeInference(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dce54cbc_Data>* _213045_d, jule::Ptr<_23ae26b42_Token>* _213056_err_token) {
	{
		
		if (_1dce55163_IsNil((*(_213045_d)).ptr())) {
			_case_begin_1c68b866a:;
			{
				_1dcdd8338_pushErr(_self_, (*(_213056_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1dce553c7_IsVoid((*(_213045_d)).ptr())) {
			_case_begin_1c68b86e2:;
			{
				_1dcdd8338_pushErr(_self_, (*(_213056_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_213045_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1c68b8769:;
			{
				_1dcdd8338_pushErr(_self_, (*(_213056_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c68b8549:;
	};
}



inline void _1dcdecd86_checkVar(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce05cb2_Var>* _214133_v) {
	if ((*(_214133_v)).get()._field_Binded) {
		return;;
	};
	if (_1dce0639a_IsTypeInferred((*(_214133_v)).ptr())) {
		(*(_214133_v)).get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=(*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1dcdecb00_checkDataForTypeInference(_self_.ptr(), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1dcde34db_checkValidityForInitExpr(_self_, (*(_214133_v)).get()._field_Mutable, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1dce90ee5_Arr> _215821_arr = _1dce85869_Arr((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_215821_arr != nullptr)) {
			if (_215821_arr.get()._field_Auto) {
				jule::Ptr<_1dce90ee5_Arr> _216125_dataArr = _1dce85869_Arr((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_216125_dataArr != nullptr)) {
					_215821_arr.get()._field_N=_216125_dataArr.get()._field_N;
				};
			};
		};
		if (_1dcde05c6_checkAssignType(_self_, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1dcde34db_checkValidityForInitExpr(_self_, (*(_214133_v)).get()._field_Mutable, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_214133_v)).get()._field_Reference && (!(_1dce9c4da_isValidForRef(&((*(_214133_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1dcdd8338_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_214133_v)).get()._field_Constant) {
		jule::Bool _218317_comptime = _1dce86a57_comptime((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
		if (((!(_1dce5563b_IsConst((*(_214133_v)).get()._field_Value.get()._field_Data.ptr()))) && (!(_218317_comptime)))) {
			_1dcdd8338_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_218317_comptime && (_1dce87c45_comptimeRange((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()) != nullptr))) {
			_1dcdd8338_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		(*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1dce867e3_Tup((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_214133_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1dcded1a5_checkTypeVar(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dce05cb2_Var>* _220037_decl, jule::Trait<_1dcea0763_Lookup> _220053_l) {
	if (((*(_220037_decl)).get()._field_Binded || (!(_1dce06136_IsInitialized((*(_220037_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1dce5683a_Eval> _220517_eval = nullptr;;
	if (((*(_220037_decl)).get()._field_Kind != nullptr)) {
		_220517_eval=_1dcdde916_evalpd(_self_, _220053_l, (*(_220037_decl)).get()._field_Kind.get()._field_Kind, (*(_220037_decl)));
	} else {
		_220517_eval=_1dcdde916_evalpd(_self_, _220053_l, nullptr, (*(_220037_decl)));
	};
	_220517_eval.get()._field_immutable=(!((*(_220037_decl)).get()._field_Mutable));
	(*(_220037_decl)).get()._field_Value.get()._field_Data=_1dce73307_evalExpr(_220517_eval, (*(_220037_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_220037_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1dcdecd86_checkVar(_self_, _220037_decl);
}



inline void _1dcded381_checkGlobalTypes(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68c8cc9:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> _222121_decl = *it;
			{
				if (((_1dce06136_IsInitialized(_222121_decl.ptr()) && (_222121_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1dce0639a_IsTypeInferred(_222121_decl.ptr()) && (_222121_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1dcded1a5_checkTypeVar(_self_, &(_222121_decl), jule::Trait<_1dcea0763_Lookup>(_self_, 3));
				};
			}
			_iter_next_1c68c8cc9:;
			++it;
			goto _iter_begin_1c68c8cc9;
		}
		_iter_end_1c68c8cc9:;
	};
}



inline jule::Ptr<_1dcd74648_FnIns> _1dcded738_readyToCheckFn(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5e457_StructIns>* _223239_s, jule::Ptr<_1dcd71997_Fn>* _223259_f) {
	jule::Ptr<_1dcd74648_FnIns> _223317_ins = _1dcd730e7_instance((*(_223259_f)));;
	if (((*(_223259_f)).get()._field_Instances.len() != 0LL)) {
		return _223317_ins;;
	};
	_223317_ins.get()._field_Owner=(*(_223239_s));
	_1dcd733c2_appendInstance((*(_223259_f)).ptr(), &(_223317_ins));
	_223317_ins.get()._field_reloaded=true;
	if (_1dcde2991_reloadFnInsTypes(_self_, _223317_ins)) {
		return _223317_ins;;
	};
	return nullptr;;
}



inline void _1dcdeda57_checkTypeMethod(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5e457_StructIns>* _224640_s, jule::Ptr<_1dcd71997_Fn>* _224660_f) {
	if (((*(_224660_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1dcd74648_FnIns> _225117_ins = (*(_224660_f)).get()._field_Instances[0LL];;
	if ((_225117_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1dce01230_checkFnIns(_self_, &(_225117_ins));
}



inline jule::Ptr<_1dcd74648_FnIns> _1dcdedea8_checkStructInsOp(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5e457_StructIns>* _225941_s, jule::Ptr<_1dcd71997_Fn>* _225961_f, jule::Fn<jule::Bool(jule::Ptr<_1dcd71997_Fn>)> _225969_p) {
	if (((((*(_225961_f)) == nullptr) || ((*(_225961_f)).get()._field_Generics.len() > 0LL)) || (!(_225969_p((*(_225961_f))))))) {
		return nullptr;;
	};
	return (*(_225961_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1dcdee360_checkStructEnv(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5e457_StructIns>* _226939_s, jule::Ptr<_23ae26b42_Token> _226958_errorToken) {
	jule::Bool __jule_func_result = false;
	_1dce93778_typeChecker _227017_tc = _1dce93778_typeChecker{._field_s=(*(_226939_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1dcea0763_Lookup>((*(_226939_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1dcea0763_Lookup>((*(_226939_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1dce92898_referencer>(_1dce92898_referencer{._field_ident=(*(_226939_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_226939_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_226939_s)).get()._field_Refers, };;
	if (((*(_226939_s)).get()._field_Generics.len() > 0LL)) {
		_227017_tc._field_useGenerics=jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>::alloc(0LL, (*(_226939_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_226939_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c68d2585:;
			if (it != expr_end) {
				jule::I64 _228318_i = it - expr->begin();
				jule::Ptr<_1dce80ba5_InsGeneric> _228325_g = *it;
				{
					jule::Ptr<_1dcd48d26_GenericDecl> _228425_decl = (*(_226939_s)).get()._field_Decl.get()._field_Generics[_228318_i];;
					{ jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> &__jule_push_dest = _227017_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1dce816de_TypeAlias>(_1dce816de_TypeAlias{._field_Token=_228425_decl.get()._field_Token, ._field_Ident=_228425_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=_228325_g.get()._field_Kind}), })); };
				}
				_iter_next_1c68d2585:;
				++it;
				_228318_i++;
				goto _iter_begin_1c68d2585;
			}
			_iter_end_1c68d2585:;
		};
	};
	jule::Ptr<_1dce502b2_SymbolTable> _229317_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1dcdd7e70_setCurrentFile(_self_.ptr(), _229317_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_226939_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1dce502b2_SymbolTable> _229721_file = _1dcdd47eb_findFile(&(_self_.get()._field_files), &((*(_226939_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_229721_file != nullptr)) {
			_1dcdd7e70_setCurrentFile(_self_.ptr(), _229721_file);
		};
	};
	if (((*(_226939_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1dcda6d62_constraintChecker> _230421_cc = _1dcddd591_constraintChecker(_self_);;
		_230421_cc.get()._field_et=_226958_errorToken;
		_230421_cc.get()._field_si=(*(_226939_s));
		_230421_cc.get()._field_genericsA=_227017_tc._field_useGenerics;
		_230421_cc.get()._field_uniq=true;
		if ((!(_1dcda7bed_check(_230421_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_226939_s)).get()._field_Statics.len() > 0LL)) {
		jule::I64 _231721_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_227017_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_226939_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c68d8aca:;
			if (it != expr_end) {
				jule::Ptr<_1dce05cb2_Var> _231925_v = *it;
				{
					_1dcde94d1_checkVarDecl(_self_, &(_231925_v), jule::Trait<_1dcea0763_Lookup>(_self_, 3));
					_1dcded1a5_checkTypeVar(_self_, &(_231925_v), jule::Trait<_1dcea0763_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _231721_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1c68d8aca:;
				++it;
				goto _iter_begin_1c68d8aca;
			}
			_iter_end_1c68d8aca:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_227017_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1dce5683a_Eval> _233017_eval = _1dcde00cb_eval(_self_, jule::Trait<_1dcea0763_Lookup>(_self_, 3));;
	(*(_226939_s)).get()._field_Comparable=(!((*(_226939_s)).get()._field_Decl.get()._field_Binded));
	{
		auto expr = &((*(_226939_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68db77b:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5d962_FieldIns> _233221_f = *it;
			{
				jule::Ptr<_1dce82437_TypeKind> _233321_kind = _1dce9a6c5_checkDecl(&_227017_tc, &(_233221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_233321_kind != nullptr) && __jule_func_result);
				if ((_233321_kind == nullptr)) {
					if (((_self_ != (*(_226939_s)).get()._field_Decl.get()._field_sema) && ((*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						(_self_.get()._field_errors).append((*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors);;
						(*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1c68db77b;
				};
				_233221_f.get()._field_Kind=_233321_kind;
				(*(_226939_s)).get()._field_Mutable=((*(_226939_s)).get()._field_Mutable || ((!(_233221_f.get()._field_Decl.get()._field_Mutable)) && _1dce83bca_Mutable(_233221_f.get()._field_Kind.ptr())));
				(*(_226939_s)).get()._field_Comparable=((*(_226939_s)).get()._field_Comparable && _1dce83966_Comparable(_233221_f.get()._field_Kind.ptr()));
				_1dcdec5c2_checkStructInsDeriveClone(_self_.ptr(), (*(_226939_s)));
				if ((_233221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1c68db77b;
				};
				_233017_eval.get()._field_prefix=_233221_f.get()._field_Kind;
				_233017_eval.get()._field_field=_233221_f;
				_233221_f.get()._field_Default=_1dce73307_evalExpr(_233017_eval, _233221_f.get()._field_Decl.get()._field_Default);
				if ((_233221_f.get()._field_Default == nullptr)) {
					goto _iter_next_1c68db77b;
				};
				;
				_1dcde05c6_checkAssignType(_self_, false, &(_233221_f.get()._field_Kind), &(_233221_f.get()._field_Default), _233221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1c68db77b:;
			++it;
			goto _iter_begin_1c68db77b;
		}
		_iter_end_1c68db77b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dcdee717_precheckStructIns(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5e457_StructIns>* _236742_s, jule::Ptr<_23ae26b42_Token> _236761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1dcdee360_checkStructEnv(_self_, _236742_s, _236761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_236742_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6221963:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _237221_f = *it;
			{
				if ((_237221_f.get()._field_Generics.len() == 0LL)) {
					if ((_1dcded738_readyToCheckFn(_self_, _236742_s, &(_237221_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1c6221963:;
			++it;
			goto _iter_begin_1c6221963;
		}
		_iter_end_1c6221963:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1dcdee98c_checkStructIns(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5e457_StructIns>* _238239_s) {
	{
		auto expr = &((*(_238239_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62231a1:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _238321_f = *it;
			{
				_1dcdeda57_checkTypeMethod(_self_, _238239_s, &(_238321_f));
			}
			_iter_next_1c62231a1:;
			++it;
			goto _iter_begin_1c62231a1;
		}
		_iter_end_1c62231a1:;
	};
}



inline void _1dcdeec12_checkTypeStruct(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5b641_Struct>* _238840_s) {
	if ((*(_238840_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_238840_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_238840_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62247ce:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5e457_StructIns> _240121_ins = *it;
			{
				_1dcdee98c_checkStructIns(_self_, &(_240121_ins));
			}
			_iter_next_1c62247ce:;
			++it;
			goto _iter_begin_1c62247ce;
		}
		_iter_end_1c62247ce:;
	};
}



inline void _1dcdeeddd_checkStructTypes(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6224e72:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _240721_s = *it;
			{
				_1dcdeec12_checkTypeStruct(_self_, &(_240721_s));
			}
			_iter_next_1c6224e72:;
			++it;
			goto _iter_begin_1c6224e72;
		}
		_iter_end_1c6224e72:;
	};
}



inline void _1dce00185_checkStructInsOperators(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5e457_StructIns> _241247_s) {
	{
		auto expr = &(_241247_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c622613d:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _241321_m = *it;
			{
				{
					auto &_match_expr{ _241321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1c6226d97:;
						{
							_241247_s.get()._field_Operators._field_Eq=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce07a1c_Eq);
							_241247_s.get()._field_Comparable=(_241247_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1c6226e0d:;
						{
							_241247_s.get()._field_Operators._field_Gt=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce07cb4_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1c6226e74:;
						{
							_241247_s.get()._field_Operators._field_GtEq=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0805b_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1c6226eeb:;
						{
							_241247_s.get()._field_Operators._field_Lt=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce08303_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1c6227073:;
						{
							_241247_s.get()._field_Operators._field_LtEq=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0859a_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1c62270ea:;
						{
							_241247_s.get()._field_Operators._field_Shl=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce08b83_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1c6227172:;
						{
							_241247_s.get()._field_Operators._field_Shr=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce08e2a_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1c62271e9:;
						{
							_241247_s.get()._field_Operators._field_Add=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce091c2_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1c6227271:;
						{
							_241247_s.get()._field_Operators._field_Sub=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce09469_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1c62272e8:;
						{
							_241247_s.get()._field_Operators._field_Div=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce09711_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1c6227370:;
						{
							_241247_s.get()._field_Operators._field_Mul=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce099a8_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1c62273e7:;
						{
							_241247_s.get()._field_Operators._field_Mod=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce09c50_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1c622746e:;
						{
							_241247_s.get()._field_Operators._field_BitAnd=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce09ee7_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1c62274e6:;
						{
							_241247_s.get()._field_Operators._field_BitOr=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0a28e_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1c622756d:;
						{
							_241247_s.get()._field_Operators._field_BitXor=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0a536_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1c62275e5:;
						{
							_241247_s.get()._field_Operators._field_Neg=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0ab1e_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1c622766c:;
						{
							_241247_s.get()._field_Operators._field_Pos=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0adb6_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1c62276e4:;
						{
							_241247_s.get()._field_Operators._field_BitNot=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0b15d_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1c622776b:;
						{
							_241247_s.get()._field_Operators._field_AddAssign=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0b746_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1c62277e3:;
						{
							_241247_s.get()._field_Operators._field_SubAssign=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0b9dd_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1c622786a:;
						{
							_241247_s.get()._field_Operators._field_DivAssign=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0bc85_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1c62278e2:;
						{
							_241247_s.get()._field_Operators._field_MulAssign=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0c02c_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1c6227969:;
						{
							_241247_s.get()._field_Operators._field_ModAssign=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0c2c4_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1c62279e1:;
						{
							_241247_s.get()._field_Operators._field_ShlAssign=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0c56b_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1c6227a68:;
						{
							_241247_s.get()._field_Operators._field_ShrAssign=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0c813_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1c6227ae0:;
						{
							_241247_s.get()._field_Operators._field_BitOrAssign=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0caaa_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1c6227b67:;
						{
							_241247_s.get()._field_Operators._field_BitAndAssign=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0cd52_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1c6227bde:;
						{
							_241247_s.get()._field_Operators._field_BitXorAssign=_1dcdedea8_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1dce0d0e9_BitXorAssign);
						}
					}
					_match_end_1c6226979:;
				};
			}
			_iter_next_1c622613d:;
			++it;
			goto _iter_begin_1c622613d;
		}
		_iter_end_1c622613d:;
	};
}



inline void _1dce0041b_precheckStructType(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd5b641_Struct>* _247643_s) {
	if ((*(_247643_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_247643_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_247643_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1dcd5e457_StructIns> _248721_ins = _1dcd5baa3_instance((*(_247643_s)));;
		_248721_ins.get()._field_Checked=true;
		_1dcd5bd7d_appendInstance((*(_247643_s)).ptr(), &(_248721_ins));
		_1dcdee717_precheckStructIns(_self_, &(_248721_ins), nullptr);
	};
	_1dce00185_checkStructInsOperators(_self_, (*(_247643_s)).get()._field_Instances[0LL]);
}



inline void _1dce005e7_precheckStructTypes(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6238a46:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _249721_s = *it;
			{
				_1dce0041b_precheckStructType(_self_, &(_249721_s));
			}
			_iter_next_1c6238a46:;
			++it;
			goto _iter_begin_1c6238a46;
		}
		_iter_end_1c6238a46:;
	};
}



inline void _1dce0086c_checkRets(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcd74648_FnIns>* _250233_f) {
	if (_1dcd71e09_IsVoid((*(_250233_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1dce02a5b_missingRetChecker _250613_mrc = static__1dce02e24_new();;
	jule::Bool _250713_ok = _1dce03e36_check(&_250613_mrc, (*(_250233_f)).get()._field_Scope);;
	if ((!(_250713_ok))) {
		_1dcdd8338_pushErr(_self_, (*(_250233_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1dce00b8b_checkFnInsSc(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcd74648_FnIns>* _251336_f, jule::Ptr<_1dcdb5898_scopeChecker>* _251352_sc) {
	_1dcdd3e16_appendRetVars(&((*(_251352_sc)).get()._field_table.get()._field_Vars), _251336_f);
	_1dcdd41be_appendParamVars(&((*(_251352_sc)).get()._field_table.get()._field_Vars), _251336_f);
	_1dcdd4499_appendGenericTypeAliases(&((*(_251352_sc)).get()._field_table.get()._field_TypeAliases), _251336_f);
	_1dcdc57dc_check((*(_251352_sc)), &((*(_251336_f)).get()._field_Decl.get()._field_Scope), &((*(_251336_f)).get()._field_Scope));
	if ((!(_1dcdb81e7_stopped((*(_251352_sc)).ptr())))) {
		_1dce0086c_checkRets(_self_, _251336_f);
	};
}



inline void _1dce00eaa_checkFnInsCaller(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd74648_FnIns>* _252641_f, jule::Ptr<_23ae26b42_Token> _252656_caller) {
	if ((*(_252641_f)).get()._field_Decl.get()._field_Binded) {
		return;;
	};
	jule::Ptr<_1dce502b2_SymbolTable> _253117_old = (*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1dcdd7e70_setCurrentFile((*(_252641_f)).get()._field_Decl.get()._field_sema.ptr(), _253117_old);
	});;
	jule::Ptr<_1dce502b2_SymbolTable> _253317_file = _1dcdd47eb_findFile(&((*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_252641_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_253317_file != nullptr)) {
		_1dcdd7e70_setCurrentFile((*(_252641_f)).get()._field_Decl.get()._field_sema.ptr(), _253317_file);
	};
	jule::Ptr<_1dcdb5898_scopeChecker> _253817_sc = _1dcdab130_newScopeChecker(&((*(_252641_f)).get()._field_Decl.get()._field_sema), (*(_252641_f)));;
	_253817_sc.get()._field_calledFrom=_252656_caller;
	_1dce00b8b_checkFnInsSc(_self_.ptr(), _252641_f, &(_253817_sc));
	if (((*(_252641_f)).get()._field_Decl.get()._field_sema != _self_)) {
		(_self_.get()._field_errors).append((*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_errors);;
		(*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1dce01230_checkFnIns(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd74648_FnIns>* _254835_f) {
	_1dce00eaa_checkFnInsCaller(_self_, _254835_f, nullptr);
}



inline void _1dce014a5_checkTypeFn(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd71997_Fn>* _255236_f) {
	if ((*(_255236_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_255236_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_255236_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62436bb:;
		if (it != expr_end) {
			jule::Ptr<_1dcd74648_FnIns> _256221_ins = *it;
			{
				_1dce01230_checkFnIns(_self_, &(_256221_ins));
			}
			_iter_next_1c62436bb:;
			++it;
			goto _iter_begin_1c62436bb;
		}
		_iter_end_1c62436bb:;
	};
}



inline void _1dce0172a_checkTestFn(_1dcdd59a6_Sema* _self_, jule::Ptr<_1dcd74648_FnIns>* _256735_f) {
	if ((*(_256735_f)).get()._field_Decl.get()._field_Public) {
		_1dcdd8338_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1dcdd8657_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_256735_f)).get()._field_Decl.get()._field_Unsafety || (!(_1dcd71e09_IsVoid((*(_256735_f)).get()._field_Decl.ptr())))) || ((*(_256735_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_256735_f)).get()._field_Params.len() != 1LL)) || (*(_256735_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_256735_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_1dcdd8338_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1dcdd8657_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dce8d3dd_Sptr> _258517_sptr = _1dce84db8_Sptr((*(_256735_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_258517_sptr == nullptr)) {
		_1dcdd8338_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1dcdd8657_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _259213_s = _1dce860a6_Struct(_258517_sptr.get()._field_Elem.ptr());;
	if (((_259213_s == nullptr) || (!(_1dcdd25c9_isStdPackage(_259213_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_1dcdd8338_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1dcdd8657_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1dce019a0_precheckTypeFn(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Ptr<_1dcd71997_Fn>* _260039_f) {
	if ((*(_260039_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_260039_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_260039_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1dcd74648_FnIns> _261121_ins = _1dcd72d83_instanceForce((*(_260039_f)));;
		{ jule::Slice<jule::Ptr<_1dcd74648_FnIns>> &__jule_push_dest = (*(_260039_f)).get()._field_Instances; __jule_push_dest.push(_261121_ins); };
		jule::Bool _261317_ok = _1dcde2991_reloadFnInsTypes(_self_, _261121_ins);;
		_261121_ins.get()._field_reloaded=true;
		if ((_261317_ok && _1dce9bb7c_hasDirective(&((*(_260039_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_1dce0172a_checkTestFn(_self_.ptr(), &(_261121_ins));
		};
	};
}



inline void _1dce01b7b_precheckFnTypes(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c624d40c:;
		if (it != expr_end) {
			jule::Ptr<_1dcd83bb8_Trait> _262421_decl = *it;
			{
				{
					auto expr = &(_262421_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c624dc6a:;
					if (it != expr_end) {
						jule::Ptr<_1dcd71997_Fn> _262525_m = *it;
						{
							_1dce019a0_precheckTypeFn(_self_, &(_262525_m));
						}
						_iter_next_1c624dc6a:;
						++it;
						goto _iter_begin_1c624dc6a;
					}
					_iter_end_1c624dc6a:;
				};
			}
			_iter_next_1c624d40c:;
			++it;
			goto _iter_begin_1c624d40c;
		}
		_iter_end_1c624d40c:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c624d8a2:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _262921_decl = *it;
			{
				_1dce019a0_precheckTypeFn(_self_, &(_262921_decl));
			}
			_iter_next_1c624d8a2:;
			++it;
			goto _iter_begin_1c624d8a2;
		}
		_iter_end_1c624d8a2:;
	};
}



inline void _1dce01d57_checkFnTypes(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c624eab2:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _263621_decl = *it;
			{
				_1dce014a5_checkTypeFn(_self_, &(_263621_decl));
			}
			_iter_next_1c624eab2:;
			++it;
			goto _iter_begin_1c624eab2;
		}
		_iter_end_1c624eab2:;
	};
}



inline void _1dce02033_checkPackageTypes(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6250c28:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _264421_f = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_.ptr(), _264421_f);
				_1dcded381_checkGlobalTypes(_self_);
				_1dce01b7b_precheckFnTypes(_self_);
				_1dce005e7_precheckStructTypes(_self_);
			}
			_iter_next_1c6250c28:;
			++it;
			goto _iter_begin_1c6250c28;
		}
		_iter_end_1c6250c28:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6251ec1:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _265521_f = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_.ptr(), _265521_f);
				_1dce01d57_checkFnTypes(_self_);
				_1dcdeeddd_checkStructTypes(_self_);
			}
			_iter_next_1c6251ec1:;
			++it;
			goto _iter_begin_1c6251ec1;
		}
		_iter_end_1c6251ec1:;
	};
}



inline void _1dce0220e_setFileSemaFields(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62530c1:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _266321_f = *it;
			{
				_266321_f.get()._field_sema=_self_;
			}
			_iter_next_1c62530c1:;
			++it;
			goto _iter_begin_1c62530c1;
		}
		_iter_end_1c62530c1:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6253401:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _266621_st = *it;
			{
				_266621_st.get()._field_sema=_self_;
			}
			_iter_next_1c6253401:;
			++it;
			goto _iter_begin_1c6253401;
		}
		_iter_end_1c6253401:;
	};
}



inline void _1dce023da_setSemaFields(jule::Ptr<_1dcdd59a6_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6253e3a:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _267221_file = *it;
			{
				_1dcdd7e70_setCurrentFile(_self_.ptr(), _267221_file);
				_1dce0220e_setFileSemaFields(_self_);
			}
			_iter_next_1c6253e3a:;
			++it;
			goto _iter_begin_1c6253e3a;
		}
		_iter_end_1c6253e3a:;
	};
}



inline void _1dce02660_check(jule::Ptr<_1dcdd59a6_Sema> _self_, jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>* _267830_files) {
	_self_.get()._field_files=(*(_267830_files));
	_1dcddb99b_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1dce023da_setSemaFields(_self_);
	_1dcddc3d6_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1dcddbd53_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1dcddc02e_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1dcdec7ae_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1dce02033_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1dcdd59a6_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1dce02a5b_missingRetChecker static__1dce02e24_new(void) {
	return _1dce02a5b_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1dce031ee_checkConditional(_1dce02a5b_missingRetChecker* _self_, jule::Ptr<_1dcdae7c6_Conditional> _272635_c) {
	{
		auto expr = &(_272635_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6258637:;
		if (it != expr_end) {
			jule::Ptr<_1dcdae166_If> _272721_elif = *it;
			{
				if ((_272721_elif == nullptr)) {
					return false;;
				};
				if ((!(_1dce03b28_checkScope(_self_, _272721_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1c6258637:;
			++it;
			goto _iter_begin_1c6258637;
		}
		_iter_end_1c6258637:;
	};
	return ((_272635_c.get()._field_Default != nullptr) && _1dce03b28_checkScope(_self_, _272635_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1dce0350c_checkMatch(_1dce02a5b_missingRetChecker* _self_, jule::Ptr<_1dcdb2a82_Match> _273829_m) {
	{
		auto expr = &(_273829_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c625a2c6:;
		if (it != expr_end) {
			jule::Ptr<_1dcdb35cc_Case> _273921_c = *it;
			{
				if ((_273921_c == nullptr)) {
					return false;;
				};
				jule::I64 _274317_n = (*(_self_))._field_breaked.len();;
				jule::Bool _274417_ok = _1dce03b28_checkScope(_self_, _273921_c.get()._field_Scope);;
				{
					
					if ((_274317_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1c625bccd:;
						{
							return false;;
						}
					}
					else if ((!(_274417_ok))) {
						_case_begin_1c625bd44:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1c625bdaa;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1c625bdaa:;
						{
							(*(_self_))._field_falled=false;
							if ((_273921_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1c625a2c6;
						}
					}
					_match_end_1c625b2a5:;
				};
			}
			_iter_next_1c625a2c6:;
			++it;
			goto _iter_begin_1c625a2c6;
		}
		_iter_end_1c625a2c6:;
	};
	return ((_273829_m.get()._field_Default != nullptr) && _1dce03b28_checkScope(_self_, _273829_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1dce0381a_checkInfIter(_1dce02a5b_missingRetChecker* _self_, jule::Ptr<_1dcdaeab2_InfIter> _276431_it) {
	jule::I64 _276513_n = (*(_self_))._field_breaked.len();;
	if (_1dce03b28_checkScope(_self_, _276431_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
		return true;;
	};
	if ((_276513_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _277117_itaddr = static_cast<jule::Uintptr>(_276431_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_276513_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1c6260573:;
			if (it != expr_end) {
				jule::Uintptr _277220_addr = *it;
				{
					if ((_277117_itaddr == _277220_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
						return false;;
					};
				}
				_iter_next_1c6260573:;
				++it;
				goto _iter_begin_1c6260573;
			}
			_iter_end_1c6260573:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
	};
	return true;;
}



inline jule::Bool _1dce03b28_checkScope(_1dce02a5b_missingRetChecker* _self_, jule::Ptr<_1dcdadc6a_Scope> _278329_s) {
	if ((_278329_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_278329_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6261b7e:;
		if (it != expr_end) {
			jule::Any _278721_st = *it;
			{
				{
					auto &_match_expr{ _278721_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1c6262960:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1c6262a2b:;
						{
							jule::Uintptr _279321_addr = _278721_st.cast_ptr<_1dcdb11bd_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_279321_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_279321_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1c6262a92:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1c6262b08:;
						{
							if (_1dce0381a_checkInfIter(_self_, _278721_st.cast_ptr<_1dcdaeab2_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1c6262b6e:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1c6262bd5:;
						{
							if (_1dce03b28_checkScope(_self_, _278721_st.cast_ptr<_1dcdadc6a_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1c6262c5c:;
						{
							{
								auto &_match_expr{ _278721_st.cast_ptr<_1dce54cbc_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1c62666de:;
									{
										return true;;
									}
								}
								_match_end_1c6266447:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1c6262cd4:;
						{
							if (_1dce031ee_checkConditional(_self_, _278721_st.cast_ptr<_1dcdae7c6_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1c6262d5b:;
						{
							if (_1dce0350c_checkMatch(_self_, _278721_st.cast_ptr<_1dcdb2a82_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1c626282d:;
				};
			}
			_iter_next_1c6261b7e:;
			++it;
			goto _iter_begin_1c6261b7e;
		}
		_iter_end_1c6261b7e:;
	};
	return false;;
}



inline jule::Bool _1dce03e36_check(_1dce02a5b_missingRetChecker* _self_, jule::Ptr<_1dcdadc6a_Scope> _282924_s) {
	return _1dce03b28_checkScope(_self_, _282924_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce02a5b_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce04c6c_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dce06136_IsInitialized(_1dce05cb2_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1dce0639a_IsTypeInferred(_1dce05cb2_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1dce0660e_untypedConstant(_1dce05cb2_Var* _self_) {
	return (_1dce0639a_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce05cb2_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1dce0718c_Dispose(jule::Ptr<_1dcd71997_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1dcd71e09_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1dcd709a7_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1dce07434_Str(jule::Ptr<_1dcd71997_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1dcd71e09_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1dcd709a7_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1dcd74648_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1dce89b8c_Prim> _3913_prim = _1dce84b54_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1dce8cd8d_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1dce07775_logical(jule::Ptr<_1dcd71997_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1dcd71e09_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1dcd709a7_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1dcd74648_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1dce89b8c_Prim> _6413_prim = _1dce84b54_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1dce8cb29_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1dce860a6_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1dce07a1c_Eq(jule::Ptr<_1dcd71997_Fn> _7218_f) {
	return static__1dce07775_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1dce07cb4_Gt(jule::Ptr<_1dcd71997_Fn> _7718_f) {
	return static__1dce07775_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1dce0805b_GtEq(jule::Ptr<_1dcd71997_Fn> _8220_f) {
	return static__1dce07775_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1dce08303_Lt(jule::Ptr<_1dcd71997_Fn> _8718_f) {
	return static__1dce07775_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1dce0859a_LtEq(jule::Ptr<_1dcd71997_Fn> _9220_f) {
	return static__1dce07775_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1dce088db_result(jule::Ptr<_1dcd71997_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1dcd71e09_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1dcd709a7_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1dcd74648_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1dce860a6_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1dce08b83_Shl(jule::Ptr<_1dcd71997_Fn> _11819_f) {
	return static__1dce088db_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1dce08e2a_Shr(jule::Ptr<_1dcd71997_Fn> _12319_f) {
	return static__1dce088db_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1dce091c2_Add(jule::Ptr<_1dcd71997_Fn> _12819_f) {
	return static__1dce088db_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1dce09469_Sub(jule::Ptr<_1dcd71997_Fn> _13319_f) {
	return static__1dce088db_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1dce09711_Div(jule::Ptr<_1dcd71997_Fn> _13819_f) {
	return static__1dce088db_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1dce099a8_Mul(jule::Ptr<_1dcd71997_Fn> _14319_f) {
	return static__1dce088db_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1dce09c50_Mod(jule::Ptr<_1dcd71997_Fn> _14819_f) {
	return static__1dce088db_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1dce09ee7_BitAnd(jule::Ptr<_1dcd71997_Fn> _15322_f) {
	return static__1dce088db_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1dce0a28e_BitOr(jule::Ptr<_1dcd71997_Fn> _15821_f) {
	return static__1dce088db_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1dce0a536_BitXor(jule::Ptr<_1dcd71997_Fn> _16322_f) {
	return static__1dce088db_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1dce0a877_unary(jule::Ptr<_1dcd71997_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1dcd71e09_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1dcd709a7_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1dcd74648_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1dce860a6_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1dce0ab1e_Neg(jule::Ptr<_1dcd71997_Fn> _18719_f) {
	return static__1dce0a877_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1dce0adb6_Pos(jule::Ptr<_1dcd71997_Fn> _19219_f) {
	return static__1dce0a877_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1dce0b15d_BitNot(jule::Ptr<_1dcd71997_Fn> _19722_f) {
	return static__1dce0a877_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1dce0b49e_assign(jule::Ptr<_1dcd71997_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1dcd71e09_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1dcd709a7_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1dce0b746_AddAssign(jule::Ptr<_1dcd71997_Fn> _22125_f) {
	return static__1dce0b49e_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1dce0b9dd_SubAssign(jule::Ptr<_1dcd71997_Fn> _22625_f) {
	return static__1dce0b49e_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1dce0bc85_DivAssign(jule::Ptr<_1dcd71997_Fn> _23125_f) {
	return static__1dce0b49e_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1dce0c02c_MulAssign(jule::Ptr<_1dcd71997_Fn> _23625_f) {
	return static__1dce0b49e_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1dce0c2c4_ModAssign(jule::Ptr<_1dcd71997_Fn> _24125_f) {
	return static__1dce0b49e_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1dce0c56b_ShlAssign(jule::Ptr<_1dcd71997_Fn> _24625_f) {
	return static__1dce0b49e_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1dce0c813_ShrAssign(jule::Ptr<_1dcd71997_Fn> _25125_f) {
	return static__1dce0b49e_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1dce0caaa_BitOrAssign(jule::Ptr<_1dcd71997_Fn> _25627_f) {
	return static__1dce0b49e_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1dce0cd52_BitAndAssign(jule::Ptr<_1dcd71997_Fn> _26128_f) {
	return static__1dce0b49e_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1dce0d0e9_BitXorAssign(jule::Ptr<_1dcd71997_Fn> _26628_f) {
	return static__1dce0b49e_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce06a60_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1dce3dc0c_pushErr(_1dce3d734_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _1dce3de71_checkTrait(_1dce3d734_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1dce8348d_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1dcd83bb8_Trait> _12517_trt = _1dce8631a_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1dce84db8_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1c629a3d2:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_1dce84db8_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1dce860a6_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1c629a459;
			}
		}
		else if ((_1dce860a6_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1c629a459:;
			{
				jule::Ptr<_1dcd5e457_StructIns> _13617_s = _1dce860a6_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1dcd5cb5e_IsImplements(_13617_s.get()._field_Decl.ptr(), _12517_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1dce3c4be_traitHasReferenceReceiver(&(_12517_trt)))) {
					_1dce3dc0c_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1dce8631a_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1c629a4d1:;
			{
				jule::Ptr<_1dcd83bb8_Trait> _14621_base = _1dce8631a_Trait((*(_self_))._field_src.ptr());;
				if ((_12517_trt == _14621_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_lookup:;
				{
					auto expr = &(_14621_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c629e727:;
					if (it != expr_end) {
						jule::Ptr<_1dcd5b641_Struct> _15120_s1 = *it;
						{
							{
								auto expr = &(_12517_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c62a0371:;
								if (it != expr_end) {
									jule::Ptr<_1dcd5b641_Struct> _15224_s2 = *it;
									{
										if ((_15120_s1 == _15224_s2)) {
											goto _iter_next_1c629e727;
										};
									}
									_iter_next_1c62a0371:;
									++it;
									goto _iter_begin_1c62a0371;
								}
								_iter_end_1c62a0371:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1c629e727:;
						++it;
						goto _iter_begin_1c629e727;
					}
					_iter_end_1c629e727:;
				};
				{
					auto expr = &(_12517_trt.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c62a0dee:;
					if (it != expr_end) {
						jule::Ptr<_1dcd71997_Fn> _15925_m1 = *it;
						{
							jule::Ptr<_1dcd71997_Fn> _16025_m2 = _1dcd84a65_FindMethod(_14621_base.ptr(), _15925_m1.get()._field_Ident);;
							if ((_16025_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1dcd74648_FnIns> _16421_m1k = _1dcde16a4_getTraitCheckFnKind((*(_self_))._field_s, &(_15925_m1));;
							jule::Ptr<_1dcd74648_FnIns> _16521_m2k = _1dcde16a4_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m2));;
							if ((!(_1dcd75506_equalTrait(_16421_m1k, &(_16521_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1c62a0dee:;
						++it;
						goto _iter_begin_1c62a0dee;
					}
					_iter_end_1c62a0dee:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c629a36b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c629a316:;
	};
}



inline jule::Bool _1dce3e1d5_checkPtr(_1dce3d734_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1dce8348d_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1dce91952_Ptr> _18017_dest = _1dce8512c_Ptr((*(_self_))._field_dest.ptr());;
	if (_1dce92425_IsUnsafe(_18017_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1dce82aec_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1dce3e449_checkPrim(_1dce3d734_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1dce89b8c_Prim> _18917_prim = _1dce84b54_Prim((*(_self_))._field_dest.ptr());;
		if (((_18917_prim != nullptr) && _1dce8d102_IsAny(_18917_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1dce82aec_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1dce3e801_typeEnum(_1dce3d734_typeCompatibilityChecker* _self_, jule::Ptr<_1dcd87a46_TypeEnum>* _19728_e, jule::Ptr<_1dce82437_TypeKind>* _19747_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19728_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62a6740:;
		if (it != expr_end) {
			jule::Ptr<_1dcd874b3_TypeEnumItem> _19821_item = *it;
			{
				if (_1dce82aec_Equal(_19821_item.get()._field_Kind.get()._field_Kind, (*(_19747_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1dcd87a46_TypeEnum> _20221_ke = _1dce85605_TypeEnum(_19821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20221_ke == nullptr)) {
					goto _iter_next_1c62a6740;
				};
				if (_1dce3e801_typeEnum(_self_, &(_20221_ke), _19747_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c62a6740:;
			++it;
			goto _iter_begin_1c62a6740;
		}
		_iter_end_1c62a6740:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dce3ea65_checkTypeEnum(_1dce3d734_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1dce82aec_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1dcd87a46_TypeEnum> _21717_e = _1dce85605_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1dce3e801_typeEnum(_self_, &(_21717_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1dce3ecc9_check(_1dce3d734_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1dce8512c_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1dce3e1d5_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1dce841a3_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1dce8348d_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1dce84b54_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1c62ab27d:;
			{
				__jule_func_result = _1dce3e449_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1dce85605_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1c62ab668:;
			{
				__jule_func_result = _1dce3ea65_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1dce8631a_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1c62ab6ce:;
			{
				__jule_func_result = _1dce3de71_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c62aa502:;
			{
				__jule_func_result = _1dce82aec_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1c62aa359:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dce3d734_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1dce407be_pushErr(_1dce4035c_assignTypeChecker* _self_, jule::Str _25326_fmt, jule::Slice<jule::Any> _25339_args) {
	_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25326_fmt, _25339_args);
}



inline jule::Bool _1dce40a33_checkValidity(_1dce4035c_assignTypeChecker* _self_) {
	jule::Bool _25817_valid = true;;
	{
		
		if ((_1dce85d42_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c62adeb7:;
			{
				jule::Ptr<_1dcd74648_FnIns> _26117_f = _1dce85d42_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1dcd759ce_IsBuiltin(_26117_f.ptr())) {
						_case_begin_1c62b03e7:;
						{
							_1dce407be_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (_26117_f.get()._field_Decl.get()._field_Binded) {
						_case_begin_1c62b046e:;
						{
							_1dce407be_pushErr(_self_, jule::Str("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((!(_26117_f.get()._field_Decl.get()._field_Statically)) && _1dcd7216d_IsMethod(_26117_f.get()._field_Decl.ptr()))) {
						_case_begin_1c62b04e6:;
						{
							_1dce407be_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((_26117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26117_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1c62b056d:;
						{
							_1dce407be_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1dcdd8657_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					_match_end_1c62b031a:;
				};
			}
		}
		else if ((_1dce867e3_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c62ae03e:;
			{
				_1dce407be_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25817_valid=false;
			}
		}
		_match_end_1c62ade0c:;
	};
	return _25817_valid;;
}



inline jule::Bool _1dce40c97_checkConst(_1dce4035c_assignTypeChecker* _self_) {
	if (((((!(_1dce5563b_IsConst((*(_self_))._field_d.ptr()))) || (_1dce84b54_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1dce84b54_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_24a233109_IsNum(_1dce84b54_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29813_kind = _1dce84b54_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_24a232d62_IsFloat(_29813_kind)) {
			_case_begin_1c62b662e:;
			{
				if ((!(_1dce3c766_floatAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1dce407be_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else if (_24a232a43_IsInt(_29813_kind)) {
			_case_begin_1c62b6695:;
			{
				if ((!(_1dce3d27d_intAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1dce407be_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else {
			_case_begin_1c62b65b8:;
			{
				return false;;
			}
		}
		_match_end_1c62b6563:;
	};
	return true;;
}



inline jule::Bool _1dce4100b_isPrim(_1dce4035c_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1dce83229_Binded((*(_self_))._field_dest.ptr()) || _1dce83229_Binded((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1dce84b54_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1dce84b54_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1dce41270_checkCompatibility(_1dce4035c_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1c62ba9b8:;
			{
				return false;;
			}
		}
		else if ((!(_1dce40a33_checkValidity(_self_)))) {
			_case_begin_1c62baa40:;
			{
				return false;;
			}
		}
		else if (_1dce40c97_checkConst(_self_)) {
			_case_begin_1c62baab7:;
			{
				return true;;
			}
		}
		else if ((_1dce85391_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c62bab3e:;
			{
				jule::Ptr<_1dce82437_TypeKind> _34221_dkind = (*(_self_))._field_dest;;
				if ((_1dce85391_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34221_dkind=_1dce85391_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1dce84b54_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1c62ba897;
				};
				if (_24a22e875_TypesAreCompatible(_1dce84b54_Prim(_1dce85391_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1dce84b54_Prim(_34221_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1dce4100b_isPrim(_self_)) {
			_case_begin_1c62babb6:;
			{
				jule::Ptr<_1dce89b8c_Prim> _35217_dest = _1dce84b54_Prim((*(_self_))._field_dest.ptr());;
				if (_1dce8d102_IsAny(_35217_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1dce89b8c_Prim> _35621_src = _1dce84b54_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_24a22e875_TypesAreCompatible(_35217_dest.get()._field_Kind, _35621_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1c62ba897:;
	};
	return _1dcde0a27_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1dce414d4_check(_1dce4035c_assignTypeChecker* _self_) {
	jule::Bool _36513_ok = _1dce41270_checkCompatibility(_self_);;
	if ((_36513_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1dce9d431_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36513_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce4035c_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c62d2e0e_annotateConstraintElem(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1c62d4509:;
			{
				jule::Ptr<_1dce82437_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1c62d531d:;
						{
							_38821_elem=_1dce85869_Arr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1c62d4d89:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1dcd3e03b_ArrTypeDecl>(&__jule_any_type75).get()._field_Elem;
				return _1dce4344d_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1c62d444e:;
	};
	return false;;
}

inline jule::Bool _1c62d323e_annotateConstraintElem(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c62d793b:;
			{
				jule::Ptr<_1dce82437_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1c62d87d8:;
						{
							_38821_elem=_1dce85acd_Slc((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1c62d82bb:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1dcd3d28d_SlcTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1dce4344d_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1c62d7881:;
	};
	return false;;
}

inline jule::Bool _1c62d2727_annotateConstraintElem(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1c62dae39:;
			{
				jule::Ptr<_1dce82437_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1c62dbd4c:;
						{
							_38821_elem=_1dce8512c_Ptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1c62db7b9:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1dcd3d865_PtrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1dce4344d_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1c62dad7e:;
	};
	return false;;
}

inline jule::Bool _1c62d7012_annotateConstraintElem(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1c62dded6:;
			{
				jule::Ptr<_1dce82437_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1c62dee71:;
						{
							_38821_elem=_1dce84db8_Sptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1c62de866:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1dcd3cd92_SptrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1dce4344d_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1c62dde2b:;
	};
	return false;;
}



inline jule::Bool _1dce426d3_annotateConstraintMap(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _40545_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c62c320c:;
			{
				jule::Ptr<_1dce90401_Map> _40821_m = _1dce8657e_Map((*(_40545_k)).ptr());;
				jule::Ptr<_1dcd3e745_MapTypeDecl> _40921_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1dcd3e745_MapTypeDecl>(&__jule_any_type79);;
				(*(_self_))._field_c=_40921_m2.get()._field_Key;
				if ((!(_1dce4344d_annotateConstraint(_self_, &(_40821_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_40921_m2.get()._field_Val;
				__jule_func_result = _1dce4344d_annotateConstraint(_self_, &(_40821_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1c62c3185:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dce429e1_annotateConstraintTup(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _42045_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c62c58a2:;
			{
				jule::Ptr<_1dcd3d579_TupleTypeDecl> _42321_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1dcd3d579_TupleTypeDecl>(&__jule_any_type80);;
				jule::Ptr<_1dce8e950_Tuple> _42421_tup2 = _1dce867e3_Tup((*(_42045_k)).ptr());;
				{
					auto expr = &(_42421_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c62c6cb0:;
					if (it != expr_end) {
						jule::Ptr<_1dce82437_TypeKind> _42525_t2 = *it;
						{
							{
								auto expr = &(_42321_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c62c7574:;
								if (it != expr_end) {
									jule::Ptr<_1dcd3bd80_TypeDecl> _42629_t = *it;
									{
										(*(_self_))._field_c=_42629_t;
										if (_1dce4344d_annotateConstraint(_self_, &(_42525_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1c62c7574:;
									++it;
									goto _iter_begin_1c62c7574;
								}
								_iter_end_1c62c7574:;
							};
						}
						_iter_next_1c62c6cb0:;
						++it;
						goto _iter_begin_1c62c6cb0;
					}
					_iter_end_1c62c6cb0:;
				};
			}
		}
		_match_end_1c62c5808:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dce42cee_annotateConstraintFn(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _43744_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c62c7310:;
			{
				jule::Ptr<_1dcd4d4ac_FnDecl> _44021_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1dcd4d4ac_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1dcd74648_FnIns> _44121_f = _1dce85d42_Fn((*(_43744_k)).ptr());;
				{
					auto expr = &(_44121_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c62c96b9:;
					if (it != expr_end) {
						jule::I64 _44218_i = it - expr->begin();
						jule::Ptr<_1dcd73779_ParamIns> _44225_fp = *it;
						{
							(*(_self_))._field_c=_44021_pf.get()._field_Params[_44218_i].get()._field_Kind;
							if (_1dce4344d_annotateConstraint(_self_, &(_44225_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1c62c96b9:;
						++it;
						_44218_i++;
						goto _iter_begin_1c62c96b9;
					}
					_iter_end_1c62c96b9:;
				};
				if ((_44021_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44021_pf.get()._field_Result.get()._field_Kind;
					if (_1dce4344d_annotateConstraint(_self_, &(_44121_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1c62c83ee:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dce4312e_annotateConstraintIdent(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _45847_k) {
	jule::Ptr<_1dcd3c446_IdentTypeDecl> _45917_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1dcd3c446_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1dcd5e457_StructIns> _46017_s = _1dce860a6_Struct((*(_45847_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62cc05c:;
		if (it != expr_end) {
			jule::I64 _46113_i = it - expr->begin();
			jule::Ptr<_1dcd48d26_GenericDecl> _46116_g = *it;
			{
				if ((_46116_g.get()._field_Ident == _45917_ident.get()._field_Ident)) {
					jule::Ptr<_1dce80ba5_InsGeneric> _46325_fg = (*(_self_))._field_f.get()._field_Generics[_46113_i];;
					if ((_46325_fg != nullptr)) {
						return false;;
					};
					_1dce4376c_pushGeneric(_self_, _45847_k, _46113_i);
					return true;;
				};
				if ((_46017_s == nullptr)) {
					goto _iter_next_1c62cc05c;
				};
				jule::Ptr<_1dcd3bd80_TypeDecl> _47321_c = (*(_self_))._field_c;;
				{
					auto expr = &(_45917_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c62ce9cc:;
					if (it != expr_end) {
						jule::Ptr<_1dcd3bd80_TypeDecl> _47425_ig = *it;
						{
							(*(_self_))._field_c=_47425_ig;
							{
								auto expr = &(_46017_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c62d0747:;
								if (it != expr_end) {
									jule::Ptr<_1dce80ba5_InsGeneric> _47629_sg = *it;
									{
										if (_1dce4344d_annotateConstraint(_self_, &(_47629_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1c62d0747:;
									++it;
									goto _iter_begin_1c62d0747;
								}
								_iter_end_1c62d0747:;
							};
						}
						_iter_next_1c62ce9cc:;
						++it;
						goto _iter_begin_1c62ce9cc;
					}
					_iter_end_1c62ce9cc:;
				};
				(*(_self_))._field_c=_47321_c;
			}
			_iter_next_1c62cc05c:;
			++it;
			_46113_i++;
			goto _iter_begin_1c62cc05c;
		}
		_iter_end_1c62cc05c:;
	};
	return false;;
}



inline jule::Bool _1dce4344d_annotateConstraint(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _48742_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c62d0181:;
			{
				return _1dce4312e_annotateConstraintIdent(_self_, _48742_k);;
			}
		}
		_match_end_1c62d012b:;
	};
	{
		
		if ((_1dce85869_Arr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1c62d21a5:;
			{
				return _1c62d2e0e_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1dce85acd_Slc((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1c62d1abc:;
			{
				return _1c62d323e_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1dce8512c_Ptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1c62d1b33:;
			{
				return _1c62d2727_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1dce84db8_Sptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1c62d1726:;
			{
				return _1c62d7012_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1dce8657e_Map((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1c62d178c:;
			{
				return _1dce426d3_annotateConstraintMap(_self_, _48742_k);;
			}
		}
		else if ((_1dce85d42_Fn((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1c62d1803:;
			{
				return _1dce42cee_annotateConstraintFn(_self_, _48742_k);;
			}
		}
		else if ((_1dce867e3_Tup((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1c62d1869:;
			{
				return _1dce429e1_annotateConstraintTup(_self_, _48742_k);;
			}
		}
		else {
			_case_begin_1c62d0307:;
			{
				return false;;
			}
		}
		_match_end_1c62d0291:;
	};
}



inline void _1dce4376c_pushGeneric(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _51235_k, jule::I64 _51249_i) {
	(*(_self_))._field_f.get()._field_Generics[_51249_i]=jule::new_ptr<_1dce80ba5_InsGeneric>(_1dce80ba5_InsGeneric{._field_Kind=(*(_51235_k)), });
	jule::Ptr<_1dcd48d26_GenericDecl> _51417_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51249_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62e265a:;
		if (it != expr_end) {
			jule::Ptr<_1dce82437_TypeKind> _51521_ignored = *it;
			{
				if ((_51417_gd.get()._field_Ident == _1dce827de_Str(_51521_ignored.ptr()))) {
					_51521_ignored.get()._field_Kind=(*(_51235_k)).get()._field_Kind;
				};
			}
			_iter_next_1c62e265a:;
			++it;
			goto _iter_begin_1c62e265a;
		}
		_iter_end_1c62e265a:;
	};
	if (((_51417_gd.get()._field_Constraint == nullptr) || (_51417_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51417_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1dce4344d_annotateConstraint(_self_, _51235_k);
}



inline jule::Bool _1dce43a7a_annotatePrim(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _52743_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1dce458a1_annotateAny(_self_, _52743_k);
	return __jule_func_result;;
}



inline jule::Bool _1dce43d88_annotateArr(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dce90ee5_Arr> _53217_parr = _1dce85869_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53217_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dce90ee5_Arr> _53617_arr = _1dce85869_Arr((*(_53142_k)).ptr());;
	(*(_self_))._field_k=(&(_53217_parr.get()._field_Elem));
	__jule_func_result = _1dce45bae_annotateKind(_self_, &(_53617_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1dce44196_annotateSlc(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _54142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dce8dd4a_Slc> _54217_pslc = _1dce85acd_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54217_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dce8dd4a_Slc> _54617_slc = _1dce85acd_Slc((*(_54142_k)).ptr());;
	(*(_self_))._field_k=(&(_54217_pslc.get()._field_Elem));
	__jule_func_result = _1dce45bae_annotateKind(_self_, &(_54617_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1dce4454d_checkMapKey(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _55141_k, jule::Ptr<_1dce82437_TypeKind>* _55161_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dce82437_TypeKind>* _55217_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55141_k;
	__jule_func_result=_1dce45bae_annotateKind(_self_, _55161_ck);
	(*(_self_))._field_k=_55217_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dce4485b_annotateMap(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _55942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dce90401_Map> _56017_pmap = _1dce8657e_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56017_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dce90401_Map> _56417_m = _1dce8657e_Map((*(_55942_k)).ptr());;
	__jule_func_result = (_1dce4454d_checkMapKey(_self_, (&(_56017_pmap.get()._field_Key)), &(_56417_m.get()._field_Key)) && _1dce4454d_checkMapKey(_self_, (&(_56017_pmap.get()._field_Val)), &(_56417_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1dce44b69_annotateFn(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _56941_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dcd74648_FnIns> _57017_pf = _1dce85d42_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57017_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dcd74648_FnIns> _57417_f = _1dce85d42_Fn((*(_56941_k)).ptr());;
	{
		
		if ((_57017_pf.get()._field_Params.len() != _57417_f.get()._field_Params.len())) {
			_case_begin_1c62ed435:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1dcd71e09_IsVoid(_57017_pf.get()._field_Decl.ptr()) != _1dcd71e09_IsVoid(_57417_f.get()._field_Decl.ptr()))) {
			_case_begin_1c62ed49b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c62ed3d0:;
	};
	__jule_func_result=true;
	jule::Ptr<_1dce82437_TypeKind>* _58317_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57417_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62ee986:;
		if (it != expr_end) {
			jule::I64 _58414_i = it - expr->begin();
			jule::Ptr<_1dcd73779_ParamIns> _58421_fp = *it;
			{
				(*(_self_))._field_k=(&(_57017_pf.get()._field_Params[_58414_i].get()._field_Kind));
				__jule_func_result=(_1dce45bae_annotateKind(_self_, &(_58421_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1c62ee986:;
			++it;
			_58414_i++;
			goto _iter_begin_1c62ee986;
		}
		_iter_end_1c62ee986:;
	};
	if ((!(_1dcd71e09_IsVoid(_57017_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57017_pf.get()._field_Result));
		__jule_func_result=(_1dce45bae_annotateKind(_self_, &(_57417_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dce44e77_annotatePtr(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _59842_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dce91952_Ptr> _59917_pptr = _1dce8512c_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_59917_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dce91952_Ptr> _60317_ptr = _1dce8512c_Ptr((*(_59842_k)).ptr());;
	(*(_self_))._field_k=(&(_59917_pptr.get()._field_Elem));
	__jule_func_result = _1dce45bae_annotateKind(_self_, &(_60317_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1dce45285_annotateSptr(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _60843_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dce8d3dd_Sptr> _60917_ssptr = _1dce84db8_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_60917_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dce8d3dd_Sptr> _61317_sptr = _1dce84db8_Sptr((*(_60843_k)).ptr());;
	(*(_self_))._field_k=(&(_60917_ssptr.get()._field_Elem));
	__jule_func_result = _1dce45bae_annotateKind(_self_, &(_61317_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1dce45593_annotateStruct(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _61845_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dcd5e457_StructIns> _61917_s = _1dce860a6_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_61917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _62317_s2 = _1dce860a6_Struct((*(_61845_k)).ptr());;
	if ((_61917_s.get()._field_Generics.len() != _62317_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_61917_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c630761a:;
		if (it != expr_end) {
			jule::I64 _62714_i = it - expr->begin();
			jule::Ptr<_1dce80ba5_InsGeneric> _62721_g = *it;
			{
				jule::Ptr<_1dce80ba5_InsGeneric> _62821_g2 = _62317_s2.get()._field_Generics[_62714_i];;
				if (_1dce82aec_Equal(_62721_g.get()._field_Kind, _62821_g2.get()._field_Kind)) {
					goto _iter_next_1c630761a;
				};
				(*(_self_))._field_k=(&(_62721_g.get()._field_Kind));
				if ((!(_1dce45bae_annotateKind(_self_, &(_62821_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c630761a:;
			++it;
			_62714_i++;
			goto _iter_begin_1c630761a;
		}
		_iter_end_1c630761a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dce458a1_annotateAny(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _64042_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64113_kind = _1dce827de_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6309dd1:;
		if (it != expr_end) {
			jule::I64 _64213_i = it - expr->begin();
			jule::Ptr<_1dcd48d26_GenericDecl> _64216_g = *it;
			{
				if ((_64113_kind != _64216_g.get()._field_Ident)) {
					goto _iter_next_1c6309dd1;
				};
				jule::Ptr<_1dce80ba5_InsGeneric> _64617_t = (*(_self_))._field_f.get()._field_Generics[_64213_i];;
				{
					
					if ((_64617_t == nullptr) || (_64617_t.get()._field_Kind == nullptr)) {
						_case_begin_1c630b8d8:;
						{
							_1dce4376c_pushGeneric(_self_, _64042_k, _64213_i);
						}
					}
					else if ((!(_1dce82aec_Equal(_64617_t.get()._field_Kind, (*(_64042_k)))))) {
						_case_begin_1c630b94e:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1c630ac5b:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64042_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1c6309dd1:;
			++it;
			_64213_i++;
			goto _iter_begin_1c6309dd1;
		}
		_iter_end_1c6309dd1:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dce45bae_annotateKind(_1dce41d42_dynamicTypeAnnotation* _self_, jule::Ptr<_1dce82437_TypeKind>* _66143_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1dce458a1_annotateAny(_self_, _66143_k)) {
			_case_begin_1c630e16b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1dce84b54_Prim((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1c630db2c:;
			{
				__jule_func_result = _1dce43a7a_annotatePrim(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1dce85869_Arr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1c630dba4:;
			{
				__jule_func_result = _1dce43d88_annotateArr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1dce85acd_Slc((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1c630ddd5:;
			{
				__jule_func_result = _1dce44196_annotateSlc(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1dce8657e_Map((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1c630de4b:;
			{
				__jule_func_result = _1dce4485b_annotateMap(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1dce85d42_Fn((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1c630dec3:;
			{
				__jule_func_result = _1dce44b69_annotateFn(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1dce8512c_Ptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1c630e04a:;
			{
				__jule_func_result = _1dce44e77_annotatePtr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1dce84db8_Sptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1c630e1d2:;
			{
				__jule_func_result = _1dce45285_annotateSptr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1dce860a6_Struct((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1c630e248:;
			{
				__jule_func_result = _1dce45593_annotateStruct(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c630d9ea:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c630d489:;
	};
}



inline jule::Bool _1dce45e23_annotate(_1dce41d42_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1dce45bae_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce41d42_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1dce46c8c_pushErrToken(_1dce4673c_fnCallArgChecker* _self_, jule::Ptr<_23ae26b42_Token> _70631_token, jule::Str _70646_fmt, jule::Slice<jule::Any> _70659_args) {
	_1dcdd8338_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70631_token, _70646_fmt, _70659_args);
}



inline void _1dce470ab_pushErr(_1dce4673c_fnCallArgChecker* _self_, jule::Str _71026_fmt, jule::Slice<jule::Any> _71039_args) {
	_1dce46c8c_pushErrToken(_self_, (*(_self_))._field_errorToken, _71026_fmt, _71039_args);
}



inline jule::Slice<jule::Ptr<_1dcd73779_ParamIns>> _1dce47320_getParams(_1dce4673c_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1dcd70743_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1dce475ea_checkCounts(_1dce4673c_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>* _72331_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72417_n = (*(_72331_params)).len();;
	if (((_72417_n > 0LL) && _1dcd70743_IsSelf((*(_72331_params))[0LL].get()._field_Decl.ptr()))) {
		(_72417_n)--;
	};
	jule::I64 _72917_diff = (_72417_n - (*(_self_))._field_args.len());;
	jule::Str _73017_log = jule::Str();;
	{
		
		if ((_72917_diff == 0LL)) {
			_case_begin_1c6318917:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72417_n > 0LL) && (*(_72331_params))[(_72417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1c631961b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72917_diff < 0LL) || (_72917_diff > (*(_72331_params)).len()))) {
			_case_begin_1c6319242:;
			{
				_73017_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1c63191cb:;
			{
				_73017_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1c6319176:;
	};
	jule::Str _74117_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_74117_err).append("\n       wanted (", 16);
	{
		auto expr = _72331_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c631b51e:;
		if (it != expr_end) {
			jule::I64 _74313_i = it - expr->begin();
			jule::Ptr<_1dcd73779_ParamIns> *_74316_p = it;
			{
				_74117_err+=_1dce827de_Str((*(_74316_p)).get()._field_Kind.ptr());
				if ((((*(_72331_params)).len() - _74313_i) > 1LL)) {
					(_74117_err).append(", ", 2);
				};
			}
			_iter_next_1c631b51e:;
			++it;
			_74313_i++;
			goto _iter_begin_1c631b51e;
		}
		_iter_end_1c631b51e:;
	};
	(_74117_err).append(")", 1);
	_1dce470ab_pushErr(_self_, _73017_log, jule::Slice<jule::Any>::make({jule::Any(_74117_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dce47a4b_checkArg(_1dce4673c_fnCallArgChecker* _self_, jule::Ptr<_1dcd73779_ParamIns>* _75432_p, jule::Ptr<_1dce54cbc_Data>* _75451_arg, jule::Ptr<_23ae26b42_Token>* _75468_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1dcd7675a_parameterUsesGenerics(_75432_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=((!((*(_75432_p)).get()._field_Decl.get()._field_Variadic)) && _1dce4e448_isGoodValueToInfer(_75451_arg));
		if (__jule_func_result) {
			_1dce41d42_dynamicTypeAnnotation _75925_dta = _1dce41d42_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75432_p)), ._field_a=(*(_75451_arg)), ._field_errorToken=(*(_75468_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1dce45e23_annotate(&_75925_dta);
		};
		if ((!(__jule_func_result))) {
			_1dce46c8c_pushErrToken(_self_, (*(_75468_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1dcde34db_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Mutable, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, _75468_errorToken)) {
		_1dcde05c6_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, (*(_75468_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dce47e03_push(_1dce4673c_fnCallArgChecker* _self_, jule::Ptr<_1dcd73779_ParamIns>* _78328_p, jule::Ptr<_1dcd4100a_Expr> _78346_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dce82437_TypeKind> _78417_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78513_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78328_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78328_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78328_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1dce54cbc_Data> _79317_d = _1dce73307_evalExpr((*(_self_))._field_e, _78346_arg);;
	(*(_self_))._field_e.get()._field_prefix=_78417_old;
	(*(_self_))._field_e.get()._field_immutable=_78513_oldImmut;
	if ((_79317_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1dce47a4b_checkArg(_self_, _78328_p, &(_79317_d), &(_78346_arg.get()._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_79317_d.get()._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1dce482aa_pushVariadic(_1dce4673c_fnCallArgChecker* _self_, jule::Ptr<_1dcd73779_ParamIns>* _80736_p, jule::I64 _80754_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _80917_variadiced = false;;
	jule::Bool _81013_more = ((_80754_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1dcd65a46_SliceExprModel> _81117_model = jule::new_ptr<_1dcd65a46_SliceExprModel>(_1dcd65a46_SliceExprModel{._field_ElemKind=(*(_80736_p)).get()._field_Kind, });;
	jule::Ptr<_1dce82437_TypeKind> _81517_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _82013_variadic = (*(_80736_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80736_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80736_p)).get()._field_Kind.get()._field_Variadic=_82013_variadic;
	});;
	for (; (_80754_i < (*(_self_))._field_args.len()); (_80754_i)++) {
		{
			jule::Ptr<_1dcd4100a_Expr> _82721_arg = (*(_self_))._field_args[_80754_i];;
			{
				auto &_match_expr{ _82721_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type81) {
					_case_begin_1c6329087:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dce8dd4a_Slc>(_1dce8dd4a_Slc{._field_Elem=(*(_80736_p)).get()._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1c632986d:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80736_p)).get()._field_Kind;
					}
				}
				_match_end_1c6329818:;
			};
			jule::Ptr<_1dce54cbc_Data> _84021_d = _1dce72bdb_eval((*(_self_))._field_e, _82721_arg);;
			if ((_84021_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1c6328592;
			};
			if (_84021_d.get()._field_Kind.get()._field_Variadic) {
				_80917_variadiced=true;
				(*(_80736_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1dce47a4b_checkArg(_self_, _80736_p, &(_84021_d), &(_82721_arg.get()._field_Token)));
				{
					auto &_match_expr{ _84021_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1c632cce4:;
						{
							_81117_model=_84021_d.get()._field_Model.cast_ptr<_1dcd65a46_SliceExprModel>(&__jule_any_type82);
							_81117_model.get()._field_ElemKind=(*(_80736_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1c632c651:;
						{
							_81117_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_84021_d.get()._field_Model); };
						}
					}
					_match_end_1c632c5eb:;
				};
				(_80754_i)++;
				goto _iter_end_1c6328592;
			};
			__jule_func_result=(__jule_func_result && _1dce47a4b_checkArg(_self_, _80736_p, &(_84021_d), &(_82721_arg.get()._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = _81117_model.get()._field_Elems; __jule_push_dest.push(_84021_d.get()._field_Model); };
		}
	_iter_next_1c6328592:;
	}
	_iter_end_1c6328592:;;
	(*(_self_))._field_e.get()._field_prefix=_81517_old;
	if ((_80917_variadiced && _81013_more)) {
		_1dce46c8c_pushErrToken(_self_, (*(_self_))._field_args[_80754_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81117_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81117_model, &__jule_any_type82)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dce485b8_checkArgs(_1dce4673c_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>* _88333_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88413_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _88817_i = 0LL;;
	if ((((*(_88333_params)).len() > 0LL) && _1dcd70743_IsSelf((*(_88333_params))[0LL].get()._field_Decl.ptr()))) {
		(_88817_i)++;
	};
	_julec_label_iter:;
	while ((_88817_i < (*(_88333_params)).len())) {
		{
			jule::Ptr<_1dcd73779_ParamIns> _89521_p = (*(_88333_params))[_88817_i];;
			{
				
				if (_89521_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1c633338d:;
					{
						__jule_func_result=(_1dce482aa_pushVariadic(_self_, &(_89521_p), _88817_i) && __jule_func_result);
						goto _iter_end_1c6330577;
					}
				}
				else if (((*(_self_))._field_args.len() <= _88817_i)) {
					_case_begin_1c6332b62:;
					{
						__jule_func_result=false;
						goto _iter_end_1c6330577;
					}
				}
				else {
					_case_begin_1c6332ee7:;
					{
						__jule_func_result=(_1dce47e03_push(_self_, &(_89521_p), (*(_self_))._field_args[_88817_i]) && __jule_func_result);
					}
				}
				_match_end_1c6332e92:;
			};
			(_88817_i)++;
		}
	_iter_next_1c6330577:;
	}
	_iter_end_1c6330577:;;
	(*(_self_))._field_e.get()._field_arg=_88413_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dce4884e_checkDynamicTypeAnnotation(_1dce4673c_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a23594:;
		if (it != expr_end) {
			jule::Ptr<_1dce80ba5_InsGeneric> _91516_g = *it;
			{
				if ((_91516_g == nullptr)) {
					_1dce470ab_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6a23594:;
			++it;
			goto _iter_begin_1c6a23594;
		}
		_iter_end_1c6a23594:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dce48ac4_check(_1dce4673c_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1dcd73779_ParamIns>> _92517_params = _1dce47320_getParams(_self_);;
	__jule_func_result=_1dce475ea_checkCounts(_self_, &(_92517_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1dce485b8_checkArgs(_self_, &(_92517_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1dce4884e_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce4673c_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1dce4961e_pushErr(_1dce49113_structLitChecker* _self_, jule::Ptr<_23ae26b42_Token> _94626_token, jule::Str _94641_fmt, jule::Slice<jule::Any> _94654_args) {
	_1dce56d46_pushErr((*(_self_))._field_e.ptr(), _94626_token, _94641_fmt, _94654_args);
}



inline void _1dce4993d_pushSuggestion(_1dce49113_structLitChecker* _self_, jule::Str _95133_fmt, jule::Slice<jule::Any> _95146_args) {
	_1dce57165_pushSuggestion((*(_self_))._field_e.ptr(), _95133_fmt, _95146_args);
}



inline void _1dce49d06_pushMatch(_1dce49113_structLitChecker* _self_, jule::Ptr<_1dcd5d962_FieldIns>* _95533_f, jule::Ptr<_1dce54cbc_Data>* _95552_d, jule::Ptr<_23ae26b42_Token>* _95567_errorToken) {
	;
	if (_1dcde34db_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_95533_f)).get()._field_Kind), _95552_d, _95567_errorToken)) {
		_1dcde05c6_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_95533_f)).get()._field_Kind), _95552_d, (*(_95567_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1dcd640c7_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1dcd640c7_StructArgExprModel>(_1dcd640c7_StructArgExprModel{._field_Field=(*(_95533_f)), ._field_Expr=(*(_95552_d)).get()._field_Model})); };
}



inline void _1dce4a125_checkPair(_1dce49113_structLitChecker* _self_, jule::Ptr<_1dcd458a0_FieldExprPair>* _96833_pair, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>* _96860_exprs) {
	jule::Ptr<_1dcd5d962_FieldIns> _97017_f = _1dcd60711_FindField((*(_self_))._field_s.ptr(), (*(_96833_pair)).get()._field_Field.get()._field_Kind);;
	if ((_97017_f == nullptr)) {
		_1dce4961e_pushErr(_self_, (*(_96833_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_96833_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _97017_f.get()._field_Decl.get()._field_Public, _97017_f.get()._field_Decl.get()._field_Token)))) {
		_1dce4961e_pushErr(_self_, (*(_96833_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_96833_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1dce4993d_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _96860_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a2c801:;
		if (it != expr_end) {
			jule::Ptr<_1dcd4100a_Expr> _98221_expr = *it;
			{
				{
					auto &_match_expr{ _98221_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1c6a2d181:;
						{
							jule::Ptr<_1dcd458a0_FieldExprPair> _98525_dpair = _98221_expr.get()._field_Kind.cast_ptr<_1dcd458a0_FieldExprPair>(&__jule_any_type83);;
							{
								
								if (((*(_96833_pair)) == _98525_dpair)) {
									_case_begin_1c6a2e083:;
									{
										goto _iter_end_1c6a2c801;
									}
								}
								else if (((*(_96833_pair)).get()._field_Field.get()._field_Kind == _98525_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1c6a2e10a:;
									{
										_1dce4961e_pushErr(_self_, (*(_96833_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_96833_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1c6a2c801;
									}
								}
								_match_end_1c6a2dec8:;
							};
						}
					}
					_match_end_1c6a2cec7:;
				};
			}
			_iter_next_1c6a2c801:;
			++it;
			goto _iter_begin_1c6a2c801;
		}
		_iter_end_1c6a2c801:;
	};
	jule::Ptr<_1dce82437_TypeKind> _99617_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_99617_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_97017_f.get()._field_Kind;
	jule::Ptr<_1dce54cbc_Data> _100017_d = _1dce73307_evalExpr((*(_self_))._field_e, (*(_96833_pair)).get()._field_Expr);;
	if ((_100017_d == nullptr)) {
		return;;
	};
	_1dce49d06_pushMatch(_self_, &(_97017_f), &(_100017_d), &((*(_96833_pair)).get()._field_Field));
}



inline jule::Bool _1dce4a433_readyExprs(_1dce49113_structLitChecker* _self_, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>* _100734_exprs) {
	jule::Bool _100817_ok = true;;
	{
		auto expr = _100734_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c47202b5:;
		if (it != expr_end) {
			jule::I64 _100914_i = it - expr->begin();
			jule::Ptr<_1dcd4100a_Expr> _100921_expr = *it;
			{
				{
					auto &_match_expr{ _100921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1c4720e31:;
						{
							jule::Ptr<_1dcd46ecd_KeyValPair> _101225_pair = _100921_expr.get()._field_Kind.cast_ptr<_1dcd46ecd_KeyValPair>(&__jule_any_type84);;
							{
								auto &_match_expr{ _101225_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type85) {
									_case_begin_1c472177d:;
									{
										goto _match_end_1c4721c01;
									}
								}
								else {
									_case_begin_1c4721e76:;
									{
										_1dce4961e_pushErr(_self_, _101225_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_100817_ok=false;
										goto _iter_next_1c47202b5;
									}
								}
								_match_end_1c4721c01:;
							};
							(*(_100734_exprs))[_100914_i].get()._field_Kind=jule::Any(jule::new_ptr<_1dcd458a0_FieldExprPair>(_1dcd458a0_FieldExprPair{._field_Field=_101225_pair.get()._field_Key.get()._field_Token, ._field_Expr=_101225_pair.get()._field_Val}), &__jule_any_type83);
						}
					}
					_match_end_1c4720c77:;
				};
			}
			_iter_next_1c47202b5:;
			++it;
			_100914_i++;
			goto _iter_begin_1c47202b5;
		}
		_iter_end_1c47202b5:;
	};
	return _100817_ok;;
}



inline void _1dce4a6a8_check(_1dce49113_structLitChecker* _self_, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>* _103129_exprs) {
	if (((*(_103129_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1dce4a433_readyExprs(_self_, _103129_exprs)))) {
		return;;
	};
	jule::Bool _103817_paired = false;;
	{
		auto expr = _103129_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4723a38:;
		if (it != expr_end) {
			jule::I64 _103914_i = it - expr->begin();
			jule::Ptr<_1dcd4100a_Expr> _103921_expr = *it;
			{
				{
					auto &_match_expr{ _103921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1c47289b6:;
						{
							jule::Ptr<_1dcd458a0_FieldExprPair> _104225_pair = _103921_expr.get()._field_Kind.cast_ptr<_1dcd458a0_FieldExprPair>(&__jule_any_type83);;
							if (((_103914_i > 0LL) && (!(_103817_paired)))) {
								_1dce4961e_pushErr(_self_, _104225_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103817_paired=true;
							_1dce4a125_checkPair(_self_, &(_104225_pair), _103129_exprs);
						}
					}
					else {
						_case_begin_1c4724792:;
						{
							if (_103817_paired) {
								_1dce4961e_pushErr(_self_, _103921_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103914_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1dce4961e_pushErr(_self_, _103921_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1c4723a38;
							};
							jule::Ptr<_1dcd5d962_FieldIns> _105725_field = (*(_self_))._field_s.get()._field_Fields[_103914_i];;
							if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _105725_field.get()._field_Decl.get()._field_Public, _105725_field.get()._field_Decl.get()._field_Token)))) {
								_1dce4961e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1dce4993d_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1dce82437_TypeKind> _106525_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_106525_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_105725_field.get()._field_Kind;
							jule::Ptr<_1dce54cbc_Data> _106925_d = _1dce73307_evalExpr((*(_self_))._field_e, _103921_expr);;
							if ((_106925_d == nullptr)) {
								goto _iter_next_1c4723a38;
							};
							_1dce49d06_pushMatch(_self_, &(_105725_field), &(_106925_d), &(_103921_expr.get()._field_Token));
						}
					}
					_match_end_1c472461b:;
				};
			}
			_iter_next_1c4723a38:;
			++it;
			_103914_i++;
			goto _iter_begin_1c4723a38;
		}
		_iter_end_1c4723a38:;
	};
	if ((!(_103817_paired))) {
		jule::I64 _108017_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I64 _108121_diff = (_108017_n - (*(_103129_exprs)).len());;
		{
			
			if ((_108121_diff <= 0LL)) {
				_case_begin_1c4728a93:;
				{
					return;;
				}
			}
			_match_end_1c472b29e:;
		};
		jule::Str _108721_idents = jule::Str();;
		for (; (_108121_diff > 0LL); (_108121_diff)--) {
			{
				_108721_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_108017_n - _108121_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1c472bb62:;
		}
		_iter_end_1c472bb62:;;
		(_108721_idents).mut_slice(2LL);;
		_1dce4961e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_108721_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dce49113_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dce05cb2_Var> _1dce4b1ae_buildVar(_1dce4abe7_rangeChecker* _self_, jule::Ptr<_1dcd4e48b_VarDecl>* _110628_decl) {
	jule::Ptr<_1dce05cb2_Var> _110717_v = _1dcd7c585_buildVar((*(_110628_decl)));;
	return _110717_v;;
}



inline void _1dce4b38a_setSizeKey(_1dce4abe7_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _23ae293d6_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1dce4b1ae_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c47302d6:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1dce04c6c_IterRelation>(_1dce04c6c_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1c4730281:;
	};
}



inline void _1dce4b753_checkRangeExprValidity(_1dce4abe7_rangeChecker* _self_, jule::Ptr<_1dce54cbc_Data>* _113346_d, jule::Ptr<_1dce05cb2_Var>* _113357_key, jule::Ptr<_1dce82437_TypeKind>* _113373_k) {
	jule::Bool _113417__mut = (*(_113357_key)).get()._field_Mutable;;
	if ((_113417__mut && (!(_1dce83bca_Mutable((*(_113373_k)).ptr()))))) {
		_113417__mut=false;
	};
	_1dcde34db_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _113417__mut, (*(_113357_key)).get()._field_Reference, &((*(_113357_key)).get()._field_Kind.get()._field_Kind), _113346_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1dce4b92e_checkSlice(_1dce4abe7_rangeChecker* _self_) {
	_1dce4b38a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _23ae293d6_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1dce8dd4a_Slc> _115217_slc = _1dce85acd_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1dce4b1ae_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=_115217_slc.get()._field_Elem});
	_1dce4b753_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_115217_slc.get()._field_Elem));
}



inline void _1dce4bb0a_checkArray(_1dce4abe7_rangeChecker* _self_) {
	_1dce4b38a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _23ae293d6_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1dce90ee5_Arr> _116517_arr = _1dce85869_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1dce4b1ae_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=_116517_arr.get()._field_Elem});
	_1dce4b753_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_116517_arr.get()._field_Elem));
}



inline void _1dce4bcd6_checkMapKeyA(_1dce4abe7_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _23ae293d6_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1dce90401_Map> _117717_m = _1dce8657e_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1dce4b1ae_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=_117717_m.get()._field_Key});
	jule::Ptr<_1dce54cbc_Data> _118117_d = jule::new_ptr<_1dce54cbc_Data>((*((*(_self_))._field_d)));;
	_118117_d.get()._field_Kind=_117717_m.get()._field_Key;
	_1dce4b753_checkRangeExprValidity(_self_, &(_118117_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_117717_m.get()._field_Key));
}



inline void _1dce4beb2_checkMapKeyB(_1dce4abe7_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _23ae293d6_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1dce90401_Map> _119217_m = _1dce8657e_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1dce4b1ae_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=_119217_m.get()._field_Val});
	jule::Ptr<_1dce54cbc_Data> _119617_d = jule::new_ptr<_1dce54cbc_Data>((*((*(_self_))._field_d)));;
	_119617_d.get()._field_Kind=_119217_m.get()._field_Val;
	_1dce4b753_checkRangeExprValidity(_self_, &(_119617_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_119217_m.get()._field_Val));
}



inline void _1dce4c18d_checkMap(_1dce4abe7_rangeChecker* _self_) {
	_1dce4bcd6_checkMapKeyA(_self_);
	_1dce4beb2_checkMapKeyB(_self_);
}



inline void _1dce4c369_checkStr(_1dce4abe7_rangeChecker* _self_) {
	_1dce4b38a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _23ae293d6_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1dce4b1ae_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias(jule::Str("u8", 2)).get()._field_Kind;
}



inline void _1dce4c545_checkComptime(_1dce4abe7_rangeChecker* _self_) {
	_1dce4b38a_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyA != nullptr) && (*(_self_))._field_rang.get()._field_KeyA.get()._field_Mutable)) {
		_1dcdd8338_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyA.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB != nullptr) && (*(_self_))._field_rang.get()._field_KeyB.get()._field_Mutable)) {
		_1dcdd8338_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyB.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _23ae293d6_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1dce4b1ae_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
}



inline jule::Bool _1dce4c7a9_checkComptimeRange(_1dce4abe7_rangeChecker* _self_) {
	jule::Ptr<_1dcd89b9c_comptimeRange> _123117_range = _1dce87c45_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _123117_range.get()._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1c47470cd:;
			{
				_1dce4c545_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1c4746330:;
			{
				_1dcdd8338_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c47462ca:;
	};
}



inline jule::Bool _1dce4ca1d_check(_1dce4abe7_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1c47480e0:;
		}
		else if ((_1dce85acd_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c4748156:;
			{
				_1dce4b92e_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1dce85869_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c47481bc:;
			{
				_1dce4bb0a_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1dce8657e_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c4748233:;
			{
				_1dce4c18d_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1dce87c45_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c4749487:;
			{
				return _1dce4c7a9_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1c4747980:;
			{
				jule::Ptr<_1dce89b8c_Prim> _126317_prim = _1dce84b54_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_126317_prim != nullptr) && _1dce8cd8d_IsStr(_126317_prim.ptr()))) {
					_1dce4c369_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1c4747ead:;
	};
	_1dcdd8338_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce4abe7_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1dce4d601_prepareTypes(_1dce4d1e4_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1dcd7576a_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1dce4d876_prepareExprs(_1dce4d1e4_retTypeChecker* _self_, jule::Ptr<_1dcd4100a_Expr>* _129136_e) {
	if (((*(_129136_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_129136_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c474e129:;
			{
				(*(_self_))._field_exprs=(*(_129136_e)).get()._field_Kind.cast_ptr<_1dcd41b87_TupleExpr>(&__jule_any_type86).get()._field_Expr;
			}
		}
		else {
			_case_begin_1c474dc50:;
			{
				{ jule::Slice<jule::Ptr<_1dcd4100a_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_129136_e))); };
			}
		}
		_match_end_1c474dbea:;
	};
}



inline void _1dce4da52_checkExprs(_1dce4d1e4_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1dce54cbc_Data>> _130717_datas = jule::Slice<jule::Ptr<_1dce54cbc_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1dce5683a_Eval> _130817_eval = _1dcde00cb_eval((*(_self_))._field_sc.get()._field_s, jule::Trait<_1dcea0763_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c474dd0a:;
		if (it != expr_end) {
			jule::I64 _130914_i = it - expr->begin();
			jule::Ptr<_1dcd4100a_Expr> _130921_expr = *it;
			{
				if ((_130914_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1c474dd0a;
				};
				jule::Ptr<_1dce82437_TypeKind> _131421_t = (*(_self_))._field_types[_130914_i];;
				_130817_eval.get()._field_prefix=_131421_t;
				jule::Ptr<_1dce54cbc_Data> _131721_d = _1dce73307_evalExpr(_130817_eval, _130921_expr);;
				if ((_131721_d == nullptr)) {
					goto _iter_next_1c474dd0a;
				};
				{ jule::Slice<jule::Ptr<_1dce54cbc_Data>> &__jule_push_dest = _130717_datas; __jule_push_dest.push(_131721_d); };
				if (((!(_131721_d.get()._field_Mutable)) && _1dce83bca_Mutable(_131721_d.get()._field_Kind.ptr()))) {
					_1dcdd8338_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1dce4035c_assignTypeChecker _132921_ac = _1dce4035c_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_131421_t, ._field_d=_131721_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1dce414d4_check(&_132921_ac);
			}
			_iter_next_1c474dd0a:;
			++it;
			_130914_i++;
			goto _iter_begin_1c474dd0a;
		}
		_iter_end_1c474dd0a:;
	};
	if ((_130717_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1dcd693b8_TupleExprModel>(_1dcd693b8_TupleExprModel{._field_Datas=_130717_datas}), &__jule_any_type87);
	} else if ((_130717_datas.len() == 1LL)) {
		(*(_self_))._field_model=_130717_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1dce4dd60_check(_1dce4d1e4_retTypeChecker* _self_, jule::Ptr<_1dcd4100a_Expr>* _134829_e) {
	_1dce4d601_prepareTypes(_self_);
	_1dce4d876_prepareExprs(_self_, _134829_e);
	jule::I64 _135213_n = (*(_self_))._field_exprs.len();;
	if (((_135213_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1dcd72b1e_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1dcdd8338_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_135213_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1dcd71e09_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1dcdd8338_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_135213_n > (*(_self_))._field_types.len())) {
		_1dcdd8338_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_135213_n < (*(_self_))._field_types.len())) {
		_1dcdd8338_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1dce4da52_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce4d1e4_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dce50779_SelectPackage(_1dce502b2_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c475b620:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1c475b620:;
			++it;
			goto _iter_begin_1c475b620;
		}
		_iter_end_1c475b620:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dce05cb2_Var> _1dce50b31_FindVar(_1dce502b2_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1dce52737_findVar(_self_, _4126_ident, _4138_binded, false);;
}



inline jule::Ptr<_1dce816de_TypeAlias> _1dce50ed8_FindTypeAlias(_1dce502b2_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1dce52b88_findTypeAlias(_self_, _4732_ident, _4744_binded, false);;
}



inline jule::Ptr<_1dcd5b641_Struct> _1dce51390_FindStruct(_1dce502b2_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c475d985:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _5421_s = *it;
			{
				if (((_5421_s.get()._field_Ident == _5329_ident) && (_5421_s.get()._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1c475d985:;
			++it;
			goto _iter_begin_1c475d985;
		}
		_iter_end_1c475d985:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd71997_Fn> _1dce51747_FindFn(_1dce502b2_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c475ed2c:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _6521_f = *it;
			{
				if (((_6521_f.get()._field_Ident == _6425_ident) && (_6521_f.get()._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1c475ed2c:;
			++it;
			goto _iter_begin_1c475ed2c;
		}
		_iter_end_1c475ed2c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd83bb8_Trait> _1dce51a55_FindTrait(_1dce502b2_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4760503:;
		if (it != expr_end) {
			jule::Ptr<_1dcd83bb8_Trait> _7621_t = *it;
			{
				if ((_7621_t.get()._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1c4760503:;
			++it;
			goto _iter_begin_1c4760503;
		}
		_iter_end_1c4760503:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd8644b_Enum> _1dce51d63_FindEnum(_1dce502b2_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4761cda:;
		if (it != expr_end) {
			jule::Ptr<_1dcd8644b_Enum> _8721_e = *it;
			{
				if ((_8721_e.get()._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1c4761cda:;
			++it;
			goto _iter_begin_1c4761cda;
		}
		_iter_end_1c4761cda:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd87a46_TypeEnum> _1dce52171_FindTypeEnum(_1dce502b2_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4762bba:;
		if (it != expr_end) {
			jule::Ptr<_1dcd87a46_TypeEnum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1c4762bba:;
			++it;
			goto _iter_begin_1c4762bba;
		}
		_iter_end_1c4762bba:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dce05cb2_Var> _1dce52737_findVar(_1dce502b2_SymbolTable* _self_, jule::Str _10826_ident, jule::Bool _10838_binded, jule::Bool _10852_reverse) {
	if (_10852_reverse) {
		jule::I64 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1dce05cb2_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if (((_11225_v.get()._field_Ident == _10826_ident) && (_11225_v.get()._field_Binded == _10838_binded))) {
					return _11225_v;;
				};
			}
		_iter_next_1c4764ae0:;
		}
		_iter_end_1c4764ae0:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c4765d99:;
			if (it != expr_end) {
				jule::Ptr<_1dce05cb2_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_Ident == _10826_ident) && (_11825_v.get()._field_Binded == _10838_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1c4765d99:;
				++it;
				goto _iter_begin_1c4765d99;
			}
			_iter_end_1c4765d99:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1dce816de_TypeAlias> _1dce52b88_findTypeAlias(_1dce502b2_SymbolTable* _self_, jule::Str _12732_ident, jule::Bool _12744_binded, jule::Bool _12758_reverse) {
	if (_12758_reverse) {
		jule::I64 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1dce816de_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if (((_13125_ta.get()._field_Ident == _12732_ident) && (_13125_ta.get()._field_Binded == _12744_binded))) {
					return _13125_ta;;
				};
			}
		_iter_next_1c4767a27:;
		}
		_iter_end_1c4767a27:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c4768cd1:;
			if (it != expr_end) {
				jule::Ptr<_1dce816de_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_Ident == _12732_ident) && (_13725_ta.get()._field_Binded == _12744_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1c4768cd1:;
				++it;
				goto _iter_begin_1c4768cd1;
			}
			_iter_end_1c4768cd1:;
		};
	};
	return nullptr;;
}



inline jule::Any _1dce53040_defByIdent(_1dce502b2_SymbolTable* _self_, jule::Str _14829_ident, jule::Bool _14841_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4769c5a:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_Ident == _14829_ident) && (_14921_v.get()._field_Binded == _14841_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1c4769c5a:;
			++it;
			goto _iter_begin_1c4769c5a;
		}
		_iter_end_1c4769c5a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c476a71c:;
		if (it != expr_end) {
			jule::Ptr<_1dce816de_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_Ident == _14829_ident) && (_15521_ta.get()._field_Binded == _14841_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1c476a71c:;
			++it;
			goto _iter_begin_1c476a71c;
		}
		_iter_end_1c476a71c:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c476b630:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_Ident == _14829_ident) && (_16121_s.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_1c476b630:;
			++it;
			goto _iter_begin_1c476b630;
		}
		_iter_end_1c476b630:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c476c0d1:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_Ident == _14829_ident) && (_16721_f.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_1c476c0d1:;
			++it;
			goto _iter_begin_1c476c0d1;
		}
		_iter_end_1c476c0d1:;
	};
	if (_14841_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c476d17b:;
		if (it != expr_end) {
			jule::Ptr<_1dcd83bb8_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_Ident == _14829_ident)) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1c476d17b:;
			++it;
			goto _iter_begin_1c476d17b;
		}
		_iter_end_1c476d17b:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c476dd5d:;
		if (it != expr_end) {
			jule::Ptr<_1dcd8644b_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_1c476dd5d:;
			++it;
			goto _iter_begin_1c476dd5d;
		}
		_iter_end_1c476dd5d:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c476eb0b:;
		if (it != expr_end) {
			jule::Ptr<_1dcd87a46_TypeEnum> _18921_te = *it;
			{
				if ((_18921_te.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_1c476eb0b:;
			++it;
			goto _iter_begin_1c476eb0b;
		}
		_iter_end_1c476eb0b:;
	};
	return nullptr;;
}



inline jule::Bool _1dce53491_isDuplicatedIdent(_1dce502b2_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str _20149_ident, jule::Bool _20161_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c47707aa:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*(_20216_v)).get()._field_Ident == _20149_ident)) && ((*(_20216_v)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1c47707aa:;
			++it;
			goto _iter_begin_1c47707aa;
		}
		_iter_end_1c47707aa:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4770766:;
		if (it != expr_end) {
			jule::Ptr<_1dce816de_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*(_20816_ta)).get()._field_Ident == _20149_ident)) && ((*(_20816_ta)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1c4770766:;
			++it;
			goto _iter_begin_1c4770766;
		}
		_iter_end_1c4770766:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4771118:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*(_21416_s)).get()._field_Ident == _20149_ident)) && ((*(_21416_s)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1c4771118:;
			++it;
			goto _iter_begin_1c4771118;
		}
		_iter_end_1c4771118:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4773802:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*(_22016_f)).get()._field_Ident == _20149_ident)) && ((*(_22016_f)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1c4773802:;
			++it;
			goto _iter_begin_1c4773802;
		}
		_iter_end_1c4773802:;
	};
	if (_20161_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c47749ce:;
		if (it != expr_end) {
			jule::Ptr<_1dcd83bb8_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*(_23016_t)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1c47749ce:;
			++it;
			goto _iter_begin_1c47749ce;
		}
		_iter_end_1c47749ce:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4773e2e:;
		if (it != expr_end) {
			jule::Ptr<_1dcd8644b_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*(_23616_e)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1c4773e2e:;
			++it;
			goto _iter_begin_1c4773e2e;
		}
		_iter_end_1c4773e2e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4776393:;
		if (it != expr_end) {
			jule::Ptr<_1dcd87a46_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*(_24216_te)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1c4776393:;
			++it;
			goto _iter_begin_1c4776393;
		}
		_iter_end_1c4776393:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce502b2_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dce55163_IsNil(_1dce54cbc_Data* _self_) {
	return _1dce8348d_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1dce553c7_IsVoid(_1dce54cbc_Data* _self_) {
	return _1dce83702_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1dce5563b_IsConst(_1dce54cbc_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1dce55949_GoodOperand(_1dce54cbc_Data* _self_, jule::Ptr<_1dce54cbc_Data>* _10031_other) {
	if ((_1dce85605_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1dce84b54_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1dce8d102_IsAny(_1dce84b54_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_1dce8631a_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1dce8348d_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce54cbc_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce55d45_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1dce56d46_pushErr(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _1dce57165_pushSuggestion(_1dce5683a_Eval* _self_, jule::Str _13633_fmt, jule::Slice<jule::Any> _13646_args) {
	_1dcdd8657_pushSuggestion((*(_self_))._field_s.ptr(), _13633_fmt, _13646_args);
}



inline void _1dce57341_allowBuiltin(_1dce5683a_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1dce5751c_disallowBuiltin(_1dce5683a_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1dce57781_isUnsafe(_1dce5683a_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1dce579e5_isGlobal(_1dce5683a_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c47a6736:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c47a67d0:;
			{
				return false;;
			}
		}
		_match_end_1c47a6d52:;
	};
}



inline jule::Bool _1dce57cc0_applyNumericPrefix(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_1dce5563b_IsConst((*(_16342_d)).ptr())))) || (_1dce84b54_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1dce89b8c_Prim> _17013_prim = _1dce84b54_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_24a232d62_IsFloat(_1dce89ebc_Str(_17013_prim.ptr()))) {
			_case_begin_1c47a9283:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>((*((*(_self_))._field_prefix)));
				_24a236c9a_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_24a236030_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_24a2324b0_IsSigInt(_1dce89ebc_Str(_17013_prim.ptr()))) {
			_case_begin_1c47a930a:;
			{
				if ((!(_1dce3caa7_sigAssignable(_1dce89ebc_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>((*((*(_self_))._field_prefix)));
				_24a2362a5_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_24a235a57_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_24a23279b_IsUnsigInt(_1dce89ebc_Str(_17013_prim.ptr()))) {
			_case_begin_1c47a9382:;
			{
				if ((!(_1dce3ce3c_unsigAssignable(_1dce89ebc_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>((*((*(_self_))._field_prefix)));
				_24a23652a_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_24a235cbb_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1c47a9607:;
	};
	return true;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce58034_litNil(_1dce5683a_Eval* _self_) {
	jule::Ptr<_24a233549_Const> _20217_constant = static__24a234704_NewNil();;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type19), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce58342_litStr(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd4203e_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_23ae27e95_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_1dce3b15a_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_1dce3b479_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_24a233549_Const> _21817_constant = static__24a23425e_NewStr(_21217_s);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type19), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce58650_litBool(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd4203e_LitExpr>* _22823_l) {
	jule::Ptr<_24a233549_Const> _22917_constant = static__24a233eb7_NewBool((*(_22823_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Mutable=true, ._field_Model=jule::Any(_22917_constant, &__jule_any_type19), ._field_Constant=_22917_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5895d_litRune(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd4203e_LitExpr>* _23823_l) {
	jule::Str _24013_lt = (*(_23823_l)).get()._field_Value.slice(1LL, ((*(_23823_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24113_r = _1dce244c8_ToRune(static_cast<jule::Slice<jule::U8>>(_24013_lt));;
	jule::Ptr<_1dce54cbc_Data> _24217_data = jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24113_r)))});;
	jule::Bool _24613_isAscii = _1dce24396_IsAscii(_24113_r);;
	if (_24613_isAscii) {
		_24217_data.get()._field_Kind=_1dd0484ba_primU8;
	} else {
		_24217_data.get()._field_Kind=_1dd047e37_primI32;
	};
	_24217_data.get()._field_Mutable=true;
	_24217_data.get()._field_Model=jule::Any(jule::new_ptr<_1dcd6d4cc_RuneExprModel>(_1dcd6d4cc_RuneExprModel{._field_Code=_24113_r}), &__jule_any_type88);
	_24217_data.get()._field_IsRune=true;
	_24217_data.get()._field_untyped=true;
	return _24217_data;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce58c6b_litFloat(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd4203e_LitExpr>* _26024_l) {
	jule::F64 _26113_f = ({
		auto except = _24a219552_ParseFloat((*(_26024_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_24a233549_Const> _26217_constant = static__24a234506_NewF64(_26113_f);;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_untyped=true, ._field_Kind=_1dd049554_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_26217_constant, &__jule_any_type19), ._field_Constant=_26217_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce59079_litInt(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd4203e_LitExpr>* _27226_l) {
	;
	jule::Str _27517_lit = (*(_27226_l)).get()._field_Value;;
	jule::I64 _27617_base = 0LL;;
	{
		
		if (_23a986ae2_HasPrefix(_27517_lit, jule::Str("0x", 2))) {
			_case_begin_1c47b843a:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=16LLU;
			}
		}
		else if (_23a986ae2_HasPrefix(_27517_lit, jule::Str("0b", 2))) {
			_case_begin_1c47b84a1:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=2LLU;
			}
		}
		else if (_23a986ae2_HasPrefix(_27517_lit, jule::Str("0o", 2))) {
			_case_begin_1c47b814e:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=8LLU;
			}
		}
		else if (((_27517_lit[0LL] == '0') && (_27517_lit.len() > 1LL))) {
			_case_begin_1c47b81b5:;
			{
				(_27517_lit).mut_slice(1LL);;
				_27617_base=8LLU;
			}
		}
		else {
			_case_begin_1c47b80d8:;
			{
				_27617_base=10LLU;
			}
		}
		_match_end_1c47b8083:;
	};
	jule::Ptr<_1dce54cbc_Data> _29617_d = jule::new_ptr<_1dce54cbc_Data>();;
	jule::Bool _29817_ok = true;;
	jule::I64 _29913_sig = ({
		auto except = _24a212ec9_ParseInt(_27517_lit, _27617_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_29817_ok=false;

			0LL;
		});
	});;
	if (_29817_ok) {
		_29617_d.get()._field_Constant=static__24a233978_NewI64(_29913_sig);
		_29617_d.get()._field_Kind=_1dd0474ca_primInt;
	} else {
		jule::U64 _30717_unsig = ({
			auto except = _24a212a67_ParseUint(_27517_lit, _27617_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1dce56d46_pushErr(_self_, (*(_27226_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1dce57165_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_29617_d.get()._field_Constant=static__24a233c20_NewU64(_30717_unsig);
		_29617_d.get()._field_Kind=_1dd047211_primUint;
	};
	_29617_d.get()._field_Model=jule::Any(_29617_d.get()._field_Constant, &__jule_any_type19);
	if ((!(_1dce57cc0_applyNumericPrefix(_self_, &(_29617_d))))) {
		_1dce7ba3b_fitBitsize(&(_29617_d));
	};
	_29617_d.get()._field_Mutable=true;
	_29617_d.get()._field_untyped=true;
	return _29617_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce59387_litNum(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd4203e_LitExpr>* _32826_l) {
	{
		
		if (_23ae28b00_IsFloat((*(_32826_l)).get()._field_Value)) {
			_case_begin_1c47c02bb:;
			{
				return _1dce58c6b_litFloat(_self_, _32826_l);;
			}
		}
		else {
			_case_begin_1c47bead4:;
			{
				return _1dce59079_litInt(_self_, _32826_l);;
			}
		}
		_match_end_1c47bea3a:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce59695_evalLit(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd4203e_LitExpr> _33726_lit) {
	{
		
		if (_1dcd42391_IsNil(_33726_lit.ptr())) {
			_case_begin_1c47c0cc2:;
			{
				return _1dce58034_litNil(_self_);;
			}
		}
		else if (_23ae27bed_IsStr(_33726_lit.get()._field_Value)) {
			_case_begin_1c47c0d38:;
			{
				return _1dce58342_litStr(_self_, &(_33726_lit));;
			}
		}
		else if (_23ae28858_IsBool(_33726_lit.get()._field_Value)) {
			_case_begin_1c47c0d9e:;
			{
				return _1dce58650_litBool(_self_, &(_33726_lit));;
			}
		}
		else if (_23ae2823c_IsRune(_33726_lit.get()._field_Value)) {
			_case_begin_1c47c0e15:;
			{
				return _1dce5895d_litRune(_self_, &(_33726_lit));;
			}
		}
		else if (_23ae28d97_IsNum(_33726_lit.get()._field_Value)) {
			_case_begin_1c47c1058:;
			{
				return _1dce59387_litNum(_self_, &(_33726_lit));;
			}
		}
		else {
			_case_begin_1c47c0794:;
			{
				return nullptr;;
			}
		}
		_match_end_1c47bed8c:;
	};
}



inline jule::Any _1dce599a3_findBuiltins(_1dce5683a_Eval* _self_, jule::Str _35431_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1c47c329c:;
			{
				jule::Any _35721_def = _1dce7b82c_findBuiltinsImport(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1dcdcc6d4_ImportInfo>(1));;
				if ((_35721_def != nullptr)) {
					return _35721_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1c47c370e:;
			{
				jule::Any _36221_def = _1dce7c4ba_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1dcdd59a6_Sema>(3));;
				if ((_36221_def != nullptr)) {
					return _36221_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1c47c3775:;
			{
				jule::Any _36721_def = _1dce7c4ba_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1dcdb5898_scopeChecker>(0).get()._field_s);;
				if ((_36721_def != nullptr)) {
					return _36721_def;;
				};
			}
		}
		_match_end_1c47c2a0a:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1dd0499c7_findBuiltinDef(_35431_ident);;
}



inline jule::Any _1dce59d5a_getDef(_1dce5683a_Eval* _self_, jule::Str _37825_ident, jule::Bool _37837_binded) {
	jule::Ptr<_1dce05cb2_Var> _38317_v = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dce9e0d0_FindVar((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38317_v != nullptr)) {
		return jule::Any(_38317_v, &__jule_any_type8);;
	};
	jule::Ptr<_1dce816de_TypeAlias> _38817_ta = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dce9e487_FindTypeAlias((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38817_ta != nullptr)) {
		return jule::Any(_38817_ta, &__jule_any_type67);;
	};
	if ((!(_37837_binded))) {
		jule::Ptr<_1dcd8644b_Enum> _39421_enm = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dcea0312_FindEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39421_enm != nullptr)) {
			return jule::Any(_39421_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1dcd87a46_TypeEnum> _39921_tenm = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dcea0620_FindTypeEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39921_tenm != nullptr)) {
			return jule::Any(_39921_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1dcd71997_Fn> _40517_f = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dce9ebe6_FindFn((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_40517_f != nullptr)) {
		return jule::Any(_40517_f, &__jule_any_type65);;
	};
	jule::Ptr<_1dcd5b641_Struct> _41017_s = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dce9e83e_FindStruct((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_41017_s != nullptr)) {
		return jule::Any(_41017_s, &__jule_any_type66);;
	};
	return _1dce599a3_findBuiltins(_self_, _37825_ident);;
}



inline void _1c47d8d1d_pushReference(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd74648_FnIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c47da7c0:;
			{
				jule::Ptr<_1dcdb5898_scopeChecker> _42121_sc = _1dcdb8934_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1dcdb5898_scopeChecker>(0));;
				if ((!(_1c47db75a_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1dcd7821d_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1c47da1c6:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1c47db75a_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1dcd7821d_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1c47da171:;
	};
}

inline void _1c47ec480_pushReference(_1dce5683a_Eval* _self_, jule::Ptr<_1dce05cb2_Var>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c47edddd:;
			{
				jule::Ptr<_1dcdb5898_scopeChecker> _42121_sc = _1dcdb8934_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1dcdb5898_scopeChecker>(0));;
				if ((!(_1c47eed78_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1dcd7821d_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1c47ed7e4:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1c47eed78_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1dcd7821d_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1c47ed78e:;
	};
}

inline void _1c6bad7c8_pushReference(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd5e457_StructIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c6bb029c:;
			{
				jule::Ptr<_1dcdb5898_scopeChecker> _42121_sc = _1dcdb8934_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1dcdb5898_scopeChecker>(0));;
				if ((!(_1c6bb1237_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1dcd7821d_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1c6baeba3:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1c6bb1237_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1dcd7821d_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1c6baeb4d:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5a3dd__evalEnum(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd8644b_Enum> _43528_enm) {
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_43528_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5a795_evalEnum(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd8644b_Enum> _44431_enm, jule::Ptr<_23ae26b42_Token> _44443_errorToken) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), _44431_enm.get()._field_Public, _44431_enm.get()._field_Token)))) {
		_1dce56d46_pushErr(_self_, _44443_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_44431_enm.get()._field_Ident, &__jule_any_type5)}));
		_1dce57165_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1dce5a3dd__evalEnum(_self_, _44431_enm);;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5aaa3__evalTypeEnum(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd87a46_TypeEnum> _45332_enm) {
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_45332_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5ae5a_evalTypeEnum(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd87a46_TypeEnum> _46235_enm, jule::Ptr<_23ae26b42_Token> _46251_errorToken) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), _46235_enm.get()._field_Public, _46235_enm.get()._field_Token)))) {
		_1dce56d46_pushErr(_self_, _46251_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_46235_enm.get()._field_Ident, &__jule_any_type5)}));
		_1dce57165_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1dce5aaa3__evalTypeEnum(_self_, _46235_enm);;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5b268__evalStruct(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd5e457_StructIns> _47130_s) {
	jule::Ptr<_1dce54cbc_Data> _47217_d = jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_47130_s, 0)}), ._field_Model=jule::Any(_47130_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_47130_s.get()._field_Decl != nullptr) && _47130_s.get()._field_Decl.get()._field_Binded)) {
		_47217_d.get()._field_Kind.get()._field_BindIdent=_47130_s.get()._field_Decl.get()._field_Ident;
	};
	return _47217_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5b620_evalStruct(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd5e457_StructIns> _48533_s, jule::Ptr<_23ae26b42_Token> _48548_errorToken) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), _48533_s.get()._field_Decl.get()._field_Public, _48533_s.get()._field_Decl.get()._field_Token)))) {
		_1dce56d46_pushErr(_self_, _48548_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_48533_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1dce57165_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1dce5bc4c_checkDeprecated(_self_, &(_48533_s.get()._field_Decl.get()._field_Directives), _48548_errorToken);
	return _1dce5b268__evalStruct(_self_, _48533_s);;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5b92d_evalFnIns(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd74648_FnIns> _49528_f) {
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_49528_f, 1)}), ._field_Model=jule::Any(_49528_f, &__jule_any_type7), });;
}



inline void _1dce5bc4c_checkDeprecated(_1dce5683a_Eval* _self_, jule::Slice<jule::Ptr<_1dcd09369_Directive>>* _50439_directives, jule::Ptr<_23ae26b42_Token> _50470_tok) {
	if (_1dce57781_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1dcd09369_Directive> _50913_d = _1dce7b497_findDirective(_50439_directives, jule::Str("deprecated", 10));;
	if ((_50913_d != nullptr)) {
		if ((_50913_d.get()._field_Args.len() == 0LL)) {
			_1dce56d46_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1dce56d46_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_50913_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1dce57165_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5c104_evalFn(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd71997_Fn> _52029_f, jule::Ptr<_23ae26b42_Token> _52037_errorToken) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), _52029_f.get()._field_Public, _52029_f.get()._field_Token)))) {
		_1dce56d46_pushErr(_self_, _52037_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_52029_f.get()._field_Ident, &__jule_any_type5)}));
		_1dce57165_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1dce5bc4c_checkDeprecated(_self_, &(_52029_f.get()._field_Directives), _52037_errorToken);
	jule::Ptr<_1dcd74648_FnIns> _52917_ins = _1dcd730e7_instance(_52029_f);;
	_1c47d8d1d_pushReference(_self_, &(_52917_ins));
	return _1dce5b92d_evalFnIns(_self_, _52917_ins);;
}



inline void _1dce5c4bc_pushIllegalCycleError(_1dce5683a_Eval* _self_, jule::Ptr<_1dce05cb2_Var>* _53441_v1, jule::Ptr<_1dce05cb2_Var>* _53452_v2, jule::Str* _53467_message) {
	;
	jule::Str _53613_refers_to = _23aa28c94_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_53441_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_53452_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_53467_message))).buffer.insert(0, (((_23a986372_Repeat(jule::Str(" ", 1), 7LL) + _53613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1dce5c874_checkCrossCycle(_1dce5683a_Eval* _self_, jule::Ptr<_1dce05cb2_Var>* _54035_v, jule::Str* _54049_message) {
	{
		auto expr = &((*(_54035_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c47e1584:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> *_54116_d = it;
			{
				if (((*(_54116_d)) == (*(_self_))._field_owner)) {
					_1dce5c4bc_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
				if ((!(_1dce5c874_checkCrossCycle(_self_, _54116_d, _54049_message)))) {
					_1dce5c4bc_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
			}
			_iter_next_1c47e1584:;
			++it;
			goto _iter_begin_1c47e1584;
		}
		_iter_end_1c47e1584:;
	};
	return true;;
}



inline jule::Bool _1dce5cc2b_checkIllegalCycles(_1dce5683a_Eval* _self_, jule::Ptr<_1dce05cb2_Var>* _55942_v, jule::Ptr<_23ae26b42_Token> _55951_decl_token) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*(_self_))._field_owner.get()._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_55942_v)))) {
		_1dce56d46_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _57217_message = jule::Str();;
	if ((!(_1dce5c874_checkCrossCycle(_self_, _55942_v, &(_57217_message))))) {
		jule::Str _57521_errMsg = _57217_message;;
		_57217_message=jule::Str();
		_1dce5c4bc_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _55942_v, &(_57217_message));
		_57521_errMsg+=_57217_message;
		_1dce56d46_pushErr(_self_, _55951_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_57521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = (*(_self_))._field_owner.get()._field_Depends; __jule_push_dest.push((*(_55942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5d0d3_evalVar(_1dce5683a_Eval* _self_, jule::Ptr<_1dce05cb2_Var> _58730_v, jule::Ptr<_23ae26b42_Token> _58739_errorToken) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), _58730_v.get()._field_Public, _58730_v.get()._field_Token)))) {
		_1dce56d46_pushErr(_self_, _58739_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
		_1dce57165_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1dce5bc4c_checkDeprecated(_self_, &(_58730_v.get()._field_Directives), _58739_errorToken);
	_58730_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c47e85be:;
			{
				jule::Bool _60117_ok = _1dce5cc2b_checkIllegalCycles(_self_, &(_58730_v), _58739_errorToken);;
				if ((!(_60117_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1c47e8679:;
			{
				if (((!(_58730_v.get()._field_Reference)) || _1dce57781_isUnsafe(_self_))) {
					goto _match_end_1c47e8569;
				};
				jule::Ptr<_1dcdb5898_scopeChecker> _60921_s = (*(_self_))._field_lookup.cast_ptr<_1dcdb5898_scopeChecker>(0);;
				while (((_60921_s.get()._field_owner == nullptr) && (_60921_s.get()._field_parent != nullptr))) {
					{
						_60921_s=_60921_s.get()._field_parent;
					}
				_iter_next_1c47ea77a:;
				}
				_iter_end_1c47ea77a:;;
				if ((((_60921_s.get()._field_owner != nullptr) && _60921_s.get()._field_owner.get()._field_Anon) && (_58730_v.get()._field_Scope != _60921_s.get()._field_owner.get()._field_Scope))) {
					_1dce56d46_pushErr(_self_, _58739_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1c47e8569:;
	};
	if ((_58730_v.get()._field_Scope == nullptr)) {
		_1c47ec480_pushReference(_self_, &(_58730_v));
	};
	if (((!(_58730_v.get()._field_Binded)) && ((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_58730_v.get()._field_Constant) {
			_1dcded1a5_checkTypeVar((*(_self_))._field_s, &(_58730_v), jule::Trait<_1dcea0763_Lookup>((*(_self_))._field_s, 3));
			if (((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_58730_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1dcded1a5_checkTypeVar((*(_self_))._field_s, &(_58730_v), (*(_self_))._field_lookup);
		if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1dce54cbc_Data> _65217_d = jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_58730_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_58730_v.get()._field_Mutable, ._field_Reference=_58730_v.get()._field_Reference, ._field_Lvalue=(!(_58730_v.get()._field_Constant)), ._field_Model=jule::Any(_58730_v, &__jule_any_type8), });;
	if ((((!(_58730_v.get()._field_Binded)) && _1dce06136_IsInitialized(_58730_v.ptr())) && (_58730_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65217_d.get()._field_IsRune=_58730_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_58730_v.get()._field_Constant && (_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65217_d.get()._field_Constant=jule::new_ptr<_24a233549_Const>((*(_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65217_d.get()._field_Model=jule::Any(_65217_d.get()._field_Constant, &__jule_any_type19);
		if (_1dce0660e_untypedConstant(_58730_v.ptr())) {
			_1dce57cc0_applyNumericPrefix(_self_, &(_65217_d));
			_65217_d.get()._field_untyped=true;
		};
	};
	return _65217_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5d48a_evalTypeAlias(_1dce5683a_Eval* _self_, jule::Ptr<_1dce816de_TypeAlias> _67636_ta, jule::Ptr<_23ae26b42_Token> _67652_errorToken) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), _67636_ta.get()._field_Public, _67636_ta.get()._field_Token)))) {
		_1dce56d46_pushErr(_self_, _67652_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_67636_ta.get()._field_Ident, &__jule_any_type5)}));
		_1dce57165_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_67636_ta.get()._field_Used=true;
	jule::Trait<_1dce81ec5_Kind> _68517_kind = _67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1dce54cbc_Data> _68617_d = nullptr;;
	{
		auto &_match_expr{ _68517_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c480d161:;
			{
				_68617_d=_1dce5b268__evalStruct(_self_, _68517_kind.cast_ptr<_1dcd5e457_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1c480c913:;
			{
				_68617_d=_1dce5a3dd__evalEnum(_self_, _68517_kind.cast_ptr<_1dcd8644b_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1c480bc42:;
			{
				_68617_d=_1dce5aaa3__evalTypeEnum(_self_, _68517_kind.cast_ptr<_1dcd87a46_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1c480bb21:;
			{
				_68617_d=jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_67636_ta.get()._field_Binded) {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Ident;
				} else {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
				};
				_68617_d.get()._field_Model=jule::Any(_68617_d.get()._field_Kind, &__jule_any_type89);
			}
		}
		_match_end_1c480babb:;
	};
	_68617_d.get()._field_Kind.get()._field_Generic=_67636_ta.get()._field_Generic;
	return _68617_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5d842_evalDef(_1dce5683a_Eval* _self_, jule::Any _71230_def, jule::Ptr<_23ae26b42_Token> _71240_ident) {
	{
		auto &_match_expr{ _71230_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c4810a7b:;
			{
				return _1dce5d0d3_evalVar(_self_, _71230_def.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c4810ae2:;
			{
				return _1dce5a795_evalEnum(_self_, _71230_def.cast_ptr<_1dcd8644b_Enum>(&__jule_any_type68), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1c4810b58:;
			{
				return _1dce5ae5a_evalTypeEnum(_self_, _71230_def.cast_ptr<_1dcd87a46_TypeEnum>(&__jule_any_type69), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c4810bd0:;
			{
				return _1dce5b620_evalStruct(_self_, _1dcd5baa3_instance(_71230_def.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66)), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c4810c46:;
			{
				jule::Ptr<_1dcd71997_Fn> _72321_f = _71230_def.cast_ptr<_1dcd71997_Fn>(&__jule_any_type65);;
				if ((!_72321_f.get()._field_Ident.equal("init", 4))) {
					return _1dce5c104_evalFn(_self_, _72321_f, _71240_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c4810cbd:;
			{
				return _1dce5b92d_evalFnIns(_self_, _71230_def.cast_ptr<_1dcd74648_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c4810d45:;
			{
				return _1dce5d48a_evalTypeAlias(_self_, _71230_def.cast_ptr<_1dce816de_TypeAlias>(&__jule_any_type67), _71240_ident);;
			}
		}
		_match_end_1c481098d:;
	};
	_1dce56d46_pushErr(_self_, _71240_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_71240_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5db50_evalIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd42b00_IdentExpr> _73628_ident) {
	jule::Any _73717_def = _1dce59d5a_getDef(_self_, _73628_ident.get()._field_Ident, _73628_ident.get()._field_Binded);;
	return _1dce5d842_evalDef(_self_, _73717_def, _73628_ident.get()._field_Token);;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5de5d_evalUnary(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd43309_UnaryExpr> _74133_u) {
	_1dce7377a_unaryEval _74217_unary = static__1dce73ba9_new(_self_);;
	return _1dce74e85_eval(&_74217_unary, _74133_u);;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5e26b_evalVariadic(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd436b1_VariadicExpr> _74636_v) {
	if ((_74636_v.get()._field_Expr == nullptr)) {
		_1dce56d46_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dce82437_TypeKind> _75217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75217_prefix;
	});;
	jule::Ptr<_1dce54cbc_Data> _75617_d = _1dce73307_evalExpr(_self_, _74636_v.get()._field_Expr);;
	if ((_75617_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1dce848e0_Variadicable(_75617_d.get()._field_Kind.ptr())))) {
		_1dce56d46_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_75617_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dce8dd4a_Slc> _76613_slc = _1dce85acd_Slc(_75617_d.get()._field_Kind.ptr());;
	_75617_d.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_BindIdent=_76613_slc.get()._field_Elem.get()._field_BindIdent, ._field_Generic=_76613_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_76613_slc.get()._field_Elem.get()._field_Kind});
	return _75617_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5e579_evalUnsafe(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd4267c_UnsafeExpr> _77634_u) {
	jule::Bool _77713_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1dce54cbc_Data> _77917_d = _1dce73307_evalExpr(_self_, _77634_u.get()._field_Expr);;
	_self_.get()._field_unsafety=_77713_unsafety;
	return _77917_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5e887_evalArr(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd4764e_SliceExpr> _78431_s) {
	jule::Ptr<_1dce90ee5_Arr> _78617_pt = _1dce85869_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1dce90ee5_Arr> _78817_arr = jule::new_ptr<_1dce90ee5_Arr>(_1dce90ee5_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_78617_pt.get()._field_Elem});;
	jule::Bool _79417_filled = false;;
	if ((_78431_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78431_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1c481e4b3:;
				{
					if ((_78431_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1dcd436b1_VariadicExpr>(&__jule_any_type81).get()._field_Expr != nullptr)) {
						goto _match_end_1c481e45d;
					};
					if (_78617_pt.get()._field_Auto) {
						_1dce56d46_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_79417_filled=true;
					_78431_s.get()._field_Exprs=_78431_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1c481e45d:;
		};
	};
	_78817_arr.get()._field_N=static_cast<jule::I64>(_78431_s.get()._field_Exprs.len());
	if ((!(_78617_pt.get()._field_Auto))) {
		if ((_78817_arr.get()._field_N > _78617_pt.get()._field_N)) {
			_1dce56d46_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_78817_arr.get()._field_N < _78617_pt.get()._field_N)) {
			_78817_arr.get()._field_N=_78617_pt.get()._field_N;
		};
	};
	jule::Ptr<_1dcd6876e_ArrayExprModel> _82317_model = jule::new_ptr<_1dcd6876e_ArrayExprModel>(_1dcd6876e_ArrayExprModel{._field_Kind=_78817_arr, });;
	if (_79417_filled) {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _78431_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1dce82437_TypeKind> _83217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78817_arr.get()._field_Elem;
	{
		auto expr = &(_78431_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c48242ed:;
		if (it != expr_end) {
			jule::Ptr<_1dcd4100a_Expr> _83421_elem = *it;
			{
				jule::Ptr<_1dce54cbc_Data> _83521_d = _1dce73307_evalExpr(_self_, _83421_elem);;
				if ((_83521_d == nullptr)) {
					goto _iter_next_1c48242ed;
				};
				_1dcde05c6_checkAssignType(_self_.get()._field_s, false, &(_78817_arr.get()._field_Elem), &(_83521_d), _78431_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _82317_model.get()._field_Elems; __jule_push_dest.push(_83521_d.get()._field_Model); };
			}
			_iter_next_1c48242ed:;
			++it;
			goto _iter_begin_1c48242ed;
		}
		_iter_end_1c48242ed:;
	};
	_self_.get()._field_prefix=_83217_prefix;
	if (_79417_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _82317_model.get()._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_78817_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_82317_model, &__jule_any_type90), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce5ecd8_evalExpSlc(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd4764e_SliceExpr> _85834_s, jule::Ptr<_1dce82437_TypeKind> _85853_t, jule::Any _85871_first) {
	jule::Ptr<_1dce8dd4a_Slc> _85917_slc = jule::new_ptr<_1dce8dd4a_Slc>(_1dce8dd4a_Slc{._field_Elem=_85853_t});;
	jule::I64 _86317_i = 0LL;;
	jule::Ptr<_1dcd65a46_SliceExprModel> _86417_model = jule::new_ptr<_1dcd65a46_SliceExprModel>(_1dcd65a46_SliceExprModel{._field_ElemKind=_85853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _85834_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_85871_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _86417_model.get()._field_Elems; __jule_push_dest.push(_85871_first); };
		_86317_i=1LL;
	};
	jule::Ptr<_1dce82437_TypeKind> _87317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85917_slc.get()._field_Elem;
	{
		auto expr = _85834_s.get()._field_Exprs.slice(_86317_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c48294e0:;
		if (it != expr_end) {
			jule::Ptr<_1dcd4100a_Expr> _87521_elem = *it;
			{
				jule::Ptr<_1dce54cbc_Data> _87621_d = _1dce73307_evalExpr(_self_, _87521_elem);;
				if ((_87621_d == nullptr)) {
					goto _iter_next_1c48294e0;
				};
				_1dcde05c6_checkAssignType(_self_.get()._field_s, false, &(_85917_slc.get()._field_Elem), &(_87621_d), _85834_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _86417_model.get()._field_Elems; __jule_push_dest.push(_87621_d.get()._field_Model); };
			}
			_iter_next_1c48294e0:;
			++it;
			goto _iter_begin_1c48294e0;
		}
		_iter_end_1c48294e0:;
	};
	_self_.get()._field_prefix=_87317_prefix;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_85917_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_86417_model, &__jule_any_type82), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce600e6_evalSliceExpr(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd4764e_SliceExpr> _89437_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1dce85869_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c482c1c4:;
				{
					return _1dce5e887_evalArr(_self_, _89437_s);;
				}
			}
			else if ((_1dce85acd_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c482c24b:;
				{
					jule::Ptr<_1dce8dd4a_Slc> _90025_pt = _1dce85acd_Slc(_self_.get()._field_prefix.ptr());;
					return _1dce5ecd8_evalExpSlc(_self_, _89437_s, _90025_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1c482c0b4:;
		};
	};
	jule::Ptr<_1dce82437_TypeKind> _90517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89437_s.get()._field_Exprs.len() == 0LL)) {
		_1dce56d46_pushErr(_self_.ptr(), _89437_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dce54cbc_Data> _91317_firstElem = _1dce73307_evalExpr(_self_, _89437_s.get()._field_Exprs[0LL]);;
	if ((_91317_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1dce54cbc_Data> _91817_d = _1dce5ecd8_evalExpSlc(_self_, _89437_s, _91317_firstElem.get()._field_Kind, _91317_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_90517_prefix;
	return _91817_d;;
}



inline void _1dce60437_checkIntegerIndexingByData(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _92450_d, jule::Ptr<_23ae26b42_Token> _92460_token) {
	jule::Str _92513_err_key = _1dce7d93e_checkDataForIntegerIndexing(_92450_d);;
	{
		auto &_match_expr{ _92513_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c4831c34:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1c4832839:;
			{
				_1dce56d46_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_92450_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1c48320a8:;
			{
				_1dce56d46_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1c4831ecb:;
	};
}



inline void _1dce60811_indexingPtr(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _93635_d, jule::Ptr<_1dce54cbc_Data>* _93650_index, jule::Ptr<_1dcd47eac_IndexingExpr>* _93665_i) {
	_1dce60437_checkIntegerIndexingByData(_self_, _93650_index, (*(_93665_i)).get()._field_Token);
	jule::Ptr<_1dce91952_Ptr> _93917_ptr = _1dce8512c_Ptr((*(_93635_d)).get()._field_Kind.ptr());;
	{
		
		if (_1dce92425_IsUnsafe(_93917_ptr.ptr())) {
			_case_begin_1c483461b:;
			{
				_1dce56d46_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1dce57781_isUnsafe(_self_)))) {
			_case_begin_1c4834682:;
			{
				_1dce56d46_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c483450b:;
	};
	(*(_93635_d)).get()._field_Kind=_93917_ptr.get()._field_Elem;
}



inline void _1dce60bc9_indexingArr(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _95135_d, jule::Ptr<_1dce54cbc_Data>* _95150_index, jule::Ptr<_1dcd47eac_IndexingExpr>* _95165_i) {
	jule::Ptr<_1dce90ee5_Arr> _95217_arr = _1dce85869_Arr((*(_95135_d)).get()._field_Kind.ptr());;
	(*(_95135_d)).get()._field_Kind=_95217_arr.get()._field_Elem;
	_1dce60437_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	if ((_1dce5563b_IsConst((*(_95150_index)).ptr()) && (_24a236030_AsF64((*(_95150_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95217_arr.get()._field_N)))) {
		_1dce56d46_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1dce61092_indexingSlc(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _96035_d, jule::Ptr<_1dce54cbc_Data>* _96050_index, jule::Ptr<_1dcd47eac_IndexingExpr>* _96065_i) {
	jule::Ptr<_1dce8dd4a_Slc> _96117_slc = _1dce85acd_Slc((*(_96035_d)).get()._field_Kind.ptr());;
	(*(_96035_d)).get()._field_Kind=_96117_slc.get()._field_Elem;
	_1dce60437_checkIntegerIndexingByData(_self_, _96050_index, (*(_96065_i)).get()._field_Token);
	if ((!(_1dce5563b_IsConst((*(_96050_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_96035_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1c4839940:;
			{
				jule::Ptr<_1dcd65a46_SliceExprModel> _97121_m = (*(_96035_d)).get()._field_Model.cast_ptr<_1dcd65a46_SliceExprModel>(&__jule_any_type82);;
				jule::F64 _97217_indx = _24a236030_AsF64((*(_96050_index)).get()._field_Constant.ptr());;
				if ((_97217_indx >= static_cast<jule::F64>(_97121_m.get()._field_Elems.len()))) {
					_1dce56d46_pushErr(_self_, (*(_96065_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_96035_d)).get()._field_Model=_97121_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97217_indx))];
					(*(_96035_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1c48398a7:;
	};
}



inline void _1dce6145a_indexingMap(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _98235_d, jule::Ptr<_1dce54cbc_Data>* _98250_index, jule::Ptr<_1dcd47eac_IndexingExpr>* _98269_i) {
	if (((*(_98250_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1dce90401_Map> _98617_m = _1dce8657e_Map((*(_98235_d)).get()._field_Kind.ptr());;
	_1dce4035c_assignTypeChecker _98717_atc = _1dce4035c_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_98617_m.get()._field_Key, ._field_d=(*(_98250_index)), ._field_errorToken=(*(_98269_i)).get()._field_Token};;
	_1dce414d4_check(&_98717_atc);
	(*(_98235_d)).get()._field_Kind=_98617_m.get()._field_Val;
}



inline void _1dce61823_indexingStr(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _99735_d, jule::Ptr<_1dce54cbc_Data>* _99750_index, jule::Ptr<_1dcd47eac_IndexingExpr>* _99765_i) {
	(*(_99735_d)).get()._field_Kind=_1dd0484ba_primU8;
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	_1dce60437_checkIntegerIndexingByData(_self_, _99750_index, (*(_99765_i)).get()._field_Token);
	if ((!(_1dce5563b_IsConst((*(_99750_index)).ptr())))) {
		(*(_99735_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1dce5563b_IsConst((*(_99735_d)).ptr())) {
		jule::Ptr<_23ae26b42_Token> _101217_errorToken = (*(_99765_i)).get()._field_Token;;
		jule::I64 _101317_j = _24a235a57_AsI64((*(_99750_index)).get()._field_Constant.ptr());;
		jule::Str _101417_s = _24a23557e_ReadStr((*(_99735_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101317_j) >= _101417_s.len())) {
			_1dce56d46_pushErr(_self_, _101217_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_24a23652a_SetU64((*(_99735_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101417_s[_101317_j])));
		};
	};
}



inline void _1dce61bdb_toIndexing(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _102334_d, jule::Ptr<_1dce54cbc_Data>* _102349_index, jule::Ptr<_1dcd47eac_IndexingExpr>* _102368_i) {
	{
		
		if ((_1dce8512c_Ptr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c48432d9:;
			{
				_1dce60811_indexingPtr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1dce85869_Arr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c4843361:;
			{
				_1dce60bc9_indexingArr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1dce85acd_Slc((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c48433d8:;
			{
				_1dce61092_indexingSlc(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1dce8657e_Map((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c4843460:;
			{
				_1dce6145a_indexingMap(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1dce84b54_Prim((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c48434d7:;
			{
				jule::Ptr<_1dce89b8c_Prim> _103817_prim = _1dce84b54_Prim((*(_102334_d)).get()._field_Kind.ptr());;
				{
					
					if (_1dce8cd8d_IsStr(_103817_prim.ptr())) {
						_case_begin_1c4846cb0:;
						{
							_1dce61823_indexingStr(_self_, _102334_d, _102349_index, _102368_i);
							return;;
						}
					}
					_match_end_1c4846c16:;
				};
			}
		}
		_match_end_1c4843196:;
	};
	_1dce56d46_pushErr(_self_, (*(_102368_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_102334_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1dce6215e_pushGenericsFromExprSubIdent(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd44393_SubIdentExpr>* _104853_sexpr, jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>* _104914_generics, jule::Ptr<_1dcd4100a_Expr>* _104942_expr) {
	jule::Ptr<_1dcd3c732_SubIdentTypeDecl> _105017_t = jule::new_ptr<_1dcd3c732_SubIdentTypeDecl>();;
	if ((!(_1dce7e70e_pushSubIdentFromExpr(jule::Any((*(_104853_sexpr)), &__jule_any_type91), &(_105017_t))))) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_104942_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> &__jule_push_dest = (*(_104914_generics)); __jule_push_dest.push(jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Kind=jule::Any(_105017_t, &__jule_any_type92)})); };
	return true;;
}



inline jule::Bool _1dce62527_pushGenericsFromData(jule::Ptr<_1dce5683a_Eval> _self_, jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>* _105945_generics, jule::Ptr<_1dcd4100a_Expr>* _105973_expr) {
	{
		auto &_match_expr{ (*(_105973_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c484a5dd:;
			{
				jule::Ptr<_1dcd43309_UnaryExpr> _106221_u = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1dcd43309_UnaryExpr>(&__jule_any_type93);;
				{
					auto &_match_expr{ _106221_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1c484b06c:;
						{
							jule::Ptr<_1dcd3d865_PtrTypeDecl> _106525_kind = jule::new_ptr<_1dcd3d865_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _106625__generics = jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>::alloc(0LL, 1LL);;
							_1dce62527_pushGenericsFromData(_self_, &(_106625__generics), &(_106221_u.get()._field_Expr));
							_106525_kind.get()._field_Elem=_106625__generics[0LL];
							{ jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_106525_kind, &__jule_any_type77)})); };
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1c484bcb5:;
						{
							jule::Ptr<_1dcd3cd92_SptrTypeDecl> _107425_kind = jule::new_ptr<_1dcd3cd92_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _107525__generics = jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>::alloc(0LL, 1LL);;
							_1dce62527_pushGenericsFromData(_self_, &(_107525__generics), &(_106221_u.get()._field_Expr));
							_107425_kind.get()._field_Elem=_107525__generics[0LL];
							{ jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_107425_kind, &__jule_any_type78)})); };
						}
					}
					else {
						_case_begin_1c484b765:;
						{
							_1dce56d46_pushErr(_self_.ptr(), _106221_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1c484b4e0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c484a863:;
			{
				{ jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push((*(_105973_expr)).get()._field_Kind.cast_ptr<_1dcd3bd80_TypeDecl>(&__jule_any_type94)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c484a764:;
			{
				jule::Ptr<_1dcd44393_SubIdentExpr> _108921_sexpr = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1dcd44393_SubIdentExpr>(&__jule_any_type91);;
				return _1dce6215e_pushGenericsFromExprSubIdent(_self_, &(_108921_sexpr), _105945_generics, _105973_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c4849dc3:;
			{
				jule::Ptr<_1dcd42b00_IdentExpr> _109221_ident = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1dcd42b00_IdentExpr>(&__jule_any_type85);;
				{ jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1dcd3c446_IdentTypeDecl>(_1dcd3c446_IdentTypeDecl{._field_Token=_109221_ident.get()._field_Token, ._field_Ident=_109221_ident.get()._field_Ident, ._field_Binded=_109221_ident.get()._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c4849e39:;
			{
				{
					auto expr = &((*(_105973_expr)).get()._field_Kind.cast_ptr<_1dcd41b87_TupleExpr>(&__jule_any_type86).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c485222c:;
					if (it != expr_end) {
						jule::Ptr<_1dcd4100a_Expr> _110125_texpr = *it;
						{
							if ((!(_1dce62527_pushGenericsFromData(_self_, _105945_generics, &(_110125_texpr))))) {
								return false;;
							};
						}
						_iter_next_1c485222c:;
						++it;
						goto _iter_begin_1c485222c;
					}
					_iter_end_1c485222c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c4849ea0:;
			{
				jule::Ptr<_1dcd43e20_NsSelectionExpr> _110721_ns = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1dcd43e20_NsSelectionExpr>(&__jule_any_type95);;
				jule::Ptr<_1dcd3c446_IdentTypeDecl> _110821_decl = jule::new_ptr<_1dcd3c446_IdentTypeDecl>(_1dcd3c446_IdentTypeDecl{._field_Token=_110721_ns.get()._field_Ident, ._field_Ident=_110721_ns.get()._field_Ident.get()._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1dcd3caa6_NamespaceTypeDecl>(_1dcd3caa6_NamespaceTypeDecl{._field_Idents=_110721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(_110821_decl, &__jule_any_type20)})}), &__jule_any_type96)})); };
			}
		}
		else {
			_case_begin_1c4849d29:;
			{
				_1dce56d46_pushErr(_self_.ptr(), (*(_105973_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c4849b81:;
	};
	return true;;
}



inline void _1dce62868_evalIdentDeclFromIndexing(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dce54cbc_Data>* _112950_d, jule::Ptr<_1dcd47eac_IndexingExpr>* _112965_i) {
	jule::Ptr<_1dcd5e457_StructIns> _113017_s = _1dce860a6_Struct((*(_112950_d)).get()._field_Kind.ptr());;
	if ((_113017_s == nullptr)) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Expr.get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_112950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_112950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1dcd3c446_IdentTypeDecl> _113717_decl = nullptr;;
	{
		auto &_match_expr{ (*(_112965_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c6b7dac8:;
			{
				jule::Ptr<_1dcd42b00_IdentExpr> _114021_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1dcd42b00_IdentExpr>(&__jule_any_type85);;
				_113717_decl=jule::new_ptr<_1dcd3c446_IdentTypeDecl>(_1dcd3c446_IdentTypeDecl{._field_Token=_114021_expr.get()._field_Token, ._field_Ident=_114021_expr.get()._field_Ident, ._field_Binded=_114021_expr.get()._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c6b7eb1d:;
			{
				jule::Ptr<_1dcd43e20_NsSelectionExpr> _114721_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1dcd43e20_NsSelectionExpr>(&__jule_any_type95);;
				_113717_decl=jule::new_ptr<_1dcd3c446_IdentTypeDecl>(_1dcd3c446_IdentTypeDecl{._field_Token=_114721_expr.get()._field_Ident, ._field_Ident=_114721_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1c6b7dee6:;
			{
				_1dce56d46_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112950_d))=nullptr;
				return;;
			}
		}
		_match_end_1c6b7de91:;
	};
	if ((!(_1dce62527_pushGenericsFromData(_self_, &(_113717_decl.get()._field_Generics), &((*(_112965_i)).get()._field_Index))))) {
		(*(_112950_d))=nullptr;
		return;;
	};
	_113017_s=({ auto _wrap_copy = _1dce68ac2_typeChecker(_self_.ptr()); _1dce972d7_fromStruct(&_wrap_copy, &(_113717_decl), &(_113017_s.get()._field_Decl)); });
	if ((_113017_s == nullptr)) {
		(*(_112950_d))=nullptr;
		return;;
	};
	(*(_112950_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1dce81ec5_Kind>(_113017_s, 0);
}



inline jule::Bool _1dce62cca_checkGenericFn(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd74648_FnIns>* _117239_f, jule::Ptr<_23ae26b42_Token>* _117255_et, jule::Any* _117272_model) {
	jule::Bool _117313_ok = _1dcde2991_reloadFnInsTypes(_self_.get()._field_s, (*(_117239_f)));;
	(*(_117239_f)).get()._field_reloaded=true;
	if ((!(_117313_ok))) {
		return false;;
	};
	jule::Ptr<_1dcd74648_FnIns> _117817_existInstance = _1dcd733c2_appendInstance((*(_117239_f)).get()._field_Decl.ptr(), _117239_f);;
	if ((!(_1dcde1b05_checkConstraintsFn(_self_.get()._field_s, _117239_f, _117255_et, _117817_existInstance)))) {
		return false;;
	};
	if ((_117817_existInstance != nullptr)) {
		(*(_117239_f))=_117817_existInstance;
		_1dce7e4bc_updateModelToGenericIns(_117272_model, &(_117817_existInstance));
	} else {
		_1dce00eaa_checkFnInsCaller(_self_.get()._field_s, _117239_f, (*(_117255_et)));
	};
	return true;;
}



inline void _1dce6311b_evalFnGenericFromIndexing(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dce54cbc_Data>* _119750_d, jule::Ptr<_1dcd47eac_IndexingExpr>* _119765_i) {
	jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _119817_generics = jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1dce62527_pushGenericsFromData(_self_, &(_119817_generics), &((*(_119765_i)).get()._field_Index))))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1dcd74648_FnIns> _120417_f = _1dce85d42_Fn((*(_119750_d)).get()._field_Kind.ptr());;
	jule::I64 _120517_genericsLen = 0LL;;
	if ((_120417_f.get()._field_Decl != nullptr)) {
		_120517_genericsLen=static_cast<jule::I64>(_120417_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1dcdd96d0_checkGenericQuantity(_self_.get()._field_s.ptr(), _120517_genericsLen, static_cast<jule::I64>(_119817_generics.len()), (*(_119765_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	_120417_f.get()._field_Generics=jule::Slice<jule::Ptr<_1dce80ba5_InsGeneric>>::alloc(0LL, _120417_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_119817_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b88c37:;
		if (it != expr_end) {
			jule::Ptr<_1dcd3bd80_TypeDecl> _121621_g = *it;
			{
				jule::Ptr<_1dce54cbc_Data> _121721_k = _1dce68dd0_evalType(_self_.ptr(), _121621_g);;
				if ((_121721_k == nullptr)) {
					(*(_119750_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1dce80ba5_InsGeneric>> &__jule_push_dest = _120417_f.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_1dce80ba5_InsGeneric>(_1dce80ba5_InsGeneric{._field_Kind=_121721_k.get()._field_Kind, })); };
			}
			_iter_next_1c6b88c37:;
			++it;
			goto _iter_begin_1c6b88c37;
		}
		_iter_end_1c6b88c37:;
	};
	if (_1dcd759ce_IsBuiltin(_120417_f.ptr())) {
		return;;
	};
	if (_1dce62cca_checkGenericFn(_self_, &(_120417_f), &((*(_119765_i)).get()._field_Expr.get()._field_Token), &((*(_119750_d)).get()._field_Model))) {
		(*(_119750_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1dce81ec5_Kind>(_120417_f, 1);
	} else {
		(*(_119750_d))=nullptr;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6343a_evalIndexing(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd47eac_IndexingExpr> _123636_i) {
	jule::Ptr<_1dce82437_TypeKind> _123717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_123717_prefix;
	});;
	jule::Ptr<_1dce54cbc_Data> _124117_d = _1dce725c0_evalExprKind(_self_, _123636_i.get()._field_Expr.get()._field_Kind);;
	if ((_124117_d == nullptr)) {
		return nullptr;;
	};
	if (_124117_d.get()._field_Decl) {
		_1dce62868_evalIdentDeclFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	if ((_1dce85d42_Fn(_124117_d.get()._field_Kind.ptr()) != nullptr)) {
		_1dce6311b_evalFnGenericFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	_1dce54cbc_Data _125717_old_d = (*(_124117_d));;
	jule::Ptr<_1dce54cbc_Data> _125917_index = _1dce73307_evalExpr(_self_, _123636_i.get()._field_Index);;
	if ((_125917_index == nullptr)) {
		return nullptr;;
	};
	_124117_d.get()._field_Decl=false;
	_1dce61bdb_toIndexing(_self_.ptr(), &(_124117_d), &(_125917_index), &(_123636_i));
	if (_1dce5563b_IsConst(_124117_d.ptr())) {
		_124117_d.get()._field_Decl=false;
		_124117_d.get()._field_Model=jule::Any(_124117_d.get()._field_Constant, &__jule_any_type19);
	} else if (_124117_d.get()._field_Decl) {
		_124117_d.get()._field_Decl=false;
	} else {
		_124117_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd65eb9_IndexingExprModel>(_1dcd65eb9_IndexingExprModel{._field_Token=_123636_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1dce54cbc_Data>(_125717_old_d), ._field_Index=_125917_index}), &__jule_any_type46);
	};
	return _124117_d;;
}



inline __jule_tuple_x_1dce54cbc_Data__jule_tuple_x_1dce54cbc_Data _1dce63748_evalSlicingExprs(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd485b7_SlicingExpr>* _129041_s) {
	__jule_tuple_x_1dce54cbc_Data__jule_tuple_x_1dce54cbc_Data __jule_func_result;
	jule::Ptr<_1dce82437_TypeKind> _129117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_129117_prefix;
	});;
	jule::Ptr<_1dce54cbc_Data> _129517_l = nullptr;;
	jule::Ptr<_1dce54cbc_Data> _129617_r = nullptr;;
	if (((*(_129041_s)).get()._field_Start != nullptr)) {
		_129517_l=_1dce73307_evalExpr(_self_, (*(_129041_s)).get()._field_Start);
		if ((_129517_l != nullptr)) {
			_1dce60437_checkIntegerIndexingByData(_self_.ptr(), &(_129517_l), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129517_l=jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd0474ca_primInt, ._field_Constant=static__24a233978_NewI64(0LL)});
		_129517_l.get()._field_Constant.get()._field_Kind=jule::Str("int", 3);
		_129517_l.get()._field_Model=jule::Any(_129517_l.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_129041_s)).get()._field_To != nullptr)) {
		_129617_r=_1dce73307_evalExpr(_self_, (*(_129041_s)).get()._field_To);
		if ((_129617_r != nullptr)) {
			_1dce60437_checkIntegerIndexingByData(_self_.ptr(), &(_129617_r), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129517_l;
	__jule_func_result.__jule_result_arg1 = _129617_r;
	return __jule_func_result;;
}



inline void _1dce639bd_slicingArr(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _132630_d) {
	jule::Ptr<_1dce82437_TypeKind> _132717_elemType = _1dce85869_Arr((*(_132630_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_132630_d)).get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dce8dd4a_Slc>(_1dce8dd4a_Slc{._field_Elem=_132717_elemType}), 22)});
	(*(_132630_d)).get()._field_Lvalue=false;
	(*(_132630_d)).get()._field_Mutable=((*(_132630_d)).get()._field_Mutable || (!(_1dce83bca_Mutable(_132717_elemType.ptr()))));
}



inline void _1dce63d86_slicingStr(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _134130_d, jule::Ptr<_1dce54cbc_Data>* _134141_l, jule::Ptr<_1dce54cbc_Data>* _134152_r) {
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=true;
	if ((!(_1dce5563b_IsConst((*(_134130_d)).ptr())))) {
		return;;
	};
	if ((((*(_134141_l)) == nullptr) || ((*(_134152_r)) == nullptr))) {
		(*(_134130_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1dce5563b_IsConst((*(_134141_l)).ptr()) && _1dce5563b_IsConst((*(_134152_r)).ptr()))) {
		jule::I64 _135417_left = _24a235a57_AsI64((*(_134141_l)).get()._field_Constant.ptr());;
		if ((_135417_left < 0LL)) {
			return;;
		};
		jule::Str _135917_s = _24a23557e_ReadStr((*(_134130_d)).get()._field_Constant.ptr());;
		jule::I64 _136021_right = 0LL;;
		if (((*(_134152_r)) == nullptr)) {
			_136021_right=static_cast<jule::I64>(static_cast<jule::I64>(_135917_s.len()));
		} else {
			_136021_right=static_cast<jule::I64>(_24a235a57_AsI64((*(_134152_r)).get()._field_Constant.ptr()));
		};
		if ((_135417_left > _136021_right)) {
			return;;
		};
		_24a236a25_SetStr((*(_134130_d)).get()._field_Constant.ptr(), _135917_s.slice(_135417_left, _136021_right));
		(*(_134130_d)).get()._field_Decl=true;
	} else {
		(*(_134130_d)).get()._field_Constant=nullptr;
	};
}



inline void _1dce642e8_checkSlicing(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _137736_d, jule::Ptr<_1dce54cbc_Data>* _137747_l, jule::Ptr<_1dce54cbc_Data>* _137758_r, jule::Ptr<_1dcd485b7_SlicingExpr>* _137769_s) {
	{
		
		if ((_1dce85869_Arr((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6b9e676:;
			{
				_1dce639bd_slicingArr(_self_, _137736_d);
				return;;
			}
		}
		else if ((_1dce85acd_Slc((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6b9e6ed:;
			{
				return;;
			}
		}
		else if ((_1dce84b54_Prim((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6b9e775:;
			{
				jule::Ptr<_1dce89b8c_Prim> _138517_prim = _1dce84b54_Prim((*(_137736_d)).get()._field_Kind.ptr());;
				{
					
					if (_1dce8cd8d_IsStr(_138517_prim.ptr())) {
						_case_begin_1c6ba1832:;
						{
							_1dce63d86_slicingStr(_self_, _137736_d, _137747_l, _137758_r);
							return;;
						}
					}
					_match_end_1c6ba1788:;
				};
			}
		}
		_match_end_1c6b9e555:;
	};
	_1dce56d46_pushErr(_self_, (*(_137769_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_137736_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1dce54cbc_Data> _1dce64606_evalSlicing(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd485b7_SlicingExpr> _139635_s) {
	jule::Ptr<_1dce54cbc_Data> _139717_d = _1dce73307_evalExpr(_self_, _139635_s.get()._field_Expr);;
	if ((_139717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1dce54cbc_Data> _140218_l;;
	jule::Ptr<_1dce54cbc_Data> _140225_r;;
	({
		__jule_tuple_x_1dce54cbc_Data__jule_tuple_x_1dce54cbc_Data __jule_assign_result = _1dce63748_evalSlicingExprs(_self_, &(_139635_s));
		_140218_l = __jule_assign_result.__jule_result_arg0;
		_140225_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140218_l == nullptr)) {
		return _139717_d;;
	};
	_139717_d.get()._field_Decl=false;
	_1dce642e8_checkSlicing(_self_.ptr(), &(_139717_d), &(_140218_l), &(_140225_r), &(_139635_s));
	if (_1dce5563b_IsConst(_139717_d.ptr())) {
		_139717_d.get()._field_Decl=false;
		_139717_d.get()._field_Model=jule::Any(_139717_d.get()._field_Constant, &__jule_any_type19);
	} else if (_139717_d.get()._field_Decl) {
		_139717_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1dcd671da_SlicingExprModel> _142021_model = jule::new_ptr<_1dcd671da_SlicingExprModel>(_1dcd671da_SlicingExprModel{._field_Token=_139635_s.get()._field_Token, ._field_Expr=_139717_d.get()._field_Model, ._field_Left=_140218_l.get()._field_Model, });;
		if ((_140225_r != nullptr)) {
			_142021_model.get()._field_Right=_140225_r.get()._field_Model;
		};
		_139717_d.get()._field_Model=jule::Any(_142021_model, &__jule_any_type97);
	};
	return _139717_d;;
}



inline void _1dce649be_castPtr(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind> _143330_t, jule::Ptr<_1dce54cbc_Data> _143348_d, jule::Ptr<_23ae26b42_Token> _143358_errorToken) {
	_143348_d.get()._field_Constant=nullptr;
	jule::Ptr<_1dce8d3dd_Sptr> _143513_sptr = _1dce84db8_Sptr(_143348_d.get()._field_Kind.ptr());;
	if ((_143513_sptr != nullptr)) {
		if ((!(_1dce82aec_Equal(_1dce8512c_Ptr(_143330_t.ptr()).get()._field_Elem, _143513_sptr.get()._field_Elem)))) {
			_1dce56d46_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_143330_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1dce57781_isUnsafe(_self_)))) {
		_1dce56d46_pushErr(_self_, _143358_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dce89b8c_Prim> _144813_prim = _1dce84b54_Prim(_143348_d.get()._field_Kind.ptr());;
	if (((_1dce8512c_Ptr(_143348_d.get()._field_Kind.ptr()) == nullptr) && ((_144813_prim == nullptr) || (!(_24a232a43_IsInt(_1dce89ebc_Str(_144813_prim.ptr()))))))) {
		_1dce56d46_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_143330_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1dce64d87_castStruct(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind> _145433_t, jule::Ptr<_1dce54cbc_Data> _145451_d, jule::Ptr<_23ae26b42_Token> _145461_errorToken) {
	_145451_d.get()._field_Constant=nullptr;
	jule::Ptr<_1dcd83bb8_Trait> _145617_tr = _1dce8631a_Trait(_145451_d.get()._field_Kind.ptr());;
	if ((_145617_tr == nullptr)) {
		_1dce56d46_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_145433_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _146217_s = _1dce860a6_Struct(_145433_t.ptr());;
	_1c6bad7c8_pushReference(_self_, &(_146217_s));
	if ((!(_1dcd5cb5e_IsImplements(_146217_s.get()._field_Decl.ptr(), _145617_tr)))) {
		_1dce56d46_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_145433_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1dce65250_castRef(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind> _147030_t, jule::Ptr<_1dce54cbc_Data> _147048_d, jule::Ptr<_23ae26b42_Token> _147058_errorToken) {
	_147048_d.get()._field_Constant=nullptr;
	jule::Ptr<_1dce8d3dd_Sptr> _147217_sptr = _1dce84db8_Sptr(_147030_t.ptr());;
	jule::Ptr<_1dce91952_Ptr> _147417_ptr = _1dce8512c_Ptr(_147048_d.get()._field_Kind.ptr());;
	if (((_147417_ptr != nullptr) && _1dce82aec_Equal(_147217_sptr.get()._field_Elem, _147417_ptr.get()._field_Elem))) {
		if ((!(_1dce57781_isUnsafe(_self_)))) {
			_1dce56d46_pushErr(_self_, _147058_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1dce860a6_Struct(_147217_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1dce64d87_castStruct(_self_, _147217_sptr.get()._field_Elem, _147048_d, _147058_errorToken);
		return;;
	};
	_1dce56d46_pushErr(_self_, _147058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_147048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_147030_t.ptr()), &__jule_any_type5)}));
}



inline void _1dce65618_castSlc(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind> _149230_t, jule::Ptr<_1dce54cbc_Data> _149248_d, jule::Ptr<_23ae26b42_Token> _149258_errorToken) {
	jule::Ptr<_24a233549_Const> _149313_c = _149248_d.get()._field_Constant;;
	_149248_d.get()._field_Constant=nullptr;
	if ((_1dce85391_Enum(_149248_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1dce84b54_Prim(_1dce85391_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1dce8cd8d_IsStr(_1dce84b54_Prim(_1dce85391_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1dce56d46_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_149230_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1dce84b54_Prim(_149248_d.get()._field_Kind.ptr()) == nullptr) || (!(_1dce8cd8d_IsStr(_1dce84b54_Prim(_149248_d.get()._field_Kind.ptr()).ptr()))))) {
		_1dce56d46_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_149230_t=_1dce85acd_Slc(_149230_t.ptr()).get()._field_Elem;
	jule::Ptr<_1dce89b8c_Prim> _150713_prim = _1dce84b54_Prim(_149230_t.ptr());;
	if (((_150713_prim == nullptr) || ((!(_1dce8b463_IsU8(_150713_prim.ptr()))) && (!(_1dce8ae8a_IsI32(_150713_prim.ptr())))))) {
		_1dce56d46_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	if ((_149313_c != nullptr)) {
		{
			
			if (_1dce8b463_IsU8(_150713_prim.ptr())) {
				_case_begin_1c68e5cb3:;
				{
					jule::Slice<jule::U8> _151721_bytes = static_cast<jule::Slice<jule::U8>>(_24a23557e_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_1dcd65a46_SliceExprModel> _151825_model = jule::new_ptr<_1dcd65a46_SliceExprModel>(_1dcd65a46_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151721_bytes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151721_bytes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c68e7347:;
						if (it != expr_end) {
							jule::U8 *_152224_b = it;
							{
								jule::Ptr<_24a233549_Const> _152329_bc = static__24a233c20_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_152224_b)))));;
								_152329_bc.get()._field_Kind=_150713_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _151825_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_152329_bc, &__jule_any_type19)); };
							}
							_iter_next_1c68e7347:;
							++it;
							goto _iter_begin_1c68e7347;
						}
						_iter_end_1c68e7347:;
					};
					_149248_d.get()._field_Model=jule::Any(_151825_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			else if (_1dce8ae8a_IsI32(_150713_prim.ptr())) {
				_case_begin_1c68e5d3a:;
				{
					jule::Slice<jule::I32> _153021_runes = static_cast<jule::Slice<jule::I32>>(_24a23557e_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_1dcd65a46_SliceExprModel> _153125_model = jule::new_ptr<_1dcd65a46_SliceExprModel>(_1dcd65a46_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153021_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153021_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c68e9ca6:;
						if (it != expr_end) {
							jule::I32 *_153524_r = it;
							{
								jule::Ptr<_24a233549_Const> _153629_rc = static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_153524_r)))));;
								_153629_rc.get()._field_Kind=_150713_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _153125_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_153629_rc, &__jule_any_type19)); };
							}
							_iter_next_1c68e9ca6:;
							++it;
							goto _iter_begin_1c68e9ca6;
						}
						_iter_end_1c68e9ca6:;
					};
					_149248_d.get()._field_Model=jule::Any(_153125_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			_match_end_1c68e5ba3:;
		};
	};
}



inline void _1dce65937_castStr(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data> _154630_d, jule::Ptr<_23ae26b42_Token> _154640_errorToken) {
	if ((_1dce85391_Enum(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dcd8644b_Enum> _154821_e = _1dce85391_Enum(_154630_d.get()._field_Kind.ptr());;
		if (((_1dce84b54_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1dce8cd8d_IsStr(_1dce84b54_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_24a233549_Const> _155413_c = _154630_d.get()._field_Constant;;
	_154630_d.get()._field_Constant=nullptr;
	if ((_1dce84b54_Prim(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dce89b8c_Prim> _155717_prim = _1dce84b54_Prim(_154630_d.get()._field_Kind.ptr());;
		if (((!(_1dce8b463_IsU8(_155717_prim.ptr()))) && (!(_1dce8ae8a_IsI32(_155717_prim.ptr()))))) {
			_1dce56d46_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1dce827de_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
		if ((_155413_c != nullptr)) {
			{
				
				if (_1dce8b463_IsU8(_155717_prim.ptr())) {
					_case_begin_1c690088e:;
					{
						_154630_d.get()._field_Constant=static__24a23425e_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_24a235cbb_AsU64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				else if (_1dce8ae8a_IsI32(_155717_prim.ptr())) {
					_case_begin_1c6900916:;
					{
						_154630_d.get()._field_Constant=static__24a23425e_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_24a235a57_AsI64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				_match_end_1c690077e:;
			};
		};
		return;;
	};
	jule::Ptr<_1dce8dd4a_Slc> _157817_s = _1dce85acd_Slc(_154630_d.get()._field_Kind.ptr());;
	if ((_157817_s == nullptr)) {
		_1dce56d46_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1dce827de_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1dce82437_TypeKind> _158417_t = _157817_s.get()._field_Elem;;
	jule::Ptr<_1dce89b8c_Prim> _158513_prim = _1dce84b54_Prim(_158417_t.ptr());;
	if (((_158513_prim == nullptr) || ((!(_1dce8b463_IsU8(_158513_prim.ptr()))) && (!(_1dce8ae8a_IsI32(_158513_prim.ptr())))))) {
		_1dce56d46_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1dce827de_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
}



inline void _1dce65d00_castInt(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind> _159230_t, jule::Ptr<_1dce54cbc_Data> _159248_d, jule::Ptr<_23ae26b42_Token> _159258_errorToken) {
	if (_1dce5563b_IsConst(_159248_d.ptr())) {
		jule::Ptr<_1dce89b8c_Prim> _159417_prim = _1dce84b54_Prim(_159230_t.ptr());;
		{
			
			if (_24a2324b0_IsSigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1c690706b:;
				{
					_24a2362a5_SetI64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_24a235a57_AsI64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_24a23279b_IsUnsigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1c69070e3:;
				{
					_24a23652a_SetU64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24a235cbb_AsU64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1c6906eb1:;
		};
	} else {
		_159248_d.get()._field_Constant=nullptr;
	};
	if ((_1dce85391_Enum(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dcd8644b_Enum> _160617_e = _1dce85391_Enum(_159248_d.get()._field_Kind.ptr());;
		if (_24a233109_IsNum(_1dce827de_Str(_160617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1dce84db8_Sptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dce89b8c_Prim> _161317_prim = _1dce84b54_Prim(_159230_t.ptr());;
		if ((!(_1dce8c8b5_IsUintptr(_161317_prim.ptr())))) {
			_1dce56d46_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_159230_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1dce8512c_Ptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dce89b8c_Prim> _162017_prim = _1dce84b54_Prim(_159230_t.ptr());;
		if (_1dce8c8b5_IsUintptr(_162017_prim.ptr())) {
		} else if ((!(_1dce57781_isUnsafe(_self_)))) {
			_1dce56d46_pushErr(_self_, _159258_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1dce89b8c_Prim> _162913_prim = _1dce84b54_Prim(_159248_d.get()._field_Kind.ptr());;
	if (((_162913_prim != nullptr) && _24a233109_IsNum(_1dce89ebc_Str(_162913_prim.ptr())))) {
		return;;
	};
	_1dce56d46_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_159230_t.ptr()), &__jule_any_type5)}));
}



inline void _1dce661b8_castNum(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind> _163730_t, jule::Ptr<_1dce54cbc_Data> _163748_d, jule::Ptr<_23ae26b42_Token> _163758_errorToken) {
	if (_1dce5563b_IsConst(_163748_d.ptr())) {
		jule::Ptr<_1dce89b8c_Prim> _163917_prim = _1dce84b54_Prim(_163730_t.ptr());;
		{
			
			if (_24a232d62_IsFloat(_163917_prim.get()._field_Kind)) {
				_case_begin_1c691066d:;
				{
					_24a236c9a_SetF64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_24a236030_AsF64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_24a2324b0_IsSigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_1c69106e5:;
				{
					_24a2362a5_SetI64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_24a235a57_AsI64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_24a23279b_IsUnsigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_1c691076c:;
				{
					_24a23652a_SetU64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_24a235cbb_AsU64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1c69105a2:;
		};
	} else {
		_163748_d.get()._field_Constant=nullptr;
	};
	if ((_1dce85391_Enum(_163748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dcd8644b_Enum> _165317_e = _1dce85391_Enum(_163748_d.get()._field_Kind.ptr());;
		if (_24a233109_IsNum(_1dce827de_Str(_165317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1dce89b8c_Prim> _165913_prim = _1dce84b54_Prim(_163748_d.get()._field_Kind.ptr());;
	if (((_165913_prim != nullptr) && _24a233109_IsNum(_1dce89ebc_Str(_165913_prim.ptr())))) {
		return;;
	};
	_1dce56d46_pushErr(_self_, _163758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_163748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_163730_t.ptr()), &__jule_any_type5)}));
}



inline void _1dce66581_castPrim(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind> _166731_t, jule::Ptr<_1dce54cbc_Data> _166749_d, jule::Ptr<_23ae26b42_Token> _166759_errorToken) {
	jule::Ptr<_1dce89b8c_Prim> _166813_prim = _1dce84b54_Prim(_166731_t.ptr());;
	{
		
		if (_1dce8d102_IsAny(_166813_prim.ptr())) {
			_case_begin_1c6915d8d:;
			{
				_166749_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1dce8cd8d_IsStr(_166813_prim.ptr())) {
			_case_begin_1c6916355:;
			{
				_1dce65937_castStr(_self_, _166749_d, _166759_errorToken);
			}
		}
		else if (_24a232a43_IsInt(_1dce89ebc_Str(_166813_prim.ptr()))) {
			_case_begin_1c69163bb:;
			{
				_1dce65d00_castInt(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else if (_24a233109_IsNum(_1dce89ebc_Str(_166813_prim.ptr()))) {
			_case_begin_1c6916443:;
			{
				_1dce661b8_castNum(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else {
			_case_begin_1c69162de:;
			{
				_1dce56d46_pushErr(_self_, _166759_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_166731_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1c6916278:;
	};
}



inline void _1dce668a0_castConstant(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind>* _168436_t, jule::Ptr<_1dce54cbc_Data>* _168455_d) {
	if ((((*(_168455_d)) == nullptr) || (!(_1dce5563b_IsConst((*(_168455_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1dce89b8c_Prim> _168813_prim = _1dce84b54_Prim((*(_168436_t)).ptr());;
	_1dce7deb1_castConstByType(&(_168813_prim.get()._field_Kind), _168455_d);
	(*(_168455_d)).get()._field_Model=jule::Any((*(_168455_d)).get()._field_Constant, &__jule_any_type19);
}



inline void _1dce66c68_castTypeEnum(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind>* _169336_t, jule::Ptr<_1dce54cbc_Data>* _169355_d, jule::Ptr<_23ae26b42_Token>* _169370_errorToken) {
	jule::I64 _169413_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1dcde0a27_checkTypeCompatibility((*(_self_))._field_s, &((*(_169355_d)).get()._field_Kind), _169336_t, _169370_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _169413_n);
		_1dce56d46_pushErr(_self_, (*(_169370_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_169355_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str((*(_169336_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_169355_d)).get()._field_Constant=nullptr;
}



inline void _1dce67131_castTypeEnumT(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind>* _170237_t, jule::Ptr<_1dce54cbc_Data>* _170256_d, jule::Ptr<_23ae26b42_Token>* _170271_errorToken) {
	jule::I64 _170313_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1dcde0a27_checkTypeCompatibility((*(_self_))._field_s, _170237_t, &((*(_170256_d)).get()._field_Kind), _170271_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _170313_n);
		_1dce56d46_pushErr(_self_, (*(_170271_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_170256_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str((*(_170237_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_170256_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce67582_evalCastByTypeNData(_1dce5683a_Eval* _self_, jule::Ptr<_1dce82437_TypeKind> _171142_t, jule::Ptr<_1dce54cbc_Data> _171160_d, jule::Ptr<_23ae26b42_Token> _171174_errorToken) {
	if (((_171160_d != nullptr) && _171160_d.get()._field_Decl)) {
		_1dce56d46_pushErr(_self_, _171174_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1dce55163_IsNil(_171160_d.ptr())) {
			_case_begin_1c6921c23:;
			{
				if ((!(_1dce841a3_NilCompatible(_171142_t.ptr())))) {
					_1dce56d46_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1dce827de_Str(_171142_t.ptr()), &__jule_any_type5)}));
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1dce84b54_Prim(_171160_d.get()._field_Kind.ptr()) != nullptr) && _1dce8d102_IsAny(_1dce84b54_Prim(_171160_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c692145e:;
			{
				if ((_1dce85391_Enum(_171142_t.ptr()) != nullptr)) {
					_1dce56d46_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1dce57165_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1dce85605_TypeEnum(_171142_t.ptr()) != nullptr)) {
					_1dce56d46_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1dce85605_TypeEnum(_171160_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6921261:;
			{
				_1dce66c68_castTypeEnum(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1dce85605_TypeEnum(_171142_t.ptr()) != nullptr)) {
			_case_begin_1c69212c7:;
			{
				_1dce67131_castTypeEnumT(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1dce8512c_Ptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1c6921d66:;
			{
				_1dce649be_castPtr(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1dce84db8_Sptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1c6921dcc:;
			{
				_1dce65250_castRef(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1dce85acd_Slc(_171142_t.ptr()) != nullptr)) {
			_case_begin_1c6921e43:;
			{
				_1dce65618_castSlc(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1dce860a6_Struct(_171142_t.ptr()) != nullptr)) {
			_case_begin_1c6921ea9:;
			{
				_1dce64d87_castStruct(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1dce84b54_Prim(_171142_t.ptr()) != nullptr)) {
			_case_begin_1c6922020:;
			{
				_1dce66581_castPrim(_self_, _171142_t, _171160_d, _171174_errorToken);
				_1dce668a0_castConstant(_self_, &(_171142_t), &(_171160_d));
			}
		}
		else {
			_case_begin_1c692087b:;
			{
				_1dce56d46_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_171142_t.ptr()), &__jule_any_type5)}));
				_171160_d=nullptr;
			}
		}
		_match_end_1c69209ad:;
	};
	if ((_171160_d == nullptr)) {
		return nullptr;;
	};
	_171160_d.get()._field_Mutable=(_171160_d.get()._field_Mutable || ((!(_1dce83bca_Mutable(_171160_d.get()._field_Kind.ptr()))) && _1dce83bca_Mutable(_171142_t.ptr())));
	if (((!(_171160_d.get()._field_Decl)) && ((_1dce85391_Enum(_171160_d.get()._field_Kind.ptr()) == nullptr) || (!(_1dce82aec_Equal(_1dce85391_Enum(_171160_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _171142_t)))))) {
		_1dce7d477_applyCastKind(&(_171160_d), &(_171142_t));
		_171160_d.get()._field_Model.cast_ptr<_1dcd64cdc_CastingExprModel>(&__jule_any_type98).get()._field_Token=_171174_errorToken;
	} else {
		_171160_d.get()._field_Kind=_171142_t;
	};
	_171160_d.get()._field_Decl=false;
	_171160_d.get()._field_Lvalue=false;
	_171160_d.get()._field_untyped=false;
	if (_1dce5563b_IsConst(_171160_d.ptr())) {
		_171160_d.get()._field_Constant.get()._field_Kind=_1dce84b54_Prim(_171142_t.ptr()).get()._field_Kind;
	};
	return _171160_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce679d3_evalCastT(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dce82437_TypeKind>* _178234_t, jule::Ptr<_1dcd4100a_Expr>* _178253_e, jule::Ptr<_23ae26b42_Token>* _178268_et) {
	jule::Ptr<_1dce82437_TypeKind> _178317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_178317_prefix;
	});;
	if ((_1dce85acd_Slc((*(_178234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_178253_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1c692da87:;
				{
					_self_.get()._field_prefix=(*(_178234_t));
				}
			}
			_match_end_1c692d9dd:;
		};
	};
	jule::Ptr<_1dce54cbc_Data> _179217_d = _1dce73307_evalExpr(_self_, (*(_178253_e)));;
	if (((_179217_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _179217_d;;
	};
	return _1dce67582_evalCastByTypeNData(_self_.ptr(), (*(_178234_t)), _179217_d, (*(_178268_et)));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce67ce1_evalCast(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd43a68_CastExpr> _179932_c) {
	jule::Ptr<_1dce892da_TypeSymbol> _180017_t = _1dcd78c35_buildType(_179932_c.get()._field_Kind);;
	jule::Bool _180113_ok = _1dcddd948_checkType(_self_.get()._field_s, &(_180017_t), _self_.get()._field_lookup);;
	if ((!(_180113_ok))) {
		return nullptr;;
	};
	return _1dce679d3_evalCastT(_self_, &(_180017_t.get()._field_Kind), &(_179932_c.get()._field_Expr), &(_179932_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce680ee_evalNsSelection(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd43e20_NsSelectionExpr> _180834_s) {
	jule::Str _180913_path = _1dce9ca29_buildLinkPathByTokens(&(_180834_s.get()._field_Ns));;
	jule::Ptr<_1dcdcc6d4_ImportInfo> _181017_imp = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dce9dc28_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)>([=](jule::Ptr<_1dcdcc6d4_ImportInfo> _181052_imp) mutable -> jule::Bool {
		if (((_180834_s.get()._field_Ns.len() == 1LL) && (_181052_imp.get()._field_Alias == _180913_path))) {
			return true;;
		};
		return ((_181052_imp.get()._field_LinkPath == _180913_path) && _1dcdd0022_isAccessibleViaSelection(_181052_imp.ptr()));;
	}));;
	if ((_181017_imp == nullptr)) {
		_1dce56d46_pushErr(_self_, _180834_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_180913_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1dcea0763_Lookup> _182217_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1dcea0763_Lookup>(_181017_imp, 1);
	;
	_1dce5751c_disallowBuiltin(_self_);
	jule::Any _182717_def = _1dce59d5a_getDef(_self_, _180834_s.get()._field_Ident.get()._field_Kind, false);;
	_1dce57341_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_182217_lookup;
	jule::Ptr<_1dce54cbc_Data> _183017_d = _1dce5d842_evalDef(_self_, _182717_def, _180834_s.get()._field_Ident);;
	return _183017_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce68550_evalStructLitExplicit(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd5e457_StructIns> _183445_s, jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _183513_exprs, jule::Ptr<_23ae26b42_Token> _183533_errorToken) {
	jule::Bool _183613_ok = _1dcdd96d0_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_183445_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_183445_s.get()._field_Generics.len()), _183533_errorToken);;
	if ((!(_183613_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _183445_s.get()._field_Decl))) {
		_1dce56d46_pushErr(_self_.ptr(), _183533_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_183445_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1c6bad7c8_pushReference(_self_.ptr(), &(_183445_s));
	_1dce5bc4c_checkDeprecated(_self_.ptr(), &(_183445_s.get()._field_Decl.get()._field_Directives), _183533_errorToken);
	_1dce49113_structLitChecker _184917_slc = _1dce49113_structLitChecker{._field_e=_self_, ._field_errorToken=_183533_errorToken, ._field_s=_183445_s, };;
	_1dce4a6a8_check(&_184917_slc, &(_183513_exprs));
	jule::Ptr<_1dce54cbc_Data> _185617_d = jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_183445_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1dcd6447e_StructLitExprModel>(_1dcd6447e_StructLitExprModel{._field_Strct=_183445_s, ._field_Args=_184917_slc._field_args}), &__jule_any_type100), });;
	if (_183445_s.get()._field_Decl.get()._field_Binded) {
		_185617_d.get()._field_Kind.get()._field_BindIdent=_183445_s.get()._field_Decl.get()._field_Ident;
	};
	return _185617_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6885d_evalStructLit(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd46175_StructLit> _187237_lit) {
	jule::Ptr<_1dce892da_TypeSymbol> _187317_t = _1dcd78c35_buildType(_187237_lit.get()._field_Kind);;
	jule::Bool _187413_ok = _1dcddd948_checkType(_self_.get()._field_s, &(_187317_t), _self_.get()._field_lookup);;
	if ((!(_187413_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _187917_s = _1dce860a6_Struct(_187317_t.get()._field_Kind.ptr());;
	if ((_187917_s == nullptr)) {
		if ((_1dce84db8_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
			_187917_s=_1dce860a6_Struct(_1dce84db8_Sptr(_187317_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_187917_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1dce56d46_pushErr(_self_.ptr(), _187237_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1dce54cbc_Data> _189217_d = _1dce68550_evalStructLitExplicit(_self_, _187917_s, _187237_lit.get()._field_Exprs, _187237_lit.get()._field_Kind.get()._field_Token);;
	if ((_1dce84db8_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dcd6447e_StructLitExprModel> _189421_model = _189217_d.get()._field_Model.cast_ptr<_1dcd6447e_StructLitExprModel>(&__jule_any_type100);;
		_1dce7bd38_makeStructLitAlloc(&(_189217_d), &(_189421_model));
	};
	return _189217_d;;
}



inline _1dce93778_typeChecker _1dce68ac2_typeChecker(_1dce5683a_Eval* _self_) {
	return _1dcddc837_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce68dd0_evalType(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd3bd80_TypeDecl> _190431_t) {
	jule::Ptr<_1dce892da_TypeSymbol> _190517_tk = _1dcd78c35_buildType(_190431_t);;
	jule::Bool _190613_ok = _1dcddd948_checkType((*(_self_))._field_s, &(_190517_tk), (*(_self_))._field_lookup);;
	if ((!(_190613_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_190517_tk.get()._field_Kind, ._field_Model=jule::Any(_190517_tk.get()._field_Kind, &__jule_any_type89), ._field_Decl=true, });;
}



inline void _1dce691ee_callTypeFn(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd44e21_FnCallExpr>* _191735_fc, jule::Ptr<_1dce54cbc_Data>* _191757_d) {
	if (((*(_191735_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_191735_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_191757_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_191735_fc)).get()._field_IsCo) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	} else if (((*(_191735_fc)).get()._field_Exception != nullptr)) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	};
	if (((*(_191735_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1dcd4100a_Expr> _193321_arg = (*(_191735_fc)).get()._field_Args[0LL];;
		(*(_191757_d))=_1dce679d3_evalCastT(_self_, &((*(_191757_d)).get()._field_Kind), &(_193321_arg), &(_193321_arg.get()._field_Token));
		return;;
	};
	if (((*(_191757_d)) != nullptr)) {
		(*(_191757_d)).get()._field_Decl=false;
	};
}



inline void _1dce6951d_callBuiltinFn(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd44e21_FnCallExpr>* _194338_fc, jule::Ptr<_1dce54cbc_Data>* _194360_d) {
	if ((!(_1dcd45284_Unhandled((*(_194338_fc)).ptr())))) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_194338_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_194360_d))=_1dce85d42_Fn((*(_194360_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _194338_fc, _194360_d);
	if (((*(_194360_d)) == nullptr)) {
		return;;
	};
	(*(_194360_d)).get()._field_Mutable=true;
}



inline void _1dce6985e_checkFnOfConcurrentCall(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd74648_FnIns>* _195543_f, jule::Ptr<_23ae26b42_Token> _195554_errorToken) {
	if (_1dce57781_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_195543_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c694c6cc:;
		if (it != expr_end) {
			jule::Ptr<_1dcd73779_ParamIns> *_195916_p = it;
			{
				if (_1dcd70743_IsSelf((*(_195916_p)).get()._field_Decl.ptr())) {
					if ((!(_1dcd709a7_IsRef((*(_195916_p)).get()._field_Decl.ptr())))) {
						_1dce56d46_pushErr(_self_, _195554_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1dce57165_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_195916_p)).get()._field_Decl.get()._field_Reference) {
					_1dce56d46_pushErr(_self_, _195554_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1dce57165_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1c694c6cc:;
			++it;
			goto _iter_begin_1c694c6cc;
		}
		_iter_end_1c694c6cc:;
	};
}



inline void _1dce69c5a_processExceptionalHandler(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd74648_FnIns>* _197449_f, jule::Ptr<_1dcd44e21_FnCallExpr>* _197465_fc, jule::Ptr<_1dce54cbc_Data>* _197487_d) {
	jule::Bool _197513_resultNeeded = ((!(_1dcd71e09_IsVoid((*(_197449_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1dcdb5898_scopeChecker> _197617_csc = nullptr;;
	jule::Ptr<_1dcdadc6a_Scope> _197717_ch = nullptr;;
	jule::Ptr<_1dcd6568e_FnCallExprModel> _197917_model = (*(_197487_d)).get()._field_Model.cast_ptr<_1dcd6568e_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_1dcdb5898_scopeChecker> _198317_sc = (*(_self_))._field_lookup.cast_ptr<_1dcdb5898_scopeChecker>(0);;
	_197617_csc=_1dcdc5a51_newChildChecker(_198317_sc);
	if (_197513_resultNeeded) {
		_197617_csc.get()._field_result=(*(_197449_f));
	};
	_197717_ch=_1dcdb9e74_getChild(_198317_sc.ptr());
	(*(_197465_fc)).get()._field_Exception.get()._field_Parent=_198317_sc.get()._field_tree;
	{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = _197617_csc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_1dce7c179_buildErrorVar(&(_197717_ch), _197465_fc)); };
	_1dcdba33c_checkChildSsc(_198317_sc, &((*(_197465_fc)).get()._field_Exception), &(_197717_ch), &(_197617_csc));
	_197917_model.get()._field_Assigned=_197513_resultNeeded;
	_197917_model.get()._field_Except=_197717_ch;
	if ((_197513_resultNeeded && (_197617_csc.get()._field_result != nullptr))) {
		_1dce56d46_pushErr(_self_, (*(_197465_fc)).get()._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1dce6a08a_callFn(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd44e21_FnCallExpr>* _200131_fc, jule::Ptr<_1dce54cbc_Data>* _200153_d) {
	jule::Ptr<_1dcd74648_FnIns> _200217_f = _1dce85d42_Fn((*(_200153_d)).get()._field_Kind.ptr());;
	if (_1dcd759ce_IsBuiltin(_200217_f.ptr())) {
		_1dce6951d_callBuiltinFn(_self_, _200131_fc, _200153_d);
		return;;
	};
	if ((_1dce579e5_isGlobal(_self_.ptr()) && _200217_f.get()._field_Decl.get()._field_Exceptional)) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1dce57165_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((!(_1dcd7216d_IsMethod(_200217_f.get()._field_Decl.ptr()))) && _1dce9bb7c_hasDirective(&(_200217_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((((!((*(_200153_d)).get()._field_Mutable)) && _1dcd7216d_IsMethod(_200217_f.get()._field_Decl.ptr())) && (!(_200217_f.get()._field_Decl.get()._field_Statically))) && _200217_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_1dce57781_isUnsafe(_self_.ptr()))) && _200217_f.get()._field_Decl.get()._field_Unsafety)) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _202617_dynamicAnnotation = (((_200217_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_200217_f.get()._field_Generics.len() == 0LL)) && (_200217_f.get()._field_Params.len() > 0LL));;
	if (_202617_dynamicAnnotation) {
		_200217_f.get()._field_Generics=jule::Slice<jule::Ptr<_1dce80ba5_InsGeneric>>::alloc(_200217_f.get()._field_Decl.get()._field_Generics.len(), _200217_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_200217_f.get()._field_Generics.len() != _200217_f.get()._field_Decl.get()._field_Generics.len())) {
		_1dcdd96d0_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_200217_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_200217_f.get()._field_Generics.len()), (*(_200131_fc)).get()._field_Token);
		(*(_200153_d))=nullptr;
		return;;
	};
	jule::Ptr<_1dcdd59a6_Sema> _203517_old = _self_.get()._field_s;;
	if ((_200217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_200217_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_203517_old != _self_.get()._field_s)) {
			(_203517_old.get()._field_errors).append(_self_.get()._field_s.get()._field_errors);;
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_203517_old;
	});;
	_1dce4673c_fnCallArgChecker _204817_fcac = _1dce4673c_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_200131_fc)).get()._field_Args, ._field_errorToken=(*(_200131_fc)).get()._field_Token, ._field_dynamicAnnotation=_202617_dynamicAnnotation, };;
	if ((!(_202617_dynamicAnnotation))) {
		if ((!(_200217_f.get()._field_reloaded))) {
			jule::Bool _205721_ok = _1dcde2991_reloadFnInsTypes(_self_.get()._field_s, _200217_f);;
			_200217_f.get()._field_reloaded=true;
			if ((!(_205721_ok))) {
				(*(_200153_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1dcd74648_FnIns> _206421_existInstance = _1dcd733c2_appendInstance(_200217_f.get()._field_Decl.ptr(), &(_200217_f));;
		if ((_206421_existInstance != nullptr)) {
			_200217_f=_206421_existInstance;
		};
	} else if ((!(_1dcde1385_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_200217_f), &(_204817_fcac._field_ignored))))) {
		(*(_200153_d))=nullptr;
		return;;
	};
	_204817_fcac._field_f=_200217_f;
	jule::Bool _207517_ok = false;;
	if ((_200217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1dcdd59a6_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1dcdd59a6_Sema> _1___jule_assign_arg = _203517_old;
			_203517_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_207517_ok=_1dce48ac4_check(&_204817_fcac);
		({
			jule::Ptr<_1dcdd59a6_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1dcdd59a6_Sema> _1___jule_assign_arg = _203517_old;
			_203517_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_207517_ok=_1dce48ac4_check(&_204817_fcac);
	};
	if (_202617_dynamicAnnotation) {
		if ((!(_207517_ok))) {
			(*(_200153_d))=nullptr;
			return;;
		};
		if ((!(_1dce62cca_checkGenericFn(_self_, &(_200217_f), &((*(_200131_fc)).get()._field_Token), &((*(_200153_d)).get()._field_Model))))) {
			(*(_200153_d))=nullptr;
			return;;
		};
	};
	jule::Any _209517_callModel = (*(_200153_d)).get()._field_Model;;
	if (_1dcd71e09_IsVoid(_200217_f.get()._field_Decl.ptr())) {
		(*(_200153_d))=_1dce7d675_buildVoidData();
	} else {
		(*(_200153_d)).get()._field_Kind=_200217_f.get()._field_Result;
		(*(_200153_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1dcd6568e_FnCallExprModel> _210417_model = jule::new_ptr<_1dcd6568e_FnCallExprModel>(_1dcd6568e_FnCallExprModel{._field_Token=(*(_200131_fc)).get()._field_Token, ._field_Func=_200217_f, ._field_IsCo=(*(_200131_fc)).get()._field_IsCo, ._field_Expr=_209517_callModel, ._field_Args=_204817_fcac._field_argModels, });;
	(*(_200153_d)).get()._field_Model=jule::Any(_210417_model, &__jule_any_type35);
	(*(_200153_d)).get()._field_Mutable=true;
	if (_200217_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_200131_fc)).get()._field_IsCo) {
			_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1dcdd8657_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1dcd45284_Unhandled((*(_200131_fc)).ptr())) {
				_case_begin_1c6968b49:;
				{
					_1dce56d46_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1dce57165_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1dcd454e8_Ignored((*(_200131_fc)).ptr())) {
				_case_begin_1c6968594:;
				{
					goto _match_end_1c6967c8b;
				}
			}
			else {
				_case_begin_1c69679e4:;
				{
					_1dce69c5a_processExceptionalHandler(_self_.ptr(), &(_200217_f), _200131_fc, _200153_d);
				}
			}
			_match_end_1c6967c8b:;
		};
	} else if ((!(_1dcd45284_Unhandled((*(_200131_fc)).ptr())))) {
		_1dce56d46_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_200131_fc)).get()._field_IsCo) {
		_1dce6985e_checkFnOfConcurrentCall(_self_.ptr(), &(_210417_model.get()._field_Func), (*(_200131_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6a398_evalFnCall(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd44e21_FnCallExpr> _213934_fc) {
	jule::Ptr<_1dce82437_TypeKind> _214017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_214017_prefix;
	});;
	{
		auto &_match_expr{ _213934_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c696b3ee:;
			{
				if (_213934_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _1dd04b996_builtinCallerError(&(_self_), &(_213934_fc));;
				};
			}
		}
		_match_end_1c696b399:;
	};
	jule::Ptr<_1dce54cbc_Data> _215317_d = _1dce725c0_evalExprKind(_self_, _213934_fc.get()._field_Expr.get()._field_Kind);;
	if ((_215317_d == nullptr)) {
		return nullptr;;
	};
	if (_215317_d.get()._field_Decl) {
		_1dce691ee_callTypeFn(_self_, &(_213934_fc), &(_215317_d));
		return _215317_d;;
	};
	if ((_1dce85d42_Fn(_215317_d.get()._field_Kind.ptr()) == nullptr)) {
		_1dce56d46_pushErr(_self_.ptr(), _213934_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1dce6a08a_callFn(_self_, &(_213934_fc), &(_215317_d));
	return _215317_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6a750_evalEnumStatic(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd8644b_Enum> _217237_enm, jule::Ptr<_23ae26b42_Token> _217249_ident) {
	jule::Ptr<_1dcd85956_EnumItem> _217317_item = _1dcd86eb8_FindItem(_217237_enm.ptr(), _217249_ident.get()._field_Kind);;
	if ((_217317_item == nullptr)) {
		_1dce56d46_pushErr(_self_, _217249_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_217237_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_217249_ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _1dce7ece7_evalEnumStatic(&(_217237_enm), &(_217317_item));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6ab07_evalTypeEnumStatic(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd87a46_TypeEnum> _218041_enm, jule::Ptr<_23ae26b42_Token> _218057_ident) {
	jule::Ptr<_1dcd874b3_TypeEnumItem> _218117_item = _1dcd88580_FindItem(_218041_enm.ptr(), _218057_ident.get()._field_Kind);;
	if ((_218117_item == nullptr)) {
		_1dce56d46_pushErr(_self_, _218057_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_218041_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_218057_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1dce85391_Enum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6972a21:;
			{
				return _1dce5a3dd__evalEnum(_self_, _1dce85391_Enum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1dce85605_TypeEnum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69731b4:;
			{
				return _1dce5aaa3__evalTypeEnum(_self_, _1dce85605_TypeEnum(_218117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1dce860a6_Struct(_218117_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69725e2:;
			{
				return _1dce5b268__evalStruct(_self_, _1dce860a6_Struct(_218117_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1c6972438:;
			{
				jule::Ptr<_1dce54cbc_Data> _219421_d = jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_218117_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_219421_d.get()._field_Model=jule::Any(_219421_d.get()._field_Kind, &__jule_any_type89);
				return _219421_d;;
			}
		}
		_match_end_1c69713b0:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6aeae_evalStructStatic(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd5e457_StructIns> _220339_s, jule::Ptr<_23ae26b42_Token> _220354_ident) {
	jule::Ptr<_1dce54cbc_Data> _220417_d = jule::new_ptr<_1dce54cbc_Data>();;
	;
	jule::Ptr<_1dcd71997_Fn> _220817_method = _1dcd60403_FindMethod(_220339_s.ptr(), _220354_ident.get()._field_Kind, true);;
	if ((_220817_method != nullptr)) {
		if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), _220817_method.get()._field_Public, _220817_method.get()._field_Token)))) {
			_1dce56d46_pushErr(_self_, _220354_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_220354_ident.get()._field_Kind, &__jule_any_type5)}));
			_1dce57165_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1dcd74648_FnIns> _221521_ins = _1dcd730e7_instance(_220817_method);;
		_221521_ins.get()._field_Owner=_220339_s;
		_1c47d8d1d_pushReference(_self_, &(_221521_ins));
		_220417_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd683a6_StructStaticIdentExprModel>(_1dcd683a6_StructStaticIdentExprModel{._field_Structure=_220339_s, ._field_Expr=_220417_d.get()._field_Model, ._field_Method=_221521_ins}), &__jule_any_type101);
		_220417_d.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_221521_ins, 1)});
		return _220417_d;;
	};
	jule::Ptr<_1dce05cb2_Var> _222917_sttc = _1dcd60a1e_FindStatic(_220339_s.ptr(), _220354_ident.get()._field_Kind);;
	if ((_222917_sttc != nullptr)) {
		return _1dce5d0d3_evalVar(_self_, _222917_sttc, _220354_ident);;
	};
	_1dce56d46_pushErr(_self_, _220354_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_220339_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_220354_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6b410_evalTraitSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data> _223840_d, jule::Ptr<_1dcd83bb8_Trait> _223854_trt, jule::Ptr<_23ae26b42_Token> _223871_ident) {
	jule::Ptr<_1dcd71997_Fn> _223917_f = _1dcd84a65_FindMethod(_223854_trt.ptr(), _223871_ident.get()._field_Kind);;
	if ((_223917_f == nullptr)) {
		_1dce56d46_pushErr(_self_, _223871_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_223854_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_223871_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dcd730e7_instance(_223917_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1dcd67729_TraitSubIdentExprModel>(_1dcd67729_TraitSubIdentExprModel{._field_Token=_223871_ident, ._field_Expr=_223840_d.get()._field_Model, ._field_Method=_223917_f, ._field_Trt=_223854_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6b92c_evalStructSubIdentField(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data>* _225847_d, jule::Ptr<_1dcd5e457_StructIns>* _225862_s, jule::Ptr<_23ae26b42_Token>* _225882_tok, jule::Ptr<_1dcd5d962_FieldIns>* _2258100_f) {
	jule::Ptr<_1dcd68010_StructSubIdentExprModel> _225917_model = jule::new_ptr<_1dcd68010_StructSubIdentExprModel>(_1dcd68010_StructSubIdentExprModel{._field_Token=(*(_225882_tok)), ._field_Expr=jule::new_ptr<_1dce54cbc_Data>((*((*(_225847_d))))), ._field_Field=(*(_2258100_f)), ._field_Owner=(*(_225862_s))});;
	(*(_225847_d)).get()._field_Model=jule::Any(_225917_model, &__jule_any_type71);
	(*(_225847_d)).get()._field_Kind=(*(_2258100_f)).get()._field_Kind;
	(*(_225847_d)).get()._field_Lvalue=true;
	if (((*(_2258100_f)).get()._field_Decl.get()._field_Mutable && (!((*(_225847_d)).get()._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1c6981018:;
				{
					jule::Ptr<_1dcdb5898_scopeChecker> _227321_scope = _1dcdb86c0_getRoot((*(_self_))._field_lookup.cast_ptr<_1dcdb5898_scopeChecker>(0));;
					(*(_225847_d)).get()._field_Mutable=((_227321_scope.get()._field_owner != nullptr) && (_227321_scope.get()._field_owner.get()._field_Owner == (*(_225862_s))));
				}
			}
			_match_end_1c6980eb3:;
		};
	};
	return (*(_225847_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6be38_evalStructSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data> _228141_d, jule::Ptr<_1dcd5e457_StructIns> _228155_s, jule::Ptr<_1dcd44393_SubIdentExpr> _228174_si, jule::Bool _228193_ref) {
	jule::Ptr<_1dcd5d962_FieldIns> _228217_f = _1dcd60711_FindField(_228155_s.ptr(), _228174_si.get()._field_Ident.get()._field_Kind);;
	if ((_228217_f != nullptr)) {
		if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), _228217_f.get()._field_Decl.get()._field_Public, _228217_f.get()._field_Decl.get()._field_Token)))) {
			_1dce56d46_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_228217_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1dce57165_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1dce6b92c_evalStructSubIdentField(_self_, &(_228141_d), &(_228155_s), &(_228174_si.get()._field_Ident), &(_228217_f));;
	};
	;
	jule::Ptr<_1dcd71997_Fn> _229217_m = _1dcd60403_FindMethod(_228155_s.ptr(), _228174_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_229217_m == nullptr)) {
		_1dce56d46_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_228155_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_228174_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), _229217_m.get()._field_Public, _229217_m.get()._field_Token)))) {
		_1dce56d46_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_229217_m.get()._field_Ident, &__jule_any_type5)}));
		_1dce57165_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1dcd709a7_IsRef(_229217_m.get()._field_Params[0LL].ptr()) && (!(_228193_ref)))) {
		_1dce56d46_pushErr(_self_, _228174_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1dce5bc4c_checkDeprecated(_self_, &(_229217_m.get()._field_Directives), _228174_si.get()._field_Ident);
	jule::Ptr<_1dcd74648_FnIns> _230817_ins = _1dcd730e7_instance(_229217_m);;
	_230817_ins.get()._field_Owner=_228155_s;
	_1c47d8d1d_pushReference(_self_, &(_230817_ins));
	jule::Ptr<_1dce54cbc_Data> _231117_model = jule::new_ptr<_1dce54cbc_Data>((*(_228141_d)));;
	_228141_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd68010_StructSubIdentExprModel>(_1dcd68010_StructSubIdentExprModel{._field_Token=_228174_si.get()._field_Ident, ._field_Expr=_231117_model, ._field_Method=_230817_ins, ._field_Owner=_228155_s}), &__jule_any_type71);
	_228141_d.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_230817_ins, 1)});
	return _228141_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6c2e0_evalSliceSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data> _232240_d, jule::Ptr<_23ae26b42_Token> _232254_ident) {
	{
		auto &_match_expr{ _232254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1c698b81a:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_Params=jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>::make({jule::new_ptr<_1dcd73779_ParamIns>(_1dcd73779_ParamIns{._field_Decl=jule::new_ptr<_1dcd7015a_Param>(_1dcd7015a_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1dce4e1a1_lenKind()}),jule::new_ptr<_1dcd73779_ParamIns>(_1dcd73779_ParamIns{._field_Decl=jule::new_ptr<_1dcd7015a_Param>(_1dcd7015a_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1dce4e1a1_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd04b655_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_232240_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1dcd690bb_CommonSubIdentExprModel>(_1dcd690bb_CommonSubIdentExprModel{._field_ExprKind=_232240_d.get()._field_Kind, ._field_Expr=_232240_d.get()._field_Model, ._field_Token=_232254_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1c698bae5:;
			{
				_1dce56d46_pushErr(_self_, _232254_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_232240_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_232254_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c698b8a3:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6c697_evalArraySubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data> _235940_d, jule::Ptr<_23ae26b42_Token> _235954_ident) {
	{
		auto &_match_expr{ _235954_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1c698bce3:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_Params=jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>::make({jule::new_ptr<_1dcd73779_ParamIns>(_1dcd73779_ParamIns{._field_Decl=jule::new_ptr<_1dcd7015a_Param>(_1dcd7015a_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1dce4e1a1_lenKind()}),jule::new_ptr<_1dcd73779_ParamIns>(_1dcd73779_ParamIns{._field_Decl=jule::new_ptr<_1dcd7015a_Param>(_1dcd7015a_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1dce4e1a1_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd04b655_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_235940_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1dcd690bb_CommonSubIdentExprModel>(_1dcd690bb_CommonSubIdentExprModel{._field_ExprKind=_235940_d.get()._field_Kind, ._field_Expr=_235940_d.get()._field_Model, ._field_Token=_235954_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1c698e972:;
			{
				_1dce56d46_pushErr(_self_, _235954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_235940_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_235954_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c698bd7b:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6c9a5_evalIntTypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _239636_ident) {
	;
	{
		auto &_match_expr{ _239636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c69935e1:;
			{
				jule::Ptr<_24a233549_Const> _240021_c = static__24a233978_NewI64(static_cast<jule::I64>(_24a22bd39_MaxI(jule::Str("int", 3))));;
				_240021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd0474ca_primInt, ._field_Model=jule::Any(_240021_c, &__jule_any_type19), ._field_Constant=_240021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c6992887:;
			{
				jule::Ptr<_24a233549_Const> _240821_c = static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24a22c2e0_Min(jule::Str("int", 3)))));;
				_240821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd0474ca_primInt, ._field_Model=jule::Any(_240821_c, &__jule_any_type19), ._field_Constant=_240821_c});;
			}
		}
		else {
			_case_begin_1c6992b1d:;
			{
				_1dce56d46_pushErr(_self_, _239636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_239636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6992a74:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6ccb3_evalUintTypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _242137_ident) {
	;
	{
		auto &_match_expr{ _242137_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c6995802:;
			{
				jule::Ptr<_24a233549_Const> _242521_c = static__24a233c20_NewU64(static_cast<jule::U64>(_24a22c0d1_MaxU(jule::Str("uint", 4))));;
				_242521_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd047211_primUint, ._field_Model=jule::Any(_242521_c, &__jule_any_type19), ._field_Constant=_242521_c});;
			}
		}
		else {
			_case_begin_1c6995cca:;
			{
				_1dce56d46_pushErr(_self_, _242137_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_242137_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6995c75:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6d0c1_evalI8TypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _243835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _243835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c69980a7:;
			{
				jule::Ptr<_24a233549_Const> _244421_c = static__24a233978_NewI64(127LL);;
				_244421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd0478a4_primI8, ._field_Model=jule::Any(_244421_c, &__jule_any_type19), ._field_Constant=_244421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c6999350:;
			{
				jule::Ptr<_24a233549_Const> _245221_c = static__24a233978_NewI64(-128LL);;
				_245221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd0478a4_primI8, ._field_Model=jule::Any(_245221_c, &__jule_any_type19), ._field_Constant=_245221_c});;
			}
		}
		else {
			_case_begin_1c6998838:;
			{
				_1dce56d46_pushErr(_self_, _243835_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_243835_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6998739:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6d3ce_evalI16TypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _246536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _246536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c699b72b:;
			{
				jule::Ptr<_24a233549_Const> _247121_c = static__24a233978_NewI64(32767LL);;
				_247121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd047b6d_primI16, ._field_Model=jule::Any(_247121_c, &__jule_any_type19), ._field_Constant=_247121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c699c9e6:;
			{
				jule::Ptr<_24a233549_Const> _247921_c = static__24a233978_NewI64(-32768LL);;
				_247921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd047b6d_primI16, ._field_Model=jule::Any(_247921_c, &__jule_any_type19), ._field_Constant=_247921_c});;
			}
		}
		else {
			_case_begin_1c699bece:;
			{
				_1dce56d46_pushErr(_self_, _246536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_246536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c699bdd0:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6d6dc_evalI32TypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _249236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _249236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c699edc2:;
			{
				jule::Ptr<_24a233549_Const> _249821_c = static__24a233978_NewI64(2147483647LL);;
				_249821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd047e37_primI32, ._field_Model=jule::Any(_249821_c, &__jule_any_type19), ._field_Constant=_249821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c69a118c:;
			{
				jule::Ptr<_24a233549_Const> _250621_c = static__24a233978_NewI64(-2147483648LL);;
				_250621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd047e37_primI32, ._field_Model=jule::Any(_250621_c, &__jule_any_type19), ._field_Constant=_250621_c});;
			}
		}
		else {
			_case_begin_1c69a0675:;
			{
				_1dce56d46_pushErr(_self_, _249236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_249236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c69a0576:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6d9ea_evalI64TypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _251936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _251936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c69a3568:;
			{
				jule::Ptr<_24a233549_Const> _252521_c = static__24a233978_NewI64(jule::MAX_I64);;
				_252521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd048201_primI64, ._field_Model=jule::Any(_252521_c, &__jule_any_type19), ._field_Constant=_252521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c69a4833:;
			{
				jule::Ptr<_24a233549_Const> _253321_c = static__24a233978_NewI64(jule::MIN_I64);;
				_253321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd048201_primI64, ._field_Model=jule::Any(_253321_c, &__jule_any_type19), ._field_Constant=_253321_c});;
			}
		}
		else {
			_case_begin_1c69a3d1b:;
			{
				_1dce56d46_pushErr(_self_, _251936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_251936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c69a3c1c:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6dd08_evalU8TypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _254635_ident) {
	;
	;
	{
		auto &_match_expr{ _254635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c69a79e0:;
			{
				jule::Ptr<_24a233549_Const> _255121_c = static__24a233c20_NewU64(255LLU);;
				_255121_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd0484ba_primU8, ._field_Model=jule::Any(_255121_c, &__jule_any_type19), ._field_Constant=_255121_c});;
			}
		}
		else {
			_case_begin_1c69a6c0e:;
			{
				_1dce56d46_pushErr(_self_, _254635_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_254635_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c69a6d63:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6e116_evalU16TypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _256436_ident) {
	;
	;
	{
		auto &_match_expr{ _256436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c69a98b0:;
			{
				jule::Ptr<_24a233549_Const> _256921_c = static__24a233c20_NewU64(65535LLU);;
				_256921_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd048784_primU16, ._field_Model=jule::Any(_256921_c, &__jule_any_type19), ._field_Constant=_256921_c});;
			}
		}
		else {
			_case_begin_1c69a8d54:;
			{
				_1dce56d46_pushErr(_self_, _256436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_256436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c69a9481:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6e424_evalU32TypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _258236_ident) {
	;
	;
	{
		auto &_match_expr{ _258236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c69ac572:;
			{
				jule::Ptr<_24a233549_Const> _258721_c = static__24a233c20_NewU64(4294967295LLU);;
				_258721_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd048a4d_primU32, ._field_Model=jule::Any(_258721_c, &__jule_any_type19), ._field_Constant=_258721_c});;
			}
		}
		else {
			_case_begin_1c69ab75d:;
			{
				_1dce56d46_pushErr(_self_, _258236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_258236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c69ab8e5:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6e732_evalU64TypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _260036_ident) {
	;
	;
	{
		auto &_match_expr{ _260036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c69ae442:;
			{
				jule::Ptr<_24a233549_Const> _260521_c = static__24a233c20_NewU64(jule::MAX_U64);;
				_260521_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd048d17_primU64, ._field_Model=jule::Any(_260521_c, &__jule_any_type19), ._field_Constant=_260521_c});;
			}
		}
		else {
			_case_begin_1c69ad8d6:;
			{
				_1dce56d46_pushErr(_self_, _260036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_260036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c69ae013:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6ea40_evalF32TypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _261836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c69b2940:;
			{
				jule::Ptr<_24a233549_Const> _262521_c = static__24a234506_NewF64(340282346638528860000000000000000000000.0);;
				_262521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd04928a_primF32, ._field_Model=jule::Any(_262521_c, &__jule_any_type19), ._field_Constant=_262521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c69b239b:;
			{
				jule::Ptr<_24a233549_Const> _263321_c = static__24a234506_NewF64(-340282346638528860000000000000000000000.0);;
				_263321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd04928a_primF32, ._field_Model=jule::Any(_263321_c, &__jule_any_type19), ._field_Constant=_263321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1c69b2a2d:;
			{
				jule::Ptr<_24a233549_Const> _264121_c = static__24a234506_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_264121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd04928a_primF32, ._field_Model=jule::Any(_264121_c, &__jule_any_type19), ._field_Constant=_264121_c});;
			}
		}
		else {
			_case_begin_1c69b1d5c:;
			{
				_1dce56d46_pushErr(_self_, _261836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type5),jule::Any(_261836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c69b1d07:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce6ed4d_evalF64TypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_23ae26b42_Token> _265436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _265436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c69b71c5:;
			{
				jule::Ptr<_24a233549_Const> _266121_c = static__24a234506_NewF64(jule::MAX_F64);;
				_266121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd049554_primF64, ._field_Model=jule::Any(_266121_c, &__jule_any_type19), ._field_Constant=_266121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c69b6b31:;
			{
				jule::Ptr<_24a233549_Const> _266921_c = static__24a234506_NewF64(jule::MIN_F64);;
				_266921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd049554_primF64, ._field_Model=jule::Any(_266921_c, &__jule_any_type19), ._field_Constant=_266921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1c69b72b3:;
			{
				jule::Ptr<_24a233549_Const> _267721_c = static__24a234506_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_267721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd049554_primF64, ._field_Model=jule::Any(_267721_c, &__jule_any_type19), ._field_Constant=_267721_c});;
			}
		}
		else {
			_case_begin_1c69b65e2:;
			{
				_1dce56d46_pushErr(_self_, _265436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type5),jule::Any(_265436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c69b658c:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce70205_evalPrimStatic(_1dce5683a_Eval* _self_, jule::Str _269033_kind, jule::Ptr<_23ae26b42_Token> _269044_ident) {
	{
		auto &_match_expr{ _269033_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c69ba838:;
			{
				return _1dce6c9a5_evalIntTypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c69b96c2:;
			{
				return _1dce6ccb3_evalUintTypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c69ba96a:;
			{
				return _1dce6d0c1_evalI8TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c69baa69:;
			{
				return _1dce6d3ce_evalI16TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c69baad0:;
			{
				return _1dce6d6dc_evalI32TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c69ba184:;
			{
				return _1dce6d9ea_evalI64TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c69ba1ea:;
			{
				return _1dce6dd08_evalU8TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c69bab46:;
			{
				return _1dce6e116_evalU16TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c69babac:;
			{
				return _1dce6e424_evalU32TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c69bac23:;
			{
				return _1dce6e732_evalU64TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c69bac89:;
			{
				return _1dce6ea40_evalF32TypeStatic(_self_, _269044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c69bad00:;
			{
				return _1dce6ed4d_evalF64TypeStatic(_self_, _269044_ident);;
			}
		}
		else {
			_case_begin_1c69b9eb9:;
			{
				_1dce56d46_pushErr(_self_, _269044_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_269033_kind, &__jule_any_type5),jule::Any(_269044_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c69b99e1:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce705ac_evalTypeStatic(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data> _272237_d, jule::Ptr<_1dcd44393_SubIdentExpr> _272251_si) {
	{
		
		if ((_1dce84b54_Prim(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c0c28:;
			{
				return _1dce70205_evalPrimStatic(_self_, _1dce89ebc_Str(_1dce84b54_Prim(_272237_d.get()._field_Kind.ptr()).ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else if ((_1dce85391_Enum(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c0c8e:;
			{
				return _1dce6a750_evalEnumStatic(_self_, _1dce85391_Enum(_272237_d.get()._field_Kind.ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else if ((_1dce85605_TypeEnum(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c0a91:;
			{
				return _1dce6ab07_evalTypeEnumStatic(_self_, _1dce85605_TypeEnum(_272237_d.get()._field_Kind.ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else if ((_1dce860a6_Struct(_272237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c0b07:;
			{
				return _1dce6aeae_evalStructStatic(_self_, _1dce860a6_Struct(_272237_d.get()._field_Kind.ptr()), _272251_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1c69bed37:;
			{
				_1dce56d46_pushErr(_self_, _272251_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_272237_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c69be7a4:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1c69c6745_comptimeObjSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd98947_comptimeTypeInfo>* _273857_ct, jule::Ptr<_1dce54cbc_Data>* _273877_d, jule::Ptr<_1dcd44393_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1dce54cbc_Data> _273917_cd = _1dcd9e156_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1dce56d46_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1dce54cbc_Data> _1c69c9e30_comptimeObjSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd8a692_comptimeStructField>* _273857_ct, jule::Ptr<_1dce54cbc_Data>* _273877_d, jule::Ptr<_1dcd44393_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1dce54cbc_Data> _273917_cd = _1dcd8bd58_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1dce56d46_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1dce54cbc_Data> _1c69cd5a4_comptimeObjSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd91698_comptimeEnumField>* _273857_ct, jule::Ptr<_1dce54cbc_Data>* _273877_d, jule::Ptr<_1dcd44393_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1dce54cbc_Data> _273917_cd = _1dcd925cd_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1dce56d46_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1dce54cbc_Data> _1c69d1ee2_comptimeObjSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd93e1a_comptimeParam>* _273857_ct, jule::Ptr<_1dce54cbc_Data>* _273877_d, jule::Ptr<_1dcd44393_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1dce54cbc_Data> _273917_cd = _1dcd95999_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1dce56d46_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1dce54cbc_Data> _1c69d5666_comptimeObjSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd8d695_comptimeStatic>* _273857_ct, jule::Ptr<_1dce54cbc_Data>* _273877_d, jule::Ptr<_1dcd44393_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1dce54cbc_Data> _273917_cd = _1dcd8ed5b_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1dce56d46_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1dce54cbc_Data> _1c69d8cda_comptimeObjSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dcd9e442_comptimeValue>* _273857_ct, jule::Ptr<_1dce54cbc_Data>* _273877_d, jule::Ptr<_1dcd44393_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1dce54cbc_Data> _273917_cd = _1dcda1752_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1dce56d46_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}

inline jule::Ptr<_1dce54cbc_Data> _1c69dc45e_comptimeObjSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dcda3006_comptimeFile>* _273857_ct, jule::Ptr<_1dce54cbc_Data>* _273877_d, jule::Ptr<_1dcd44393_SubIdentExpr>* _273888_si) {
	jule::Ptr<_1dce54cbc_Data> _273917_cd = _1dcda46bc_subIdent((*(_273857_ct)), (*(_273888_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273917_cd == nullptr)) {
		_1dce56d46_pushErr(_self_, (*(_273888_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_273877_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273888_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273917_cd;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce70db5_evalObjSubIdent(_1dce5683a_Eval* _self_, jule::Ptr<_1dce54cbc_Data> _274638_d, jule::Ptr<_1dcd44393_SubIdentExpr> _274652_si) {
	if (_23ae293d6_IsIgnoreIdent(_274652_si.get()._field_Ident.get()._field_Kind)) {
		_1dce56d46_pushErr(_self_, _274652_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if ((_1dce8821d_comptimeTypeInfo(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c45bc:;
			{
				jule::Ptr<_1dcd98947_comptimeTypeInfo> _275421_ct = _1dce8821d_comptimeTypeInfo(_274638_d.get()._field_Kind.ptr());;
				return _1c69c6745_comptimeObjSubIdent(_self_, &(_275421_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1dce87030_comptimeStructField(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c4e5d:;
			{
				jule::Ptr<_1dcd8a692_comptimeStructField> _275721_ct = _1dce87030_comptimeStructField(_274638_d.get()._field_Kind.ptr());;
				return _1c69c9e30_comptimeObjSubIdent(_self_, &(_275721_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1dce87508_comptimeEnumField(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c4ec4:;
			{
				jule::Ptr<_1dcd91698_comptimeEnumField> _276021_ct = _1dce87508_comptimeEnumField(_274638_d.get()._field_Kind.ptr());;
				return _1c69cd5a4_comptimeObjSubIdent(_self_, &(_276021_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1dce879d1_comptimeParam(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c503a:;
			{
				jule::Ptr<_1dcd93e1a_comptimeParam> _276321_ct = _1dce879d1_comptimeParam(_274638_d.get()._field_Kind.ptr());;
				return _1c69d1ee2_comptimeObjSubIdent(_self_, &(_276321_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1dce886e6_comptimeStatic(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c50a1:;
			{
				jule::Ptr<_1dcd8d695_comptimeStatic> _276621_ct = _1dce886e6_comptimeStatic(_274638_d.get()._field_Kind.ptr());;
				return _1c69d5666_comptimeObjSubIdent(_self_, &(_276621_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1dce8895a_comptimeValue(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c5117:;
			{
				jule::Ptr<_1dcd9e442_comptimeValue> _276921_ct = _1dce8895a_comptimeValue(_274638_d.get()._field_Kind.ptr());;
				return _1c69d8cda_comptimeObjSubIdent(_self_, &(_276921_ct), &(_274638_d), &(_274652_si));;
			}
		}
		else if ((_1dce88bbe_comptimeFile(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69c517d:;
			{
				jule::Ptr<_1dcda3006_comptimeFile> _277221_ct = _1dce88bbe_comptimeFile(_274638_d.get()._field_Kind.ptr());;
				return _1c69dc45e_comptimeObjSubIdent(_self_, &(_277221_ct), &(_274638_d), &(_274652_si));;
			}
		}
		_match_end_1c69c4688:;
	};
	jule::Ptr<_1dce82437_TypeKind> _277617_kind = _274638_d.get()._field_Kind;;
	{
		
		if ((_1dce8512c_Ptr(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69db01d:;
			{
				jule::Ptr<_1dce91952_Ptr> _277917_ptr = _1dce8512c_Ptr(_274638_d.get()._field_Kind.ptr());;
				if (_1dce92425_IsUnsafe(_277917_ptr.ptr())) {
					goto _match_end_1c69dc0eb;
				};
				if (((!(_274652_si.get()._field_IsSelf)) && (!(_1dce57781_isUnsafe(_self_))))) {
					_1dce56d46_pushErr(_self_, _274652_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_277617_kind=_1dce8512c_Ptr(_274638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1dce84db8_Sptr(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69de065:;
			{
				_277617_kind=_1dce84db8_Sptr(_274638_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1c69dc0eb:;
	};
	{
		
		if ((_1dce8631a_Trait(_274638_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c69e2431:;
			{
				return _1dce6b410_evalTraitSubIdent(_self_, _274638_d, _1dce8631a_Trait(_274638_d.get()._field_Kind.ptr()), _274652_si.get()._field_Ident);;
			}
		}
		else if ((_1dce860a6_Struct(_277617_kind.ptr()) != nullptr)) {
			_case_begin_1c69e24a8:;
			{
				jule::Ptr<_1dcd5e457_StructIns> _279517_s = _1dce860a6_Struct(_277617_kind.ptr());;
				if (_1dce7cb19_isInstancedStruct(_279517_s)) {
					jule::Bool _279725_usedReferenceElem = (_1dce84db8_Sptr(_274638_d.get()._field_Kind.ptr()) != nullptr);;
					return _1dce6be38_evalStructSubIdent(_self_, _274638_d, _1dce860a6_Struct(_277617_kind.ptr()), _274652_si, _279725_usedReferenceElem);;
				};
			}
		}
		else if ((_1dce85acd_Slc(_277617_kind.ptr()) != nullptr)) {
			_case_begin_1c69e2530:;
			{
				return _1dce6c2e0_evalSliceSubIdent(_self_, _274638_d, _274652_si.get()._field_Ident);;
			}
		}
		else if ((_1dce85869_Arr(_277617_kind.ptr()) != nullptr)) {
			_case_begin_1c69e25a7:;
			{
				return _1dce6c697_evalArraySubIdent(_self_, _274638_d, _274652_si.get()._field_Ident);;
			}
		}
		_match_end_1c69e2354:;
	};
	_1dce56d46_pushErr(_self_, _274652_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_274638_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce711c3_evalSubIdent(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd44393_SubIdentExpr> _280936_si) {
	jule::Ptr<_1dce82437_TypeKind> _281017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_281017_prefix;
	});;
	jule::Ptr<_1dce54cbc_Data> _281317_d = _1dce725c0_evalExprKind(_self_, _280936_si.get()._field_Expr.get()._field_Kind);;
	if ((_281317_d == nullptr)) {
		return nullptr;;
	};
	if (_281317_d.get()._field_Decl) {
		return _1dce705ac_evalTypeStatic(_self_.ptr(), _281317_d, _280936_si);;
	};
	return _1dce70db5_evalObjSubIdent(_self_.ptr(), _281317_d, _280936_si);;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce714d1_evalTuple(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd41b87_TupleExpr> _282333_tup) {
	jule::Ptr<_1dce8e950_Tuple> _282417_tupT = jule::new_ptr<_1dce8e950_Tuple>();;
	_282417_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1dce82437_TypeKind>>::alloc(0LL, _282333_tup.get()._field_Expr.len());
	jule::Ptr<_1dcd693b8_TupleExprModel> _282717_model = jule::new_ptr<_1dcd693b8_TupleExprModel>(_1dcd693b8_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1dce54cbc_Data>>::alloc(0LL, _282333_tup.get()._field_Expr.len())});;
	jule::Bool _283117_ok = true;;
	{
		auto expr = &(_282333_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69ea99a:;
		if (it != expr_end) {
			jule::Ptr<_1dcd4100a_Expr> _283221_expr = *it;
			{
				jule::Ptr<_1dce54cbc_Data> _283321_d = _1dce73307_evalExpr(_self_, _283221_expr);;
				if ((_283321_d == nullptr)) {
					_283117_ok=false;
					goto _iter_next_1c69ea99a;
				};
				{ jule::Slice<jule::Ptr<_1dce82437_TypeKind>> &__jule_push_dest = _282417_tupT.get()._field_Types; __jule_push_dest.push(_283321_d.get()._field_Kind); };
				{ jule::Slice<jule::Ptr<_1dce54cbc_Data>> &__jule_push_dest = _282717_model.get()._field_Datas; __jule_push_dest.push(_283321_d); };
			}
			_iter_next_1c69ea99a:;
			++it;
			goto _iter_begin_1c69ea99a;
		}
		_iter_end_1c69ea99a:;
	};
	if ((!(_283117_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_282417_tupT, 23)}), ._field_Model=jule::Any(_282717_model, &__jule_any_type87), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce71888_evalMap(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dce90401_Map> _285231_m, jule::Ptr<_1dcd465e8_BraceLit> _285244_lit) {
	jule::Ptr<_1dcd66b9b_MapExprModel> _285317_model = jule::new_ptr<_1dcd66b9b_MapExprModel>(_1dcd66b9b_MapExprModel{._field_KeyKind=_285231_m.get()._field_Key, ._field_ValKind=_285231_m.get()._field_Val, });;
	{
		auto expr = &(_285244_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69ed8d2:;
		if (it != expr_end) {
			jule::Ptr<_1dcd4100a_Expr> _285821_expr = *it;
			{
				{
					auto &_match_expr{ _285821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1c69ee0ec:;
						{
							goto _match_end_1c69ee196;
						}
					}
					else {
						_case_begin_1c69ee32d:;
						{
							_1dce56d46_pushErr(_self_.ptr(), _285244_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1c69ee196:;
				};
				jule::Ptr<_1dcd46ecd_KeyValPair> _286821_pair = _285821_expr.get()._field_Kind.cast_ptr<_1dcd46ecd_KeyValPair>(&__jule_any_type84);;
				jule::Ptr<_1dce54cbc_Data> _287021_key = _1dce73307_evalExpr(_self_, _286821_pair.get()._field_Key);;
				if ((_287021_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1dce54cbc_Data> _287521_val = _1dce73307_evalExpr(_self_, _286821_pair.get()._field_Val);;
				if ((_287521_val == nullptr)) {
					return nullptr;;
				};
				_1dcde05c6_checkAssignType(_self_.get()._field_s, false, &(_285231_m.get()._field_Key), &(_287021_key), _286821_pair.get()._field_Colon);
				_1dcde05c6_checkAssignType(_self_.get()._field_s, false, &(_285231_m.get()._field_Val), &(_287521_val), _286821_pair.get()._field_Colon);
				{ jule::Slice<jule::Ptr<_1dcd66728_KeyValPairExprModel>> &__jule_push_dest = _285317_model.get()._field_Entries; __jule_push_dest.push(jule::new_ptr<_1dcd66728_KeyValPairExprModel>(_1dcd66728_KeyValPairExprModel{._field_Key=_287021_key.get()._field_Model, ._field_Val=_287521_val.get()._field_Model})); };
			}
			_iter_next_1c69ed8d2:;
			++it;
			goto _iter_begin_1c69ed8d2;
		}
		_iter_end_1c69ed8d2:;
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_285231_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_285317_model, &__jule_any_type102), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce71b96_evalBraceLit(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd465e8_BraceLit> _289636_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1c6a03b29:;
			{
				_1dce56d46_pushErr(_self_.ptr(), _289636_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1dce8657e_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c6a03ed1:;
			{
				return _1dce71888_evalMap(_self_, _1dce8657e_Map(_self_.get()._field_prefix.ptr()), _289636_lit);;
			}
		}
		else if ((_1dce860a6_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c6a040d0:;
			{
				return _1dce68550_evalStructLitExplicit(_self_, _1dce860a6_Struct(_self_.get()._field_prefix.ptr()), _289636_lit.get()._field_Exprs, _289636_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1c6a0350d:;
			{
				_1dce56d46_pushErr(_self_.ptr(), _289636_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c69ede54:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce71ea4_evalAnonFn(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd4d4ac_FnDecl> _291134_decl) {
	_1dce93778_typeChecker _291217_tc = _1dce93778_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1dcd74648_FnIns> _291717_ins = _1dce99c9b_buildFn(&_291217_tc, _291134_decl);;
	if ((_291717_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c6a0790d:;
			{
				jule::Ptr<_1dcdb5898_scopeChecker> _292321_sc = _self_.get()._field_lookup.cast_ptr<_1dcdb5898_scopeChecker>(0);;
				jule::Ptr<_1dcdb5898_scopeChecker> _292421_scc = _1dcdc5a51_newChildChecker(_292321_sc);;
				_292421_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1dcdb4611_scopeLabel>>>(nullptr);
				_292421_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1dcdb4a84_scopeGoto>>>(nullptr);
				_292421_scc.get()._field_owner=nullptr;
				_292421_scc.get()._field_childIndex=0LL;
				_292421_scc.get()._field_it=0LLU;
				_292421_scc.get()._field_cse=0LLU;
				_292421_scc.get()._field_owner=_291717_ins;
				_1dce00b8b_checkFnInsSc(_self_.get()._field_s.ptr(), &(_291717_ins), &(_292421_scc));
			}
		}
		else {
			_case_begin_1c6a077ba:;
			{
				_1dce01230_checkFnIns(_self_.get()._field_s, &(_291717_ins));
			}
		}
		_match_end_1c6a07765:;
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_291717_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1dcd66371_AnonFnExprModel>(_1dcd66371_AnonFnExprModel{._field_Func=_291717_ins, ._field_Global=_1dce579e5_isGlobal(_self_.ptr())}), &__jule_any_type103), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce722b2_evalBinop(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd44816_BinopExpr> _294633_op) {
	_1dce7554b_binaryEval _294717_bs = static__1dce75b23_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1dce89b8c_Prim> _295017_prim = _1dce84b54_Prim(_self_.get()._field_prefix.ptr());;
		if (((_295017_prim == nullptr) || (!(_24a233109_IsNum(_1dce89ebc_Str(_295017_prim.ptr())))))) {
			jule::Ptr<_1dce82437_TypeKind> _295225_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_295225_prefix;
			});;
			return _1dce7b09b_eval(&_294717_bs, &(_294633_op));;
		};
	};
	return _1dce7b09b_eval(&_294717_bs, &(_294633_op));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce725c0_evalExprKind(jule::Ptr<_1dce5683a_Eval> _self_, jule::Any _296136_kind) {
	{
		auto &_match_expr{ _296136_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1c6a0dc88:;
			{
				jule::Ptr<_1dcd412e6_RangeExpr> _296421_e = _296136_kind.cast_ptr<_1dcd412e6_RangeExpr>(&__jule_any_type104);;
				return _1dce725c0_evalExprKind(_self_, _296421_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1c6a0e926:;
			{
				return _1dce59695_evalLit(_self_.ptr(), _296136_kind.cast_ptr<_1dcd4203e_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c6a0e98c:;
			{
				return _1dce5db50_evalIdent(_self_.ptr(), _296136_kind.cast_ptr<_1dcd42b00_IdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c6a0e470:;
			{
				return _1dce5de5d_evalUnary(_self_, _296136_kind.cast_ptr<_1dcd43309_UnaryExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c6a0e4d6:;
			{
				return _1dce5e26b_evalVariadic(_self_, _296136_kind.cast_ptr<_1dcd436b1_VariadicExpr>(&__jule_any_type81));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1c6a0e55d:;
			{
				return _1dce5e579_evalUnsafe(_self_, _296136_kind.cast_ptr<_1dcd4267c_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c6a0e5d5:;
			{
				return _1dce600e6_evalSliceExpr(_self_, _296136_kind.cast_ptr<_1dcd4764e_SliceExpr>(&__jule_any_type99));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1c6a0ea14:;
			{
				return _1dce6343a_evalIndexing(_self_, _296136_kind.cast_ptr<_1dcd47eac_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1c6a0ea8b:;
			{
				return _1dce64606_evalSlicing(_self_, _296136_kind.cast_ptr<_1dcd485b7_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1c6a0eb13:;
			{
				return _1dce67ce1_evalCast(_self_, _296136_kind.cast_ptr<_1dcd43a68_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c6a0eb8a:;
			{
				return _1dce680ee_evalNsSelection(_self_.ptr(), _296136_kind.cast_ptr<_1dcd43e20_NsSelectionExpr>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c6a0ec12:;
			{
				return _1dce6885d_evalStructLit(_self_, _296136_kind.cast_ptr<_1dcd46175_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c6a0ec89:;
			{
				return _1dce68dd0_evalType(_self_.ptr(), _296136_kind.cast_ptr<_1dcd3bd80_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c6a0ed11:;
			{
				return _1dce6a398_evalFnCall(_self_, _296136_kind.cast_ptr<_1dcd44e21_FnCallExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c6a0ed88:;
			{
				return _1dce711c3_evalSubIdent(_self_, _296136_kind.cast_ptr<_1dcd44393_SubIdentExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c6a0ee10:;
			{
				return _1dce714d1_evalTuple(_self_, _296136_kind.cast_ptr<_1dcd41b87_TupleExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c6a0ee87:;
			{
				return _1dce71b96_evalBraceLit(_self_, _296136_kind.cast_ptr<_1dcd465e8_BraceLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c6a1000e:;
			{
				return _1dce71ea4_evalAnonFn(_self_, _296136_kind.cast_ptr<_1dcd4d4ac_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c6a10086:;
			{
				return _1dce722b2_evalBinop(_self_, _296136_kind.cast_ptr<_1dcd44816_BinopExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1c6a0e371:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6a0e31b:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce728cd_eval1(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd4100a_Expr> _300929_expr) {
	jule::Ptr<_1dce54cbc_Data> _301017_d = _1dce725c0_evalExprKind(_self_, _300929_expr.get()._field_Kind);;
	if (((_301017_d == nullptr) || (_301017_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1dce85d42_Fn(_301017_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a19612:;
			{
				jule::Ptr<_1dcd74648_FnIns> _301721_f = _1dce85d42_Fn(_301017_d.get()._field_Kind.ptr());;
				if (_1dcd759ce_IsBuiltin(_301721_f.ptr())) {
					_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _300929_expr.get()._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1c6a19007;
				};
				if ((_301721_f.get()._field_Generics.len() != _301721_f.get()._field_Decl.get()._field_Generics.len())) {
					_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _300929_expr.get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!(_301721_f.get()._field_Decl.get()._field_Statically)) && _1dcd7216d_IsMethod(_301721_f.get()._field_Decl.ptr()))) {
					_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _300929_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1c6a19007:;
	};
	return _301017_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce72bdb_eval(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd4100a_Expr> _303628_expr) {
	jule::Ptr<_1dce54cbc_Data> _303717_d = _1dce728cd_eval1(_self_, _303628_expr);;
	if ((_303717_d == nullptr)) {
		return nullptr;;
	};
	if ((((_self_.get()._field_owner == nullptr) || (!(_self_.get()._field_owner.get()._field_Constant))) && _1dce86a57_comptime(_303717_d.get()._field_Kind.ptr()))) {
		_1dcdd8338_pushErr(_self_.get()._field_s.ptr(), _303628_expr.get()._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303717_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce72ee9_evalExpr1(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd4100a_Expr> _305133_expr) {
	jule::Ptr<_1dce54cbc_Data> _305217_d = _1dce728cd_eval1(_self_, _305133_expr);;
	{
		
		if ((_305217_d == nullptr)) {
			_case_begin_1c6cdb6d6:;
			{
				return nullptr;;
			}
		}
		else if (_305217_d.get()._field_Decl) {
			_case_begin_1c6cdb75d:;
			{
				_1dce56d46_pushErr(_self_.ptr(), _305133_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1c6cdb63c:;
			{
				return _305217_d;;
			}
		}
		_match_end_1c6cdb5a4:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce73307_evalExpr(jule::Ptr<_1dce5683a_Eval> _self_, jule::Ptr<_1dcd4100a_Expr> _306732_expr) {
	jule::Ptr<_1dce54cbc_Data> _306817_d = _1dce72bdb_eval(_self_, _306732_expr);;
	{
		
		if ((_306817_d == nullptr)) {
			_case_begin_1c6cdd1dd:;
			{
				return nullptr;;
			}
		}
		else if (_306817_d.get()._field_Decl) {
			_case_begin_1c6cdd265:;
			{
				_1dce56d46_pushErr(_self_.ptr(), _306732_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1c6cdd144:;
			{
				return _306817_d;;
			}
		}
		_match_end_1c6cdd09a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dce5683a_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1dce7377a_unaryEval static__1dce73ba9_new(jule::Ptr<_1dce5683a_Eval> _308823_e) {
	return _1dce7377a_unaryEval{._field_e=_308823_e, };;
}



inline void _1dce73d85_minus(_1dce7377a_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c6cdea3b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1dce84b54_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6cde73e:;
			{
				if ((!(_24a233109_IsNum(_1dce827de_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1dce860a6_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6cde7a5:;
			{
				if ((_1dce860a6_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c6cde6c8:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c6cde3ba:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1dce5563b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_24a237b8b_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c6ce3776:;
				{
					_24a236c9a_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_24a2357e3_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_24a2371da_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c6ce37ed:;
				{
					_24a2362a5_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_24a234d42_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_24a23744e_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c6ce3875:;
				{
					_24a2362a5_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_24a235a57_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1c6ce338b:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3126:17"));;
				}
			}
			_match_end_1c6ce32c0:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd63bcb_UnaryExprModel>(_1dcd63bcb_UnaryExprModel{._field_Expr=jule::new_ptr<_1dce54cbc_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1dce74061_plus(_1dce7377a_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c6ce7615:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1dce84b54_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ce72d5:;
			{
				if ((!(_24a233109_IsNum(_1dce827de_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1dce860a6_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ce734b:;
			{
				if ((_1dce860a6_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c6ce726e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c6ce71a3:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1dce5563b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_24a237b8b_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c6ceb350:;
				{
					_24a236c9a_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_24a2357e3_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_24a2371da_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c6ceb3c7:;
				{
					_24a2362a5_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_24a234d42_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_24a23744e_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c6ceb44e:;
				{
					_24a2362a5_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_24a235a57_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1c6ceae65:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3171:17"));;
				}
			}
			_match_end_1c6cead99:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd63bcb_UnaryExprModel>(_1dcd63bcb_UnaryExprModel{._field_Expr=jule::new_ptr<_1dce54cbc_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1dce7423c_caret(_1dce7377a_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c6d001de:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1dce84b54_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ceedae:;
			{
				if ((!(_24a232a43_IsInt(_1dce827de_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1dce860a6_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ceee25:;
			{
				if ((_1dce860a6_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c6ceed48:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c6ceec7c:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1dce5563b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_24a2371da_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c6d03e18:;
				{
					_24a2362a5_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_24a234d42_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_24a23744e_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c6d03e90:;
				{
					_24a23652a_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_24a2350a6_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1c6d03a3e:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3214:17"));;
				}
			}
			_match_end_1c6d03973:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd63bcb_UnaryExprModel>(_1dcd63bcb_UnaryExprModel{._field_Expr=jule::new_ptr<_1dce54cbc_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1dce74418_excl(_1dce7377a_unaryEval* _self_) {
	jule::Ptr<_1dce89b8c_Prim> _322813_t = _1dce84b54_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_322813_t == nullptr) || (!(_1dce8cb29_IsBool(_322813_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1dce5563b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_24a2376b3_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c6d08a77:;
				{
					_24a2367a0_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_24a23531a_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1c6d086ae:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3242:17"));;
				}
			}
			_match_end_1c6d085e3:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd63bcb_UnaryExprModel>(_1dcd63bcb_UnaryExprModel{._field_Expr=jule::new_ptr<_1dce54cbc_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1dce745e4_star(_1dce7377a_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd63bcb_UnaryExprModel>(_1dcd63bcb_UnaryExprModel{._field_Expr=jule::new_ptr<_1dce54cbc_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1dce8512c_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6d0b3c6:;
			{
				if ((!(_1dce57781_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1dce91952_Ptr> _326721_t = _1dce8512c_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1dce92425_IsUnsafe(_326721_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_326721_t.get()._field_Elem;
				(*(_self_))._field_d.get()._field_Mutable=true;
			}
		}
		else if ((_1dce84db8_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6d0b0b8:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1dce84db8_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1c6d0b052:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c6d0a45d:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1dce747c0_amper(_1dce7377a_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c6d113a9:;
			{
				jule::Ptr<_1dcd6447e_StructLitExprModel> _328821_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1dcd6447e_StructLitExprModel>(&__jule_any_type100);;
				_1dce7bd38_makeStructLitAlloc(&((*(_self_))._field_d), &(_328821_lit));
			}
		}
		else {
			_case_begin_1c6d10661:;
			{
				{
					
					if (_1dce9be24_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1c6d102ed:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dce91952_Ptr>(_1dce91952_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 26)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd63bcb_UnaryExprModel>(_1dcd63bcb_UnaryExprModel{._field_Expr=jule::new_ptr<_1dce54cbc_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1c6d10b5b:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1c6d10a90:;
				};
			}
		}
		_match_end_1c6d105d9:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
}



inline void _1dce7499b_typeDecl(_1dce7377a_unaryEval* _self_) {
	_1dce93778_typeChecker _331217_tc = _1dce93778_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c6d14104:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9863a_buildPtrFromType(&_331217_tc, &((*(_self_))._field_d.get()._field_Kind)), 26)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c6d16634:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dce9801e_buildSptrFromType(&_331217_tc, &((*(_self_))._field_d.get()._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_1c6d150a0:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c6d1504a:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1dce74b77_evalData(_1dce7377a_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1c6d188de:;
			{
				jule::Ptr<_1dce82437_TypeKind> _333521_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1dce72bdb_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
				(*(_self_))._field_e.get()._field_prefix=_333521_prefix;
			}
		}
		else {
			_case_begin_1c6d184b0:;
			{
				(*(_self_))._field_d=_1dce72bdb_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
			}
		}
		_match_end_1c6d1845a:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce74e85_eval(_1dce7377a_unaryEval* _self_, jule::Ptr<_1dcd43309_UnaryExpr> _334427_u) {
	(*(_self_))._field_u=_334427_u;
	_1dce74b77_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1dce7499b_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1dce82437_TypeKind> _335513_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c6d1c77d:;
			{
				_1dce73d85_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c6d1c272:;
			{
				_1dce74061_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c6d1c2d8:;
			{
				_1dce7423c_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1c6d1c34e:;
			{
				_1dce74418_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c6d1c3b5:;
			{
				_1dce745e4_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c6d1c926:;
			{
				_1dce747c0_amper(_self_);
			}
		}
		else {
			_case_begin_1c6d1c20b:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1c6d1c1a6:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1c6d1c98c:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str(_335513_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1dce5563b_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1c6d1e450:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1c6d1e3ea:;
	};
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce7377a_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1dce7554b_binaryEval static__1dce75b23_newPlain(jule::Ptr<_1dce5683a_Eval> _339228_e) {
	return _1dce7554b_binaryEval{._field_e=_339228_e, };;
}



inline _1dce7554b_binaryEval static__1dce75e31_new(jule::Ptr<_1dce5683a_Eval> _339823_e, jule::Ptr<_23ae26b42_Token> _339837_op) {
	return _1dce7554b_binaryEval{._field_e=_339823_e, ._field_op=_339837_op};;
}



inline jule::Bool _1dce76195_checkTypeCompatibility(_1dce7554b_binaryEval* _self_) {
	return _1dcde0a27_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1dce7643c_checkStructCommonOperatorCompatibility(_1dce7554b_binaryEval* _self_) {
	jule::Ptr<_1dcd74648_FnIns> _341217_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1c6d246db:;
			{
				_341217_overload=_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1c6d230ad:;
			{
				_341217_overload=_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c6d245dc:;
			{
				_341217_overload=_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c6d23641:;
			{
				_341217_overload=_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c6d236a7:;
			{
				_341217_overload=_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c6d24752:;
			{
				_341217_overload=_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c6d247b8:;
			{
				_341217_overload=_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c6d2482e:;
			{
				_341217_overload=_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1c6d24895:;
			{
				_341217_overload=_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c6d2490b:;
			{
				_341217_overload=_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1c6d2350e:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1c6d23487:;
	};
	if ((_341217_overload == nullptr)) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1dcd73779_ParamIns> _344417_p = _341217_overload.get()._field_Params[1LL];;
	return _1dcde05c6_checkAssignType((*(_self_))._field_e.get()._field_s, _344417_p.get()._field_Decl.get()._field_Reference, &(_344417_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce766d4_evalComptimeTypeInfo(_1dce7554b_binaryEval* _self_) {
	jule::Ptr<_1dcd98947_comptimeTypeInfo> _344917_r = _1dce8821d_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_344917_r == nullptr)) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dcd98947_comptimeTypeInfo> _345417_l = _1dce8821d_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1c69433c6:;
			{
				jule::Ptr<_24a233549_Const> _345721_constant = static__24a233eb7_NewBool(_1dce82aec_Equal(_345417_l.get()._field_base, _344917_r.get()._field_base));;
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_345721_constant, &__jule_any_type19), ._field_Constant=_345721_constant});;
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6d300a9:;
			{
				jule::Ptr<_24a233549_Const> _346421_constant = static__24a233eb7_NewBool((!(_1dce82aec_Equal(_345417_l.get()._field_base, _344917_r.get()._field_base))));;
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, ._field_Model=jule::Any(_346421_constant, &__jule_any_type19), ._field_Constant=_346421_constant});;
			}
		}
		else {
			_case_begin_1c6d2e020:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d2deba:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce76948_evalNil(_1dce7554b_binaryEval* _self_) {
	if ((!(_1dce841a3_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6d31c8c:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else {
			_case_begin_1c6d331bc:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d33123:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce76bac_evalEnum(_1dce7554b_binaryEval* _self_) {
	jule::Ptr<_1dcd8644b_Enum> _349517_enm = _1dce85391_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6d34e49:;
			{
				jule::Ptr<_1dce82437_TypeKind> _349921_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1dce85391_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_349921_rkind=_1dce85391_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1dcde0a27_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_349517_enm.get()._field_Kind.get()._field_Kind), &(_349921_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		_match_end_1c6d34dc2:;
	};
	if (((_1dce85391_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_349517_enm != _1dce85391_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_349517_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c6d342cd:;
			{
				if ((!(_24a233109_IsNum(_1dce827de_Str(_349517_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_349517_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c6d39ab9:;
			{
				jule::Ptr<_1dcd85956_EnumItem> _352917_first = _349517_enm.get()._field_Items[0LL];;
				{
					
					if (_24a2371da_IsI64(_352917_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1c6d3c32a:;
						{
							if ((_24a234d42_ReadI64(_352917_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_24a23744e_IsU64(_352917_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1c6d3b989:;
						{
							if ((_24a2350a6_ReadU64(_352917_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_1c6d3be84:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3542:17"));;
						}
					}
					_match_end_1c6d3be1d:;
				};
				_julec_label_err:;
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_349517_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_1dce57165_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_1c6d39b30;
			}
		}
		else if (_match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c6d39b30:;
			{
				if (((_1dce84b54_Prim(_349517_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_24a232a43_IsInt(_1dce89ebc_Str(_1dce84b54_Prim(_349517_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_349517_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c6d38bb7:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_349517_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d38ac9:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce76e21_evalTypeEnum(_1dce7554b_binaryEval* _self_) {
	jule::Ptr<_1dcd87a46_TypeEnum> _356217_enm = _1dce85605_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1dce76195_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6d44563:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else {
			_case_begin_1c6d44123:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dcd87d76_Str(_356217_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d43ce3:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce77185_evalSptr(_1dce7554b_binaryEval* _self_) {
	if ((!(_1dce76195_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6d45ca1:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else {
			_case_begin_1c6d456a7:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d45652:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce773e9_evalPtr(_1dce7554b_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1c6d47269:;
			{
				if ((!(_1dce76195_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1c6d48842:;
			{
				if ((_1dce8512c_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1dce92425_IsUnsafe(_1dce8512c_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1dce7ce7c_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c6d47478:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d47016:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce7765d_evalArr(_1dce7554b_binaryEval* _self_) {
	if ((!(_1dce76195_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6d4d319:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else {
			_case_begin_1c6d4d3e6:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d491a0:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce778c2_evalSlc(_1dce7554b_binaryEval* _self_) {
	if ((!(_1dce76195_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6d500da:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else {
			_case_begin_1c6d4e9e1:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d4e98b:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce77b36_evalStruct(_1dce7554b_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1c6d51828:;
			{
				if ((_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1c6d5188e:;
			{
				if ((_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1c6d51bbe:;
			{
				if ((_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1c6d51c35:;
			{
				if ((_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6d51c9b:;
			{
				if ((!(_1dce76195_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		_match_end_1c6d51350:;
	};
	if ((!(_1dce7643c_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce77d9a_evalTrait(_1dce7554b_binaryEval* _self_) {
	if ((!(_1dce76195_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6d59963:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else {
			_case_begin_1c6d59a84:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d597a9:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce7810e_evalAny(_1dce7554b_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6d5ae2b:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else {
			_case_begin_1c6d5b13a:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d5abb7:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce78373_evalBool(_1dce7554b_binaryEval* _self_) {
	if ((!(_1dce76195_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1c6d5cd40:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c6d5c746:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d5c6e1:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce785d7_evalStr(_1dce7554b_binaryEval* _self_) {
	jule::Str _376117_rk = _1dce827de_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_376117_rk.equal("str", 3))) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_376117_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c6d5e814:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c6d61b35:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		else {
			_case_begin_1c6d60172:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d6011c:;
	};
}



inline void _1dce787b3_setTypeToGreater(_1dce7554b_binaryEval* _self_) {
	jule::Ptr<_1dce89b8c_Prim> _378613_lp = _1dce84b54_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1dce89b8c_Prim> _378713_rp = _1dce84b54_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1dce5563b_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1dce5563b_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_378713_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1dce5563b_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_378613_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1dce5563b_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_378713_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_24a23147b_IsGreater(_378713_rp.get()._field_Kind, _378613_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1dce5563b_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_378713_rp.get()._field_Kind;
		};
	};
}



inline void _1dce78a05_checkModData(_1dce7554b_binaryEval* _self_, jule::Ptr<_1dce54cbc_Data>* _381936_d) {
	if ((!(_1dce5563b_IsConst((*(_381936_d)).ptr())))) {
		if (((_1dce84b54_Prim((*(_381936_d)).get()._field_Kind.ptr()) == nullptr) || (!(_24a232a43_IsInt(_1dce84b54_Prim((*(_381936_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1dce3caa7_sigAssignable(jule::Str("i64", 3), _381936_d)) {
			_case_begin_1c6d6ad5e:;
			{
				_24a2362a5_SetI64((*(_381936_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_24a235a57_AsI64((*(_381936_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1dce3ce3c_unsigAssignable(jule::Str("u64", 3), _381936_d)) {
			_case_begin_1c6d6aa62:;
			{
				_24a23652a_SetU64((*(_381936_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_24a235cbb_AsU64((*(_381936_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1c6d695dd:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c6d69588:;
	};
}



inline void _1dce78bd1_mod(_1dce7554b_binaryEval* _self_) {
	_1dce78a05_checkModData(_self_, &((*(_self_))._field_l));
	_1dce78a05_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1dce79088_numbersAreCompatibile(_1dce7554b_binaryEval* _self_, jule::Str* _384137_lk, jule::Str* _384147_rk) {
	if ((!(_24a233109_IsNum((*(_384147_rk)))))) {
		return false;;
	};
	if ((_1dce5563b_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_384137_lk)).equal("f32", 3)) {
		if ((_1dce5563b_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_384147_rk)).equal("f32", 3);;
	};
	if ((*(_384137_lk)).equal("f64", 3)) {
		if ((_1dce5563b_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_384147_rk)).equal("f64", 3);;
	};
	if ((_1dce5563b_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_384137_lk)) == (*(_384147_rk)));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce792ec_evalFloat(_1dce7554b_binaryEval* _self_) {
	jule::Str _386713_lk = _1dce84b54_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _386813_rk = _1dce84b54_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1dce79088_numbersAreCompatibile(_self_, &(_386713_lk), &(_386813_rk))))) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_386713_lk, &__jule_any_type5),jule::Any(_386813_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1c6d73938:;
			{
				if (((!(_1dce5563b_IsConst((*(_self_))._field_l.ptr()))) || (!(_1dce3d27d_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_386713_lk, &__jule_any_type5),jule::Any(_386813_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1dce5563b_IsConst((*(_self_))._field_r.ptr()))) || (!(_1dce3d27d_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_386713_lk, &__jule_any_type5),jule::Any(_386813_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_24a2362a5_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_24a235a57_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_24a23652a_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_24a235cbb_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1dce7c762_isOkForShifting(&((*(_self_))._field_r))))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1c6d72dee:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c6d78025:;
			{
				_1dce787b3_setTypeToGreater(_self_);
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		_match_end_1c6d77ec0:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1c6d72c01:;
			{
				_1dce787b3_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c6d79bb4:;
			{
				if ((!(_24a232a43_IsInt(_386813_rk)))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_386713_lk, &__jule_any_type5),jule::Any(_386813_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1dce78bd1_mod(_self_);
				_1dce787b3_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1c6d79103:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6d78b08:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce79561_evalInt(_1dce7554b_binaryEval* _self_) {
	jule::Str _393113_lk = _1dce84b54_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _393213_rk = _1dce84b54_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1c6a31d55:;
			{
				if (((!(_24a232a43_IsInt(_393113_lk))) || (!(_24a232a43_IsInt(_393213_rk))))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_393113_lk, &__jule_any_type5),jule::Any(_393213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1dce7c762_isOkForShifting(&((*(_self_))._field_r))))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1c6a32e33:;
	};
	if ((!(_1dce79088_numbersAreCompatibile(_self_, &(_393113_lk), &(_393213_rk))))) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_393113_lk, &__jule_any_type5),jule::Any(_393213_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1c6a35b28:;
			{
				return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046b7d_primBool, });;
			}
		}
		_match_end_1c6a35254:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c6a37630:;
			{
				_1dce787b3_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c6a37740:;
			{
				_1dce78bd1_mod(_self_);
				_1dce787b3_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c6a368b5:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6a36b3a:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce797c5_evalPrim(_1dce7554b_binaryEval* _self_) {
	jule::Ptr<_1dce89b8c_Prim> _398813_prim = _1dce84b54_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1dce8cb29_IsBool(_398813_prim.ptr())) {
			_case_begin_1c6a3949a:;
			{
				return _1dce78373_evalBool(_self_);;
			}
		}
		else if (_1dce8cd8d_IsStr(_398813_prim.ptr())) {
			_case_begin_1c6a39522:;
			{
				return _1dce785d7_evalStr(_self_);;
			}
		}
		_match_end_1c6a393e0:;
	};
	if ((_1dce84b54_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1dce89ebc_Str(_398813_prim.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_24a232d62_IsFloat(_398813_prim.get()._field_Kind)) {
			_case_begin_1c6a3bab8:;
			{
				return _1dce792ec_evalFloat(_self_);;
			}
		}
		else if (_24a232a43_IsInt(_398813_prim.get()._field_Kind)) {
			_case_begin_1c6a3b48b:;
			{
				return _1dce79561_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1c6a3b425:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6a38532:;
	};
}



inline void _1dce799a1_checkSpecialCases(_1dce7554b_binaryEval* _self_) {
	if (((!(_1dce83966_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1dce8348d_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1dce83966_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1dce8348d_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce79c15_evalOp(_1dce7554b_binaryEval* _self_) {
	_1dce799a1_checkSpecialCases(_self_);
	{
		
		if (_1dce83702_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1c6a40847:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if ((_1dce8821d_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a4022b:;
			{
				({
					jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c6a417b0;
			}
		}
		else if ((_1dce8821d_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a417b0:;
			{
				return _1dce766d4_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1dce84b54_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1dce8d102_IsAny(_1dce84b54_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c6a4189d:;
			{
				({
					jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c6a41969;
			}
		}
		else if (_1dce8348d_IsNil((*(_self_))._field_r.get()._field_Kind.ptr())) {
			_case_begin_1c6a41969:;
			{
				({
					jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c6a419d0;
			}
		}
		else if (_1dce8348d_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1c6a419d0:;
			{
				return _1dce76948_evalNil(_self_);;
			}
		}
		else if (((_1dce84b54_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1dce8d102_IsAny(_1dce84b54_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c6a41a46:;
			{
				return _1dce7810e_evalAny(_self_);;
			}
		}
		else if ((_1dce85605_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41aac:;
			{
				({
					jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c6a41b23;
			}
		}
		else if ((_1dce85605_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41b23:;
			{
				return _1dce76e21_evalTypeEnum(_self_);;
			}
		}
		else if ((_1dce85391_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41b89:;
			{
				({
					jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c6a41c00;
			}
		}
		else if ((_1dce85391_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41c00:;
			{
				return _1dce76bac_evalEnum(_self_);;
			}
		}
		else if ((_1dce84db8_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41c66:;
			{
				({
					jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c6a41ccc;
			}
		}
		else if ((_1dce84db8_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41ccc:;
			{
				return _1dce77185_evalSptr(_self_);;
			}
		}
		else if ((_1dce8512c_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41d43:;
			{
				({
					jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c6a41da9;
			}
		}
		else if ((_1dce8512c_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41da9:;
			{
				return _1dce773e9_evalPtr(_self_);;
			}
		}
		else if ((_1dce85869_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41e20:;
			{
				return _1dce7765d_evalArr(_self_);;
			}
		}
		else if ((_1dce85acd_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41e86:;
			{
				return _1dce778c2_evalSlc(_self_);;
			}
		}
		else if ((_1dce8631a_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a41eec:;
			{
				({
					jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1c6a42063;
			}
		}
		else if ((_1dce8631a_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a42063:;
			{
				return _1dce77d9a_evalTrait(_self_);;
			}
		}
		else if ((_1dce860a6_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a420c9:;
			{
				return _1dce77b36_evalStruct(_self_);;
			}
		}
		else if ((_1dce84b54_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6a42140:;
			{
				return _1dce797c5_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1c6a40649:;
			{
				_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1dce827de_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c6a405d3:;
	};
}



inline void _1dce79e8a_evalConst(_1dce7554b_binaryEval* _self_, jule::Ptr<_1dce54cbc_Data>* _407933_d) {
	{
		
		if (((*(_407933_d)) == nullptr) || ((*(_self_))._field_l.get()._field_Model == nullptr) || ((*(_self_))._field_r.get()._field_Model == nullptr)) {
			_case_begin_1c6a518be:;
			{
				return;;
			}
		}
		else if ((!(_1dce5563b_IsConst((*(_self_))._field_l.ptr()))) || (!(_1dce5563b_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1c6a51eb8:;
			{
				(*(_407933_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1c6a517ae:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1c6a53b8a:;
			{
				(*(_407933_d)).get()._field_Constant=static__24a233eb7_NewBool(_24a238b37_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1c6a53c01:;
			{
				(*(_407933_d)).get()._field_Constant=static__24a233eb7_NewBool((!(_24a238b37_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1c6a53c67:;
			{
				(*(_407933_d)).get()._field_Constant=static__24a233eb7_NewBool(_24a238829_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c6a53ccd:;
			{
				(*(_407933_d)).get()._field_Constant=static__24a233eb7_NewBool(_24a23851b_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1c6a53d44:;
			{
				(*(_407933_d)).get()._field_Constant=static__24a233eb7_NewBool(_24a239561_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1c6a53daa:;
			{
				(*(_407933_d)).get()._field_Constant=static__24a233eb7_NewBool(_24a238e45_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1c6a53e21:;
			{
				(*(_407933_d)).get()._field_Constant=static__24a233eb7_NewBool(_24a23986e_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1c6a53e87:;
			{
				(*(_407933_d)).get()._field_Constant=static__24a233eb7_NewBool(_24a239253_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1c6a53eed:;
			{
				_24a239b7c_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_407933_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1c6a54064:;
			{
				_24a239e8a_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_407933_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c6a540ca:;
			{
				_24a23a298_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_407933_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c6a54141:;
			{
				jule::Bool _411817_ok = _24a23a5a6_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_411817_ok)) && (_24a236030_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_407933_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1dce89b8c_Prim> _412321_prim = _1dce84b54_Prim((*(_407933_d)).get()._field_Kind.ptr());;
				{
					
					if (_24a2324b0_IsSigInt(_412321_prim.get()._field_Kind)) {
						_case_begin_1c6a605c0:;
						{
							_24a2362a5_SetI64((*(_407933_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_24a235a57_AsI64((*(_407933_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_24a23279b_IsUnsigInt(_412321_prim.get()._field_Kind)) {
						_case_begin_1c6a60647:;
						{
							_24a23652a_SetU64((*(_407933_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_24a235cbb_AsU64((*(_407933_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1c6a60515:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c6a541b8:;
			{
				jule::Bool _413117_ok = _24a23a8b4_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_413117_ok)) && (_24a236030_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_407933_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1c6a54240:;
			{
				_24a23aed0_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_407933_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c6a542b7:;
			{
				_24a23abc2_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_407933_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c6a5433e:;
			{
				_24a23b2dd_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_407933_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1c6a543b6:;
			{
				_24a23b5eb_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_407933_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1c6a5443d:;
			{
				_24a23b909_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_407933_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1c6a5344d:;
	};
	(*(_407933_d)).get()._field_Model=jule::Any((*(_407933_d)).get()._field_Constant, &__jule_any_type19);
	_1dce7dc08_applyCastModelByEnum(_407933_d, _1dce85391_Enum((*(_407933_d)).get()._field_Kind.ptr()));
}



inline void _1dce7a210_checkData(_1dce7554b_binaryEval* _self_, jule::Ptr<_1dce54cbc_Data>* _415633_d) {
	jule::Ptr<_1dcd74648_FnIns> _415713_f = _1dce85d42_Fn((*(_415633_d)).get()._field_Kind.ptr());;
	if ((((_415713_f != nullptr) && (_415713_f.get()._field_Decl != nullptr)) && _1dcd7216d_IsMethod(_415713_f.get()._field_Decl.ptr()))) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1dce7a3db_checkDatas(_1dce7554b_binaryEval* _self_) {
	_1dce7a210_checkData(_self_, &((*(_self_))._field_l));
	_1dce7a210_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1dce7a661_setModel(_1dce7554b_binaryEval* _self_, jule::Ptr<_1dce54cbc_Data>* _416832_d) {
	if (_1dce5563b_IsConst((*(_416832_d)).ptr())) {
		if (((_1dce5563b_IsConst((*(_self_))._field_l.ptr()) && _1dce5563b_IsConst((*(_self_))._field_r.ptr())) || (((*(_self_))._field_l.get()._field_Model == nullptr) && ((*(_self_))._field_r.get()._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1dce54cbc_Data> _417718_l;;
	jule::Ptr<_1dce54cbc_Data> _417725_r;;
	({
		jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_417718_l = ___jule_assign_arg;
		_417725_r = _1___jule_assign_arg;
	});
	if ((!(_1dce55949_GoodOperand(_417718_l.ptr(), &(_417725_r))))) {
		({
			jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = _417725_r;
			jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = _417718_l;
			_417718_l = ___jule_assign_arg;
			_417725_r = _1___jule_assign_arg;
		});
	};
	(*(_416832_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd63824_BinopExprModel>(_1dcd63824_BinopExprModel{._field_Left=jule::new_ptr<_1dcd6335c_OperandExprModel>(_1dcd6335c_OperandExprModel{._field_Kind=_417718_l.get()._field_Kind, ._field_Model=_417718_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1dcd6335c_OperandExprModel>(_1dcd6335c_OperandExprModel{._field_Kind=_417725_r.get()._field_Kind, ._field_Model=_417725_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1dce7a8d6_postEval(_1dce7554b_binaryEval* _self_, jule::Ptr<_1dce54cbc_Data>* _419532_d) {
	(*(_419532_d)).get()._field_Lvalue=false;
	_1dce7a661_setModel(_self_, _419532_d);
}



inline jule::Ptr<_1dce54cbc_Data> _1dce7ac8d_solveExplicit(_1dce7554b_binaryEval* _self_, jule::Ptr<_1dce54cbc_Data>* _420037_l, jule::Ptr<_1dce54cbc_Data>* _420052_r) {
	({
		jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_420037_l));
		jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_420052_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1dce7a3db_checkDatas(_self_);
	jule::Ptr<_1dce54cbc_Data> _420517_d = _1dce79c15_evalOp(_self_);;
	({
		jule::Ptr<_1dce54cbc_Data> ___jule_assign_arg = (*(_420037_l));
		jule::Ptr<_1dce54cbc_Data> _1___jule_assign_arg = (*(_420052_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1dce79e8a_evalConst(_self_, &(_420517_d));
	if ((_420517_d != nullptr)) {
		_420517_d.get()._field_Mutable=true;
		_1dce7a8d6_postEval(_self_, &(_420517_d));
	};
	return _420517_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dce7b09b_eval(_1dce7554b_binaryEval* _self_, jule::Ptr<_1dcd44816_BinopExpr>* _422028_op) {
	if ((*(_422028_op)).get()._field_Op.get()._field_Kind.equal("=", 1)) {
		_1dce56d46_pushErr((*(_self_))._field_e.ptr(), (*(_422028_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1dce57165_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dce54cbc_Data> _422717_l = _1dce72ee9_evalExpr1((*(_self_))._field_e, (*(_422028_op)).get()._field_Left);;
	if (((_422717_l == nullptr) || (_422717_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1dce82437_TypeKind> _423217_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_422717_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_423217_prefix;
	});;
	jule::Ptr<_1dce54cbc_Data> _423517_r = _1dce72ee9_evalExpr1((*(_self_))._field_e, (*(_422028_op)).get()._field_Right);;
	if (((_423517_r == nullptr) || (_423517_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_422028_op)).get()._field_Op;
	jule::Ptr<_1dce54cbc_Data> _424217_d = _1dce7ac8d_solveExplicit(_self_, &(_422717_l), &(_423517_r));;
	if ((((_424217_d != nullptr) && _422717_l.get()._field_IsRune) && _423517_r.get()._field_IsRune)) {
		_424217_d.get()._field_IsRune=true;
	};
	return _424217_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce7554b_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce80ba5_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce816de_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dce827de_Str(_1dce82437_TypeKind* _self_) {
	if (_1dce8348d_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_1dce83229_Binded(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_BindIdent;
	} else {
		_7417_kind+=_1dce81ec5_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1dce81a74_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1dce82aec_Equal(jule::Ptr<_1dce82437_TypeKind> _self_, jule::Ptr<_1dce82437_TypeKind> _9021_other) {
	if (_1dce8348d_IsNil(_self_.ptr())) {
		return _1dce8348d_IsNil(_9021_other.ptr());;
	};
	if (_1dce83229_Binded(_self_.ptr())) {
		return (_1dce83229_Binded(_9021_other.ptr()) && (_self_.get()._field_BindIdent == _9021_other.get()._field_BindIdent));;
	};
	return _1dce81ec5_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1dce81d82_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1dce83229_Binded(_1dce82437_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1dce8348d_IsNil(_1dce82437_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1dce83702_Void(_1dce82437_TypeKind* _self_) {
	jule::Ptr<_1dce89b8c_Prim> _11013_prim = _1dce84b54_Prim(_self_);;
	return ((_11013_prim != nullptr) && _11013_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _1dce83966_Comparable(_1dce82437_TypeKind* _self_) {
	{
		_1dce82437_TypeKind* _11721__self = (&((*(_self_))));;
		if ((_1dce860a6_Struct(_11721__self) != nullptr)) {
			return _1dce860a6_Struct(_11721__self).get()._field_Comparable;;
		};
		return (((_1dce8657e_Map(_11721__self) == nullptr) && (_1dce85acd_Slc(_11721__self) == nullptr)) && (_1dce85d42_Fn(_11721__self) == nullptr));;
	};
}



inline jule::Bool _1dce83bca_Mutable(_1dce82437_TypeKind* _self_) {
	{
		_1dce82437_TypeKind* _12821__self = (&((*(_self_))));;
		if ((_1dce860a6_Struct(_12821__self) != nullptr)) {
			return _1dce860a6_Struct(_12821__self).get()._field_Mutable;;
		};
		if ((_1dce8631a_Trait(_12821__self) != nullptr)) {
			return _1dce8631a_Trait(_12821__self).get()._field_Mutable;;
		};
		if ((_1dce84b54_Prim(_12821__self) != nullptr)) {
			jule::Ptr<_1dce89b8c_Prim> _13621_p = _1dce84b54_Prim(_12821__self);;
			return _1dce8d102_IsAny(_13621_p.ptr());;
		};
		if ((_1dce85869_Arr(_12821__self) != nullptr)) {
			return _1dce83bca_Mutable(_1dce85869_Arr(_12821__self).get()._field_Elem.ptr());;
		};
		return (((_1dce85acd_Slc(_12821__self) != nullptr) || (_1dce8512c_Ptr(_12821__self) != nullptr)) || (_1dce84db8_Sptr(_12821__self) != nullptr));;
	};
}



inline jule::Bool _1dce83e3e_Ordered(_1dce82437_TypeKind* _self_) {
	{
		_1dce82437_TypeKind* _15121__self = (&((*(_self_))));;
		jule::Ptr<_1dce89b8c_Prim> _15217_prim = _1dce84b54_Prim(_15121__self);;
		if ((_15217_prim != nullptr)) {
			return (_24a233109_IsNum(_15217_prim.get()._field_Kind) || _1dce8cd8d_IsStr(_15217_prim.ptr()));;
		};
		if ((_1dce8512c_Ptr(_15121__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1dcd5e457_StructIns> _15917_s = _1dce860a6_Struct(_15121__self);;
		if ((_15917_s != nullptr)) {
			return ((((_15917_s.get()._field_Operators._field_Gt != nullptr) && (_15917_s.get()._field_Operators._field_GtEq != nullptr)) && (_15917_s.get()._field_Operators._field_Lt != nullptr)) && (_15917_s.get()._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1dcd8644b_Enum> _16617_enm = _1dce85391_Enum(_15121__self);;
		if ((_16617_enm != nullptr)) {
			return _24a233109_IsNum(_1dce827de_Str(_16617_enm.get()._field_Kind.get()._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1dce841a3_NilCompatible(_1dce82437_TypeKind* _self_) {
	{
		_1dce82437_TypeKind* _17721__self = (&((*(_self_))));;
		jule::Ptr<_1dce89b8c_Prim> _17917_prim = _1dce84b54_Prim(_17721__self);;
		if (((_17917_prim != nullptr) && _1dce8d102_IsAny(_17917_prim.ptr()))) {
			return true;;
		};
		return (((((((_1dce8348d_IsNil(_17721__self) || (_1dce85d42_Fn(_17721__self) != nullptr)) || (_1dce84db8_Sptr(_17721__self) != nullptr)) || (_1dce8512c_Ptr(_17721__self) != nullptr)) || (_1dce8631a_Trait(_17721__self) != nullptr)) || (_1dce85acd_Slc(_17721__self) != nullptr)) || (_1dce8657e_Map(_17721__self) != nullptr)) || (_1dce85605_TypeEnum(_17721__self) != nullptr));;
	};
}



inline jule::Bool _1dce84417_PerformsRC(_1dce82437_TypeKind* _self_) {
	{
		_1dce82437_TypeKind* _19821__self = (&((*(_self_))));;
		jule::Ptr<_1dce89b8c_Prim> _19917_prim = _1dce84b54_Prim(_19821__self);;
		if ((_19917_prim != nullptr)) {
			return _1dce8d102_IsAny(_19917_prim.ptr());;
		};
		return (((_1dce84db8_Sptr(_19821__self) != nullptr) || (_1dce85acd_Slc(_19821__self) != nullptr)) || (_1dce8631a_Trait(_19821__self) != nullptr));;
	};
}



inline jule::Bool _1dce8467b_SupportsCloning(_1dce82437_TypeKind* _self_) {
	{
		_1dce82437_TypeKind* _21021__self = (&((*(_self_))));;
		{
			
			if ((_1dce84b54_Prim(_21021__self) != nullptr)) {
				_case_begin_1c6a9d6eb:;
				{
					return (!(_1dce8d102_IsAny(_1dce84b54_Prim(_21021__self).ptr())));;
				}
			}
			else if ((_1dce85391_Enum(_21021__self) != nullptr)) {
				_case_begin_1c6a9e147:;
				{
					return true;;
				}
			}
			else if ((_1dce85d42_Fn(_21021__self) != nullptr)) {
				_case_begin_1c6a9e1ad:;
				{
					return true;;
				}
			}
			else if ((_1dce8512c_Ptr(_21021__self) != nullptr)) {
				_case_begin_1c6a9dbb3:;
				{
					return true;;
				}
			}
			else if ((_1dce85acd_Slc(_21021__self) != nullptr)) {
				_case_begin_1c6a9dc29:;
				{
					return _1dce8467b_SupportsCloning(_1dce85acd_Slc(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1dce8657e_Map(_21021__self) != nullptr)) {
				_case_begin_1c6a9dc90:;
				{
					jule::Ptr<_1dce90401_Map> _22321_m = _1dce8657e_Map(_21021__self);;
					return (_1dce8467b_SupportsCloning(_22321_m.get()._field_Key.ptr()) && _1dce8467b_SupportsCloning(_22321_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1dce85869_Arr(_21021__self) != nullptr)) {
				_case_begin_1c6a9dd06:;
				{
					return _1dce8467b_SupportsCloning(_1dce85869_Arr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1dce84db8_Sptr(_21021__self) != nullptr)) {
				_case_begin_1c6a9e301:;
				{
					return _1dce8467b_SupportsCloning(_1dce84db8_Sptr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1dce860a6_Struct(_21021__self) != nullptr)) {
				_case_begin_1c6a9e367:;
				{
					jule::Ptr<_1dcd5e457_StructIns> _23025_s = _1dce860a6_Struct(_21021__self);;
					return (((_23025_s.get()._field_Decl != nullptr) && (!(_23025_s.get()._field_Decl.get()._field_Binded))) && _1dcd5ce6c_IsDerives(_23025_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1c6a9db4c:;
				{
					return false;;
				}
			}
			_match_end_1c6a9dad6:;
		};
	};
}



inline jule::Bool _1dce848e0_Variadicable(_1dce82437_TypeKind* _self_) {
	{
		_1dce82437_TypeKind* _24121__self = (&((*(_self_))));;
		return (_1dce85acd_Slc(_24121__self) != nullptr);;
	};
}



inline jule::Ptr<_1dce89b8c_Prim> _1dce84b54_Prim(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1c6aa5c20:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dce89b8c_Prim>(20);;
			}
		}
		else {
			_case_begin_1c6a93ceb:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6a93c96:;
	};
}



inline jule::Ptr<_1dce8d3dd_Sptr> _1dce84db8_Sptr(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1c6aa5ea6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dce8d3dd_Sptr>(21);;
			}
		}
		else {
			_case_begin_1c6aa6605:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aa65a0:;
	};
}



inline jule::Ptr<_1dce91952_Ptr> _1dce8512c_Ptr(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1c6aa668d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dce91952_Ptr>(26);;
			}
		}
		else {
			_case_begin_1c6aa7309:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aa72a4:;
	};
}



inline jule::Ptr<_1dcd8644b_Enum> _1dce85391_Enum(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c6aa7392:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd8644b_Enum>(3);;
			}
		}
		else {
			_case_begin_1c6aa7eec:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aa7e97:;
	};
}



inline jule::Ptr<_1dcd87a46_TypeEnum> _1dce85605_TypeEnum(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1c6aa8085:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd87a46_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1c6aa8be0:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aa8b8a:;
	};
}



inline jule::Ptr<_1dce90ee5_Arr> _1dce85869_Arr(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1c6aa8c78:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dce90ee5_Arr>(25);;
			}
		}
		else {
			_case_begin_1c6aa98d3:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aa987d:;
	};
}



inline jule::Ptr<_1dce8dd4a_Slc> _1dce85acd_Slc(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1c6aa996b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dce8dd4a_Slc>(22);;
			}
		}
		else {
			_case_begin_1c6aaa5c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aaa571:;
	};
}



inline jule::Ptr<_1dcd74648_FnIns> _1dce85d42_Fn(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1c6aaa65e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd74648_FnIns>(1);;
			}
		}
		else {
			_case_begin_1c6aab2b9:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aab264:;
	};
}



inline jule::Ptr<_1dcd5e457_StructIns> _1dce860a6_Struct(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c6aab352:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd5e457_StructIns>(0);;
			}
		}
		else {
			_case_begin_1c6aabeac:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aabe57:;
	};
}



inline jule::Ptr<_1dcd83bb8_Trait> _1dce8631a_Trait(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1c6aac045:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd83bb8_Trait>(2);;
			}
		}
		else {
			_case_begin_1c6aacba0:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aacb4a:;
	};
}



inline jule::Ptr<_1dce90401_Map> _1dce8657e_Map(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1c6aacc38:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dce90401_Map>(24);;
			}
		}
		else {
			_case_begin_1c6aad893:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aad83d:;
	};
}



inline jule::Ptr<_1dce8e950_Tuple> _1dce867e3_Tup(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1c6aad92b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dce8e950_Tuple>(23);;
			}
		}
		else {
			_case_begin_1c6aae586:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aae531:;
	};
}



inline jule::Bool _1dce86a57_comptime(_1dce82437_TypeKind* _self_) {
	return ((((((((((((((_1dce87ea9_comptimeTypeInfos(_self_) != nullptr) || (_1dce8821d_comptimeTypeInfo(_self_) != nullptr)) || (_1dce86cbb_comptimeStructFields(_self_) != nullptr)) || (_1dce87030_comptimeStructField(_self_) != nullptr)) || (_1dce87294_comptimeEnumFields(_self_) != nullptr)) || (_1dce87508_comptimeEnumField(_self_) != nullptr)) || (_1dce88482_comptimeStatics(_self_) != nullptr)) || (_1dce886e6_comptimeStatic(_self_) != nullptr)) || (_1dce8776c_comptimeParams(_self_) != nullptr)) || (_1dce879d1_comptimeParam(_self_) != nullptr)) || (_1dce87c45_comptimeRange(_self_) != nullptr)) || (_1dce8895a_comptimeValue(_self_) != nullptr)) || (_1dce88e33_comptimeFiles(_self_) != nullptr)) || (_1dce88bbe_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1dcd8c1bb_comptimeStructFields> _1dce86cbb_comptimeStructFields(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1c6ab01e1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd8c1bb_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1c6ab4514:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6ab436b:;
	};
}



inline jule::Ptr<_1dcd8a692_comptimeStructField> _1dce87030_comptimeStructField(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1c6ab45d0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd8a692_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1c6ab4db6:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6ab4d61:;
	};
}



inline jule::Ptr<_1dcd928b9_comptimeEnumFields> _1dce87294_comptimeEnumFields(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1c6ab4e4e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd928b9_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1c6ab5aa9:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6ab5a54:;
	};
}



inline jule::Ptr<_1dcd91698_comptimeEnumField> _1dce87508_comptimeEnumField(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1c6ab5b42:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd91698_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1c6ab679c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6ab6747:;
	};
}



inline jule::Ptr<_1dcd95eb6_comptimeParams> _1dce8776c_comptimeParams(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1c6ab6835:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd95eb6_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1c6ab7490:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6ab743a:;
	};
}



inline jule::Ptr<_1dcd93e1a_comptimeParam> _1dce879d1_comptimeParam(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1c6ab7528:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd93e1a_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1c6ab8183:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6ab812d:;
	};
}



inline jule::Ptr<_1dcd89b9c_comptimeRange> _1dce87c45_comptimeRange(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1c6ab821b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd89b9c_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1c6ab8d76:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6ab8d21:;
	};
}



inline jule::Ptr<_1dcd9747e_comptimeTypeInfos> _1dce87ea9_comptimeTypeInfos(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1c6ab8e0e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd9747e_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1c6ab9a69:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6ab9a14:;
	};
}



inline jule::Ptr<_1dcd98947_comptimeTypeInfo> _1dce8821d_comptimeTypeInfo(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1c6ab9b02:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd98947_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1c6aba75c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6aba707:;
	};
}



inline jule::Ptr<_1dcd90257_comptimeStatics> _1dce88482_comptimeStatics(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1c6aba7e5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd90257_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1c6abb450:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6abb3ea:;
	};
}



inline jule::Ptr<_1dcd8d695_comptimeStatic> _1dce886e6_comptimeStatic(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1c6abb4d8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd8d695_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1c6abc143:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6abc0dd:;
	};
}



inline jule::Ptr<_1dcd9e442_comptimeValue> _1dce8895a_comptimeValue(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1c6abc1cb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcd9e442_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1c6abcd36:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6abccd1:;
	};
}



inline jule::Ptr<_1dcda3006_comptimeFile> _1dce88bbe_comptimeFile(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1c6abcdbe:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcda3006_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1c6abda29:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6abd9c4:;
	};
}



inline jule::Ptr<_1dcda1a3d_comptimeFiles> _1dce88e33_comptimeFiles(_1dce82437_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1c6abdab2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1dcda1a3d_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1c6abe71c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6abe6b7:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dce82437_TypeKind _Src) {
	_Stream << _1dce827de_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1dce8964d_checked(_1dce892da_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce892da_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dce89ebc_Str(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1dce8a2ca_Equal(jule::Ptr<_1dce89b8c_Prim> _self_, jule::Ptr<_1dce82437_TypeKind> _53821_other) {
	jule::Ptr<_1dce89b8c_Prim> _53913_prim = _1dce84b54_Prim(_53821_other.ptr());;
	if ((_53913_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _53913_prim.get()._field_Kind);;
}



inline jule::Bool _1dce8a74d_IsConstraint(_1dce89b8c_Prim* _self_) {
	return ((((!(_1dce8cd8d_IsStr(_self_))) && (!(_1dce8d102_IsAny(_self_)))) && (!(_1dce8cb29_IsBool(_self_)))) && (!(_24a233109_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1dce8a9b2_IsI8(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1dce8ac26_IsI16(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1dce8ae8a_IsI32(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1dce8b1ee_IsI64(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1dce8b463_IsU8(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1dce8b6c7_IsU16(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1dce8b93b_IsU32(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1dce8bba0_IsU64(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1dce8be14_IsF32(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1dce8c178_IsF64(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1dce8c3dc_IsInt(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1dce8c651_IsUint(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1dce8c8b5_IsUintptr(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1dce8cb29_IsBool(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1dce8cd8d_IsStr(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1dce8d102_IsAny(_1dce89b8c_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce89b8c_Prim _Src) {
	_Stream << _1dce89ebc_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dce8d751_Str(_1dce8d3dd_Sptr* _self_) {
	return (jule::Str("&", 1) + _1dce827de_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1dce8da5e_Equal(jule::Ptr<_1dce8d3dd_Sptr> _self_, jule::Ptr<_1dce82437_TypeKind> _61521_other) {
	jule::Ptr<_1dce8d3dd_Sptr> _61613_sptr = _1dce84db8_Sptr(_61521_other.ptr());;
	if ((_61613_sptr == nullptr)) {
		return false;;
	};
	return _1dce82aec_Equal(_self_.get()._field_Elem, _61613_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce8d3dd_Sptr _Src) {
	_Stream << _1dce8d751_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dce8e2bd_Str(_1dce8dd4a_Slc* _self_) {
	return (jule::Str("[]", 2) + _1dce827de_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1dce8e5cb_Equal(jule::Ptr<_1dce8dd4a_Slc> _self_, jule::Ptr<_1dce82437_TypeKind> _63421_other) {
	jule::Ptr<_1dce8dd4a_Slc> _63513_slc = _1dce85acd_Slc(_63421_other.ptr());;
	if ((_63513_slc == nullptr)) {
		return false;;
	};
	return _1dce82aec_Equal(_self_.get()._field_Elem, _63513_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce8dd4a_Slc _Src) {
	_Stream << _1dce8e2bd_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dce8ecb3_Str(_1dce8e950_Tuple* _self_) {
	jule::Str _65117_s = jule::Str("(", 1);;
	_65117_s+=_1dce827de_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c6acd929:;
		if (it != expr_end) {
			jule::Ptr<_1dce82437_TypeKind> *_65316_t = it;
			{
				(_65117_s).append(",", 1);
				_65117_s+=_1dce827de_Str((*(_65316_t)).ptr());
			}
			_iter_next_1c6acd929:;
			++it;
			goto _iter_begin_1c6acd929;
		}
		_iter_end_1c6acd929:;
	};
	(_65117_s).append(")", 1);
	return _65117_s;;
}



inline jule::Bool _1dce900c1_Equal(jule::Ptr<_1dce8e950_Tuple> _self_, jule::Ptr<_1dce82437_TypeKind> _66221_other) {
	jule::Ptr<_1dce8e950_Tuple> _66313_tup = _1dce867e3_Tup(_66221_other.ptr());;
	if ((_66313_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _66313_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _67017_i = 0LL;;
	for (; (_67017_i < _self_.get()._field_Types.len()); (_67017_i)++) {
		{
			if ((!(_1dce82aec_Equal(_self_.get()._field_Types[_67017_i], _66313_tup.get()._field_Types[_67017_i])))) {
				return false;;
			};
		}
	_iter_next_1c6ad1036:;
	}
	_iter_end_1c6ad1036:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce8e950_Tuple _Src) {
	_Stream << _1dce8ecb3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dce90764_Str(_1dce90401_Map* _self_) {
	jule::Str _69017_s = jule::Str("map[", 4);;
	_69017_s+=_1dce827de_Str((*(_self_))._field_Key.ptr());
	(_69017_s).append("]", 1);
	_69017_s+=_1dce827de_Str((*(_self_))._field_Val.ptr());
	return _69017_s;;
}



inline jule::Bool _1dce90a72_Equal(jule::Ptr<_1dce90401_Map> _self_, jule::Ptr<_1dce82437_TypeKind> _69821_other) {
	jule::Ptr<_1dce90401_Map> _69913_m = _1dce8657e_Map(_69821_other.ptr());;
	if ((_69913_m == nullptr)) {
		return false;;
	};
	return (_1dce82aec_Equal(_self_.get()._field_Key, _69913_m.get()._field_Key) && _1dce82aec_Equal(_self_.get()._field_Val, _69913_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce90401_Map _Src) {
	_Stream << _1dce90764_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dce91358_Str(_1dce90ee5_Arr* _self_) {
	jule::Str _71717_s = jule::Str("[", 1);;
	_71717_s+=_24a223b77_Itoa((*(_self_))._field_N);
	(_71717_s).append("]", 1);
	_71717_s+=_1dce827de_Str((*(_self_))._field_Elem.ptr());
	return _71717_s;;
}



inline jule::Bool _1dce91666_Equal(jule::Ptr<_1dce90ee5_Arr> _self_, jule::Ptr<_1dce82437_TypeKind> _72521_other) {
	jule::Ptr<_1dce90ee5_Arr> _72613_arr = _1dce85869_Arr(_72521_other.ptr());;
	if ((_72613_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _72613_arr.get()._field_N) && _1dce82aec_Equal(_self_.get()._field_Elem, _72613_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce90ee5_Arr _Src) {
	_Stream << _1dce91358_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dce91cb5_Str(_1dce91952_Ptr* _self_) {
	if (_1dce92425_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1dce827de_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1dce920c3_Equal(jule::Ptr<_1dce91952_Ptr> _self_, jule::Ptr<_1dce82437_TypeKind> _74921_other) {
	jule::Ptr<_1dce91952_Ptr> _75013_ptr = _1dce8512c_Ptr(_74921_other.ptr());;
	if ((_75013_ptr == nullptr)) {
		return false;;
	};
	return _1dce82aec_Equal(_self_.get()._field_Elem, _75013_ptr.get()._field_Elem);;
}



inline jule::Bool _1dce92425_IsUnsafe(_1dce91952_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce91952_Ptr _Src) {
	_Stream << _1dce91cb5_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce92898_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1dce93e71_pushErr(_1dce93778_typeChecker* _self_, jule::Ptr<_23ae26b42_Token> _83526_token, jule::Str _83541_fmt, jule::Slice<jule::Any> _83554_args) {
	_1dcdd8338_pushErr((*(_self_))._field_s.ptr(), _83526_token, _83541_fmt, _83554_args);
}



inline void _1dce9414c_allowBuiltin(_1dce93778_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1dce94328_disallowBuiltin(_1dce93778_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1c6adc77e_pushReference(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd5e457_StructIns>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1c6bb1237_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_1dcd7821d_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type9));
}

inline void _1c6ae03a8_pushReference(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd83bb8_Trait>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1c6ae1ee2_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_1dcd7821d_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type10));
}



inline void _1dce94823_pushReferenceByKind(_1dce93778_typeChecker* _self_, jule::Ptr<_1dce82437_TypeKind>* _85743_k) {
	{
		
		if ((_1dce860a6_Struct((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_1c6adb4d6:;
			{
				jule::Ptr<_1dcd5e457_StructIns> _86021_t = _1dce860a6_Struct((*(_85743_k)).ptr());;
				_1c6adc77e_pushReference(_self_, &(_86021_t));
			}
		}
		else if ((_1dce8631a_Trait((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_1c6adb55d:;
			{
				jule::Ptr<_1dcd83bb8_Trait> _86321_t = _1dce8631a_Trait((*(_85743_k)).ptr());;
				_1c6ae03a8_pushReference(_self_, &(_86321_t));
			}
		}
		_match_end_1c6adb3c6:;
	};
}



inline void _1dce94bdb_pushCycleError(_1dce93778_typeChecker* _self_, jule::Any _86829_def1, jule::Any _86840_def2, jule::Str* _86856_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _87013_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _87028_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_87028_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1c6ae4a1c:;
				{
					return (*(_87028_def)).cast_ptr<_1dce816de_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1c6ae50c2:;
				{
					return (*(_87028_def)).cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1c6ae4b93:;
				{
					return jule::Str();;
				}
			}
			_match_end_1c6ae4ab6:;
		};
	});;
	jule::Str _88013_def1Ident = _87013_getIdent(&(_86829_def1));;
	jule::Str _88113_def2Ident = _87013_getIdent(&(_86840_def2));;
	jule::Str _88213_refersTo = _23aa28c94_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_88013_def1Ident, &__jule_any_type5),jule::Any(_88113_def2Ident, &__jule_any_type5)}));;
	((*(_86856_message))).buffer.insert(0, (((_23a986372_Repeat(jule::Str(" ", 1), 7LL) + _88213_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1dce95093_checkCrossCycle(_1dce93778_typeChecker* _self_, jule::Any _88630_decl, jule::Str* _88646_message) {
	{
		auto &_match_expr{ _88630_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c6ae7426:;
			{
				jule::Ptr<_1dce816de_TypeAlias> _88917_ta = _88630_decl.cast_ptr<_1dce816de_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_88917_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6ae7da5:;
					if (it != expr_end) {
						jule::Any *_89020_d = it;
						{
							{
								
								if (((*(_89020_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1c6ae89ee:;
									{
										_1dce94bdb_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								else if ((!(_1dce95093_checkCrossCycle(_self_, (*(_89020_d)), _88646_message)))) {
									_case_begin_1c6ae8a76:;
									{
										_1dce94bdb_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								_match_end_1c6ae88de:;
							};
						}
						_iter_next_1c6ae7da5:;
						++it;
						goto _iter_begin_1c6ae7da5;
					}
					_iter_end_1c6ae7da5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c6ae748c:;
			{
				jule::Ptr<_1dcd5b641_Struct> _90117_s = _88630_decl.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_90117_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6ae8724:;
					if (it != expr_end) {
						jule::Ptr<_1dcd5b641_Struct> *_90220_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_90220_d))))) {
									_case_begin_1c6aeaa45:;
									{
										_1dce94bdb_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								else if ((!(_1dce95093_checkCrossCycle(_self_, jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message)))) {
									_case_begin_1c6aeaabc:;
									{
										_1dce94bdb_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								_match_end_1c6aea935:;
							};
						}
						_iter_next_1c6ae8724:;
						++it;
						goto _iter_begin_1c6ae8724;
					}
					_iter_end_1c6ae8724:;
				};
			}
		}
		_match_end_1c6ae73c1:;
	};
	return true;;
}



inline jule::Bool _1dce9544a_checkIllegalCycles(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3c446_IdentTypeDecl>* _92038_ident, jule::Any _92065_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92065_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c6aec959:;
			{
				if (_92065_decl.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c6aec9d1:;
			{
				if (_92065_decl.cast_ptr<_1dce816de_TypeAlias>(&__jule_any_type67).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c6aec519:;
	};
	if ((_92065_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1dce93e71_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _94317_message = jule::Str();;
	if ((!(_1dce95093_checkCrossCycle(_self_, _92065_decl, &(_94317_message))))) {
		jule::Str _94621_errMsg = _94317_message;;
		_94317_message=jule::Str();
		_1dce94bdb_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _92065_decl, &(_94317_message));
		_94621_errMsg+=_94317_message;
		_1dce93e71_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_94621_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c6aeec8b:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*(_self_))._field_referencer.get()._field_refs; __jule_push_dest->push(_92065_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c6b013db:;
			{
				{
					auto &_match_expr{ _92065_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1c6b01b39:;
						{
							jule::Ptr<_1dcd5b641_Struct> _96225_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66);;
							{ jule::Slice<jule::Ptr<_1dcd5b641_Struct>> &__jule_push_dest = _96225_s.get()._field_Depends; __jule_push_dest.push(_92065_decl.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66)); };
						}
					}
					_match_end_1c6b01a4b:;
				};
			}
		}
		_match_end_1c6b01298:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1dce81ec5_Kind> _1dce95802_fromTypeAlias(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3c446_IdentTypeDecl>* _97033_decl, jule::Ptr<_1dce816de_TypeAlias>* _97060_ta) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_97060_ta)).get()._field_Public, (*(_97060_ta)).get()._field_Token)))) {
		_1dce93e71_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_97060_ta)).get()._field_Used=true;
	if (((*(_97033_decl)).get()._field_Generics.len() > 0LL)) {
		_1dce93e71_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6b05bb5:;
			if (it != expr_end) {
				jule::Ptr<_1dce816de_TypeAlias> _98720_bg = *it;
				{
					if (((_98720_bg == (*(_97060_ta))) || (((*(_97060_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1dce82aec_Equal((*(_97060_ta)).get()._field_Kind.get()._field_Kind, _98720_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1c6b05bb5;
					};
				}
				_iter_next_1c6b05bb5:;
				++it;
				goto _iter_begin_1c6b05bb5;
			}
			_iter_end_1c6b05bb5:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6b07733:;
			if (it != expr_end) {
				jule::Ptr<_1dce816de_TypeAlias> _99820_bg = *it;
				{
					if ((_99820_bg == (*(_97060_ta)))) {
						_1dce93e71_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_97060_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6b08c2e:;
						if (it != expr_end) {
							jule::Ptr<_1dce816de_TypeAlias> _100324_dg = *it;
							{
								if ((_99820_bg == _100324_dg)) {
									_1dce93e71_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1c6b08c2e:;
							++it;
							goto _iter_begin_1c6b08c2e;
						}
						_iter_end_1c6b08c2e:;
					};
				}
				_iter_next_1c6b07733:;
				++it;
				goto _iter_begin_1c6b07733;
			}
			_iter_end_1c6b07733:;
		};
	};
	jule::Bool _101217_ok = _1dce9544a_checkIllegalCycles(_self_, _97033_decl, jule::Any((*(_97060_ta)), &__jule_any_type67));;
	if ((!(_101217_ok))) {
		return nullptr;;
	};
	if (((*(_97060_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_101217_ok=_1dcde38a4_checkTypeAliasDeclKind((*(_self_))._field_s, _97060_ta, (*(_self_))._field_lookup);
		if ((!(_101217_ok))) {
			return nullptr;;
		};
	};
	if (((*(_97060_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> &__jule_push_dest = (*(_self_))._field_ownerAlias.get()._field_Generics; __jule_push_dest.push((*(_97060_ta))); };
	};
	jule::Ptr<_1dce82437_TypeKind> _103117_tk = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Generic=(*(_97060_ta)).get()._field_Generic, ._field_Kind=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1dce94823_pushReferenceByKind(_self_, &(_103117_tk));
	if ((*(_97060_ta)).get()._field_Binded) {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Ident;
	} else {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
	};
	return jule::Trait<_1dce81ec5_Kind>(_103117_tk, 19);;
}



inline jule::Ptr<_1dcd8644b_Enum> _1dce95ba9_fromEnum(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3c446_IdentTypeDecl>* _104428_decl, jule::Ptr<_1dcd8644b_Enum>* _104455_e) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_104455_e)).get()._field_Public, (*(_104455_e)).get()._field_Token)))) {
		_1dce93e71_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_104428_decl)).get()._field_Generics.len() > 0LL)) {
		_1dce93e71_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_104455_e));;
}



inline jule::Ptr<_1dcd87a46_TypeEnum> _1dce96061_fromTypeEnum(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3c446_IdentTypeDecl>* _105632_decl, jule::Ptr<_1dcd87a46_TypeEnum>* _105659_e) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_105659_e)).get()._field_Public, (*(_105659_e)).get()._field_Token)))) {
		_1dce93e71_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_105632_decl)).get()._field_Generics.len() > 0LL)) {
		_1dce93e71_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_105659_e));;
}



inline jule::Ptr<_1dcd83bb8_Trait> _1dce96418_fromTrait(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3c446_IdentTypeDecl>* _106829_decl, jule::Ptr<_1dcd83bb8_Trait>* _106856_t) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_106856_t)).get()._field_Public, (*(_106856_t)).get()._field_Token)))) {
		_1dce93e71_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_106829_decl)).get()._field_Generics.len() > 0LL)) {
		_1dce93e71_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1c6ae03a8_pushReference(_self_, _106856_t);
	return (*(_106856_t));;
}



inline jule::Bool _1dce967c0_checkStructIns(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd5e457_StructIns>* _108138_ins, jule::Ptr<_23ae26b42_Token>* _108160_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_108138_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_108138_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_108138_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1dcdee717_precheckStructIns((*(_self_))._field_s, _108138_ins, (*(_108160_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_108138_ins)).get()._field_Generics.len() > 0LL)) {
		_1dce00185_checkStructInsOperators((*(_self_))._field_s, (*(_108138_ins)));
		_1dcdee98c_checkStructIns((*(_self_))._field_s, _108138_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1dce96a67_appendUsedStructReference(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd5b641_Struct>* _110249_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c6b1803a:;
			{
				jule::Ptr<_1dcd5b641_Struct> _110821_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1dcd5b641_Struct>(&__jule_any_type66);;
				if ((!(_1dcd5d27a_IsUses(_110821_refS.ptr(), (*(_110249_s)))))) {
					{ jule::Slice<jule::Ptr<_1dcd5b641_Struct>> &__jule_push_dest = _110821_refS.get()._field_Uses; __jule_push_dest.push((*(_110249_s))); };
				};
			}
		}
		_match_end_1c6b17ed5:;
	};
}



inline jule::Ptr<_1dcd5e457_StructIns> _1dce96e30_buildStructInstance(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3c446_IdentTypeDecl>* _111543_decl, jule::Ptr<_1dcd5b641_Struct>* _111570_s) {
	jule::Ptr<_1dce92898_referencer> _111717_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> _111917_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1c6b1ab0e:;
				{
					jule::Ptr<_1dcdb5898_scopeChecker> _112625_sc = (*(_self_))._field_lookup.cast_ptr<_1dcdb5898_scopeChecker>(0);;
					jule::Ptr<_1dcdb5898_scopeChecker> _112725_hard = _1dcdb8934_getHardRoot(_112625_sc);;
					if (((_112725_hard.get()._field_owner.get()._field_Owner == nullptr) || (_112725_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_111570_s))))) {
						goto _match_end_1c6b1aaa9;
					};
					jule::I64 _113121_n = (_112725_hard.get()._field_owner.get()._field_Generics.len() + _112725_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_112725_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _113121_n);
				}
			}
			_match_end_1c6b1aaa9:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1dcea0763_Lookup> _114117_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1dcd5e457_StructIns> _114517_ins = _1dcd5baa3_instance((*(_111570_s)));;
	_114517_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1dce80ba5_InsGeneric>>::alloc(0LL, (*(_111543_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_111543_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b1e22d:;
		if (it != expr_end) {
			jule::Ptr<_1dcd3bd80_TypeDecl> _114721_g = *it;
			{
				jule::Ptr<_1dce82437_TypeKind> _114821_kind = _1dce9a3b7_build(_self_, &(_114721_g.get()._field_Kind));;
				if ((_114821_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1dce80ba5_InsGeneric>> &__jule_push_dest = _114517_ins.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_1dce80ba5_InsGeneric>(_1dce80ba5_InsGeneric{._field_Kind=_114821_kind, })); };
			}
			_iter_next_1c6b1e22d:;
			++it;
			goto _iter_begin_1c6b1e22d;
		}
		_iter_end_1c6b1e22d:;
	};
	(*(_self_))._field_lookup=_114117_lookup;
	(*(_self_))._field_bannedGenerics=_111917_bannedGenerics;
	(*(_self_))._field_referencer=_111717_referencer;
	return _114517_ins;;
}



inline jule::Ptr<_1dcd5e457_StructIns> _1dce972d7_fromStruct(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3c446_IdentTypeDecl>* _116334_decl, jule::Ptr<_1dcd5b641_Struct>* _116361_s) {
	if ((!(_1dcdd8a0e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_116361_s)).get()._field_Public, (*(_116361_s)).get()._field_Token)))) {
		_1dce93e71_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_116334_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_116334_decl)).get()._field_Generics.len() > 0LL)) {
			_1dce93e71_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1dcd5e457_StructIns>(_1dcd5e457_StructIns{._field_Decl=(*(_116361_s)), });;
	};
	jule::Bool _118117_ok = _1dce9544a_checkIllegalCycles(_self_, _116334_decl, jule::Any((*(_116361_s)), &__jule_any_type66));;
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	_1dce96a67_appendUsedStructReference(_self_, _116361_s);
	jule::Ptr<_1dcd5e457_StructIns> _118717_ins = _1dce96e30_buildStructInstance(_self_, _116334_decl, _116361_s);;
	if ((_118717_ins == nullptr)) {
		return nullptr;;
	};
	_118117_ok=_1dcdd96d0_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>(_118717_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_118717_ins.get()._field_Generics.len()), (*(_116334_decl)).get()._field_Token);
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _119717_existInstance = _1dcd5bd7d_appendInstance((*(_116361_s)).ptr(), &(_118717_ins));;
	if ((_119717_existInstance != nullptr)) {
		if ((!(_1dcde2056_checkConstraintsStruct((*(_self_))._field_s, &(_118717_ins), &((*(_116334_decl)).get()._field_Token), _119717_existInstance)))) {
			return nullptr;;
		};
		_1c6adc77e_pushReference(_self_, &(_119717_existInstance));
		return _119717_existInstance;;
	};
	if ((!(_1dce967c0_checkStructIns(_self_, &(_118717_ins), &((*(_116334_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1c6adc77e_pushReference(_self_, &(_118717_ins));
	return _118717_ins;;
}



inline jule::Trait<_1dce81ec5_Kind> _1dce975e5_getDef(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3c446_IdentTypeDecl>* _122130_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b28b2d:;
		if (it != expr_end) {
			jule::Ptr<_1dcd48d26_GenericDecl> _122216_g = *it;
			{
				if ((_122216_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					return jule::Trait<_1dce81ec5_Kind>(_1dce9cdd1_buildPrimType(_122216_g.get()._field_Ident), 20);;
				};
			}
			_iter_next_1c6b28b2d:;
			++it;
			goto _iter_begin_1c6b28b2d;
		}
		_iter_end_1c6b28b2d:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b29425:;
		if (it != expr_end) {
			jule::Ptr<_1dce816de_TypeAlias> _122821_g = *it;
			{
				if ((_122821_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					if (((*(_122130_decl)).get()._field_Generics.len() > 0LL)) {
						_1dce93e71_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1dcd5e457_StructIns> _123425_st = _1dce860a6_Struct(_122821_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_123425_st != nullptr)) {
						jule::Bool _123625_ok = _1dce9544a_checkIllegalCycles(_self_, _122130_decl, jule::Any(_123425_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_123625_ok))) {
							return nullptr;;
						};
					};
					return _122821_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1c6b29425:;
			++it;
			goto _iter_begin_1c6b29425;
		}
		_iter_end_1c6b29425:;
	};
	if ((!((*(_122130_decl)).get()._field_Binded))) {
		jule::Ptr<_1dcd8644b_Enum> _124621_e = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dcea0312_FindEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_124621_e != nullptr)) {
			return jule::Trait<_1dce81ec5_Kind>(_1dce95ba9_fromEnum(_self_, _122130_decl, &(_124621_e)), 3);;
		};
		jule::Ptr<_1dcd87a46_TypeEnum> _125121_te = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dcea0620_FindTypeEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125121_te != nullptr)) {
			return jule::Trait<_1dce81ec5_Kind>(_1dce96061_fromTypeEnum(_self_, _122130_decl, &(_125121_te)), 4);;
		};
		jule::Ptr<_1dcd83bb8_Trait> _125621_t = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dcea0004_FindTrait((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125621_t != nullptr)) {
			return jule::Trait<_1dce81ec5_Kind>(_1dce96418_fromTrait(_self_, _122130_decl, &(_125621_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1dce93e71_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcd5b641_Struct> _126517_s = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dce9e83e_FindStruct((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if ((_126517_s != nullptr)) {
		return jule::Trait<_1dce81ec5_Kind>(_1dce972d7_fromStruct(_self_, _122130_decl, &(_126517_s)), 0);;
	};
	jule::Ptr<_1dce816de_TypeAlias> _127017_ta = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dce9e487_FindTypeAlias((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if (((_127017_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_127017_ta=_1dd0497b8_findBuiltinTypeAlias((*(_122130_decl)).get()._field_Ident);
	};
	if ((_127017_ta != nullptr)) {
		return _1dce95802_fromTypeAlias(_self_, _122130_decl, &(_127017_ta));;
	};
	_1dce93e71_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1dce81ec5_Kind> _1dce97903_buildIdent(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3c446_IdentTypeDecl> _128233_decl) {
	return _1dce975e5_getDef(_self_, &(_128233_decl));;
}



inline jule::Trait<_1dce81ec5_Kind> _1dce97c11_buildSubIdent(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3c732_SubIdentTypeDecl> _128636_decl) {
	jule::Trait<_1dce81ec5_Kind> _128717_ident = _1dce97903_buildIdent(_self_, _128636_decl.get()._field_Idents[0LL]);;
	if ((_128717_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _128717_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1c6b351de:;
			{
				goto _match_end_1c6b34ebe;
			}
		}
		else {
			_case_begin_1c6b34c16:;
			{
				_1dce93e71_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c6b34ebe:;
	};
	jule::Ptr<_1dcd87a46_TypeEnum> _129817_t = _128717_ident.cast_ptr<_1dcd87a46_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1dcd3c446_IdentTypeDecl>> _129917_idents = _128636_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_129917_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b36564:;
		if (it != expr_end) {
			jule::I64 _130013_i = it - expr->begin();
			jule::Ptr<_1dcd3c446_IdentTypeDecl> _130016_id = *it;
			{
				jule::Ptr<_1dcd874b3_TypeEnumItem> _130121_item = _1dcd88580_FindItem(_129817_t.ptr(), _130016_id.get()._field_Ident);;
				if ((_130121_item == nullptr)) {
					_1dce93e71_pushErr(_self_, _130016_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_129817_t.get()._field_Ident, &__jule_any_type5),jule::Any(_130016_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_129917_idents.len() - _130013_i) == 1LL)) {
					_1dce94823_pushReferenceByKind(_self_, &(_130121_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1dce81ec5_Kind>(_130121_item.get()._field_Kind.get()._field_Kind, 19);;
				};
				_129817_t=_1dce85605_TypeEnum(_130121_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_129817_t == nullptr)) {
					_1dce93e71_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1c6b36564:;
			++it;
			_130013_i++;
			goto _iter_begin_1c6b36564;
		}
		_iter_end_1c6b36564:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dce8d3dd_Sptr> _1dce9801e_buildSptrFromType(_1dce93778_typeChecker* _self_, jule::Ptr<_1dce82437_TypeKind>* _132041_elem) {
	{
		
		if (((*(_132041_elem)) == nullptr)) {
			_case_begin_1c6b39e19:;
			{
				return nullptr;;
			}
		}
		else if ((_1dce860a6_Struct((*(_132041_elem)).ptr()) != nullptr)) {
			_case_begin_1c6b39e91:;
			{
				jule::Ptr<_1dcd5e457_StructIns> _132617_s = _1dce860a6_Struct((*(_132041_elem)).ptr());;
				if (((_132617_s.get()._field_Decl != nullptr) && _132617_s.get()._field_Decl.get()._field_Binded)) {
					_1dce93e71_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1dce85869_Arr((*(_132041_elem)).ptr()) != nullptr) && _1dce85869_Arr((*(_132041_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1c6b3a018:;
			{
				_1dce93e71_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c6b36d39:;
	};
	return jule::new_ptr<_1dce8d3dd_Sptr>(_1dce8d3dd_Sptr{._field_Elem=(*(_132041_elem))});;
}



inline jule::Ptr<_1dce8d3dd_Sptr> _1dce9832c_buildSptr(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3cd92_SptrTypeDecl> _134032_decl) {
	jule::Bool _134113_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_134113_cycleRisk;
	});;
	jule::Ptr<_1dce82437_TypeKind> _134517_elem = _1dce9a6c5_checkDecl(_self_, &(_134032_decl.get()._field_Elem));;
	return _1dce9801e_buildSptrFromType(_self_, &(_134517_elem));;
}



inline jule::Ptr<_1dce91952_Ptr> _1dce9863a_buildPtrFromType(_1dce93778_typeChecker* _self_, jule::Ptr<_1dce82437_TypeKind>* _134940_elem) {
	{
		
		if (((*(_134940_elem)) == nullptr)) {
			_case_begin_1c6b3e6b0:;
			{
				return nullptr;;
			}
		}
		else if (((_1dce85869_Arr((*(_134940_elem)).ptr()) != nullptr) && _1dce85869_Arr((*(_134940_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1c6b3e737:;
			{
				_1dce93e71_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1dce91952_Ptr>();;
			}
		}
		_match_end_1c6b3e5a0:;
	};
	return jule::new_ptr<_1dce91952_Ptr>(_1dce91952_Ptr{._field_Elem=(*(_134940_elem))});;
}



inline jule::Ptr<_1dce91952_Ptr> _1dce98948_buildPtr(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3d865_PtrTypeDecl> _136431_decl) {
	jule::Bool _136513_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_136513_cycleRisk;
	});;
	jule::Ptr<_1dce82437_TypeKind> _136917_elem = nullptr;;
	if ((!(_1dcd3dbb7_IsUnsafe(_136431_decl.ptr())))) {
		_136917_elem=_1dce9a6c5_checkDecl(_self_, &(_136431_decl.get()._field_Elem));
		return _1dce9863a_buildPtrFromType(_self_, &(_136917_elem));;
	};
	return jule::new_ptr<_1dce91952_Ptr>(_1dce91952_Ptr{._field_Elem=_136917_elem});;
}



inline jule::Ptr<_1dce8dd4a_Slc> _1dce98c56_buildSlc(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3d28d_SlcTypeDecl> _138131_decl) {
	jule::Bool _138213_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_138213_cycleRisk;
	});;
	jule::Ptr<_1dce82437_TypeKind> _138617_elem = _1dce9a6c5_checkDecl(_self_, &(_138131_decl.get()._field_Elem));;
	{
		
		if ((_138617_elem == nullptr)) {
			_case_begin_1c6b44275:;
			{
				return nullptr;;
			}
		}
		else if (((_1dce85869_Arr(_138617_elem.ptr()) != nullptr) && _1dce85869_Arr(_138617_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c6b442ec:;
			{
				_1dce93e71_pushErr(_self_, _138131_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c6b441ba:;
	};
	return jule::new_ptr<_1dce8dd4a_Slc>(_1dce8dd4a_Slc{._field_Elem=_138617_elem});;
}



inline jule::Ptr<_1dce90ee5_Arr> _1dce99064_buildArr(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3e03b_ArrTypeDecl> _140231_decl) {
	jule::I64 _140317_n = 0LL;;
	if ((!(_1dcd3e38d_AutoSized(_140231_decl.ptr())))) {
		jule::Ptr<_1dce54cbc_Data> _140621_size = _1dce73307_evalExpr(_1dcde00cb_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _140231_decl.get()._field_Size);;
		if ((_140621_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1dce5563b_IsConst(_140621_size.ptr())))) {
			_1dce93e71_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1dce84b54_Prim(_140621_size.get()._field_Kind.ptr()) == nullptr) || (!(_24a232a43_IsInt(_1dce84b54_Prim(_140621_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1dce93e71_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_140317_n=static_cast<jule::I64>(static_cast<jule::I64>(_24a235a57_AsI64(_140621_size.get()._field_Constant.ptr())));
		if ((_140317_n < 0LL)) {
			_1dce93e71_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _142421_max = _24a22bd39_MaxI(jule::Str("int", 3));;
			if (((_24a224d76_BitSize != 64LL) && (static_cast<jule::I64>(_140317_n) > _142421_max))) {
				_1dce93e71_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1dce7e9a6_constoa(&(_140621_size.get()._field_Constant)), &__jule_any_type5),jule::Any(_24a2238d0_FmtInt(_142421_max, 10LL), &__jule_any_type5)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1dce82437_TypeKind> _143317_elem = _1dce9a6c5_checkDecl(_self_, &(_140231_decl.get()._field_Elem));;
	{
		
		if ((_143317_elem == nullptr)) {
			_case_begin_1c6b4bd3d:;
			{
				return nullptr;;
			}
		}
		else if (((_1dce85869_Arr(_143317_elem.ptr()) != nullptr) && _1dce85869_Arr(_143317_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c6b4bdb5:;
			{
				_1dce93e71_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c6b4bca5:;
	};
	return jule::new_ptr<_1dce90ee5_Arr>(_1dce90ee5_Arr{._field_Auto=_1dcd3e38d_AutoSized(_140231_decl.ptr()), ._field_N=_140317_n, ._field_Elem=_143317_elem});;
}



inline jule::Ptr<_1dce90401_Map> _1dce99372_buildMap(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3e745_MapTypeDecl> _145131_decl) {
	jule::Bool _145213_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_145213_cycleRisk;
	});;
	jule::Ptr<_1dce82437_TypeKind> _145617_key = _1dce9a6c5_checkDecl(_self_, &(_145131_decl.get()._field_Key));;
	if ((_145617_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1dce82437_TypeKind> _146117_val = _1dce9a6c5_checkDecl(_self_, &(_145131_decl.get()._field_Val));;
	if ((_146117_val == nullptr)) {
		return nullptr;;
	};
	if ((_1dce85391_Enum(_146117_val.ptr()) != nullptr)) {
		_1dce93e71_pushErr(_self_, _145131_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1dce90401_Map>(_1dce90401_Map{._field_Key=_145617_key, ._field_Val=_146117_val});;
}



inline jule::Ptr<_1dce8e950_Tuple> _1dce99680_buildTuple(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3d579_TupleTypeDecl> _147533_decl) {
	jule::Slice<jule::Ptr<_1dce82437_TypeKind>> _147617_types = jule::Slice<jule::Ptr<_1dce82437_TypeKind>>::alloc(0LL, _147533_decl.get()._field_Types.len());;
	{
		auto expr = &(_147533_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b51e64:;
		if (it != expr_end) {
			jule::Ptr<_1dcd3bd80_TypeDecl> _147721_t = *it;
			{
				jule::Ptr<_1dce82437_TypeKind> _147821_kind = _1dce9a6c5_checkDecl(_self_, &(_147721_t));;
				if ((_147821_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1dce82437_TypeKind>> &__jule_push_dest = _147617_types; __jule_push_dest.push(_147821_kind); };
			}
			_iter_next_1c6b51e64:;
			++it;
			goto _iter_begin_1c6b51e64;
		}
		_iter_end_1c6b51e64:;
	};
	return jule::new_ptr<_1dce8e950_Tuple>(_1dce8e950_Tuple{._field_Types=_147617_types});;
}



inline jule::Bool _1dce9998d_checkFnTypes(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd74648_FnIns>* _148836_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_148836_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6b53e22:;
		if (it != expr_end) {
			jule::Ptr<_1dcd73779_ParamIns> _148921_p = *it;
			{
				_148921_p.get()._field_Kind=_1dce9a3b7_build(_self_, &(_148921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_148921_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1dcde2683_checkFnParamKind((*(_self_))._field_s, &(_148921_p));
			}
			_iter_next_1c6b53e22:;
			++it;
			goto _iter_begin_1c6b53e22;
		}
		_iter_end_1c6b53e22:;
	};
	if ((!(_1dcd71e09_IsVoid((*(_148836_f)).get()._field_Decl.ptr())))) {
		(*(_148836_f)).get()._field_Result=_1dce9a3b7_build(_self_, &((*(_148836_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_148836_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1dcd74648_FnIns> _1dce99c9b_buildFn(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd4d4ac_FnDecl> _150630_decl) {
	jule::Bool _150713_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_150713_cycleRisk;
	});;
	if ((_150630_decl.get()._field_Generics.len() > 0LL)) {
		_1dce93e71_pushErr(_self_, _150630_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcd71997_Fn> _151617_f = _1dcd7a781_buildFn(_150630_decl);;
	jule::I64 _151813_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1dcdeabec_checkAnonFnDecl((*(_self_))._field_s, &(_151617_f));
	if ((_151813_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1dcd74648_FnIns> _152417_ins = _1dcd72d83_instanceForce(_151617_f);;
	_152417_ins.get()._field_Anon=true;
	jule::Bool _152713_ok = _1dce9998d_checkFnTypes(_self_, &(_152417_ins));;
	if ((!(_152713_ok))) {
		return nullptr;;
	};
	return _152417_ins;;
}



inline jule::Trait<_1dce81ec5_Kind> _1dce9a0a9_buildByNamespace(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3caa6_NamespaceTypeDecl> _153539_decl) {
	jule::Str _153613_path = _1dce9ca29_buildLinkPathByTokens(&(_153539_decl.get()._field_Idents));;
	jule::Ptr<_1dcdcc6d4_ImportInfo> _153717_imp = _1dcea0763_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1dce9dc28_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)>([=](jule::Ptr<_1dcdcc6d4_ImportInfo> _153752_imp) mutable -> jule::Bool {
		if (((_153539_decl.get()._field_Idents.len() == 1LL) && (_153752_imp.get()._field_Alias == _153613_path))) {
			return true;;
		};
		return ((_153752_imp.get()._field_LinkPath == _153613_path) && _1dcdd0022_isAccessibleViaSelection(_153752_imp.ptr()));;
	}));;
	if (((_153717_imp == nullptr) || (!(_1dcdce97d_isLookupable(_153717_imp.ptr(), jule::Str("self", 4)))))) {
		_1dce93e71_pushErr(_self_, _153539_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_153613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1dce94328_disallowBuiltin(_self_);
	jule::Trait<_1dcea0763_Lookup> _155017_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1dcea0763_Lookup>(_153717_imp, 1);
	jule::Ptr<_1dce82437_TypeKind> _155217_kind = _1dce9a6c5_checkDecl(_self_, &(_153539_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_155017_lookup;
	_1dce9414c_allowBuiltin(_self_);
	return jule::Trait<_1dce81ec5_Kind>(_155217_kind, 19);;
}



inline jule::Ptr<_1dce82437_TypeKind> _1dce9a3b7_build(_1dce93778_typeChecker* _self_, jule::Any* _155829_declKind) {
	jule::Trait<_1dce81ec5_Kind> _155917_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155829_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c6b606c0:;
			{
				jule::Trait<_1dce81ec5_Kind> _156221_t = _1dce97903_buildIdent(_self_, (*(_155829_declKind)).cast_ptr<_1dcd3c446_IdentTypeDecl>(&__jule_any_type20));;
				if ((_156221_t != nullptr)) {
					_155917_kind=_156221_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c6b6154a:;
			{
				jule::Trait<_1dce81ec5_Kind> _156721_t = _1dce97c11_buildSubIdent(_self_, (*(_155829_declKind)).cast_ptr<_1dcd3c732_SubIdentTypeDecl>(&__jule_any_type92));;
				if ((_156721_t != nullptr)) {
					_155917_kind=_156721_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1c6b615b1:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1dce8d3dd_Sptr> _157321_t = _1dce9832c_buildSptr(_self_, (*(_155829_declKind)).cast_ptr<_1dcd3cd92_SptrTypeDecl>(&__jule_any_type78));;
				if ((_157321_t != nullptr)) {
					_155917_kind=jule::Trait<_1dce81ec5_Kind>(_157321_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1c6b60b98:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1dce91952_Ptr> _157921_t = _1dce98948_buildPtr(_self_, (*(_155829_declKind)).cast_ptr<_1dcd3d865_PtrTypeDecl>(&__jule_any_type77));;
				if ((_157921_t != nullptr)) {
					_155917_kind=jule::Trait<_1dce81ec5_Kind>(_157921_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c6b60c0e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1dce8dd4a_Slc> _158521_t = _1dce98c56_buildSlc(_self_, (*(_155829_declKind)).cast_ptr<_1dcd3d28d_SlcTypeDecl>(&__jule_any_type76));;
				if ((_158521_t != nullptr)) {
					_155917_kind=jule::Trait<_1dce81ec5_Kind>(_158521_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1c6b60c75:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1dce90ee5_Arr> _159121_t = _1dce99064_buildArr(_self_, (*(_155829_declKind)).cast_ptr<_1dcd3e03b_ArrTypeDecl>(&__jule_any_type75));;
				if ((_159121_t != nullptr)) {
					_155917_kind=jule::Trait<_1dce81ec5_Kind>(_159121_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c6b60cdb:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1dce90401_Map> _159721_t = _1dce99372_buildMap(_self_, (*(_155829_declKind)).cast_ptr<_1dcd3e745_MapTypeDecl>(&__jule_any_type79));;
				if ((_159721_t != nullptr)) {
					_155917_kind=jule::Trait<_1dce81ec5_Kind>(_159721_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c6b61627:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1dce8e950_Tuple> _160321_t = _1dce99680_buildTuple(_self_, (*(_155829_declKind)).cast_ptr<_1dcd3d579_TupleTypeDecl>(&__jule_any_type80));;
				if ((_160321_t != nullptr)) {
					_155917_kind=jule::Trait<_1dce81ec5_Kind>(_160321_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c6b6168d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1dcd74648_FnIns> _160921_t = _1dce99c9b_buildFn(_self_, (*(_155829_declKind)).cast_ptr<_1dcd4d4ac_FnDecl>(&__jule_any_type14));;
				if ((_160921_t != nullptr)) {
					_155917_kind=jule::Trait<_1dce81ec5_Kind>(_160921_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c6b61704:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1dce81ec5_Kind> _161521_t = _1dce9a0a9_buildByNamespace(_self_, (*(_155829_declKind)).cast_ptr<_1dcd3caa6_NamespaceTypeDecl>(&__jule_any_type96));;
				if ((_161521_t != nullptr)) {
					_155917_kind=_161521_t;
				};
			}
		}
		else {
			_case_begin_1c6b60a44:;
			{
				_1dce93e71_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c6b60956:;
	};
	if ((_155917_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155917_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1c6bb9152:;
			{
				return _155917_kind.cast_ptr<_1dce82437_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1c6bb64c3:;
			{
				jule::Ptr<_1dce82437_TypeKind> _163021_tk = jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=_155917_kind});;
				{
					auto &_match_expr{ _155917_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1c6bb74d5:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1dce82437_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_163021_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1c6bb754b:;
						{
							jule::Ptr<_1dcd5e457_StructIns> _163721_s = _155917_kind.cast_ptr<_1dcd5e457_StructIns>(0);;
							if (((_163721_s.get()._field_Decl != nullptr) && _163721_s.get()._field_Decl.get()._field_Binded)) {
								_163021_tk.get()._field_BindIdent=_163721_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1c6bb7370:;
				};
				return _163021_tk;;
			}
		}
		_match_end_1c6bb6bcc:;
	};
}



inline jule::Ptr<_1dce82437_TypeKind> _1dce9a6c5_checkDecl(_1dce93778_typeChecker* _self_, jule::Ptr<_1dcd3bd80_TypeDecl>* _164633_decl) {
	jule::Ptr<_23ae26b42_Token> _164817_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_164633_decl)).get()._field_Token;
	jule::Ptr<_1dce82437_TypeKind> _165117_kind = _1dce9a3b7_build(_self_, &((*(_164633_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_164817_errorToken;
	return _165117_kind;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dce93778_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1dce9b0aa_prim(jule::Str* _167321_ident, jule::Ptr<_1dce89b8c_Prim> _167333_t) {
	return (_167333_t.get()._field_Kind == (*(_167321_ident)));;
}



inline jule::Bool static__1dce9b3eb_exist(jule::Str* _167722_ident, jule::Ptr<_1dce82437_TypeKind>* _167739_k) {
	{
		
		if ((_1dce84b54_Prim((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1c6b6d7dd:;
			{
				return static__1dce9b0aa_prim(_167722_ident, _1dce84b54_Prim((*(_167739_k)).ptr()));;
			}
		}
		else if ((_1dce84db8_Sptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1c6b6d854:;
			{
				jule::Ptr<_1dce8d3dd_Sptr> _168221_sptr = _1dce84db8_Sptr((*(_167739_k)).ptr());;
				return static__1dce9b3eb_exist(_167722_ident, &(_168221_sptr.get()._field_Elem));;
			}
		}
		else if ((_1dce8512c_Ptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1c6b6d8ba:;
			{
				jule::Ptr<_1dce91952_Ptr> _168521_ptr = _1dce8512c_Ptr((*(_167739_k)).ptr());;
				return static__1dce9b3eb_exist(_167722_ident, &(_168521_ptr.get()._field_Elem));;
			}
		}
		else if ((_1dce85acd_Slc((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1c6b6db0c:;
			{
				jule::Ptr<_1dce8dd4a_Slc> _168821_slc = _1dce85acd_Slc((*(_167739_k)).ptr());;
				return static__1dce9b3eb_exist(_167722_ident, &(_168821_slc.get()._field_Elem));;
			}
		}
		else if ((_1dce85869_Arr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1c6b6db73:;
			{
				jule::Ptr<_1dce90ee5_Arr> _169121_arr = _1dce85869_Arr((*(_167739_k)).ptr());;
				return static__1dce9b3eb_exist(_167722_ident, &(_169121_arr.get()._field_Elem));;
			}
		}
		else if ((_1dce8657e_Map((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1c6b6dbea:;
			{
				jule::Ptr<_1dce90401_Map> _169421_m = _1dce8657e_Map((*(_167739_k)).ptr());;
				return (static__1dce9b3eb_exist(_167722_ident, &(_169421_m.get()._field_Key)) || static__1dce9b3eb_exist(_167722_ident, &(_169421_m.get()._field_Val)));;
			}
		}
		else if ((_1dce860a6_Struct((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1c6b6dc72:;
			{
				jule::Ptr<_1dcd5e457_StructIns> _169821_s = _1dce860a6_Struct((*(_167739_k)).ptr());;
				{
					auto expr = &(_169821_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6b7476c:;
					if (it != expr_end) {
						jule::Ptr<_1dce80ba5_InsGeneric> _169925_g = *it;
						{
							if (static__1dce9b3eb_exist(_167722_ident, &(_169925_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1c6b7476c:;
						++it;
						goto _iter_begin_1c6b7476c;
					}
					_iter_end_1c6b7476c:;
				};
				return false;;
			}
		}
		else if ((_1dce85d42_Fn((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1c6b6de09:;
			{
				jule::Ptr<_1dcd74648_FnIns> _170621_f = _1dce85d42_Fn((*(_167739_k)).ptr());;
				{
					auto expr = &(_170621_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6b75eee:;
					if (it != expr_end) {
						jule::Ptr<_1dcd73779_ParamIns> _170725_p = *it;
						{
							if (_1dcd70743_IsSelf(_170725_p.get()._field_Decl.ptr())) {
								goto _iter_next_1c6b75eee;
							};
							if (static__1dce9b3eb_exist(_167722_ident, &(_170725_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1c6b75eee:;
						++it;
						goto _iter_begin_1c6b75eee;
					}
					_iter_end_1c6b75eee:;
				};
				if ((_170621_f.get()._field_Result != nullptr)) {
					return static__1dce9b3eb_exist(_167722_ident, &(_170621_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1dce867e3_Tup((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1c6b6de70:;
			{
				jule::Ptr<_1dce8e950_Tuple> _172021_tup = _1dce867e3_Tup((*(_167739_k)).ptr());;
				{
					auto expr = &(_172021_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6e44498:;
					if (it != expr_end) {
						jule::Ptr<_1dce82437_TypeKind> _172125_t = *it;
						{
							if (static__1dce9b3eb_exist(_167722_ident, &(_172125_t))) {
								return true;;
							};
						}
						_iter_next_1c6e44498:;
						++it;
						goto _iter_begin_1c6e44498;
					}
					_iter_end_1c6e44498:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1c6b6d6bc:;
			{
				return false;;
			}
		}
		_match_end_1c6b6d601:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dce9ab6a_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de3bc310_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de414885_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1de4157ed_stop(_1de4151b0_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1de415a62_stopped(_1de4151b0_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1de415cc6_finished(_1de4151b0_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1de41603a_isLastSt(_1de4151b0_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1de416359_pushErr(_1de4151b0_scopeParser* _self_, jule::Ptr<_23ae26b42_Token> _19126_token, jule::Str _19141_fmt) {
	_1de4322dc_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _1de416678_pushSuggestion(_1de4151b0_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1de43260b_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _1de4168ed_insertAsNext(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1de414885_stmt>(_1de414885_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_1de414885_stmt> _1de416b62_next(_1de4151b0_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1dcd4b9b6_ScopeTree> _1de417019_buildScope(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _21034_tokens, jule::Ptr<_23ae26b42_Token> _21056_end) {
	jule::Ptr<_1dcd4b9b6_ScopeTree> _21117_s = _1de413785_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1de4151b0_scopeParser _21417_ssp = _1de4151b0_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1de420c04_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_1dcd4e48b_VarDecl> _1de417327_buildVarSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _22134_tokens) {
	jule::Ptr<_1dcd4e48b_VarDecl> _22217_v = _1de434d28_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_1dcd4e843_RetSt> _1de417635_buildRetSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _22733_tokens) {
	jule::Ptr<_1dcd4e843_RetSt> _22817_st = jule::new_ptr<_1dcd4e843_RetSt>(_1dcd4e843_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1de432919_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_1dcd4eea3_Iter> _1de417943_buildWhileNextIter(_1de4151b0_scopeParser* _self_, jule::Ptr<_1de414885_stmt>* _23842_s) {
	jule::Ptr<_1dcd4eea3_Iter> _23917_it = jule::new_ptr<_1dcd4eea3_Iter>(_1dcd4eea3_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1dcd50778_WhileKind> _24317_kind = jule::new_ptr<_1dcd50778_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1de432919_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_1de41603a_isLastSt(_self_)) {
		_1de416359_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1de416b62_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _25517_stTokens = _1de42b99b_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1de414885_stmt> _25721_stmt = jule::new_ptr<_1de414885_stmt>(_1de414885_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1de4208d5_buildSt(_self_, &(_25721_stmt));
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _26617_blockTokens = _1de42ea6a_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_1de4157ed_stop(_self_);
		_1de416359_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1de416678_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1de416359_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1de417019_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type38);
	return _23917_it;;
}



inline jule::Ptr<_1dcd50778_WhileKind> _1de417c51_buildWhileIterKind(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _28342_tokens) {
	return jule::new_ptr<_1dcd50778_WhileKind>(_1dcd50778_WhileKind{._field_Expr=_1de432919_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _1de41805e_getRangeKindKeysTokens(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _29018_vars;;
	jule::Slice<_23aa28854_Log> _29024_errs;;
	({
		__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4305d7_parts(_28946_toks, static_cast<jule::U64>(7LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_29024_errs);;
	return _29018_vars;;
}



inline jule::Ptr<_1dcd4e48b_VarDecl> _1de41836c_buildRangeKindKey(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1dcd4e48b_VarDecl> _29917_key = jule::new_ptr<_1dcd4e48b_VarDecl>(_1dcd4e48b_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_1de416359_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_1de416359_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de416359_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1de416678_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_1dcd4e48b_VarDecl>> _1de41867a_buildRangeKindKeys(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_1dcd4e48b_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c70d5d87:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _32221_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd4e48b_VarDecl>> &__jule_push_dest = _32117_keys; __jule_push_dest.push(_1de41836c_buildRangeKindKey(_self_, &(_32221_tokens))); };
			}
			_iter_next_1c70d5d87:;
			++it;
			goto _iter_begin_1c70d5d87;
		}
		_iter_end_1c70d5d87:;
	};
	return _32117_keys;;
}



inline void _1de4189bb_setupRangeKindKeysPlain(_1de4151b0_scopeParser* _self_, jule::Ptr<_1dcd51119_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _32917_keyTokens = _1de41805e_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1de416359_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1dcd4e48b_VarDecl>> _33617_keys = _1de41867a_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1de418d1d_setupRangeKindKeysExplicit(_1de4151b0_scopeParser* _self_, jule::Ptr<_1dcd51119_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _34517_rang = _1de42ea6a_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_1de416359_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1de4189bb_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _1de41914d_setupRangeKindKeys(_1de4151b0_scopeParser* _self_, jule::Ptr<_1dcd51119_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		if ((!(*(_35264_tokens))[0LL].get()._field_Kind.equal("(", 1))) {
			_1de416359_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_1de418d1d_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_1de4189bb_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_1dcd51119_RangeKind> _1de41959e_buildRangeIterKind(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _36514_exprTokens, jule::Ptr<_23ae26b42_Token>* _36541_inToken) {
	jule::Ptr<_1dcd51119_RangeKind> _36617_rng = jule::new_ptr<_1dcd51119_RangeKind>(_1dcd51119_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_1de416359_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1de432919_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_1de41914d_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1de419956_buildCommonIterKind(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _38043_tokens, jule::Ptr<_23ae26b42_Token>* _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c70e06aa:;
		if (it != expr_end) {
			jule::I64 _38214_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c70e14e1:;
							{
								(_38117_braceN)++;
								goto _iter_next_1c70e06aa;
							}
						}
						else {
							_case_begin_1c70e17bb:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1c70e15ac:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1c70e06aa;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(14LLU)) {
						_case_begin_1c70e13c0:;
						{
							jule::Slice<jule::Ptr<_23ae26b42_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_23ae26b42_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_1de41959e_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type40);;
						}
					}
					_match_end_1c70e24ae:;
				};
			}
			_iter_next_1c70e06aa:;
			++it;
			_38214_i++;
			goto _iter_begin_1c70e06aa;
		}
		_iter_end_1c70e06aa:;
	};
	return jule::Any(_1de417c51_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_1dcd4eea3_Iter> _1de419c64_buildCommonIter(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _40738_tokens) {
	jule::Ptr<_1dcd4eea3_Iter> _40817_it = jule::new_ptr<_1dcd4eea3_Iter>(_1dcd4eea3_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1de4157ed_stop(_self_);
		_1de416359_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1de416678_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _41817_exprTokens = _1de42b99b_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1de419956_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _42317_scopeTokens = _1de42ea6a_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_1de4157ed_stop(_self_);
		_1de416359_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1de416678_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1de416359_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1de417019_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_1dcd4eea3_Iter> _1de41a072_buildIterSt(_1de4151b0_scopeParser* _self_, jule::Ptr<_1de414885_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _1de417943_buildWhileNextIter(_self_, _43735_st);;
	};
	return _1de419c64_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_1dcd514c1_BreakSt> _1de41a380_buildBreakSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _44436_tokens) {
	jule::Ptr<_1dcd514c1_BreakSt> _44517_brk = jule::new_ptr<_1dcd514c1_BreakSt>(_1dcd514c1_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1de416359_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1de416678_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_1de416359_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_1dcd51878_ContSt> _1de41a68d_buildContSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _46235_tokens) {
	jule::Ptr<_1dcd51878_ContSt> _46317_cont = jule::new_ptr<_1dcd51878_ContSt>(_1dcd51878_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1de416359_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1de416678_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_1de416359_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_1dcd51ceb_If> _1de41a99b_buildIf(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _48031_tokens) {
	jule::Ptr<_1dcd51ceb_If> _48117_model = jule::new_ptr<_1dcd51ceb_If>(_1dcd51ceb_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _48517_exprTokens = _1de42b99b_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1de416359_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _49217_scopeTokens = _1de42ea6a_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1de4157ed_stop(_self_);
		_1de416359_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1de416678_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_23ae26b42_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U64>(16LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_1de416359_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1de432919_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_1de417019_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_1dcd521a3_Else> _1de41aca9_buildElse(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _51333_tokens) {
	jule::Ptr<_1dcd521a3_Else> _51417_els = jule::new_ptr<_1dcd521a3_Else>(_1dcd521a3_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _51917_scopeTokens = _1de42ea6a_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_1de416359_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1de4157ed_stop(_self_);
			_1de416359_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1de416678_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_1de416359_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1de417019_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_1dcd52626_Conditional> _1de41b0b7_buildIfElseChain(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _53739_tokens) {
	jule::Ptr<_1dcd52626_Conditional> _53817_chain = jule::new_ptr<_1dcd52626_Conditional>(_1dcd52626_Conditional{._field_Head=_1de41a99b_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(16LLU))) {
				goto _iter_end_1c639cc43;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(15LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_1dcd51ceb_If> _55025_elif = _1de41a99b_buildIf(_self_, &(_53739_tokens));;
				{ jule::Slice<jule::Ptr<_1dcd51ceb_If>> &__jule_push_dest = _53817_chain.get()._field_Tail; __jule_push_dest.push(_55025_elif); };
				goto _iter_next_1c639cc43;
			};
			_53817_chain.get()._field_Default=_1de41aca9_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_1c639cc43;
		}
	_iter_next_1c639cc43:;
	}
	_iter_end_1c639cc43:;;
	return _53817_chain;;
}



inline jule::Ptr<_1dcd4100a_Expr> _1de41b3c5_buildCoCallSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _56036_tokens) {
	jule::Ptr<_23ae26b42_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_1dcd4100a_Expr> _56317_e = _1de432919_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c647a20a:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_1dcd44e21_FnCallExpr>(&__jule_any_type111).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1c647a848:;
			{
				_1de416359_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1c647a53a:;
	};
	return _56317_e;;
}



inline jule::Ptr<_1dcd49585_GotoSt> _1de41b6d3_buildGotoSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _57635_tokens) {
	jule::Ptr<_1dcd49585_GotoSt> _57717_gt = jule::new_ptr<_1dcd49585_GotoSt>(_1dcd49585_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_1de416359_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_1de416359_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_23ae26b42_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de416359_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_1de416678_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_1dcd49871_FallSt> _1de41b9e1_buildFallSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _59635_tokens) {
	jule::Ptr<_1dcd49871_FallSt> _59717_fll = jule::new_ptr<_1dcd49871_FallSt>(_1dcd49871_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_1de416359_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_1dcd52cec_TypeAliasDecl> _1de41bcee_buildTypeAliasSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _60640_tokens) {
	jule::Ptr<_1dcd52cec_TypeAliasDecl> _60717_tad = _1de434014_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _1de41c261_pushCaseExpr(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _61235_tokens, jule::Ptr<_23ae26b42_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_1dcd3bd80_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			{ jule::Slice<jule::Ptr<_1dcd4100a_Expr>> &__jule_push_dest = (*(_61331_exprs)); __jule_push_dest.push(jule::new_ptr<_1dcd4100a_Expr>(_1dcd4100a_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type94)})); };
			if ((_61921_i < _61235_tokens.len())) {
				_1de416359_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1dcd4100a_Expr>> &__jule_push_dest = (*(_61331_exprs)); __jule_push_dest.push(_1de432919_buildExpr((*(_self_))._field_p, &(_61235_tokens))); };
}



inline jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _1de41c6b2_buildCaseExprs(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _63638_tokens, jule::Ptr<_23ae26b42_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_1dcd4100a_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6485688:;
		if (it != expr_end) {
			jule::I64 _64114_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1c64871b2:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1c648748c:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1c648727d:;
					};
					goto _iter_next_1c6485688;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1c6485688;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(6LLU)) && _64121_tok.get()._field_Kind.equal("|", 1))) {
						_case_begin_1c6487da5:;
						{
							jule::Slice<jule::Ptr<_23ae26b42_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1de416359_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_1de41c261_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(10LLU))) {
						_case_begin_1c6487e2c:;
						{
							(*(_63661_colon))=_64121_tok;
							_1de41c261_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1c6487d0b:;
				};
			}
			_iter_next_1c6485688:;
			++it;
			_64114_i++;
			goto _iter_begin_1c6485688;
		}
		_iter_end_1c6485688:;
	};
	_1de416359_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1dcd4b9b6_ScopeTree> _1de41c9c0_buildCaseScope(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _68022_next;;
			({
				__jule_tuple_sx_23ae26b42_Token__jule_tuple_bool __jule_assign_result = _1de414588_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1c648b408;
			};
			jule::Ptr<_23ae26b42_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(6LLU)) || (!_68417_tok.get()._field_Kind.equal("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1c648b408;
			};
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_1dcd4b9b6_ScopeTree> _69021_scope = _1de417019_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1c648b408:;
	}
	_iter_end_1c648b408:;;
	jule::Ptr<_23ae26b42_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1dcd4b9b6_ScopeTree> _69817_scope = _1de417019_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_1dcd53270_Case__jule_tuple_bool _1de41cd77_buildCase(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_1dcd53270_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1dcd53270_Case> _70417_c = jule::new_ptr<_1dcd53270_Case>(_1dcd53270_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_23ae26b42_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1de41c6b2_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_1de41c9c0_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1dcd53270_Case__jule_tuple_x_1dcd521a3_Else _1de41d22e_buildCases(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_1dcd53270_Case__jule_tuple_x_1dcd521a3_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1dcd53270_Case>> _71917_cases = nullptr;;
	jule::Ptr<_1dcd521a3_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_23ae26b42_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(6LLU)) || (!_72321_tok.get()._field_Kind.equal("|", 1)))) {
				_1de416359_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1c72105bb;
			};
			jule::Ptr<_1dcd53270_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_1dcd53270_Case__jule_tuple_bool __jule_assign_result = _1de41cd77_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_1dcd521a3_Else>(_1dcd521a3_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1de416359_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				{ jule::Slice<jule::Ptr<_1dcd53270_Case>> &__jule_push_dest = _71917_cases; __jule_push_dest.push(_72822_c); };
			};
		}
	_iter_next_1c72105bb:;
	}
	_iter_end_1c72105bb:;;
	if (_72117_defNotLast) {
		_1de416359_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1dcd53946_MatchCase> _1de41d53c_buildMatchCase(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _75237_tokens) {
	jule::Ptr<_1dcd53946_MatchCase> _75317_m = jule::new_ptr<_1dcd53946_MatchCase>(_1dcd53946_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(9LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _76317_exprTokens = _1de42b99b_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1de432919_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_1de416359_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _77117_blockToks = _1de42ea6a_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_1de4157ed_stop(_self_);
		_1de416359_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1de416678_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1de416359_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_1dcd53270_Case__jule_tuple_x_1dcd521a3_Else __jule_assign_result = _1de41d22e_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_1dcd4b9b6_ScopeTree> _1de41d84a_buildScopeSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_23ae26b42_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1de416359_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1de416359_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1de416359_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _81517_scopeTokens = _1de42ea6a_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_1de416359_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1de416359_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1dcd4b9b6_ScopeTree> _82217_scope = _1de417019_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_1dcd491cd_LabelSt> _1de41db58_buildLabelSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _82836_tokens) {
	jule::Ptr<_1dcd491cd_LabelSt> _82917_lbl = jule::new_ptr<_1dcd491cd_LabelSt>(_1dcd491cd_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_1de4168ed_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__1dcd4b17a_StmtData__jule_tuple_bool _1de41de66_buildIdSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _84333_tokens) {
	__jule_tuple__1dcd4b17a_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_23ae26b42_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c72245be:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1de41db58_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c7224569:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1de42ceca_assignInfo> _1de41e274_buildAssignInfo(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _85739_tokens) {
	jule::Ptr<_1de42ceca_assignInfo> _85817_info = jule::new_ptr<_1de42ceca_assignInfo>(_1de42ceca_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7225c0d:;
		if (it != expr_end) {
			jule::I64 _86214_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c7226a66:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1c7226d41:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1c7226b32:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1c72274e5:;
						{
							goto _iter_next_1c7225c0d;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(6LLU))) {
						_case_begin_1c722755b:;
						{
							goto _iter_next_1c7225c0d;
						}
					}
					else if ((!(_23ae2b729_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1c72275c2:;
						{
							goto _iter_next_1c7225c0d;
						}
					}
					_match_end_1c7226978:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_23ae2b482_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1c7225c0d;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_23ae2b482_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1de416359_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1c7225c0d;
			}
			_iter_next_1c7225c0d:;
			++it;
			_86214_i++;
			goto _iter_begin_1c7225c0d;
		}
		_iter_end_1c7225c0d:;
	};
	return _85817_info;;
}



inline jule::Ptr<_1dcd49e7b_AssignLeft> _1de41e582_buildAssignL(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _90536_tokens) {
	jule::Ptr<_1dcd49e7b_AssignLeft> _90617_l = jule::new_ptr<_1dcd49e7b_AssignLeft>(_1dcd49e7b_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(1LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1de432919_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_1dcd49e7b_AssignLeft>> _1de41e890_buildAssignLs(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_1dcd49e7b_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c722d93b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _91821_part = *it;
			{
				jule::Ptr<_1dcd49e7b_AssignLeft> _91921_l = _1de41e582_buildAssignL(_self_, &(_91821_part));;
				{ jule::Slice<jule::Ptr<_1dcd49e7b_AssignLeft>> &__jule_push_dest = _91717_lefts; __jule_push_dest.push(_91921_l); };
			}
			_iter_next_1c722d93b:;
			++it;
			goto _iter_begin_1c722d93b;
		}
		_iter_end_1c722d93b:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool _1de41eb9d_buildPlainAssign(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _92640_tokens) {
	__jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1de42ceca_assignInfo> _92717_info = _1de41e274_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dcd4a4ba_AssignSt> _93217_assign = jule::new_ptr<_1dcd4a4ba_AssignSt>(_1dcd4a4ba_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _93618_parts;;
	jule::Slice<_23aa28854_Log> _93625_errs;;
	({
		__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4305d7_parts(&(_92717_info.get()._field_l), static_cast<jule::U64>(7LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_93625_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1de41e890_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1de432919_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool _1de41eeab_buildDeclAssign(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _95038_tokens) {
	__jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_23ae26b42_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_95617_token.get()._field_Kind.equal("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dcd4a4ba_AssignSt> _96117_assign = jule::new_ptr<_1dcd4a4ba_AssignSt>(_1dcd4a4ba_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _96617_rang = _1de42ea6a_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_1de416359_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_23ae26b42_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1de432919_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _97818_parts;;
	jule::Slice<_23aa28854_Log> _97825_errs;;
	({
		__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4305d7_parts(&(_96617_rang), static_cast<jule::U64>(7LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_97825_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7238e52:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1de416359_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1c7238e52;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(6LLU)) && _98421_part[0LL].get()._field_Kind.equal("&", 1))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1de416359_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1c7238e52;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(1LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU))) && (!_98421_part[0LL].get()._field_Kind.equal("(", 1)))) {
					_1de416359_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1c7238e52;
				};
				jule::Ptr<_1dcd49e7b_AssignLeft> _101421_l = _1de41e582_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				{ jule::Slice<jule::Ptr<_1dcd49e7b_AssignLeft>> &__jule_push_dest = _96117_assign.get()._field_Left; __jule_push_dest.push(_101421_l); };
			}
			_iter_next_1c7238e52:;
			++it;
			goto _iter_begin_1c7238e52;
		}
		_iter_end_1c7238e52:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool _1de4202b9_buildAssignSt(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _102337_tokens) {
	__jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1de42d371_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c7241256:;
			{
				({
					__jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool __jule_assign_result = _1de41eeab_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c7240d6b:;
			{
				({
					__jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool __jule_assign_result = _1de41eb9d_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c7240d16:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1dcd4189b_UseExpr> _1de4205c7_buildUseExpr(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_1de416359_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1dcd4189b_UseExpr> _104317_ue = jule::new_ptr<_1dcd4189b_UseExpr>(_1dcd4189b_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_1de432919_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1de4208d5_buildSt(_1de4151b0_scopeParser* _self_, jule::Ptr<_1de414885_stmt>* _105131_st) {
	jule::Ptr<_23ae26b42_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__1dcd4b17a_StmtData__jule_tuple_bool __jule_assign_result = _1de41de66_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_1dcd4a4ba_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_1dcd4a4ba_AssignSt__jule_tuple_bool __jule_assign_result = _1de4202b9_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1c724605d:;
			{
				return jule::Any(_1de4205c7_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(8LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c7245d3d:;
			{
				return jule::Any(_1de417327_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1c7245da4:;
			{
				return jule::Any(_1de417635_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1c7245e1a:;
			{
				return jule::Any(_1de41a072_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1c724616d:;
			{
				return jule::Any(_1de41a380_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1c72461d4:;
			{
				return jule::Any(_1de41a68d_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(15LLU)) {
			_case_begin_1c724624a:;
			{
				return jule::Any(_1de41b0b7_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1c72462c2:;
			{
				return jule::Any(_1de41b3c5_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1c7246349:;
			{
				return jule::Any(_1de41b6d3_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c72463c1:;
			{
				return jule::Any(_1de41b9e1_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1c7246448:;
			{
				return jule::Any(_1de41bcee_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1c72464c0:;
			{
				return jule::Any(_1de41d53c_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1c7246547:;
			{
				return jule::Any(_1de41d84a_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c72465be:;
			{
				if (_105217_token.get()._field_Kind.equal("{", 1)) {
					return jule::Any(_1de41d84a_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1c7245a41:;
	};
	jule::Ptr<_1dcd4100a_Expr> _110117_expr = _1de432919_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_1de416359_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1de420c04_build(_1de4151b0_scopeParser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _110929_tokens, jule::Ptr<_1dcd4b9b6_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1de414c2b_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_1de41603a_isLastSt(_self_))) && (!(_1de415cc6_finished(_self_))))) {
		{
			jule::Ptr<_1de414885_stmt> _111721_st = _1de416b62_next(_self_);;
			jule::Any _111821_data = _1de4208d5_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				{ jule::Slice<_1dcd4b3ab_Stmt> &__jule_push_dest = (*(_self_))._field_s.get()._field_Stmts; __jule_push_dest.push(_1dcd4b3ab_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data}); };
			};
			if (_1de415a62_stopped(_self_)) {
				goto _iter_end_1c724e220;
			};
		}
	_iter_next_1c724e220:;
	}
	_iter_end_1c724e220:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1de4151b0_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1de421e25_pushErr(_1de421694_exprBuilder* _self_, jule::Ptr<_23ae26b42_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1de4322dc_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _1de422244_pushSuggestion(_1de421694_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1de43260b_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_1dcd41b87_TupleExpr> _1de422552_buildTuple(_1de421694_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>>* _5334_parts) {
	jule::Ptr<_1dcd41b87_TupleExpr> _5417_tuple = jule::new_ptr<_1dcd41b87_TupleExpr>(_1dcd41b87_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1dcd4100a_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c726c45d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _5721_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd4100a_Expr>> &__jule_push_dest = _5417_tuple.get()._field_Expr; __jule_push_dest.push(_1de42b072_buildFromTokens(_self_, _5721_part)); };
			}
			_iter_next_1c726c45d:;
			++it;
			goto _iter_begin_1c726c45d;
		}
		_iter_end_1c726c45d:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_1dcd4203e_LitExpr> _1de422860_buildLit(_1de421694_exprBuilder* _self_, jule::Ptr<_23ae26b42_Token> _6327_token) {
	return jule::new_ptr<_1dcd4203e_LitExpr>(_1dcd4203e_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Any _1de422e7b_buildSingle(_1de421694_exprBuilder* _self_, jule::Ptr<_23ae26b42_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(5LLU)) {
			_case_begin_1c726de65:;
			{
				return jule::Any(_1de422860_buildLit(_self_, _7434_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c726decb:;
			{
				if (_7434_token.get()._field_Kind.equal("...", 3)) {
					return jule::Any(jule::new_ptr<_1dcd436b1_VariadicExpr>(_1dcd436b1_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type81);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(26LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1c726e042:;
			{
				return jule::Any(_1de42c370_buildIdentExpr(&(_7434_token)), &__jule_any_type85);;
			}
		}
		_match_end_1c726dad0:;
	};
	_1de421e25_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1dcd42b00_IdentExpr> _1de423289_buildBindIdent(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _9338_tokens) {
	if (((*(_9338_tokens))[0LL].get()._field_Id != static_cast<jule::U64>(29LLU))) {
		return nullptr;;
	} else if (((*(_9338_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(19LLU))) {
		_1de421e25_pushErr(_self_, (*(_9338_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de422244_pushSuggestion(_self_, jule::Str("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_23ae26b42_Token> _10117_token = (*(_9338_tokens))[2LL];;
	if ((_10117_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de421e25_pushErr(_self_, (*(_9338_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de422244_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcd42b00_IdentExpr> _10717_expr = _1de42c370_buildIdentExpr(&(_10117_token));;
	_10717_expr.get()._field_Binded=true;
	return _10717_expr;;
}



inline jule::Ptr<_1dcd43309_UnaryExpr> _1de423597_buildUnary(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _11233_tokens) {
	jule::Ptr<_23ae26b42_Token> _11317_op = _11233_tokens[0LL];;
	if ((_11233_tokens.len() == 1LL)) {
		_1de421e25_pushErr(_self_, _11317_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_23ae2734b_IsUnaryOp(_11317_op.get()._field_Kind)))) {
		_1de421e25_pushErr(_self_, _11317_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11317_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11233_tokens=_11233_tokens.slice(1LL);
	return jule::new_ptr<_1dcd43309_UnaryExpr>(_1dcd43309_UnaryExpr{._field_Op=_11317_op, ._field_Expr=_1de42b072_buildFromTokens(_self_, _11233_tokens)});;
}



inline jule::Ptr<_1dcd44393_SubIdentExpr> _1de4238a5_buildObjSubIdent(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _13339_tokens) {
	jule::I64 _13417_i = (_13339_tokens.len() - 1LL);;
	jule::Ptr<_23ae26b42_Token> _13517_identToken = _13339_tokens[_13417_i];;
	(_13417_i)--;
	_13339_tokens=_13339_tokens.slice(0LL, _13417_i);
	if ((_13339_tokens.len() == 0LL)) {
		_1de421e25_pushErr(_self_, _13517_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1dcd44393_SubIdentExpr>(_1dcd44393_SubIdentExpr{._field_Expr=_1de42b072_buildFromTokens(_self_, _13339_tokens), ._field_Ident=_13517_identToken});;
}



inline jule::Ptr<_1dcd43e20_NsSelectionExpr> _1de423bb3_buildNsSubIdent(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _14839_tokens) {
	jule::Ptr<_1dcd43e20_NsSelectionExpr> _14917_ns = jule::new_ptr<_1dcd43e20_NsSelectionExpr>();;
	{
		auto expr = _14839_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7278ba6:;
		if (it != expr_end) {
			jule::I64 _15014_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _15021_token = *it;
			{
				if (((_15014_i & 1LL) == 0LL)) {
					if ((_15021_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
						_1de421e25_pushErr(_self_, _15021_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1de422244_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_23ae26b42_Token>> &__jule_push_dest = _14917_ns.get()._field_Ns; __jule_push_dest.push(_15021_token); };
				} else if ((_15021_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1de421e25_pushErr(_self_, _15021_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1de422244_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c7278ba6:;
			++it;
			_15014_i++;
			goto _iter_begin_1c7278ba6;
		}
		_iter_end_1c7278ba6:;
	};
	_14917_ns.get()._field_Ident=_14917_ns.get()._field_Ns[(_14917_ns.get()._field_Ns.len() - 1LL)];
	_14917_ns.get()._field_Ns=_14917_ns.get()._field_Ns.slice(0LL, (_14917_ns.get()._field_Ns.len() - 1LL));
	return _14917_ns;;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de423ec1_buildType(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _16733_tokens) {
	jule::I64 _16817_i = 0LL;;
	jule::Ptr<_1dcd3bd80_TypeDecl> _16918_t;;
	jule::Bool _16921_ok = false;;
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType((*(_self_))._field_p, _16733_tokens, (&(_16817_i)), false);
		_16918_t = __jule_assign_result.__jule_result_arg0;
		_16921_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16921_ok))) {
		_1de421e25_pushErr(_self_, (*(_16733_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16817_i < (*(_16733_tokens)).len())) {
		_1de421e25_pushErr(_self_, (*(_16733_tokens))[_16817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16918_t;;
}



inline jule::Any _1de4242ce_buildSubIdent(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _18137_tokens) {
	jule::I64 _18213_i = ((*(_18137_tokens)).len() - 2LL);;
	jule::Ptr<_23ae26b42_Token> _18313_token = (*(_18137_tokens))[_18213_i];;
	{
		auto &_match_expr{ _18313_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c72809b0:;
			{
				return jule::Any(_1de4238a5_buildObjSubIdent(_self_, (*(_18137_tokens))), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1c727ee10:;
			{
				return jule::Any(_1de423bb3_buildNsSubIdent(_self_, _18137_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c7280ae2:;
			{
				if (_18313_token.get()._field_Kind.equal("]", 1)) {
					return jule::Any(_1de423ec1_buildType(_self_, _18137_tokens), &__jule_any_type94);;
				};
			}
		}
		_match_end_1c728095a:;
	};
	_1de421e25_pushErr(_self_, _18313_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1dcd436b1_VariadicExpr> _1de4245dc_buildVariadic(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _19936_tokens) {
	jule::Ptr<_23ae26b42_Token> _20017_token = _19936_tokens[(_19936_tokens.len() - 1LL)];;
	_19936_tokens=_19936_tokens.slice(0LL, (_19936_tokens.len() - 1LL));
	return jule::new_ptr<_1dcd436b1_VariadicExpr>(_1dcd436b1_VariadicExpr{._field_Token=_20017_token, ._field_Expr=_1de42b072_buildFromTokens(_self_, _19936_tokens)});;
}



inline jule::Any _1de4248ea_buildOpRight(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _20836_tokens) {
	jule::Ptr<_23ae26b42_Token> _20917_token = (*(_20836_tokens))[((*(_20836_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _20917_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1c7284783:;
			{
				(*(_20836_tokens))=(*(_20836_tokens)).slice(0LL, ((*(_20836_tokens)).len() - 1LL));
				jule::Any _21321_d = _1de42a956_build(_self_, _20836_tokens);;
				if ((_21321_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21321_d };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1c7285a09:;
						{
							_21321_d.cast_ptr<_1dcd44e21_FnCallExpr>(&__jule_any_type111).get()._field_Exception=jule::new_ptr<_1dcd4b9b6_ScopeTree>(_1dcd4b9b6_ScopeTree{._field_Deferred=true, });
							return _21321_d;;
						}
					}
					_match_end_1c7285ca1:;
				};
			}
		}
		_match_end_1c72845c9:;
	};
	_1de421e25_pushErr(_self_, _20917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1dcd412e6_RangeExpr> _1de424c2a_buildBetweenParentheses(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _22946_tokens) {
	if ((_22946_tokens.len() == 2LL)) {
		_1de421e25_pushErr(_self_, _22946_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1de422244_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_22946_tokens=_22946_tokens.slice(1LL, (_22946_tokens.len() - 1LL));
	return jule::new_ptr<_1dcd412e6_RangeExpr>(_1dcd412e6_RangeExpr{._field_Expr=_1de42b072_buildFromTokens(_self_, _22946_tokens)});;
}



inline jule::Ptr<_1dcd43a68_CastExpr> _1de425049_tryBuildCast(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _24136_tokens) {
	jule::I64 _24217_rangeN = 0LL;;
	{
		auto expr = _24136_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7288b94:;
		if (it != expr_end) {
			jule::I64 _24313_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _24316_token = *it;
			{
				if ((_24316_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _24316_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c72899a8:;
							{
								(_24217_rangeN)++;
								goto _iter_next_1c7288b94;
							}
						}
						else {
							_case_begin_1c7289c83:;
							{
								(_24217_rangeN)--;
							}
						}
						_match_end_1c7289a74:;
					};
				};
				if ((_24217_rangeN > 0LL)) {
					goto _iter_next_1c7288b94;
				} else if (((_24313_i + 1LL) == (*(_24136_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_23ae26b42_Token>> _26221_typeTokens = (*(_24136_tokens)).slice(0LL, (_24313_i + 1LL));;
				jule::Slice<jule::Ptr<_23ae26b42_Token>> _26321_exprTokens = (*(_24136_tokens)).slice((_24313_i + 1LL));;
				if ((_26321_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_23ae26b42_Token> _27017_tok = _26321_exprTokens[0LL];;
				if (((_27017_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_27017_tok.get()._field_Kind.equal("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_1dcd43a68_CastExpr> _27521_cast = jule::new_ptr<_1dcd43a68_CastExpr>(_1dcd43a68_CastExpr{});;
				if ((_26321_exprTokens.len() == 2LL)) {
					_1de421e25_pushErr(_self_, _26321_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1de422244_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26221_typeTokens.len() == 2LL)) {
					_1de421e25_pushErr(_self_, _26221_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1de422244_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26221_typeTokens=_26221_typeTokens.slice(1LL, (_26221_typeTokens.len() - 1LL));
					jule::I64 _28925_typeIndex = 0LL;;
					jule::Ptr<_1dcd3bd80_TypeDecl> _29026_t;;
					jule::Bool _29029_ok = false;;
					({
						__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType((*(_self_))._field_p, &(_26221_typeTokens), (&(_28925_typeIndex)), true);
						_29026_t = __jule_assign_result.__jule_result_arg0;
						_29029_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29029_ok && (_28925_typeIndex < _26221_typeTokens.len()))) {
						_1de421e25_pushErr(_self_, _26221_typeTokens[_28925_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29029_ok))) {
						return _27521_cast;;
					};
					_27521_cast.get()._field_Kind=_29026_t;
					if ((_26321_exprTokens.len() > 2LL)) {
						jule::I64 _30029_j = 0LL;;
						_1de42ea6a_range(&(_30029_j), jule::Str("(", 1), jule::Str(")", 1), &(_26321_exprTokens));
						if ((_30029_j < _26321_exprTokens.len())) {
							return nullptr;;
						};
						_26321_exprTokens=_26321_exprTokens.slice(0LL, _30029_j);
						_27521_cast.get()._field_Expr=_1de42b072_buildFromTokens(_self_, _26321_exprTokens);
					};
				};
				return _27521_cast;;
			}
			_iter_next_1c7288b94:;
			++it;
			_24313_i++;
			goto _iter_begin_1c7288b94;
		}
		_iter_end_1c7288b94:;
	};
	return nullptr;;
}



inline void _1de425412_pushArg(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_1dcd4100a_Expr>>* _31531_args, jule::Slice<jule::Ptr<_23ae26b42_Token>> _31550_tokens, jule::Ptr<_23ae26b42_Token> _31568_err_token) {
	if ((_31550_tokens.len() == 0LL)) {
		_1de421e25_pushErr(_self_, _31568_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de422244_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1dcd4100a_Expr>> &__jule_push_dest = (*(_31531_args)); __jule_push_dest.push(_1de42b072_buildFromTokens(_self_, _31550_tokens)); };
}



inline jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _1de425720_buildArgs(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _32432_tokens) {
	if ((_32432_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _33017_args = nullptr;;
	jule::I64 _33117_last = 0LL;;
	jule::I64 _33217_rangeN = 0LL;;
	_32432_tokens=_32432_tokens.slice(1LL, (_32432_tokens.len() - 1LL));
	{
		auto expr = &(_32432_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7296234:;
		if (it != expr_end) {
			jule::I64 _33413_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _33416_token = *it;
			{
				if ((_33416_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _33416_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c7297367:;
							{
								(_33217_rangeN)++;
							}
						}
						else {
							_case_begin_1c7297642:;
							{
								(_33217_rangeN)--;
							}
						}
						_match_end_1c7297433:;
					};
				};
				if (((_33217_rangeN > 0LL) || (_33416_token.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
					goto _iter_next_1c7296234;
				};
				_1de425412_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last, _33413_i), _33416_token);
				_33117_last=static_cast<jule::I64>((_33413_i + 1LL));
			}
			_iter_next_1c7296234:;
			++it;
			_33413_i++;
			goto _iter_begin_1c7296234;
		}
		_iter_end_1c7296234:;
	};
	if ((_33117_last < _32432_tokens.len())) {
		if ((_33117_last == 0LL)) {
			if ((_32432_tokens.len() > 0LL)) {
				_1de425412_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last), _32432_tokens[_33117_last]);
			};
		} else {
			_1de425412_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last), _32432_tokens[(_33117_last - 1LL)]);
		};
	};
	return _33017_args;;
}



inline jule::Ptr<_1dcd44e21_FnCallExpr> _1de425e7e_buildFnCall(_1de421694_exprBuilder* _self_, jule::Ptr<_23ae26b42_Token>* _39035_token, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _39055_expr, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _39076_args) {
	return jule::new_ptr<_1dcd44e21_FnCallExpr>(_1dcd44e21_FnCallExpr{._field_Token=(*(_39035_token)), ._field_Expr=_1de42b072_buildFromTokens(_self_, (*(_39055_expr))), ._field_Args=_1de425720_buildArgs(_self_, (*(_39076_args))), });;
}



inline jule::Any _1de42628c_buildParenthesesRange(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _39845_tokens) {
	jule::Ptr<_23ae26b42_Token> _39917_token = (*(_39845_tokens))[0LL];;
	{
		auto &_match_expr{ _39917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c72a0ddc:;
			{
				{
					auto &_match_expr{ _39917_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c72a175b:;
						{
							jule::Ptr<_1dcd43a68_CastExpr> _40425_expr = _1de425049_tryBuildCast(_self_, _39845_tokens);;
							if ((_40425_expr != nullptr)) {
								return jule::Any(_40425_expr, &__jule_any_type109);;
							};
						}
					}
					_match_end_1c72a1591:;
				};
			}
		}
		_match_end_1c72a0c33:;
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _41018_exprTokens;;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _41034_args_tokens;;
	({
		__jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token __jule_assign_result = _1de42ed12_rangeLast(_39845_tokens);
		_41018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41034_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41018_exprTokens.len() == 0LL)) {
		return jule::Any(_1de424c2a_buildBetweenParentheses(_self_, _41034_args_tokens), &__jule_any_type104);;
	};
	return jule::Any(_1de425e7e_buildFnCall(_self_, &(_39917_token), &(_41018_exprTokens), &(_41034_args_tokens)), &__jule_any_type111);;
}



inline jule::Ptr<_1dcd4267c_UnsafeExpr> _1de42659a_buildUnsafeExpr(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _41938_tokens) {
	jule::Ptr<_23ae26b42_Token> _42017_token = _41938_tokens[0LL];;
	_41938_tokens=_41938_tokens.slice(1LL);
	jule::I64 _42217_i = 0LL;;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _42317_rangeTokens = _1de42ea6a_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_41938_tokens));;
	if ((_42317_rangeTokens.len() == 0LL)) {
		_1de421e25_pushErr(_self_, _41938_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1dcd4267c_UnsafeExpr>(_1dcd4267c_UnsafeExpr{._field_Token=_42017_token, ._field_Expr=_1de42b072_buildFromTokens(_self_, _42317_rangeTokens)});;
}



inline jule::Ptr<_1dcd4d4ac_FnDecl> _1de4268a8_buildAnonFn(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _43435_tokens) {
	jule::Ptr<_1dcd4d4ac_FnDecl> _43517_f = _1de437d4d_buildFn((*(_self_))._field_p, _43435_tokens, false, false);;
	if ((!(_1dcd4d80e_IsAnon(_43517_f.ptr())))) {
		_1de421e25_pushErr(_self_, _43517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de422244_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43517_f;;
}



inline jule::Any _1de426bb6_buildUnsafe(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _44335_tokens) {
	{
		auto &_match_expr{ (*(_44335_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c72a7289:;
			{
				return jule::Any(_1de4268a8_buildAnonFn(_self_, _44335_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1c72a7652:;
			{
				return jule::Any(_1de42659a_buildUnsafeExpr(_self_, (*(_44335_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1c72a75ca:;
	};
}



inline void _1de42707e_pushRangeLitPart(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _45339_part, jule::Ptr<_23ae26b42_Token> _4549_errorToken, jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>>* _45434_parts) {
	if ((_45339_part.len() == 0LL)) {
		_1de421e25_pushErr(_self_, _4549_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de422244_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> &__jule_push_dest = (*(_45434_parts)); __jule_push_dest.push(_45339_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _1de4273ae_getBraceRangeLitExprParts(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _46448_tokens) {
	if ((_46448_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _47017_parts = nullptr;;
	jule::I64 _47217_last = 0LL;;
	jule::I64 _47317_rangeN = 0LL;;
	_46448_tokens=_46448_tokens.slice(1LL, (_46448_tokens.len() - 1LL));
	{
		auto expr = &(_46448_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72ab1c2:;
		if (it != expr_end) {
			jule::I64 _47513_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _47516_token = *it;
			{
				if ((_47516_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _47516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c72ac305:;
							{
								(_47317_rangeN)++;
							}
						}
						else {
							_case_begin_1c72ac5d0:;
							{
								(_47317_rangeN)--;
							}
						}
						_match_end_1c72ac3c1:;
					};
				};
				if (((_47317_rangeN > 0LL) || (_47516_token.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
					goto _iter_next_1c72ab1c2;
				};
				_1de42707e_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last, _47513_i), _47516_token, &(_47017_parts));
				_47217_last=static_cast<jule::I64>((_47513_i + 1LL));
			}
			_iter_next_1c72ab1c2:;
			++it;
			_47513_i++;
			goto _iter_begin_1c72ab1c2;
		}
		_iter_end_1c72ab1c2:;
	};
	if ((_47217_last < _46448_tokens.len())) {
		if ((_47217_last == 0LL)) {
			if ((_46448_tokens.len() > 0LL)) {
				_1de42707e_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last), _46448_tokens[_47217_last], &(_47017_parts));
			};
		} else {
			_1de42707e_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last), _46448_tokens[(_47217_last - 1LL)], &(_47017_parts));
		};
	};
	return _47017_parts;;
}



inline jule::Ptr<_1dcd458a0_FieldExprPair> _1de4276cd_buildFieldExprPair(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _50641_tokens) {
	if (((_50641_tokens.len() - 2LL) == 0LL)) {
		_1de421e25_pushErr(_self_, _50641_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcd458a0_FieldExprPair> _51117_pair = jule::new_ptr<_1dcd458a0_FieldExprPair>(_1dcd458a0_FieldExprPair{._field_Field=_50641_tokens[0LL], });;
	_50641_tokens=_50641_tokens.slice(2LL);
	_51117_pair.get()._field_Expr=_1de42b072_buildFromTokens(_self_, _50641_tokens);
	return _51117_pair;;
}



inline jule::Ptr<_1dcd4100a_Expr> _1de4279db_buildStructLitExpr(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _51942_tokens) {
	jule::Ptr<_23ae26b42_Token> _52017_token = (*(_51942_tokens))[0LL];;
	if (((_52017_token.get()._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_51942_tokens)).len() > 1LL))) {
		_52017_token=(*(_51942_tokens))[1LL];
		if ((_52017_token.get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::new_ptr<_1dcd4100a_Expr>(_1dcd4100a_Expr{._field_Token=_52017_token, ._field_End=(*(_51942_tokens))[((*(_51942_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1de4276cd_buildFieldExprPair(_self_, (*(_51942_tokens))), &__jule_any_type83)});;
		};
	};
	return _1de42b072_buildFromTokens(_self_, (*(_51942_tokens)));;
}



inline jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _1de427ce9_buildStructLitExprs(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _53443_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _53517_parts = _1de4273ae_getBraceRangeLitExprParts(_self_, (*(_53443_tokens)));;
	if ((_53517_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1dcd4100a_Expr>> _54017_pairs = jule::Slice<jule::Ptr<_1dcd4100a_Expr>>::alloc(0LL, _53517_parts.len());;
	{
		auto expr = &(_53517_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72b4c9c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _54121_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd4100a_Expr>> &__jule_push_dest = _54017_pairs; __jule_push_dest.push(_1de4279db_buildStructLitExpr(_self_, &(_54121_part))); };
			}
			_iter_next_1c72b4c9c:;
			++it;
			goto _iter_begin_1c72b4c9c;
		}
		_iter_end_1c72b4c9c:;
	};
	return _54017_pairs;;
}



inline jule::Ptr<_1dcd46175_StructLit> _1de428129_buildTypedStructLiteral(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _54746_tokens) {
	jule::I64 _54817_i = 0LL;;
	jule::Ptr<_1dcd3bd80_TypeDecl> _54918_t;;
	jule::Bool _54921_ok = false;;
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType((*(_self_))._field_p, &(_54746_tokens), (&(_54817_i)), true);
		_54918_t = __jule_assign_result.__jule_result_arg0;
		_54921_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_54921_ok))) {
		return nullptr;;
	} else if ((_54817_i >= _54746_tokens.len())) {
		_1de421e25_pushErr(_self_, _54746_tokens[_54817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54746_tokens=_54746_tokens.slice(_54817_i);
	jule::Ptr<_23ae26b42_Token> _55813_token = _54746_tokens[0LL];;
	if (((_55813_token.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_55813_token.get()._field_Kind.equal("{", 1)))) {
		_1de421e25_pushErr(_self_, _55813_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1dcd46175_StructLit>(_1dcd46175_StructLit{._field_End=_54746_tokens[(_54746_tokens.len() - 1LL)], ._field_Kind=_54918_t, ._field_Exprs=_1de427ce9_buildStructLitExprs(_self_, &(_54746_tokens))});;
}



inline jule::Ptr<_1dcd4100a_Expr> _1de428448_buildBraceLitPart(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _57141_tokens) {
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _57218_l;;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _57225_r;;
	({
		__jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token __jule_assign_result = _1de42bd31_splitDelim(_57141_tokens, static_cast<jule::U64>(10LLU));
		_57218_l = __jule_assign_result.__jule_result_arg0;
		_57225_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57218_l != nullptr)) {
		return jule::new_ptr<_1dcd4100a_Expr>(_1dcd4100a_Expr{._field_Token=(*(_57141_tokens))[0LL], ._field_End=(*(_57141_tokens))[((*(_57141_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1dcd46ecd_KeyValPair>(_1dcd46ecd_KeyValPair{._field_Key=_1de42b072_buildFromTokens(_self_, _57218_l), ._field_Val=_1de42b072_buildFromTokens(_self_, _57225_r), ._field_Colon=(*(_57141_tokens))[_57218_l.len()]}), &__jule_any_type84)});;
	};
	return _1de42b072_buildFromTokens(_self_, (*(_57141_tokens)));;
}



inline jule::Ptr<_1dcd465e8_BraceLit> _1de428756_buildBraceLit(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _58837_tokens) {
	jule::Ptr<_1dcd465e8_BraceLit> _58917_lit = jule::new_ptr<_1dcd465e8_BraceLit>(_1dcd465e8_BraceLit{._field_Token=(*(_58837_tokens))[0LL], ._field_End=(*(_58837_tokens))[((*(_58837_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _59417_parts = _1de4273ae_getBraceRangeLitExprParts(_self_, (*(_58837_tokens)));;
	if ((_59417_parts == nullptr)) {
		return _58917_lit;;
	};
	_58917_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1dcd4100a_Expr>>::alloc(0LL, _59417_parts.len());
	{
		auto expr = &(_59417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72bda0e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _60021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd4100a_Expr>> &__jule_push_dest = _58917_lit.get()._field_Exprs; __jule_push_dest.push(_1de428448_buildBraceLitPart(_self_, &(_60021_part))); };
			}
			_iter_next_1c72bda0e:;
			++it;
			goto _iter_begin_1c72bda0e;
		}
		_iter_end_1c72bda0e:;
	};
	return _58917_lit;;
}



inline jule::Any _1de428a64_buildBraceRange(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _60739_tokens) {
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _60818_exprTokens;;
	jule::I64 _60830_rangeN = 0;;
	({
		__jule_tuple_sx_23ae26b42_Token__jule_tuple_int __jule_assign_result = _1de42c617_getRangeExprTokens(_60739_tokens);
		_60818_exprTokens = __jule_assign_result.__jule_result_arg0;
		_60830_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_60818_exprTokens.len() == 0LL)) {
			_case_begin_1c72c03a1:;
			{
				return jule::Any(_1de428756_buildBraceLit(_self_, _60739_tokens), &__jule_any_type112);;
			}
		}
		else if ((_60830_rangeN > 0LL)) {
			_case_begin_1c72c0659:;
			{
				_1de421e25_pushErr(_self_, (*(_60739_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c72bea87:;
	};
	jule::Ptr<_23ae26b42_Token> _61913_elseToken = _60818_exprTokens[(_60818_exprTokens.len() - 1LL)];;
	if ((_60818_exprTokens[(_60818_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(16LLU))) {
		_60818_exprTokens=_60818_exprTokens.slice(0LL, (_60818_exprTokens.len() - 1LL));
		jule::Any _62221_d = _1de42a956_build(_self_, &(_60818_exprTokens));;
		if ((_62221_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62221_d };
			
			if (_match_expr.type == &__jule_any_type111) {
				_case_begin_1c72c343c:;
				{
					(*(_60739_tokens))=(*(_60739_tokens)).slice((_60818_exprTokens.len() + 1LL));
					jule::I64 _62925_i = 0LL;;
					jule::Slice<jule::Ptr<_23ae26b42_Token>> _63025_rangeTokens = _1de42ea6a_range(&(_62925_i), jule::Str("{", 1), jule::Str("}", 1), _60739_tokens);;
					jule::Ptr<_1dcd44e21_FnCallExpr> _63125_model = _62221_d.cast_ptr<_1dcd44e21_FnCallExpr>(&__jule_any_type111);;
					if (_1dcd454e8_Ignored(_63125_model.ptr())) {
						_1de421e25_pushErr(_self_, _61913_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1de422244_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63125_model.get()._field_Exception=_1de433354_buildScope((*(_self_))._field_p, &(_63025_rangeTokens), (*(_60739_tokens))[(_62925_i - 1LL)]);
					return _62221_d;;
				}
			}
			else {
				_case_begin_1c72c2e75:;
				{
					_1de421e25_pushErr(_self_, _60818_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1c72c321c:;
		};
	};
	{
		auto &_match_expr{ _60818_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c72c76b6:;
			{
				return _1de426bb6_buildUnsafe(_self_, _60739_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c72c772c:;
			{
				return jule::Any(_1de4268a8_buildAnonFn(_self_, _60739_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c72c7551:;
			{
				return jule::Any(_1de428129_buildTypedStructLiteral(_self_, (*(_60739_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1c72c3c78:;
			{
				_1de421e25_pushErr(_self_, _60818_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c72c20a6:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _1de428d72_getEnumerableParts(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _65941_tokens) {
	_65941_tokens=_65941_tokens.slice(1LL, (_65941_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _66118_parts;;
	jule::Slice<_23aa28854_Log> _66125_errors;;
	({
		__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4305d7_parts(&(_65941_tokens), static_cast<jule::U64>(7LLU), true);
		_66118_parts = __jule_assign_result.__jule_result_arg0;
		_66125_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_66125_errors);;
	return _66118_parts;;
}



inline jule::Ptr<_1dcd4764e_SliceExpr> _1de429180_buildSlice(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _66633_tokens) {
	jule::Ptr<_1dcd4764e_SliceExpr> _66717_slc = jule::new_ptr<_1dcd4764e_SliceExpr>(_1dcd4764e_SliceExpr{._field_Token=_66633_tokens[0LL], ._field_End=_66633_tokens[(_66633_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _67217_parts = _1de428d72_getEnumerableParts(_self_, _66633_tokens);;
	if ((_67217_parts.len() == 0LL)) {
		return _66717_slc;;
	};
	_66717_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1dcd4100a_Expr>>::alloc(0LL, _67217_parts.len());
	{
		auto expr = &(_67217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72cb940:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _67821_p = *it;
			{
				if ((_67821_p.len() == 0LL)) {
					goto _iter_next_1c72cb940;
				};
				{ jule::Slice<jule::Ptr<_1dcd4100a_Expr>> &__jule_push_dest = _66717_slc.get()._field_Exprs; __jule_push_dest.push(_1de42b072_buildFromTokens(_self_, _67821_p)); };
			}
			_iter_next_1c72cb940:;
			++it;
			goto _iter_begin_1c72cb940;
		}
		_iter_end_1c72cb940:;
	};
	return _66717_slc;;
}



inline jule::Ptr<_1dcd47eac_IndexingExpr> _1de4295d1_buildIndexing(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _68836_exprTokens, jule::Slice<jule::Ptr<_23ae26b42_Token>> _68913_tokens, jule::Ptr<_23ae26b42_Token> _68935_errorToken) {
	jule::Ptr<_23ae26b42_Token> _69017_end = _68913_tokens[(_68913_tokens.len() - 1LL)];;
	_68913_tokens=_68913_tokens.slice(1LL, (_68913_tokens.len() - 1LL));
	if ((_68913_tokens.len() == 0LL)) {
		_1de421e25_pushErr(_self_, _68935_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcd4100a_Expr> _69617_expr = _1de42b072_buildFromTokens(_self_, _68836_exprTokens);;
	if ((_69617_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1dcd4100a_Expr> _70017_index = _1de42b072_buildFromTokens(_self_, _68913_tokens);;
	if ((_70017_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1dcd47eac_IndexingExpr>(_1dcd47eac_IndexingExpr{._field_Token=_68935_errorToken, ._field_End=_69017_end, ._field_Expr=_69617_expr, ._field_Index=_70017_index});;
}



inline jule::Ptr<_1dcd485b7_SlicingExpr> _1de429b75_buildSlicing(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _71236_exprTokens, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _71263_start, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _71314_to, jule::Ptr<_23ae26b42_Token>* _71333_errorToken, jule::Ptr<_23ae26b42_Token> _71357_end) {
	jule::Ptr<_1dcd485b7_SlicingExpr> _71417_slc = jule::new_ptr<_1dcd485b7_SlicingExpr>(_1dcd485b7_SlicingExpr{._field_Token=(*(_71333_errorToken)), ._field_End=_71357_end, ._field_Expr=_1de42b072_buildFromTokens(_self_, (*(_71236_exprTokens))), });;
	if (((*(_71263_start)).len() > 0LL)) {
		_71417_slc.get()._field_Start=_1de42b072_buildFromTokens(_self_, (*(_71263_start)));
	};
	if (((*(_71314_to)).len() > 0LL)) {
		_71417_slc.get()._field_To=_1de42b072_buildFromTokens(_self_, (*(_71314_to)));
	};
	return _71417_slc;;
}



inline jule::Any _1de429e83_buildBracketRange(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _72840_tokens) {
	jule::Ptr<_23ae26b42_Token> _72917_errorToken = _72840_tokens[0LL];;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _73018_exprTokens;;
	jule::I64 _73030_rangeN = 0;;
	({
		__jule_tuple_sx_23ae26b42_Token__jule_tuple_int __jule_assign_result = _1de42c617_getRangeExprTokens(&(_72840_tokens));
		_73018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73018_exprTokens.len() == 0LL)) {
		return jule::Any(_1de429180_buildSlice(_self_, _72840_tokens), &__jule_any_type99);;
	} else if ((_73030_rangeN > 0LL)) {
		_1de421e25_pushErr(_self_, _72917_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_72840_tokens=_72840_tokens.slice(_73018_exprTokens.len());
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _74517_splitTokens = _72840_tokens.slice(1LL, (_72840_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _74618_start;;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _74629_to;;
	({
		__jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token __jule_assign_result = _1de42bd31_splitDelim(&(_74517_splitTokens), static_cast<jule::U64>(10LLU));
		_74618_start = __jule_assign_result.__jule_result_arg0;
		_74629_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74618_start != nullptr) || (_74629_to != nullptr))) {
		return jule::Any(_1de429b75_buildSlicing(_self_, &(_73018_exprTokens), &(_74618_start), &(_74629_to), &(_72917_errorToken), _72840_tokens[(_72840_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1de4295d1_buildIndexing(_self_, _73018_exprTokens, _72840_tokens, _72917_errorToken), &__jule_any_type107);;
}



inline jule::Any _1de42a291_buildData(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _75333_tokens) {
	{
		auto _match_expr{ (*(_75333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c72d7cd1:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c72d7d47:;
			{
				return _1de422e7b_buildSingle(_self_, (*(_75333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c72d7e24:;
			{
				if (((*(_75333_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(29LLU))) {
					return jule::Any(_1de423289_buildBindIdent(_self_, _75333_tokens), &__jule_any_type85);;
				};
			}
		}
		_match_end_1c72d78c4:;
	};
	jule::Ptr<_23ae26b42_Token> _76517_token = (*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];;
	if (((_76517_token.get()._field_Id == static_cast<jule::U64>(6LLU)) && _76517_token.get()._field_Kind.equal("...", 3))) {
		return jule::Any(_1de4245dc_buildVariadic(_self_, (*(_75333_tokens))), &__jule_any_type81);;
	};
	_76517_token=(*(_75333_tokens))[0LL];
	{
		auto &_match_expr{ _76517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c72da9a4:;
			{
				if ((((*(_75333_tokens)).len() > 1LL) && _76517_token.get()._field_Kind.equal("*", 1))) {
					_76517_token=(*(_75333_tokens))[1LL];
					if ((_76517_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
						return jule::Any(_1de423ec1_buildType(_self_, _75333_tokens), &__jule_any_type94);;
					};
				};
				return jule::Any(_1de423597_buildUnary(_self_, (*(_75333_tokens))), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c72daa2b:;
			{
				if (((*(_75333_tokens)).len() < 3LL)) {
					goto _match_end_1c72da8c7;
				};
				if (((*(_75333_tokens)).len() > 3LL)) {
					jule::Ptr<_23ae26b42_Token> _78721_t = (*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];;
					if (((_78721_t.get()._field_Id == static_cast<jule::U64>(2LLU)) && _78721_t.get()._field_Kind.equal(")", 1))) {
						goto _match_end_1c72da8c7;
					};
				};
				jule::Ptr<_23ae26b42_Token> _79317_next = (*(_75333_tokens))[1LL];;
				if (((_79317_next.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_79317_next.get()._field_Kind.equal("]", 1)))) {
					goto _match_end_1c72da8c7;
				};
				return jule::Any(_1de423ec1_buildType(_self_, _75333_tokens), &__jule_any_type94);;
			}
		}
		_match_end_1c72da8c7:;
	};
	_76517_token=(*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c72dae7c:;
			{
				return _1de4242ce_buildSubIdent(_self_, _75333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c72daee3:;
			{
				return _1de4248ea_buildOpRight(_self_, _75333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c72e0668:;
			{
				{
					auto &_match_expr{ _76517_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c72e18cd:;
						{
							return _1de42628c_buildParenthesesRange(_self_, _75333_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1c72e1955:;
						{
							return _1de428a64_buildBraceRange(_self_, _75333_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c72e19cc:;
						{
							return _1de429e83_buildBracketRange(_self_, (*(_75333_tokens)));;
						}
					}
					_match_end_1c72e1779:;
				};
			}
		}
		_match_end_1c72dae16:;
	};
	if ((_76517_token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
		return jule::Any(_1de423ec1_buildType(_self_, _75333_tokens), &__jule_any_type94);;
	};
	_1de421e25_pushErr(_self_, _76517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1de42a648_buildBinop(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _82634_tokens, jule::I64 _82652_i) {
	jule::Ptr<_23ae26b42_Token> _82717_op = (*(_82634_tokens))[_82652_i];;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _82817_leftTokens = (*(_82634_tokens)).slice(0LL, _82652_i);;
	if ((_1de42b418_isTypeOp(&(_82717_op.get()._field_Kind)) && _1de42b704_isTypeRange(&(_82817_leftTokens)))) {
		return jule::Any(_1de423ec1_buildType(_self_, _82634_tokens), &__jule_any_type94);;
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _83317_rightTokens = (*(_82634_tokens)).slice((_82652_i + 1LL));;
	if ((_82817_leftTokens.len() == 0LL)) {
		_1de421e25_pushErr(_self_, (*(_82634_tokens))[_82652_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de422244_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83317_rightTokens.len() == 0LL)) {
		_1de421e25_pushErr(_self_, (*(_82634_tokens))[_82652_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de422244_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1dcd44816_BinopExpr>(_1dcd44816_BinopExpr{._field_Left=_1de42b072_buildFromTokens(_self_, _82817_leftTokens), ._field_Right=_1de42b072_buildFromTokens(_self_, _83317_rightTokens), ._field_Op=_82717_op}), &__jule_any_type113);;
}



inline jule::Any _1de42a956_build(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _85129_tokens) {
	if (((*(_85129_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1de423ec1_buildType(_self_, _85129_tokens), &__jule_any_type94);;
	};
	jule::I64 _85513_i = _1de42c0c8_findLowestPrecOp(_85129_tokens);;
	if ((_85513_i == -1LL)) {
		return _1de42a291_buildData(_self_, _85129_tokens);;
	};
	return _1de42a648_buildBinop(_self_, _85129_tokens, _85513_i);;
}



inline jule::Any _1de42ac64_buildKind(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _86233_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _86318_parts;;
	jule::Slice<_23aa28854_Log> _86325_errors;;
	({
		__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4305d7_parts(_86233_tokens, static_cast<jule::U64>(7LLU), true);
		_86318_parts = __jule_assign_result.__jule_result_arg0;
		_86325_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86325_errors != nullptr)) {
		((*(_self_))._field_p.get()._field_errors).append(_86325_errors);;
		return nullptr;;
	} else if ((_86318_parts.len() > 1LL)) {
		return jule::Any(_1de422552_buildTuple(_self_, &(_86318_parts)), &__jule_any_type86);;
	};
	return _1de42a956_build(_self_, _86233_tokens);;
}



inline jule::Ptr<_1dcd4100a_Expr> _1de42b072_buildFromTokens(_1de421694_exprBuilder* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _87338_tokens) {
	if ((_87338_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87717_kind = _1de42ac64_buildKind(_self_, &(_87338_tokens));;
	if ((_87717_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1dcd4100a_Expr>(_1dcd4100a_Expr{._field_Token=_87338_tokens[0LL], ._field_End=_87338_tokens[(_87338_tokens.len() - 1LL)], ._field_Kind=_87717_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _1de421694_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de42ceca_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1de431bb0_stop(_1de4318c4_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1de431e24_stopped(_1de4318c4_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1de4322dc_pushErr(_1de4318c4_parser* _self_, jule::Ptr<_23ae26b42_Token> _28326_token, jule::Str _28341_fmt, jule::Slice<jule::Any> _28354_args) {
	{ jule::Slice<_23aa28854_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1de430c69_compilerErr(&(_28326_token), &(_28341_fmt), _28354_args)); };
}



inline void _1de43260b_pushSuggestion(_1de4318c4_parser* _self_, jule::Str _28833_fmt, jule::Slice<jule::Any> _28846_args) {
	{
		_1de431198_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28833_fmt, _28846_args);
	};
}



inline jule::Ptr<_1dcd4100a_Expr> _1de432919_buildExpr(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _29234_tokens) {
	return _1de42b072_buildFromTokens(_self_.get()._field_ep.ptr(), (*(_29234_tokens)));;
}



inline jule::Ptr<_1dcd09369_Directive> _1de432c27_buildDirective(_1de4318c4_parser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _29637_tokens) {
	if ((_29637_tokens.len() == 1LL)) {
		_1de4322dc_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29637_tokens[1LL].get()._field_Column != (_29637_tokens[0LL].get()._field_Column + 1LL))) {
		_1de4322dc_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1dcd09369_Directive>(_1dcd09369_Directive{._field_Tag=_29637_tokens[1LL], ._field_Args=_29637_tokens.slice(2LL)});;
}



inline void _1de432e9c_pushDirective(_1de4318c4_parser* _self_, jule::Ptr<_1dcd09369_Directive> _31136_d) {
	if ((_31136_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7322b95:;
		if (it != expr_end) {
			jule::Ptr<_1dcd09369_Directive> _31616_pd = *it;
			{
				if ((_31136_d.get()._field_Tag.get()._field_Kind == _31616_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1c7322b95:;
			++it;
			goto _iter_begin_1c7322b95;
		}
		_iter_end_1c7322b95:;
	};
	{ jule::Slice<jule::Ptr<_1dcd09369_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_31136_d); };
}



inline jule::Ptr<_1dcd4b9b6_ScopeTree> _1de433354_buildScope(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _32435_tokens, jule::Ptr<_23ae26b42_Token> _32457_end) {
	jule::Ptr<_1dcd4b9b6_ScopeTree> _32517_s = _1de413785_newScope();;
	_32517_s.get()._field_End=_32457_end;
	_1de4151b0_scopeParser _32717_sp = _1de4151b0_scopeParser{._field_p=_self_, };;
	_1de420c04_build(&_32717_sp, _32435_tokens, &(_32517_s));
	return _32517_s;;
}



inline __jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool _1de4337a5__buildType(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _33442_tokens, jule::I64* _33513_i, jule::Bool _33522_err) {
	__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1de4425e9_typeBuilder _33617_tb = _1de4425e9_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33442_tokens)), ._field_i=_33513_i, ._field_err=_33522_err};;
	jule::Ptr<_1dcd3bd80_TypeDecl> _34218_decl;;
	jule::Bool _34224_ok = false;;
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de4455ca_build(&_33617_tb);
		_34218_decl = __jule_assign_result.__jule_result_arg0;
		_34224_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34218_decl;
	__jule_func_result.__jule_result_arg1 = _34224_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool _1de433c06_buildType(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _34741_tokens, jule::I64* _34813_i, jule::Bool _34822_err) {
	__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_23ae26b42_Token> _34913_token = (*(_34741_tokens))[(*(_34813_i))];;
	jule::Ptr<_1dcd3bd80_TypeDecl> _35018_t;;
	jule::Bool _35021_ok = false;;
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de4337a5__buildType(_self_, _34741_tokens, _34813_i, _34822_err);
		_35018_t = __jule_assign_result.__jule_result_arg0;
		_35021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_34822_err && (!(_35021_ok)))) {
		_1de4322dc_pushErr(_self_.ptr(), _34913_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35018_t;
	__jule_func_result.__jule_result_arg1 = _35021_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1dcd52cec_TypeAliasDecl> _1de434014_buildTypeAliasDecl(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _35743_tokens) {
	jule::I64 _35817_i = 1LL;;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcd52cec_TypeAliasDecl> _36317_tad = jule::new_ptr<_1dcd52cec_TypeAliasDecl>(_1dcd52cec_TypeAliasDecl{._field_Token=(*(_35743_tokens))[1LL], ._field_Ident=(*(_35743_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_23ae26b42_Token> _36717_token = (*(_35743_tokens))[_35817_i];;
	if ((_36717_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de4322dc_pushErr(_self_.ptr(), _36717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	_36717_token=(*(_35743_tokens))[_35817_i];
	if ((_36717_token.get()._field_Id != static_cast<jule::U64>(10LLU))) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	jule::Ptr<_1dcd3bd80_TypeDecl> _38818_t;;
	jule::Bool _38821_ok = false;;
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, _35743_tokens, (&(_35817_i)), true);
		_38818_t = __jule_assign_result.__jule_result_arg0;
		_38821_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36317_tad.get()._field_Kind=_38818_t;
	if ((_38821_ok && (_35817_i < (*(_35743_tokens)).len()))) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_35743_tokens))[_35817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36317_tad.get()._field_Public=_1de441582_isPub(&(_36317_tad.get()._field_Ident));
	return _36317_tad;;
}



inline void _1de434333_buildVarTypeAndExpr(jule::Ptr<_1de4318c4_parser> _self_, jule::Ptr<_1dcd4e48b_VarDecl>* _39744_v, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _39762_tokens) {
	jule::I64 _39817_i = 0LL;;
	jule::Ptr<_23ae26b42_Token> _39917_tok = (*(_39762_tokens))[_39817_i];;
	if ((_39917_tok.get()._field_Id == static_cast<jule::U64>(10LLU))) {
		(_39817_i)++;
		if (((_39817_i >= (*(_39762_tokens)).len()) || (((*(_39762_tokens))[_39817_i].get()._field_Id == static_cast<jule::U64>(6LLU)) && (*(_39762_tokens))[_39817_i].get()._field_Kind.equal("=", 1)))) {
			_1de4322dc_pushErr(_self_.ptr(), _39917_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1dcd3bd80_TypeDecl> _40722_t;;
		jule::Bool _40725_ok = false;;
		({
			__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, _39762_tokens, (&(_39817_i)), true);
			_40722_t = __jule_assign_result.__jule_result_arg0;
			_40725_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40725_ok) {
			(*(_39744_v)).get()._field_Kind=_40722_t;
			if ((_39817_i >= (*(_39762_tokens)).len())) {
				return;;
			};
			_39917_tok=(*(_39762_tokens))[_39817_i];
		};
	};
	if ((_39917_tok.get()._field_Id == static_cast<jule::U64>(6LLU))) {
		if ((!_39917_tok.get()._field_Kind.equal("=", 1))) {
			_1de4322dc_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_23ae26b42_Token>> _42221_exprTokens = (*(_39762_tokens)).slice((_39817_i + 1LL));;
		if ((_42221_exprTokens.len() == 0LL)) {
			_1de4322dc_pushErr(_self_.ptr(), _39917_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39744_v)).get()._field_Expr=_1de432919_buildExpr(_self_, &(_42221_exprTokens));
	} else {
		_1de4322dc_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1de434652_buildVarCommon(jule::Ptr<_1de4318c4_parser> _self_, jule::Ptr<_1dcd4e48b_VarDecl>* _43339_v, jule::Slice<jule::Ptr<_23ae26b42_Token>> _43356_tokens) {
	(*(_43339_v)).get()._field_Token=_43356_tokens[0LL];
	if (((*(_43339_v)).get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_43339_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43339_v)).get()._field_Ident=(*(_43339_v)).get()._field_Token.get()._field_Kind;
	(*(_43339_v)).get()._field_Public=_1de441582_isPub(&((*(_43339_v)).get()._field_Ident));
	(*(_43339_v)).get()._field_Kind=nullptr;
	if ((_43356_tokens.len() > 1LL)) {
		_43356_tokens=_43356_tokens.slice(1LL);
		_1de434333_buildVarTypeAndExpr(_self_, _43339_v, &(_43356_tokens));
	};
}



inline void _1de434a1a_buildVarBegin(_1de4318c4_parser* _self_, jule::Ptr<_1dcd4e48b_VarDecl>* _44937_v, jule::I64* _44955_i, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _44964_tokens) {
	jule::Ptr<_23ae26b42_Token> _45013_tok = (*(_44964_tokens))[(*(_44955_i))];;
	{
		auto &_match_expr{ _45013_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1c7339ea9:;
			{
				(*(_44937_v)).get()._field_Statically=true;
				goto _case_begin_1c733ac46;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c733ac46:;
			{
				((*(_44955_i)))++;
				if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
					_1de4322dc_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_44964_tokens))[(*(_44955_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
					(*(_44937_v)).get()._field_Mutable=true;
					((*(_44955_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1c733a4c6:;
			{
				((*(_44955_i)))++;
				(*(_44937_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1c733a41b:;
			{
				_1de4322dc_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c733a295:;
	};
	if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
		_1de4322dc_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1dcd4e48b_VarDecl> _1de434d28_buildVar(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _47932_tokens) {
	jule::I64 _48017_i = 0LL;;
	jule::Ptr<_1dcd4e48b_VarDecl> _48117_v = jule::new_ptr<_1dcd4e48b_VarDecl>(_1dcd4e48b_VarDecl{._field_Token=_47932_tokens[0LL], });;
	_1de434a1a_buildVarBegin(_self_.ptr(), &(_48117_v), &(_48017_i), &(_47932_tokens));
	if ((_48017_i >= _47932_tokens.len())) {
		return nullptr;;
	};
	_47932_tokens=_47932_tokens.slice(_48017_i);
	if (((_47932_tokens[0LL].get()._field_Id == static_cast<jule::U64>(6LLU)) && _47932_tokens[0LL].get()._field_Kind.equal("&", 1))) {
		_48117_v.get()._field_Reference=true;
		if ((_47932_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_47932_tokens=_47932_tokens.slice(1LL);
	};
	_1de434652_buildVarCommon(_self_, &(_48117_v), _47932_tokens);
	return _48117_v;;
}



inline jule::Ptr<_1dcd48d26_GenericDecl> _1de435136_buildGeneric(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _50137_tokens) {
	jule::Ptr<_1dcd48d26_GenericDecl> _50217_g = jule::new_ptr<_1dcd48d26_GenericDecl>(_1dcd48d26_GenericDecl{._field_Token=(*(_50137_tokens))[0LL], });;
	if ((_50217_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de4322dc_pushErr(_self_.ptr(), _50217_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50217_g.get()._field_Ident=_50217_g.get()._field_Token.get()._field_Kind;
	if (((*(_50137_tokens)).len() > 1LL)) {
		if (((*(_50137_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(10LLU))) {
			_1de4322dc_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50137_tokens)).len() == 2LL)) {
			_1de4322dc_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_23ae26b42_Token>> _51921_constraintTokens = (*(_50137_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _52022_parts;;
		jule::Slice<_23aa28854_Log> _52029_errors;;
		({
			__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4301ec_partsKind(&(_51921_constraintTokens), jule::Str("|", 1), true);
			_52022_parts = __jule_assign_result.__jule_result_arg0;
			_52029_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52029_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_52029_errors);;
			return nullptr;;
		};
		_50217_g.get()._field_Constraint=jule::new_ptr<_1dcd488a3_Constraint>(_1dcd488a3_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>::alloc(0LL, _52022_parts.len())});
		{
			auto expr = &(_52022_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c7345ab9:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_23ae26b42_Token>> _52625_part = *it;
				{
					jule::I64 _52725_i = 0LL;;
					jule::Ptr<_1dcd3bd80_TypeDecl> _52826_kind;;
					({
						__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, &(_52625_part), (&(_52725_i)), true);
						_52826_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> &__jule_push_dest = _50217_g.get()._field_Constraint.get()._field_Mask; __jule_push_dest.push(_52826_kind); };
					if ((_52725_i < _52625_part.len())) {
						_1de4322dc_pushErr(_self_.ptr(), _52625_part[_52725_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c7345ab9:;
				++it;
				goto _iter_begin_1c7345ab9;
			}
			_iter_end_1c7345ab9:;
		};
	};
	return _50217_g;;
}



inline jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> _1de4354dd_buildGenerics(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _53838_tokens, jule::Ptr<_23ae26b42_Token>* _53857_errorToken) {
	if (((*(_53838_tokens)).len() == 0LL)) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_53857_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _54418_parts;;
	jule::Slice<_23aa28854_Log> _54425_errors;;
	({
		__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4305d7_parts(_53838_tokens, static_cast<jule::U64>(7LLU), true);
		_54418_parts = __jule_assign_result.__jule_result_arg0;
		_54425_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54425_errors.len() > 0LL)) {
		(_self_.get()._field_errors).append(_54425_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> _55017_generics = jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>>::alloc(0LL, _54418_parts.len());;
	{
		auto expr = &(_54418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c734a52a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _55121_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>> &__jule_push_dest = _55017_generics; __jule_push_dest.push(_1de435136_buildGeneric(_self_, &(_55121_part))); };
			}
			_iter_next_1c734a52a:;
			++it;
			goto _iter_begin_1c734a52a;
		}
		_iter_end_1c734a52a:;
	};
	return _55017_generics;;
}



inline jule::Ptr<_1dcd4c18c_ParamDecl> _1de4357eb_buildSelfParam(_1de4318c4_parser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _55837_tokens) {
	if ((_55837_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1dcd4c18c_ParamDecl> _56317_param = jule::new_ptr<_1dcd4c18c_ParamDecl>();;
	jule::I64 _56617_i = 0LL;;
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_56317_param.get()._field_Mutable=true;
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_1de4322dc_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (_55837_tokens[_56617_i].get()._field_Kind.equal("&", 1)) {
		_56317_param.get()._field_Ident=jule::Str("&", 1);
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_1de4322dc_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U64>(26LLU))) {
		(_56317_param.get()._field_Ident).append("self", 4);
		_56317_param.get()._field_Token=_55837_tokens[_56617_i];
		(_56617_i)++;
		if ((_56617_i < _55837_tokens.len())) {
			_1de4322dc_pushErr(_self_, _55837_tokens[_56617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56317_param;;
}



inline void _1de435bb4_paramTypeBegin(_1de4318c4_parser* _self_, jule::Ptr<_1dcd4c18c_ParamDecl>* _59738_param, jule::I64* _59762_i, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _59771_tokens) {
	for (; ((*(_59762_i)) < (*(_59771_tokens)).len()); ((*(_59762_i)))++) {
		{
			jule::Ptr<_23ae26b42_Token> _59917_token = (*(_59771_tokens))[(*(_59762_i))];;
			if ((_59917_token.get()._field_Id != static_cast<jule::U64>(6LLU))) {
				return;;
			} else if ((!_59917_token.get()._field_Kind.equal("...", 3))) {
				return;;
			};
			if ((*(_59738_param)).get()._field_Variadic) {
				_1de4322dc_pushErr(_self_, _59917_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1c7351b19;
			};
			(*(_59738_param)).get()._field_Variadic=true;
		}
	_iter_next_1c7351b19:;
	}
	_iter_end_1c7351b19:;;
}



inline void _1de435ed3_buildParamType(jule::Ptr<_1de4318c4_parser> _self_, jule::Ptr<_1dcd4c18c_ParamDecl>* _61439_param, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _61463_tokens) {
	jule::I64 _61517_i = 0LL;;
	_1de435bb4_paramTypeBegin(_self_.ptr(), _61439_param, &(_61517_i), _61463_tokens);
	if ((_61517_i >= (*(_61463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, _61463_tokens, (&(_61517_i)), true);
		(*(_61439_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61517_i < (*(_61463_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_61463_tokens))[_61517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1de436302_buildParamBody(jule::Ptr<_1de4318c4_parser> _self_, jule::Ptr<_1dcd4c18c_ParamDecl>* _62739_param, jule::Slice<jule::Ptr<_23ae26b42_Token>> _62762_tokens) {
	jule::Ptr<_23ae26b42_Token> _62817_tok = _62762_tokens[0LL];;
	if ((_62762_tokens.len() == 1LL)) {
		(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
		return;;
	} else if ((_62762_tokens.len() < 3LL)) {
		_1de4322dc_pushErr(_self_.ptr(), _62817_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62762_tokens[1LL].get()._field_Id != static_cast<jule::U64>(10LLU))) {
		(*(_62739_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1de435ed3_buildParamType(_self_, _62739_param, &(_62762_tokens));
		return;;
	};
	(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
	_62762_tokens=_62762_tokens.slice(2LL);
	_1de435ed3_buildParamType(_self_, _62739_param, &(_62762_tokens));
}



inline jule::Ptr<_1dcd4c18c_ParamDecl> _1de436610_buildParam(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _64734_tokens) {
	jule::Ptr<_1dcd4c18c_ParamDecl> _64817_param = jule::new_ptr<_1dcd4c18c_ParamDecl>(_1dcd4c18c_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_1de4322dc_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(6LLU)) && _64817_param.get()._field_Token.get()._field_Kind.equal("&", 1))) {
			if ((_64734_tokens.len() == 1LL)) {
				_1de4322dc_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(1LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1de435ed3_buildParamType(_self_, &(_64817_param), &(_64734_tokens));
	} else {
		_1de436302_buildParamBody(_self_, &(_64817_param), _64734_tokens);
	};
	return _64817_param;;
}



inline void _1de436885_checkParams(_1de4318c4_parser* _self_, jule::Slice<jule::Ptr<_1dcd4c18c_ParamDecl>>* _69035_params) {
	{
		auto expr = _69035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c735e5a5:;
		if (it != expr_end) {
			jule::Ptr<_1dcd4c18c_ParamDecl> _69121_param = *it;
			{
				if ((_1dcd4c500_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1c735e5a5;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_1de4322dc_pushErr(_self_, _69121_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1dcd3c446_IdentTypeDecl>(_1dcd3c446_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1c735e5a5:;
			++it;
			goto _iter_begin_1c735e5a5;
		}
		_iter_end_1c735e5a5:;
	};
}



inline jule::Slice<jule::Ptr<_1dcd4c18c_ParamDecl>> _1de436c3c_buildParams(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _71118_parts;;
	jule::Slice<_23aa28854_Log> _71125_errs;;
	({
		__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4305d7_parts(_71036_tokens, static_cast<jule::U64>(7LLU), true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_71125_errs);;
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1dcd4c18c_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_1dcd4c18c_ParamDecl> _71921_param = _1de4357eb_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _1dcd4c500_IsSelf(_71921_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1dcd4c18c_ParamDecl>> &__jule_push_dest = _71717_params; __jule_push_dest.push(_71921_param); };
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73687ce:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _72621_part = *it;
			{
				jule::Ptr<_1dcd4c18c_ParamDecl> _72721_param = _1de436610_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1dcd4c18c_ParamDecl>> &__jule_push_dest = _71717_params; __jule_push_dest.push(_72721_param); };
				};
			}
			_iter_next_1c73687ce:;
			++it;
			goto _iter_begin_1c73687ce;
		}
		_iter_end_1c73687ce:;
	};
	_1de436885_checkParams(_self_.ptr(), &(_71717_params));
	return _71717_params;;
}



inline __jule_tuple_x_1dcd3eaec_RetTypeDecl__jule_tuple_bool _1de4370e4_buildMultiRetType(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _73742_tokens, jule::I64* _73765_i) {
	__jule_tuple_x_1dcd3eaec_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1dcd3eaec_RetTypeDecl>();
	((*(_73765_i)))++;
	if (((*(_73765_i)) >= (*(_73742_tokens)).len())) {
		((*(_73765_i)))--;
		({
			__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, _73742_tokens, (&((*(_73765_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73765_i)))--;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _74717_rangeTokens = _1de42ea6a_range(_73765_i, jule::Str("(", 1), jule::Str(")", 1), _73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _74918_parts;;
	jule::Slice<_23aa28854_Log> _74925_errs;;
	({
		__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4305d7_parts(&(_74717_rangeTokens), static_cast<jule::U64>(7LLU), true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_74925_errs);;
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_23ae26b42_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto expr = &(_74918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c736e8d4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _75721_part = *it;
			{
				jule::Ptr<_23ae26b42_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(10LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_1de4322dc_pushErr(_self_.ptr(), _75821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1c736e8d4;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_23ae26b42_Token> _77525_newToken = jule::new_ptr<_23ae26b42_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_23ae26b42_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_77525_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_23ae26b42_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_75821_token); };
				};
				jule::Ptr<_1dcd3bd80_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, &(_75721_part), (&(_75921_offset)), true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_1de4322dc_pushErr(_self_.ptr(), _75721_part[_75921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> &__jule_push_dest = _75517_types; __jule_push_dest.push(_78222_tk); };
			}
			_iter_next_1c736e8d4:;
			++it;
			goto _iter_begin_1c736e8d4;
		}
		_iter_end_1c736e8d4:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=(*(_73742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1dcd3d579_TupleTypeDecl>(_1dcd3d579_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type80)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1dcd3eaec_RetTypeDecl__jule_tuple_bool _1de43749b_buildRetType(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _80537_tokens, jule::I64* _80560_i) {
	__jule_tuple_x_1dcd3eaec_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1dcd3eaec_RetTypeDecl>();
	if (((*(_80560_i)) >= (*(_80537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_23ae26b42_Token> _81117_token = (*(_80537_tokens))[(*(_80560_i))];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c7377766:;
			{
				if (_81117_token.get()._field_Kind.equal("{", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c73777cc:;
			{
				if (_81117_token.get()._field_Kind.equal("=", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1c7377843:;
			{
				if ((((*(_80560_i)) + 1LL) >= (*(_80537_tokens)).len())) {
					_1de4322dc_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80560_i)))++;
				_81117_token=(*(_80537_tokens))[(*(_80560_i))];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1c737a071:;
							{
								({
									__jule_tuple_x_1dcd3eaec_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1de4370e4_buildMultiRetType(_self_, _80537_tokens, _80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1c737a0d7:;
							{
								_1de4322dc_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1c7379d73:;
					};
				};
				({
					__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, _80537_tokens, (&((*(_80560_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1c7377700:;
	};
	((*(_80560_i)))++;
	_1de4322dc_pushErr(_self_.ptr(), _81117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1dcd4d4ac_FnDecl> _1de4378ec_buildFnPrototype(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _85041_tokens, jule::I64* _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_1dcd4d4ac_FnDecl> _85117_f = jule::new_ptr<_1dcd4d4ac_FnDecl>(_1dcd4d4ac_FnDecl{._field_Token=(*(_85041_tokens))[(*(_85064_i))], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_85117_f.get()._field_Statically=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1de4322dc_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		_85117_f.get()._field_Unsafety=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1de4322dc_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	((*(_85064_i)))++;
	if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_23ae26b42_Token> _88413_tok = (*(_85041_tokens))[(*(_85064_i))];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1de4322dc_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_23ae26b42_Token> _89613_errorToken = (*(_85041_tokens))[(*(_85064_i))];;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _89717_genericsTokens = _1de42ea6a_range(_85064_i, jule::Str("[", 1), jule::Str("]", 1), _85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_1de4354dd_buildGenerics(_self_, &(_89717_genericsTokens), &(_89613_errorToken));
	};
	if ((!(*(_85041_tokens))[(*(_85064_i))].get()._field_Kind.equal("(", 1))) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_85041_tokens))[(*(_85064_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _90717_paramsToks = _1de42ea6a_range(_85064_i, jule::Str("(", 1), jule::Str(")", 1), _85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_1de436c3c_buildParams(_self_, &(_90717_paramsToks), _85072_method);
	};
	if (((*(_85064_i)) < (*(_85041_tokens)).len())) {
		jule::Ptr<_23ae26b42_Token> _91317_token = (*(_85041_tokens))[(*(_85064_i))];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(6LLU)) && _91317_token.get()._field_Kind.equal("!", 1))) {
			_85117_f.get()._field_Exceptional=true;
			((*(_85064_i)))++;
		};
	};
	_85117_f.get()._field_Public=_1de441582_isPub(&(_85117_f.get()._field_Ident));
	({
		__jule_tuple_x_1dcd3eaec_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1de43749b_buildRetType(_self_, _85041_tokens, _85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_1dcd4d4ac_FnDecl> _1de437d4d_buildFn(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_1dcd4d4ac_FnDecl> _92917_f = _1de4378ec_buildFnPrototype(_self_, _92732_tokens, &(_92817_i), _92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_1de4322dc_pushErr(_self_.ptr(), (*(_92732_tokens))[(_92817_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= (*(_92732_tokens)).len())) {
		_1de431bb0_stop(_self_.ptr());
		_1de4322dc_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _94517_blockTokens = _1de42ea6a_range(&(_92817_i), jule::Str("{", 1), jule::Str("}", 1), _92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_1de433354_buildScope(_self_, &(_94517_blockTokens), (*(_92732_tokens))[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_1de4322dc_pushErr(_self_.ptr(), (*(_92732_tokens))[_92817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1de431bb0_stop(_self_.ptr());
		_1de4322dc_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_23ae26b42_Token>> _1de43815b_getUseDeclSelectors(_1de4318c4_parser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_1de42ea6a_range(&(_96217_i), jule::Str("{", 1), jule::Str("}", 1), &(_96142_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _96418_parts;;
	jule::Slice<_23aa28854_Log> _96425_errs;;
	({
		__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4305d7_parts(&(_96142_tokens), static_cast<jule::U64>(7LLU), true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_96425_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _97017_selectors = jule::Slice<jule::Ptr<_23ae26b42_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto expr = &(_96418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c738ddcb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_1de4322dc_pushErr(_self_, _97121_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_23ae26b42_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(1LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(26LLU)))) {
					_1de4322dc_pushErr(_self_, _97521_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1de43260b_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1c738ddcb;
				};
				{ jule::Slice<jule::Ptr<_23ae26b42_Token>> &__jule_push_dest = _97017_selectors; __jule_push_dest.push(_97521_tok); };
			}
			_iter_next_1c738ddcb:;
			++it;
			goto _iter_begin_1c738ddcb;
		}
		_iter_end_1c738ddcb:;
	};
	return _97017_selectors;;
}



inline void _1de43847a_buildBindUseDecl(_1de4318c4_parser* _self_, jule::Ptr<_1dcd541d8_UseDecl>* _98640_decl, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _98657_tokens) {
	if (((*(_98657_tokens)).len() > 1LL)) {
		_1de4322dc_pushErr(_self_, (*(_98657_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_23ae26b42_Token> _99013_token = (*(_98657_tokens))[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(5LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_1de4322dc_pushErr(_self_, _99013_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98640_decl)).get()._field_Binded=true;
	(*(_98640_decl)).get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL, (_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _1de438799_buildStdUseDecl(_1de4318c4_parser* _self_, jule::Ptr<_1dcd541d8_UseDecl>* _99939_decl, jule::Slice<jule::Ptr<_23ae26b42_Token>> _99959_tokens) {
	(*(_99939_decl)).get()._field_Std=true;
	jule::Ptr<_23ae26b42_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_1de4322dc_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1c7396b92:;
			{
				_1de4322dc_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c7396c19:;
			{
				if ((!_100217_token.get()._field_Kind.equal("}", 1))) {
					_1de4322dc_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_23ae26b42_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token __jule_assign_result = _1de42ed12_rangeLast(&(_99959_tokens));
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99939_decl)).get()._field_Selected=_1de43815b_getUseDeclSelectors(_self_, _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_1de4322dc_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1de4322dc_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1de4322dc_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c7396c91:;
			{
				if ((!_100217_token.get()._field_Kind.equal("*", 1))) {
					_1de4322dc_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1de4322dc_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1de4322dc_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1de4322dc_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99939_decl)).get()._field_Full=true;
			}
		}
		_match_end_1c7396b1a:;
	};
	(*(_99939_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1de431440_tokstoa(&(_99959_tokens)));
}



inline void _1de438ab8_buildIdentUseDecl(_1de4318c4_parser* _self_, jule::Ptr<_1dcd541d8_UseDecl>* _106141_decl, jule::Slice<jule::Ptr<_23ae26b42_Token>> _106161_tokens) {
	(*(_106141_decl)).get()._field_Std=false;
	jule::Ptr<_23ae26b42_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1c73a041a:;
			{
				_1de4322dc_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c73a0948:;
			{
				if ((!_106417_token.get()._field_Kind.equal("}", 1))) {
					_1de4322dc_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_23ae26b42_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token __jule_assign_result = _1de42ed12_rangeLast(&(_106161_tokens));
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106141_decl)).get()._field_Selected=_1de43815b_getUseDeclSelectors(_self_, _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_1de4322dc_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1de4322dc_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1de4322dc_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c73a0ae1:;
			{
				if ((!_106417_token.get()._field_Kind.equal("*", 1))) {
					_1de4322dc_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1de4322dc_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1de4322dc_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1de4322dc_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106141_decl)).get()._field_Full=true;
			}
		}
		_match_end_1c73a08e3:;
	};
	(*(_106141_decl)).get()._field_LinkPath=_1de431440_tokstoa(&(_106161_tokens));
}



inline void _1de438dd7_parseUseDecl(_1de4318c4_parser* _self_, jule::Ptr<_1dcd541d8_UseDecl>* _112436_decl, jule::Slice<jule::Ptr<_23ae26b42_Token>> _112456_tokens) {
	if ((*(_112436_decl)).get()._field_Binded) {
		_1de43847a_buildBindUseDecl(_self_, _112436_decl, &(_112456_tokens));
		return;;
	};
	jule::Ptr<_23ae26b42_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de4322dc_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		(*(_112436_decl)).get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1de4322dc_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1de43260b_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if (_113017_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_1c710853b:;
			{
				_1de438799_buildStdUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		else {
			_case_begin_1c7109e44:;
			{
				_1de438ab8_buildIdentUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		_match_end_1c7109dcd:;
	};
}



inline jule::Ptr<_1dcd541d8_UseDecl> _1de43928e_buildUseDecl(_1de4318c4_parser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _115835_tokens, jule::Bool _115853_binded) {
	jule::Ptr<_1dcd541d8_UseDecl> _115917_decl = jule::new_ptr<_1dcd541d8_UseDecl>(_1dcd541d8_UseDecl{._field_Token=_115835_tokens[0LL], ._field_Binded=_115853_binded, });;
	if ((_115835_tokens.len() < 2LL)) {
		_1de4322dc_pushErr(_self_, _115917_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_1de438dd7_parseUseDecl(_self_, &(_115917_decl), _115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de439646_buildTypeEnumItemKind(jule::Ptr<_1de4318c4_parser> _self_, jule::I64* _117246_i, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = (*(_117246_i));;
	for (; ((*(_117246_i)) < (*(_117259_tokens)).len()); ((*(_117246_i)))++) {
		{
			jule::Ptr<_23ae26b42_Token> _117617_t = (*(_117259_tokens))[(*(_117246_i))];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c710dc28:;
						{
							(_117317_braceN)++;
							goto _iter_next_1c710d552;
						}
					}
					else {
						_case_begin_1c710e5db:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1c710e3cc:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1c710d552;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(7LLU)) || (((*(_117246_i)) + 1LL) >= (*(_117259_tokens)).len()))) {
				jule::Slice<jule::Ptr<_23ae26b42_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(7LLU))) {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart, (*(_117246_i)));
				} else {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_1dcd3bd80_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, &(_119225_kindTokens), (&(_119825_j)), true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_1de4322dc_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_1c710d552:;
	}
	_iter_end_1c710d552:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1dcd55959_TypeEnumItemDecl>> _1de439954_buildTypeEnumItems(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _120943_tokens) {
	jule::Slice<jule::Ptr<_1dcd55959_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_1dcd55959_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < (*(_120943_tokens)).len()); (_121117_i)++) {
		{
			jule::Ptr<_23ae26b42_Token> _121321_t = (*(_120943_tokens))[_121117_i];;
			jule::Ptr<_1dcd55959_TypeEnumItemDecl> _121421_item = jule::new_ptr<_1dcd55959_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_120943_tokens)).len() - _121117_i) > 2LL))) {
				_121321_t=(*(_120943_tokens))[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(10LLU))) {
					_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
					_121117_i+=2LL;
					if (((_121117_i >= (*(_120943_tokens)).len()) || ((*(_120943_tokens))[_121117_i].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
						_1de4322dc_pushErr(_self_.ptr(), _121321_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1c7113c94;
					};
				};
			};
			_121421_item.get()._field_Kind=_1de439646_buildTypeEnumItemKind(_self_, &(_121117_i), _120943_tokens);
			{ jule::Slice<jule::Ptr<_1dcd55959_TypeEnumItemDecl>> &__jule_push_dest = _121017_items; __jule_push_dest.push(_121421_item); };
		}
	_iter_next_1c7113c94:;
	}
	_iter_end_1c7113c94:;;
	return _121017_items;;
}



inline jule::Ptr<_1dcd56064_TypeEnumDecl> _1de439c62_buildTypeEnumDecl(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_1dcd56064_TypeEnumDecl> _123517_e = jule::new_ptr<_1dcd56064_TypeEnumDecl>(_1dcd56064_TypeEnumDecl{._field_Token=(*(_123342_tokens))[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de4322dc_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _124517_itemTokens = _1de42ea6a_range(&(_123417_i), jule::Str("{", 1), jule::Str("}", 1), _123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_1de431bb0_stop(_self_.ptr());
		_1de4322dc_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < (*(_123342_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_123342_tokens))[_123417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_1de441582_isPub(&(_123517_e.get()._field_Ident));
	_123517_e.get()._field_End=(*(_123342_tokens))[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_1de439954_buildTypeEnumItems(_self_, &(_124517_itemTokens));
	return _123517_e;;
}



inline jule::Ptr<_1dcd4100a_Expr> _1de43a119_buildEnumItemExpr(jule::Ptr<_1de4318c4_parser> _self_, jule::I64* _126042_i, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = (*(_126042_i));;
	for (; ((*(_126042_i)) < (*(_126055_tokens)).len()); ((*(_126042_i)))++) {
		{
			jule::Ptr<_23ae26b42_Token> _126417_t = (*(_126055_tokens))[(*(_126042_i))];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1c711d980:;
						{
							(_126117_braceN)++;
							goto _iter_next_1c711d2a9;
						}
					}
					else {
						_case_begin_1c711e343:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1c711e134:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1c711d2a9;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(7LLU)) || (((*(_126042_i)) + 1LL) >= (*(_126055_tokens)).len()))) {
				jule::Slice<jule::Ptr<_23ae26b42_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(7LLU))) {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart, (*(_126042_i)));
				} else {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart);
				};
				return _1de432919_buildExpr(_self_, &(_128025_exprTokens));;
			};
		}
	_iter_next_1c711d2a9:;
	}
	_iter_end_1c711d2a9:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1dcd5465b_EnumItemDecl>> _1de43a427_buildEnumItems(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _129239_tokens) {
	jule::Slice<jule::Ptr<_1dcd5465b_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_1dcd5465b_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < (*(_129239_tokens)).len()); (_129417_i)++) {
		{
			jule::Ptr<_23ae26b42_Token> _129621_t = (*(_129239_tokens))[_129417_i];;
			jule::Ptr<_1dcd5465b_EnumItemDecl> _129721_item = jule::new_ptr<_1dcd5465b_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
				_1de4322dc_pushErr(_self_.ptr(), _129721_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
				if (((_129417_i + 1LL) < (*(_129239_tokens)).len())) {
					(_129417_i)++;
				};
				{ jule::Slice<jule::Ptr<_1dcd5465b_EnumItemDecl>> &__jule_push_dest = _129317_items; __jule_push_dest.push(_129721_item); };
				goto _iter_next_1c7122841;
			};
			(_129417_i)++;
			_129621_t=(*(_129239_tokens))[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(10LLU))) {
				_1de4322dc_pushErr(_self_.ptr(), _129621_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1c7122841;
			};
			if (((_129417_i >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[_129417_i].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
				_1de4322dc_pushErr(_self_.ptr(), _129621_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1c7122841;
			};
			_129721_item.get()._field_Expr=_1de43a119_buildEnumItemExpr(_self_, &(_129417_i), _129239_tokens);
			{ jule::Slice<jule::Ptr<_1dcd5465b_EnumItemDecl>> &__jule_push_dest = _129317_items; __jule_push_dest.push(_129721_item); };
		}
	_iter_next_1c7122841:;
	}
	_iter_end_1c7122841:;;
	return _129317_items;;
}



inline jule::Ptr<_1dcd55184_EnumDecl> _1de43a735_buildEnumDecl(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _132938_tokens) {
	if (((*(_132938_tokens)).len() < 3LL)) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_132938_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcd55184_EnumDecl> _133417_e = jule::new_ptr<_1dcd55184_EnumDecl>(_1dcd55184_EnumDecl{._field_Token=(*(_132938_tokens))[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de4322dc_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if (((*(_132938_tokens))[_134217_i].get()._field_Id == static_cast<jule::U64>(10LLU))) {
		(_134217_i)++;
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_1de4322dc_pushErr(_self_.ptr(), (*(_132938_tokens))[(_134217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, _132938_tokens, (&(_134217_i)), true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_1de431bb0_stop(_self_.ptr());
			_1de4322dc_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _135917_itemTokens = _1de42ea6a_range(&(_134217_i), jule::Str("{", 1), jule::Str("}", 1), _132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1de431bb0_stop(_self_.ptr());
		_1de4322dc_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < (*(_132938_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_132938_tokens))[_134217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_1de441582_isPub(&(_133417_e.get()._field_Ident));
	_133417_e.get()._field_End=(*(_132938_tokens))[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1de43a427_buildEnumItems(_self_, &(_135917_itemTokens));
	return _133417_e;;
}



inline jule::Any _1de43aa43_buildNodeEnumDecl(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _137442_tokens) {
	if ((((*(_137442_tokens)).len() > 3LL) && ((*(_137442_tokens))[2LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		if (((*(_137442_tokens))[3LL].get()._field_Id == static_cast<jule::U64>(9LLU))) {
			return jule::Any(_1de439c62_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1de43a735_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1dcd562c8_FieldDecl> _1de43ad51_buildField(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _138334_tokens) {
	jule::Ptr<_1dcd562c8_FieldDecl> _138417_f = jule::new_ptr<_1dcd562c8_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(34LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_1de4322dc_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de4322dc_pushErr(_self_.ptr(), _138417_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_1de4322dc_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_138334_tokens.len() < 3LL) || (_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(10LLU)))) {
		_1de4322dc_pushErr(_self_.ptr(), _138334_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, &(_138334_tokens), (&(_141217_i)), true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_23ae26b42_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || (!_141517_token.get()._field_Kind.equal("=", 1)))) {
			_1de4322dc_pushErr(_self_.ptr(), _138334_tokens[_141217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_1de4322dc_pushErr(_self_.ptr(), _141517_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_1de432919_buildExpr(_self_, &(_138334_tokens));
	};
	_138417_f.get()._field_Public=_1de441582_isPub(&(_138417_f.get()._field_Ident));
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_1dcd562c8_FieldDecl>> _1de43b15e_buildStructDeclFields(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_1dcd562c8_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_1de414885_stmt>> _143417_stmts = _1de414c2b_splitStmts(&(_143245_tokens));;
	{
		auto expr = &(_143417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c713b96a:;
		if (it != expr_end) {
			jule::Ptr<_1de414885_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_1dcd562c8_FieldDecl> _143721_f = _1de43ad51_buildField(_self_, _143245_tokens);;
				{ jule::Slice<jule::Ptr<_1dcd562c8_FieldDecl>> &__jule_push_dest = _143317_fields; __jule_push_dest.push(_143721_f); };
			}
			_iter_next_1c713b96a:;
			++it;
			goto _iter_begin_1c713b96a;
		}
		_iter_end_1c713b96a:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_1dcd56b25_StructDecl> _1de43b46c_buildStructDecl(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _144340_tokens) {
	if (((*(_144340_tokens)).len() < 3LL)) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_144340_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_1dcd56b25_StructDecl> _145017_s = jule::new_ptr<_1dcd56b25_StructDecl>(_1dcd56b25_StructDecl{._field_Token=(*(_144340_tokens))[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de4322dc_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_23ae26b42_Token> _146413_errorToken = (*(_144340_tokens))[_144917_i];;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _146517_genericsTokens = _1de42ea6a_range(&(_144917_i), jule::Str("[", 1), jule::Str("]", 1), _144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_1de4354dd_buildGenerics(_self_, &(_146517_genericsTokens), &(_146413_errorToken));
	};
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_144340_tokens))[(_144917_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _147517_bodyTokens = _1de42ea6a_range(&(_144917_i), jule::Str("{", 1), jule::Str("}", 1), _144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1de431bb0_stop(_self_.ptr());
		_1de4322dc_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < (*(_144340_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_1de441582_isPub(&(_145017_s.get()._field_Ident));
	_145017_s.get()._field_Fields=_1de43b15e_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=(*(_144340_tokens))[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _1de43b6e2_checkMethodReceiver(_1de4318c4_parser* _self_, jule::Ptr<_1dcd4d4ac_FnDecl>* _149139_f) {
	if ((*(_149139_f)).get()._field_Statically) {
		if ((((*(_149139_f)).get()._field_Params.len() > 0LL) && _1dcd4c500_IsSelf((*(_149139_f)).get()._field_Params[0LL].ptr()))) {
			_1de4322dc_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149139_f)).get()._field_Params.len() == 0LL)) {
		_1de4322dc_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dcd4c18c_ParamDecl> _150313_param = (*(_149139_f)).get()._field_Params[0LL];;
	if ((!(_1dcd4c500_IsSelf(_150313_param.ptr())))) {
		_1de4322dc_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1de43ba11_buildTraitBody(jule::Ptr<_1de4318c4_parser> _self_, jule::Ptr<_1dcd572eb_TraitDecl>* _151039_t, jule::Slice<jule::Ptr<_23ae26b42_Token>> _151058_tokens) {
	jule::Slice<jule::Ptr<_1de414885_stmt>> _151117_stmts = _1de414c2b_splitStmts(&(_151058_tokens));;
	{
		auto expr = &(_151117_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c714937e:;
		if (it != expr_end) {
			jule::Ptr<_1de414885_stmt> _151221_stmt = *it;
			{
				_151058_tokens=_151221_stmt.get()._field_tokens;
				if ((_151058_tokens.len() == 0LL)) {
					goto _iter_next_1c714937e;
				};
				{
					auto &_match_expr{ _151058_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1c714bae0:;
						{
							jule::Ptr<_1dcd4d4ac_FnDecl> _151925_f = _1de437d4d_buildFn(_self_, &(_151058_tokens), true, true);;
							if ((_151925_f == nullptr)) {
								goto _match_end_1c714a47e;
							};
							_1de43b6e2_checkMethodReceiver(_self_.ptr(), &(_151925_f));
							if ((_151925_f.get()._field_Generics.len() > 0LL)) {
								_1de4322dc_pushErr(_self_.ptr(), _151925_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1dcd4d4ac_FnDecl>> &__jule_push_dest = (*(_151039_t)).get()._field_Methods; __jule_push_dest.push(_151925_f); };
						}
					}
					else {
						_case_begin_1c7149dc9:;
						{
							jule::I64 _152925_i = 0LL;;
							jule::Ptr<_1dcd3bd80_TypeDecl> _153026_ti;;
							jule::Bool _153030_ok = false;;
							({
								__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, &(_151058_tokens), (&(_152925_i)), true);
								_153026_ti = __jule_assign_result.__jule_result_arg0;
								_153030_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_153030_ok))) {
								goto _match_end_1c714a47e;
							};
							if ((_152925_i < _151058_tokens.len())) {
								_1de4322dc_pushErr(_self_.ptr(), _151058_tokens[_152925_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> &__jule_push_dest = (*(_151039_t)).get()._field_Inherits; __jule_push_dest.push(_153026_ti); };
						}
					}
					_match_end_1c714a47e:;
				};
			}
			_iter_next_1c714937e:;
			++it;
			goto _iter_begin_1c714937e;
		}
		_iter_end_1c714937e:;
	};
}



inline jule::Ptr<_1dcd572eb_TraitDecl> _1de43bd1e_buildTraitDecl(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _154239_tokens) {
	if (((*(_154239_tokens)).len() < 3LL)) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_154239_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcd572eb_TraitDecl> _154717_t = jule::new_ptr<_1dcd572eb_TraitDecl>(_1dcd572eb_TraitDecl{._field_Token=(*(_154239_tokens))[1LL], });;
	if ((_154717_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de4322dc_pushErr(_self_.ptr(), _154717_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_154717_t.get()._field_Ident=_154717_t.get()._field_Token.get()._field_Kind;
	jule::I64 _155517_i = 2LL;;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _155617_bodyTokens = _1de42ea6a_range(&(_155517_i), jule::Str("{", 1), jule::Str("}", 1), _154239_tokens);;
	if ((_155617_bodyTokens == nullptr)) {
		_1de431bb0_stop(_self_.ptr());
		_1de4322dc_pushErr(_self_.ptr(), _154717_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_155517_i < (*(_154239_tokens)).len())) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_154239_tokens))[_155517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_154717_t.get()._field_Public=_1de441582_isPub(&(_154717_t.get()._field_Ident));
	_1de43ba11_buildTraitBody(_self_, &(_154717_t), _155617_bodyTokens);
	_154717_t.get()._field_End=(*(_154239_tokens))[(_155517_i - 1LL)];
	return _154717_t;;
}



inline jule::Ptr<_1dcd4d4ac_FnDecl> _1de43c12c_buildBindFn(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _157235_tokens) {
	_157235_tokens=_157235_tokens.slice(1LL);
	jule::Ptr<_1dcd4d4ac_FnDecl> _157417_f = _1de437d4d_buildFn(_self_, &(_157235_tokens), false, true);;
	if ((_157417_f != nullptr)) {
		_157417_f.get()._field_Public=false;
		_157417_f.get()._field_Binded=true;
	};
	return _157417_f;;
}



inline jule::Ptr<_1dcd4e48b_VarDecl> _1de43c43a_buildBindVar(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _158236_tokens) {
	_158236_tokens=_158236_tokens.slice(1LL);
	jule::Ptr<_1dcd4e48b_VarDecl> _158417_v = _1de434d28_buildVar(_self_, _158236_tokens);;
	if ((_158417_v != nullptr)) {
		_158417_v.get()._field_Public=false;
		_158417_v.get()._field_Binded=true;
		if ((_158417_v.get()._field_Expr != nullptr)) {
			_1de4322dc_pushErr(_self_.ptr(), _158417_v.get()._field_Token, jule::Str("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _158417_v;;
}



inline jule::Ptr<_1dcd56b25_StructDecl> _1de43c748_buildBindStruct(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _159539_tokens) {
	_159539_tokens=_159539_tokens.slice(1LL);
	jule::Ptr<_1dcd56b25_StructDecl> _159717_s = _1de43b46c_buildStructDecl(_self_, &(_159539_tokens));;
	if ((_159717_s != nullptr)) {
		_159717_s.get()._field_Public=false;
		{
			auto expr = &(_159717_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c7158c40:;
			if (it != expr_end) {
				jule::Ptr<_1dcd562c8_FieldDecl> _160025_f = *it;
				{
					_160025_f.get()._field_Public=true;
				}
				_iter_next_1c7158c40:;
				++it;
				goto _iter_begin_1c7158c40;
			}
			_iter_end_1c7158c40:;
		};
		_159717_s.get()._field_Binded=true;
	};
	return _159717_s;;
}



inline jule::Ptr<_1dcd52cec_TypeAliasDecl> _1de43ca56_buildBindTypeAlias(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _160942_tokens) {
	_160942_tokens=_160942_tokens.slice(1LL);
	jule::Ptr<_1dcd52cec_TypeAliasDecl> _161117_t = _1de434014_buildTypeAliasDecl(_self_, &(_160942_tokens));;
	if ((_161117_t != nullptr)) {
		_161117_t.get()._field_Public=false;
		_161117_t.get()._field_Binded=true;
	};
	return _161117_t;;
}



inline jule::Ptr<_1dcd541d8_UseDecl> _1de43cd64_buildBindUse(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _161936_tokens) {
	if ((_161936_tokens.len() == 1LL)) {
		_1de4322dc_pushErr(_self_.ptr(), _161936_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161936_tokens=_161936_tokens.slice(1LL);
	;
	return _1de43928e_buildUseDecl(_self_.ptr(), _161936_tokens, true);;
}



inline jule::Any _1de43d172_buildBind(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _163034_tokens) {
	jule::Ptr<_23ae26b42_Token> _163117_token = (*(_163034_tokens))[0LL];;
	if (((*(_163034_tokens)).len() == 1LL)) {
		_1de4322dc_pushErr(_self_.ptr(), _163117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_163117_token=(*(_163034_tokens))[1LL];
	{
		auto &_match_expr{ _163117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c715d261:;
			{
				return jule::Any(_1de43c12c_buildBindFn(_self_, (*(_163034_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1c715dc34:;
			{
				return jule::Any(_1de43c43a_buildBindVar(_self_, (*(_163034_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c715dc9a:;
			{
				return jule::Any(_1de43c748_buildBindStruct(_self_, (*(_163034_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1c715dd11:;
			{
				return jule::Any(_1de43ca56_buildBindTypeAlias(_self_, (*(_163034_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1c715dbbd:;
			{
				_1de4322dc_pushErr(_self_.ptr(), _163117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c715db68:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd4d4ac_FnDecl> _1de43d480_getMethod(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _165434_tokens) {
	jule::I64 _165517_i = 0LL;;
	jule::Ptr<_23ae26b42_Token> _165617_token = (*(_165434_tokens))[_165517_i];;
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		if (((_165517_i + 1LL) >= (*(_165434_tokens)).len())) {
			_1de4322dc_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165517_i)++;
		_165617_token=(*(_165434_tokens))[_165517_i];
	};
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		if (((_165517_i + 1LL) >= (*(_165434_tokens)).len())) {
			_1de4322dc_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165517_i)++;
		_165617_token=(*(_165434_tokens))[_165517_i];
	};
	if ((_165617_token.get()._field_Id != static_cast<jule::U64>(31LLU))) {
		_1de4322dc_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1de437d4d_buildFn(_self_, _165434_tokens, true, false);;
}



inline void _1de43d79e_parseImplBody(jule::Ptr<_1de4318c4_parser> _self_, jule::Ptr<_1dcd57906_Impl>* _168338_ipl, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _168355_tokens) {
	jule::Slice<jule::Ptr<_1de414885_stmt>> _168417_stmts = _1de414c2b_splitStmts(_168355_tokens);;
	{
		auto expr = &(_168417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7165631:;
		if (it != expr_end) {
			jule::Ptr<_1de414885_stmt> _168521_stmt = *it;
			{
				(*(_168355_tokens))=_168521_stmt.get()._field_tokens;
				jule::Ptr<_23ae26b42_Token> _168721_token = (*(_168355_tokens))[0LL];;
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(37LLU)) {
						_case_begin_1c71666ba:;
						{
							_1de432e9c_pushDirective(_self_.ptr(), _1de432c27_buildDirective(_self_.ptr(), (*(_168355_tokens))));
							goto _iter_next_1c7165631;
						}
					}
					_match_end_1c7166665:;
				};
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(8LLU)) {
						_case_begin_1c716681e:;
						{
							jule::Ptr<_1dcd4e48b_VarDecl> _169625_v = _1de434d28_buildVar(_self_, (*(_168355_tokens)));;
							if ((_169625_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1dcd4e48b_VarDecl>> &__jule_push_dest = (*(_168338_ipl)).get()._field_Statics; __jule_push_dest.push(_169625_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
						_case_begin_1c7167435:;
						{
							jule::Ptr<_1dcd4d4ac_FnDecl> _170325_f = _1de43d480_getMethod(_self_, _168355_tokens);;
							if ((_170325_f != nullptr)) {
								_1de43b6e2_checkMethodReceiver(_self_.ptr(), &(_170325_f));
								_1de43e140_applyFnMeta(_self_.ptr(), &(_170325_f));
								{ jule::Slice<jule::Ptr<_1dcd4d4ac_FnDecl>> &__jule_push_dest = (*(_168338_ipl)).get()._field_Methods; __jule_push_dest.push(_170325_f); };
							};
						}
					}
					else {
						_case_begin_1c7166bd7:;
						{
							_1de4322dc_pushErr(_self_.ptr(), _168721_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1c7165631;
						}
					}
					_match_end_1c7166b82:;
				};
			}
			_iter_next_1c7165631:;
			++it;
			goto _iter_begin_1c7165631;
		}
		_iter_end_1c7165631:;
	};
}



inline jule::Ptr<_1dcd57906_Impl> _1de43daac_buildImpl(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _171633_tokens) {
	jule::Ptr<_23ae26b42_Token> _171717_token = _171633_tokens[0LL];;
	if ((_171633_tokens.len() < 2LL)) {
		_1de4322dc_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172317_i = 1LL;;
	jule::Ptr<_1dcd3bd80_TypeDecl> _172518_base;;
	jule::Bool _172528_ok = false;;
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_172518_base = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1de4322dc_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcd57906_Impl> _173417_ipl = jule::new_ptr<_1dcd57906_Impl>(_1dcd57906_Impl{._field_Base=_172518_base, });;
	_171717_token=_171633_tokens[_172317_i];
	if ((_171717_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		if (((_171717_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && _171717_token.get()._field_Kind.equal("{", 1))) {
			({
				jule::Ptr<_1dcd3bd80_TypeDecl> ___jule_assign_arg = _173417_ipl.get()._field_Dest;
				jule::Ptr<_1dcd3bd80_TypeDecl> _1___jule_assign_arg = _173417_ipl.get()._field_Base;
				_173417_ipl.get()._field_Base = ___jule_assign_arg;
				_173417_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1de431bb0_stop(_self_.ptr());
		_1de4322dc_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172317_i)++;
	if ((_172317_i >= _171633_tokens.len())) {
		_1de431bb0_stop(_self_.ptr());
		_1de4322dc_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_173417_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1de431bb0_stop(_self_.ptr());
		_1de4322dc_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _177217_bodyTokens = _1de42ea6a_range(&(_172317_i), jule::Str("{", 1), jule::Str("}", 1), &(_171633_tokens));;
	if ((_177217_bodyTokens == nullptr)) {
		_1de431bb0_stop(_self_.ptr());
		_1de4322dc_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172317_i < _171633_tokens.len())) {
		_1de4322dc_pushErr(_self_.ptr(), _171633_tokens[_172317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_173417_ipl.get()._field_End=_171633_tokens[(_172317_i - 1LL)];
	_1de43d79e_parseImplBody(_self_, &(_173417_ipl), &(_177217_bodyTokens));
	return _173417_ipl;;
}



inline jule::Any _1de43ddba_buildNodeData(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _178738_tokens) {
	jule::Ptr<_23ae26b42_Token> _178817_token = (*(_178738_tokens))[0LL];;
	{
		auto &_match_expr{ _178817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1c7175850:;
			{
				jule::Ptr<_1dcd4d4ac_FnDecl> _179221_f = _1de437d4d_buildFn(_self_, _178738_tokens, false, false);;
				if ((_179221_f != nullptr)) {
					_179221_f.get()._field_Global=true;
				};
				return jule::Any(_179221_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(8LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1c7176675:;
			{
				return jule::Any(_1de434d28_buildVar(_self_, (*(_178738_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1c71766db:;
			{
				return jule::Any(_1de434014_buildTypeAliasDecl(_self_, _178738_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1c7175e27:;
			{
				return _1de43aa43_buildNodeEnumDecl(_self_, _178738_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1c7175e8d:;
			{
				return jule::Any(_1de43b46c_buildStructDecl(_self_, _178738_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c7176004:;
			{
				return jule::Any(_1de43bd1e_buildTraitDecl(_self_, _178738_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1c717606a:;
			{
				return jule::Any(_1de43daac_buildImpl(_self_, (*(_178738_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c71768b7:;
			{
				return _1de43d172_buildBind(_self_, _178738_tokens);;
			}
		}
		else {
			_case_begin_1c7175d8e:;
			{
				_1de4322dc_pushErr(_self_.ptr(), _178817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c7175be6:;
	};
}



inline void _1de43e140_applyFnMeta(_1de4318c4_parser* _self_, jule::Ptr<_1dcd4d4ac_FnDecl>* _182035_f) {
	(*(_182035_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1de43e3b5_applyMeta(_1de4318c4_parser* _self_, _1dcd08e6d_Node* _182533_node) {
	{
		auto &_match_expr{ (*(_182533_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c717b58c:;
			{
				jule::Ptr<_1dcd4e48b_VarDecl> _182821_v = (*(_182533_node))._field_Data.cast_ptr<_1dcd4e48b_VarDecl>(&__jule_any_type16);;
				if ((_182821_v == nullptr)) {
					return;;
				};
				_182821_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c717b603:;
			{
				jule::Ptr<_1dcd4d4ac_FnDecl> _183521_f = (*(_182533_node))._field_Data.cast_ptr<_1dcd4d4ac_FnDecl>(&__jule_any_type14);;
				if ((_183521_f == nullptr)) {
					return;;
				};
				_1de43e140_applyFnMeta(_self_, &(_183521_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1c717b669:;
			{
				jule::Ptr<_1dcd56b25_StructDecl> _184121_sd = (*(_182533_node))._field_Data.cast_ptr<_1dcd56b25_StructDecl>(&__jule_any_type13);;
				if ((_184121_sd == nullptr)) {
					return;;
				};
				_184121_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1c717b37d:;
	};
}



inline void _1de43e63a_pushUseDecl(jule::Ptr<_1de4318c4_parser> _self_, jule::Ptr<_1dcd541d8_UseDecl>* _185036_decl) {
	{ jule::Slice<jule::Ptr<_1dcd541d8_UseDecl>> &__jule_push_dest = _self_.get()._field_ast.get()._field_UseDecls; __jule_push_dest.push((*(_185036_decl))); };
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1de4322dc_pushErr(_self_.ptr(), (*(_185036_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1de43260b_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1de43e948_pushMetaNodes(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _185838_tokens) {
	{
		auto &_match_expr{ (*(_185838_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1c7181c46:;
			{
				;
				jule::Ptr<_1dcd541d8_UseDecl> _186221_decl = _1de43928e_buildUseDecl(_self_.ptr(), (*(_185838_tokens)), false);;
				_1de43e63a_pushUseDecl(_self_, &(_186221_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c7181cbd:;
			{
				if ((((*(_185838_tokens)).len() > 1LL) && ((*(_185838_tokens))[1LL].get()._field_Id == static_cast<jule::U64>(18LLU)))) {
					jule::Ptr<_1dcd541d8_UseDecl> _186725_decl = _1de43cd64_buildBindUse(_self_, (*(_185838_tokens)));;
					_1de43e63a_pushUseDecl(_self_, &(_186725_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1c7181d45:;
			{
				_1de432e9c_pushDirective(_self_.ptr(), _1de432c27_buildDirective(_self_.ptr(), (*(_185838_tokens))));
				return true;;
			}
		}
		_match_end_1c7181b69:;
	};
	return false;;
}



inline _1dcd08e6d_Node _1de43ec56_parseNode(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _187834_st) {
	_1dcd08e6d_Node _187917_node = _1dcd08e6d_Node{._field_Token=(*(_187834_st))[0LL], };;
	if (_1de43e948_pushMetaNodes(_self_, _187834_st)) {
		return _187917_node;;
	};
	jule::Any _188717_data = _1de43ddba_buildNodeData(_self_, _187834_st);;
	if ((_188717_data == nullptr)) {
		return _187917_node;;
	};
	_187917_node._field_Data=_188717_data;
	_1de43e3b5_applyMeta(_self_.ptr(), &(_187917_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1de4322dc_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _187917_node;;
}



inline void _1de43eecb_appendNode(jule::Ptr<_1de4318c4_parser> _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _190235_st) {
	if (((*(_190235_st)).len() == 0LL)) {
		return;;
	};
	_1dcd08e6d_Node _190617_node = _1de43ec56_parseNode(_self_, _190235_st);;
	if (((_190617_node._field_Data == nullptr) || _1de431e24_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1dcd08e6d_Node> &__jule_push_dest = _self_.get()._field_ast.get()._field_Nodes; __jule_push_dest.push(_190617_node); };
}



inline void _1de44043d_removeRange(_1de4318c4_parser* _self_, jule::I64 _191330_i, jule::Str _191338_kind, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _191350_tokens, jule::Slice<jule::I64>* _191373_ranges) {
	jule::Str _191413_close = _1de43087e_getCloseKindOfBrace(_191338_kind);;
	for (; (_191330_i >= 0LL); (_191330_i)--) {
		{
			jule::Ptr<_23ae26b42_Token> _191617_tok = (*(_191350_tokens))[(*(_191373_ranges))[_191330_i]];;
			if ((_191617_tok.get()._field_Kind != _191413_close)) {
				goto _iter_next_1c718a7aa;
			};
			(*(_191373_ranges))=jule::append((*(_191373_ranges)).slice(0LL, _191330_i),(*(_191373_ranges)).slice((_191330_i + 1LL)));
			goto _iter_end_1c718a7aa;
		}
	_iter_next_1c718a7aa:;
	}
	_iter_end_1c718a7aa:;;
}



inline void _1de440806_pushWrongOrderCloseErr(_1de4318c4_parser* _self_, jule::Ptr<_23ae26b42_Token>* _192542_t, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _192554_tokens, jule::Slice<jule::I64>* _192573_ranges) {
	{
		auto &_match_expr{ (*(_192554_tokens))[(*(_192573_ranges))[((*(_192573_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1c718c79b:;
			{
				_1de4322dc_pushErr(_self_, (*(_192542_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1c718c823:;
			{
				_1de4322dc_pushErr(_self_, (*(_192542_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1c718c89a:;
			{
				_1de4322dc_pushErr(_self_, (*(_192542_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c718c67a:;
	};
}



inline void _1de440c68_pushRangeClose(_1de4318c4_parser* _self_, jule::Ptr<_23ae26b42_Token> _193633_t, jule::Str _193644_left, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _193656_tokens, jule::Slice<jule::I64>* _193679_ranges) {
	jule::I64 _193713_n = (*(_193679_ranges)).len();;
	if ((_193713_n == 0LL)) {
		{
			auto &_match_expr{ _193633_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1c71900ea:;
				{
					_1de4322dc_pushErr(_self_, _193633_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1c7190172:;
				{
					_1de4322dc_pushErr(_self_, _193633_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1c71901e9:;
				{
					_1de4322dc_pushErr(_self_, _193633_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1c718edb9:;
		};
		return;;
	} else if (((*(_193656_tokens))[(*(_193679_ranges))[(_193713_n - 1LL)]].get()._field_Kind != _193644_left)) {
		_1de440806_pushWrongOrderCloseErr(_self_, &(_193633_t), _193656_tokens, _193679_ranges);
	};
	_1de44043d_removeRange(_self_, static_cast<jule::I64>((_193713_n - 1LL)), _193633_t.get()._field_Kind, _193656_tokens, _193679_ranges);
}



inline void _1de440edd_checkRanges(_1de4318c4_parser* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _195431_tokens) {
	jule::Slice<jule::I64> _195517_ranges = nullptr;;
	{
		auto expr = _195431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7192d89:;
		if (it != expr_end) {
			jule::I64 _195713_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> *_195716_token = it;
			{
				if (((*(_195716_token)).get()._field_Id != static_cast<jule::U64>(2LLU))) {
					goto _iter_next_1c7192d89;
				};
				{
					auto &_match_expr{ (*(_195716_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1c71940bb:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _195517_ranges; __jule_push_dest.push(_195713_i); };
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c7194132:;
						{
							_1de440c68_pushRangeClose(_self_, (*(_195716_token)), jule::Str("(", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1c7194198:;
						{
							_1de440c68_pushRangeClose(_self_, (*(_195716_token)), jule::Str("{", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c719420e:;
						{
							_1de440c68_pushRangeClose(_self_, (*(_195716_token)), jule::Str("[", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					_match_end_1c7193eab:;
				};
			}
			_iter_next_1c7192d89:;
			++it;
			_195713_i++;
			goto _iter_begin_1c7192d89;
		}
		_iter_end_1c7192d89:;
	};
	{
		auto expr = &(_195517_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7195364:;
		if (it != expr_end) {
			jule::I64 _197516_i = *it;
			{
				jule::Ptr<_23ae26b42_Token> _197617_token = (*(_195431_tokens))[_197516_i];;
				{
					auto &_match_expr{ _197617_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c71964db:;
						{
							_1de4322dc_pushErr(_self_, _197617_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1c7196563:;
						{
							_1de4322dc_pushErr(_self_, _197617_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1c71965da:;
						{
							_1de4322dc_pushErr(_self_, _197617_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1c7196310:;
				};
			}
			_iter_next_1c7195364:;
			++it;
			goto _iter_begin_1c7195364;
		}
		_iter_end_1c7195364:;
	};
}



inline void _1de441263_parse(jule::Ptr<_1de4318c4_parser> _self_, jule::Ptr<_23ae2becc_File>* _198830_f) {
	_self_.get()._field_ast=jule::new_ptr<_1dcd080d2_Ast>(_1dcd080d2_Ast{._field_File=(*(_198830_f)), });
	_self_.get()._field_ep=jule::new_ptr<_1de421694_exprBuilder>(_1de421694_exprBuilder{._field_p=_self_});
	_1de440edd_checkRanges(_self_.ptr(), &((*(_198830_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1de414885_stmt>> _200117_stmts = _1de414c2b_splitStmts(&((*(_198830_f)).get()._field_Tokens));;
	jule::I64 _200417_i = 0LL;;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1de414885_stmt> _200621_stmt = _200117_stmts[_200417_i];;
			if ((_200621_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200621_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(37LLU))) {
				goto _iter_end_1c71994cd;
			};
			if ((!(_23aa2a735_IsTopDirective(_200621_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1c71994cd;
			};
			{ jule::Slice<jule::Ptr<_1dcd09369_Directive>> &__jule_push_dest = _self_.get()._field_ast.get()._field_TopDirectives; __jule_push_dest.push(_1de432c27_buildDirective(_self_.ptr(), _200621_stmt.get()._field_tokens)); };
		}
	_iter_next_1c71994cd:;
	}
	_iter_end_1c71994cd:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1de414885_stmt> _202321_stmt = _200117_stmts[_200417_i];;
			_1de43eecb_appendNode(_self_, &(_202321_stmt.get()._field_tokens));
			if (_1de431e24_stopped(_self_.ptr())) {
				goto _iter_end_1c7199830;
			};
		}
	_iter_next_1c7199830:;
	}
	_iter_end_1c7199830:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1de4322dc_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1de4318c4_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1de442b6b_pushErr(_1de4425e9_typeBuilder* _self_, jule::Ptr<_23ae26b42_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1de4322dc_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1de442e8a_pushSuggestion(_1de4425e9_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1de43260b_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de4431ee_buildNamespace(_1de4425e9_typeBuilder* _self_) {
	jule::Ptr<_1dcd3bd80_TypeDecl> _5517_t = jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1dcd3caa6_NamespaceTypeDecl> _5917_nst = jule::new_ptr<_1dcd3caa6_NamespaceTypeDecl>();;
	jule::I64 _6017_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_23ae26b42_Token> _6221_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6017_n & 1LL) == 0LL)) {
				if ((_6221_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
					_1de442b6b_pushErr(_self_, _6221_token, jule::Str("invalid syntax", 14));
					_1de442e8a_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_23ae26b42_Token>> &__jule_push_dest = _5917_nst.get()._field_Idents; __jule_push_dest.push(_6221_token); };
			} else if ((_6221_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
				goto _iter_end_1c71a1947;
			};
			(_6017_n)++;
		}
	_iter_next_1c71a1947:;
	}
	_iter_end_1c71a1947:;;
	_5917_nst.get()._field_Idents=_5917_nst.get()._field_Idents.slice(0LL, (_5917_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_5917_nst.get()._field_Kind=_1de44393b_buildIdent(_self_);
	_5517_t.get()._field_Kind=jule::Any(_5917_nst, &__jule_any_type96);
	return _5517_t;;
}



inline jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _1de443463_buildGenerics(_1de4425e9_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_23ae26b42_Token> _8813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_8813_token.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_8813_token.get()._field_Kind.equal("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _9317_parts = _1de4436c7_identGenerics(_self_);;
	if ((_9317_parts.len() == 0LL)) {
		_1de442b6b_pushErr(_self_, _8813_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> _9917_types = jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>::alloc(0LL, _9317_parts.len());;
	{
		auto expr = &(_9317_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c71a8795:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _10021_part = *it;
			{
				jule::I64 _10121_j = 0LL;;
				jule::Ptr<_1dcd3bd80_TypeDecl> _10222_t;;
				({
					__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType((*(_self_))._field_p, &(_10021_part), (&(_10121_j)), true);
					_10222_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10121_j < _10021_part.len())) {
					_1de442b6b_pushErr(_self_, _10021_part[_10121_j], jule::Str("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>> &__jule_push_dest = _9917_types; __jule_push_dest.push(_10222_t); };
			}
			_iter_next_1c71a8795:;
			++it;
			goto _iter_begin_1c71a8795;
		}
		_iter_end_1c71a8795:;
	};
	return _9917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _1de4436c7_identGenerics(_1de4425e9_typeBuilder* _self_) {
	jule::I64 _11213_first = (*((*(_self_))._field_i));;
	jule::I64 _11317_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_23ae26b42_Token> _11517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_11517_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _11517_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1c71ac1d3:;
						{
							(_11317_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1c71ac25a:;
						{
							(_11317_rangeN)--;
						}
					}
					_match_end_1c71abeb3:;
				};
			};
			if ((_11317_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1c71aade6;
			};
		}
	_iter_next_1c71aade6:;
	}
	_iter_end_1c71aade6:;;
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _12917_tokens = (*(_self_))._field_tokens.slice((_11213_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _13018_parts;;
	jule::Slice<_23aa28854_Log> _13025_errors;;
	({
		__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de4305d7_parts(&(_12917_tokens), static_cast<jule::U64>(7LLU), true);
		_13018_parts = __jule_assign_result.__jule_result_arg0;
		_13025_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*(_self_))._field_p.get()._field_errors).append(_13025_errors);;
	};
	return _13018_parts;;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de44393b_buildIdent(_1de4425e9_typeBuilder* _self_) {
	jule::Bool _13817_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13817_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(21LLU)))) {
		return _1de4431ee_buildNamespace(_self_);;
	};
	jule::Ptr<_23ae26b42_Token> _14217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1dcd3c446_IdentTypeDecl> _14317_it = jule::new_ptr<_1dcd3c446_IdentTypeDecl>(_1dcd3c446_IdentTypeDecl{._field_Token=_14217_token, ._field_Ident=_14217_token.get()._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1dcd3bd80_TypeDecl> _14917_itd = jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_14217_token, ._field_Kind=jule::Any(_14317_it, &__jule_any_type20)});;
	if (((!(_13817_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(19LLU)))) {
		_14317_it.get()._field_Generics=_1de443463_buildGenerics(_self_);
		return _14917_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1de442b6b_pushErr(_self_, _14217_token, jule::Str("invalid syntax", 14));
		return _14917_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1de442b6b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _14917_itd;;
	};
	jule::Ptr<_1dcd3c732_SubIdentTypeDecl> _16617_sit = jule::new_ptr<_1dcd3c732_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1dcd3c446_IdentTypeDecl>> &__jule_push_dest = _16617_sit.get()._field_Idents; __jule_push_dest.push(_14317_it); };
	jule::Ptr<_1dcd3bd80_TypeDecl> _16817_ident = _1de44393b_buildIdent(_self_);;
	{
		auto &_match_expr{ _16817_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c71b697e:;
			{
				{ jule::Slice<jule::Ptr<_1dcd3c446_IdentTypeDecl>> &__jule_push_dest = _16617_sit.get()._field_Idents; __jule_push_dest.push(_16817_ident.get()._field_Kind.cast_ptr<_1dcd3c446_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c71b6a06:;
			{
				(_16617_sit.get()._field_Idents).append(_16817_ident.get()._field_Kind.cast_ptr<_1dcd3c732_SubIdentTypeDecl>(&__jule_any_type92).get()._field_Idents);;
			}
		}
		_match_end_1c71b68b3:;
	};
	return jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_14217_token, ._field_Kind=jule::Any(_16617_sit, &__jule_any_type92)});;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de443ba0_buildCppLink(_1de4425e9_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(19LLU)))) {
		_1de442b6b_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1dcd3bd80_TypeDecl> _18717_t = _1de44393b_buildIdent(_self_);;
	_18717_t.get()._field_Kind.cast_ptr<_1dcd3c446_IdentTypeDecl>(&__jule_any_type20).get()._field_Binded=true;
	return _18717_t;;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de443e14_buildFn(_1de4425e9_typeBuilder* _self_) {
	jule::Ptr<_23ae26b42_Token> _19317_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1dcd4d4ac_FnDecl> _19417_f = _1de4378ec_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19417_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1dcd4d80e_IsAnon(_19417_f.ptr())))) {
		_1de442b6b_pushErr(_self_, _19417_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_19317_token, ._field_Kind=jule::Any(_19417_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de444178_buildPtr(_1de4425e9_typeBuilder* _self_) {
	jule::Ptr<_23ae26b42_Token> _20817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1de442b6b_pushErr(_self_, _20817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U64>(33LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_20817_token, ._field_Kind=jule::Any(jule::new_ptr<_1dcd3d865_PtrTypeDecl>(_1dcd3d865_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type77)});;
	};
	jule::Ptr<_1dcd3bd80_TypeDecl> _22517_elem = _1de445366_step(_self_);;
	if ((_22517_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_20817_token, ._field_Kind=jule::Any(jule::new_ptr<_1dcd3d865_PtrTypeDecl>(_1dcd3d865_PtrTypeDecl{._field_Elem=_22517_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de4443dc_buildSptr(_1de4425e9_typeBuilder* _self_) {
	jule::Ptr<_23ae26b42_Token> _23917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1de442b6b_pushErr(_self_, _23917_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1dcd3bd80_TypeDecl> _24617_elem = _1de445366_step(_self_);;
	if ((_24617_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_23917_token, ._field_Kind=jule::Any(jule::new_ptr<_1dcd3cd92_SptrTypeDecl>(_1dcd3cd92_SptrTypeDecl{._field_Elem=_24617_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de444651_buildOp(_1de4425e9_typeBuilder* _self_) {
	jule::Ptr<_23ae26b42_Token> _26017_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26017_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c71c37b0:;
			{
				return _1de444178_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1c71c4915:;
			{
				return _1de4443dc_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c71c4a03:;
			{
				return jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1dcd3cd92_SptrTypeDecl>(_1dcd3cd92_SptrTypeDecl{._field_Elem=_1de4443dc_buildSptr(_self_)}), &__jule_any_type78)});;
			}
		}
		else {
			_case_begin_1c71c412e:;
			{
				_1de442b6b_pushErr(_self_, _26017_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1c71c3ea8:;
	};
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de4448b5_buildSlc(_1de4425e9_typeBuilder* _self_) {
	jule::Ptr<_23ae26b42_Token> _27917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1dcd3bd80_TypeDecl> _28117_elem = _1de445366_step(_self_);;
	if ((_28117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_27917_token, ._field_Kind=jule::Any(jule::new_ptr<_1dcd3d28d_SlcTypeDecl>(_1dcd3d28d_SlcTypeDecl{._field_Elem=_28117_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de444b29_buildArr(_1de4425e9_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _29417_exprTokens = _1de42ea6a_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1de442b6b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1dcd3bd80_TypeDecl> _30017_elem = _1de445366_step(_self_);;
	if ((_30017_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1dcd3e03b_ArrTypeDecl> _30517_arrt = jule::new_ptr<_1dcd3e03b_ArrTypeDecl>(_1dcd3e03b_ArrTypeDecl{._field_Elem=_30017_elem, });;
	jule::Ptr<_23ae26b42_Token> _30917_token = _29417_exprTokens[0LL];;
	if ((((_29417_exprTokens.len() == 1LL) && (_30917_token.get()._field_Id == static_cast<jule::U64>(6LLU))) && _30917_token.get()._field_Kind.equal("...", 3))) {
	} else {
		_30517_arrt.get()._field_Size=_1de432919_buildExpr((*(_self_))._field_p, &(_29417_exprTokens));
	};
	return jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_30917_token, ._field_Kind=jule::Any(_30517_arrt, &__jule_any_type75)});;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de444d8d_buildMap(_1de4425e9_typeBuilder* _self_) {
	jule::Ptr<_23ae26b42_Token> _32317_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1de442b6b_pushErr(_self_, _32317_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _33117_keyTokens = _1de42ea6a_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1de442b6b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33117_keyTokens.len() == 0LL)) {
		_1de442b6b_pushErr(_self_, _32317_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1dcd3e745_MapTypeDecl> _34017_mapt = jule::new_ptr<_1dcd3e745_MapTypeDecl>();;
	jule::I64 _34117_j = 0LL;;
	jule::Ptr<_1dcd3bd80_TypeDecl> _34218_keyt;;
	jule::Bool _34228_ok = false;;
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType((*(_self_))._field_p, &(_33117_keyTokens), (&(_34117_j)), (*(_self_))._field_err);
		_34218_keyt = __jule_assign_result.__jule_result_arg0;
		_34228_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34228_ok))) {
		return nullptr;;
	} else if ((_34117_j < _33117_keyTokens.len())) {
		_1de442b6b_pushErr(_self_, _33117_keyTokens[_34117_j], jule::Str("invalid syntax", 14));
	};
	_34017_mapt.get()._field_Key=_34218_keyt;
	jule::Ptr<_1dcd3bd80_TypeDecl> _35018_valt;;
	({
		__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_assign_result = _1de433c06_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35018_valt = __jule_assign_result.__jule_result_arg0;
		_34228_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34228_ok))) {
		return nullptr;;
	};
	_34017_mapt.get()._field_Val=_35018_valt;
	return jule::new_ptr<_1dcd3bd80_TypeDecl>(_1dcd3bd80_TypeDecl{._field_Token=_32317_mapToken, ._field_Kind=jule::Any(_34017_mapt, &__jule_any_type79)});;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de445102_buildEnumerable(_1de4425e9_typeBuilder* _self_) {
	jule::Ptr<_23ae26b42_Token> _36217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36217_token.get()._field_Id != static_cast<jule::U64>(2LLU))) || (!_36217_token.get()._field_Kind.equal("[", 1)))) {
		_1de442b6b_pushErr(_self_, _36217_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36217_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && _36217_token.get()._field_Kind.equal("]", 1))) {
		return _1de4448b5_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1de444b29_buildArr(_self_);;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de445366_step(_1de4425e9_typeBuilder* _self_) {
	jule::Ptr<_23ae26b42_Token> _37913_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _37913_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c71d6e33:;
			{
				return _1de44393b_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c71d7274:;
			{
				return _1de443ba0_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c71d72da:;
			{
				return _1de443e14_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c71d7351:;
			{
				return _1de444651_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1c71d673a:;
			{
				return _1de445102_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1c71d67a1:;
			{
				return _1de444d8d_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1c71d66c4:;
			{
				((*((*(_self_))._field_i)))++;
				_1de442b6b_pushErr(_self_, _37913_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1c71d654d:;
	};
}



inline __jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool _1de4455ca_build(_1de4425e9_typeBuilder* _self_) {
	__jule_tuple_x_1dcd3bd80_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1dcd3bd80_TypeDecl> _40317_root = _1de445366_step(_self_);;
	if ((_40317_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1de441e23_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _40317_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1de4425e9_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _207188c73_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _20718a5d2_pushErr(_20718a0c6_directiveEval* _self_, jule::Ptr<_23ae26b42_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_23aa28854_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_23aa28854_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_23aa28c94_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _20718a989_splitOperans(_20718a0c6_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_23ae26b42_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1c74c67b6:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1c74c49e5;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1c74c682c:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1c74c6596:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(6LLU)))) {
				goto _iter_next_1c74c49e5;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				{ jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3351_tokens)).slice(_3817_last, _3617_i)); };
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1c74c49e5:;
	}
	_iter_end_1c74c49e5:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3351_tokens)).slice(_3817_last)); };
	} else {
		_20718a5d2_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _20718ac97_evalDirectiveIdent(_20718a0c6_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c74c970e:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1c74c970e:;
			++it;
			goto _iter_begin_1c74c970e;
		}
		_iter_end_1c74c970e:;
	};
	return false;;
}



inline jule::Bool _20718b0a5_evalDirectivePart(_20718a0c6_directiveEval* _self_, jule::Slice<jule::Ptr<_23ae26b42_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(6LLU)) && _8740_part[0LL].get()._field_Kind.equal("!", 1));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_20718a5d2_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _20718ac97_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _20718b319_eval(_20718a0c6_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_20718a5d2_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _11317_logicalOrParts = _20718a989_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c74cec97:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _12021_logicalAndParts = _20718a989_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c74d122c:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_23ae26b42_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_23ae26b42_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(2LLU)) && _12621_first.get()._field_Kind.equal("(", 1))) {
								jule::Ptr<_23ae26b42_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_12825_end.get()._field_Kind.equal(")", 1)))) {
									_20718a5d2_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _20718b0a5_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_1c74d122c:;
						++it;
						goto _iter_begin_1c74d122c;
					}
					_iter_end_1c74d122c:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1c74cec97:;
			++it;
			goto _iter_begin_1c74cec97;
		}
		_iter_end_1c74cec97:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _20718a0c6_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1de4465dc_JuleImporter> static__1de4469c7_New(_207188c73_CompileInfo _5819_info) {
	jule::Ptr<_1de4465dc_JuleImporter> _5917_imp = jule::new_ptr<_1de4465dc_JuleImporter>(_1de4465dc_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_23ab0be43_PathStdlib}), });;
	_20718958c_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1dcdcc6d4_ImportInfo>> _1de446c3b_AllPackages(_1de4465dc_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1de447148_SetModPath(_1de4465dc_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1de4473ac_GetModPath(_1de4465dc_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1de4476ba_ModById(_1de4465dc_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1de4479c8_GetImport(_1de4465dc_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73a71e1:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1c73a71e1:;
			++it;
			goto _iter_begin_1c73a71e1;
		}
		_iter_end_1c73a71e1:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log _1de447d80_ImportPackage(_1de4465dc_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log __jule_func_result;
	jule::Slice<jule::Ptr<_239897053_DirEntry>> _9717_dirents = ({
		auto except = static__23a994616_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_23aa28854_Log>::make({_1de446158_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_239897053_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _20719a2d4_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_23aa28854_Log> _10525_errs = _20719a4d2_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1dcd080d2_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1dcd080d2_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73a86ed:;
		if (it != expr_end) {
			jule::Ptr<_239897053_DirEntry> _11316_dirent = *it;
			{
				if ((_2398a70da_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_23a987362_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1c73a86ed;
				};
				jule::Str _11917__path = _23a991866_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_23ae2becc_File> _12021_file = _23ae2d286_NewFileSet(_11917__path);;
				_23ae2c395_Fill(_12021_file.ptr(), _1de445da0_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_23aa28854_Log> _12221_errors = _23ae38b32_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1de3bc310_FileInfo> _12721_finfo = _1de4127c8_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_207187d93_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1c73a86ed;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_23aa28854_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de448501_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1c73a86ed;
				};
				{ jule::Slice<jule::Ptr<_1dcd080d2_Ast>> &__jule_push_dest = _11217_asts; __jule_push_dest.push(_12721_finfo.get()._field_Ast); };
			}
			_iter_next_1c73a86ed:;
			++it;
			goto _iter_begin_1c73a86ed;
		}
		_iter_end_1c73a86ed:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1de448105_Imported(_1de4465dc_JuleImporter* _self_, jule::Ptr<_1dcdcc6d4_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73ab404:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_Binded == _15331_imp.get()._field_Binded) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1c73ab404:;
			++it;
			goto _iter_begin_1c73ab404;
		}
		_iter_end_1c73ab404:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c73b2b8b:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1c73b2b8b:;
				++it;
				_16217_i++;
				goto _iter_begin_1c73b2b8b;
			}
			_iter_end_1c73b2b8b:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_setted:;
	};
	{ jule::Slice<jule::Ptr<_1dcdcc6d4_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_23aa28854_Log _1de448501_isPassBuildDirectives(_1de4465dc_JuleImporter* _self_, jule::Ptr<_1dcd080d2_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_23aa28854_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73b5ae5:;
		if (it != expr_end) {
			jule::Ptr<_1dcd09369_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_1c73b5ae5;
				};
				_20718a0c6_directiveEval _18421_de = _20718a0c6_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _20718b319_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1c73b5ae5:;
			++it;
			goto _iter_begin_1c73b5ae5;
		}
		_iter_end_1c73b5ae5:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1de4465dc_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de44b38e_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c73d563c_isCommonOrdered(jule::Slice<jule::Ptr<_1dcd5b641_Struct>> _1834_s, jule::Ptr<_1dcd5b641_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73d663d:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c73d6e57:;
					if (it != expr_end) {
						jule::Ptr<_1dcd5b641_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1c73d6e57:;
						++it;
						goto _iter_begin_1c73d6e57;
					}
					_iter_end_1c73d6e57:;
				};
			}
			_iter_next_1c73d663d:;
			++it;
			goto _iter_begin_1c73d663d;
		}
		_iter_end_1c73d663d:;
	};
	return true;;
}

inline jule::Bool _1c73da037_isCommonOrdered(jule::Slice<jule::Ptr<_1dce05cb2_Var>> _1834_s, jule::Ptr<_1dce05cb2_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73daee4:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c73db80d:;
					if (it != expr_end) {
						jule::Ptr<_1dce05cb2_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1c73db80d:;
						++it;
						goto _iter_begin_1c73db80d;
					}
					_iter_end_1c73db80d:;
				};
			}
			_iter_next_1c73daee4:;
			++it;
			goto _iter_begin_1c73daee4;
		}
		_iter_end_1c73daee4:;
	};
	return true;;
}



inline void _1c73d2260_orderCommon(jule::Slice<jule::Ptr<_1dcd5b641_Struct>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73d36c3:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1c73d563c_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1c73d43b6:;
				}
				_iter_end_1c73d43b6:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1c73d36c3;
				};
				(_3217_n)--;
			}
			_iter_next_1c73d36c3:;
			++it;
			goto _iter_begin_1c73d36c3;
		}
		_iter_end_1c73d36c3:;
	};
}

inline void _1c73d2a9b_orderCommon(jule::Slice<jule::Ptr<_1dce05cb2_Var>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73d80bd:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1c73da037_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1c73d8cb1:;
				}
				_iter_end_1c73d8cb1:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1c73d80bd;
				};
				(_3217_n)--;
			}
			_iter_next_1c73d80bd:;
			++it;
			goto _iter_begin_1c73d80bd;
		}
		_iter_end_1c73d80bd:;
	};
}



inline void static__1de44be83_orderStructures(jule::Slice<jule::Ptr<_1dcd5b641_Struct>>* _5136_structs) {
	_1c73d2260_orderCommon(_5136_structs);
}



inline void static__1de44c192_orderVars(jule::Slice<jule::Ptr<_1dce05cb2_Var>>* _5730_vars) {
	_1c73d2a9b_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1de44b603_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de54bea6_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1de58351a_optimizeChild(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdadc6a_Scope>* _3938_s) {
	jule::Ptr<_1de583086_scopeDeadCode> _4017_sdc = jule::new_ptr<_1de583086_scopeDeadCode>(_1de583086_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1de585b5a_optimizeStmts(_4017_sdc);
	};
}



inline void _1de5837b2_optimizeBodyChildExceptional(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdadc6a_Scope>* _5053_s) {
	jule::Ptr<_1de583086_scopeDeadCode> _5117_sdc = jule::new_ptr<_1de583086_scopeDeadCode>(_1de583086_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1de585b5a_optimizeStmts(_5117_sdc);
	};
}



inline void _1de583a48_optimizeBodyChild(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdadc6a_Scope>* _6142_s) {
	jule::Ptr<_1de583086_scopeDeadCode> _6217_sdc = jule::new_ptr<_1de583086_scopeDeadCode>(_1de583086_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1de585b5a_optimizeStmts(_6217_sdc);
	};
}



inline void _1de583cbd_optimizeExprModel(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1de586ee1_exprDeadCode _7213_edc = static__1de5875c9_new(&(_self_));;
	_1de58d2e4_optimize(&_7213_edc, _7142_model);
}



inline void _1de583e99_eliminateFollowed(_1de583086_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1de583086_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1c74d6e14:;
	}
	_iter_end_1c74d6e14:;;
}



inline void _1de58421e_pushGoto(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdb1795_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1c74d9d4b:;
	}
	_iter_end_1c74d9d4b:;;
	{ jule::Slice<jule::Ptr<_1dcdb1795_GotoSt>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1de584494_pushLabel(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdb14a9_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1c74db468;
			};
			(_10317_i)++;
		}
	_iter_next_1c74db468:;
	}
	_iter_end_1c74db468:;;
	{ jule::Slice<jule::Ptr<_1dcdb14a9_Label>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1de584719_optimizeRangeIter(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdb091a_RangeIter> _11541_it) {
	_1de583cbd_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1de583a48_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1de58498e_optimizeWhileIter(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdb0035_WhileIter> _12041_it) {
	_1de583cbd_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1de58597e_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1de583a48_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1de584c14_optimizeInfIter(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdaeab2_InfIter> _12839_it) {
	_1de583a48_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1de584e89_optimizeConditional(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdae7c6_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c74e1d53:;
		if (it != expr_end) {
			jule::Ptr<_1dcdae166_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1de583cbd_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1de583a48_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1c74e1d53:;
			++it;
			goto _iter_begin_1c74e1d53;
		}
		_iter_end_1c74e1d53:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1de58351a_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1de583a48_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1de58520e_optimizeMatch(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdb2a82_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c74e4592:;
		if (it != expr_end) {
			jule::Ptr<_1dcdb35cc_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c74e4dbc:;
					if (it != expr_end) {
						jule::Ptr<_1dce54cbc_Data> _15225_expr = *it;
						{
							_1de583cbd_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1c74e4dbc:;
						++it;
						goto _iter_begin_1c74e4dbc;
					}
					_iter_end_1c74e4dbc:;
				};
				_1de583a48_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1c74e4592:;
			++it;
			goto _iter_begin_1c74e4592;
		}
		_iter_end_1c74e4592:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1de58351a_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1de583a48_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1de585484_optimizeAssign(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdb20c0_Assign> _16838_assign) {
	_1de583cbd_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1de583cbd_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1de585709_optimizeMultiAssign(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Ptr<_1dcdb2477_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c74e7cd2:;
		if (it != expr_end) {
			jule::Ptr<_1dce54cbc_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1de583cbd_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1c74e7cd2:;
			++it;
			goto _iter_begin_1c74e7cd2;
		}
		_iter_end_1c74e7cd2:;
	};
	_1de583cbd_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1de58597e_optimizeStmt(jule::Ptr<_1de583086_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c74e9322:;
			{
				jule::Ptr<_1dcdadc6a_Scope> _18521_scope = _18236_st.cast_ptr<_1dcdadc6a_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_1de585e8a_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1de58351a_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c74e9498:;
			{
				_1de584719_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1dcdb091a_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c74e950e:;
			{
				_1de58498e_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1dcdb0035_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c74e9575:;
			{
				_1de584c14_optimizeInfIter(_self_, _18236_st.cast_ptr<_1dcdaeab2_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c74e95ec:;
			{
				_1de584e89_optimizeConditional(_self_, _18236_st.cast_ptr<_1dcdae7c6_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c74e9674:;
			{
				_1de58520e_optimizeMatch(_self_, _18236_st.cast_ptr<_1dcdb2a82_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c74e96eb:;
			{
				_1de585484_optimizeAssign(_self_, _18236_st.cast_ptr<_1dcdb20c0_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c74e9773:;
			{
				_1de585709_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1dcdb2477_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c74e97ea:;
			{
				jule::Ptr<_1dce54cbc_Data> _20621_d = _18236_st.cast_ptr<_1dce54cbc_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_1c74e9432;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_1c74eee71:;
						{
							_1de583e99_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1c74ee844:;
						{
							_1de583cbd_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1c74ee7de:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1c74e9872:;
			{
				_1de583e99_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c74e98e9:;
			{
				_1de58421e_pushGoto(_self_, _18236_st.cast_ptr<_1dcdb1795_GotoSt>(&__jule_any_type43));
				_1de583e99_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c74e9971:;
			{
				_1de584494_pushLabel(_self_, _18236_st.cast_ptr<_1dcdb14a9_Label>(&__jule_any_type21));
			}
		}
		_match_end_1c74e9432:;
	};
}



inline void _1de585b5a_optimizeStmts(jule::Ptr<_1de583086_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1de58597e_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1c7501280:;
	}
	_iter_end_1c7501280:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1de583086_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1de586ee1_exprDeadCode static__1de5875c9_new(jule::Ptr<_1de583086_scopeDeadCode>* _5024_s) {
	return _1de586ee1_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1de58784e_binary(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd63824_BinopExprModel> _5625_m) {
	_1de58d2e4_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1de58d2e4_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1de587ac4_unary(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd63bcb_UnaryExprModel> _6124_m) {
	_1de58d2e4_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1de587d49_structureLit(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6447e_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7504706:;
		if (it != expr_end) {
			jule::Ptr<_1dcd640c7_StructArgExprModel> _6621_arg = *it;
			{
				_1de58d2e4_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_1c7504706:;
			++it;
			goto _iter_begin_1c7504706;
		}
		_iter_end_1c7504706:;
	};
}



inline void _1de5880be_allocStructure(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6478c_AllocStructLitExprModel> _7133_m) {
	_1de587d49_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1de588344_casting(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd64cdc_CastingExprModel> _7526_m) {
	_1de58d2e4_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1de5885b9_args(_1de586ee1_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7506708:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1de58d2e4_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1c7506708:;
			++it;
			goto _iter_begin_1c7506708;
		}
		_iter_end_1c7506708:;
	};
}



inline void _1de58883e_funcCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6568e_FnCallExprModel> _8527_m) {
	_1de58d2e4_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1de5885b9_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1de5837b2_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1de588ab4_slice(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd65a46_SliceExprModel> _9324_m) {
	_1de5885b9_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1de588d39_array(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6876e_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1de58d2e4_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1de5885b9_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1de5890ae_indexing(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd65eb9_IndexingExprModel> _10427_m) {
	_1de58d2e4_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1de58d2e4_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1de589334_anonFunc(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd66371_AnonFnExprModel> _10927_m) {
	_1de585e8a_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1de5895a9_mapExpr(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd66b9b_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c750ba60:;
		if (it != expr_end) {
			jule::Ptr<_1dcd66728_KeyValPairExprModel> _11421_pair = *it;
			{
				_1de58d2e4_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1de58d2e4_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1c750ba60:;
			++it;
			goto _iter_begin_1c750ba60;
		}
		_iter_end_1c750ba60:;
	};
}



inline void _1de58982e_slicing(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd671da_SlicingExprModel> _12026_m) {
	_1de58d2e4_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1de58d2e4_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1de58d2e4_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1de589aa4_traitSub(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd67729_TraitSubIdentExprModel> _12827_m) {
	_1de58d2e4_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1de589d29_structureSub(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd68010_StructSubIdentExprModel> _13231_m) {
	_1de58d2e4_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1de58a09e_commonSub(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd690bb_CommonSubIdentExprModel> _13628_m) {
	_1de58d2e4_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1de58a324_tuple(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd693b8_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c75108dd:;
		if (it != expr_end) {
			jule::Ptr<_1dce54cbc_Data> _14121_d = *it;
			{
				_1de58d2e4_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1c75108dd:;
			++it;
			goto _iter_begin_1c75108dd;
		}
		_iter_end_1c75108dd:;
	};
}



inline void _1de58a599_newCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6a386_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1de58d2e4_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1de58a81e_outCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd69792_BuiltinOutCallExprModel> _15226_m) {
	_1de58d2e4_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1de58aa94_outlnCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd69b7c_BuiltinOutlnCallExprModel> _15628_m) {
	_1de58d2e4_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1de58ad19_panicCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6a771_BuiltinPanicCallExprModel> _16028_m) {
	_1de58d2e4_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1de58b08e_assertCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6ac27_BuiltinAssertCallExprModel> _16429_m) {
	_1de58d2e4_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1de58b314_errorCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel> _16828_m) {
	_1de58d2e4_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1de58b589_makeCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1de58d2e4_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1de58d2e4_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1de58b80e_appendCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6b5b8_BuiltinAppendCallExprModel> _18129_m) {
	_1de58d2e4_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1de58d2e4_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1de58ba84_lenCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6b8d7_BuiltinLenCallExprModel> _18626_m) {
	_1de58d2e4_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1de58bd09_capCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6bc06_BuiltinCapCallExprModel> _19026_m) {
	_1de58d2e4_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1de58c07e_cloneCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd69e9b_BuiltinCloneCallExprModel> _19428_m) {
	_1de58d2e4_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1de58c304_deleteCall(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel> _19829_m) {
	_1de58d2e4_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1de58d2e4_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1de58c579_sizeof(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6ce05_SizeofExprModel> _20525_m) {
	_1de58d2e4_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1de58c7ee_alignof(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6d1e1_AlignofExprModel> _20926_m) {
	_1de58d2e4_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1de58ca74_integratedToStr(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6d7da_IntegratedToStrExprModel> _21334_m) {
	_1de58d2e4_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1de58cce9_free(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6de8e_FreeExprModel> _21723_m) {
	_1de58d2e4_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1de58d06e_backendEmit(_1de586ee1_exprDeadCode* _self_, jule::Ptr<_1dcd6dba3_BackendEmitExprModel> _22130_m) {
	_1de5885b9_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1de58d2e4_optimize(_1de586ee1_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c751c2bd:;
			{
				_1de58784e_binary(_self_, (*(_22528_model)).cast_ptr<_1dcd63824_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c751c345:;
			{
				_1de587ac4_unary(_self_, (*(_22528_model)).cast_ptr<_1dcd63bcb_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c751c3bc:;
			{
				_1de587d49_structureLit(_self_, (*(_22528_model)).cast_ptr<_1dcd6447e_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c751c796:;
			{
				_1de5880be_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1dcd6478c_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c751c80c:;
			{
				_1de588344_casting(_self_, (*(_22528_model)).cast_ptr<_1dcd64cdc_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c751c884:;
			{
				_1de58883e_funcCall(_self_, (*(_22528_model)).cast_ptr<_1dcd6568e_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1c751c90b:;
			{
				_1de588ab4_slice(_self_, (*(_22528_model)).cast_ptr<_1dcd65a46_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1c751c983:;
			{
				_1de588d39_array(_self_, (*(_22528_model)).cast_ptr<_1dcd6876e_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c751ca0a:;
			{
				_1de5890ae_indexing(_self_, (*(_22528_model)).cast_ptr<_1dcd65eb9_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1c751ca82:;
			{
				_1de589334_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1dcd66371_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c751cb09:;
			{
				_1de5895a9_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1dcd66b9b_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c751cb81:;
			{
				_1de58982e_slicing(_self_, (*(_22528_model)).cast_ptr<_1dcd671da_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1c751cc08:;
			{
				_1de589aa4_traitSub(_self_, (*(_22528_model)).cast_ptr<_1dcd67729_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c751cc80:;
			{
				_1de589d29_structureSub(_self_, (*(_22528_model)).cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1c751cd07:;
			{
				_1de58a09e_commonSub(_self_, (*(_22528_model)).cast_ptr<_1dcd690bb_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c751cd7e:;
			{
				_1de58a324_tuple(_self_, (*(_22528_model)).cast_ptr<_1dcd693b8_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c751ce06:;
			{
				_1de58a81e_outCall(_self_, (*(_22528_model)).cast_ptr<_1dcd69792_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c751ce7d:;
			{
				_1de58aa94_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1dcd69b7c_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c751d005:;
			{
				_1de58a599_newCall(_self_, (*(_22528_model)).cast_ptr<_1dcd6a386_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c751d07c:;
			{
				_1de58ad19_panicCall(_self_, (*(_22528_model)).cast_ptr<_1dcd6a771_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c751d104:;
			{
				_1de58b08e_assertCall(_self_, (*(_22528_model)).cast_ptr<_1dcd6ac27_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c751d17b:;
			{
				_1de58b314_errorCall(_self_, (*(_22528_model)).cast_ptr<_1dcd6cb08_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c751d203:;
			{
				_1de58b589_makeCall(_self_, (*(_22528_model)).cast_ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c751d27a:;
			{
				_1de58b80e_appendCall(_self_, (*(_22528_model)).cast_ptr<_1dcd6b5b8_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c751d302:;
			{
				_1de58ba84_lenCall(_self_, (*(_22528_model)).cast_ptr<_1dcd6b8d7_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c751d379:;
			{
				_1de58bd09_capCall(_self_, (*(_22528_model)).cast_ptr<_1dcd6bc06_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c751d401:;
			{
				_1de58c07e_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1dcd69e9b_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c751d478:;
			{
				_1de58c304_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c751d500:;
			{
				_1de58c579_sizeof(_self_, (*(_22528_model)).cast_ptr<_1dcd6ce05_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1c751d577:;
			{
				_1de58c7ee_alignof(_self_, (*(_22528_model)).cast_ptr<_1dcd6d1e1_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1c751d5ee:;
			{
				_1de58ca74_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1dcd6d7da_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c751d676:;
			{
				_1de58cce9_free(_self_, (*(_22528_model)).cast_ptr<_1dcd6de8e_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c751d6ed:;
			{
				_1de58d06e_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1dcd6dba3_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1c751c4bb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1de586ee1_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd0566a4_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd056a6c_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd056d58_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd0571dd_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd057573_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd05792a_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd057e69_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd058453_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd0586ea_InlineStdInternalNosafeStobs _Src) {
	_Stream << "InlineStdInternalNosafeStobs{";
	_Stream << "Str:" << _Src._field_Str;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dd05992c_scopeOptimizer> static__1dd059d8e_new(jule::Ptr<_1dcdadc6a_Scope> _4623_scope) {
	return jule::new_ptr<_1dd05992c_scopeOptimizer>(_1dd05992c_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1dd05a114_setCurrentStmt(_1dd05992c_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1dd05a389_optimizeData(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dce54cbc_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c755dd26:;
			{
				jule::Ptr<_1dcd6568e_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_1dcd6568e_FnCallExprModel>(&__jule_any_type35);;
				if (_2388e9cbb_Production) {
					if (((!(_1dcd759ce_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _1dd05d546_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_1dd05a114_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1c755db17:;
	};
	static__1dd060779_optimize(&(_5635_d.get()._field_Model));
}



inline void _1dd05a60e_optimizeVar(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dce05cb2_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__1dd060779_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1dd05a884_optimizeConditional(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdae7c6_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7561a1b:;
		if (it != expr_end) {
			jule::Ptr<_1dcdae166_If> _7821_elif = *it;
			{
				static__1dd060779_optimize(&(_7821_elif.get()._field_Expr));
				_1dd05ce2a_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_1c7561a1b:;
			++it;
			goto _iter_begin_1c7561a1b;
		}
		_iter_end_1c7561a1b:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_1dd05ce2a_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1de4511a7_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7563688:;
		if (it != expr_end) {
			jule::I64 _9314_i = it - expr->begin();
			jule::Ptr<_1dcdae166_If> _9321_elif = *it;
			{
				if ((!(_1dd05d854_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_1c7563688;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_1dcdae452_Else>(_1dcdae452_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_1c7563688;
			}
			_iter_next_1c7563688:;
			++it;
			_9314_i++;
			goto _iter_begin_1c7563688;
		}
		_iter_end_1c7563688:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1dcdae166_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1dcdae166_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_1dd05e1e5_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_1c75664b0:;
	}
	_iter_end_1c75664b0:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I64 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7567989:;
		if (it != expr_end) {
			jule::I64 _13013_j = it - expr->begin();
			jule::Ptr<_1dcdae166_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_1c7567989:;
			++it;
			_13013_j++;
			goto _iter_begin_1c7567989;
		}
		_iter_end_1c7567989:;
	};
	if ((_12917_only != -1LL)) {
		_1dd05a114_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1dd05ac6e_buildDefaultConstantTrueCase(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb35cc_Case> _14651_case, jule::I64* _14669_i, jule::Ptr<_1dcdb2a82_Match>* _14682_m) {
	_14651_case.get()._field_Exprs=nullptr;
	jule::I64 _14813_start = (*(_14669_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14651_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1c756a294;
			};
			jule::Any *_15422_stmt = &(_14651_case.get()._field_Scope.get()._field_Stmts[(_14651_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1c756a937:;
					{
						((*(_14669_i)))++;
						if (((*(_14669_i)) >= (*(_14682_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14682_m)).get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_1c756a294;
						};
						_14651_case=(*(_14682_m)).get()._field_Cases[(*(_14669_i))];
						(*(_15422_stmt))=jule::Any(_14651_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1c756bbad:;
					{
						goto _iter_end_1c756a294;
					}
				}
				_match_end_1c756bac0:;
			};
		}
	_iter_next_1c756a294:;
	}
	_iter_end_1c756a294:;;
	(*(_14682_m)).get()._field_Default=(*(_14682_m)).get()._field_Cases[_14813_start];
	(*(_14682_m)).get()._field_Cases=(*(_14682_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _1dd05ae7d_optimizeMatch(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb2a82_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c756db49:;
		if (it != expr_end) {
			jule::Ptr<_1dcdb35cc_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c756e485:;
					if (it != expr_end) {
						jule::Ptr<_1dce54cbc_Data> _17425_expr = *it;
						{
							static__1dd060779_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_1c756e485:;
						++it;
						goto _iter_begin_1c756e485;
					}
					_iter_end_1c756e485:;
				};
				_1dd05ce2a_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_1c756db49:;
			++it;
			goto _iter_begin_1c756db49;
		}
		_iter_end_1c756db49:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_1dd05ce2a_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1de4511a7_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7570d05:;
		if (it != expr_end) {
			jule::I64 _19018_i = it - expr->begin();
			jule::Ptr<_1dcdb35cc_Case> _19025_case = *it;
			{
				if ((!(_1dd05de4d_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_1c7570d05;
				};
				_18717_constCase=true;
				_1dd05ac6e_buildDefaultConstantTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_1c7570d05;
			}
			_iter_next_1c7570d05:;
			++it;
			_19018_i++;
			goto _iter_begin_1c7570d05;
		}
		_iter_end_1c7570d05:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1dcdb35cc_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1dcdb35cc_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_1dd05e49d_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_1c7573599:;
	}
	_iter_end_1c7573599:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I64 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7574578:;
		if (it != expr_end) {
			jule::I64 _22013_j = it - expr->begin();
			jule::Ptr<_1dcdb35cc_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_1c7574578:;
			++it;
			_22013_j++;
			goto _iter_begin_1c7574578;
		}
		_iter_end_1c7574578:;
	};
	if ((_21917_only != -1LL)) {
		_1dd05a114_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1dd05b203_optimizeRangeIter(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb091a_RangeIter> _23640_it) {
	static__1dd060779_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_1dd05ce2a_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _1dd05b478_optimizeWhileIter(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb0035_WhileIter> _24140_it) {
	static__1dd060779_optimize(&(_24140_it.get()._field_Expr));
	_1dd05cba5_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_1dd05ce2a_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _1dd05b786_substr(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb20c0_Assign> _24729_a) {
	if ((!_24729_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c7578747:;
			{
				jule::Ptr<_1dcd671da_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_1dcd671da_SlicingExprModel>(&__jule_any_type97);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_1dd05a114_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1dd057e69_MutSlicingExprModel>(_1dd057e69_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1c75786e2:;
	};
	return false;;
}



inline jule::Bool _1dd05ba94_strInsert(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb20c0_Assign> _26732_a) {
	if ((!_26732_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c757b0da:;
			{
				jule::Ptr<_1dcd63824_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_1dcd63824_BinopExprModel>(&__jule_any_type114);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_1dd05a114_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1dd058453_StrInsertBeginExprModel>(_1dd058453_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1c757b085:;
	};
	return false;;
}



inline jule::Bool _1dd05bda2_strAppend(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb20c0_Assign> _28532_a) {
	if ((!_28532_a.get()._field_Op.get()._field_Kind.equal("+=", 2))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c757d97d:;
			{
				_1dd05a114_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1dd056a6c_StrAppendExprModel>(_1dd056a6c_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type125));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c757d9e4:;
			{
				jule::Ptr<_1dcd64cdc_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_1dcd64cdc_CastingExprModel>(&__jule_any_type98);;
				jule::Ptr<_1dce89b8c_Prim> _30121_prim = _1dce84b54_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_1dce85acd_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_1dce84b54_Prim(_1dce85acd_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_1dce8b463_IsU8(_30121_prim.ptr()))) && (!(_1dce8ae8a_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_1c757d928;
				};
				_1dd05a114_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1dd056a6c_StrAppendExprModel>(_1dd056a6c_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type125));
				return true;;
			}
		}
		_match_end_1c757d928:;
	};
	return false;;
}



inline jule::Bool _1dd05c1b0_strAssign(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb20c0_Assign> _31732_a) {
	if ((!(_1de451471_Str))) {
		return false;;
	};
	jule::Ptr<_1dce89b8c_Prim> _32113_lp = _1dce84b54_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_1dce8cd8d_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1dd05b786_substr(_self_, _31732_a) || _1dd05ba94_strInsert(_self_, _31732_a) || _1dd05bda2_strAppend(_self_, _31732_a)) {
			_case_begin_1c75841e2:;
			{
				return true;;
			}
		}
		_match_end_1c758418c:;
	};
	return false;;
}



inline void _1dd05c435_optimizeAssign(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb20c0_Assign> _33437_assign) {
	if (_1dd05c1b0_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__1dd060779_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__1dd060779_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1c75860c3:;
			{
				if ((_1de450481_Math && (_1dce860a6_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_1dcd63824_BinopExprModel>(_1dcd63824_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type114);;
					static__1dd060779_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type114) {
							_case_begin_1c7588548:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_1dcd6335c_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_1c75883e4:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_1c7585ec4:;
	};
	if (_1de450173_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1c7589c64:;
				{
					jule::Ptr<_1dcd6b5b8_BuiltinAppendCallExprModel> _36825_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_1dcd6b5b8_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1dd067583_areSameLvalueExprModel(&(_33437_assign.get()._field_L.get()._field_Model), &(_36825_m.get()._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ _36825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type82) {
							_case_begin_1c758aeda:;
							{
								_1dd05a114_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1dd057573_PushToSliceExprModel>(_1dd057573_PushToSliceExprModel{._field_Dest=_36825_m.get()._field_Dest, ._field_Elems=_36825_m.get()._field_Elements.cast_ptr<_1dcd65a46_SliceExprModel>(&__jule_any_type82)}), &__jule_any_type126));
							}
						}
						else {
							_case_begin_1c758b309:;
							{
								_1dd05a114_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1dd05792a_AppendToSliceExprModel>(_1dd05792a_AppendToSliceExprModel{._field_Dest=_33437_assign.get()._field_L.get()._field_Model, ._field_Slice=_36825_m.get()._field_Elements}), &__jule_any_type127));
							}
						}
						_match_end_1c758b2a4:;
					};
				}
			}
			_match_end_1c7587998:;
		};
	};
}



inline void _1dd05c6aa_optimizeMultiAssign(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb2477_MultiAssign> _39042_assign) {
	{
		auto expr = &(_39042_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c758c409:;
		if (it != expr_end) {
			jule::Ptr<_1dce54cbc_Data> _39121_l = *it;
			{
				if ((_39121_l != nullptr)) {
					static__1dd060779_optimize(&(_39121_l.get()._field_Model));
				};
			}
			_iter_next_1c758c409:;
			++it;
			goto _iter_begin_1c758c409;
		}
		_iter_end_1c758c409:;
	};
	static__1dd060779_optimize(&(_39042_assign.get()._field_R));
}



inline void _1dd05c930_optimizeRet(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdb4006_RetSt> _39934_r) {
	static__1dd060779_optimize(&(_39934_r.get()._field_Expr));
}



inline void _1dd05cba5_optimizeStmt(_1dd05992c_scopeOptimizer* _self_, jule::Any _40335_stmt) {
	{
		auto &_match_expr{ _40335_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c758e1a8:;
			{
				_1dd05ce2a_optimizeChild(_self_, _40335_stmt.cast_ptr<_1dcdadc6a_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c758e21e:;
			{
				_1dd05a389_optimizeData(_self_, _40335_stmt.cast_ptr<_1dce54cbc_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c758e285:;
			{
				_1dd05a60e_optimizeVar(_self_, _40335_stmt.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c758e2eb:;
			{
				_1dd05a884_optimizeConditional(_self_, _40335_stmt.cast_ptr<_1dcdae7c6_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c758e362:;
			{
				_1dd05b203_optimizeRangeIter(_self_, _40335_stmt.cast_ptr<_1dcdb091a_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c758e3c8:;
			{
				_1dd05b478_optimizeWhileIter(_self_, _40335_stmt.cast_ptr<_1dcdb0035_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c758e43e:;
			{
				_1dd05ce2a_optimizeChild(_self_, _40335_stmt.cast_ptr<_1dcdaeab2_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c758e4a5:;
			{
				_1dd05c435_optimizeAssign(_self_, _40335_stmt.cast_ptr<_1dcdb20c0_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c758e51b:;
			{
				_1dd05c6aa_optimizeMultiAssign(_self_, _40335_stmt.cast_ptr<_1dcdb2477_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c758e593:;
			{
				_1dd05ae7d_optimizeMatch(_self_, _40335_stmt.cast_ptr<_1dcdb2a82_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1c758e61a:;
			{
				_1dd05c930_optimizeRet(_self_, _40335_stmt.cast_ptr<_1dcdb4006_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1c758e054:;
	};
}



inline void _1dd05ce2a_optimizeChild(_1dd05992c_scopeOptimizer* _self_, jule::Ptr<_1dcdadc6a_Scope> _43036_child) {
	jule::Ptr<_1dd05992c_scopeOptimizer> _43117_so = static__1dd059d8e_new(_43036_child);;
	_1dd05d106_optimize(_43117_so.ptr());
}



inline void _1dd05d106_optimize(_1dd05992c_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7594dc3:;
		if (it != expr_end) {
			jule::I64 _43714_i = it - expr->begin();
			jule::Any _43721_stmt = *it;
			{
				(*(_self_))._field_i=_43714_i;
				_1dd05cba5_optimizeStmt(_self_, _43721_stmt);
			}
			_iter_next_1c7594dc3:;
			++it;
			_43714_i++;
			goto _iter_begin_1c7594dc3;
		}
		_iter_end_1c7594dc3:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dd05992c_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1dd060779_optimize(jule::Any* _5829_model) {
	if (_1de58d899_exprEnabled) {
		jule::Ptr<_1dd06026d_exprOptimizer> _6121_exop = jule::new_ptr<_1dd06026d_exprOptimizer>(_1dd06026d_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1dd066cad_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1dd060a76_strCond(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd63824_BinopExprModel> _6826_m) {
	jule::Ptr<_1dce89b8c_Prim> _6913_lp = _1dce84b54_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1dce8cd8d_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((!_6826_m.get()._field_Op.get()._field_Kind.equal("==", 2)) && (!_6826_m.get()._field_Op.get()._field_Kind.equal("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c75a2a5c:;
			{
				({
					jule::Ptr<_1dcd6335c_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1dcd6335c_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1c75a2a07:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c75a1dbe:;
			{
				goto _match_end_1c75a37e9;
			}
		}
		else {
			_case_begin_1c75a3b3a:;
			{
				return true;;
			}
		}
		_match_end_1c75a37e9:;
	};
	_julec_label_opt:;
	jule::Ptr<_24a233549_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_24a233549_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1c75a4c07:;
			{
				if (_24a23557e_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1dcd690bb_CommonSubIdentExprModel>(_1dcd690bb_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_1c75a4ba2;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_1dd0566a4_StrCompExprModel>(_1dd0566a4_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1c75a4c6d:;
			{
				if (_24a23557e_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_23ae26b42_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1dcd63bcb_UnaryExprModel>(_1dcd63bcb_UnaryExprModel{._field_Expr=jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Model=jule::Any(jule::new_ptr<_1dcd690bb_CommonSubIdentExprModel>(_1dcd690bb_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_1c75a4ba2;
				};
				jule::Any _12121_model = jule::Any(jule::new_ptr<_1dd0566a4_StrCompExprModel>(_1dd0566a4_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12121_model))))));
			}
		}
		_match_end_1c75a4ba2:;
	};
	return true;;
}



inline void _1dd060ceb_binary(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd63824_BinopExprModel> _13125_m) {
	static__1dd060779_optimize(&(_13125_m.get()._field_Left.get()._field_Model));
	static__1dd060779_optimize(&(_13125_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13125_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c75ab505:;
			{
				goto _match_end_1c75ab02c;
			}
		}
		else {
			_case_begin_1c75ab0c6:;
			{
				return;;
			}
		}
		_match_end_1c75ab02c:;
	};
	if ((_1de4511a7_Cond && _1dd060a76_strCond(_self_, _13125_m))) {
		return;;
	};
	if ((!(_1de450481_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13125_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c75ac0d8:;
			{
				jule::Bool _15118_ok = false;;
				jule::U64 _15122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1dd0671ed_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15118_ok = __jule_assign_result.__jule_result_arg0;
					_15122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15118_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_24a233549_Const> _15425_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_24a233549_Const>(&__jule_any_type19);;
					_24a23652a_SetU64(_15425_c.ptr(), _15122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1c75ac14e:;
			{
				jule::Bool _15918_ok = false;;
				jule::U64 _15922_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1dd0671ed_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15918_ok = __jule_assign_result.__jule_result_arg0;
					_15922_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15918_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_24a233549_Const> _16225_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_24a233549_Const>(&__jule_any_type19);;
					_24a23652a_SetU64(_16225_c.ptr(), _15922_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1c75ac1c6:;
			{
				jule::Ptr<_24a233549_Const> _16721_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_24a233549_Const>(&__jule_any_type19);;
				jule::F64 _16817_d = _24a236030_AsF64(_16721_c.ptr());;
				if ((_16817_d == 2LL)) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_24a2362a5_SetI64(_16721_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1c75ac083:;
	};
	jule::Any _17417_model = jule::Any(jule::new_ptr<_1dd056d58_UnsafeBinopExprModel>(_1dd056d58_UnsafeBinopExprModel{._field_Node=_13125_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17417_model))))));
}



inline void _1dd061071_unary(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd63bcb_UnaryExprModel> _17824_m) {
	static__1dd060779_optimize(&(_17824_m.get()._field_Expr.get()._field_Model));
	if ((_1de450ccd_Ptr && _17824_m.get()._field_Op.get()._field_Kind.equal("*", 1))) {
		{
			auto &_match_expr{ _17824_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1c75b3bc2:;
				{
					jule::Ptr<_1dcd63bcb_UnaryExprModel> _18325_um = _17824_m.get()._field_Expr.get()._field_Model.cast_ptr<_1dcd63bcb_UnaryExprModel>(&__jule_any_type74);;
					if (_18325_um.get()._field_Op.get()._field_Kind.equal("&", 1)) {
						(*((*(_self_))._field_model))=_18325_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1c75b3b6c:;
		};
	};
}



inline void _1dd0612e6_structureLit(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6447e_StructLitExprModel> _19131_m) {
	{
		auto expr = &(_19131_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c75b5641:;
		if (it != expr_end) {
			jule::Ptr<_1dcd640c7_StructArgExprModel> _19221_arg = *it;
			{
				static__1dd060779_optimize(&(_19221_arg.get()._field_Expr));
			}
			_iter_next_1c75b5641:;
			++it;
			goto _iter_begin_1c75b5641;
		}
		_iter_end_1c75b5641:;
	};
}



inline void _1dd06156b_allocStructure(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6478c_AllocStructLitExprModel> _19733_m) {
	_1dd0612e6_structureLit(_self_, _19733_m.get()._field_Lit);
}



inline void _1dd0617e1_casting(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd64cdc_CastingExprModel> _20126_m) {
	static__1dd060779_optimize(&(_20126_m.get()._field_Expr));
}



inline void _1dd061a66_args(_1dd06026d_exprOptimizer* _self_, jule::Slice<jule::Any>* _20524_args) {
	{
		auto expr = _20524_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c75b6e17:;
		if (it != expr_end) {
			jule::I64 _20614_i = it - expr->begin();
			jule::Any _20621_arg = *it;
			{
				static__1dd060779_optimize(&(_20621_arg));
				(*(_20524_args))[_20614_i]=_20621_arg;
			}
			_iter_next_1c75b6e17:;
			++it;
			_20614_i++;
			goto _iter_begin_1c75b6e17;
		}
		_iter_end_1c75b6e17:;
	};
}



inline void _1dd061cdb_scope(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcdadc6a_Scope>* _21225_s) {
	jule::Ptr<_1dd05992c_scopeOptimizer> _21317_scopt = static__1dd059d8e_new((*(_21225_s)));;
	_1dd05d106_optimize(_21317_scopt.ptr());
}



inline jule::Bool _1dd06211b_optimizeSpecialFuncCalls(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6568e_FnCallExprModel>* _21744_m) {
	_1de44cdb8_stdCacheData _21814_data;;
	jule::Bool _21820_ok = false;;
	_1de44d2e7_stdCache.lookup(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_21744_m)).get()._field_Func)), &(_21814_data), &(_21820_ok));
	if ((!(_21820_ok))) {
		return false;;
	};
	_21814_data._field_do(_self_, &(_21814_data), _21744_m);
	return true;;
}



inline void _1dd0623a2_funcCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6568e_FnCallExprModel> _22627_m) {
	if ((_1de58dd2d_stdEnabled && _1dd06211b_optimizeSpecialFuncCalls(_self_, &(_22627_m)))) {
		return;;
	};
	static__1dd060779_optimize(&(_22627_m.get()._field_Expr));
	_1dd061a66_args(_self_, &(_22627_m.get()._field_Args));
	if ((_22627_m.get()._field_Except != nullptr)) {
		_1dd061cdb_scope(_self_, &(_22627_m.get()._field_Except));
	};
}



inline void _1dd062627_slice(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd65a46_SliceExprModel> _23724_m) {
	_1dd061a66_args(_self_, &(_23724_m.get()._field_Elems));
}



inline void _1dd06289c_array(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6876e_ArrayExprModel> _24124_m) {
	if (((_24124_m.get()._field_Elems.len() == 2LL) && (_24124_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _24321_elem = _24124_m.get()._field_Elems[0LL];;
		static__1dd060779_optimize(&(_24321_elem));
		_24124_m.get()._field_Elems[0LL]=_24321_elem;
	};
	_1dd061a66_args(_self_, &(_24124_m.get()._field_Elems));
}



inline void _1dd062b22_indexing(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd65eb9_IndexingExprModel> _25027_m) {
	static__1dd060779_optimize(&(_25027_m.get()._field_Expr.get()._field_Model));
	static__1dd060779_optimize(&(_25027_m.get()._field_Index.get()._field_Model));
	if ((!(_1de45074a_Access))) {
		return;;
	};
	jule::Bool _25613_array = (_1dce85869_Arr(_25027_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_25613_array && _1dce5563b_IsConst(_25027_m.get()._field_Index.ptr()))) {
		jule::Any _25921_model = jule::Any(jule::new_ptr<_1dd0571dd_UnsafeIndexingExprModel>(_1dd0571dd_UnsafeIndexingExprModel{._field_Node=_25027_m}), &__jule_any_type130);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_25921_model))))));
		return;;
	};
	{
		auto &_match_expr{ _25027_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c75c1284:;
			{
				jule::Ptr<_1dce05cb2_Var> _26517_i = _25027_m.get()._field_Index.get()._field_Model.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
				if ((_26517_i.get()._field_Mutable || (_26517_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1c75c1130;
				};
				{
					auto &_match_expr{ _25027_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1c75c294a:;
						{
							jule::Ptr<_1dce05cb2_Var> _27121_r = _25027_m.get()._field_Expr.get()._field_Model.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
							if ((_26517_i.get()._field_IterRelation.get()._field_Range == _27121_r)) {
								jule::Any _27429_model = jule::Any(jule::new_ptr<_1dd0571dd_UnsafeIndexingExprModel>(_1dd0571dd_UnsafeIndexingExprModel{._field_Node=_25027_m}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_27429_model))))));
							};
						}
					}
					_match_end_1c75c262b:;
				};
			}
		}
		_match_end_1c75c1130:;
	};
}



inline void _1dd062d97_anonFunc(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd66371_AnonFnExprModel> _28127_m) {
	_1dd061cdb_scope(_self_, &(_28127_m.get()._field_Func.get()._field_Scope));
}



inline void _1dd06311c_mapExpr(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd66b9b_MapExprModel> _28526_m) {
	{
		auto expr = &(_28526_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c75c4e36:;
		if (it != expr_end) {
			jule::Ptr<_1dcd66728_KeyValPairExprModel> _28621_pair = *it;
			{
				static__1dd060779_optimize(&(_28621_pair.get()._field_Key));
				static__1dd060779_optimize(&(_28621_pair.get()._field_Val));
			}
			_iter_next_1c75c4e36:;
			++it;
			goto _iter_begin_1c75c4e36;
		}
		_iter_end_1c75c4e36:;
	};
}



inline void _1dd063392_slicing(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd671da_SlicingExprModel> _29226_m) {
	static__1dd060779_optimize(&(_29226_m.get()._field_Expr));
	static__1dd060779_optimize(&(_29226_m.get()._field_Left));
	if ((_29226_m.get()._field_Right != nullptr)) {
		static__1dd060779_optimize(&(_29226_m.get()._field_Right));
	};
}



inline void _1dd063617_traitSub(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd67729_TraitSubIdentExprModel> _30027_m) {
	static__1dd060779_optimize(&(_30027_m.get()._field_Expr));
}



inline void _1dd06388c_structureSub(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd68010_StructSubIdentExprModel> _30431_m) {
	static__1dd060779_optimize(&(_30431_m.get()._field_Expr.get()._field_Model));
}



inline void _1dd063b12_commonSub(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd690bb_CommonSubIdentExprModel> _30828_m) {
	static__1dd060779_optimize(&(_30828_m.get()._field_Expr));
}



inline void _1dd063d87_tuple(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd693b8_TupleExprModel> _31224_m) {
	{
		auto expr = &(_31224_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c75c7c19:;
		if (it != expr_end) {
			jule::Ptr<_1dce54cbc_Data> _31321_d = *it;
			{
				static__1dd060779_optimize(&(_31321_d.get()._field_Model));
			}
			_iter_next_1c75c7c19:;
			++it;
			goto _iter_begin_1c75c7c19;
		}
		_iter_end_1c75c7c19:;
	};
}



inline void _1dd06410c_newCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6a386_BuiltinNewCallExprModel> _31826_m) {
	if ((_31826_m.get()._field_Init != nullptr)) {
		static__1dd060779_optimize(&(_31826_m.get()._field_Init));
	};
}



inline void _1dd064382_outCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd69792_BuiltinOutCallExprModel> _32426_m) {
	static__1dd060779_optimize(&(_32426_m.get()._field_Expr));
}



inline void _1dd064607_outlnCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd69b7c_BuiltinOutlnCallExprModel> _32828_m) {
	static__1dd060779_optimize(&(_32828_m.get()._field_Expr));
}



inline void _1dd06487c_panicCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6a771_BuiltinPanicCallExprModel> _33228_m) {
	static__1dd060779_optimize(&(_33228_m.get()._field_Expr));
}



inline void _1dd064b02_assertCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6ac27_BuiltinAssertCallExprModel> _33629_m) {
	static__1dd060779_optimize(&(_33629_m.get()._field_Expr));
}



inline void _1dd064d77_errorCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel> _34028_m) {
	static__1dd060779_optimize(&(_34028_m.get()._field_Err.get()._field_Model));
}



inline void _1dd0650ec_makeCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel> _34427_m) {
	if ((_34427_m.get()._field_Len != nullptr)) {
		static__1dd060779_optimize(&(_34427_m.get()._field_Len));
	};
	if ((_34427_m.get()._field_Cap != nullptr)) {
		static__1dd060779_optimize(&(_34427_m.get()._field_Cap));
	};
}



inline void _1dd065372_appendCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6b5b8_BuiltinAppendCallExprModel> _35329_m) {
	static__1dd060779_optimize(&(_35329_m.get()._field_Dest));
	static__1dd060779_optimize(&(_35329_m.get()._field_Elements));
}



inline void _1dd0655e7_lenCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6b8d7_BuiltinLenCallExprModel> _35826_m) {
	static__1dd060779_optimize(&(_35826_m.get()._field_Expr.get()._field_Model));
}



inline void _1dd06586c_capCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6bc06_BuiltinCapCallExprModel> _36226_m) {
	static__1dd060779_optimize(&(_36226_m.get()._field_Expr.get()._field_Model));
}



inline void _1dd065ae2_cloneCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd69e9b_BuiltinCloneCallExprModel> _36628_m) {
	static__1dd060779_optimize(&(_36628_m.get()._field_Expr));
}



inline void _1dd065d67_deleteCall(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel> _37029_m) {
	static__1dd060779_optimize(&(_37029_m.get()._field_Dest.get()._field_Model));
	if ((_37029_m.get()._field_Key != nullptr)) {
		static__1dd060779_optimize(&(_37029_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1dd0660dc_sizeof(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6ce05_SizeofExprModel> _37725_m) {
	static__1dd060779_optimize(&(_37725_m.get()._field_Expr));
}



inline void _1dd066362_alignof(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6d1e1_AlignofExprModel> _38126_m) {
	static__1dd060779_optimize(&(_38126_m.get()._field_Expr));
}



inline void _1dd0665d7_integratedToStr(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6d7da_IntegratedToStrExprModel> _38534_m) {
	static__1dd060779_optimize(&(_38534_m.get()._field_Expr));
}



inline void _1dd06685c_free(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6de8e_FreeExprModel> _38923_m) {
	static__1dd060779_optimize(&(_38923_m.get()._field_Expr));
}



inline void _1dd066ad2_backendEmit(_1dd06026d_exprOptimizer* _self_, jule::Ptr<_1dcd6dba3_BackendEmitExprModel> _39330_m) {
	_1dd061a66_args(_self_, &(_39330_m.get()._field_Exprs));
}



inline void _1dd066cad_do(_1dd06026d_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c75d11c8:;
			{
				_1dd060ceb_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd63824_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c75d14c5:;
			{
				_1dd061071_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd63bcb_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c75d153b:;
			{
				_1dd0612e6_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6447e_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c75d15a2:;
			{
				_1dd06156b_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6478c_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c75d1618:;
			{
				_1dd0617e1_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd64cdc_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c75d1690:;
			{
				_1dd0623a2_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6568e_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1c75d1717:;
			{
				_1dd062627_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd65a46_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1c75d178e:;
			{
				_1dd06289c_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6876e_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c75d1816:;
			{
				_1dd062b22_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd65eb9_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1c75d188d:;
			{
				_1dd062d97_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd66371_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c75d1915:;
			{
				_1dd06311c_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd66b9b_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c75d198c:;
			{
				_1dd063392_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd671da_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1c75d1a14:;
			{
				_1dd063617_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd67729_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c75d1a8b:;
			{
				_1dd06388c_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1c75d1b13:;
			{
				_1dd063b12_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd690bb_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c75d1b8a:;
			{
				_1dd063d87_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd693b8_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c75d1c12:;
			{
				_1dd064382_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd69792_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c75d1c89:;
			{
				_1dd064607_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd69b7c_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c75d1d11:;
			{
				_1dd06410c_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6a386_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c75d1d88:;
			{
				_1dd06487c_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6a771_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c75d1e10:;
			{
				_1dd064b02_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6ac27_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c75d1e87:;
			{
				_1dd064d77_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6cb08_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c75d200e:;
			{
				_1dd0650ec_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c75d2086:;
			{
				_1dd065372_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6b5b8_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c75d210d:;
			{
				_1dd0655e7_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6b8d7_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c75d2185:;
			{
				_1dd06586c_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6bc06_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c75d220c:;
			{
				_1dd065ae2_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd69e9b_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c75d2284:;
			{
				_1dd065d67_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c75d230b:;
			{
				_1dd0660dc_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6ce05_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1c75d2383:;
			{
				_1dd066362_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6d1e1_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1c75d240a:;
			{
				_1dd0665d7_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6d7da_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c75d2482:;
			{
				_1dd06685c_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6de8e_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c75d2509:;
			{
				_1dd066ad2_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1dcd6dba3_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1c75d1173:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dd06026d_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de44cdb8_stdCacheData _Src) {
	_Stream << "stdCacheData{";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "do:" << _Src._field_do;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1de58e0a3_Optimizer> static__1de58e4d2_New(jule::Ptr<_1de448d4d_IR>* _2724_ir) {
	return jule::new_ptr<_1de58e0a3_Optimizer>(_1de58e0a3_Optimizer{._field_ir=(*(_2724_ir))});;
}



inline void _1de58e757_optimizeGlobal(_1de58e0a3_Optimizer* _self_, jule::Ptr<_1dce05cb2_Var>* _3338_v) {
	if ((!((*(_3338_v)).get()._field_Binded))) {
		static__1dd060779_optimize(&((*(_3338_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1de58e9cc_optimizeFunction(_1de58e0a3_Optimizer* _self_, jule::Ptr<_1dcd71997_Fn>* _3940_func) {
	if ((*(_3940_func)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_3940_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c75ea489:;
		if (it != expr_end) {
			jule::Ptr<_1dcd74648_FnIns> _4321_ins = *it;
			{
				jule::Ptr<_1dd05992c_scopeOptimizer> _4421_so = static__1dd059d8e_new(_4321_ins.get()._field_Scope);;
				_1dd05d106_optimize(_4421_so.ptr());
			}
			_iter_next_1c75ea489:;
			++it;
			goto _iter_begin_1c75ea489;
		}
		_iter_end_1c75ea489:;
	};
}



inline void _1de58ec52_optimizeStruct(_1de58e0a3_Optimizer* _self_, jule::Ptr<_1dcd5b641_Struct>* _4938_s) {
	if ((*(_4938_s)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4938_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c75eb8a8:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5e457_StructIns> _5321_ins = *it;
			{
				{
					auto expr = &(_5321_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c75ec0b2:;
					if (it != expr_end) {
						jule::Ptr<_1dcd5d962_FieldIns> _5425_f = *it;
						{
							if ((_5425_f.get()._field_Default != nullptr)) {
								static__1dd060779_optimize(&(_5425_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1c75ec0b2:;
						++it;
						goto _iter_begin_1c75ec0b2;
					}
					_iter_end_1c75ec0b2:;
				};
				{
					auto expr = &(_5321_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c75ece2b:;
					if (it != expr_end) {
						jule::Ptr<_1dcd71997_Fn> _5925_m = *it;
						{
							_1de58e9cc_optimizeFunction(_self_, &(_5925_m));
						}
						_iter_next_1c75ece2b:;
						++it;
						goto _iter_begin_1c75ece2b;
					}
					_iter_end_1c75ece2b:;
				};
			}
			_iter_next_1c75eb8a8:;
			++it;
			goto _iter_begin_1c75eb8a8;
		}
		_iter_end_1c75eb8a8:;
	};
}



inline void _1de58eec7_optimizeGlobals(_1de58e0a3_Optimizer* _self_, jule::Ptr<_1dcdd031e_Package>* _6539_p) {
	{
		auto expr = &((*(_6539_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c75ed338:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _6621_f = *it;
			{
				{
					auto expr = &(_6621_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c75ee070:;
					if (it != expr_end) {
						jule::Ptr<_1dce05cb2_Var> _6725_v = *it;
						{
							_1de58e757_optimizeGlobal(_self_, &(_6725_v));
						}
						_iter_next_1c75ee070:;
						++it;
						goto _iter_begin_1c75ee070;
					}
					_iter_end_1c75ee070:;
				};
			}
			_iter_next_1c75ed338:;
			++it;
			goto _iter_begin_1c75ed338;
		}
		_iter_end_1c75ed338:;
	};
}



inline void _1de59024c_optimizeFunctions(_1de58e0a3_Optimizer* _self_, jule::Ptr<_1dcdd031e_Package>* _7341_p) {
	{
		auto expr = &((*(_7341_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c75ee57b:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _7421_f = *it;
			{
				{
					auto expr = &(_7421_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c7600291:;
					if (it != expr_end) {
						jule::Ptr<_1dcd71997_Fn> _7525_func = *it;
						{
							_1de58e9cc_optimizeFunction(_self_, &(_7525_func));
						}
						_iter_next_1c7600291:;
						++it;
						goto _iter_begin_1c7600291;
					}
					_iter_end_1c7600291:;
				};
			}
			_iter_next_1c75ee57b:;
			++it;
			goto _iter_begin_1c75ee57b;
		}
		_iter_end_1c75ee57b:;
	};
}



inline void _1de5904c2_optimizeStructs(_1de58e0a3_Optimizer* _self_, jule::Ptr<_1dcdd031e_Package>* _8139_p) {
	{
		auto expr = &((*(_8139_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c760079c:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _8221_f = *it;
			{
				{
					auto expr = &(_8221_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c76014b2:;
					if (it != expr_end) {
						jule::Ptr<_1dcd5b641_Struct> _8325_s = *it;
						{
							_1de58ec52_optimizeStruct(_self_, &(_8325_s));
						}
						_iter_next_1c76014b2:;
						++it;
						goto _iter_begin_1c76014b2;
					}
					_iter_end_1c76014b2:;
				};
			}
			_iter_next_1c760079c:;
			++it;
			goto _iter_begin_1c760079c;
		}
		_iter_end_1c760079c:;
	};
}



inline void _1de590747_optimizePackage(_1de58e0a3_Optimizer* _self_, jule::Ptr<_1dcdd031e_Package>* _8939_p) {
	_1de58eec7_optimizeGlobals(_self_, _8939_p);
	_1de59024c_optimizeFunctions(_self_, _8939_p);
	_1de5904c2_optimizeStructs(_self_, _8939_p);
}



inline void _1de590923_Optimize(_1de58e0a3_Optimizer* _self_) {
	_1de590b87_detectEnabled();
	if (_1de58dd2d_stdEnabled) {
		_1de44d54a_buildCache(&((*(_self_))._field_ir));
	};
	if (_1de44eda9_Deadcode) {
		_1de581826_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1de58dab9_scopeEnabled || _1de58d899_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c7603739:;
			if (it != expr_end) {
				jule::Ptr<_1dcdcc6d4_ImportInfo> _10825_u = *it;
				{
					if ((!(_10825_u.get()._field_Binded))) {
						_1de590747_optimizePackage(_self_, &(_10825_u.get()._field_Package));
					};
				}
				_iter_next_1c7603739:;
				++it;
				goto _iter_begin_1c7603739;
			}
			_iter_end_1c7603739:;
		};
		_1de590747_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1de44eda9_Deadcode) {
		_1de586919_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1de58e0a3_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1de5b05be_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1de591429_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1de5b05be_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1de5b1658_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1de5b2e2e_LogFlat(_23aa28854_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1de5b313d_LogError(_23aa28854_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1de5b05be_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_24a223b77_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_24a223b77_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _23a98db93_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_23a98db93_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _24a223b77_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_23a986372_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_23a986372_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_23a986372_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1de591429_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1de5b334c_Log(_23aa28854_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1c76110a4:;
			{
				static__1de5b2e2e_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1c761111a:;
			{
				static__1de5b313d_LogError(_6520_l);
			}
		}
		_match_end_1c7610eb6:;
	};
}



inline void static__1de5b355b_PrintLogs(jule::Slice<_23aa28854_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7611ea6:;
		if (it != expr_end) {
			_23aa28854_Log *_7616_l = it;
			{
				static__1de5b334c_Log(_7616_l);
			}
			_iter_next_1c7611ea6:;
			++it;
			goto _iter_begin_1c7611ea6;
		}
		_iter_end_1c7611ea6:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_24a223b77_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1de5b2bdc_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4482467_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1c4482b0a_Time static__1c4482ea1_Unix(jule::U64 _9120_sec) {
	return _1c4482b0a_Time{._field_sec=_9120_sec};;
}



inline _1c4482b0a_Time static__1c448319e_Now(void) {
	return static__1c4482ea1_Unix(static_cast<jule::U64>(_1c4484a96_unix()));;
}



inline _1c4482467_AbsTime _1c4484766_Abs(_1c4482b0a_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1c44819e9_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1c44819e9_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1d4309c6e:;
	}
	_iter_end_1d4309c6e:;;
	_1c4482467_AbsTime _17417_t = _1c4482467_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4482b0a_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_23b4336d1_scopeCoder> static__23b433cca_new(jule::Ptr<_1c448bb8b_ObjectCoder>* _6624_oc) {
	return jule::new_ptr<_23b4336d1_scopeCoder>(_23b4336d1_scopeCoder{._field_oc=(*(_6624_oc))});;
}



inline void _1d439e792_iterHead(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb091a_RangeIter>* _7332_it, jule::Bool* _7344_ref, jule::Str* _7356_begin) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1de44ea9b_Copy && _23b439396_isCopyOptimizable(&((*(_7332_it)).get()._field_Expr)))) {
		(*(_7344_ref))=true;
		{
			auto &_match_expr{ (*(_7332_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1d43a0e36:;
				{
					jule::Ptr<_1dce05cb2_Var> _8221_v = (*(_7332_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
					if (_8221_v.get()._field_Reference) {
						_23b448e33_model(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1d43a2663;
					};
					goto _case_begin_1d43a26b8;
				}
			}
			else {
				_case_begin_1d43a26b8:;
				{
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_23b448e33_model(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1d43a2663:;
		};
	} else {
		_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7344_ref))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7344_ref))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c560_writeR(_self_.get()._field_oc, _7356_begin);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
}



inline void _23b434418_rangeIndexIter(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb091a_RangeIter>* _12239_it) {
	jule::Str _12313_begin = static__23b452bd9_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));;
	jule::Str _12413_next = static__23b453228_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));;
	jule::Bool _12617_ref = false;;
	_1d439e792_iterHead(_self_, _12239_it, &(_12617_ref), &(_12313_begin));
	if (((*(_12239_it)).get()._field_KeyA != nullptr)) {
		_1c449480e_varInitExpr(_self_.get()._field_oc, &((*(_12239_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12617_ref) {
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c448cae3_indent(_self_.get()._field_oc);
	};
	if (((*(_12239_it)).get()._field_KeyB != nullptr)) {
		(*(_12239_it)).get()._field_KeyB.get()._field_Reference=(_1de44ea9b_Copy && _23b43972b_isIterCopyOptimizable(&((*(_12239_it)).get()._field_Expr), &((*(_12239_it)).get()._field_KeyB)));
		_1c449480e_varInitExpr(_self_.get()._field_oc, &((*(_12239_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12239_it)).get()._field_KeyB.get()._field_Reference) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c448cae3_indent(_self_.get()._field_oc);
	};
	_23b438c7a_scope(_self_, (*(_12239_it)).get()._field_Scope);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c560_writeR(_self_.get()._field_oc, &(_12413_next));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1c448cae3_indent(_self_.get()._field_oc);
	if (((*(_12239_it)).get()._field_KeyA != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, static__23b452942_var((*(_12239_it)).get()._field_KeyA));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1c448cae3_indent(_self_.get()._field_oc);
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c448c560_writeR(_self_.get()._field_oc, &(_12313_begin));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, static__23b452e81_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it))))));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _23b43468d_rangeHashmapIter(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb091a_RangeIter>* _18541_it) {
	jule::Str _18613_begin = static__23b452bd9_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it)))));;
	jule::Str _18713_next = static__23b453228_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it)))));;
	jule::Bool _18917_ref = false;;
	_1d439e792_iterHead(_self_, _18541_it, &(_18917_ref), &(_18613_begin));
	if (((*(_18541_it)).get()._field_KeyA != nullptr)) {
		_1c449480e_varInitExpr(_self_.get()._field_oc, &((*(_18541_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c448cae3_indent(_self_.get()._field_oc);
	};
	if (((*(_18541_it)).get()._field_KeyB != nullptr)) {
		_1c449480e_varInitExpr(_self_.get()._field_oc, &((*(_18541_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c448cae3_indent(_self_.get()._field_oc);
	};
	_23b438c7a_scope(_self_, (*(_18541_it)).get()._field_Scope);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c560_writeR(_self_.get()._field_oc, &(_18713_next));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c448c560_writeR(_self_.get()._field_oc, &(_18613_begin));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, static__23b452e81_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it))))));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _23b434913_ifCase(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdae166_If> _22830_i) {
	if ((_22830_i.get()._field_Expr != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22830_i.get()._field_Expr);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_23b438c7a_scope(_self_, _22830_i.get()._field_Scope);
}



inline void _23b434b88_conditional(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdae7c6_Conditional> _23735_c) {
	jule::Bool _23817_writed = false;;
	{
		auto expr = &(_23735_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d43c1808:;
		if (it != expr_end) {
			jule::Ptr<_1dcdae166_If> _23921_elif = *it;
			{
				if ((_23921_elif == nullptr)) {
					goto _iter_next_1d43c1808;
				};
				if (_23817_writed) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23817_writed=true;
				_23b434913_ifCase(_self_, _23921_elif);
			}
			_iter_next_1d43c1808:;
			++it;
			goto _iter_begin_1d43c1808;
		}
		_iter_end_1d43c1808:;
	};
	if ((_23735_c.get()._field_Default != nullptr)) {
		if (_23817_writed) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_23b438c7a_scope(_self_, _23735_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _23b434e0d_infIter(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdaeab2_InfIter> _25731_it) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_23b438c7a_scope(_self_, _25731_it.get()._field_Scope);
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, static__23b453228_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25731_it))));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, static__23b452e81_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25731_it))));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _23b435183_whileIter(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb0035_WhileIter> _27433_it) {
	if (((_27433_it.get()._field_Expr != nullptr) && (_27433_it.get()._field_Next == nullptr))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27433_it.get()._field_Expr);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27433_it.get()._field_Expr != nullptr)) {
			_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27433_it.get()._field_Expr);
		};
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27433_it.get()._field_Next != nullptr)) {
			_23b438780_st(_self_, _27433_it.get()._field_Next);
		};
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_23b438c7a_scope(_self_, _27433_it.get()._field_Scope);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, static__23b453228_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27433_it))));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, static__23b452e81_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27433_it))));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _23b435408_rangeIter(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb091a_RangeIter> _30733_it) {
	{
		
		if ((_1dce85acd_Slc(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6bcb4a5:;
			{
				_23b434418_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		else if ((_1dce85869_Arr(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6bcb87e:;
			{
				_23b434418_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		else if ((_1dce8657e_Map(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6bcb175:;
			{
				_23b43468d_rangeHashmapIter(_self_, &(_30733_it));
			}
		}
		else {
			_case_begin_1c6bcb10e:;
			{
				_23b434418_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		_match_end_1c6bcb043:;
	};
}



inline void _23b43567d_cont(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb0d16_ContSt> _32024_c) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c448c2da_write(_self_.get()._field_oc, static__23b453228_iterNext(_32024_c.get()._field_It));
}



inline void _23b435903_label(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb14a9_Label> _32525_l) {
	_1c448c2da_write(_self_.get()._field_oc, static__23b4534c0_label(&(_32525_l.get()._field_Ident)));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _23b435b78_gotoSt(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb1795_GotoSt> _33026_gt) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c448c2da_write(_self_.get()._field_oc, static__23b4534c0_label(&(_33026_gt.get()._field_Ident)));
}



inline void _23b435ded_postfix(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb1b4c_Postfix> _33531_p) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33531_p.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1c448c560_writeR(_self_.get()._field_oc, &(_33531_p.get()._field_Op));
}



inline void _23b436173_assign(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb20c0_Assign> _34230_a) {
	_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34230_a.get()._field_L.get()._field_Model);
	_1c448c560_writeR(_self_.get()._field_oc, &(_34230_a.get()._field_Op.get()._field_Kind));
	_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34230_a.get()._field_R.get()._field_Model);
}



inline void _23b4363e8_mapLookupAssign(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb2477_MultiAssign>* _34840_a) {
	jule::Ptr<_1dcd65eb9_IndexingExprModel> _34917_iem = (*(_34840_a)).get()._field_R.cast_ptr<_1dcd65eb9_IndexingExprModel>(&__jule_any_type46);;
	_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34917_iem.get()._field_Expr.get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34917_iem.get()._field_Index.get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34840_a)).get()._field_L[0LL] != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34840_a)).get()._field_L[0LL].get()._field_Model);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34840_a)).get()._field_L[1LL] != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34840_a)).get()._field_L[1LL].get()._field_Model);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b43666d_multiAssignTup(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb2477_MultiAssign>* _37139_a) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1dcd693b8_TupleExprModel> _37517_tup = (*(_37139_a)).get()._field_R.cast_ptr<_1dcd693b8_TupleExprModel>(&__jule_any_type87);;
	{
		auto expr = &(_37517_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6bd9eec:;
		if (it != expr_end) {
			jule::I64 _37714_i = it - expr->begin();
			jule::Ptr<_1dce54cbc_Data> _37721_r = *it;
			{
				_1c448cae3_indent(_self_.get()._field_oc);
				jule::Ptr<_1dce54cbc_Data> _37921_l = (*(_37139_a)).get()._field_L[_37714_i];;
				if ((_37921_l != nullptr)) {
					{
						auto &_match_expr{ _37921_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1c6bdc61a:;
							{
								jule::Ptr<_1dce05cb2_Var> _38329_v = _37921_l.get()._field_Model.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
								if ((_38329_v.get()._field_Reference && (!(_1dce06136_IsInitialized(_38329_v.ptr()))))) {
									_1c448c2da_write(_self_.get()._field_oc, static__23b452942_var(_38329_v));
									_1c448c2da_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37721_r.get()._field_Model);
									_1c448c2da_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_37139_a)).get()._field_L[_37714_i]=nullptr;
									goto _iter_next_1c6bd9eec;
								};
							}
						}
						_match_end_1c6bdc461:;
					};
					_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37921_l.get()._field_Kind));
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1c448c2da_write(_self_.get()._field_oc, static__23b450e4b_toOut(&(_23b43301b_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37714_i))));
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37721_r.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1c6bd9eec:;
			++it;
			_37714_i++;
			goto _iter_begin_1c6bd9eec;
		}
		_iter_end_1c6bd9eec:;
	};
	{
		auto expr = &((*(_37139_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6be1b2a:;
		if (it != expr_end) {
			jule::I64 _40414_i = it - expr->begin();
			jule::Ptr<_1dce54cbc_Data> _40421_l = *it;
			{
				if ((_40421_l == nullptr)) {
					goto _iter_next_1c6be1b2a;
				};
				_1c448cae3_indent(_self_.get()._field_oc);
				_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40421_l.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1c448c2da_write(_self_.get()._field_oc, static__23b450e4b_toOut(&(_23b43301b_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40414_i))));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1c6be1b2a:;
			++it;
			_40414_i++;
			goto _iter_begin_1c6be1b2a;
		}
		_iter_end_1c6be1b2a:;
	};
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _23b4368e3_multiAssignFn(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb2477_MultiAssign>* _42038_a) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	jule::Ptr<_1dcd6568e_FnCallExprModel> _42517_f = (*(_42038_a)).get()._field_R.cast_ptr<_1dcd6568e_FnCallExprModel>(&__jule_any_type35);;
	_1c44a5d1a_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42517_f.get()._field_Func.get()._field_Result));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_42038_a)).get()._field_R);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_42038_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6be7405:;
		if (it != expr_end) {
			jule::I64 _43114_i = it - expr->begin();
			jule::Ptr<_1dce54cbc_Data> _43121_l = *it;
			{
				if ((_43121_l != nullptr)) {
					_1c448cae3_indent(_self_.get()._field_oc);
					_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _43121_l.get()._field_Model);
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(_43114_i));
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1c6be7405:;
			++it;
			_43114_i++;
			goto _iter_begin_1c6be7405;
		}
		_iter_end_1c6be7405:;
	};
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _23b436b68_multiAssign(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb2477_MultiAssign> _44635_a) {
	{
		auto &_match_expr{ _44635_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c6bea6b1:;
			{
				_23b4363e8_mapLookupAssign(_self_, &(_44635_a));
				return;;
			}
		}
		_match_end_1c6bea4a2:;
	};
	{
		auto &_match_expr{ _44635_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c6bea3d6:;
			{
				_23b43666d_multiAssignTup(_self_, &(_44635_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c6beaa9b:;
			{
				_23b4368e3_multiAssignFn(_self_, &(_44635_a));
			}
		}
		else {
			_case_begin_1c6beb10c:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:460:13"));;
			}
		}
		_match_end_1c6beb0a7:;
	};
}



inline jule::Fn<void(void)> _23b436e76_matchExpr(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb2a82_Match> _46433_m) {
	if ((!(_1dce5563b_IsConst(_46433_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_24a2376b3_IsBool(_46433_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_24a23531a_ReadBool(_46433_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46433_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _23b437295_case(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb2a82_Match> _47428_m, jule::Ptr<_1dcdb35cc_Case> _47443_c) {
	if (((_47443_c.get()._field_Exprs.len() != 0LL) && (!(_47428_m.get()._field_Comptime)))) {
		if (((_47428_m.get()._field_Cases.len() > 0LL) && (_47428_m.get()._field_Cases[0LL] == _47443_c))) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47443_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6c012bb:;
			if (it != expr_end) {
				jule::I64 _48118_i = it - expr->begin();
				jule::Ptr<_1dce54cbc_Data> _48125_expr = *it;
				{
					{
						
						if ((!(_47428_m.get()._field_TypeMatch))) {
							_case_begin_1c6c07118:;
							{
								jule::Fn<void(void)> _48425_caseExpr = _23b436e76_matchExpr(_self_, _47428_m);;
								if (_1dce55949_GoodOperand(_47428_m.get()._field_Expr.ptr(), &(_48125_expr))) {
									if ((_48425_caseExpr != nullptr)) {
										_48425_caseExpr();
										_1c448c2da_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _48125_expr.get()._field_Model);
								} else {
									_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _48125_expr.get()._field_Model);
									if ((_48425_caseExpr != nullptr)) {
										_1c448c2da_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48425_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1c6c0229a:;
							{
								_1c448c2da_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1dce82437_TypeKind> _50029_tk = _48125_expr.get()._field_Model.cast_ptr<_1dce82437_TypeKind>(&__jule_any_type89);;
								if ((_1dce8631a_Trait(_47428_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1c448c2da_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_23b43c575_boolean(_self_.get()._field_oc.get()._field_ec, (_1dce84db8_Sptr(_48125_expr.get()._field_Kind.ptr()) != nullptr));
									_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(static_cast<jule::I64>(_1c448de68_findTypeOffset(_self_.get()._field_oc.ptr(), _1dce8631a_Trait(_47428_m.get()._field_Expr.get()._field_Kind.ptr()), _48125_expr.get()._field_Kind))));
									_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _50829_j = _1c448d20e_pushAnyType(_self_.get()._field_oc, _50029_tk);;
									_1c448c2da_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(_50829_j));
								};
							}
						}
						_match_end_1c6c021ce:;
					};
					if (((_47443_c.get()._field_Exprs.len() - _48118_i) > 1LL)) {
						_1c448c2da_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1c6c012bb:;
				++it;
				_48118_i++;
				goto _iter_begin_1c6c012bb;
			}
			_iter_end_1c6c012bb:;
		};
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47428_m.get()._field_Default == _47443_c) && (_47428_m.get()._field_Cases.len() != 0LL))) {
		_1c448cae3_indent(_self_.get()._field_oc);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, static__23b453a0e_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47443_c))));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47443_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1c448cae3_indent(_self_.get()._field_oc);
		_23b438c7a_scope(_self_, _47443_c.get()._field_Scope);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _23b43751a_matchSt(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb2a82_Match> _54231_m) {
	if (((_54231_m.get()._field_Cases.len() == 0LL) && (_54231_m.get()._field_Default == nullptr))) {
		return;;
	};
	if ((_54231_m.get()._field_Comptime && ((_54231_m.get()._field_Default == nullptr) || (_54231_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	if (((!(_54231_m.get()._field_Comptime)) && (!(_1dce5563b_IsConst(_54231_m.get()._field_Expr.ptr()))))) {
		if ((_1de44ea9b_Copy && _23b439396_isCopyOptimizable(&(_54231_m.get()._field_Expr)))) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54231_m.get()._field_Expr.get()._field_Model);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1c448cae3_indent(_self_.get()._field_oc);
	};
	if ((_54231_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54231_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6c13aa3:;
			if (it != expr_end) {
				jule::Ptr<_1dcdb35cc_Case> _57025_c = *it;
				{
					if ((_57025_c == nullptr)) {
						goto _iter_next_1c6c13aa3;
					};
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1c448cae3_indent(_self_.get()._field_oc);
					_23b437295_case(_self_, _54231_m, _57025_c);
				}
				_iter_next_1c6c13aa3:;
				++it;
				goto _iter_begin_1c6c13aa3;
			}
			_iter_end_1c6c13aa3:;
		};
	};
	if ((_54231_m.get()._field_Default != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_23b437295_case(_self_, _54231_m, _54231_m.get()._field_Default);
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, static__23b453767_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54231_m))));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _23b437790_fallSt(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb3ba4_FallSt> _59726_f) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c448c2da_write(_self_.get()._field_oc, static__23b453a0e_caseBegin(_59726_f.get()._field_DestCase));
}



inline void _23b437a15_breakSt(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb11bd_BreakSt> _60227_b) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60227_b.get()._field_It != 0LLU)) {
		_1c448c2da_write(_self_.get()._field_oc, static__23b452e81_iterEnd(_60227_b.get()._field_It));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, static__23b453767_matchEnd(_60227_b.get()._field_Mtch));
	};
}



inline void _23b437c8a_setResult(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb4006_RetSt> _61133_r) {
	if ((_61133_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61133_r.get()._field_Expr);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1c448cae3_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1dce54cbc_Data>> _61917_datas = _61133_r.get()._field_Expr.cast_ptr<_1dcd693b8_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
	{
		auto expr = &(_61917_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6c1caac:;
		if (it != expr_end) {
			jule::I64 _62013_i = it - expr->begin();
			jule::Ptr<_1dce54cbc_Data> _62016_data = *it;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(_62013_i));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62016_data.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1c448cae3_indent(_self_.get()._field_oc);
			}
			_iter_next_1c6c1caac:;
			++it;
			_62013_i++;
			goto _iter_begin_1c6c1caac;
		}
		_iter_end_1c6c1caac:;
	};
}



inline void _23b438010_retSt(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdb4006_RetSt> _63029_r) {
	if (_1dcd71e09_IsVoid(_63029_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_63029_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _63029_r.get()._field_Func.get()._field_Result));
			_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _63029_r.get()._field_Expr);
			_1c448c2da_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _63029_r.get()._field_Expr);
			_1c448c2da_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_63029_r.get()._field_Expr != nullptr)) {
		_23b437c8a_setResult(_self_, _63029_r);
	};
	if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1c44a5d1a_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_63029_r.get()._field_Func.get()._field_Result));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _23b438285_var(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dce05cb2_Var> _66627_v) {
	if ((!(_66627_v.get()._field_Constant))) {
		_1c4494a84_var(_self_.get()._field_oc, _66627_v);
	};
}



inline void _23b43850a_strAppend(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dd056a6c_StrAppendExprModel> _67233_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67233_m.get()._field_Str);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67233_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c6c279c9:;
			{
				jule::Ptr<_24a233549_Const> _67817_c = _67233_m.get()._field_Expr.cast_ptr<_24a233549_Const>(&__jule_any_type19);;
				jule::Slice<jule::U8> _67917_bytes = static_cast<jule::Slice<jule::U8>>(_24a23557e_ReadStr(_67817_c.ptr()));;
				_1c448c2da_write(_self_.get()._field_oc, _23b449e01_cstrLit(_67917_bytes));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1c448c2da_write(_self_.get()._field_oc, _24a2238d0_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67917_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_1c6c289ca:;
			{
				_23b43eb82_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67233_m.get()._field_Expr);
			}
		}
		_match_end_1c6c28975:;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b438780_st(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Any _69026_st) {
	if ((_69026_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69026_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c6c2bec8:;
			{
				_23b438c7a_scope(_self_, _69026_st.cast_ptr<_1dcdadc6a_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c6c2bd74:;
			{
				_23b438285_var(_self_, _69026_st.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c6c2c737:;
			{
				_23b448e33_model(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1dce54cbc_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c6c2c79d:;
			{
				_23b434b88_conditional(_self_, _69026_st.cast_ptr<_1dcdae7c6_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c6c2c814:;
			{
				_23b434e0d_infIter(_self_, _69026_st.cast_ptr<_1dcdaeab2_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c6c2c87a:;
			{
				_23b435183_whileIter(_self_, _69026_st.cast_ptr<_1dcdb0035_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c6c2c8e1:;
			{
				_23b435408_rangeIter(_self_, _69026_st.cast_ptr<_1dcdb091a_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c6c2c957:;
			{
				_23b43567d_cont(_self_, _69026_st.cast_ptr<_1dcdb0d16_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c6c2c9bd:;
			{
				_23b435903_label(_self_, _69026_st.cast_ptr<_1dcdb14a9_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c6c2ca34:;
			{
				_23b435b78_gotoSt(_self_, _69026_st.cast_ptr<_1dcdb1795_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c6c2caab:;
			{
				_23b435ded_postfix(_self_, _69026_st.cast_ptr<_1dcdb1b4c_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c6c2cb33:;
			{
				_23b436173_assign(_self_, _69026_st.cast_ptr<_1dcdb20c0_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c6c2cbaa:;
			{
				_23b436b68_multiAssign(_self_, _69026_st.cast_ptr<_1dcdb2477_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c6c2cc32:;
			{
				_23b43751a_matchSt(_self_, _69026_st.cast_ptr<_1dcdb2a82_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1c6c2cca9:;
			{
				_23b437790_fallSt(_self_, _69026_st.cast_ptr<_1dcdb3ba4_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1c6c2cd31:;
			{
				_23b437a15_breakSt(_self_, _69026_st.cast_ptr<_1dcdb11bd_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1c6c2cda8:;
			{
				_23b438010_retSt(_self_, _69026_st.cast_ptr<_1dcdb4006_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1c6c2ce30:;
			{
				_23b446617_pushToSlice(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1dd057573_PushToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1c6c2cea7:;
			{
				_23b44688c_appendToSlice(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1dd05792a_AppendToSliceExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1c6c2d02e:;
			{
				_23b44840a_mutSlicing(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1dd057e69_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1c6c2d0a6:;
			{
				_23b448680_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1dd058453_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1c6c2d12d:;
			{
				_23b43850a_strAppend(_self_, _69026_st.cast_ptr<_1dd056a6c_StrAppendExprModel>(&__jule_any_type125));
			}
		}
		else {
			_case_begin_1c6c2be62:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1c6c2bb10:;
	};
}



inline void _23b438a05_scopeStmts(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdadc6a_Scope>* _74435_s) {
	{
		auto expr = &((*(_74435_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7456b86:;
		if (it != expr_end) {
			jule::Any _74521_st = *it;
			{
				_1c448cae3_indent(_self_.get()._field_oc);
				_23b438780_st(_self_, _74521_st);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1c7456b86:;
			++it;
			goto _iter_begin_1c7456b86;
		}
		_iter_end_1c7456b86:;
	};
}



inline void _23b438c7a_scope(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcdadc6a_Scope> _75329_s) {
	_1c448c73b_addIndent(_self_.get()._field_oc);
	if (_75329_s.get()._field_Deferred) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_23b438a05_scopeStmts(_self_, &(_75329_s));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_75329_s.get()._field_Deferred) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _23b439000_funcScope(jule::Ptr<_23b4336d1_scopeCoder> _self_, jule::Ptr<_1dcd74648_FnIns> _76933_f) {
	if ((_76933_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	if ((!(_1dcd71e09_IsVoid(_76933_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1dce8e950_Tuple> _77621_tup = _1dce867e3_Tup(_76933_f.get()._field_Result.ptr());;
		if ((_77621_tup != nullptr)) {
			_1c448cae3_indent(_self_.get()._field_oc);
			_1c44a56cc_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77621_tup);
			_1c448c2da_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77621_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c745c42d:;
				if (it != expr_end) {
					jule::I64 _78122_i = it - expr->begin();
					jule::Ptr<_1dce82437_TypeKind> _78129_t = *it;
					{
						if (_1c44a814c_shouldInitialized(&(_78129_t))) {
							_1c448cae3_indent(_self_.get()._field_oc);
							_1c448c2da_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(_78122_i));
							_1c448c2da_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_23b4491a8_initExpr(_self_.get()._field_oc.get()._field_ec, _78129_t);
							_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1c745c42d:;
					++it;
					_78122_i++;
					goto _iter_begin_1c745c42d;
				}
				_iter_end_1c745c42d:;
			};
		} else if ((_76933_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1c448cae3_indent(_self_.get()._field_oc);
			_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76933_f.get()._field_Result));
			_1c448c2da_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1c44a814c_shouldInitialized(&(_76933_f.get()._field_Result))) {
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_23b4491a8_initExpr(_self_.get()._field_oc.get()._field_ec, _76933_f.get()._field_Result);
			};
			_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_23b438a05_scopeStmts(_self_, &(_76933_f.get()._field_Scope));
	if ((_76933_f.get()._field_Decl.get()._field_Exceptional && _1dcd71e09_IsVoid(_76933_f.get()._field_Decl.ptr()))) {
		_1c448cae3_indent(_self_.get()._field_oc);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _23b4336d1_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_23b43bbc3_exprCoder> static__23b43c07a_new(jule::Ptr<_1c448bb8b_ObjectCoder>* _11224_oc) {
	return jule::new_ptr<_23b43bbc3_exprCoder>(_23b43bbc3_exprCoder{._field_oc=(*(_11224_oc))});;
}



inline void _23b43c300_string(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_24a233549_Const>* _11827_c) {
	jule::Str _11913_content = _24a23557e_ReadStr((*(_11827_c)).ptr());;
	if ((_11913_content.len() == 0LL)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12413_bytes = static_cast<jule::Slice<jule::U8>>(_11913_content);;
	jule::Str _12513_len = _24a2238d0_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12413_bytes.len())), 10LL);;
	jule::Str _12613_lit = _23b449e01_cstrLit(_12413_bytes);;
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c448c560_writeR(_self_.get()._field_oc, &(_12613_lit));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1c448c560_writeR(_self_.get()._field_oc, &(_12513_len));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b43c575_boolean(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Bool _13527_b) {
	if (_13527_b) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _23b43c751_nilLit(jule::Ptr<_23b43bbc3_exprCoder> _self_) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _23b43ca5e_ftoaSpecialCases(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::F64* _14737_x) {
	{
		
		if (_24a1c9787_IsNaN((*(_14737_x)))) {
			_case_begin_1c747c7d3:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_24a1c9d3c_IsInf((*(_14737_x)), 1LL)) {
			_case_begin_1c747c85a:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_24a1c9d3c_IsInf((*(_14737_x)), -1LL)) {
			_case_begin_1c747c8d2:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1c747c76c:;
			{
				return false;;
			}
		}
		_match_end_1c747c6a1:;
	};
	return true;;
}



inline void _23b43ccd4_float32(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_24a233549_Const>* _16128_c) {
	jule::F64 _16213_x = _24a236030_AsF64((*(_16128_c)).ptr());;
	if (_23b43ca5e_ftoaSpecialCases(_self_, &(_16213_x))) {
		return;;
	};
	{
		
		if ((_16213_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1c748051c:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_16213_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1c7480253:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1c74801dc:;
			{
				_1c448c2da_write(_self_.get()._field_oc, _23b44a20e_ftoa(_16213_x, 32LL));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1c74800aa:;
	};
}



inline void _23b43d059_float64(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_24a233549_Const>* _18028_c) {
	jule::F64 _18113_x = _24a236030_AsF64((*(_18028_c)).ptr());;
	if (_23b43ca5e_ftoaSpecialCases(_self_, &(_18113_x))) {
		return;;
	};
	{
		
		if ((_18113_x == jule::MAX_F64)) {
			_case_begin_1c74832cd:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_18113_x == jule::MIN_F64)) {
			_case_begin_1c7483630:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1c7482b6d:;
			{
				_1c448c2da_write(_self_.get()._field_oc, _23b44a20e_ftoa(_18113_x, 64LL));
			}
		}
		_match_end_1c7482a3b:;
	};
}



inline void _23b43d2ce_constant(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_24a233549_Const> _19832_c) {
	{
		
		if (_24a237927_IsStr(_19832_c.ptr())) {
			_case_begin_1c748480c:;
			{
				_23b43c300_string(_self_, &(_19832_c));
			}
		}
		else if (_24a2376b3_IsBool(_19832_c.ptr())) {
			_case_begin_1c7484873:;
			{
				_23b43c575_boolean(_self_, _24a23531a_ReadBool(_19832_c.ptr()));
			}
		}
		else if (_24a237b8b_IsF64(_19832_c.ptr())) {
			_case_begin_1c74848d9:;
			{
				{
					
					if (_19832_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_1c7486930:;
						{
							_23b43ccd4_float32(_self_, &(_19832_c));
						}
					}
					else {
						_case_begin_1c7486589:;
						{
							_23b43d059_float64(_self_, &(_19832_c));
						}
					}
					_match_end_1c74864bd:;
				};
			}
		}
		else if (_24a2371da_IsI64(_19832_c.ptr())) {
			_case_begin_1c7484950:;
			{
				_1c448c2da_write(_self_.get()._field_oc, _23b44a4a6_itoa(static_cast<jule::I64>(_24a234d42_ReadI64(_19832_c.ptr()))));
			}
		}
		else if (_24a23744e_IsU64(_19832_c.ptr())) {
			_case_begin_1c74851d1:;
			{
				_1c448c2da_write(_self_.get()._field_oc, _23b44a74d_utoa(static_cast<jule::U64>(_24a2350a6_ReadU64(_19832_c.ptr()))));
			}
		}
		else if (_24a237e00_IsNil(_19832_c.ptr())) {
			_case_begin_1c7485247:;
			{
				_23b43c751_nilLit(_self_);
			}
		}
		else {
			_case_begin_1c7484796:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1c74846ca:;
	};
}



inline void _23b43d697_divByZeroBinary(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_23ae26b42_Token>* _22236_op, jule::Ptr<_1dcd6335c_OperandExprModel>* _22253_l, jule::Ptr<_1dcd6335c_OperandExprModel>* _22280_r) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_22236_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1c74897ce:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1c7489856:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1c7489768:;
	};
	if ((!(_2388e9cbb_Production))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c448e50c_locInfo(_self_.get()._field_oc, _22236_op);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_23b43eb82_possibleRefExpr(_self_, (*(_22253_l)).get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(",", 1));
	_23b43eb82_possibleRefExpr(_self_, (*(_22280_r)).get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b43d91c_unsafeBinary(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd63824_BinopExprModel> _24436_m) {
	if ((_24436_m.get()._field_Op.get()._field_Kind.equal("==", 2) || _24436_m.get()._field_Op.get()._field_Kind.equal("!=", 2))) {
		if (_23b44b397_isAny(&(_24436_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1dce8348d_IsNil(_24436_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_23b44b397_isAny(&(_24436_m.get()._field_Right.get()._field_Kind)))))) {
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
				if (_24436_m.get()._field_Op.get()._field_Kind.equal("!=", 2)) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _25425_i = _1c448d20e_pushAnyType(_self_.get()._field_oc, _24436_m.get()._field_Right.get()._field_Kind);;
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(_25425_i));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_23b43eb82_possibleRefExpr(_self_, _24436_m.get()._field_Left.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_23b43eb82_possibleRefExpr(_self_, _24436_m.get()._field_Right.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	_23b43eb82_possibleRefExpr(_self_, _24436_m.get()._field_Left.get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1c448c560_writeR(_self_.get()._field_oc, &(_24436_m.get()._field_Op.get()._field_Kind));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_23b43eb82_possibleRefExpr(_self_, _24436_m.get()._field_Right.get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b43db92_binary(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd63824_BinopExprModel> _27530_m) {
	{
		auto &_match_expr{ _27530_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1c7494c90:;
			{
				if ((_1dce860a6_Struct(_27530_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_23b43d697_divByZeroBinary(_self_, &(_27530_m.get()._field_Op), &(_27530_m.get()._field_Left), &(_27530_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1c7494c18:;
	};
	_23b43d91c_unsafeBinary(_self_, _27530_m);
}



inline void _23b43de17_var(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dce05cb2_Var> _28727_m) {
	if (_28727_m.get()._field_Binded) {
		jule::Ptr<_1dcd09369_Directive> _28917_d = _1c44a7a20_findDirective(&(_28727_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28917_d != nullptr)) {
			_1c448c2da_write(_self_.get()._field_oc, _1c4498813_concatAllParts(_28917_d.get()._field_Args));
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1c448c2da_write(_self_.get()._field_oc, static__23b452942_var(_28727_m));
}



inline void _23b43e18c_structureIns(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd5e457_StructIns> _29836_m) {
	_1c448c2da_write(_self_.get()._field_oc, _1c449e891_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29836_m));
}



inline void _23b43e412_unary(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd63bcb_UnaryExprModel> _30229_m) {
	{
		auto &_match_expr{ _30229_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1c74994c0:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_23b43eb82_possibleRefExpr(_self_, _30229_m.get()._field_Expr.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1c7499547:;
			{
				if ((_2388e9cbb_Production || (_1dce84db8_Sptr(_30229_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1c7499437;
				};
				_23b43eb82_possibleRefExpr(_self_, _30229_m.get()._field_Expr.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1c448e50c_locInfo(_self_.get()._field_oc, &(_30229_m.get()._field_Op));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1c7499437:;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c448c560_writeR(_self_.get()._field_oc, &(_30229_m.get()._field_Op.get()._field_Kind));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	_23b43eb82_possibleRefExpr(_self_, _30229_m.get()._field_Expr.get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _23b43e687_structureLit(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6447e_StructLitExprModel> _32636_m) {
	if (_32636_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1c448c2da_write(_self_.get()._field_oc, static__23b452403_structureIns(&(_32636_m.get()._field_Strct)));
	if (_32636_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32636_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32636_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c74a0a8c:;
			if (it != expr_end) {
				jule::I64 _33917_i = it - expr->begin();
				jule::Ptr<_1dcd5d962_FieldIns> _33920_f = *it;
				{
					{
						auto expr = &(_32636_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c74a16c5:;
						if (it != expr_end) {
							jule::Ptr<_1dcd640c7_StructArgExprModel> _34029_arg = *it;
							{
								if ((_34029_arg.get()._field_Field == _33920_f)) {
									_1c448c2da_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1c448c2da_write(_self_.get()._field_oc, static__23b45269a_field(&(_34029_arg.get()._field_Field.get()._field_Decl)));
									_1c448c2da_write(_self_.get()._field_oc, jule::Str("=", 1));
									_23b43eb82_possibleRefExpr(_self_, _34029_arg.get()._field_Expr);
									if (((_32636_m.get()._field_Strct.get()._field_Fields.len() - _33917_i) > 1LL)) {
										_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1c74a0a8c;
								};
							}
							_iter_next_1c74a16c5:;
							++it;
							goto _iter_begin_1c74a16c5;
						}
						_iter_end_1c74a16c5:;
					};
				}
				_iter_next_1c74a0a8c:;
				++it;
				_33917_i++;
				goto _iter_begin_1c74a0a8c;
			}
			_iter_end_1c74a0a8c:;
		};
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _23b43e90c_allocStructure(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6478c_AllocStructLitExprModel> _35738_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1c448c2da_write(_self_.get()._field_oc, static__23b452403_structureIns(&(_35738_m.get()._field_Lit.get()._field_Strct)));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_23b43e687_structureLit(_self_, _35738_m.get()._field_Lit);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b43eb82_possibleRefExpr(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Any _36535_expr) {
	{
		auto &_match_expr{ _36535_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c74a66ca:;
			{
				jule::Ptr<_1dce05cb2_Var> _36817_v = _36535_expr.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
				if (_36817_v.get()._field_Reference) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_23b448e33_model(_self_, _36535_expr);
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1c74a65cb:;
	};
	_23b448e33_model(_self_, _36535_expr);
}



inline void _23b44004a_castTraitFromTrait(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd64cdc_CastingExprModel>* _37943_m, jule::Ptr<_1dcd83bb8_Trait> _37969_t1, jule::Ptr<_1dcd83bb8_Trait> _37985_t2) {
	_23b43eb82_possibleRefExpr(_self_, (*(_37943_m)).get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_1c448c2da_write(_self_.get()._field_oc, static__23b451b1c_traitDecl(_37969_t1));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1c448e287_pushAndWriteMaskMapper(_self_.get()._field_oc, _37969_t1, _37985_t2);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b4402c0_casting(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd64cdc_CastingExprModel> _39431_m) {
	{
		
		if (_23b44b397_isAny(&(_39431_m.get()._field_Kind))) {
			_case_begin_1c74aa745:;
			{
				if (_1dce8348d_IsNil(_39431_m.get()._field_ExprKind.ptr())) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1dce85605_TypeEnum(_39431_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_23b43eb82_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
					return;;
				};
				jule::I64 _40517_i = _1c448d20e_pushAnyType(_self_.get()._field_oc, _39431_m.get()._field_ExprKind);;
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _39431_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1c74ac2c4:;
						{
							jule::Ptr<_1dce89b8c_Prim> _40921_prim = _1dce84b54_Prim(_39431_m.get()._field_ExprKind.ptr());;
							if (((_40921_prim != nullptr) && _24a232a43_IsInt(_40921_prim.get()._field_Kind))) {
								_1c448c2da_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1c448c2da_write(_self_.get()._field_oc, _1c449babe_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40921_prim));
								_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_23b43eb82_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
								_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1c74ace73;
							};
							goto _case_begin_1c74ad1b5;
						}
					}
					else {
						_case_begin_1c74ad1b5:;
						{
							_23b43eb82_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
						}
					}
					_match_end_1c74ace73:;
				};
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(_40517_i));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_23b44b397_isAny(&(_39431_m.get()._field_ExprKind))) {
			_case_begin_1c74aa7bc:;
			{
				_23b43eb82_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1dce84db8_Sptr(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1dce84db8_Sptr(_39431_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				};
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_2388e9cbb_Production))) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1c448e50c_locInfo(_self_.get()._field_oc, &(_39431_m.get()._field_Token));
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(static_cast<jule::I64>(_1c448d20e_pushAnyType(_self_.get()._field_oc, _39431_m.get()._field_Kind))));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1dce8512c_Ptr(_39431_m.get()._field_ExprKind.ptr()) != nullptr) || (_1dce8512c_Ptr(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c74aa844:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_23b43eb82_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_1dce8631a_Trait(_39431_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1c74aa8bb:;
			{
				if ((_1dce8631a_Trait(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
					_23b44004a_castTraitFromTrait(_self_, &(_39431_m), _1dce8631a_Trait(_39431_m.get()._field_Kind.ptr()), _1dce8631a_Trait(_39431_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_23b43eb82_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1dce84db8_Sptr(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1dce84db8_Sptr(_39431_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				};
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_2388e9cbb_Production))) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1c448e50c_locInfo(_self_.get()._field_oc, &(_39431_m.get()._field_Token));
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(static_cast<jule::I64>(_1c448de68_findTypeOffset(_self_.get()._field_oc.ptr(), _1dce8631a_Trait(_39431_m.get()._field_ExprKind.ptr()), _39431_m.get()._field_Kind))));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1dce8631a_Trait(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c74aa943:;
			{
				_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
				_23b43eb82_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(static_cast<jule::I64>(_1c448de68_findTypeOffset(_self_.get()._field_oc.ptr(), _1dce8631a_Trait(_39431_m.get()._field_Kind.ptr()), _39431_m.get()._field_ExprKind))));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_1c74aa602:;
	};
	jule::Ptr<_1dce89b8c_Prim> _48613_prim = _1dce84b54_Prim(_39431_m.get()._field_Kind.ptr());;
	jule::Ptr<_1dce89b8c_Prim> _48713_eprim = _1dce84b54_Prim(_39431_m.get()._field_ExprKind.ptr());;
	if ((((_48713_eprim != nullptr) && (_48613_prim != nullptr)) && _1dce8cd8d_IsStr(_48613_prim.ptr()))) {
		if (_1dce8b463_IsU8(_48713_eprim.ptr())) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_23b43eb82_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
	_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_23b43eb82_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b440545_models(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Slice<jule::Any> _50530_args) {
	if ((_50530_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_50530_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d445610c:;
		if (it != expr_end) {
			jule::I64 _50914_i = it - expr->begin();
			jule::Any _50921_a = *it;
			{
				_23b43eb82_possibleRefExpr(_self_, _50921_a);
				if (((_50530_args.len() - _50914_i) > 1LL)) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1d445610c:;
			++it;
			_50914_i++;
			goto _iter_begin_1d445610c;
		}
		_iter_end_1d445610c:;
	};
}



inline void _23b4407ba_args(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6568e_FnCallExprModel>* _51729_m) {
	jule::I64 _51817_j = 0LL;;
	if (((((*(_51729_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_51729_m)).get()._field_Func.get()._field_Decl.get()._field_Statically))) || (((*(_51729_m)).get()._field_Func.get()._field_Params.len() > 0LL) && _1dcd70743_IsSelf((*(_51729_m)).get()._field_Func.get()._field_Params[0LL].get()._field_Decl.ptr())))) {
		(_51817_j)++;
	};
	{
		auto expr = &((*(_51729_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d44597b4:;
		if (it != expr_end) {
			jule::I64 _52313_i = it - expr->begin();
			jule::Any _52316_arg = *it;
			{
				jule::Ptr<_1dcd73779_ParamIns> _52417_p = (*(_51729_m)).get()._field_Func.get()._field_Params[_51817_j];;
				if (((_52417_p.get()._field_Decl != nullptr) && _52417_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _52316_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1d445ae8b:;
							{
								jule::Ptr<_1dce05cb2_Var> _52825_v = _52316_arg.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
								if (_52825_v.get()._field_Reference) {
									_23b448e33_model(_self_, _52316_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_1d445ad9d:;
					};
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_23b448e33_model(_self_, _52316_arg);
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_23b43eb82_possibleRefExpr(_self_, _52316_arg);
				_julec_label_end:;
				if ((((*(_51729_m)).get()._field_Args.len() - _52313_i) > 1LL)) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_51817_j)++;
			}
			_iter_next_1d44597b4:;
			++it;
			_52313_i++;
			goto _iter_begin_1d44597b4;
		}
		_iter_end_1d44597b4:;
	};
}



inline void _23b440a40_modelForCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Any _54836_expr) {
	{
		auto &_match_expr{ _54836_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1d445ec4d:;
			{
				_23b443db7_funcIns(_self_, _54836_expr.cast_ptr<_1dcd74648_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1d445ecc5:;
			{
				jule::Ptr<_1dcd68010_StructSubIdentExprModel> _55421_ssie = _54836_expr.cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_55421_ssie.get()._field_Method != nullptr)) {
					_23b443db7_funcIns(_self_, _55421_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1d445eb3d:;
	};
	_23b43eb82_possibleRefExpr(_self_, _54836_expr);
}



inline void _23b440cb5_pushCallInf(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6568e_FnCallExprModel>* _56332_m) {
	if ((_2388e9cbb_Production || ((!((*(_56332_m)).get()._field_Func.get()._field_Anon)) && (!(_23b44adbe_isBuiltinCallHasDebuginf(_56332_m)))))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_56332_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_56332_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1d4462c0c:;
				{
					if ((*(_56332_m)).get()._field_Expr.cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_Binded) {
						_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1d4462dd8;
				}
			}
			else {
				_case_begin_1d4462dd8:;
				{
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1d4462ca6:;
		};
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1c448e50c_locInfo(_self_.get()._field_oc, &((*(_56332_m)).get()._field_Token));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_56332_m)).get()._field_Args.len() != 0LL)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _23b4410c3_isWrapped(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6568e_FnCallExprModel>* _58834_m) {
	if ((((!(_1dcd759ce_IsBuiltin((*(_58834_m)).get()._field_Func.ptr()))) && ((*(_58834_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1dcd70743_IsSelf((*(_58834_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_58834_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1d44663b4:;
				{
					jule::Ptr<_1dcd68010_StructSubIdentExprModel> _59225_ssie = (*(_58834_m)).get()._field_Expr.cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1dcd709a7_IsRef((*(_58834_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1dce84db8_Sptr(_59225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1d44678b0:;
							{
								goto _match_end_1d4467184;
							}
						}
						else {
							_case_begin_1d44671ea:;
							{
								if ((_1dce860a6_Struct(_59225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_59225_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1c448c2da_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_23b448e33_model(_self_, _59225_ssie.get()._field_Expr.get()._field_Model);
										_1c448c2da_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1d4467184:;
					};
				}
			}
			_match_end_1d44661a5:;
		};
	};
	return false;;
}



inline void _23b441348_pureFuncCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6568e_FnCallExprModel>* _61237_m) {
	jule::Bool _61313_wrapped = _23b4410c3_isWrapped(_self_, _61237_m);;
	_23b440a40_modelForCall(_self_, (*(_61237_m)).get()._field_Expr);
	if ((!(_1dcd759ce_IsBuiltin((*(_61237_m)).get()._field_Func.ptr())))) {
		if (((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Binded && ((*(_61237_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1c44a7da5_hasDirective(&((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_61237_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d446c497:;
					if (it != expr_end) {
						jule::I64 _61926_i = it - expr->begin();
						jule::Ptr<_1dce80ba5_InsGeneric> _61933_g = *it;
						{
							_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _61933_g.get()._field_Kind));
							if ((((*(_61237_m)).get()._field_Func.get()._field_Generics.len() - _61926_i) > 1LL)) {
								_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1d446c497:;
						++it;
						_61926_i++;
						goto _iter_begin_1d446c497;
					}
					_iter_end_1d446c497:;
				};
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_23b440cb5_pushCallInf(_self_, _61237_m);
	jule::Bool _63017_locinfo = false;;
	if ((((!(_1dcd759ce_IsBuiltin((*(_61237_m)).get()._field_Func.ptr()))) && ((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1dcd70743_IsSelf((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_61237_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1d4470885:;
				{
					jule::Ptr<_1dcd68010_StructSubIdentExprModel> _63425_ssie = (*(_61237_m)).get()._field_Expr.cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1dcd709a7_IsRef((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1d447438e:;
							{
								_23b43eb82_possibleRefExpr(_self_, _63425_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1dce84db8_Sptr(_63425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1d44717ba:;
							{
								_23b43eb82_possibleRefExpr(_self_, _63425_ssie.get()._field_Expr.get()._field_Model);
								_1c448c2da_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_2388e9cbb_Production))) {
									_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1c448e50c_locInfo(_self_.get()._field_oc, &((*(_61237_m)).get()._field_Token));
									_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1d4471754:;
							{
								if ((_1dce860a6_Struct(_63425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _63425_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1d44711e3:;
											{
												jule::Ptr<_1dce05cb2_Var> _65133_v = _63425_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
												if (_65133_v.get()._field_Reference) {
													goto _match_end_1d44722c1;
												};
												goto _case_begin_1d4472326;
											}
										}
										else {
											_case_begin_1d4472326:;
											{
												_1c448c2da_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1d44722c1:;
									};
								};
								if (_61313_wrapped) {
									_1c448c2da_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_23b448e33_model(_self_, _63425_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1d44716dd:;
					};
					if (((*(_61237_m)).get()._field_Args.len() > 0LL)) {
						_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1d44708eb:;
				{
					_23b43eb82_possibleRefExpr(_self_, (*(_61237_m)).get()._field_Expr.cast_ptr<_1dcd67729_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_2388e9cbb_Production))) {
						_63017_locinfo=true;
					};
					if (((*(_61237_m)).get()._field_Args.len() > 0LL)) {
						_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1d4470676:;
		};
	};
	_23b4407ba_args(_self_, _61237_m);
	if (_63017_locinfo) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1c448e50c_locInfo(_self_.get()._field_oc, &((*(_61237_m)).get()._field_Token));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_61313_wrapped) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _23b4415bd_coFuncCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6568e_FnCallExprModel>* _69335_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	jule::Str _69617_head = jule::Str("std::thread([", 13);;
	if (((*(_69335_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_69617_head).append("_self_", 6);
		if (((*(_69335_m)).get()._field_Args.len() > 0LL)) {
			(_69617_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_69335_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d447d442:;
		if (it != expr_end) {
			jule::I64 _70313_i = it - expr->begin();
			jule::Any _70316_arg = *it;
			{
				if ((_70313_i > 0LL)) {
					(_69617_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _70316_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1d447de9d:;
						{
							jule::Ptr<_1dce05cb2_Var> _70925_v = _70316_arg.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
							_69617_head+=static__23b452942_var(_70925_v);
							goto _iter_next_1d447d442;
						}
					}
					_match_end_1d447e18a:;
				};
				jule::Str _71317_name = (jule::Str("_co_arg_", 8) + _24a223b77_Itoa(_70313_i));;
				_69617_head+=_71317_name;
				_1c448cae3_indent(_self_.get()._field_oc);
				_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_69335_m)).get()._field_Func.get()._field_Params[_70313_i].get()._field_Kind));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_69335_m)).get()._field_Func.get()._field_Params[_70313_i].get()._field_Decl.get()._field_Reference) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1c448c560_writeR(_self_.get()._field_oc, &(_71317_name));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_23b43eb82_possibleRefExpr(_self_, _70316_arg);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _72517_argS = jule::Any(_71317_name, &__jule_any_type5);;
				(*(_69335_m)).get()._field_Args[_70313_i]=(*(((jule::Any*)((&(_72517_argS))))));
			}
			_iter_next_1d447d442:;
			++it;
			_70313_i++;
			goto _iter_begin_1d447d442;
		}
		_iter_end_1d447d442:;
	};
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c560_writeR(_self_.get()._field_oc, &(_69617_head));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_23b441348_pureFuncCall(_self_, _69335_m);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _23b4418dc_writeUseExpr(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd74648_FnIns>* _74337_f, jule::Ptr<_1dce54cbc_Data> _74352_d) {
	if ((_1dce867e3_Tup(_74352_d.get()._field_Kind.ptr()) == nullptr)) {
		_23b43eb82_possibleRefExpr(_self_, _74352_d.get()._field_Model);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1dcd693b8_TupleExprModel> _74917_tup = _74352_d.get()._field_Model.cast_ptr<_1dcd693b8_TupleExprModel>(&__jule_any_type87);;
	_1c44a56cc_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1dce867e3_Tup((*(_74337_f)).get()._field_Result.ptr()));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_74917_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4489382:;
		if (it != expr_end) {
			jule::I64 _75213_i = it - expr->begin();
			jule::Ptr<_1dce54cbc_Data> _75216_data = *it;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(_75213_i));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("=", 1));
				_23b43eb82_possibleRefExpr(_self_, _75216_data.get()._field_Model);
				if (((_74917_tup.get()._field_Datas.len() - _75213_i) > 1LL)) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1d4489382:;
			++it;
			_75213_i++;
			goto _iter_begin_1d4489382;
		}
		_iter_end_1d4489382:;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _23b441b62_funcCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6568e_FnCallExprModel> _76432_m) {
	if (_76432_m.get()._field_IsCo) {
		_23b4415bd_coFuncCall(_self_, &(_76432_m));
		return;;
	};
	if (((_1dcd759ce_IsBuiltin(_76432_m.get()._field_Func.ptr()) || (!(_76432_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_76432_m.get()._field_Except != nullptr) && (_76432_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_23b441348_pureFuncCall(_self_, &(_76432_m));
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_23b441348_pureFuncCall(_self_, &(_76432_m));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c448cae3_indent(_self_.get()._field_oc);
	if ((_76432_m.get()._field_Except != nullptr)) {
		if (((_76432_m.get()._field_Func.get()._field_Result == nullptr) || (!(_76432_m.get()._field_Assigned)))) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_23b438c7a_scope(_self_.get()._field_oc.get()._field_sc, _76432_m.get()._field_Except);
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _79021_forwarded = _23b44ab05_isForwarded(&(_76432_m.get()._field_Except));;
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_79021_forwarded) {
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _79525_stmt = _76432_m.get()._field_Except.get()._field_Stmts[(_76432_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79525_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1d44929a6:;
					{
						_76432_m.get()._field_Except.get()._field_Stmts=_76432_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_76432_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1c448c2da_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1c448c73b_addIndent(_self_.get()._field_oc);
						_23b438a05_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_76432_m.get()._field_Except));
						_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1c448cae3_indent(_self_.get()._field_oc);
						_23b4418dc_writeUseExpr(_self_, &(_76432_m.get()._field_Func), _79525_stmt.cast_ptr<_1dce54cbc_Data>(&__jule_any_type24));
						_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1c448c917_doneIndent(_self_.get()._field_oc);
						_1c448cae3_indent(_self_.get()._field_oc);
						_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1d4493743:;
					{
						_23b438c7a_scope(_self_.get()._field_oc.get()._field_sc, _76432_m.get()._field_Except);
					}
				}
				_match_end_1d44936dd:;
			};
			if (_79021_forwarded) {
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_23b4491a8_initExpr(_self_, _76432_m.get()._field_Func.get()._field_Result);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1c448c2da_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1c448c917_doneIndent(_self_.get()._field_oc);
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1c448e50c_locInfo(_self_.get()._field_oc, &(_76432_m.get()._field_Token));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1dcd71e09_IsVoid(_76432_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1c448cae3_indent(_self_.get()._field_oc);
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1c448c917_doneIndent(_self_.get()._field_oc);
	};
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _23b441dd7_slice(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd65a46_SliceExprModel> _83529_m) {
	if ((_83529_m.get()._field_Elems.len() == 0LL)) {
		_1c448c2da_write(_self_.get()._field_oc, _1c449d53d_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83529_m.get()._field_ElemKind));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, _1c449d53d_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83529_m.get()._field_ElemKind));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_23b440545_models(_self_, _83529_m.get()._field_Elems);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _23b44215c_indexing(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd65eb9_IndexingExprModel> _84732_m) {
	_23b43eb82_possibleRefExpr(_self_, _84732_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_2388e9cbb_Production || (_1dce8512c_Ptr(_84732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1dce8657e_Map(_84732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _23b44b100_isExprComesFromBind(&(_84732_m.get()._field_Expr))) {
			_case_begin_1d449da4a:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("[", 1));
				_23b43eb82_possibleRefExpr(_self_, _84732_m.get()._field_Index.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1d449e177:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1c448e50c_locInfo(_self_.get()._field_oc, &(_84732_m.get()._field_Token));
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_23b43eb82_possibleRefExpr(_self_, _84732_m.get()._field_Index.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1d449e122:;
	};
}



inline void _23b4423d2_unsafeIndexing(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dd0571dd_UnsafeIndexingExprModel> _86738_m) {
	_23b43eb82_possibleRefExpr(_self_, _86738_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_2388e9cbb_Production || (_1dce8512c_Ptr(_86738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1dce8657e_Map(_86738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d44a19c6:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("[", 1));
				_23b43eb82_possibleRefExpr(_self_, _86738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1d44a2ed3:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_23b43eb82_possibleRefExpr(_self_, _86738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1d44a2e6c:;
	};
}



inline void _23b442657_anonFunc(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd66371_AnonFnExprModel> _88432_m) {
	_1c448c2da_write(_self_.get()._field_oc, _1c44a1013_func(_self_.get()._field_oc.get()._field_tc.ptr(), _88432_m.get()._field_Func));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1c44944e0_paramsIns(_self_.get()._field_oc, &(_88432_m.get()._field_Func.get()._field_Params));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1c44a08e7_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_88432_m.get()._field_Func));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_23b439000_funcScope(_self_.get()._field_oc.get()._field_sc, _88432_m.get()._field_Func);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b4428cc_mapExpr(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd66b9b_MapExprModel> _89531_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89531_m.get()._field_KeyKind));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89531_m.get()._field_ValKind));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_89531_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_89531_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d44ab0a7:;
			if (it != expr_end) {
				jule::I64 _90218_i = it - expr->begin();
				jule::Ptr<_1dcd66728_KeyValPairExprModel> _90225_pair = *it;
				{
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("{", 1));
					_23b43eb82_possibleRefExpr(_self_, _90225_pair.get()._field_Key);
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(",", 1));
					_23b43eb82_possibleRefExpr(_self_, _90225_pair.get()._field_Val);
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_89531_m.get()._field_Entries.len() - _90218_i) > 1LL)) {
						_1c448c2da_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1d44ab0a7:;
				++it;
				_90218_i++;
				goto _iter_begin_1d44ab0a7;
			}
			_iter_end_1d44ab0a7:;
		};
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _23b442b52_slicing(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd671da_SlicingExprModel> _91631_m) {
	_23b43eb82_possibleRefExpr(_self_, _91631_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_2388e9cbb_Production))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c448e50c_locInfo(_self_.get()._field_oc, &(_91631_m.get()._field_Token));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_23b43eb82_possibleRefExpr(_self_, _91631_m.get()._field_Left);
	if ((_91631_m.get()._field_Right != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_23b43eb82_possibleRefExpr(_self_, _91631_m.get()._field_Right);
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b442dc7_traitSub(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd67729_TraitSubIdentExprModel> _93232_m) {
	_1c448c2da_write(_self_.get()._field_oc, static__23b451b1c_traitDecl(_93232_m.get()._field_Trt));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_23b43eb82_possibleRefExpr(_self_, _93232_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1c448c2da_write(_self_.get()._field_oc, static__23b4515cd_func(&(_93232_m.get()._field_Method)));
}



inline void _23b44314c_structureSub(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd68010_StructSubIdentExprModel> _94136_m) {
	_23b43eb82_possibleRefExpr(_self_, _94136_m.get()._field_Expr.get()._field_Model);
	if ((_94136_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1dce8512c_Ptr(_94136_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1dce84db8_Sptr(_94136_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_2388e9cbb_Production))) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1c448e50c_locInfo(_self_.get()._field_oc, &(_94136_m.get()._field_Token));
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1c448c2da_write(_self_.get()._field_oc, static__23b45269a_field(&(_94136_m.get()._field_Field.get()._field_Decl)));
}



inline void _23b4433c2_commonIdent(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd68a5a_CommonIdentExprModel> _96231_m) {
	_1c448c560_writeR(_self_.get()._field_oc, &(_96231_m.get()._field_Ident));
}



inline void _23b443647_commonSub(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd690bb_CommonSubIdentExprModel> _96633_m) {
	_23b43eb82_possibleRefExpr(_self_, _96633_m.get()._field_Expr);
	{
		
		if ((_1dce8512c_Ptr(_96633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1d44b8999:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1dce84db8_Sptr(_96633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1d44b9060:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_2388e9cbb_Production))) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1c448e50c_locInfo(_self_.get()._field_oc, &(_96633_m.get()._field_Token));
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1d44b8ee9:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1d44b8e83:;
	};
	_1c448c560_writeR(_self_.get()._field_oc, &(_96633_m.get()._field_Ident));
}



inline void _23b4438bc_array(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6876e_ArrayExprModel> _98529_m) {
	_1c448c2da_write(_self_.get()._field_oc, _1c449eb9e_array(_self_.get()._field_oc.get()._field_tc.ptr(), _98529_m.get()._field_Kind));
	if ((_98529_m.get()._field_Elems.len() == 0LL)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_98529_m.get()._field_Elems.len() == 2LL) && (_98529_m.get()._field_Elems[1LL] == nullptr))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
		_23b43eb82_possibleRefExpr(_self_, _98529_m.get()._field_Elems[0LL]);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("({", 2));
	_23b440545_models(_self_, _98529_m.get()._field_Elems);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _23b443b42_funcInsCommon(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd74648_FnIns> _100837_m) {
	_1c448c2da_write(_self_.get()._field_oc, _1c44a1013_func(_self_.get()._field_oc.get()._field_tc.ptr(), _100837_m));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	_23b443db7_funcIns(_self_, _100837_m);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b443db7_funcIns(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd74648_FnIns> _101531_m) {
	if (((_101531_m.get()._field_Decl != nullptr) && _101531_m.get()._field_Decl.get()._field_Binded)) {
		jule::Ptr<_1dcd09369_Directive> _101717_d = _1c44a7a20_findDirective(&(_101531_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_101717_d != nullptr)) {
			_1c448c2da_write(_self_.get()._field_oc, _1c4498813_concatAllParts(_101717_d.get()._field_Args));
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1c448c2da_write(_self_.get()._field_oc, static__23b451875_funcIns(&(_101531_m)));
}



inline void _23b44413c_tuple(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd693b8_TupleExprModel> _102629_m) {
	{
		auto expr = &(_102629_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d44c4cd5:;
		if (it != expr_end) {
			jule::I64 _102714_i = it - expr->begin();
			jule::Ptr<_1dce54cbc_Data> _102721_d = *it;
			{
				_23b43eb82_possibleRefExpr(_self_, _102721_d.get()._field_Model);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_102629_m.get()._field_Datas.len() - _102714_i) > 1LL)) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1c448cae3_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1d44c4cd5:;
			++it;
			_102714_i++;
			goto _iter_begin_1d44c4cd5;
		}
		_iter_end_1d44c4cd5:;
	};
}



inline void _23b4443b2_newCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6a386_BuiltinNewCallExprModel> _103731_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _103731_m.get()._field_Kind));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_103731_m.get()._field_Init != nullptr)) {
		_23b43eb82_possibleRefExpr(_self_, _103731_m.get()._field_Init);
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b444637_outCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd69792_BuiltinOutCallExprModel> _104731_m) {
	if ((_104731_m.get()._field_Debug && _2388e9cbb_Production)) {
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_23b43eb82_possibleRefExpr(_self_, _104731_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b4448ac_outlnCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd69b7c_BuiltinOutlnCallExprModel> _105633_m) {
	if ((_105633_m.get()._field_Debug && _2388e9cbb_Production)) {
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_23b43eb82_possibleRefExpr(_self_, _105633_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b444b32_panicCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6a771_BuiltinPanicCallExprModel> _106533_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_23b43eb82_possibleRefExpr(_self_, _106533_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1c448e50c_locInfo(_self_.get()._field_oc, &(_106533_m.get()._field_Token));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _23b444da7_assertCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6ac27_BuiltinAssertCallExprModel> _107334_m) {
	if (_2388e9cbb_Production) {
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_23b43eb82_possibleRefExpr(_self_, _107334_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1c448c2da_write(_self_.get()._field_oc, _23b449e01_cstrLit(static_cast<jule::Slice<jule::U8>>(_107334_m.get()._field_Log)));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1c448e50c_locInfo(_self_.get()._field_oc, &(_107334_m.get()._field_Token));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _23b44512c_errorCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6cb08_BuiltinErrorCallExprModel> _108633_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1dcd71e09_IsVoid(_108633_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _108633_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1d44d163d:;
				{
					jule::Ptr<_1dce05cb2_Var> _109121_v = _108633_m.get()._field_Err.get()._field_Model.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
					if (_109121_v.get()._field_Ident.equal("error", 5)) {
						_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1d44d15d8:;
		};
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1c44a5d1a_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_108633_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _108633_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1d44d418a:;
				{
					jule::Ptr<_1dce05cb2_Var> _110321_v = _108633_m.get()._field_Err.get()._field_Model.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
					if (_110321_v.get()._field_Ident.equal("error", 5)) {
						_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1d44d40ad:;
		};
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_23b43eb82_possibleRefExpr(_self_, _108633_m.get()._field_Err.get()._field_Model);
	jule::I64 _111213_i = _1c448d20e_pushAnyType(_self_.get()._field_oc, _108633_m.get()._field_Err.get()._field_Kind);;
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(_111213_i));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _23b4453a2_copyCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6c71d_BuiltinCopyCallExprModel> _111832_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_23b43eb82_possibleRefExpr(_self_, _111832_m.get()._field_Dest.get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1dce84b54_Prim(_111832_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_23b43eb82_possibleRefExpr(_self_, _111832_m.get()._field_Src.get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1dce84b54_Prim(_111832_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b445627_lenCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6b8d7_BuiltinLenCallExprModel> _113431_m) {
	_23b43eb82_possibleRefExpr(_self_, _113431_m.get()._field_Expr.get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _23b44589c_capCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6bc06_BuiltinCapCallExprModel> _113931_m) {
	_23b43eb82_possibleRefExpr(_self_, _113931_m.get()._field_Expr.get()._field_Model);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _23b445b22_deleteCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel> _114434_m) {
	_23b43eb82_possibleRefExpr(_self_, _114434_m.get()._field_Dest.get()._field_Model);
	if ((_114434_m.get()._field_Key != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_23b43eb82_possibleRefExpr(_self_, _114434_m.get()._field_Key.get()._field_Model);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _23b445d97_makeCallSlice(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>* _115538_m) {
	jule::Ptr<_1dce8dd4a_Slc> _115617_slice = _1dce85acd_Slc((*(_115538_m)).get()._field_Kind.ptr());;
	_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_115538_m)).get()._field_Kind));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_23b43eb82_possibleRefExpr(_self_, (*(_115538_m)).get()._field_Len);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_115538_m)).get()._field_Cap != nullptr)) {
		_23b43eb82_possibleRefExpr(_self_, (*(_115538_m)).get()._field_Cap);
	} else {
		_23b43eb82_possibleRefExpr(_self_, (*(_115538_m)).get()._field_Len);
	};
	if (_1c44a814c_shouldInitialized(&(_115617_slice.get()._field_Elem))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_23b4491a8_initExpr(_self_, _115617_slice.get()._field_Elem);
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b44611c_makeCallStr(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>* _117336_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_23b43eb82_possibleRefExpr(_self_, (*(_117336_m)).get()._field_Len);
	if (((*(_117336_m)).get()._field_Cap != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_23b43eb82_possibleRefExpr(_self_, (*(_117336_m)).get()._field_Cap);
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b446392_makeCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel> _118432_m) {
	if ((_1dce85acd_Slc(_118432_m.get()._field_Kind.ptr()) != nullptr)) {
		_23b445d97_makeCallSlice(_self_, &(_118432_m));
		return;;
	};
	_23b44611c_makeCallStr(_self_, &(_118432_m));
}



inline void _23b446617_pushToSlice(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dd057573_PushToSliceExprModel> _119235_m) {
	;
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("{ ", 2));
	_1c448c2da_write(_self_.get()._field_oc, _1c449d53d_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _119235_m.get()._field_Elems.get()._field_ElemKind));
	jule::Bool _120017_ptr = false;;
	{
		auto &_match_expr{ _119235_m.get()._field_Dest };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1d44e64bb:;
			{
				jule::Ptr<_1dcd63bcb_UnaryExprModel> _120421_u = _119235_m.get()._field_Dest.cast_ptr<_1dcd63bcb_UnaryExprModel>(&__jule_any_type74);;
				if ((_1dce8512c_Ptr(_120421_u.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(" *__jule_push_dest = ", 21));
					_23b43eb82_possibleRefExpr(_self_, _120421_u.get()._field_Expr.get()._field_Model);
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("; ", 2));
					_120017_ptr=true;
					goto _match_end_1d44e7973;
				};
				goto _case_begin_1d44e79c8;
			}
		}
		else {
			_case_begin_1d44e79c8:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str(" &__jule_push_dest = ", 21));
				_23b43eb82_possibleRefExpr(_self_, _119235_m.get()._field_Dest);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("; ", 2));
			}
		}
		_match_end_1d44e7973:;
	};
	if ((_119235_m.get()._field_Elems.get()._field_Elems.len() == 1LL)) {
		if (_120017_ptr) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->push(", 23));
		} else {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.push(", 22));
		};
		_23b43eb82_possibleRefExpr(_self_, _119235_m.get()._field_Elems.get()._field_Elems[0LL]);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("); }", 4));
		return;;
	};
	if (_120017_ptr) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.alloc_for_append(", 34));
	};
	_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(static_cast<jule::I64>(_119235_m.get()._field_Elems.get()._field_Elems.len())));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("); ", 3));
	{
		auto expr = &(_119235_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d44ed9bd:;
		if (it != expr_end) {
			jule::Any _123821_e = *it;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("__jule_push_dest", 16));
				if (_120017_ptr) {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("->__push(", 9));
				} else {
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				};
				_23b43eb82_possibleRefExpr(_self_, _123821_e);
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("); ", 3));
			}
			_iter_next_1d44ed9bd:;
			++it;
			goto _iter_begin_1d44ed9bd;
		}
		_iter_end_1d44ed9bd:;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _23b44688c_appendToSlice(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dd05792a_AppendToSliceExprModel> _125237_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	_23b43eb82_possibleRefExpr(_self_, _125237_m.get()._field_Dest);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	_23b43eb82_possibleRefExpr(_self_, _125237_m.get()._field_Slice);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _23b446b12_appendCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6b5b8_BuiltinAppendCallExprModel> _126034_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_23b43eb82_possibleRefExpr(_self_, _126034_m.get()._field_Dest);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(",", 1));
	_23b43eb82_possibleRefExpr(_self_, _126034_m.get()._field_Elements);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b446d87_cloneCall(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd69e9b_BuiltinCloneCallExprModel> _126833_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_23b43eb82_possibleRefExpr(_self_, _126833_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b44710c_sizeof(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6ce05_SizeofExprModel> _127430_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_23b43eb82_possibleRefExpr(_self_, _127430_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b447382_alignof(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6d1e1_AlignofExprModel> _128031_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_23b43eb82_possibleRefExpr(_self_, _128031_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _23b447690_runeLit(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6d4cc_RuneExprModel> _128627_m) {
	if ((_128627_m.get()._field_Code <= 127LL)) {
		jule::Str _128821_b = _23b44983a_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_128627_m.get()._field_Code)));;
		if (_128821_b.equal("'", 1)) {
			_128821_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _128821_b) + jule::Str("'", 1));;
	};
	return _23b44a4a6_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_128627_m.get()._field_Code)));;
}



inline void _23b447915_structureStatic(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd683a6_StructStaticIdentExprModel> _129739_m) {
	_1c448c2da_write(_self_.get()._field_oc, static__23b451875_funcIns(&(_129739_m.get()._field_Method)));
}



inline void _23b447b8a_integratedToStr(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6d7da_IntegratedToStrExprModel> _130139_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_23b43eb82_possibleRefExpr(_self_, _130139_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _23b447e10_backendEmit(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6dba3_BackendEmitExprModel> _130735_m) {
	if ((_130735_m.get()._field_Exprs.len() == 0LL)) {
		_1c448c560_writeR(_self_.get()._field_oc, &(_130735_m.get()._field_Code));
		return;;
	};
	jule::I64 _131213_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _131317_args = jule::Slice<jule::Any>::alloc(_130735_m.get()._field_Exprs.len(), _130735_m.get()._field_Exprs.len());;
	{
		auto expr = &(_130735_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d450a513:;
		if (it != expr_end) {
			jule::I64 _131414_i = it - expr->begin();
			jule::Any _131421_expr = *it;
			{
				_23b43eb82_possibleRefExpr(_self_, _131421_expr);
				_131317_args[_131414_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_131213_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _131213_n);
			}
			_iter_next_1d450a513:;
			++it;
			_131414_i++;
			goto _iter_begin_1d450a513;
		}
		_iter_end_1d450a513:;
	};
	_1c448c2da_write(_self_.get()._field_oc, _1dd0454a6_Format(_130735_m.get()._field_Code, _131317_args));
}



inline void _23b448185_free(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dcd6de8e_FreeExprModel> _132228_m) {
	_23b43eb82_possibleRefExpr(_self_, _132228_m.get()._field_Expr);
	if (_2388e9628_RC) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _23b44840a_mutSlicing(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dd057e69_MutSlicingExprModel> _133134_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	_23b43eb82_possibleRefExpr(_self_, _133134_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_2388e9cbb_Production))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c448e50c_locInfo(_self_.get()._field_oc, &(_133134_m.get()._field_Token));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_23b43eb82_possibleRefExpr(_self_, _133134_m.get()._field_Left);
	if ((_133134_m.get()._field_Right != nullptr)) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_23b43eb82_possibleRefExpr(_self_, _133134_m.get()._field_Right);
	};
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _23b448680_strInsertBegin(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dd058453_StrInsertBeginExprModel> _134838_m) {
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
	_23b43eb82_possibleRefExpr(_self_, _134838_m.get()._field_Dest);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_23b43eb82_possibleRefExpr(_self_, _134838_m.get()._field_Expr);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _23b448905_strComp(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dd0566a4_StrCompExprModel> _135631_m) {
	if (_135631_m.get()._field_NotEq) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _136013_bytes = static_cast<jule::Slice<jule::U8>>(_24a23557e_ReadStr(_135631_m.get()._field_Right.ptr()));;
	_23b43eb82_possibleRefExpr(_self_, _135631_m.get()._field_Left);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_1c448c2da_write(_self_.get()._field_oc, _23b449e01_cstrLit(_136013_bytes));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(static_cast<jule::I64>(_136013_bytes.len())));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_135631_m.get()._field_NotEq) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _23b448b9c_inlineStdInternalNosafeStobs(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dd0586ea_InlineStdInternalNosafeStobs> _137252_m) {
	_23b43eb82_possibleRefExpr(_self_, _137252_m.get()._field_Str);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
}



inline void _23b448e33_model(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Any _137729_m) {
	{
		auto &_match_expr{ _137729_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d4518b2b:;
			{
				_1c448c2da_write(_self_.get()._field_oc, _137729_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1d4518e06:;
			{
				_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _137729_m.cast_ptr<_1dce82437_TypeKind>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1d4518e6c:;
			{
				_23b43d2ce_constant(_self_, _137729_m.cast_ptr<_24a233549_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d4518ed3:;
			{
				_23b43de17_var(_self_, _137729_m.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1d4519049:;
			{
				_23b43e18c_structureIns(_self_, _137729_m.cast_ptr<_1dcd5e457_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1d45199c8:;
			{
				_23b443b42_funcInsCommon(_self_, _137729_m.cast_ptr<_1dcd74648_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1d4519a3e:;
			{
				_23b43d91c_unsafeBinary(_self_, _137729_m.cast_ptr<_1dd056d58_UnsafeBinopExprModel>(&__jule_any_type129).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1d4519aa5:;
			{
				_23b43db92_binary(_self_, _137729_m.cast_ptr<_1dcd63824_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1d4519b1b:;
			{
				_23b43e412_unary(_self_, _137729_m.cast_ptr<_1dcd63bcb_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1d4519b82:;
			{
				_23b43e687_structureLit(_self_, _137729_m.cast_ptr<_1dcd6447e_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1d4519be8:;
			{
				_23b43e90c_allocStructure(_self_, _137729_m.cast_ptr<_1dcd6478c_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1d4519c5e:;
			{
				_23b4402c0_casting(_self_, _137729_m.cast_ptr<_1dcd64cdc_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1d4519cc5:;
			{
				_23b441b62_funcCall(_self_, _137729_m.cast_ptr<_1dcd6568e_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1d4519d3b:;
			{
				_23b441dd7_slice(_self_, _137729_m.cast_ptr<_1dcd65a46_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1d4519da2:;
			{
				_23b4438bc_array(_self_, _137729_m.cast_ptr<_1dcd6876e_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1d4519e18:;
			{
				_23b4423d2_unsafeIndexing(_self_, _137729_m.cast_ptr<_1dd0571dd_UnsafeIndexingExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1d4519e7e:;
			{
				_23b44215c_indexing(_self_, _137729_m.cast_ptr<_1dcd65eb9_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1d451a006:;
			{
				_23b442657_anonFunc(_self_, _137729_m.cast_ptr<_1dcd66371_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1d451a07d:;
			{
				_23b4428cc_mapExpr(_self_, _137729_m.cast_ptr<_1dcd66b9b_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1d451a105:;
			{
				_23b442b52_slicing(_self_, _137729_m.cast_ptr<_1dcd671da_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1d451a17c:;
			{
				_23b442dc7_traitSub(_self_, _137729_m.cast_ptr<_1dcd67729_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1d451a204:;
			{
				_23b44314c_structureSub(_self_, _137729_m.cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1d451a27b:;
			{
				_23b4433c2_commonIdent(_self_, _137729_m.cast_ptr<_1dcd68a5a_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1d451a303:;
			{
				_23b443647_commonSub(_self_, _137729_m.cast_ptr<_1dcd690bb_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1d451a37a:;
			{
				_23b44413c_tuple(_self_, _137729_m.cast_ptr<_1dcd693b8_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1d451a402:;
			{
				_23b444637_outCall(_self_, _137729_m.cast_ptr<_1dcd69792_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1d451a479:;
			{
				_23b4448ac_outlnCall(_self_, _137729_m.cast_ptr<_1dcd69b7c_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1d451a501:;
			{
				_23b4443b2_newCall(_self_, _137729_m.cast_ptr<_1dcd6a386_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1d451a578:;
			{
				_23b444b32_panicCall(_self_, _137729_m.cast_ptr<_1dcd6a771_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d451a600:;
			{
				_23b444da7_assertCall(_self_, _137729_m.cast_ptr<_1dcd6ac27_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d451a677:;
			{
				_23b44512c_errorCall(_self_, _137729_m.cast_ptr<_1dcd6cb08_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1d451a6ee:;
			{
				_23b446392_makeCall(_self_, _137729_m.cast_ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d451a776:;
			{
				_23b446b12_appendCall(_self_, _137729_m.cast_ptr<_1dcd6b5b8_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d451a7ed:;
			{
				_23b446d87_cloneCall(_self_, _137729_m.cast_ptr<_1dcd69e9b_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1d451a875:;
			{
				_23b4453a2_copyCall(_self_, _137729_m.cast_ptr<_1dcd6c71d_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d451a8ec:;
			{
				_23b445627_lenCall(_self_, _137729_m.cast_ptr<_1dcd6b8d7_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1d451a974:;
			{
				_23b44589c_capCall(_self_, _137729_m.cast_ptr<_1dcd6bc06_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1d451a9eb:;
			{
				_23b445b22_deleteCall(_self_, _137729_m.cast_ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1d451aa73:;
			{
				_23b44710c_sizeof(_self_, _137729_m.cast_ptr<_1dcd6ce05_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1d451aaea:;
			{
				_23b447382_alignof(_self_, _137729_m.cast_ptr<_1dcd6d1e1_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1d451ab72:;
			{
				_1c448c2da_write(_self_.get()._field_oc, _23b447690_runeLit(_self_, _137729_m.cast_ptr<_1dcd6d4cc_RuneExprModel>(&__jule_any_type88)));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d451abe9:;
			{
				_23b447915_structureStatic(_self_, _137729_m.cast_ptr<_1dcd683a6_StructStaticIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1d451ac71:;
			{
				_23b447b8a_integratedToStr(_self_, _137729_m.cast_ptr<_1dcd6d7da_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1d451ace8:;
			{
				_23b447e10_backendEmit(_self_, _137729_m.cast_ptr<_1dcd6dba3_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1d451ad70:;
			{
				_23b448185_free(_self_, _137729_m.cast_ptr<_1dcd6de8e_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1d451ade7:;
			{
				_23b44840a_mutSlicing(_self_, _137729_m.cast_ptr<_1dd057e69_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1d451ae6e:;
			{
				_23b448680_strInsertBegin(_self_, _137729_m.cast_ptr<_1dd058453_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1d451aee6:;
			{
				_23b448905_strComp(_self_, _137729_m.cast_ptr<_1dd0566a4_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1d451b06d:;
			{
				_23b448b9c_inlineStdInternalNosafeStobs(_self_, _137729_m.cast_ptr<_1dd0586ea_InlineStdInternalNosafeStobs>(&__jule_any_type131));
			}
		}
		else {
			_case_begin_1d4518ca2:;
			{
				_1c448c2da_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1d4518bc5:;
	};
}



inline void _23b4491a8_initExpr(jule::Ptr<_23b43bbc3_exprCoder> _self_, jule::Ptr<_1dce82437_TypeKind> _148232_t) {
	if (_1dce841a3_NilCompatible(_148232_t.ptr())) {
		if ((_1dce8512c_Ptr(_148232_t.ptr()) != nullptr)) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1dce8e950_Tuple> _149217_tup = _1dce867e3_Tup(_148232_t.ptr());;
	if ((_149217_tup != nullptr)) {
		_1c44a56cc_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _149217_tup);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_149217_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6d8564d:;
			if (it != expr_end) {
				jule::I64 _149618_i = it - expr->begin();
				jule::Ptr<_1dce82437_TypeKind> _149625_tt = *it;
				{
					if ((!(_1c44a814c_shouldInitialized(&(_149625_tt))))) {
						goto _iter_next_1c6d8564d;
					};
					_1c448c2da_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1c448c2da_write(_self_.get()._field_oc, _24a223b77_Itoa(_149618_i));
					_1c448c2da_write(_self_.get()._field_oc, jule::Str("=", 1));
					_23b4491a8_initExpr(_self_, _149625_tt);
					if (((_149217_tup.get()._field_Types.len() - _149618_i) > 1LL)) {
						_1c448c2da_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1c6d8564d:;
				++it;
				_149618_i++;
				goto _iter_begin_1c6d8564d;
			}
			_iter_end_1c6d8564d:;
		};
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1dcd8644b_Enum> _151117_enm = _1dce85391_Enum(_148232_t.ptr());;
	if ((_151117_enm != nullptr)) {
		_23b448e33_model(_self_, _151117_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1dce89b8c_Prim> _151613_prim = _1dce84b54_Prim(_148232_t.ptr());;
	if ((_151613_prim != nullptr)) {
		if (_24a233109_IsNum(_151613_prim.get()._field_Kind)) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1dce8cb29_IsBool(_151613_prim.ptr())) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1dce8cd8d_IsStr(_151613_prim.ptr())) {
			_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1dce85869_Arr(_148232_t.ptr()) != nullptr)) {
		jule::Ptr<_1dce90ee5_Arr> _152821_arr = _1dce85869_Arr(_148232_t.ptr());;
		_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
		_23b4491a8_initExpr(_self_, _152821_arr.get()._field_Elem);
		_1c448c2da_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _153517_s = _1dce860a6_Struct(_148232_t.ptr());;
	if ((((_153517_s != nullptr) && _153517_s.get()._field_Decl.get()._field_Binded) && (_1c44a7a20_findDirective(&(_153517_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, _1c44a1321_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _23b43bbc3_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_23b44b991_deriveCoder> static__23b44bd37_new(jule::Ptr<_1c448bb8b_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_23b44b991_deriveCoder>(_23b44b991_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _23b44c145_cloneFuncDecl(_23b44b991_deriveCoder* _self_, jule::Ptr<_1dcd5b641_Struct>* _1633_s) {
	jule::Str _1717_obj = _1c449e583_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _23b44c453_cloneFuncDef(_23b44b991_deriveCoder* _self_, jule::Ptr<_1dcd5b641_Struct>* _2232_s) {
	jule::Str _2317_obj = _1c449e583_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _23b44b991_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_23b44d377_TestCoder> static__23b44d7a6_New(jule::Ptr<_1c448bb8b_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_23b44d377_TestCoder>(_23b44d377_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _23b44da1a_findTestingPackage(jule::Ptr<_23b44d377_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6d932b5:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1c6d932b5:;
			++it;
			goto _iter_begin_1c6d932b5;
		}
		_iter_end_1c6d932b5:;
	};
	return nullptr;;
}



inline void _23b44dc90_appendTest(jule::Ptr<_23b44d377_TestCoder> _self_, jule::Ptr<_1dcd74648_FnIns> _4334_f) {
	_1c448cae3_indent(_self_.get()._field_oc);
	_23b44e455_callTmReset(_self_);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1c448c2da_write(_self_.get()._field_oc, _23b449e01_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(" << std::endl;\n", 15));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, static__23b451875_funcIns(&(_4334_f)));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _23b44e015_appendPackageTests(jule::Ptr<_23b44d377_TestCoder> _self_, jule::Ptr<_1dcdd031e_Package>* _5843_p) {
	{
		auto expr = &((*(_5843_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6d97891:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &(_5921_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6d981cc:;
					if (it != expr_end) {
						jule::Ptr<_1dcd71997_Fn> _6025_f = *it;
						{
							if (_1c44a7da5_hasDirective(&(_6025_f.get()._field_Directives), jule::Str("test", 4))) {
								_23b44dc90_appendTest(_self_, _6025_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1c6d981cc:;
						++it;
						goto _iter_begin_1c6d981cc;
					}
					_iter_end_1c6d981cc:;
				};
			}
			_iter_next_1c6d97891:;
			++it;
			goto _iter_begin_1c6d97891;
		}
		_iter_end_1c6d97891:;
	};
}



inline jule::Bool _23b44e279_readyTestingPackage(jule::Ptr<_23b44d377_TestCoder> _self_) {
	jule::Ptr<_1dcdcc6d4_ImportInfo> _6917_p = _23b44da1a_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1dcdcd7b2_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1dcd60403_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1dcd60403_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1dcd60403_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _23b44e455_callTmReset(jule::Ptr<_23b44d377_TestCoder> _self_) {
	_1c448c2da_write(_self_.get()._field_oc, static__23b4515cd_func(&(_self_.get()._field_tmReset)));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _23b44e631_callTmFailed(jule::Ptr<_23b44d377_TestCoder> _self_) {
	_1c448c2da_write(_self_.get()._field_oc, static__23b4515cd_func(&(_self_.get()._field_tmFailed)));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _23b44e80c_callTmSkipped(jule::Ptr<_23b44d377_TestCoder> _self_) {
	_1c448c2da_write(_self_.get()._field_oc, static__23b4515cd_func(&(_self_.get()._field_tmSkipped)));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _23b44e9d8_Serialize(jule::Ptr<_23b44d377_TestCoder> _self_) {
	_1c4497e94_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1c4497cb8_end(_self_.get()._field_oc);
	});;
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	if ((!(_23b44e279_readyTestingPackage(_self_)))) {
		_1c448c2da_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1c448c917_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1c448c2da_write(_self_.get()._field_oc, _1c449c1da_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1c449e891_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1c448c2da_write(_self_.get()._field_oc, _1c449e891_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1c448c73b_addIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_23b44e631_callTmFailed(_self_);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_23b44e80c_callTmSkipped(_self_);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_23b44e015_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1c448c917_doneIndent(_self_.get()._field_oc);
	_1c448cae3_indent(_self_.get()._field_oc);
	_1c448c2da_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _23b44d377_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__23b450e4b_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_24a22354a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__23b451336_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_24a223b77_Itoa(_5423_row);
	_5517_obj+=_24a223b77_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__23b4515cd_func(jule::Ptr<_1dcd71997_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_Binded) {
			_case_begin_1c6dad258:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_1c6dad2be:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1dcd7216d_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_1c6dac741:;
			{
				jule::Str _7221_obj = static__23b450e4b_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1c6dac631:;
			{
				return static__23b450e4b_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_1c6dabe27:;
	};
}



inline jule::Str static__23b451875_funcIns(jule::Ptr<_1dcd74648_FnIns>* _8424_f) {
	if (_1dcd759ce_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_Binded || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__23b4515cd_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__23b450e4b_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__23b451b1c_traitDecl(jule::Ptr<_1dcd83bb8_Trait> _9525_t) {
	if (_1dcd84757_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__23b450e4b_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__23b451db4_param(jule::Ptr<_1dcd7015a_Param>* _10322_p) {
	if ((_23ae2967d_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _23ae293d6_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1dcd70743_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__23b451336_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__23b451336_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__23b45215b_structure(jule::Ptr<_1dcd5b641_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_Binded) {
		if (_1c44a7da5_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__23b450e4b_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__23b452403_structureIns(jule::Ptr<_1dcd5e457_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_Binded || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__23b45215b_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__23b450e4b_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__23b45269a_field(jule::Ptr<_1dcd58a6c_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_Binded) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__23b452942_var(jule::Ptr<_1dce05cb2_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_Binded) {
			_case_begin_1c6db7509:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_1c6db6915:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_1c6db697b:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1c6db69e2:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1c6db6a58:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _24a223b77_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1c6db6c9a:;
			{
				return static__23b451336_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1c6db6140:;
			{
				return static__23b450e4b_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1c6db63b5:;
	};
}



inline jule::Str static__23b452bd9_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_24a22354a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__23b452e81_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_24a22354a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__23b453228_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_24a22354a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__23b4534c0_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__23b453767_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_24a22354a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__23b453a0e_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_24a22354a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _23b4508b8_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c448a2e9_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c448a7b1_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c448ab68_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c449a75a_Str(_1c449a4b3_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1c449aa68_Equal(jule::Ptr<_1c449a4b3_customType> _self_, jule::Ptr<_1dce82437_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c449a4b3_customType _Src) {
	_Stream << _1c449a75a_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c449ae64_typeCoder> static__1c449b4a3_new(jule::Ptr<_1c448bb8b_ObjectCoder>* _6324_oc) {
	jule::Ptr<_1c449ae64_typeCoder> _6417_tc = jule::new_ptr<_1c449ae64_typeCoder>(_1c449ae64_typeCoder{._field_oc=(*(_6324_oc)), });;
	_6417_tc.get()._field_rc=static__1c44a3ee4_new(&(_6417_tc));
	return _6417_tc;;
}



inline jule::Str _1c449b7b1_toType(_1c449ae64_typeCoder* _self_, jule::Str _7029_id) {
	if ((!_7029_id.equal("uintptr", 7))) {
		_7029_id=_24a225a47_RealKindOf(_7029_id);
	};
	if (((97LL <= _7029_id[0LL]) && (_7029_id[0LL] <= 122LLU))) {
		_7029_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _7029_id);;
}



inline jule::Str _1c449babe_prim(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dce89b8c_Prim> _8123_p) {
	return _1c449b7b1_toType(_self_, _1dce89ebc_Str(_8123_p.ptr()));;
}



inline jule::Str _1c449bdcc_tuple(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dce8e950_Tuple> _8628_t) {
	jule::Str _8717_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8628_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d464057c:;
		if (it != expr_end) {
			jule::Ptr<_1dce82437_TypeKind> _8821_tk = *it;
			{
				_8717_obj+=_1c44a1321_kind(_self_, _8821_tk);
				(_8717_obj).append(",", 1);
			}
			_iter_next_1d464057c:;
			++it;
			goto _iter_begin_1d464057c;
		}
		_iter_end_1d464057c:;
	};
	(_8717_obj).mut_slice(0LL, (_8717_obj.len() - 1LL));;
	(_8717_obj).append(">", 1);
	return _8717_obj;;
}



inline jule::Str _1c449c1da_asSptr(_1c449ae64_typeCoder* _self_, jule::Str _9825_elem) {
	jule::Str _9917_obj = jule::Str("jule::Ptr<", 10);;
	_9917_obj+=_9825_elem;
	(_9917_obj).append(">", 1);
	return _9917_obj;;
}



inline jule::Str _1c449c4e8_asPtr(_1c449ae64_typeCoder* _self_, jule::Str _10624_elem) {
	return (_10624_elem + jule::Str("*", 1));;
}



inline jule::Str _1c449c806_sptr(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dce8d3dd_Sptr> _11127_sptr) {
	return _1c449c1da_asSptr(_self_, _1c44a1321_kind(_self_, _11127_sptr.get()._field_Elem));;
}



inline jule::Str _1c449cb14_ptr(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dce91952_Ptr> _11626_p) {
	;
	if (_1dce92425_IsUnsafe(_11626_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12117_elem = _1c44a1321_kind(_self_, _11626_p.get()._field_Elem);;
	(_12117_elem).append("*", 1);
	return _12117_elem;;
}



inline jule::Str _1c449ce22_enumDecl(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dcd8644b_Enum> _12731_e) {
	return _1c44a1321_kind(_self_, _12731_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1c449d230_typeEnumDecl(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dcd87a46_TypeEnum> _13235_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1c449d53d_asSlice(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dce82437_TypeKind> _13630_elem) {
	jule::Str _13717_obj = jule::Str("jule::Slice<", 12);;
	_13717_obj+=_1c44a1321_kind(_self_, _13630_elem);
	(_13717_obj).append(">", 1);
	return _13717_obj;;
}



inline jule::Str _1c449d84b_slice(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dce8dd4a_Slc> _14428_s) {
	return _1c449d53d_asSlice(_self_, _14428_s.get()._field_Elem);;
}



inline jule::Str _1c449db59_mapType(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dce90401_Map> _14930_m) {
	jule::Str _15017_obj = jule::Str("jule::Map<", 10);;
	_15017_obj+=_1c44a1321_kind(_self_, _14930_m.get()._field_Key);
	(_15017_obj).append(",", 1);
	_15017_obj+=_1c44a1321_kind(_self_, _14930_m.get()._field_Val);
	(_15017_obj).append(">", 1);
	return _15017_obj;;
}



inline jule::Str _1c449de67_traitIdent(_1c449ae64_typeCoder* _self_, jule::Str _15829_ident) {
	jule::Str _15917_obj = jule::Str("jule::Trait<", 12);;
	_15917_obj+=_15829_ident;
	(_15917_obj).append(">", 1);
	return _15917_obj;;
}



inline jule::Str _1c449e275_traitDecl(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dcd83bb8_Trait> _16628_t) {
	return _1c449de67_traitIdent(_self_, static__23b451b1c_traitDecl(_16628_t));;
}



inline jule::Str _1c449e583_structure(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dcd5b641_Struct> _17128_s) {
	jule::Str _17217_rep = jule::Str();;
	if ((_17128_s.get()._field_Binded && (!(_1c44a7da5_hasDirective(&(_17128_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17217_rep).append("struct ", 7);
	};
	_17217_rep+=static__23b45215b_structure(&(_17128_s));
	return _17217_rep;;
}



inline jule::Str _1c449e891_structureIns(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dcd5e457_StructIns> _18135_s) {
	if (_18135_s.get()._field_Decl.get()._field_Binded) {
		jule::Str _18321_ident = static__23b452403_structureIns(&(_18135_s));;
		if ((_18135_s.get()._field_Generics.len() > 0LL)) {
			(_18321_ident).append("<", 1);
			{
				auto expr = &(_18135_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1d464b19d:;
				if (it != expr_end) {
					jule::Ptr<_1dce80ba5_InsGeneric> _18629_g = *it;
					{
						_18321_ident+=_1c44a1321_kind(_self_, _18629_g.get()._field_Kind);
						(_18321_ident).append(",", 1);
					}
					_iter_next_1d464b19d:;
					++it;
					goto _iter_begin_1d464b19d;
				}
				_iter_end_1d464b19d:;
			};
			(_18321_ident).mut_slice(0LL, (_18321_ident.len() - 1LL));;
			(_18321_ident).append(">", 1);
		};
		jule::Ptr<_1dcd09369_Directive> _19317_d = _1c44a7a20_findDirective(&(_18135_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19317_d != nullptr)) {
			(_18321_ident).buffer.insert(0, ((_1c4498813_concatAllParts(_19317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18321_ident;;
	};
	return static__23b452403_structureIns(&(_18135_s));;
}



inline jule::Str _1c449eb9e_array(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dce90ee5_Arr> _20328_a) {
	jule::Str _20417_obj = jule::Str("jule::Array<", 12);;
	_20417_obj+=_1c44a1321_kind(_self_, _20328_a.get()._field_Elem);
	(_20417_obj).append(",", 1);
	_20417_obj+=_24a223b77_Itoa(_20328_a.get()._field_N);
	(_20417_obj).append(">", 1);
	return _20417_obj;;
}



inline jule::Str _1c44a02ba_paramIns(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dcd73779_ParamIns>* _22932_p) {
	jule::Str _23017_obj = jule::Str();;
	if ((*(_22932_p)).get()._field_Decl.get()._field_Variadic) {
		(_23017_obj).append("jule::Slice<", 12);
		_23017_obj+=_1c44a1321_kind(_self_, (*(_22932_p)).get()._field_Kind);
		(_23017_obj).append(">", 1);
	} else {
		_23017_obj+=_1c44a1321_kind(_self_, (*(_22932_p)).get()._field_Kind);
	};
	if ((*(_22932_p)).get()._field_Decl.get()._field_Reference) {
		(_23017_obj).append("*", 1);
	};
	return _23017_obj;;
}



inline void _1c44a08e7_funcInsResult(_1c449ae64_typeCoder* _self_, jule::Str* _25937_s, jule::Ptr<_1dcd74648_FnIns>* _25950_f) {
	if (_1dcd71e09_IsVoid((*(_25950_f)).get()._field_Decl.ptr())) {
		if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25937_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25937_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25937_s))).append("jule::Exceptional<", 18);
		_1c44a5d1a_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
		((*(_25937_s))).append(">", 1);
		return;;
	};
	_1c44a5d1a_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
}



inline jule::Str _1c44a0c05_anonFunc(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dcd74648_FnIns> _27731_f) {
	if (((_27731_f.get()._field_Result != nullptr) && (_1dce867e3_Tup(_27731_f.get()._field_Result.ptr()) != nullptr))) {
		_1c448d484_pushResultIns((*(_self_))._field_oc, &(_27731_f));
	};
	jule::Str _28117_decl = jule::Str();;
	_1c44a08e7_funcInsResult(_self_, &(_28117_decl), &(_27731_f));
	(_28117_decl).append("(", 1);
	if ((_27731_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27731_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d43ca35b:;
			if (it != expr_end) {
				jule::Ptr<_1dcd73779_ParamIns> _28525_param = *it;
				{
					if (_1dcd70743_IsSelf(_28525_param.get()._field_Decl.ptr())) {
						goto _iter_next_1d43ca35b;
					};
					_28117_decl+=_1c44a02ba_paramIns(_self_, &(_28525_param));
					(_28117_decl).append(",", 1);
				}
				_iter_next_1d43ca35b:;
				++it;
				goto _iter_begin_1d43ca35b;
			}
			_iter_end_1d43ca35b:;
		};
		(_28117_decl).mut_slice(0LL, (_28117_decl.len() - 1LL));;
	} else {
		(_28117_decl).append("void", 4);
	};
	(_28117_decl).append(")", 1);
	return _28117_decl;;
}



inline jule::Str _1c44a1013_func(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dcd74648_FnIns> _30127_f) {
	jule::Str _30217_obj = jule::Str("jule::Fn<", 9);;
	_30217_obj+=_1c44a0c05_anonFunc(_self_, _30127_f);
	(_30217_obj).append(">", 1);
	return _30217_obj;;
}



inline jule::Str _1c44a1321_kind(_1c449ae64_typeCoder* _self_, jule::Ptr<_1dce82437_TypeKind> _30927_k) {
	{
		
		if ((_1dce860a6_Struct(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd084:;
			{
				return _1c449e891_structureIns(_self_, _1dce860a6_Struct(_30927_k.ptr()));;
			}
		}
		else if (_1dce83229_Binded(_30927_k.ptr())) {
			_case_begin_1d43cd10b:;
			{
				return _30927_k.get()._field_BindIdent;;
			}
		}
		else if ((_1dce84b54_Prim(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd183:;
			{
				return _1c449babe_prim(_self_, _1dce84b54_Prim(_30927_k.ptr()));;
			}
		}
		else if ((_1dce867e3_Tup(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd20a:;
			{
				return _1c449bdcc_tuple(_self_, _1dce867e3_Tup(_30927_k.ptr()));;
			}
		}
		else if ((_1dce84db8_Sptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd282:;
			{
				return _1c449c806_sptr(_self_, _1dce84db8_Sptr(_30927_k.ptr()));;
			}
		}
		else if ((_1dce8512c_Ptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd309:;
			{
				return _1c449cb14_ptr(_self_, _1dce8512c_Ptr(_30927_k.ptr()));;
			}
		}
		else if ((_1dce85391_Enum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd381:;
			{
				return _1c449ce22_enumDecl(_self_, _1dce85391_Enum(_30927_k.ptr()));;
			}
		}
		else if ((_1dce85605_TypeEnum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd408:;
			{
				return _1c449d230_typeEnumDecl(_self_, _1dce85605_TypeEnum(_30927_k.ptr()));;
			}
		}
		else if ((_1dce85acd_Slc(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd480:;
			{
				return _1c449d84b_slice(_self_, _1dce85acd_Slc(_30927_k.ptr()));;
			}
		}
		else if ((_1dce8657e_Map(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd507:;
			{
				return _1c449db59_mapType(_self_, _1dce8657e_Map(_30927_k.ptr()));;
			}
		}
		else if ((_1dce8631a_Trait(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd57e:;
			{
				return _1c449e275_traitDecl(_self_, _1dce8631a_Trait(_30927_k.ptr()));;
			}
		}
		else if ((_1dce85869_Arr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd606:;
			{
				return _1c449eb9e_array(_self_, _1dce85869_Arr(_30927_k.ptr()));;
			}
		}
		else if ((_1dce85d42_Fn(_30927_k.ptr()) != nullptr)) {
			_case_begin_1d43cd67d:;
			{
				return _1c44a1013_func(_self_, _1dce85d42_Fn(_30927_k.ptr()));;
			}
		}
		_match_end_1d43ccddb:;
	};
	{
		auto &_match_expr{ _30927_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1d43cd738:;
			{
				return _30927_k.get()._field_Kind.cast_ptr<_1c449a4b3_customType>(27).get()._field_kind;;
			}
		}
		else {
			_case_begin_1d43d5014:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1d43d42bb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c449ae64_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c44a3a2c_resultCoder> static__1c44a3ee4_new(jule::Ptr<_1c449ae64_typeCoder>* _36324_tc) {
	return jule::new_ptr<_1c44a3a2c_resultCoder>(_1c44a3a2c_resultCoder{._field_tc=(*(_36324_tc))});;
}



inline void _1c44a4313_ptr(_1c44a3a2c_resultCoder* _self_, jule::Str* _36727_s, jule::Ptr<_1dce91952_Ptr> _36739_p) {
	((*(_36727_s))).append("p", 1);
	_1c44a59eb_codeMut(_self_, _36727_s, &(_36739_p.get()._field_Elem));
}



inline void _1c44a4632_sptr(_1c44a3a2c_resultCoder* _self_, jule::Str* _37228_s, jule::Ptr<_1dce8d3dd_Sptr> _37240_p) {
	((*(_37228_s))).append("x", 1);
	_1c44a59eb_codeMut(_self_, _37228_s, &(_37240_p.get()._field_Elem));
}



inline void _1c44a4951_mapType(_1c44a3a2c_resultCoder* _self_, jule::Str* _37731_s, jule::Ptr<_1dce90401_Map> _37743_p) {
	((*(_37731_s))).append("m", 1);
	_1c44a59eb_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Key));
	_1c44a59eb_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Val));
}



inline void _1c44a4c70_slice(_1c44a3a2c_resultCoder* _self_, jule::Str* _38329_s, jule::Ptr<_1dce8dd4a_Slc> _38341_slc) {
	((*(_38329_s))).append("s", 1);
	_1c44a59eb_codeMut(_self_, _38329_s, &(_38341_slc.get()._field_Elem));
}



inline void _1c44a508e_arr(_1c44a3a2c_resultCoder* _self_, jule::Str* _38827_s, jule::Ptr<_1dce90ee5_Arr> _38839_arr) {
	((*(_38827_s))).append("a", 1);
	(*(_38827_s))+=_24a2238d0_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38839_arr.get()._field_N)), 16LL);
	_1c44a59eb_codeMut(_self_, _38827_s, &(_38839_arr.get()._field_Elem));
}



inline void _1c44a53ad_func(_1c44a3a2c_resultCoder* _self_, jule::Str* _39428_s, jule::Ptr<_1dcd74648_FnIns> _39440_f) {
	((*(_39428_s))).append("f", 1);
	{
		auto expr = &(_39440_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d43dacea:;
		if (it != expr_end) {
			jule::Ptr<_1dcd73779_ParamIns> _39621_p = *it;
			{
				if (_39621_p.get()._field_Decl.get()._field_Reference) {
					((*(_39428_s))).append("r", 1);
				};
				_1c44a59eb_codeMut(_self_, _39428_s, &(_39621_p.get()._field_Kind));
			}
			_iter_next_1d43dacea:;
			++it;
			goto _iter_begin_1d43dacea;
		}
		_iter_end_1d43dacea:;
	};
	if ((_39440_f.get()._field_Result != nullptr)) {
		_1c44a59eb_codeMut(_self_, _39428_s, &(_39440_f.get()._field_Result));
	};
}



inline void _1c44a56cc_tup(_1c44a3a2c_resultCoder* _self_, jule::Str* _40727_s, jule::Ptr<_1dce8e950_Tuple> _40739_tup) {
	{
		auto expr = &(_40739_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d43dc802:;
		if (it != expr_end) {
			jule::Ptr<_1dce82437_TypeKind> _40821_t = *it;
			{
				((*(_40727_s))).append("__jule_tuple_", 13);
				_1c44a59eb_codeMut(_self_, _40727_s, &(_40821_t));
			}
			_iter_next_1d43dc802:;
			++it;
			goto _iter_begin_1d43dc802;
		}
		_iter_end_1d43dc802:;
	};
}



inline void _1c44a59eb_codeMut(_1c44a3a2c_resultCoder* _self_, jule::Str* _41431_s, jule::Ptr<_1dce82437_TypeKind>* _41444_t) {
	{
		auto &_match_expr{ (*(_41444_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1d43dd814:;
			{
				_1c44a4313_ptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1dce91952_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1d43ddb88:;
			{
				_1c44a4632_sptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1dce8d3dd_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1d43ddbee:;
			{
				_1c44a4951_mapType(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1dce90401_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1d43de150:;
			{
				_1c44a4c70_slice(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1dce8dd4a_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1d43de1b6:;
			{
				_1c44a508e_arr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1dce90ee5_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1d43de22c:;
			{
				_1c44a53ad_func(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1dcd74648_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1d43de293:;
			{
				jule::Ptr<_1dcd8644b_Enum> _42917_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1dcd8644b_Enum>(3);;
				(*(_41431_s))+=static__23b450e4b_toOut(&(_42917_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42917_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1d43de309:;
			{
				jule::Ptr<_1dcd87a46_TypeEnum> _43217_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1dcd87a46_TypeEnum>(4);;
				(*(_41431_s))+=static__23b450e4b_toOut(&(_43217_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43217_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1d43de370:;
			{
				jule::Ptr<_1dcd5e457_StructIns> _43521_si = (*(_41444_t)).get()._field_Kind.cast_ptr<_1dcd5e457_StructIns>(0);;
				(*(_41431_s))+=static__23b452403_structureIns(&(_43521_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1d43de3d6:;
			{
				jule::Ptr<_1dcd83bb8_Trait> _43821_trt = (*(_41444_t)).get()._field_Kind.cast_ptr<_1dcd83bb8_Trait>(2);;
				(*(_41431_s))+=static__23b451b1c_traitDecl(_43821_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1d43de44c:;
			{
				(*(_41431_s))+=(*(_41444_t)).get()._field_Kind.cast_ptr<_1dce89b8c_Prim>(20).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1d43de4b3:;
			{
				_1c44a56cc_tup(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1dce8e950_Tuple>(23));
			}
		}
		else {
			_case_begin_1d43dda01:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:445:13"));;
			}
		}
		_match_end_1d43dd99b:;
	};
}



inline void _1c44a5d1a_codeMut1(_1c44a3a2c_resultCoder* _self_, jule::Str* _44932_s, jule::Ptr<_1dce82437_TypeKind>* _44945_t) {
	jule::Ptr<_1dce8e950_Tuple> _45017_tup = _1dce867e3_Tup((*(_44945_t)).ptr());;
	if ((_45017_tup != nullptr)) {
		_1c44a56cc_tup(_self_, _44932_s, _45017_tup);
	} else {
		(*(_44932_s))+=_1c44a1321_kind((*(_self_))._field_tc.ptr(), (*(_44945_t)));
	};
}



inline jule::Str _1c44a60e5_code(_1c44a3a2c_resultCoder* _self_, jule::Ptr<_1dce82437_TypeKind>* _45828_t) {
	jule::Str _45917_s = jule::Str::alloc(0LL, 20LL);;
	_1c44a59eb_codeMut(_self_, &(_45917_s), _45828_t);
	return _45917_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c44a3a2c_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d43e8a83_Name(_1d43e8797_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d43e8bb5_What(_1d43e8797_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d43e8ce7_Reset(_1d43e8797_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d43e8e29_Short(_1d43e8797_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d43e8797_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d43ebca6_Name(_1d43ec229_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d43ec515_What(_1d43ec229_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d43ec647_Reset(_1d43ec229_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d43ec779_Short(_1d43ec229_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d43ec229_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d440045d_Name(_1d44008d1_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d4400bbc_What(_1d44008d1_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d4400cee_Reset(_1d44008d1_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d4400e31_Short(_1d44008d1_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d44008d1_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d4403b59_Name(_1d44040cc_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d44043b8_What(_1d44040cc_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d44044ea_Reset(_1d44040cc_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d440462c_Short(_1d44040cc_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d44040cc_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d4407311_Name(_1d4407784_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d4407a70_What(_1d4407784_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d4407ba2_Reset(_1d4407784_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d4407cd4_Short(_1d4407784_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d4407784_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c451002d_FlagSet> static__1c4510319_New(void) {
	return jule::new_ptr<_1c451002d_FlagSet>(_1c451002d_FlagSet{._field_flags=jule::Slice<jule::Trait<_1c450d5c0_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1c450d5c0_CommonFlag> _1c4510759_FindFlag(_1c451002d_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d441275b:;
		if (it != expr_end) {
			jule::Trait<_1c450d5c0_CommonFlag> _7221_flag = *it;
			{
				if ((_1c450d5c0_CommonFlag_mptr_data[(_7221_flag).type_offset]._1c44cd9d0_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1d441275b:;
			++it;
			goto _iter_begin_1d441275b;
		}
		_iter_end_1d441275b:;
	};
	return nullptr;;
}



inline jule::Trait<_1c450d5c0_CommonFlag> _1c4510a67_FindFlagShort(_1c451002d_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d441365d:;
		if (it != expr_end) {
			jule::Trait<_1c450d5c0_CommonFlag> _8221_flag = *it;
			{
				if ((_1c450d5c0_CommonFlag_mptr_data[(_8221_flag).type_offset]._1c44cdb12_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1d441365d:;
			++it;
			goto _iter_begin_1d441365d;
		}
		_iter_end_1d441365d:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1c45110d9_Parse(_1c451002d_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1c4512739_argParser _11617_ap = _1c4512739_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1c4513ae2_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline jule::Ptr<_1d4407784_Flag> _1d47375a8_addFlagCommon(_1c451002d_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1d4738b81:;
			{
				goto _match_end_1d4738b2b;
			}
		}
		_match_end_1d4738b2b:;
	};
	if ((_1c4510759_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1c4510a67_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1d4407784_Flag> _14817_flag = jule::new_ptr<_1d4407784_Flag>(_1d4407784_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1c450d5c0_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1c450d5c0_CommonFlag>(_14817_flag, 4)); };
	return _14817_flag;;
}

inline jule::Ptr<_1d44040cc_Flag> _1d47403e6_addFlagCommon(_1c451002d_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1d4741969:;
			{
				goto _match_end_1d47418c0;
			}
		}
		_match_end_1d47418c0:;
	};
	if ((_1c4510759_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1c4510a67_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1d44040cc_Flag> _14817_flag = jule::new_ptr<_1d44040cc_Flag>(_1d44040cc_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1c450d5c0_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1c450d5c0_CommonFlag>(_14817_flag, 3)); };
	return _14817_flag;;
}



inline void _1d47354da_AddVar(_1c451002d_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1d4407784_Flag> _17617_flag = _1d47375a8_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1d473d38e_AddVar(_1c451002d_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1d44040cc_Flag> _17617_flag = _1d47403e6_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1c451002d_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1d441a09e_parseInteger(_1c4512739_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1d441cb0c:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_23a986ae2_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1d441ce5e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_23a986ae2_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1d441d080:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_23a986ae2_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1d441d228:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1d441d28e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1d441c766:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1d441c69a:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1d4422606_parseInteger(_1c4512739_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1d4425120:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_23a986ae2_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1d4425472:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_23a986ae2_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1d4425593:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_23a986ae2_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1d442573b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1d44257a2:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1d4424c79:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1d4424bad:;
	};
	return __jule_func_result;;
}



inline jule::Str _1c4512eed_getData(_1c4512739_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1c4513240_processFlag(_1c4512739_argParser* _self_, jule::Trait<_1c450d5c0_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1d44175b8:;
			{
				jule::Ptr<_1d44040cc_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1d44040cc_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1d4417552:;
	};
	jule::Str _22513_data = _1c4512eed_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1c450d5c0_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1c44cd9d0_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1d4418a70:;
			{
				jule::Ptr<_1d43e8797_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1d43e8797_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1d441a09e_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _24a212ec9_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1c450d5c0_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1c44cd9d0_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1d4419323:;
			{
				jule::Ptr<_1d43ec229_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1d43ec229_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1d4422606_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _24a212a67_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1c450d5c0_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1c44cd9d0_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1d4419389:;
			{
				jule::Ptr<_1d44008d1_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1d44008d1_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _24a219552_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1c450d5c0_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1c44cd9d0_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1d4419400:;
			{
				(*((*(_21735_flag)).cast_ptr<_1d4407784_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1d44192bd:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c45134b5_singleDash(_1c4512739_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d442b8eb:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1c450d5c0_CommonFlag> _26321_flag = _1c4510a67_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1c4513240_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1d442b8eb:;
			++it;
			goto _iter_begin_1d442b8eb;
		}
		_iter_end_1d442b8eb:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c451373a_doubleDash(_1c4512739_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1c450d5c0_CommonFlag> _27617_flag = _1c4510759_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1c4513240_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c4513916_tryArg(_1c4512739_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1c451373a_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1c45134b5_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_28413_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c4513ae2_parse(_1c4512739_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1c4513916_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1d4431923:;
	}
	_iter_end_1d4431923:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1c4512739_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c448bb8b_ObjectCoder> static__1c448c065_New(jule::Ptr<_1de448d4d_IR>* _9424_ir, _1c448a2e9_SerializationInfo _9433_info) {
	jule::Ptr<_1c448bb8b_ObjectCoder> _9517_oc = jule::new_ptr<_1c448bb8b_ObjectCoder>(_1c448bb8b_ObjectCoder{._field_ir=(*(_9424_ir)), ._field_info=_9433_info, });;
	_9517_oc.get()._field_ec=static__23b43c07a_new(&(_9517_oc));
	_9517_oc.get()._field_sc=static__23b433cca_new(&(_9517_oc));
	_9517_oc.get()._field_tc=static__1c449b4a3_new(&(_9517_oc));
	_9517_oc.get()._field_dc=static__23b44bd37_new(_9517_oc);
	return _9517_oc;;
}



inline void _1c448c2da_write(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Str _10625_s) {
	_self_.get()._field_Obj+=_10625_s;
}



inline void _1c448c560_writeR(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Str* _11027_s) {
	_self_.get()._field_Obj+=(*(_11027_s));
}



inline void _1c448c73b_addIndent(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _1c448c917_doneIndent(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1c448cae3_indent(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1c448ce01_findAnyType(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dce82437_TypeKind>* _12936_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6dd7749:;
		if (it != expr_end) {
			jule::I64 _13014_i = it - expr->begin();
			jule::Ptr<_1dce82437_TypeKind> _13021_at = *it;
			{
				if (_1dce82aec_Equal(_13021_at, (*(_12936_t)))) {
					return _13014_i;;
				};
			}
			_iter_next_1c6dd7749:;
			++it;
			_13014_i++;
			goto _iter_begin_1c6dd7749;
		}
		_iter_end_1c6dd7749:;
	};
	return -1LL;;
}



inline jule::I64 _1c448d20e_pushAnyType(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dce82437_TypeKind> _13835_t) {
	if ((_1dce85391_Enum(_13835_t.ptr()) != nullptr)) {
		_13835_t=_1dce85391_Enum(_13835_t.ptr()).get()._field_Kind.get()._field_Kind;
	};
	jule::I64 _14217_i = _1c448ce01_findAnyType(_self_, &(_13835_t));;
	if ((_14217_i != -1LL)) {
		return _14217_i;;
	};
	_14217_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1dce82437_TypeKind>> &__jule_push_dest = _self_.get()._field_anyTypeMap; __jule_push_dest.push(_13835_t); };
	jule::Str _14813_si = _24a223b77_Itoa(_14217_i);;
	if ((_1dce84db8_Sptr(_13835_t.ptr()) != nullptr)) {
		jule::Str _15017_elem_kind = _1c44a1321_kind(_self_.get()._field_tc.ptr(), _1dce84db8_Sptr(_13835_t.ptr()).get()._field_Elem);;
		jule::Str _15117_kind = _1c449c1da_asSptr(_self_.get()._field_tc.ptr(), _15017_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_15017_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_15117_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _17717_comparable = _1dce83966_Comparable(_13835_t.ptr());;
		jule::Str _17817_kind = _1c44a1321_kind(_self_.get()._field_tc.ptr(), _13835_t);;
		if (_17817_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1dce827de_Str(_13835_t.ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_17817_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_17717_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_1dce8512c_Ptr(_13835_t.ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_17817_kind;
		} else {
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_17717_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_17717_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _14217_i;;
}



inline void _1c448d484_pushResultIns(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd74648_FnIns>* _24638_f) {
	jule::Str _24713_s = _1c44a60e5_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_24638_f)).get()._field_Result));;
	jule::Bool _24817_ok = false;;
	_self_.get()._field_resultMap.lookup(_24713_s, nullptr, &(_24817_ok));
	if (_24817_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_24713_s]=false;
	jule::Str _25317_obj = jule::Str::alloc(0LL, 128LL);;
	(_25317_obj).append("struct ", 7);
	_25317_obj+=_24713_s;
	(_25317_obj).append(" {\n", 3);
	{
		auto expr = &(_1dce867e3_Tup((*(_24638_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6de9e10:;
		if (it != expr_end) {
			jule::I64 _25714_i = it - expr->begin();
			jule::Ptr<_1dce82437_TypeKind> _25721_t = *it;
			{
				(_25317_obj).append("\t", 1);
				_25317_obj+=_1c44a1321_kind(_self_.get()._field_tc.ptr(), _25721_t);
				(_25317_obj).append(" ", 1);
				(_25317_obj).append("__jule_result_arg", 17);
				_25317_obj+=_24a223b77_Itoa(_25714_i);
				(_25317_obj).append(";\n", 2);
			}
			_iter_next_1c6de9e10:;
			++it;
			_25714_i++;
			goto _iter_begin_1c6de9e10;
		}
		_iter_end_1c6de9e10:;
	};
	(_25317_obj).append("};\n", 3);
	{ jule::Slice<jule::Str> &__jule_push_dest = _self_.get()._field_resultDecls; __jule_push_dest.push(_25317_obj); };
}



inline void _1c448d709_pushResult(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd71997_Fn>* _26935_f) {
	if ((_1dcd71e09_IsVoid((*(_26935_f)).ptr()) || ((*(_26935_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _27317_n = (*(_26935_f)).get()._field_Instances.len();;
	if (((*(_26935_f)).get()._field_Generics.len() == 0LL)) {
		_27317_n=1LL;
	};
	{
		auto expr = (*(_26935_f)).get()._field_Instances.slice(0LL, _27317_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c6ded61c:;
		if (it != expr_end) {
			jule::Ptr<_1dcd74648_FnIns> _27721_ins = *it;
			{
				_1c448d484_pushResultIns(_self_, &(_27721_ins));
			}
			_iter_next_1c6ded61c:;
			++it;
			goto _iter_begin_1c6ded61c;
		}
		_iter_end_1c6ded61c:;
	};
}



inline jule::I64 _1c448dab1_findTypeOffsetS(_1c448bb8b_ObjectCoder* _self_, jule::Ptr<_1dcd83bb8_Trait> _28230_t, jule::Ptr<_1dcd5e457_StructIns> _28245_s) {
	if ((_28230_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6deec39:;
		if (it != expr_end) {
			jule::Ptr<_1c448a7b1_traitHash> *_28616_hash = it;
			{
				if ((((*(_28616_hash)).get()._field_t == _28230_t) && ((*(_28616_hash)).get()._field_s == _28245_s))) {
					return (*(_28616_hash)).get()._field_i;;
				};
			}
			_iter_next_1c6deec39:;
			++it;
			goto _iter_begin_1c6deec39;
		}
		_iter_end_1c6deec39:;
	};
	return -1LL;;
}



inline jule::I64 _1c448de68_findTypeOffset(_1c448bb8b_ObjectCoder* _self_, jule::Ptr<_1dcd83bb8_Trait> _29429_t, jule::Ptr<_1dce82437_TypeKind> _29444_k) {
	if ((_29429_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1dcd5e457_StructIns> _29817_s = nullptr;;
	if ((_1dce84db8_Sptr(_29444_k.ptr()) != nullptr)) {
		_29444_k=_1dce84db8_Sptr(_29444_k.ptr()).get()._field_Elem;
	};
	_29817_s=_1dce860a6_Struct(_29444_k.ptr());
	if ((_29817_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1c448dab1_findTypeOffsetS(_self_, _29429_t, _29817_s));;
}



inline void _1c448e287_pushAndWriteMaskMapper(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd83bb8_Trait> _30946_t1, jule::Ptr<_1dcd83bb8_Trait> _30962_t2) {
	jule::Str _31017_ident = jule::Str("__jule_trait_offset_mapper_", 27);;
	_31017_ident+=_24a22354a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30962_t2))), 15LL);
	(_31017_ident).append("_to_", 4);
	_31017_ident+=_24a22354a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30946_t1))), 15LL);
	_1c448c560_writeR(_self_, &(_31017_ident));
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e04689:;
		if (it != expr_end) {
			_1c448ab68_traitCast _31716_m = *it;
			{
				if (((_31716_m._field_t1 == _30946_t1) && (_31716_m._field_t2 == _30962_t2))) {
					return;;
				};
			}
			_iter_next_1c6e04689:;
			++it;
			goto _iter_begin_1c6e04689;
		}
		_iter_end_1c6e04689:;
	};
	{ jule::Slice<_1c448ab68_traitCast> &__jule_push_dest = _self_.get()._field_traitCastMap; __jule_push_dest.push(_1c448ab68_traitCast{._field_t1=_30946_t1, ._field_t2=_30962_t2}); };
	;
	(_self_.get()._field_anyObj).append("jule::Int", 9);
	(_self_.get()._field_anyObj).append(" ", 1);
	_self_.get()._field_anyObj+=_31017_ident;
	(_self_.get()._field_anyObj).append("(const jule::Int offset) noexcept { ", 36);
	{
		auto expr = &(_30946_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e05305:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _33621_s1 = *it;
			{
				{
					auto expr = &(_30962_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6e065d1:;
					if (it != expr_end) {
						jule::Ptr<_1dcd5b641_Struct> _33720_s2 = *it;
						{
							if ((_33621_s1 == _33720_s2)) {
								{
									auto expr = &(_33621_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c6e07aaa:;
									if (it != expr_end) {
										jule::Ptr<_1dcd5e457_StructIns> _33933_s1i = *it;
										{
											jule::I64 _34029_i1 = _1c448dab1_findTypeOffsetS(_self_.ptr(), _30946_t1, _33933_s1i);;
											jule::I64 _34129_i2 = _1c448dab1_findTypeOffsetS(_self_.ptr(), _30962_t2, _33933_s1i);;
											(_self_.get()._field_anyObj).append("if (offset == ", 14);
											_self_.get()._field_anyObj+=_24a223b77_Itoa(_34129_i2);
											(_self_.get()._field_anyObj).append(") return ", 9);
											_self_.get()._field_anyObj+=_24a223b77_Itoa(_34029_i1);
											(_self_.get()._field_anyObj).append("; ", 2);
										}
										_iter_next_1c6e07aaa:;
										++it;
										goto _iter_begin_1c6e07aaa;
									}
									_iter_end_1c6e07aaa:;
								};
							};
						}
						_iter_next_1c6e065d1:;
						++it;
						goto _iter_begin_1c6e065d1;
					}
					_iter_end_1c6e065d1:;
				};
			}
			_iter_next_1c6e05305:;
			++it;
			goto _iter_begin_1c6e05305;
		}
		_iter_end_1c6e05305:;
	};
	(_self_.get()._field_anyObj).append(" return ", 8);
	_self_.get()._field_anyObj+=_24a223b77_Itoa(0LL);
	(_self_.get()._field_anyObj).append("; }\n", 4);
}



inline void _1c448e50c_locInfo(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_23ae26b42_Token>* _35728_t) {
	jule::Str *_35814_loc = &((*(_35728_t)).get()._field_File.get()._field_Path);;
	if (_2388e9cbb_Production) {
		{
			
			if (_23a986ae2_HasPrefix((*(_35814_loc)), _23ab0be43_PathStdlib)) {
				_case_begin_1c6e0ae98:;
				{
					_1c448c2da_write(_self_, _23b449ad2_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)).slice((_23a9924c1_Dir(_23ab0be43_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_23a986ae2_HasPrefix((*(_35814_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1c6e0b55e:;
				{
					_1c448c2da_write(_self_, _23b449ad2_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)).slice((_23a9924c1_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1c6e0ab02:;
				{
					_1c448c2da_write(_self_, _23b449ad2_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)))));
				}
			}
			_match_end_1c6e0aa36:;
		};
	} else {
		_1c448c2da_write(_self_, _23b449ad2_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)))));
	};
	_1c448c2da_write(_self_, jule::Str(":", 1));
	_1c448c2da_write(_self_, _24a223b77_Itoa((*(_35728_t)).get()._field_Row));
	_1c448c2da_write(_self_, jule::Str(":", 1));
	_1c448c2da_write(_self_, _24a223b77_Itoa((*(_35728_t)).get()._field_Column));
}



inline void _1c448e6d8_head(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c4482b0a_Time _38413_time = static__1c448319e_Now();;
	_1c4482467_AbsTime _38513_abs = _1c4484766_Abs(&_38413_time);;
	_1c448c2da_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1c448c2da_write(_self_, jule::Str("// JuleC version: ", 18));
	_1c448c2da_write(_self_, jule::Str("jule0.0.15 @master", 18));
	_1c448c2da_write(_self_, jule::Str("\n", 1));
	_1c448c2da_write(_self_, jule::Str("// Date: ", 9));
	_1c448c2da_write(_self_, _24a22354a_FmtUint(_38513_abs._field_Day, 10LL));
	_1c448c2da_write(_self_, jule::Str("/", 1));
	_1c448c2da_write(_self_, _24a22354a_FmtUint(_38513_abs._field_Month, 10LL));
	_1c448c2da_write(_self_, jule::Str("/", 1));
	_1c448c2da_write(_self_, _24a22354a_FmtUint(_38513_abs._field_Year, 10LL));
	_1c448c2da_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1c448c560_writeR(_self_, &(_self_.get()._field_info._field_Compiler));
	_1c448c2da_write(_self_, jule::Str(" ", 1));
	_1c448c560_writeR(_self_, &(_self_.get()._field_info._field_CompilerCommand));
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
	if (_2388e9cbb_Production) {
		_1c448c2da_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_2388e9628_RC))) {
		_1c448c2da_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_2388e9a02_Safety))) {
		_1c448c2da_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1c448e8b4_links(_self_);
	_1c448c2da_write(_self_, jule::Str("\n\n#include \"", 12));
	_1c448c560_writeR(_self_, &(_23ab0c729_PathApi));
	_1c448c2da_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1c448e8b4_links(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e156de:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _42216_used = *it;
			{
				{
					
					if ((!(_42216_used.get()._field_Binded))) {
						_case_begin_1c6e1617e:;
						{
							goto _iter_next_1c6e156de;
						}
					}
					else if (_23aa1ad30_IsStdHeaderPath(_42216_used.get()._field_Path)) {
						_case_begin_1c6e16206:;
						{
							_1c448c2da_write(_self_, jule::Str("#include ", 9));
							_1c448c560_writeR(_self_, &(_42216_used.get()._field_Path));
							_1c448c2da_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_23aa1b0d8_IsValidHeaderExt(_23a991b0d_Ext(_42216_used.get()._field_Path))) {
						_case_begin_1c6e1627d:;
						{
							_1c448c2da_write(_self_, jule::Str("#include \"", 10));
							_1c448c560_writeR(_self_, &(_42216_used.get()._field_Path));
							_1c448c2da_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1c6e1605d:;
				};
			}
			_iter_next_1c6e156de:;
			++it;
			goto _iter_begin_1c6e156de;
		}
		_iter_end_1c6e156de:;
	};
}



inline void _1c448eb39_prepareStructure(_1c448bb8b_ObjectCoder* _self_, jule::Ptr<_1dcd5b641_Struct>* _43840_s) {
	{
		auto expr = &((*(_43840_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e17966:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5e457_StructIns> _43921_ins = *it;
			{
				{
					auto expr = &(_43921_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6e18bed:;
					if (it != expr_end) {
						jule::Ptr<_1dcd71997_Fn> _44025_m = *it;
						{
							if (_44025_m.get()._field_Statically) {
								goto _iter_next_1c6e18bed;
							};
							{
								auto expr = &(_44025_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c6e19957:;
								if (it != expr_end) {
									jule::Ptr<_1dcd74648_FnIns> _44429_mins = *it;
									{
										jule::Ptr<_1dcd73779_ParamIns> _44529_p = _44429_mins.get()._field_Params[0LL];;
										if ((!(_1dcd709a7_IsRef(_44529_p.get()._field_Decl.ptr())))) {
											_44529_p.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1c449a4b3_customType>(_1c449a4b3_customType{._field_kind=_1c449c4e8_asPtr((*(_self_))._field_tc.ptr(), _1c44a1321_kind((*(_self_))._field_tc.ptr(), _44529_p.get()._field_Kind))}), 27)});
										} else {
											_44529_p.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1c449a4b3_customType>(_1c449a4b3_customType{._field_kind=_1c44a1321_kind((*(_self_))._field_tc.ptr(), _44529_p.get()._field_Kind)}), 27)});
										};
									}
									_iter_next_1c6e19957:;
									++it;
									goto _iter_begin_1c6e19957;
								}
								_iter_end_1c6e19957:;
							};
						}
						_iter_next_1c6e18bed:;
						++it;
						goto _iter_begin_1c6e18bed;
					}
					_iter_end_1c6e18bed:;
				};
			}
			_iter_next_1c6e17966:;
			++it;
			goto _iter_begin_1c6e17966;
		}
		_iter_end_1c6e17966:;
	};
}



inline void _1c448ed15_prepareStructures(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e15dc6:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _46521_s = *it;
			{
				if ((_46521_s.get()._field_Token != nullptr)) {
					_1c448eb39_prepareStructure(_self_.ptr(), &(_46521_s));
				};
			}
			_iter_next_1c6e15dc6:;
			++it;
			goto _iter_begin_1c6e15dc6;
		}
		_iter_end_1c6e15dc6:;
	};
}



inline void _1c449008a_iterPackages(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1dcdd031e_Package>*)> _47232_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e1d296:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _47321_used = *it;
			{
				if ((!(_47321_used.get()._field_Binded))) {
					_47232_f(&(_47321_used.get()._field_Package));
				};
			}
			_iter_next_1c6e1d296:;
			++it;
			goto _iter_begin_1c6e1d296;
		}
		_iter_end_1c6e1d296:;
	};
	_47232_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1c4490266_buildTraitMap(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c449008a_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dcdd031e_Package>*)>([=](jule::Ptr<_1dcdd031e_Package>* _48235_pkg) mutable -> void {
		_1c4498527_iterFiles(_48235_pkg, jule::Fn<void(jule::Ptr<_1dce502b2_SymbolTable>*)>([=](jule::Ptr<_1dce502b2_SymbolTable>* _48336_file) mutable -> void {
			{
				auto expr = &((*(_48336_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c6e21387:;
				if (it != expr_end) {
					jule::Ptr<_1dcd83bb8_Trait> _48429_t = *it;
					{
						if ((_48429_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_48429_t.get()._field_Implemented.len() == 0LL)) {
							{ jule::Slice<jule::Ptr<_1c448a7b1_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(jule::new_ptr<_1c448a7b1_traitHash>(_1c448a7b1_traitHash{._field_t=_48429_t, ._field_s=nullptr, ._field_i=0LL})); };
							goto _iter_next_1c6e21387;
						};
						jule::I64 _49629_i = 0LL;;
						{
							auto expr = &(_48429_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c6e21b29:;
							if (it != expr_end) {
								jule::Ptr<_1dcd5b641_Struct> _49733_s = *it;
								{
									{
										auto expr = &(_49733_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c6e22a70:;
										if (it != expr_end) {
											jule::Ptr<_1dcd5e457_StructIns> _49837_ins = *it;
											{
												{ jule::Slice<jule::Ptr<_1c448a7b1_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(jule::new_ptr<_1c448a7b1_traitHash>(_1c448a7b1_traitHash{._field_t=_48429_t, ._field_s=_49837_ins, ._field_i=_49629_i})); };
												(_49629_i)++;
											}
											_iter_next_1c6e22a70:;
											++it;
											goto _iter_begin_1c6e22a70;
										}
										_iter_end_1c6e22a70:;
									};
								}
								_iter_next_1c6e21b29:;
								++it;
								goto _iter_begin_1c6e21b29;
							}
							_iter_end_1c6e21b29:;
						};
						_1c449922b_pushMethodsFromInherits(&(_48429_t), &(_48429_t));
					}
					_iter_next_1c6e21387:;
					++it;
					goto _iter_begin_1c6e21387;
				}
				_iter_end_1c6e21387:;
			};
		}));
	}));
}



inline void _1c4490442_traitDecls(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c449008a_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dcdd031e_Package>*)>([=](jule::Ptr<_1dcdd031e_Package>* _51635_pkg) mutable -> void {
		_1c4498527_iterFiles(_51635_pkg, jule::Fn<void(jule::Ptr<_1dce502b2_SymbolTable>*)>([=](jule::Ptr<_1dce502b2_SymbolTable>* _51736_file) mutable -> void {
			{
				auto expr = &((*(_51736_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c6e25a84:;
				if (it != expr_end) {
					jule::Ptr<_1dcd83bb8_Trait> _51829_t = *it;
					{
						if ((_51829_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1c448cae3_indent(_self_);
						_1c448c2da_write(_self_, jule::Str("struct ", 7));
						_1c448c2da_write(_self_, static__23b451b1c_traitDecl(_51829_t));
						_1c448c2da_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1c6e25a84:;
					++it;
					goto _iter_begin_1c6e25a84;
				}
				_iter_end_1c6e25a84:;
			};
		}));
	}));
}



inline void _1c44906b7_structurePlainDecl(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5b641_Struct>* _53143_s) {
	{
		auto expr = &((*(_53143_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e254ac:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5e457_StructIns> _53221_ins = *it;
			{
				_1c448c2da_write(_self_, jule::Str("struct ", 7));
				_1c448c2da_write(_self_, static__23b452403_structureIns(&(_53221_ins)));
				_1c448c2da_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1c6e254ac:;
			++it;
			goto _iter_begin_1c6e254ac;
		}
		_iter_end_1c6e254ac:;
	};
}



inline void _1c4490893_structurePlainDecls(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e283e4:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _54021_s = *it;
			{
				if ((_54021_s.get()._field_Token != nullptr)) {
					_1c44906b7_structurePlainDecl(_self_, &(_54021_s));
				};
			}
			_iter_next_1c6e283e4:;
			++it;
			goto _iter_begin_1c6e283e4;
		}
		_iter_end_1c6e283e4:;
	};
}



inline void _1c4490b18_fieldDecl(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5d962_FieldIns>* _54734_f) {
	_1c448c2da_write(_self_, _1c44a1321_kind(_self_.get()._field_tc.ptr(), (*(_54734_f)).get()._field_Kind));
	_1c448c2da_write(_self_, jule::Str(" ", 1));
	_1c448c2da_write(_self_, static__23b45269a_field(&((*(_54734_f)).get()._field_Decl)));
	if (((*(_54734_f)).get()._field_Default == nullptr)) {
		if (_1c44a814c_shouldInitialized(&((*(_54734_f)).get()._field_Kind))) {
			_1c448c2da_write(_self_, jule::Str(" = ", 3));
			_23b4491a8_initExpr(_self_.get()._field_ec, (*(_54734_f)).get()._field_Kind);
		};
	} else {
		_1c448c2da_write(_self_, jule::Str(" = ", 3));
		_23b43eb82_possibleRefExpr(_self_.get()._field_ec, (*(_54734_f)).get()._field_Default.get()._field_Model);
	};
	_1c448c2da_write(_self_, jule::Str(";", 1));
}



inline void _1c4490d8d_structureDestructor(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5e457_StructIns>* _56544_s) {
	;
	jule::Ptr<_1dcd71997_Fn> _56813_disposeMethod = _1dcd60403_FindMethod((*(_56544_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _56917_disposed = static__1dce0718c_Dispose(_56813_disposeMethod);;
	if ((!(_56917_disposed))) {
		return;;
	};
	_1c448c2da_write(_self_, jule::Str("~", 1));
	_1c448c2da_write(_self_, static__23b452403_structureIns(_56544_s));
	_1c448c2da_write(_self_, jule::Str("(void) { ", 9));
	_1c448c2da_write(_self_, static__23b4515cd_func(&(_56813_disposeMethod)));
	_1c448c2da_write(_self_, jule::Str("(this); }", 9));
}



inline void _1c4491135_structureDeriveDefsDecls(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5e457_StructIns>* _58145_s) {
	if (_1dcd5ce6c_IsDerives((*(_58145_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1c448cae3_indent(_self_);
		_1c448c2da_write(_self_, _23b44c145_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_58145_s)).get()._field_Decl)));
		_1c448c2da_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1c4491465_structureOperatorEq(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Str* _58940_ident, jule::Ptr<_1dcd5e457_StructIns>* _58957_s) {
	if ((!((*(_58957_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_58957_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1c4491b4c_structureOperator(_self_, _58940_ident, &((*(_58957_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1c448cae3_indent(_self_);
	if (_1de450a14_Inline) {
		_1c448c2da_write(_self_, jule::Str("inline ", 7));
	};
	_1c448c2da_write(_self_, jule::Str("bool operator==(", 16));
	_1c448c560_writeR(_self_, _58940_ident);
	_1c448c2da_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_58957_s)).get()._field_Fields.len() > 0LL)) {
		_1c448c73b_addIndent(_self_);
		_1c448c2da_write(_self_, jule::Str("\n", 1));
		_1c448cae3_indent(_self_);
		_1c448c2da_write(_self_, jule::Str("return ", 7));
		_1c448c73b_addIndent(_self_);
		jule::Bool _61221_writed = false;;
		{
			auto expr = &((*(_58957_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6e34b5e:;
			if (it != expr_end) {
				jule::Ptr<_1dcd5d962_FieldIns> _61325_f = *it;
				{
					jule::Ptr<_1dcd5e457_StructIns> _61521_strct = _1dce860a6_Struct(_61325_f.get()._field_Kind.ptr());;
					if ((((_61521_strct != nullptr) && (_61521_strct.get()._field_Decl != nullptr)) && _61521_strct.get()._field_Decl.get()._field_Binded)) {
						goto _iter_next_1c6e34b5e;
					};
					if (_61221_writed) {
						_1c448c2da_write(_self_, jule::Str(" &&", 3));
					};
					_61221_writed=true;
					_1c448c2da_write(_self_, jule::Str("\n", 1));
					_1c448cae3_indent(_self_);
					_1c448c2da_write(_self_, jule::Str("this->", 6));
					jule::Str _62621_fIdent = static__23b45269a_field(&(_61325_f.get()._field_Decl));;
					_1c448c560_writeR(_self_, &(_62621_fIdent));
					_1c448c2da_write(_self_, jule::Str(" == _other.", 11));
					_1c448c560_writeR(_self_, &(_62621_fIdent));
				}
				_iter_next_1c6e34b5e:;
				++it;
				goto _iter_begin_1c6e34b5e;
			}
			_iter_end_1c6e34b5e:;
		};
		_1c448c917_doneIndent(_self_);
		if ((!(_61221_writed))) {
			_1c448c2da_write(_self_, jule::Str("true", 4));
		};
		_1c448c2da_write(_self_, jule::Str(";\n", 2));
		_1c448c917_doneIndent(_self_);
		_1c448cae3_indent(_self_);
		_1c448c2da_write(_self_, jule::Str("}", 1));
	} else {
		_1c448c2da_write(_self_, jule::Str(" return true; }", 15));
	};
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
}



inline void _1c4491784_structureOperatorNotEq(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Str* _64543_ident, jule::Ptr<_1dcd5e457_StructIns>* _64560_s) {
	if ((!((*(_64560_s)).get()._field_Comparable))) {
		return;;
	};
	_1c448cae3_indent(_self_);
	if (_1de450a14_Inline) {
		_1c448c2da_write(_self_, jule::Str("inline ", 7));
	};
	_1c448c2da_write(_self_, jule::Str("bool operator!=(", 16));
	_1c448c560_writeR(_self_, _64543_ident);
	_1c448c2da_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1c4491b4c_structureOperator(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Str* _65938_ident, jule::Ptr<_1dcd74648_FnIns>* _65955_f, jule::Str _65966_op) {
	if (((*(_65955_f)) == nullptr)) {
		return;;
	};
	jule::Bool _66413_unary = ((*(_65955_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _66513_assignment = _1dcd71e09_IsVoid((*(_65955_f)).get()._field_Decl.ptr());;
	_1c448cae3_indent(_self_);
	if (_1de450a14_Inline) {
		_1c448c2da_write(_self_, jule::Str("inline ", 7));
	};
	if (_66513_assignment) {
		_1c448c560_writeR(_self_, _65938_ident);
		_1c448c2da_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1dce84b54_Prim((*(_65955_f)).get()._field_Result.ptr()) == nullptr)) {
			_1c448c560_writeR(_self_, _65938_ident);
		} else {
			_1c448c2da_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1c448c2da_write(_self_, jule::Str(" operator", 9));
	_1c448c560_writeR(_self_, &(_65966_op));
	_1c448c2da_write(_self_, jule::Str("(", 1));
	if ((!(_66413_unary))) {
		jule::Ptr<_1dcd73779_ParamIns> _68721_p = (*(_65955_f)).get()._field_Params[1LL];;
		_1c448c2da_write(_self_, _1c44a02ba_paramIns(_self_.get()._field_tc.ptr(), &(_68721_p)));
		_1c448c2da_write(_self_, jule::Str(" _other", 7));
	};
	_1c448c2da_write(_self_, jule::Str(") { ", 4));
	if ((!(_66513_assignment))) {
		_1c448c2da_write(_self_, jule::Str("return ", 7));
	};
	_1c448c2da_write(_self_, static__23b451875_funcIns(_65955_f));
	if ((!(_66413_unary))) {
		_1c448c2da_write(_self_, jule::Str("(this, _other); ", 16));
		if (_66513_assignment) {
			_1c448c2da_write(_self_, jule::Str("return *this; ", 14));
		};
		_1c448c2da_write(_self_, jule::Str("}", 1));
	} else {
		_1c448c2da_write(_self_, jule::Str("(this); }", 9));
	};
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
}



inline void _1c4491dc2_structureOperators(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5e457_StructIns>* _70843_s) {
	jule::Str _70913_ident = static__23b452403_structureIns(_70843_s);;
	_1c4491465_structureOperatorEq(_self_, &(_70913_ident), _70843_s);
	_1c4491784_structureOperatorNotEq(_self_, &(_70913_ident), _70843_s);
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1c4491b4c_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1c4492147_structureInsDecl(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5e457_StructIns>* _74741_s) {
	{
		auto expr = &((*(_74741_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45b6833:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _74821_m = *it;
			{
				if (_1c449977b_isHeadDecl(&(_74821_m))) {
					_1c4493456_funcDecl(_self_, &(_74821_m), false);
				};
			}
			_iter_next_1d45b6833:;
			++it;
			goto _iter_begin_1d45b6833;
		}
		_iter_end_1d45b6833:;
	};
	_1c448c2da_write(_self_, jule::Str("struct ", 7));
	jule::Str _75513_outIdent = static__23b452403_structureIns(_74741_s);;
	_1c448c560_writeR(_self_, &(_75513_outIdent));
	_1c448c2da_write(_self_, jule::Str(" {\n", 3));
	_1c448c73b_addIndent(_self_);
	{
		auto expr = &((*(_74741_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45b83a1:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5d962_FieldIns> _76121_f = *it;
			{
				_1c448cae3_indent(_self_);
				_1c4490b18_fieldDecl(_self_, &(_76121_f));
				_1c448c2da_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1d45b83a1:;
			++it;
			goto _iter_begin_1d45b83a1;
		}
		_iter_end_1d45b83a1:;
	};
	_1c448cae3_indent(_self_);
	_1c4490d8d_structureDestructor(_self_, _74741_s);
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
	_1c4491135_structureDeriveDefsDecls(_self_, _74741_s);
	_1c4491dc2_structureOperators(_self_, _74741_s);
	_1c448c2da_write(_self_, jule::Str("\n", 1));
	_1c448c917_doneIndent(_self_);
	_1c448cae3_indent(_self_);
	_1c448c2da_write(_self_, jule::Str("};", 2));
}



inline void _1c44923bc_structureDecl(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5b641_Struct>* _78138_s) {
	{
		auto expr = &((*(_78138_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45bb22d:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5e457_StructIns> _78221_ins = *it;
			{
				_1c4492147_structureInsDecl(_self_, &(_78221_ins));
			}
			_iter_next_1d45bb22d:;
			++it;
			goto _iter_begin_1d45bb22d;
		}
		_iter_end_1d45bb22d:;
	};
}



inline void _1c4492598_structureDecls(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45bb96a:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _78821_s = *it;
			{
				if ((_78821_s.get()._field_Token != nullptr)) {
					_1c44923bc_structureDecl(_self_, &(_78821_s));
					_1c448c2da_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1d45bb96a:;
			++it;
			goto _iter_begin_1d45bb96a;
		}
		_iter_end_1d45bb96a:;
	};
}



inline void _1c4492774_structureMethodDecls(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45bd30c:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _79721_s = *it;
			{
				if ((_79721_s.get()._field_Token != nullptr)) {
					{
						auto expr = &(_79721_s.get()._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d45be110:;
						if (it != expr_end) {
							jule::Ptr<_1dcd5e457_StructIns> _79929_ins = *it;
							{
								{
									auto expr = &(_79929_ins.get()._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1d45be94b:;
									if (it != expr_end) {
										jule::Ptr<_1dcd71997_Fn> _80033_m = *it;
										{
											if ((!(_1c449977b_isHeadDecl(&(_80033_m))))) {
												_1c448d709_pushResult(_self_, &(_80033_m));
												_1c4493456_funcDecl(_self_, &(_80033_m), false);
											};
										}
										_iter_next_1d45be94b:;
										++it;
										goto _iter_begin_1d45be94b;
									}
									_iter_end_1d45be94b:;
								};
							}
							_iter_next_1d45be110:;
							++it;
							goto _iter_begin_1d45be110;
						}
						_iter_end_1d45be110:;
					};
				};
			}
			_iter_next_1d45bd30c:;
			++it;
			goto _iter_begin_1d45bd30c;
		}
		_iter_end_1d45bd30c:;
	};
}



inline void _1c44929e9_paramsDecls(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>* _81236_params) {
	if (((*(_81236_params)).len() == 0LL)) {
		_1c448c2da_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1c448c2da_write(_self_, jule::Str("(", 1));
	{
		auto expr = _81236_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45c1002:;
		if (it != expr_end) {
			jule::I64 _81914_i = it - expr->begin();
			jule::Ptr<_1dcd73779_ParamIns> _81921_p = *it;
			{
				_1c448c2da_write(_self_, _1c44a02ba_paramIns(_self_.get()._field_tc.ptr(), &(_81921_p)));
				if ((((*(_81236_params)).len() - _81914_i) > 1LL)) {
					_1c448c2da_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1d45c1002:;
			++it;
			_81914_i++;
			goto _iter_begin_1d45c1002;
		}
		_iter_end_1d45c1002:;
	};
	_1c448c2da_write(_self_, jule::Str(")", 1));
}



inline void _1c4492d18_funcHead(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd74648_FnIns>* _82933_f, jule::Bool _82944_ptr) {
	if ((((!(_82944_ptr)) && _1de450a14_Inline) && (!(_1dcd723d2_IsEntryPoint((*(_82933_f)).get()._field_Decl.ptr()))))) {
		_1c448c2da_write(_self_, jule::Str("inline ", 7));
	};
	_1c44a08e7_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _82933_f);
	if (_82944_ptr) {
		_1c448c2da_write(_self_, jule::Str("(*", 2));
		_1c448c2da_write(_self_, static__23b451875_funcIns(_82933_f));
		_1c448c2da_write(_self_, jule::Str(")", 1));
	} else {
		_1c448c2da_write(_self_, jule::Str(" ", 1));
		_1c448c2da_write(_self_, static__23b451875_funcIns(_82933_f));
	};
}



inline void _1c4493137_funcDeclIns(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd74648_FnIns>* _84436_f, jule::Bool _84447_ptr) {
	_1c448cae3_indent(_self_);
	_1c4492d18_funcHead(_self_, _84436_f, _84447_ptr);
	_1c44929e9_paramsDecls(_self_, &((*(_84436_f)).get()._field_Params));
	_1c448c2da_write(_self_, jule::Str(";\n", 2));
}



inline void _1c4493456_funcDecl(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd71997_Fn>* _85133_f, jule::Bool _85141_ptr) {
	{
		auto expr = &((*(_85133_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45c6d71:;
		if (it != expr_end) {
			jule::Ptr<_1dcd74648_FnIns> _85221_c = *it;
			{
				_1c4493137_funcDeclIns(_self_, &(_85221_c), _85141_ptr);
			}
			_iter_next_1d45c6d71:;
			++it;
			goto _iter_begin_1d45c6d71;
		}
		_iter_end_1d45c6d71:;
	};
}



inline void _1c449381e_funcDeclTrait(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd83bb8_Trait>* _85738_t, jule::Ptr<_1dcd71997_Fn>* _85754_f, jule::Bool _85762_ptr) {
	{
		auto expr = &((*(_85754_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45c7ed7:;
		if (it != expr_end) {
			jule::Ptr<_1dcd74648_FnIns> _85821_c = *it;
			{
				jule::Ptr<_1dce82437_TypeKind> _85921_k = _85821_c.get()._field_Params[0LL].get()._field_Kind;;
				_85821_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>((*(_85738_t)), 2)});
				_1c4493137_funcDeclIns(_self_, &(_85821_c), _85762_ptr);
				_85821_c.get()._field_Params[0LL].get()._field_Kind=_85921_k;
			}
			_iter_next_1d45c7ed7:;
			++it;
			goto _iter_begin_1d45c7ed7;
		}
		_iter_end_1d45c7ed7:;
	};
}



inline void _1c44939ea_funcDecls(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c449008a_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dcdd031e_Package>*)>([=](jule::Ptr<_1dcdd031e_Package>* _86735_pkg) mutable -> void {
		_1c4498527_iterFiles(_86735_pkg, jule::Fn<void(jule::Ptr<_1dce502b2_SymbolTable>*)>([=](jule::Ptr<_1dce502b2_SymbolTable>* _86836_file) mutable -> void {
			{
				auto expr = &((*(_86836_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1d45cbb34:;
				if (it != expr_end) {
					jule::Ptr<_1dcd71997_Fn> _86929_f = *it;
					{
						if (((!(_86929_f.get()._field_Binded)) && (_86929_f.get()._field_Token != nullptr))) {
							_1c448d709_pushResult(_self_, &(_86929_f));
							_1c4493456_funcDecl(_self_, &(_86929_f), false);
						};
					}
					_iter_next_1d45cbb34:;
					++it;
					goto _iter_begin_1d45cbb34;
				}
				_iter_end_1d45cbb34:;
			};
		}));
	}));
}



inline void _1c4493d19_traitDataTypeMethods(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd83bb8_Trait>* _87945_owner, jule::Ptr<_1dcd83bb8_Trait>* _87965_t) {
	{
		auto expr = &((*(_87965_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45cb79e:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _88021_m = *it;
			{
				jule::Ptr<_1dcd74648_FnIns> _88121_ins = _88021_m.get()._field_Instances[0LL];;
				jule::Ptr<_1dcd73779_ParamIns> _88221_p = _88121_ins.get()._field_Params[0LL];;
				_88221_p.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>((*(_87965_t)), 2)});
				{
					auto expr = _88121_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1d45cda37:;
					if (it != expr_end) {
						jule::I64 _88618_i = it - expr.begin();
						jule::Ptr<_1dcd73779_ParamIns> _88625_ip = *it;
						{
							if (_23ae2967d_IsAnonIdent(_88625_ip.get()._field_Decl.get()._field_Ident)) {
								_88625_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _24a223b77_Itoa(_88618_i));
							};
						}
						_iter_next_1d45cda37:;
						++it;
						_88618_i++;
						goto _iter_begin_1d45cda37;
					}
					_iter_end_1d45cda37:;
				};
				if ((!(_2388e9cbb_Production))) {
					jule::Ptr<_1dcd73779_ParamIns> _89225_lp = _88121_ins.get()._field_Params[(_88121_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _89225_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1d45d3124:;
							{
								goto _match_end_1d45d1a07;
							}
						}
						else {
							_case_begin_1d45d1b4a:;
							{
								{ jule::Slice<jule::Ptr<_1dcd73779_ParamIns>> &__jule_push_dest = _88121_ins.get()._field_Params; __jule_push_dest.push(jule::new_ptr<_1dcd73779_ParamIns>(_1dcd73779_ParamIns{._field_Decl=jule::new_ptr<_1dcd7015a_Param>(_1dcd7015a_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1c449a4b3_customType>(_1c449a4b3_customType{._field_kind=jule::Str("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1d45d1a07:;
					};
				};
				_1c448d709_pushResult(_self_, &(_88021_m));
				_1c449381e_funcDeclTrait(_self_, _87945_owner, &(_88021_m), true);
			}
			_iter_next_1d45cb79e:;
			++it;
			goto _iter_begin_1d45cb79e;
		}
		_iter_end_1d45cb79e:;
	};
}



inline void _1c4493ee5_traitDataTypes(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c449008a_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dcdd031e_Package>*)>([=](jule::Ptr<_1dcdd031e_Package>* _91535_pkg) mutable -> void {
		_1c4498527_iterFiles(_91535_pkg, jule::Fn<void(jule::Ptr<_1dce502b2_SymbolTable>*)>([=](jule::Ptr<_1dce502b2_SymbolTable>* _91636_file) mutable -> void {
			{
				auto expr = &((*(_91636_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1d45d4d6d:;
				if (it != expr_end) {
					jule::Ptr<_1dcd83bb8_Trait> _91729_t = *it;
					{
						if ((_91729_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_91729_t.get()._field_Methods.len() == 0LL)) {
							goto _iter_next_1d45d4d6d;
						};
						_1c448c2da_write(_self_, jule::Str("struct ", 7));
						_1c448c2da_write(_self_, static__23b451b1c_traitDecl(_91729_t));
						_1c448c2da_write(_self_, jule::Str("MptrData", 8));
						_1c448c2da_write(_self_, jule::Str(" {\n", 3));
						_1c448c73b_addIndent(_self_);
						_1c4493d19_traitDataTypeMethods(_self_, &(_91729_t), &(_91729_t));
						_1c448c917_doneIndent(_self_);
						_1c448cae3_indent(_self_);
						_1c448c2da_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1d45d4d6d:;
					++it;
					goto _iter_begin_1d45d4d6d;
				}
				_iter_end_1d45d4d6d:;
			};
		}));
	}));
}



inline void _1c449426a_paramIns(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd73779_ParamIns>* _93833_p) {
	_1c448c2da_write(_self_, _1c44a02ba_paramIns(_self_.get()._field_tc.ptr(), _93833_p));
	_1c448c2da_write(_self_, jule::Str(" ", 1));
	_1c448c2da_write(_self_, static__23b451db4_param(&((*(_93833_p)).get()._field_Decl)));
}



inline void _1c44944e0_paramsIns(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>* _94434_params) {
	if (((*(_94434_params)).len() == 0LL)) {
		_1c448c2da_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1c448c2da_write(_self_, jule::Str("(", 1));
	{
		auto expr = _94434_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45d915d:;
		if (it != expr_end) {
			jule::I64 _95014_i = it - expr->begin();
			jule::Ptr<_1dcd73779_ParamIns> _95021_p = *it;
			{
				_1c449426a_paramIns(_self_, &(_95021_p));
				if ((((*(_94434_params)).len() - _95014_i) > 1LL)) {
					_1c448c2da_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1d45d915d:;
			++it;
			_95014_i++;
			goto _iter_begin_1d45d915d;
		}
		_iter_end_1d45d915d:;
	};
	_1c448c2da_write(_self_, jule::Str(")", 1));
}



inline void _1c449480e_varInitExpr(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dce05cb2_Var>* _95936_v, jule::Fn<void(void)> _95945_init) {
	if ((*(_95936_v)).get()._field_Statically) {
		_1c448c2da_write(_self_, jule::Str("static ", 7));
	};
	_1c448c2da_write(_self_, _1c44a1321_kind(_self_.get()._field_tc.ptr(), (*(_95936_v)).get()._field_Kind.get()._field_Kind));
	_1c448c2da_write(_self_, jule::Str(" ", 1));
	if ((*(_95936_v)).get()._field_Reference) {
		_1c448c2da_write(_self_, jule::Str("*", 1));
	};
	_1c448c2da_write(_self_, static__23b452942_var((*(_95936_v))));
	if ((_95945_init != nullptr)) {
		_1c448c2da_write(_self_, jule::Str(" = ", 3));
		_95945_init();
	};
	_1c448c2da_write(_self_, jule::Str(";", 1));
}



inline void _1c4494a84_var(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dce05cb2_Var> _97727_v) {
	if (_23ae293d6_IsIgnoreIdent(_97727_v.get()._field_Ident)) {
		return;;
	};
	if (((_97727_v.get()._field_Value != nullptr) && (_97727_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_97727_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_97727_v.get()._field_Reference) {
				_1c449480e_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1c448c2da_write(_self_, jule::Str("&(", 2));
					_23b448e33_model(_self_.get()._field_ec, _97727_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1c448c2da_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1c449480e_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_23b43eb82_possibleRefExpr(_self_.get()._field_ec, _97727_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1c449480e_varInitExpr(_self_, &(_97727_v), nullptr);
		return;;
	};
	if (_97727_v.get()._field_Reference) {
		_1c449480e_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1c448c2da_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1c44a814c_shouldInitialized(&(_97727_v.get()._field_Kind.get()._field_Kind))) {
		_1c449480e_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_23b4491a8_initExpr(_self_.get()._field_ec, _97727_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1c449480e_varInitExpr(_self_, &(_97727_v), nullptr);
}



inline void _1c4494d09_funcIns(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd74648_FnIns>* _100832_f) {
	_1c4492d18_funcHead(_self_, _100832_f, false);
	_1c44944e0_paramsIns(_self_, &((*(_100832_f)).get()._field_Params));
	_1c448c2da_write(_self_, jule::Str(" ", 1));
	_23b439000_funcScope(_self_.get()._field_sc, (*(_100832_f)));
	if (((*(_100832_f)).get()._field_Scope != nullptr)) {
		_1c448c2da_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _1c449507e_func(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd71997_Fn>* _101829_f) {
	{
		auto expr = &((*(_101829_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45e67b9:;
		if (it != expr_end) {
			jule::Ptr<_1dcd74648_FnIns> _101921_ins = *it;
			{
				_1c4494d09_funcIns(_self_, &(_101921_ins));
			}
			_iter_next_1d45e67b9:;
			++it;
			goto _iter_begin_1d45e67b9;
		}
		_iter_end_1d45e67b9:;
	};
}



inline void _1c449539d_funcTrait(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1c448a7b1_traitHash>* _102434_hash, jule::Ptr<_1dcd71997_Fn>* _102457_f) {
	jule::Str _102513_ident = (*(_102457_f)).get()._field_Ident;;
	{
		auto expr = &((*(_102457_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d45e7b1c:;
		if (it != expr_end) {
			jule::Ptr<_1dcd74648_FnIns> _102621_ins = *it;
			{
				_102621_ins.get()._field_Scope=nullptr;
				(*(_102457_f)).get()._field_Ident=_102513_ident;
				((*(_102457_f)).get()._field_Ident).append("_", 1);
				(*(_102457_f)).get()._field_Ident+=(*(_102434_hash)).get()._field_t.get()._field_Ident;
				((*(_102457_f)).get()._field_Ident).append("_", 1);
				(*(_102457_f)).get()._field_Ident+=_24a223b77_Itoa((*(_102434_hash)).get()._field_i);
				jule::Ptr<_1dce82437_TypeKind> _103521_k = _102621_ins.get()._field_Params[0LL].get()._field_Kind;;
				_102621_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>((*(_102434_hash)).get()._field_t, 2)});
				_1c4494d09_funcIns(_self_, &(_102621_ins));
				_102621_ins.get()._field_Params[0LL].get()._field_Kind=_103521_k;
			}
			_iter_next_1d45e7b1c:;
			++it;
			goto _iter_begin_1d45e7b1c;
		}
		_iter_end_1d45e7b1c:;
	};
	(*(_102457_f)).get()._field_Ident=_102513_ident;
}



inline void _1c44956bc_traitWrapper(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd71997_Fn>* _104337_m, jule::Ptr<_1c448a7b1_traitHash>* _104350_hash) {
	_1c449539d_funcTrait(_self_, _104350_hash, _104337_m);
	if (((*(_104350_hash)).get()._field_s == nullptr)) {
		if (_2388e9cbb_Production) {
			_1c448c2da_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1c448c2da_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _105513_ptr = (!(_1dcd709a7_IsRef((*(_104337_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_1dcd71997_Fn> _105717_sm = _1dcd60403_FindMethod((*(_104350_hash)).get()._field_s.ptr(), (*(_104337_m)).get()._field_Ident, false);;
	if (((_105717_sm == nullptr) || (_105717_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_1c448c73b_addIndent(_self_);
	_1c448c2da_write(_self_, jule::Str("{\n", 2));
	_1c448cae3_indent(_self_);
	if ((_105717_sm.get()._field_Exceptional || (!(_1dcd71e09_IsVoid(_105717_sm.ptr()))))) {
		_1c448c2da_write(_self_, jule::Str("return ", 7));
	};
	_1c448c2da_write(_self_, static__23b4515cd_func(&(_105717_sm)));
	_1c448c2da_write(_self_, jule::Str("(", 1));
	if (_105513_ptr) {
		_1c448c2da_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_1c448c2da_write(_self_, _1c449e891_structureIns(_self_.get()._field_tc.ptr(), (*(_104350_hash)).get()._field_s));
		_1c448c2da_write(_self_, jule::Str(">(", 2));
		if ((!(_2388e9cbb_Production))) {
			_1c448c2da_write(_self_, jule::Str("_00___file", 10));
		};
		_1c448c2da_write(_self_, jule::Str(")", 1));
	} else {
		_1c448c2da_write(_self_, jule::Str("_self_.data.as<", 15));
		_1c448c2da_write(_self_, _1c449e583_structure(_self_.get()._field_tc.ptr(), _105717_sm.get()._field_Owner));
		_1c448c2da_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_104337_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1d46007a1:;
		if (it != expr_end) {
			jule::Ptr<_1dcd7015a_Param> _108316_mp = *it;
			{
				_1c448c2da_write(_self_, jule::Str(", ", 2));
				_1c448c2da_write(_self_, static__23b451db4_param(&(_108316_mp)));
			}
			_iter_next_1d46007a1:;
			++it;
			goto _iter_begin_1d46007a1;
		}
		_iter_end_1d46007a1:;
	};
	_1c448c2da_write(_self_, jule::Str(");\n}\n", 5));
	_1c448c917_doneIndent(_self_);
}



inline void _1c4495898_traitWrappers(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4604233:;
		if (it != expr_end) {
			jule::Ptr<_1c448a7b1_traitHash> _109221_hash = *it;
			{
				{
					auto expr = &(_109221_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d4604ad5:;
					if (it != expr_end) {
						jule::Ptr<_1dcd71997_Fn> _109325_m = *it;
						{
							_1c44956bc_traitWrapper(_self_, &(_109325_m), &(_109221_hash));
						}
						_iter_next_1d4604ad5:;
						++it;
						goto _iter_begin_1d4604ad5;
					}
					_iter_end_1d4604ad5:;
				};
			}
			_iter_next_1d4604233:;
			++it;
			goto _iter_begin_1d4604233;
		}
		_iter_end_1d4604233:;
	};
}



inline void _1c4495bb7_traitDataMethods(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd83bb8_Trait>* _109941_t, jule::Ptr<_1c448a7b1_traitHash>* _109953_hash) {
	{
		auto expr = &((*(_109941_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4605388:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _110021_m = *it;
			{
				jule::Str _110117_mIdent = static__23b4515cd_func(&(_110021_m));;
				_1c448cae3_indent(_self_);
				_1c448c2da_write(_self_, jule::Str(".", 1));
				_1c448c560_writeR(_self_, &(_110117_mIdent));
				_1c448c2da_write(_self_, jule::Str("=", 1));
				_1c448c560_writeR(_self_, &(_110117_mIdent));
				_1c448c2da_write(_self_, jule::Str("_", 1));
				_1c448c560_writeR(_self_, &((*(_109953_hash)).get()._field_t.get()._field_Ident));
				_1c448c2da_write(_self_, jule::Str("_", 1));
				_1c448c2da_write(_self_, _24a223b77_Itoa((*(_109953_hash)).get()._field_i));
				_1c448c2da_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_1d4605388:;
			++it;
			goto _iter_begin_1d4605388;
		}
		_iter_end_1d4605388:;
	};
}



inline void _1c4495ed6_traitData(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1c448a7b1_traitHash>* _111534_hash, jule::Ptr<_1dcd83bb8_Trait>* _111557_old) {
	if (((*(_111534_hash)).get()._field_t.get()._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _111913_ident = static__23b451b1c_traitDecl((*(_111534_hash)).get()._field_t);;
	if (((*(_111534_hash)).get()._field_t != (*(_111557_old)))) {
		if (((*(_111557_old)) != nullptr)) {
			_1c448c917_doneIndent(_self_);
			_1c448cae3_indent(_self_);
			_1c448c2da_write(_self_, jule::Str("};\n", 3));
		};
		_1c448c2da_write(_self_, jule::Str("static ", 7));
		_1c448c560_writeR(_self_, &(_111913_ident));
		_1c448c2da_write(_self_, jule::Str("MptrData ", 9));
		_1c448c560_writeR(_self_, &(_111913_ident));
		_1c448c2da_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_111557_old))=(*(_111534_hash)).get()._field_t;
		_1c448c73b_addIndent(_self_);
	};
	_1c448cae3_indent(_self_);
	_1c448c2da_write(_self_, jule::Str("{\n", 2));
	_1c448c73b_addIndent(_self_);
	_1c4495bb7_traitDataMethods(_self_, &((*(_111534_hash)).get()._field_t), _111534_hash);
	_1c448c917_doneIndent(_self_);
	_1c448cae3_indent(_self_);
	_1c448c2da_write(_self_, jule::Str("},\n", 3));
}



inline void _1c44961b2_traitDatas(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	jule::Ptr<_1dcd83bb8_Trait> _114417_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d460d00b:;
		if (it != expr_end) {
			jule::Ptr<_1c448a7b1_traitHash> _114521_hash = *it;
			{
				_1c4495ed6_traitData(_self_, &(_114521_hash), &(_114417_old));
			}
			_iter_next_1d460d00b:;
			++it;
			goto _iter_begin_1d460d00b;
		}
		_iter_end_1d460d00b:;
	};
	if ((_114417_old != nullptr)) {
		_1c448c917_doneIndent(_self_);
		_1c448cae3_indent(_self_);
		_1c448c2da_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1c449638d_globals(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d460e9e1:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> _115621_v = *it;
			{
				_1c448c2da_write(_self_, _1c44a1321_kind(_self_.get()._field_tc.ptr(), _115621_v.get()._field_Kind.get()._field_Kind));
				_1c448c2da_write(_self_, jule::Str(" ", 1));
				_1c448c2da_write(_self_, static__23b452942_var(_115621_v));
				_1c448c2da_write(_self_, jule::Str(" = ", 3));
				_23b448e33_model(_self_.get()._field_ec, _115621_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1c448c2da_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1d460e9e1:;
			++it;
			goto _iter_begin_1d460e9e1;
		}
		_iter_end_1d460e9e1:;
	};
}



inline void _1c4496569_decls(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c4490442_traitDecls(_self_);
	_1c4490893_structurePlainDecls(_self_);
	_1c4492598_structureDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1c4492774_structureMethodDecls(_self_);
	_1c44939ea_funcDecls(_self_);
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
	_1c4493ee5_traitDataTypes(_self_);
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
	_1c4495898_traitWrappers(_self_);
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
	_1c44961b2_traitDatas(_self_);
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1c449638d_globals(_self_);
}



inline void _1c44967de_structureMethods(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5e457_StructIns>* _118441_s) {
	{
		auto expr = &((*(_118441_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4614ce3:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _118521_f = *it;
			{
				_1c449507e_func(_self_, &(_118521_f));
				_1c448c2da_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1d4614ce3:;
			++it;
			goto _iter_begin_1d4614ce3;
		}
		_iter_end_1d4614ce3:;
	};
}



inline void _1c4496a64_structureDeriveDefs(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5e457_StructIns>* _119144_s) {
	if (_1dcd5ce6c_IsDerives((*(_119144_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1c448c2da_write(_self_, _23b44c453_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_119144_s)).get()._field_Decl)));
		_1c448c2da_write(_self_, jule::Str("{\n", 2));
		_1c448c73b_addIndent(_self_);
		_1c448cae3_indent(_self_);
		_1c448c2da_write(_self_, _1c449e891_structureIns(_self_.get()._field_tc.ptr(), (*(_119144_s))));
		_1c448c2da_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_119144_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d4617873:;
			if (it != expr_end) {
				jule::Ptr<_1dcd5d962_FieldIns> _119920_f = *it;
				{
					jule::Str _120021_ident = static__23b45269a_field(&(_119920_f.get()._field_Decl));;
					_1c448cae3_indent(_self_);
					_1c448c2da_write(_self_, jule::Str("clone.", 6));
					_1c448c560_writeR(_self_, &(_120021_ident));
					_1c448c2da_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1c448c560_writeR(_self_, &(_120021_ident));
					_1c448c2da_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1d4617873:;
				++it;
				goto _iter_begin_1d4617873;
			}
			_iter_end_1d4617873:;
		};
		_1c448cae3_indent(_self_);
		_1c448c2da_write(_self_, jule::Str("return clone;\n", 14));
		_1c448c917_doneIndent(_self_);
		_1c448c2da_write(_self_, jule::Str("}", 1));
	};
}



inline void _1c4496cd9_structureOstream(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5e457_StructIns>* _121541_s) {
	_1c448cae3_indent(_self_);
	_1c448c2da_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1c448c2da_write(_self_, static__23b452403_structureIns(_121541_s));
	_1c448c2da_write(_self_, jule::Str(" _Src) {\n", 9));
	_1c448c73b_addIndent(_self_);
	_1c448cae3_indent(_self_);
	jule::Ptr<_1dcd71997_Fn> _122317_fts = _1dcd60403_FindMethod((*(_121541_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1dce07434_Str(_122317_fts)) {
		_1c448c2da_write(_self_, jule::Str("_Stream << ", 11));
		_1c448c2da_write(_self_, static__23b4515cd_func(&(_122317_fts)));
		_1c448c2da_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1c448c2da_write(_self_, jule::Str("_Stream << \"", 12));
		_1c448c560_writeR(_self_, &((*(_121541_s)).get()._field_Decl.get()._field_Ident));
		_1c448c2da_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_121541_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d461daee:;
			if (it != expr_end) {
				jule::I64 _123318_i = it - expr->begin();
				jule::Ptr<_1dcd5d962_FieldIns> _123325_f = *it;
				{
					_1c448cae3_indent(_self_);
					_1c448c2da_write(_self_, jule::Str("_Stream << \"", 12));
					_1c448c560_writeR(_self_, &(_123325_f.get()._field_Decl.get()._field_Ident));
					_1c448c2da_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1dcd5e457_StructIns> _124021_strct = _1dce860a6_Struct(_123325_f.get()._field_Kind.ptr());;
					if ((((_124021_strct != nullptr) && (_124021_strct.get()._field_Decl != nullptr)) && _124021_strct.get()._field_Decl.get()._field_Binded)) {
						_1c448c2da_write(_self_, jule::Str(" cpp.", 5));
						_1c448c2da_write(_self_, static__23b45269a_field(&(_123325_f.get()._field_Decl)));
						_1c448c2da_write(_self_, jule::Str("\"", 1));
					} else {
						_1c448c2da_write(_self_, jule::Str("\" << _Src.", 10));
						_1c448c2da_write(_self_, static__23b45269a_field(&(_123325_f.get()._field_Decl)));
					};
					if (((_123318_i + 1LL) < (*(_121541_s)).get()._field_Fields.len())) {
						_1c448c2da_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1c448c2da_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1d461daee:;
				++it;
				_123318_i++;
				goto _iter_begin_1d461daee;
			}
			_iter_end_1d461daee:;
		};
		_1c448cae3_indent(_self_);
		_1c448c2da_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1c448cae3_indent(_self_);
	_1c448c2da_write(_self_, jule::Str("return _Stream;\n", 16));
	_1c448c917_doneIndent(_self_);
	_1c448c2da_write(_self_, jule::Str("}", 1));
}



inline void _1c449705e_structureIns(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5e457_StructIns>* _126637_s) {
	_1c44967de_structureMethods(_self_, _126637_s);
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
	_1c4496a64_structureDeriveDefs(_self_, _126637_s);
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
	_1c4496cd9_structureOstream(_self_, _126637_s);
}



inline void _1c44972d4_structure(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcd5b641_Struct>* _127434_s) {
	{
		auto expr = &((*(_127434_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d462563e:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5e457_StructIns> _127521_ins = *it;
			{
				_1c449705e_structureIns(_self_, &(_127521_ins));
				_1c448c2da_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1d462563e:;
			++it;
			goto _iter_begin_1d462563e;
		}
		_iter_end_1d462563e:;
	};
}



inline void _1c44974b0_structures(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d462670b:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5b641_Struct> _128221_s = *it;
			{
				if ((_128221_s.get()._field_Token != nullptr)) {
					_1c44972d4_structure(_self_, &(_128221_s));
					_1c448c2da_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1d462670b:;
			++it;
			goto _iter_begin_1d462670b;
		}
		_iter_end_1d462670b:;
	};
}



inline void _1c449768b_funcs(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c449008a_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dcdd031e_Package>*)>([=](jule::Ptr<_1dcdd031e_Package>* _129135_pkg) mutable -> void {
		_1c4498527_iterFiles(_129135_pkg, jule::Fn<void(jule::Ptr<_1dce502b2_SymbolTable>*)>([=](jule::Ptr<_1dce502b2_SymbolTable>* _129236_file) mutable -> void {
			{
				auto expr = &((*(_129236_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1d462970e:;
				if (it != expr_end) {
					jule::Ptr<_1dcd71997_Fn> _129329_f = *it;
					{
						if (((!(_2388e935e_Test)) && _1c44a7da5_hasDirective(&(_129329_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1d462970e;
						};
						if (((!(_129329_f.get()._field_Binded)) && (_129329_f.get()._field_Token != nullptr))) {
							_1c449507e_func(_self_, &(_129329_f));
							_1c448c2da_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1d462970e:;
					++it;
					goto _iter_begin_1d462970e;
				}
				_iter_end_1d462970e:;
			};
		}));
	}));
}



inline void _1c4497911_pushInit(jule::Ptr<_1c448bb8b_ObjectCoder> _self_, jule::Ptr<_1dcdd031e_Package>* _130633_pkg) {
	_1c4498527_iterFiles(_130633_pkg, jule::Fn<void(jule::Ptr<_1dce502b2_SymbolTable>*)>([=](jule::Ptr<_1dce502b2_SymbolTable>* _130732_file) mutable -> void {
		{
			auto expr = &((*(_130732_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d462bb2e:;
			if (it != expr_end) {
				jule::Ptr<_1dcd71997_Fn> _130820_f = *it;
				{
					if (_130820_f.get()._field_Ident.equal("init", 4)) {
						_1c448cae3_indent(_self_);
						_1c448c2da_write(_self_, static__23b4515cd_func(&(_130820_f)));
						_1c448c2da_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1d462bb2e:;
				++it;
				goto _iter_begin_1d462bb2e;
			}
			_iter_end_1d462bb2e:;
		};
	}));
}



inline void _1c4497adc_initCaller(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c448c2da_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1c448c73b_addIndent(_self_);
	_1c449008a_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dcdd031e_Package>*)>([=](jule::Ptr<_1dcdd031e_Package>* _132135_pkg) mutable -> void {
		_1c4497911_pushInit(_self_, _132135_pkg);
	}));
	_1c448c917_doneIndent(_self_);
	_1c448c2da_write(_self_, jule::Str("\n}", 2));
}



inline void _1c4497cb8_end(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c448c2da_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_2388e935e_Test) {
		_1c448c2da_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1c448c2da_write(_self_, jule::Str("entry_point();", 14));
	};
	_1c448c2da_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1c4497e94_serializeHead(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c448ed15_prepareStructures(_self_);
	_1c4490266_buildTraitMap(_self_);
	_1c448e6d8_head(_self_);
	_1c448c2da_write(_self_, jule::Str("\n", 1));
	_1c4496569_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _135621_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d463276c:;
			if (it != expr_end) {
				jule::Str _135720_decl = *it;
				{
					_135621_head+=_135720_decl;
					_self_.get()._field_declPos+=_135720_decl.len();
				}
				_iter_next_1d463276c:;
				++it;
				goto _iter_begin_1d463276c;
			}
			_iter_end_1d463276c:;
		};
		_135621_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_135621_head;
	};
	_1c448c2da_write(_self_, jule::Str("\n", 1));
	_1c44974b0_structures(_self_);
	_1c449768b_funcs(_self_);
	_1c4497adc_initCaller(_self_);
	_1c448c2da_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _137221_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_137221_head+=_self_.get()._field_anyObj;
		_137221_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_137221_head;
	};
}



inline void _1c4498170_Serialize(jule::Ptr<_1c448bb8b_ObjectCoder> _self_) {
	_1c4497e94_serializeHead(_self_);
	_1c4497cb8_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1c448bb8b_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1de54c36e_ObjectDeadCode> static__1de54c803_new(jule::Ptr<_1de448d4d_IR>* _3424_ir) {
	return jule::new_ptr<_1de54c36e_ObjectDeadCode>(_1de54c36e_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1c7413516_isLive(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dcd83bb8_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1dcd83bb8_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c7415260:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1c7414e74:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7415947:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1c7415947:;
			++it;
			_5213_i++;
			goto _iter_begin_1c7415947;
		}
		_iter_end_1c7415947:;
	};
	return false;;
}

inline jule::Bool _1c7418175_isLive(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dcd74648_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1dcd74648_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c741a30e:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1c741a254:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c741aad4:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1c741aad4:;
			++it;
			_5213_i++;
			goto _iter_begin_1c741aad4;
		}
		_iter_end_1c741aad4:;
	};
	return false;;
}

inline jule::Bool _1c7422569_isLive(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dcd5e457_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1dcd5e457_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c74237e0:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1c742356a:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c74238bc:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1c74238bc:;
			++it;
			_5213_i++;
			goto _iter_begin_1c74238bc;
		}
		_iter_end_1c74238bc:;
	};
	return false;;
}

inline jule::Bool _1c7425e63_isLive(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dce05cb2_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1c742799d:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1c742787c:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c742820c:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1c742820c:;
			++it;
			_5213_i++;
			goto _iter_begin_1c742820c;
		}
		_iter_end_1c742820c:;
	};
	return false;;
}



inline void _1c7413868_pushLive(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dcd83bb8_Trait> _6035_t) {
	{
		
{
			_case_begin_1c7417262:;
			{
				{ jule::Slice<jule::Ptr<_1dcd83bb8_Trait>> &__jule_push_dest = _self_.get()._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1c7416e10:;
	};
}

inline void _1c7418b8c_pushLive(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dcd74648_FnIns> _6035_t) {
	{
		
{
			_case_begin_1c741ca81:;
			{
				{ jule::Slice<jule::Ptr<_1dcd74648_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1c741c80b:;
	};
}

inline void _1c741eba4_pushLive(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dcd5e457_StructIns> _6035_t) {
	{
		
{
			_case_begin_1c742139d:;
			{
				{ jule::Slice<jule::Ptr<_1dcd5e457_StructIns>> &__jule_push_dest = _self_.get()._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1c74210b2:;
	};
}

inline void _1c74262b5_pushLive(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dce05cb2_Var> _6035_t) {
	{
		
{
			_case_begin_1c7429ce1:;
			{
				{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = _self_.get()._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1c7429c14:;
	};
}



inline void _1de57e99a_setReferencesAsLive(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dcd775a2_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1dcd77b8a_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1dcd77e98_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1c7412119:;
					{
						jule::Ptr<_1dcd83bb8_Trait> _8225_t = _7921_ref.cast_ptr<_1dcd83bb8_Trait>(&__jule_any_type10);;
						if (_1c7413516_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1c7411635;
						};
						_1c7413868_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c74141e8:;
							if (it != expr_end) {
								jule::Ptr<_1dcd71997_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c74177e5:;
										if (it != expr_end) {
											jule::Ptr<_1dcd74648_FnIns> _8833_mins = *it;
											{
												if (_1c7418175_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1c74177e5;
												};
												_1c7418b8c_pushLive(_self_, _8833_mins);
												_1de57e99a_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1c74177e5:;
											++it;
											goto _iter_begin_1c74177e5;
										}
										_iter_end_1c74177e5:;
									};
								}
								_iter_next_1c74141e8:;
								++it;
								goto _iter_begin_1c74141e8;
							}
							_iter_end_1c74141e8:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1c7412180:;
					{
						jule::Ptr<_1dcd74648_FnIns> _9725_f = _7921_ref.cast_ptr<_1dcd74648_FnIns>(&__jule_any_type7);;
						if (_1c7418175_isLive(_self_, &(_9725_f))) {
							goto _match_end_1c74122a1;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1c7422569_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1c741eba4_pushLive(_self_, _9725_f.get()._field_Owner);
								_1de57e99a_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1c7418b8c_pushLive(_self_, _9725_f);
						_1de57e99a_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1c74123b1:;
					{
						jule::Ptr<_1dce05cb2_Var> _11025_v = _7921_ref.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8);;
						if (_1c7425e63_isLive(_self_, &(_11025_v))) {
							goto _match_end_1c74122a1;
						};
						_1c74262b5_pushLive(_self_, _11025_v);
						_1de57e99a_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1c7412427:;
					{
						jule::Ptr<_1dcd5e457_StructIns> _11725_s = _7921_ref.cast_ptr<_1dcd5e457_StructIns>(&__jule_any_type9);;
						if (_1c7422569_isLive(_self_, &(_11725_s))) {
							goto _match_end_1c74122a1;
						};
						_1c741eba4_pushLive(_self_, _11725_s);
						_1de57e99a_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c742c376:;
							if (it != expr_end) {
								jule::Ptr<_1dcd71997_Fn> _12329_m = *it;
								{
									{
										auto expr = &(_12329_m.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c742d355:;
										if (it != expr_end) {
											jule::Ptr<_1dcd74648_FnIns> _12433_ins = *it;
											{
												if (_1c7418175_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1c742d355;
												};
												if (_1de582382_isTraitMethod(&(_11725_s), &(_12433_ins))) {
													_1c7418b8c_pushLive(_self_, _12433_ins);
													_1de57e99a_setReferencesAsLive(_self_, &(_12433_ins.get()._field_Refers));
												};
											}
											_iter_next_1c742d355:;
											++it;
											goto _iter_begin_1c742d355;
										}
										_iter_end_1c742d355:;
									};
								}
								_iter_next_1c742c376:;
								++it;
								goto _iter_begin_1c742c376;
							}
							_iter_end_1c742c376:;
						};
					}
				}
				_match_end_1c74122a1:;
			};
		}
	_iter_next_1c7411635:;
	}
	_iter_end_1c7411635:;;
}



inline void _1de57ec20_inits(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dcdd031e_Package>* _14130_pkg) {
	{
		auto expr = &((*(_14130_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c742ed3a:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &(_14221_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c742d8a5:;
					if (it != expr_end) {
						jule::Ptr<_1dcd71997_Fn> _14325_f = *it;
						{
							if (_14325_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_1dcd74648_FnIns> _14529_ins = _14325_f.get()._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1dcd74648_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_14529_ins); };
								_1de57e99a_setReferencesAsLive(_self_, &(_14529_ins.get()._field_Refers));
							};
						}
						_iter_next_1c742d8a5:;
						++it;
						goto _iter_begin_1c742d8a5;
					}
					_iter_end_1c742d8a5:;
				};
			}
			_iter_next_1c742ed3a:;
			++it;
			goto _iter_begin_1c742ed3a;
		}
		_iter_end_1c742ed3a:;
	};
}



inline void _1de57ee95_collectLivePackage(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dcdd031e_Package>* _15343_pkg) {
	_1de57ec20_inits(_self_, _15343_pkg);
	if (_2388e935e_Test) {
		{
			auto expr = &((*(_15343_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c74328dc:;
			if (it != expr_end) {
				jule::Ptr<_1dce502b2_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &(_15925_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c7433206:;
						if (it != expr_end) {
							jule::Ptr<_1dcd71997_Fn> _16029_f = *it;
							{
								if (_1de581eec_hasDirective(&(_16029_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1dcd74648_FnIns> _16233_ins = _16029_f.get()._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1dcd74648_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_16233_ins); };
									_1de57e99a_setReferencesAsLive(_self_, &(_16233_ins.get()._field_Refers));
								};
							}
							_iter_next_1c7433206:;
							++it;
							goto _iter_begin_1c7433206;
						}
						_iter_end_1c7433206:;
					};
				}
				_iter_next_1c74328dc:;
				++it;
				goto _iter_begin_1c74328dc;
			}
			_iter_end_1c74328dc:;
		};
	};
}



inline void _1de580171_collectLive(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7430ce7:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _17221_used = *it;
			{
				if ((!(_17221_used.get()._field_Binded))) {
					_1de57ee95_collectLivePackage(_self_, &(_17221_used.get()._field_Package));
				};
			}
			_iter_next_1c7430ce7:;
			++it;
			goto _iter_begin_1c7430ce7;
		}
		_iter_end_1c7430ce7:;
	};
	_1de57ee95_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1dcd71997_Fn> _18017_main = _1dcdd1760_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1dcd74648_FnIns> _18117_ins = _18017_main.get()._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1dcd74648_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_18117_ins); };
	_1de57e99a_setReferencesAsLive(_self_, &(_18117_ins.get()._field_Refers));
}



inline void _1de5803e6_removeDeadGlobals(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1dce05cb2_Var>>* _18642_vars) {
	jule::I64 _18717_i = 0LL;;
	while ((_18717_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1dce05cb2_Var> _18917_v = (*(_18642_vars))[_18717_i];;
			if (_1c7425e63_isLive(_self_, &(_18917_v))) {
				(_18717_i)++;
				goto _iter_next_1c743787b;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18717_i),(*(_18642_vars)).slice((_18717_i + 1LL)));
		}
	_iter_next_1c743787b:;
	}
	_iter_end_1c743787b:;;
}



inline void _1de58066b_removeDeadFns(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1dcd71997_Fn>>* _19838_funcs) {
	jule::I64 _19917_i = 0LL;;
	while ((_19917_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1dcd71997_Fn> _20121_f = (*(_19838_funcs))[_19917_i];;
			jule::I64 _20221_j = 0LL;;
			while ((_20221_j < _20121_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1dcd74648_FnIns> _20421_ins = _20121_f.get()._field_Instances[_20221_j];;
					if (_1c7418175_isLive(_self_, &(_20421_ins))) {
						(_20221_j)++;
						goto _iter_next_1c743aa05;
					};
					_20121_f.get()._field_Instances=jule::append(_20121_f.get()._field_Instances.slice(0LL, _20221_j),_20121_f.get()._field_Instances.slice((_20221_j + 1LL)));
				}
			_iter_next_1c743aa05:;
			}
			_iter_end_1c743aa05:;;
			if ((_20121_f.get()._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19917_i),(*(_19838_funcs)).slice((_19917_i + 1LL)));
				goto _iter_next_1c74392a6;
			};
			(_19917_i)++;
		}
	_iter_next_1c74392a6:;
	}
	_iter_end_1c74392a6:;;
}



inline void _1de5808e1_removeDeadStructs(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1dcd5b641_Struct>>* _21942_structs) {
	jule::I64 _22017_i = 0LL;;
	while ((_22017_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1dcd5b641_Struct> _22221_s = (*(_21942_structs))[_22017_i];;
			jule::I64 _22321_j = 0LL;;
			while ((_22321_j < _22221_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1dcd5e457_StructIns> _22525_ins = _22221_s.get()._field_Instances[_22321_j];;
					_1de58066b_removeDeadFns(_self_, &(_22525_ins.get()._field_Methods));
					if (((_22525_ins.get()._field_Methods.len() != 0LL) || _1c7422569_isLive(_self_, &(_22525_ins)))) {
						(_22321_j)++;
						goto _iter_next_1c743e696;
					};
					_22221_s.get()._field_Instances=jule::append(_22221_s.get()._field_Instances.slice(0LL, _22321_j),_22221_s.get()._field_Instances.slice((_22321_j + 1LL)));
				}
			_iter_next_1c743e696:;
			}
			_iter_end_1c743e696:;;
			if ((_22221_s.get()._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22017_i),(*(_21942_structs)).slice((_22017_i + 1LL)));
				goto _iter_next_1c743d70b;
			};
			(_22017_i)++;
		}
	_iter_next_1c743d70b:;
	}
	_iter_end_1c743d70b:;;
}



inline void _1de580b66_removeDeadTraits(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1dcd83bb8_Trait>>* _24141_traits) {
	jule::I64 _24217_i = 0LL;;
	while ((_24217_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1dcd83bb8_Trait> _24421_t = (*(_24141_traits))[_24217_i];;
			if ((!(_1c7413516_isLive(_self_, &(_24421_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24217_i),(*(_24141_traits)).slice((_24217_i + 1LL)));
				goto _iter_next_1c7442ad9;
			};
			jule::I64 _24921_j = 0LL;;
			while ((_24921_j < _24421_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1dcd5b641_Struct> _25121_s = _24421_t.get()._field_Implemented[_24921_j];;
					if ((_25121_s.get()._field_Instances.len() > 0LL)) {
						(_24921_j)++;
						goto _iter_next_1c7443623;
					};
					_24421_t.get()._field_Implemented=jule::append(_24421_t.get()._field_Implemented.slice(0LL, _24921_j),_24421_t.get()._field_Implemented.slice((_24921_j + 1LL)));
				}
			_iter_next_1c7443623:;
			}
			_iter_end_1c7443623:;;
			(_24217_i)++;
		}
	_iter_next_1c7442ad9:;
	}
	_iter_end_1c7442ad9:;;
}



inline void _1de580ddb_removeDeadsFile(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dce502b2_SymbolTable>* _26240_file) {
	_1de58066b_removeDeadFns(_self_, &((*(_26240_file)).get()._field_Funcs));
	_1de5808e1_removeDeadStructs(_self_, &((*(_26240_file)).get()._field_Structs));
	_1de580b66_removeDeadTraits(_self_, &((*(_26240_file)).get()._field_Traits));
	_1de5803e6_removeDeadGlobals(_self_, &((*(_26240_file)).get()._field_Vars));
}



inline void _1de581161_removeDeadsPackage(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_, jule::Ptr<_1dcdd031e_Package>* _26943_pkg) {
	{
		auto expr = &((*(_26943_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7447913:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _27021_file = *it;
			{
				_1de580ddb_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1c7447913:;
			++it;
			goto _iter_begin_1c7447913;
		}
		_iter_end_1c7447913:;
	};
}



inline void _1de58133c_removeDeads(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7448073:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _27621_used = *it;
			{
				if ((!(_27621_used.get()._field_Binded))) {
					_1de581161_removeDeadsPackage(_self_, &(_27621_used.get()._field_Package));
				};
			}
			_iter_next_1c7448073:;
			++it;
			goto _iter_begin_1c7448073;
		}
		_iter_end_1c7448073:;
	};
	_1de581161_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1de581518_elimanate(jule::Ptr<_1de54c36e_ObjectDeadCode> _self_) {
	_1de580171_collectLive(_self_);
	_1de58133c_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1de54c36e_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1de448d4d_IR__jule_tuple_s_23aa28854_Log static__1de44928d_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1de448d4d_IR__jule_tuple_s_23aa28854_Log __jule_func_result;
	jule::Ptr<_1de4465dc_JuleImporter> _2817_importer = static__1de4469c7_New(_1de44aaec_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1dcd080d2_Ast>> _2918_files;;
	jule::Slice<_23aa28854_Log> _2929_logs;;
	({
		__jule_tuple_sx_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de447d80_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1dcdd031e_Package> _3918_pkg;;
	({
		__jule_tuple_x_1dcdd031e_Package__jule_tuple_s_23aa28854_Log __jule_assign_result = _1dcea1c92_AnalyzePackage(_2918_files, jule::Trait<_1dcdc9a33_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1de448d4d_IR> _4417_ir = jule::new_ptr<_1de448d4d_IR>(_1de448d4d_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1de446c3b_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1de44a8ee_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1de449733_appendStructs(_1de448d4d_IR* _self_, jule::Ptr<_1dcdd031e_Package>* _5633_p, jule::Slice<jule::Ptr<_1dcd5b641_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73c9db2:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c73ca6ed:;
					if (it != expr_end) {
						jule::Ptr<_1dcd5b641_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1dcd5b641_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1c73ca6ed:;
						++it;
						goto _iter_begin_1c73ca6ed;
					}
					_iter_end_1c73ca6ed:;
				};
			}
			_iter_next_1c73c9db2:;
			++it;
			goto _iter_begin_1c73c9db2;
		}
		_iter_end_1c73c9db2:;
	};
}



inline jule::Slice<jule::Ptr<_1dcd5b641_Struct>> _1de449997_GetAllStructures(_1de448d4d_IR* _self_) {
	jule::Slice<jule::Ptr<_1dcd5b641_Struct>> _6917_buffer = nullptr;;
	_1de449733_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73ca599:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_Binded))) {
					_1de449733_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1c73ca599:;
			++it;
			goto _iter_begin_1c73ca599;
		}
		_iter_end_1c73ca599:;
	};
	return _6917_buffer;;
}



inline void _1de449cb6_appendGlobals(_1de448d4d_IR* _self_, jule::Ptr<_1dcdd031e_Package>* _7933_p, jule::Slice<jule::Ptr<_1dce05cb2_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73ccbc8:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c73cd4d1:;
					if (it != expr_end) {
						jule::Ptr<_1dce05cb2_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_Binded))) && (!(_8125_v.get()._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1c73cd4d1:;
						++it;
						goto _iter_begin_1c73cd4d1;
					}
					_iter_end_1c73cd4d1:;
				};
			}
			_iter_next_1c73ccbc8:;
			++it;
			goto _iter_begin_1c73ccbc8;
		}
		_iter_end_1c73ccbc8:;
	};
}



inline jule::Slice<jule::Ptr<_1dce05cb2_Var>> _1de44a02a_GetAllGlobals(_1de448d4d_IR* _self_) {
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _9217_buffer = nullptr;;
	_1de449cb6_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73cdbb8:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_Binded))) {
					_1de449cb6_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1c73cdbb8:;
			++it;
			goto _iter_begin_1c73cdbb8;
		}
		_iter_end_1c73cdbb8:;
	};
	return _9217_buffer;;
}



inline void _1de44a206_Order(_1de448d4d_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1de449997_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1de44a02a_GetAllGlobals(_self_);
	static__1de44be83_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1de44c192_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1de448d4d_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dcd5e7ba_Str(_1dcd5e457_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c64aad0c:;
			if (it != expr_end) {
				jule::Ptr<_1dce80ba5_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_1dce827de_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_1c64aad0c:;
				++it;
				goto _iter_begin_1c64aad0c;
			}
			_iter_end_1c64aad0c:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1dcd5eac8_Equal(jule::Ptr<_1dcd5e457_StructIns> _self_, jule::Ptr<_1dce82437_TypeKind> _26521_other) {
	jule::Ptr<_1dcd5e457_StructIns> _26613_s = _1dce860a6_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1dce82aec_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1c64ade53:;
	}
	_iter_end_1c64ade53:;;
	return true;;
}



inline jule::Bool _1dcd6004b_Same(_1dcd5e457_StructIns* _self_, jule::Ptr<_1dcd5e457_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64b0eaa:;
		if (it != expr_end) {
			jule::I64 _29713_i = it - expr->begin();
			jule::Ptr<_1dce80ba5_InsGeneric> *_29716_g = it;
			{
				jule::Ptr<_1dce80ba5_InsGeneric> _29817_g2 = _29319_s.get()._field_Generics[_29713_i];;
				if ((((*(_29716_g)).get()._field_Kind.get()._field_BindIdent != _29817_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1dce82aec_Equal((*(_29716_g)).get()._field_Kind, _29817_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1c64b0eaa:;
			++it;
			_29713_i++;
			goto _iter_begin_1c64b0eaa;
		}
		_iter_end_1c64b0eaa:;
	};
	return true;;
}



inline jule::Ptr<_1dcd71997_Fn> _1dcd60403_FindMethod(_1dcd5e457_StructIns* _self_, jule::Str _30829_ident, jule::Bool _30841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64b3133:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _30921_f = *it;
			{
				if (((_30921_f.get()._field_Statically == _30841_statically) && (_30921_f.get()._field_Ident == _30829_ident))) {
					return _30921_f;;
				};
			}
			_iter_next_1c64b3133:;
			++it;
			goto _iter_begin_1c64b3133;
		}
		_iter_end_1c64b3133:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd5d962_FieldIns> _1dcd60711_FindField(_1dcd5e457_StructIns* _self_, jule::Str _31928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64b384d:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5d962_FieldIns> _32021_f = *it;
			{
				if ((_32021_f.get()._field_Decl.get()._field_Ident == _31928_ident)) {
					return _32021_f;;
				};
			}
			_iter_next_1c64b384d:;
			++it;
			goto _iter_begin_1c64b384d;
		}
		_iter_end_1c64b384d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dce05cb2_Var> _1dcd60a1e_FindStatic(_1dcd5e457_StructIns* _self_, jule::Str _33029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64b53dd:;
		if (it != expr_end) {
			jule::Ptr<_1dce05cb2_Var> _33121_v = *it;
			{
				if ((_33121_v.get()._field_Ident == _33029_ident)) {
					return _33121_v;;
				};
			}
			_iter_next_1c64b53dd:;
			++it;
			goto _iter_begin_1c64b53dd;
		}
		_iter_end_1c64b53dd:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dcd5e457_StructIns _Src) {
	_Stream << _1dcd5e7ba_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_23aab5aab_Cmd> static__23aab5eb8_New(jule::Str _2619_path) {
	return jule::new_ptr<_23aab5aab_Cmd>(_23aab5aab_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _23aab6194_Spawn(_23aab5aab_Cmd* _self_) {
	({
		auto except = _23ab0a2d7_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _23aab65d4_Wait(_23aab5aab_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _23ab0a727_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _23ab0a2d7_spawn(_23aab5aab_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:79:13"));;
	};
	jule::Str _8113_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8213_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8213_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	if ((_239863371_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_2398906de_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
		_2398906de_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1c465cde5:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c465c3cd:;
			{
				_2398906de_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
				jule::Slice<jule::Str> _9721_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9721_args[0LL]=_8113_path;
				(_9721_args).append((*(_self_))._field_Args);;
				({
					auto except = _23ab0a0a6_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_23ab09d97_execvp(&(_8113_path), &(_9721_args));
				jule::Str _10217_code = _23ab0628e_Itoa(static_cast<jule::I64>(_238993194_GetLastErrno()));;
				{
					_239890ac9_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), (&(_10217_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10217_code.len())));
				};
				_2398906de_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
				_23ab0b959_Exit(1LL);
			}
		}
		else {
			_case_begin_1c4659c05:;
			{
				_2398906de_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
				jule::Array<jule::U8,16> _10821_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10917_n = _23989036a_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])), (&(_10821_buf[0LL])), 16LLU);;
				_2398906de_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
				if ((_10917_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11322_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _23aab7360_AtoiBp((&(_10821_buf[0LL])), _10917_n);
						_11322_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_23ab0ae64_processErrorFromCode(_11322_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1c4659ba0:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _23ab0a727_wait(_23aab5aab_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:131:13"));;
	};
	jule::I64 _13317_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13317_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_23ab0b1a6_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13317_stat)));;
}







std::ostream &operator<<(std::ostream &_Stream, _23aab5aab_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _239825223_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _23984eacc_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I64 _238993194_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _239863371_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _2398636b2_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _239863a9c_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _239863ddd_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _2398643b6_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _23986465d_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _239864905_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _239865285_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _23986552c_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _2398657c4_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _23989036a_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _2398906de_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _239890ac9_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _239890cd8_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _2398a2e1b_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _2398a35c0_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _2399514e7_getLastOsError(void) {
	jule::I64 _309_err = _238993194_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c458dd8c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c458d793:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1c458d81a:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1c458d892:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c458dac3:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c458db39:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c458dba0:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1c458d5d9:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1c458d584:;
	};
}



inline jule::Slice<jule::Str> _2399552cb_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _23995574e_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _239956673_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _239956673_getwd(void) {
	jule::U8* _1113_buff = _239863ddd_Getcwd(nullptr, 0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_2399514e7_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _159_pwd = _23984eacc_BytePtrToStr(_1113_buff);;
	{
		_239825223_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _23a803e15_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_23a864184__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _23a86c4bc_isExcludingLatin(_23a80d0ea_Letter, _7613_r);;
}



inline jule::Bool _23a86b8d9_is16(jule::Slice<_23a869d27_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c4ab1a96:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_23a869d27_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c4ab1a96:;
				++it;
				_19313_i++;
				goto _iter_begin_1c4ab1a96;
			}
			_iter_end_1c4ab1a96:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_23a869d27_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1c4ab1667:;
	}
	_iter_end_1c4ab1667:;;
	return false;;
}



inline jule::Bool _23a86bc2a_is32(jule::Slice<_23a86a29a_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c4ab764b:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_23a86a29a_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c4ab764b:;
				++it;
				_23013_i++;
				goto _iter_begin_1c4ab764b;
			}
			_iter_end_1c4ab764b:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_23a86a29a_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1c4ab7184:;
	}
	_iter_end_1c4ab7184:;;
	return false;;
}



inline jule::Bool _23a86c4bc_isExcludingLatin(jule::Ptr<_23a86a71d_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_23a869d27_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _23a86b8d9_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_23a86a29a_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _23a86bc2a_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _23a86c764_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_23a864184__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _23a86c4bc_isExcludingLatin(_23a814651_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _23a94e912_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _23a94d7e0_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_23a94dd73_acceptRange _1969_accept = _23a94e181_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _23a94ec31_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _23a94d7e0_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_23a94dd73_acceptRange _2439_accept = _23a94e181_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _23a94eec8_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_23a95189d_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1c4b07229;
			};
		}
	_iter_next_1c4b07229:;
	}
	_iter_end_1c4b07229:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _23a950c76_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _23a9510b7_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _23a9510b7_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1c4b19516:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1c4b1b21b:;
			{
				_41242_r=128LL;
				goto _case_begin_1c4b19857;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1c4b19857:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1c4b18e3e:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1c4b18d84:;
	};
}



inline jule::I64 _23a951606_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1c4c846c5;
			};
			jule::U8 _48213_x = _23a94d7e0_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1c4c846c5;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1c4c846c5;
			};
			_23a94dd73_acceptRange _49213_accept = _23a94e181_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1c4c846c5:;
	}
	_iter_end_1c4c846c5:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _23a95189d_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _23a97357e_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4ca59d2:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1c4ca59d2:;
			++it;
			_399_i++;
			goto _iter_begin_1c4ca59d2;
		}
		_iter_end_1c4ca59d2:;
	};
	return -1LL;;
}



inline jule::I64 _23a98589e_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_1c4ca6ac1:;
	}
	_iter_end_1c4ca6ac1:;;
	return -1LL;;
}



inline jule::I64 _23a985b68_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I64>(_23a97357e_FindByte(_2398a2e1b_Stobs(_6717_s), _6725_b));;
}



inline jule::I64 _23a985ea9_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I64>(_23a98589e_FindLastByte(_2398a2e1b_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _23a986372_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1c4cbb443:;
	}
	_iter_end_1c4cbb443:;;
	return _2013_ss;;
}



inline jule::Bool _23a9867a1_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1c4cbdee5:;
	}
	_iter_end_1c4cbdee5:;;
	return true;;
}



inline jule::Bool _23a986ae2_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _23a9867a1_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _23a987054_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1c4cc0d2c:;
	}
	_iter_end_1c4cc0d2c:;;
	return true;;
}



inline jule::Bool _23a987362_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _23a987054_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _23a98774c_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_23a9867a1_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1c4cc3aee:;
	}
	_iter_end_1c4cc3aee:;;
	return -1LL;;
}



inline jule::I64 _23a988088_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1c4cc63e8;
					};
				}
			_iter_next_1c4cc7c13:;
			}
			_iter_end_1c4cc7c13:;;
			return _9413_j;;
		}
	_iter_next_1c4cc63e8:;
	}
	_iter_end_1c4cc63e8:;;
	return -1LL;;
}



inline jule::I64 _23a9883c9_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_23a988088_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _23a989672_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1c4cd004a:;
	}
	_iter_end_1c4cd004a:;;
	return -1LL;;
}



inline jule::I64 _23a989ead_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_23a985ea9_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _23a98acc2_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _2398a2e1b_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _2398a2e1b_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_23a989672_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1c4cd55e4:;
	}
	_iter_end_1c4cd55e4:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _23a98b4ed_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _23a98774c_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1c4cdb683;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i, _27613_j)); };
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1c4cdb683:;
	}
	_iter_end_1c4cdb683:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i)); };
	};
	return _26713_parts;;
}



inline jule::Bool _23a98b83e_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_23a98774c_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _23a98c312_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_23a98acc2_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _23a98c653_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _23a98774c_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1c4ce17ba;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1c4ce17ba:;
	}
	_iter_end_1c4ce17ba:;;
	return _31613_n;;
}



inline jule::Str _23a98cad7_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _23a98c653_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _23a98774c_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1c4ce513c;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1c4ce513c:;
	}
	_iter_end_1c4ce513c:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _23a989b4a_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_23a989672_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1c4ce9493:;
	}
	_iter_end_1c4ce9493:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _23a98db93_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _2398a2e1b_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _2398a2e1b_Stobs(&(_40321_cutset));;
	_23a989b4a_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _23a98de4b_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94eec8_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_23a989672_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1c4ceb6a4:;
	}
	_iter_end_1c4ceb6a4:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _23a98e5cd_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _2398a2e1b_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _2398a2e1b_Stobs(&(_43417_cutset));;
	_23a989b4a_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_23a98de4b_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _23a98e91e_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c4d01346:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c4d01555:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1c4d01489:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c4d0228c:;
		if (it != expr_end) {
			jule::Str *_45212_part = it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=(*(_45212_part));
			}
			_iter_next_1c4d0228c:;
			++it;
			goto _iter_begin_1c4d0228c;
		}
		_iter_end_1c4d0228c:;
	};
	return _45113_s;;
}



inline jule::Str _23a990eb4_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _23a993aaa_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _23a993527_IsPathSep(_1099_originalPath[0LL])) && _23a993527_IsPathSep(_1099_originalPath[1LL]))) {
			return _23a991547_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _23a993527_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_23a990205_lazyBuff _12713_out = _23a990205_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_23a9908a9_append(&_12713_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_23a993527_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1c4d11059:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _23a993527_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1c4d134bd:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _23a993527_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1c4d13534:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1c4d15866:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_23a993527_IsPathSep(static_cast<jule::U8>(_23a990634_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1c4d16449:;
									}
									_iter_end_1c4d16449:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1c4d15c0c:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_23a9908a9_append(&_12713_out, 47LLU);
									};
									_23a9908a9_append(&_12713_out, '.');
									_23a9908a9_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1c4d15b85:;
						};
					}
				}
				else {
					_case_begin_1c4d0e596:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_23a9908a9_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_23a993527_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_23a9908a9_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1c4d12368:;
						}
						_iter_end_1c4d12368:;;
					}
				}
				_match_end_1c4d0e51e:;
			};
		}
	_iter_next_1c4d0e70b:;
	}
	_iter_end_1c4d0e70b:;;
	if ((_12713_out._field_w == 0LL)) {
		_23a9908a9_append(&_12713_out, '.');
	};
	return _23a991547_FromSlash(_23a990b1d_string(&_12713_out));;
}



inline jule::Str _23a991547_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _23a991866_Join(jule::Slice<jule::Str> _2259_elem) {
	return _23a994171_join(_2259_elem);;
}



inline jule::Str _23a991b0d_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_23a993527_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1c4d19a79:;
	}
	_iter_end_1c4d19a79:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _23a991da5_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23a993dc9_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _23a99214c_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _23a993527_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1c4d1bb8b:;
	}
	_iter_end_1c4d1bb8b:;;
	(_25413_path).mut_slice(_23a992768_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_23a993527_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1c4d1d31e:;
	}
	_iter_end_1c4d1d31e:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return jule::Str("/", 1);;
	};
	return _25413_path;;
}



inline jule::Str _23a9924c1_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _23a992768_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_23a993527_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1c4d20354:;
	}
	_iter_end_1c4d20354:;;
	jule::Str _2919_dir = _23a990eb4_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _23a992768_VolumeName(jule::Str _30315_path) {
	return _23a991547_FromSlash(_30315_path.slice(0LL, _23a993aaa_volumeNameLen(_30315_path)));;
}



inline jule::Bool _23a993527_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _23a993813_IsAbs(jule::Str _5310_path) {
	return _23a986ae2_HasPrefix(_5310_path, jule::Str("/", 1));;
}



inline jule::I64 _23a993aaa_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _23a993dc9_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_23a993813_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _23a990eb4_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _23995574e_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _23a994171_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _23a994171_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4d283b2:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if ((!((*(_7412_e)).empty()))) {
					return _23a990eb4_Clean(_23a98e91e_Join(_739_elem.slice(_749_i), jule::Str("/", 1)));;
				};
			}
			_iter_next_1c4d283b2:;
			++it;
			_749_i++;
			goto _iter_begin_1c4d283b2;
		}
		_iter_end_1c4d283b2:;
	};
	return jule::Str();;
}



inline jule::I64 _239895727_getLastFsError(void) {
	jule::I64 _729_err = _238993194_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c4d36bb7:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c4d3614a:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1c4d365ac:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1c4d36623:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c4d36689:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c4d36700:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1c4d36cd8:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c4d36d4e:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c4d36db5:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c4d36e2b:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c4d36ea3:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c4d3702a:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c4d370a2:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c4d37129:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c4d371a1:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1c4d37228:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c4d372a0:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c4d37327:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c4d3739e:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c4d37426:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1c4d3749d:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c4d37525:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c4d3759c:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c4d37624:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c4d3769b:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1c4d37723:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1c4d3779a:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1c4d37822:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1c4d36414:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1c4d363ae:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _23aab7360_AtoiBp(jule::U8* _922_b, jule::I64 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _1013_neg = ((*(_922_b)) == '-');;
	if (_1013_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1c464287a:;
	}
	_iter_end_1c464287a:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_1013_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _23ab0628e_Itoa(jule::I64 _69_x) {
	if ((_69_x < 0LL)) {
		return (jule::Str("-", 1) + _23ab0657a_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_69_x))))));;
	};
	return _23ab0657a_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_69_x)));;
}



inline jule::Str _23ab0657a_Utoa(jule::U64 _1413_x) {
	if ((_1413_x == 0LLU)) {
		return jule::Str("0", 1);;
	};
	jule::Str _1813_buf = jule::Str::alloc(20LL);;
	jule::I64 _1913_i = (_1813_buf.len() - 1LL);;
	while ((_1413_x >= 10LLU)) {
		{
			jule::U64 _2113_q = (_1413_x / 10LLU);;
			_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1413_x) - (_2113_q * 10LLU))));
			(_1913_i)--;
			_1413_x=_2113_q;
		}
	_iter_next_1c464919a:;
	}
	_iter_end_1c464919a:;;
	_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1413_x)));
	(_1813_buf).mut_slice(_1913_i);;
	return _1813_buf;;
}



inline jule::Slice<char*> _23ab09a56_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s) {
	jule::Slice<char*> _3713_cs = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4666607:;
		if (it != expr_end) {
			jule::I64 _389_i = it - expr->begin();
			{
				_3713_cs[_389_i]=((char*)((&((*(_3625_s))[_389_i][0LL]))));
			}
			_iter_next_1c4666607:;
			++it;
			_389_i++;
			goto _iter_begin_1c4666607;
		}
		_iter_end_1c4666607:;
	};
	_3713_cs[(_3713_cs.len() - 1LL)]=nullptr;
	return _3713_cs;;
}



inline jule::I64 _23ab09d97_execvp(jule::Str* _4512_file, jule::Slice<jule::Str>* _4524_argv) {
	jule::Slice<char*> _469_cargv = _23ab09a56_strSliceToCstrSlice(_4524_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4512_file))[0LL])))), (char*const*)(&(_469_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _23ab0a0a6_setenv(jule::Slice<jule::Str>* _5212_envv) {
	;
	{
		auto expr = _5212_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46691dc:;
		if (it != expr_end) {
			jule::Str *_5412_env = it;
			{
				jule::I64 _5513_i = _23a985b68_FindByteStr(_5412_env, '=');;
				if ((_5513_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _6017_key = (*(_5412_env)).slice(0LL, _5513_i);;
					if ((((*(_5412_env)).len() - _5513_i) == 1LL)) {
						jule::Str _6221_val = jule::Str("\x00", 1);;
						if ((setenv(((char*)((&(_6017_key[0LL])))), ((char*)((&(_6221_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6721_val = (*(_5412_env)).slice((_5513_i + 1LL));;
						if ((setenv(((char*)((&(_6017_key[0LL])))), ((char*)((&(_6721_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1c46691dc:;
			++it;
			goto _iter_begin_1c46691dc;
		}
		_iter_end_1c46691dc:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _23ab0ae64_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1c466d411:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c4669550:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1c466a6b6:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1c466d862:;
	};
}



inline jule::I64 _23ab0b1a6_getLastProcessError(void) {
	return _23ab0ae64_processErrorFromCode(static_cast<jule::I64>(_238993194_GetLastErrno()));;
}



inline void _23ab0b959_Exit(jule::I64 _129_code) {
	_239890cd8_Exit(_129_code);
}



inline jule::Str _23ab0bb57_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _23aa1ad30_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _23aa1b0d8_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_23a9954b3_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4693733:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1c4693733:;
			++it;
			goto _iter_begin_1c4693733;
		}
		_iter_end_1c4693733:;
	};
	return false;;
}



inline jule::Bool _23aa1b380_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_23a996261_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4694866:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1c4694866:;
			++it;
			goto _iter_begin_1c4694866;
		}
		_iter_end_1c4694866:;
	};
	{
		auto expr = &(_23aa191c4_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4694dd8:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1c4694dd8:;
			++it;
			goto _iter_begin_1c4694dd8;
		}
		_iter_end_1c4694dd8:;
	};
	return false;;
}



inline jule::Str _23aa28c94_Logf(jule::Str _3159_fmt, jule::Slice<jule::Any> _31522_args) {
	return _23aa296ac_applyFmt(_3159_fmt, _31522_args);;
}



inline jule::Str _23aa29080_argToStr(jule::Any _31913_arg) {
	{
		auto &_match_expr{ _31913_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c4695da6:;
			{
				return _31913_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1c4696549:;
			{
				return jule::Str::from_byte(_31913_arg.cast<jule::U8>(&__jule_any_type132));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c46965b0:;
			{
				return jule::Str::from_rune(_31913_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1c469612b:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1c4695e3e:;
	};
}



inline jule::I64 _23aa29327_findNextFmt(jule::Str _33216_fmt) {
	{
		auto expr = &(_33216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4697319:;
		if (it != expr_end) {
			jule::I64 _3339_i = it - expr->begin();
			jule::U8 *_33312_b = it;
			{
				if (((*(_33312_b)) == '@')) {
					return _3339_i;;
				};
			}
			_iter_next_1c4697319:;
			++it;
			_3339_i++;
			goto _iter_begin_1c4697319;
		}
		_iter_end_1c4697319:;
	};
	return -1LL;;
}



inline jule::Str _23aa296ac_applyFmt(jule::Str _34117_fmt, jule::Slice<jule::Any> _34127_args) {
	jule::Str _34213_s = jule::Str();;
	{
		auto expr = &(_34127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46987b0:;
		if (it != expr_end) {
			jule::Any *_34312_arg = it;
			{
				jule::I64 _34413_i = _23aa29327_findNextFmt(_34117_fmt);;
				if ((_34413_i == -1LL)) {
					goto _iter_end_1c46987b0;
				};
				_34213_s+=_34117_fmt.slice(0LL, _34413_i);
				_34213_s+=_23aa29080_argToStr((*(_34312_arg)));
				(_34117_fmt).mut_slice((_34413_i + 1LL));;
			}
			_iter_next_1c46987b0:;
			++it;
			goto _iter_begin_1c46987b0;
		}
		_iter_end_1c46987b0:;
	};
	_34213_s+=_34117_fmt;
	return _34213_s;;
}



inline jule::Bool _23aa2a735_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _23aa2bb65_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _23aa2be1d_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _23aa2c1b5_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _23aa2c4d4_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _23aa2c77b_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _23aa2ca23_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _23aa2ccba_IsUnix(jule::Str _5511_os) {
	return (_23aa2be1d_IsDarwin(_5511_os) || _23aa2c1b5_IsLinux(_5511_os));;
}



inline jule::Bool _23aa2d13e_Is32Bit(jule::Str _5812_arch) {
	return _23aa2c4d4_IsI386(_5812_arch);;
}



inline jule::Bool _23aa2d3d6_Is64Bit(jule::Str _6112_arch) {
	return (_23aa2c77b_IsAmd64(_6112_arch) || _23aa2ca23_IsArm64(_6112_arch));;
}



inline void _23ab0cdde_init(void) {
	jule::Str _2513_path = _23ab0bb57_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_23ab0c41b_PathWd=({
			auto except = _23995574e_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_23ab0c163_PathExec=_23a9924c1_Dir(_2513_path);
		_23ab0be43_PathStdlib=_23a991866_Join(jule::Slice<jule::Str>::make({_23ab0c163_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_23ab0c729_PathApi=_23a991866_Join(jule::Slice<jule::Str>::make({_23ab0c163_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _23ae2734b_IsUnaryOp(jule::Str _29514_kind) {
	{
		auto expr = &(_23ad7b49d_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46d77cc:;
		if (it != expr_end) {
			jule::Str *_29612_op = it;
			{
				if ((_29514_kind == (*(_29612_op)))) {
					return true;;
				};
			}
			_iter_next_1c46d77cc:;
			++it;
			goto _iter_begin_1c46d77cc;
		}
		_iter_end_1c46d77cc:;
	};
	return false;;
}



inline jule::Bool _23ae27637_IsBinOp(jule::Str _30512_kind) {
	{
		auto expr = &(_23ad7b79a_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46d84d1:;
		if (it != expr_end) {
			jule::Str *_30612_op = it;
			{
				if ((_30512_kind == (*(_30612_op)))) {
					return true;;
				};
			}
			_iter_next_1c46d84d1:;
			++it;
			goto _iter_begin_1c46d84d1;
		}
		_iter_end_1c46d84d1:;
	};
	return false;;
}



inline jule::Bool _23ae27bed_IsStr(jule::Str _32510_k) {
	return ((!(_32510_k.empty())) && ((_32510_k[0LL] == '\"') || _23ae27e95_IsRawStr(_32510_k)));;
}



inline jule::Bool _23ae27e95_IsRawStr(jule::Str _32813_k) {
	return ((!(_32813_k.empty())) && (_32813_k[0LL] == '`'));;
}



inline jule::Bool _23ae2823c_IsRune(jule::Str _33211_k) {
	return ((!(_33211_k.empty())) && (_33211_k[0LL] == '\''));;
}



inline jule::Bool _23ae28858_IsBool(jule::Str _33811_k) {
	return (_33811_k.equal("true", 4) || _33811_k.equal("false", 5));;
}



inline jule::Bool _23ae28b00_IsFloat(jule::Str _34112_k) {
	if (_23a986ae2_HasPrefix(_34112_k, jule::Str("0x", 2))) {
		return _23a98c312_ContainsAny(_34112_k, jule::Str(".pP", 3));;
	};
	return _23a98c312_ContainsAny(_34112_k, jule::Str(".eE", 3));;
}



inline jule::Bool _23ae28d97_IsNum(jule::Str _34910_k) {
	if (_34910_k.empty()) {
		return false;;
	};
	jule::U8 _3549_b = _34910_k[0LL];;
	return ((_3549_b == '.') || (('0' <= _3549_b) && (_3549_b <= '9')));;
}



inline jule::Bool _23ae293d6_IsIgnoreIdent(jule::Str _36418_ident) {
	return _36418_ident.equal("_", 1);;
}



inline jule::Bool _23ae2967d_IsAnonIdent(jule::Str _36716_ident) {
	return _36716_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _23ae29bbc_IsSpace(jule::I32 _38012_r) {
	{
		auto expr = &(_23ad7b27d_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46e09d3:;
		if (it != expr_end) {
			jule::I32 *_38112_cr = it;
			{
				if ((_38012_r == (*(_38112_cr)))) {
					return true;;
				};
			}
			_iter_next_1c46e09d3:;
			++it;
			goto _iter_begin_1c46e09d3;
		}
		_iter_end_1c46e09d3:;
	};
	return false;;
}



inline jule::Bool _23ae2a11d_IsLetter(jule::I32 _39013_r) {
	return _23a803e15_IsLetter(_39013_r);;
}



inline jule::Bool _23ae2a65c_IsDecimal(jule::U8 _41014_b) {
	return (('0' <= _41014_b) && (_41014_b <= '9'));;
}



inline jule::Bool _23ae2a904_IsBinary(jule::U8 _41313_b) {
	return ((_41313_b == '0') || (_41313_b == '1'));;
}



inline jule::Bool _23ae2ab9b_IsOctal(jule::U8 _41612_b) {
	return (('0' <= _41612_b) && (_41612_b <= '7'));;
}



inline jule::Bool _23ae2ae43_IsHex(jule::U8 _41910_b) {
	{
		
		if ((('0' <= _41910_b) && (_41910_b <= '9'))) {
			_case_begin_1c46e3d5a:;
			{
				return true;;
			}
		}
		else if ((('a' <= _41910_b) && (_41910_b <= 'f'))) {
			_case_begin_1c46e3dc1:;
			{
				return true;;
			}
		}
		else if ((('A' <= _41910_b) && (_41910_b <= 'F'))) {
			_case_begin_1c46e3e48:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c46e3ce4:;
			{
				return false;;
			}
		}
		_match_end_1c46e3a5d:;
	};
}



inline jule::Bool _23ae2b1da_IsAssign(jule::U64 _43413_id) {
	return (((((((_43413_id == static_cast<jule::U64>(1LLU)) || (_43413_id == static_cast<jule::U64>(29LLU))) || (_43413_id == static_cast<jule::U64>(32LLU))) || (_43413_id == static_cast<jule::U64>(19LLU))) || (_43413_id == static_cast<jule::U64>(26LLU))) || (_43413_id == static_cast<jule::U64>(2LLU))) || (_43413_id == static_cast<jule::U64>(6LLU)));;
}



inline jule::Bool _23ae2b482_IsPostfixOp(jule::Str _44516_kind) {
	{
		auto expr = &(_23ae21ac6_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46e5400:;
		if (it != expr_end) {
			jule::Str *_44612_op = it;
			{
				if ((_44516_kind == (*(_44612_op)))) {
					return true;;
				};
			}
			_iter_next_1c46e5400:;
			++it;
			goto _iter_begin_1c46e5400;
		}
		_iter_end_1c46e5400:;
	};
	return false;;
}



inline jule::Bool _23ae2b729_IsAssignOp(jule::Str _45515_kind) {
	if (_23ae2b482_IsPostfixOp(_45515_kind)) {
		return true;;
	};
	{
		auto expr = &(_23ae21dc3_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c46e70d3:;
		if (it != expr_end) {
			jule::Str *_45912_op = it;
			{
				if ((_45515_kind == (*(_45912_op)))) {
					return true;;
				};
			}
			_iter_next_1c46e70d3:;
			++it;
			goto _iter_begin_1c46e70d3;
		}
		_iter_end_1c46e70d3:;
	};
	return false;;
}



inline jule::Ptr<_23ae2becc_File> _23ae2d286_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_23ae2becc_File>(_23ae2becc_File{._field_Path=_5715_path, });;
}



inline _23aa28854_Log _23ae2ea29_makeErr(jule::I64 _9512_row, jule::I64 _9522_col, jule::Ptr<_23ae2becc_File>* _9533_f, jule::Str _9543_fmt, jule::Slice<jule::Any> _9556_args) {
	return _23aa28854_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_9512_row, ._field_Column=_9522_col, ._field_Path=(*(_9533_f)).get()._field_Path, ._field_Text=_23aa28c94_Logf(_9543_fmt, _9556_args), };;
}



inline jule::Bool _23ae2edae_bytesHasPrefix(jule::Slice<jule::U8>* _10520_bytes, jule::Str _10535_prefix) {
	if (((*(_10520_bytes)).len() < _10535_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_10535_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4de00a0:;
		if (it != expr_end) {
			jule::I64 _1099_i = it - expr->begin();
			{
				if (((*(_10520_bytes))[_1099_i] != _10535_prefix[_1099_i])) {
					return false;;
				};
			}
			_iter_next_1c4de00a0:;
			++it;
			_1099_i++;
			goto _iter_begin_1c4de00a0;
		}
		_iter_end_1c4de00a0:;
	};
	return true;;
}



inline jule::Str _23ae30200_floatFmtE(jule::Slice<jule::U8>* _11715_txt, jule::I64 _11732_i) {
	jule::Str __jule_func_result;
	(_11732_i)++;
	if ((_11732_i >= (*(_11715_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _12313_b = (*(_11715_txt))[_11732_i];;
	if ((_12313_b == '_')) {
		return __jule_func_result;;
	};
	if (((_12313_b == '+') || (_12313_b == '-'))) {
		(_11732_i)++;
		if ((_11732_i >= (*(_11715_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_11715_txt))[_11732_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1379_first = _11732_i;;
	for (; (_11732_i < (*(_11715_txt)).len()); (_11732_i)++) {
		{
			_12313_b=(*(_11715_txt))[_11732_i];
			if (((_12313_b != '_') && (!(_23ae2a65c_IsDecimal(_12313_b))))) {
				goto _iter_end_1c4de326d;
			};
		}
	_iter_next_1c4de326d:;
	}
	_iter_end_1c4de326d:;;
	if ((_11732_i == _1379_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_11715_txt)).slice(0LL, _11732_i));
	return __jule_func_result;;
}



inline jule::Str _23ae30585_floatFmtP(jule::Slice<jule::U8>* _15115_txt, jule::I64 _15128_i) {
	return _23ae30200_floatFmtE(_15115_txt, _15128_i);;
}



inline jule::Str _23ae308c6_floatFmtDotnp(jule::Slice<jule::U8>* _15519_txt, jule::I64 _15536_i) {
	if (((*(_15519_txt))[_15536_i] != '.')) {
		return jule::Str();;
	};
	(_15536_i)++;
	_julec_label_loop:;
	for (; (_15536_i < (*(_15519_txt)).len()); (_15536_i)++) {
		{
			jule::U8 _16313_b = (*(_15519_txt))[_15536_i];;
			{
				
				if ((_16313_b == '_') || _23ae2a65c_IsDecimal(_16313_b)) {
					_case_begin_1c4de5c10:;
					{
						goto _iter_next_1c4de4b54;
					}
				}
				else if (_23ae3217a_isFloatFmtP(_16313_b, _15536_i)) {
					_case_begin_1c4de5c76:;
					{
						return _23ae30585_floatFmtP(_15519_txt, _15536_i);;
					}
				}
				else {
					_case_begin_1c4de5b99:;
					{
						goto _iter_end_1c4de4b54;
					}
				}
				_match_end_1c4de5b33:;
			};
		}
	_iter_next_1c4de4b54:;
	}
	_iter_end_1c4de4b54:;;
	return jule::Str();;
}



inline jule::Str _23ae30c17_floatFmtDotfp(jule::Slice<jule::U8>* _17619_txt, jule::I64 _17636_i) {
	_17636_i+=2LL;
	return _23ae30200_floatFmtE(_17619_txt, _17636_i);;
}



inline jule::Str _23ae31058_floatFmtDotp(jule::Slice<jule::U8>* _18118_txt, jule::I64 _18135_i) {
	(_18135_i)++;
	return _23ae30200_floatFmtE(_18118_txt, _18135_i);;
}



inline jule::Str _23ae314a9_floatNum(jule::Slice<jule::U8>* _18614_txt, jule::I64 _18631_i) {
	jule::Str __jule_func_result;
	(_18631_i)++;
	if ((_18631_i >= (*(_18614_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_18614_txt)));
		return __jule_func_result;;
	};
	if (((*(_18614_txt))[_18631_i] == '_')) {
		(_18631_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_18614_txt)).slice(0LL, _18631_i));
		return __jule_func_result;;
	};
	for (; (_18631_i < (*(_18614_txt)).len()); (_18631_i)++) {
		{
			jule::U8 _19613_b = (*(_18614_txt))[_18631_i];;
			if (((_18631_i > 1LL) && ((_19613_b == 'e') || (_19613_b == 'E')))) {
				__jule_func_result = _23ae30200_floatFmtE(_18614_txt, _18631_i);
				return __jule_func_result;;
			};
			if (((_19613_b != '_') && (!(_23ae2a65c_IsDecimal(_19613_b))))) {
				goto _iter_end_1c4de8619;
			};
		}
	_iter_next_1c4de8619:;
	}
	_iter_end_1c4de8619:;;
	if ((_18631_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_18614_txt)).slice(0LL, _18631_i));
	return __jule_func_result;;
}



inline jule::Str _23ae31751_commonNum(jule::Slice<jule::U8>* _21115_txt) {
	jule::Str __jule_func_result;
	jule::I64 _21213_i = 0LL;;
	_julec_label_loop:;
	for (; (_21213_i < (*(_21115_txt)).len()); (_21213_i)++) {
		{
			jule::U8 _21513_b = (*(_21115_txt))[_21213_i];;
			{
				
				if ((_21513_b == '.')) {
					_case_begin_1c4deb9c4:;
					{
						__jule_func_result = _23ae314a9_floatNum(_21115_txt, _21213_i);
						return __jule_func_result;;
					}
				}
				else if ((_21513_b == '_')) {
					_case_begin_1c4deba4b:;
					{
						goto _iter_next_1c4dead58;
					}
				}
				else if (_23ae31d39_isFloatFmtE(_21513_b, _21213_i)) {
					_case_begin_1c4debac3:;
					{
						__jule_func_result = _23ae30200_floatFmtE(_21115_txt, _21213_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_23ae2a65c_IsDecimal(_21513_b)))) {
					_case_begin_1c4debb4a:;
					{
						goto _iter_end_1c4dead58;
					}
				}
				_match_end_1c4deb8e7:;
			};
		}
	_iter_next_1c4dead58:;
	}
	_iter_end_1c4dead58:;;
	if ((_21213_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21115_txt)).slice(0LL, _21213_i));
	return __jule_func_result;;
}



inline jule::Str _23ae319e8_binaryNum(jule::Slice<jule::U8>* _23415_txt) {
	jule::Str __jule_func_result;
	if ((!(_23ae2edae_bytesHasPrefix(_23415_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23415_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _24313_i = 2LL;;
	for (; (_24313_i < (*(_23415_txt)).len()); (_24313_i)++) {
		{
			if ((((*(_23415_txt))[_24313_i] != '_') && (!(_23ae2a904_IsBinary((*(_23415_txt))[_24313_i]))))) {
				goto _iter_end_1c4deb111;
			};
		}
	_iter_next_1c4deb111:;
	}
	_iter_end_1c4deb111:;;
	if ((_24313_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23415_txt)).slice(0LL, _24313_i));
	return __jule_func_result;;
}



inline jule::Bool _23ae31d39_isFloatFmtE(jule::U8 _25616_b, jule::I64 _25625_i) {
	return ((_25625_i > 0LL) && ((_25616_b == 'e') || (_25616_b == 'E')));;
}



inline jule::Bool _23ae3217a_isFloatFmtP(jule::U8 _26016_b, jule::I64 _26025_i) {
	return ((_26025_i > 0LL) && ((_26016_b == 'p') || (_26016_b == 'P')));;
}



inline jule::Bool _23ae324bb_isFloatFmtDotnp(jule::Slice<jule::U8>* _26421_txt, jule::I64 _26438_i) {
	if (((*(_26421_txt))[_26438_i] != '.')) {
		return false;;
	};
	(_26438_i)++;
	_julec_label_loop:;
	for (; (_26438_i < (*(_26421_txt)).len()); (_26438_i)++) {
		{
			jule::U8 _27113_b = (*(_26421_txt))[_26438_i];;
			{
				
				if ((_27113_b == '_') || _23ae2a65c_IsDecimal(_27113_b)) {
					_case_begin_1c4e0337c:;
					{
						goto _iter_next_1c4e02205;
					}
				}
				else if (_23ae3217a_isFloatFmtP(_27113_b, _26438_i)) {
					_case_begin_1c4e033e3:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1c4e03316:;
					{
						goto _iter_end_1c4e02205;
					}
				}
				_match_end_1c4e032a0:;
			};
		}
	_iter_next_1c4e02205:;
	}
	_iter_end_1c4e02205:;;
	return false;;
}



inline jule::Bool _23ae3280c_isFloatFmtDotp(jule::Slice<jule::U8>* _28520_txt, jule::I64 _28533_i) {
	{
		
		if (((*(_28520_txt)).len() < 3LL)) {
			_case_begin_1c4e04614:;
			{
				goto _case_begin_1c4e0468b;
			}
		}
		else if (((*(_28520_txt))[_28533_i] != '.')) {
			_case_begin_1c4e0468b:;
			{
				goto _case_begin_1c4e04713;
			}
		}
		else if ((((*(_28520_txt))[(_28533_i + 1LL)] != 'p') && ((*(_28520_txt))[(_28533_i + 1LL)] != 'P'))) {
			_case_begin_1c4e04713:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c4e0459d:;
			{
				return true;;
			}
		}
		_match_end_1c4e044d2:;
	};
}



inline jule::Bool _23ae32b4d_isFloatFmtDotfp(jule::Slice<jule::U8>* _29821_txt, jule::I64 _29834_i) {
	{
		
		if (((*(_29821_txt)).len() < 4LL)) {
			_case_begin_1c4e0635d:;
			{
				goto _case_begin_1c4e063d5;
			}
		}
		else if (((*(_29821_txt))[_29834_i] != '.')) {
			_case_begin_1c4e063d5:;
			{
				goto _case_begin_1c4e0645c;
			}
		}
		else if ((((*(_29821_txt))[(_29834_i + 1LL)] != 'f') && ((*(_29821_txt))[(_29834_i + 1LL)] != 'F'))) {
			_case_begin_1c4e0645c:;
			{
				goto _case_begin_1c4e064d4;
			}
		}
		else if ((((*(_29821_txt))[(_29834_i + 2LL)] != 'p') && ((*(_29821_txt))[(_29834_i + 1LL)] != 'P'))) {
			_case_begin_1c4e064d4:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c4e05e95:;
			{
				return true;;
			}
		}
		_match_end_1c4e05dc9:;
	};
}



inline jule::Str _23ae3309e_octalNum(jule::Slice<jule::U8>* _31314_txt) {
	jule::Str __jule_func_result;
	if (((*(_31314_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31314_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _32113_octalStart = 1LL;;
	jule::Bool _32313_o = false;;
	if (((*(_31314_txt))[1LL] == 'o')) {
		if (((*(_31314_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_32113_octalStart)++;
		_32313_o=true;
	};
	jule::I64 _33213_i = _32113_octalStart;;
	for (; (_33213_i < (*(_31314_txt)).len()); (_33213_i)++) {
		{
			jule::U8 _33413_b = (*(_31314_txt))[_33213_i];;
			if ((_33413_b == '.')) {
				if (_32313_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _23ae314a9_floatNum(_31314_txt, _33213_i);
				return __jule_func_result;;
			};
			if (_23ae31d39_isFloatFmtE(_33413_b, _33213_i)) {
				__jule_func_result = _23ae30200_floatFmtE(_31314_txt, _33213_i);
				return __jule_func_result;;
			};
			if (((_33413_b != '_') && (!(_23ae2ab9b_IsOctal(_33413_b))))) {
				goto _iter_end_1c4e0ab59;
			};
		}
	_iter_next_1c4e0ab59:;
	}
	_iter_end_1c4e0ab59:;;
	if ((_33213_i == _32113_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31314_txt)).slice(0LL, _33213_i));
	return __jule_func_result;;
}



inline jule::Str _23ae33346_hexNum(jule::Slice<jule::U8>* _35512_txt) {
	jule::Str __jule_func_result;
	if (((*(_35512_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_35512_txt))[0LL] != '0') || (((*(_35512_txt))[1LL] != 'x') && ((*(_35512_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _36413_i = 2LL;;
	_julec_label_loop:;
	for (; (_36413_i < (*(_35512_txt)).len()); (_36413_i)++) {
		{
			jule::U8 _36713_b = (*(_35512_txt))[_36413_i];;
			{
				
				if (_23ae3280c_isFloatFmtDotp(_35512_txt, _36413_i)) {
					_case_begin_1c4e1019c:;
					{
						__jule_func_result = _23ae31058_floatFmtDotp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_23ae32b4d_isFloatFmtDotfp(_35512_txt, _36413_i)) {
					_case_begin_1c4e10224:;
					{
						__jule_func_result = _23ae30c17_floatFmtDotfp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_23ae3217a_isFloatFmtP(_36713_b, _36413_i)) {
					_case_begin_1c4e1029b:;
					{
						__jule_func_result = _23ae30585_floatFmtP(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_23ae324bb_isFloatFmtDotnp(_35512_txt, _36413_i)) {
					_case_begin_1c4e10323:;
					{
						__jule_func_result = _23ae308c6_floatFmtDotnp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (((_36713_b != '_') && (!(_23ae2ae43_IsHex(_36713_b))))) {
					_case_begin_1c4e1039a:;
					{
						goto _iter_end_1c4e0e61e;
					}
				}
				_match_end_1c4e100ae:;
			};
		}
	_iter_next_1c4e0e61e:;
	}
	_iter_end_1c4e0e61e:;;
	if ((_36413_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_35512_txt)).slice(0LL, _36413_i));
	return __jule_func_result;;
}



inline jule::Str _23ae33687_hexEscape(jule::Slice<jule::U8>* _38815_txt, jule::I64 _38828_n) {
	jule::Str __jule_func_result;
	if (((*(_38815_txt)).len() < _38828_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _39413_i = 2LL;;
	for (; (_39413_i < _38828_n); (_39413_i)++) {
		{
			if ((!(_23ae2ae43_IsHex((*(_38815_txt))[_39413_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1c4e12853:;
	}
	_iter_end_1c4e12853:;;
	__jule_func_result=static_cast<jule::Str>((*(_38815_txt)).slice(0LL, _38828_n));
	return __jule_func_result;;
}



inline jule::Str _23ae3392e_bigUnicodePointEscape(jule::Slice<jule::U8>* _40627_txt) {
	return _23ae33687_hexEscape(_40627_txt, 10LL);;
}



inline jule::Str _23ae33be8_littleUnicodePointEscape(jule::Slice<jule::U8>* _41130_txt) {
	return _23ae33687_hexEscape(_41130_txt, 6LL);;
}



inline jule::Str _23ae33da2_hexByteEscape(jule::Slice<jule::U8>* _41619_txt) {
	return _23ae33687_hexEscape(_41619_txt, 4LL);;
}



inline jule::Str _23ae34138_byteEscape(jule::Slice<jule::U8>* _42116_txt) {
	jule::Str __jule_func_result;
	if (((*(_42116_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_23ae2ab9b_IsOctal((*(_42116_txt))[1LL]))) || (!(_23ae2ab9b_IsOctal((*(_42116_txt))[2LL])))) || (!(_23ae2ab9b_IsOctal((*(_42116_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42116_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_23aa28854_Log> _23ae38b32_Lex(jule::Ptr<_23ae2becc_File> _81012_f, jule::I64 _81022_mode) {
	if ((_81012_f == nullptr)) {
		return nullptr;;
	};
	_23ae34820_lex _81513_lex = _23ae34820_lex{._field_mode=_81022_mode, ._field_file=_81012_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_23ae3736c_newLine(&_81513_lex);
	_23ae3536a_lex(&_81513_lex);
	if ((_81513_lex._field_errors.len() > 0LL)) {
		return _81513_lex._field_errors;;
	};
	_81012_f.get()._field_Tokens=_81513_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _24a1b2d8b_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _24a1c0173_Len64(_6119_x)));;
}



inline jule::I64 _24a1b8bc7_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_24a1b97bb_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _24a1b9524_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_24a1b3496__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _24a1b97bb_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_24a1b3a5c__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _24a1bedcb_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _24a1c0173_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _24a1c0d33_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _24a1c24b6_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _24a0e62ec_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _24a0e65d8_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _24a0e6880_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _24a0e6b9e_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _24a0e918a_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1c4d58447:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_24a1c9d3c_IsInf(_4714_f, 0LL) || _24a1c9787_IsNaN(_4714_f)) {
			_case_begin_1c4d584be:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1c4d58337:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _24a1ca0d4_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _24a0e6880_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_24a0e6b9e_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _24a1c949b_NaN(void) {
	return static_cast<jule::F64>(_24a0e6b9e_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _24a1c9787_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _24a1c9a2e_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_24a0e6b9e_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_24a0e6b9e_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _24a1c9d3c_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _24a1ca0d4_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_24a1cc35b_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _24a1cb9ba_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_24a1c9787_IsNaN(_1118_x) || _24a1c9d3c_IsInf(_1118_x, 1LL)) {
			_case_begin_1c4d95d58:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1c4d95dd0:;
			{
				return static_cast<jule::F64>(_24a1c949b_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1c4d95e57:;
			{
				return static_cast<jule::F64>(_24a1c9a2e_Inf(-1LL));;
			}
		}
		_match_end_1c4d95c9d:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _24a0e918a_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _24a1cc35b_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_24a0e6b9e_F64FromBits(static_cast<jule::U64>((_24a0e6880_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _24a1d3c9c_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _24a1cc35b_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1c506a6ae:;
		}
		_iter_end_1c506a6ae:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _24a1d4561_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _24a0e918a_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_24a1cb9ba_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _24a20d117_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_24a20d689_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _24a211725_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _24a20d689_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_23b6109bd_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1c5e29b44:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_24a0e62ec_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_23b6109bd_floatInfo>)((&(_24a20c369_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c5e29baa:;
			{
				_8313_bits=static_cast<jule::U64>(_24a0e6880_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_23b6109bd_floatInfo>)((&(_24a20c677_f64info))));
			}
		}
		else {
			_case_begin_1c5e2955b:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1c5e27a76:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1c5e2ce55:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1c5e2ede1:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1c5e30177:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1c5e2e1ba:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1c5e2e0ee:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c5e2d4d8:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1c5e2988b:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1c5e2ce00:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _24a210922_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _24a211093_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_24a20cac8_decimalSlice _13213_digs = _24a20cac8_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_24a21ae6b_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c5e336b9:;
				{
					_8258_prec=static_cast<jule::I64>(_24a211725_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c5e33730:;
				{
					_8258_prec=static_cast<jule::I64>(_24a211725_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c5e337a7:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1c5e327a6:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c5e33c08:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c5e355de:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1c5e354ce:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1c5e35479:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_24a219cc2_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_24a21a212_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _24a20dd0a_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _24a20e459_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _24a20dd0a_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _23b6109bd_floatInfo* _18327_flt) {
	_24a21e964_decimal _18413_d = _24a21e964_decimal{};;
	_24a21ece9_assign(&_18413_d, _1835_mant);
	_24a22006e_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_24a20cac8_decimalSlice _18713_digs = _24a20cac8_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_24a20e855_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_24a20cac8_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c5e3c151:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c5e39ca8:;
				{
					_18233_prec=static_cast<jule::I64>(_24a211725_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c5e3c1c8:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1c5e3bc11:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c5e3b32b:;
				{
					_24a2207de_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c5e3b3a3:;
				{
					_24a2207de_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c5e3b42a:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_24a2207de_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1c5e3d99e:;
		};
		_18713_digs=_24a20cac8_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _24a20e459_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _24a20e459_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _24a20cac8_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1c5e41881:;
			{
				return _24a20ed83_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c5e418e7:;
			{
				return _24a210317_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1c5e4195d:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _24a20ed83_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _24a210317_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_24a211725_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1c5e4173d:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _24a20e855_roundShortest(_24a21e964_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _23b6109bd_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_24a21e964_decimal _28713_upper = _24a21e964_decimal{};;
	_24a21ece9_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_24a22006e_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_24a21e964_decimal _30613_lower = _24a21e964_decimal{};;
	_24a21ece9_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_24a22006e_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1c5e4d409;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1c5e52e8b:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1c5e53013:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1c5e5308a:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1c5e52dd1:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1c5e5593e:;
					{
						_24a2207de_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1c5e559a5:;
					{
						_24a2202e4_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1c5e55a1b:;
					{
						_24a220569_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1c5e52276:;
			};
		}
	_iter_next_1c5e4d409:;
	}
	_iter_end_1c5e4d409:;;
}



inline jule::Slice<jule::U8> _24a20ed83_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _24a20cac8_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _24a2113d4_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41217_i, _41313_m));;
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c5e5a78a:;
		}
		_iter_end_1c5e5a78a:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1c5e5c54a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0'))); };
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1c5e5c3b3:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1c5e5c182:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1c5e5b813:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _24a210317_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _24a20cac8_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _24a2113d4_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45917_m));;
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c5e61175:;
		}
		_iter_end_1c5e61175:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47221_ch); };
			}
		_iter_next_1c5e621ba:;
		}
		_iter_end_1c5e621ba:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _24a210922_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _23b6109bd_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _24a22476b_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _24a22476b_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _24a211093_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _23b6109bd_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1c5e67ad8:;
	}
	_iter_end_1c5e67ad8:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1c5e6d050:;
		}
		_iter_end_1c5e6d050:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1c5e6e1e9:;
		}
		_iter_end_1c5e6e1e9:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _24a21224d_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1c5e7197c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1c5e6b823:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1c5e715d6:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1c5e70d88:;
	};
	return _50613_dst;;
}



inline jule::I64 _24a2113d4_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _24a211725_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _24a21224d_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__23b5dc8e0_ConvError _24a21267c_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__23b5dc8e0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if ((*(_5119_s)).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1c5e77bc5:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1c5e77ab5:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_24a21224d_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1c5e796bb:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_24a21224d_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1c5e794ce:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_24a21224d_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1c5e79556:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c5e79127:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1c5e7905b:;
					};
				};
			}
		}
		else {
			_case_begin_1c5e7708c:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1c5e77400:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1c5e7d35c:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c5e7cbdb:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1c5e7ce2d:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1c5e7cdc8:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c5e7d03d:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c5e7e33b:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1c5e7e2d6:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e801d8:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1c5e7e65a:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _24a21224d_lower(_10912_c)) && (_24a21224d_lower(_10912_c) <= 'z'))) {
						_case_begin_1c5e813e8:;
						{
							_11017_d=static_cast<jule::U8>(((_24a21224d_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1c5e8101e:;
						{
							goto _iter_next_1c5e801d8;
						}
					}
					else {
						_case_begin_1c5e80ea8:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1c5e80e42:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1c5e801d8:;
			++it;
			goto _iter_begin_1c5e801d8;
		}
		_iter_end_1c5e801d8:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _24a212a67_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__23b5dc8e0_ConvError __jule_assign_result = _24a21267c_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _24a212ec9_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__23b5dc8e0_ConvError __jule_assign_result = _24a21267c_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _24a213ae0_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_24a0e6b9e_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _24a1b2d8b_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24a1c24b6_Mul64(_4122_man, _24a214959_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24a1c24b6_Mul64(_4122_man, _24a214959_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_24a0e6b9e_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _24a213edb_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_24a0e65d8_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _24a1b2d8b_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24a1c24b6_Mul64(_11022_man, _24a214959_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24a1c24b6_Mul64(_11022_man, _24a214959_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_24a0e65d8_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _24a215d34_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>* _4631_s, jule::Str _4642_prefix) {
	jule::I64 _4713_n = _4642_prefix.len();;
	if ((_4713_n > (*(_4631_s)).len())) {
		_4713_n=static_cast<jule::I64>((*(_4631_s)).len());
	};
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4713_n); (_5113_i)++) {
		{
			jule::U8 _5317_c = (*(_4631_s))[_5113_i];;
			if ((('A' <= _5317_c) && (_5317_c <= 'Z'))) {
				_5317_c+=32LL;
			};
			if ((_5317_c != _4642_prefix[_5113_i])) {
				return _5113_i;;
			};
		}
	_iter_next_1c5ea4839:;
	}
	_iter_end_1c5ea4839:;;
	return _4713_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _24a216131_special(jule::Slice<jule::U8> _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7313_sign = 1LL;;
	jule::I64 _7413_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1c5ea8101:;
			{
				if ((_6912_s[0LL] == '-')) {
					_7313_sign=-1LL;
				};
				_7413_nsign=1LL;
				{
					jule::Slice<jule::U8>* _8321_sp = (&(_6912_s));;
					(*(_8321_sp))=(*(_8321_sp)).slice(1LL);
				};
				goto _case_begin_1c5ea8178;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1c5ea8178:;
			{
				jule::I64 _8817_caseN = _24a215d34_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("infinity", 8));;
				if (((3LL < _8817_caseN) && (_8817_caseN < 8LL))) {
					_8817_caseN=3LL;
				};
				if (((_8817_caseN == 3LL) || (_8817_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_24a1c9a2e_Inf(_7313_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7413_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1c5ea8200:;
			{
				if ((_24a215d34_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_24a1c949b_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c5ea8035:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _24a2163c8_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1c5ead524:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1c5ead7aa:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1c5ead6de:;
	};
	jule::U64 _12213_base = 10LLU;;
	jule::I64 _12313_maxMantDigits = 19LL;;
	jule::U8 _12413_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_24a21224d_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_12213_base=16LLU;
		_12313_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_12413_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _13213_sawdot = false;;
	jule::Bool _13313_sawdigits = false;;
	jule::I64 _13413_nd = 0LL;;
	jule::I64 _13513_ndMant = 0LL;;
	jule::I64 _13613_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13813_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13813_c == '_')) {
					_case_begin_1c5eb379e:;
					{
						goto _iter_next_1c5eb2d42;
					}
				}
				else if ((_13813_c == '.')) {
					_case_begin_1c5eb3826:;
					{
						if (_13213_sawdot) {
							goto _julec_label_loop_end;
						};
						_13213_sawdot=true;
						_13613_dp=_13413_nd;
						goto _iter_next_1c5eb2d42;
					}
				}
				else if ((('0' <= _13813_c) && (_13813_c <= '9'))) {
					_case_begin_1c5eb389d:;
					{
						_13313_sawdigits=true;
						if (((_13813_c == '0') && (_13413_nd == 0LL))) {
							(_13613_dp)--;
							goto _iter_next_1c5eb2d42;
						};
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_12213_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13813_c - '0'));
							(_13513_ndMant)++;
						} else if ((_13813_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c5eb2d42;
					}
				}
				else if ((((_12213_base == 16LLU) && ('a' <= _24a21224d_lower(_13813_c))) && (_24a21224d_lower(_13813_c) <= 'f'))) {
					_case_begin_1c5eb3925:;
					{
						_13313_sawdigits=true;
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_24a21224d_lower(_13813_c) - 'a') + 10LLU));
							(_13513_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c5eb2d42;
					}
				}
				_match_end_1c5eb36c2:;
			};
			goto _iter_end_1c5eb2d42;
		}
	_iter_next_1c5eb2d42:;
	}
	_iter_end_1c5eb2d42:;;
	_julec_label_loop_end:;
	if ((!(_13313_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_13213_sawdot))) {
		_13613_dp=_13413_nd;
	};
	if ((_12213_base == 16LLU)) {
		_13613_dp*=4LL;
		_13513_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_24a21224d_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _12413_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20117_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20117_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1c5ebb202;
				};
				if ((_21117_e < 10000LL)) {
					_21117_e=static_cast<jule::I64>((((_21117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1c5ebb202:;
		}
		_iter_end_1c5ebb202:;;
		_13613_dp+=(_21117_e * _20117_esign);
	} else if ((_12213_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13613_dp - _13513_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _24a217d58_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _24a20c677_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1c5ec4a24:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1c5ec4a9b:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_24a217275_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _24a217275_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1c5ec4b23:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_24a217275_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c5ec43d6:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _24a218243_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _24a20c369_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1c5ec8d69:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1c5ec8de1:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_24a2175b6_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _24a2175b6_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1c5ec8e68:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_24a2175b6_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c5ec872b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__23b5dc8e0_ConvError _24a218771_atofHex(_23b6109bd_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__23b5dc8e0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5579_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5589_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1c5ecba09:;
	}
	_iter_end_1c5ecba09:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1c5eced2b:;
	}
	_iter_end_1c5eced2b:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5589_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1c5ed0513:;
	}
	_iter_end_1c5ed0513:;;
	jule::U64 _58813_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_58813_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_58813_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _60313_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5579_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5579_maxExp + 1LL));
		_60313_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _61013_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_61013_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_61013_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _24a20c369_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_24a0e65d8_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_61013_bits)))));
		__jule_func_result.__jule_result_arg1 = _60313_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_24a0e6b9e_F64FromBits(_61013_bits));
	__jule_func_result.__jule_result_arg1 = _60313_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError _24a218b28_atof32(jule::Str* _62112_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _62314_val = 0;;
		jule::I64 _62319__n = 0;;
		jule::Bool _62323_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a216131_special(_2398a2e1b_Stobs(_62112_s));
			_62314_val = __jule_assign_result.__jule_result_arg0;
			_62319__n = __jule_assign_result.__jule_result_arg1;
			_62323_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62323_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_62314_val));
			__jule_func_result.__jule_result_arg1 = _62319__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62910_mantissa = 0;;
	jule::I64 _62920_exp = 0;;
	jule::Bool _62925_neg = false;;
	jule::Bool _62930_trunc = false;;
	jule::Bool _62937_hex = false;;
	jule::I64 _62942__n = 0;;
	jule::Bool _62950_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a2163c8_readFloat(_62112_s);
		_62910_mantissa = __jule_assign_result.__jule_result_arg0;
		_62920_exp = __jule_assign_result.__jule_result_arg1;
		_62925_neg = __jule_assign_result.__jule_result_arg2;
		_62930_trunc = __jule_assign_result.__jule_result_arg3;
		_62937_hex = __jule_assign_result.__jule_result_arg4;
		_62942__n = __jule_assign_result.__jule_result_arg5;
		_62950_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62942__n;
	if ((!(_62950_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62937_hex) {
		jule::F64 _63617_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__23b5dc8e0_ConvError __jule_assign_result = _24a218771_atofHex(&(_24a20c369_f32info), _62910_mantissa, _62920_exp, _62925_neg, _62930_trunc);
			_63617_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63617_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62930_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _24a218243_atof32exact(_62910_mantissa, _62920_exp, _62925_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62950_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _24a213edb_eiselLemire32(_62910_mantissa, _62920_exp, _62925_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62950_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62950_ok) {
			if ((!(_62930_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65821_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _24a213edb_eiselLemire32(static_cast<jule::U64>((_62910_mantissa + 1LLU)), _62920_exp, _62925_neg);
				_65821_fUp = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62950_ok && (__jule_func_result.__jule_result_arg0 == _65821_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_24a21e964_decimal _66713_d = _24a21e964_decimal{};;
	if ((!(_24a216a38_set(&_66713_d, _2398a2e1b_Stobs(_62112_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _67110_b = 0;;
	jule::Bool _67113_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _24a216d46_floatBits(&_66713_d, &(_24a20c369_f32info));
		_67110_b = __jule_assign_result.__jule_result_arg0;
		_67113_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_24a0e65d8_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_67110_b))));
	if (_67113_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError _24a218dc0_atof64(jule::Str* _67912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _68114_val = 0;;
		jule::I64 _68119__n = 0;;
		jule::Bool _68123_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a216131_special(_2398a2e1b_Stobs(_67912_s));
			_68114_val = __jule_assign_result.__jule_result_arg0;
			_68119__n = __jule_assign_result.__jule_result_arg1;
			_68123_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68123_ok) {
			__jule_func_result.__jule_result_arg0 = _68114_val;
			__jule_func_result.__jule_result_arg1 = _68119__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68710_mantissa = 0;;
	jule::I64 _68720_exp = 0;;
	jule::Bool _68725_neg = false;;
	jule::Bool _68730_trunc = false;;
	jule::Bool _68737_hex = false;;
	jule::I64 _68742__n = 0;;
	jule::Bool _68750_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a2163c8_readFloat(_67912_s);
		_68710_mantissa = __jule_assign_result.__jule_result_arg0;
		_68720_exp = __jule_assign_result.__jule_result_arg1;
		_68725_neg = __jule_assign_result.__jule_result_arg2;
		_68730_trunc = __jule_assign_result.__jule_result_arg3;
		_68737_hex = __jule_assign_result.__jule_result_arg4;
		_68742__n = __jule_assign_result.__jule_result_arg5;
		_68750_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68742__n;
	if ((!(_68750_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68737_hex) {
		({
			__jule_tuple_f64__jule_tuple__23b5dc8e0_ConvError __jule_assign_result = _24a218771_atofHex(&(_24a20c677_f64info), _68710_mantissa, _68720_exp, _68725_neg, _68730_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68730_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _24a217d58_atof64exact(_68710_mantissa, _68720_exp, _68725_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68750_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _24a213ae0_eiselLemire64(_68710_mantissa, _68720_exp, _68725_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68750_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68750_ok) {
			if ((!(_68730_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71521_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _24a213ae0_eiselLemire64(static_cast<jule::U64>((_68710_mantissa + 1LLU)), _68720_exp, _68725_neg);
				_71521_fUp = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68750_ok && (__jule_func_result.__jule_result_arg0 == _71521_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_24a21e964_decimal _72413_d = _24a21e964_decimal{};;
	if ((!(_24a216a38_set(&_72413_d, _2398a2e1b_Stobs(_67912_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72810_b = 0;;
	jule::Bool _72813_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _24a216d46_floatBits(&_72413_d, &(_24a20c677_f64info));
		_72810_b = __jule_assign_result.__jule_result_arg0;
		_72813_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_24a0e6b9e_F64FromBits(_72810_b));
	if (_72813_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError _24a219211_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _73814_f = 0;;
		jule::I64 _73817_n = 0;;
		jule::I64 _73820_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError __jule_assign_result = _24a218b28_atof32(_73622_s);
			_73814_f = __jule_assign_result.__jule_result_arg0;
			_73817_n = __jule_assign_result.__jule_result_arg1;
			_73820_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73814_f));
		__jule_func_result.__jule_result_arg1 = _73817_n;
		__jule_func_result.__jule_result_arg2 = _73820_err;
		return __jule_func_result;;
	};
	jule::F64 _74110_f = 0;;
	jule::I64 _74113_n = 0;;
	jule::I64 _74116_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError __jule_assign_result = _24a218dc0_atof64(_73622_s);
		_74110_f = __jule_assign_result.__jule_result_arg0;
		_74113_n = __jule_assign_result.__jule_result_arg1;
		_74116_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _74110_f;
	__jule_func_result.__jule_result_arg1 = _74113_n;
	__jule_func_result.__jule_result_arg2 = _74116_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _24a219552_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _77010_f = 0;;
	jule::I64 _77013_n = 0;;
	jule::I64 _77016_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__23b5dc8e0_ConvError __jule_assign_result = _24a219211_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_77010_f = __jule_assign_result.__jule_result_arg0;
		_77013_n = __jule_assign_result.__jule_result_arg1;
		_77016_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_77013_n != _76915_s.len()) && ((_77016_err == static_cast<jule::I64>(0LL)) || (_77016_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77016_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77016_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _77010_f);;
}



inline void _24a219cc2_ryuFtoaFixed32(_24a20cac8_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _24a1bedcb_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_24a21b213_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a21c90c_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _24a21d138_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_24a21a9e8_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _24a21a212_ryuFtoaFixed64(_24a20cac8_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _24a1c0173_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_24a21b213_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a21cce7_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _24a21d138_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_24a21a9e8_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _24a21a9e8_formatDecimal(_24a20cac8_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _24a21a542_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1c6014239:;
	}
	_iter_end_1c6014239:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1c6017506:;
	}
	_iter_end_1c6017506:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1c601ccc0:;
	}
	_iter_end_1c601ccc0:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _24a21ae6b_ryuFtoaShortest(_24a20cac8_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _23b6109bd_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_24a1b97bb_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_24a21be39_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _24a21b895_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_24a21be39_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_24a21b213_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _24a20c369_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a21c90c_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a21c90c_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a21c90c_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a21cce7_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a21cce7_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _24a21cce7_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_24a21d138_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_24a21d138_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_24a21d138_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_24a21be39_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _24a21b213_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _24a21b4aa_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _24a21b895_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _23b6109bd_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _24a21be39_ryuDigits(_24a20cac8_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _24a21d3d0_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _24a21d3d0_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _24a21d3d0_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_24a21c522_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_24a21c522_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1c603ab12:;
		}
		_iter_end_1c603ab12:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_24a21c522_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1c603b0a7:;
	}
	_iter_end_1c603b0a7:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1c6038a99:;
	}
	_iter_end_1c6038a99:;;
}



inline void _24a21c522_ryuDigits32(_24a20cac8_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1c6040d8c;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1c6040d8c:;
	}
	_iter_end_1c6040d8c:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1c6047129:;
	}
	_iter_end_1c6047129:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _24a21c90c_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _24a214959_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24a1c24b6_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_24a21b4aa_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _24a21cce7_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _24a214959_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_24a21b4aa_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24a1c24b6_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24a1c24b6_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24a1c0d33_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _24a21d138_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1c60552e1:;
	}
	_iter_end_1c60552e1:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _24a21d3d0_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _24a22114c_trim(_24a21e964_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1c6058811:;
	}
	_iter_end_1c6058811:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _24a221405_rightShift(_24a21e964_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _28513_r = 0LL;;
	jule::I64 _28613_w = 0LL;;
	jule::U64 _28913_n = 0LLU;;
	for (; ((_28913_n >> _28432_k) == 0LLU); (_28513_r)++) {
		{
			if ((_28513_r >= (*(_28420_a))._field_nd)) {
				if ((_28913_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_28913_n >> _28432_k) == 0LLU)) {
					{
						_28913_n=static_cast<jule::U64>((_28913_n * 10LLU));
						(_28513_r)++;
					}
				_iter_next_1c605c073:;
				}
				_iter_end_1c605c073:;;
				goto _iter_end_1c605a549;
			};
			jule::U64 _30313_c = static_cast<jule::U64>((*(_28420_a))._field_d[_28513_r]);;
			_28913_n=static_cast<jule::U64>((((_28913_n * 10LLU) + _30313_c) - '0'));
		}
	_iter_next_1c605a549:;
	}
	_iter_end_1c605a549:;;
	(*(_28420_a))._field_dp-=(_28513_r - 1LL);
	jule::U64 _3089_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _28432_k)) - 1LLU));;
	for (; (_28513_r < (*(_28420_a))._field_nd); (_28513_r)++) {
		{
			jule::U64 _31213_c = static_cast<jule::U64>((*(_28420_a))._field_d[_28513_r]);;
			jule::U64 _31313_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_31313_dig + '0')));
			(_28613_w)++;
			_28913_n=static_cast<jule::U64>((((_28913_n * 10LLU) + _31213_c) - '0'));
		}
	_iter_next_1c605ddaa:;
	}
	_iter_end_1c605ddaa:;;
	while ((_28913_n > 0LLU)) {
		{
			jule::U64 _32213_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			if ((_28613_w < 800LL)) {
				(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_32213_dig + '0')));
				(_28613_w)++;
			} else if ((_32213_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_28913_n=static_cast<jule::U64>((_28913_n * 10LLU));
		}
	_iter_next_1c60606d6:;
	}
	_iter_end_1c60606d6:;;
	(*(_28420_a))._field_nd=_28613_w;
	_24a22114c_trim(_28420_a);
}



inline jule::Bool _24a221867_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _33913_i = 0LL;;
	for (; (_33913_i < (*(_33846_s)).len()); (_33913_i)++) {
		{
			if ((_33913_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_33913_i] != (*(_33846_s))[_33913_i])) {
				return (_33821_b[_33913_i] < (*(_33846_s))[_33913_i]);;
			};
		}
	_iter_next_1c6063233:;
	}
	_iter_end_1c6063233:;;
	return false;;
}



inline void _24a221adc_leftShift(_24a21e964_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _35313_delta = _24a21e3c0_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_24a221867_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_24a21e3c0_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_35313_delta)--;
	};
	jule::I64 _35813_r = (*(_35219_a))._field_nd;;
	jule::I64 _35913_w = ((*(_35219_a))._field_nd + _35313_delta);;
	jule::U64 _36213_n = 0LLU;;
	(_35813_r)--;
	for (; (_35813_r >= 0LL); (_35813_r)--) {
		{
			_36213_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_35813_r]) - '0') << _35231_k);
			jule::U64 _36613_quo = (_36213_n / 10LLU);;
			jule::U64 _36713_rem = (_36213_n - (10LLU * _36613_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_36713_rem + '0')));
			} else if ((_36713_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_36613_quo;
		}
	_iter_next_1c6065b5e:;
	}
	_iter_end_1c6065b5e:;;
	while ((_36213_n > 0LLU)) {
		{
			jule::U64 _37913_quo = (_36213_n / 10LLU);;
			jule::U64 _38013_rem = (_36213_n - (10LLU * _37913_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38013_rem + '0')));
			} else if ((_38013_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_37913_quo;
		}
	_iter_next_1c60666a9:;
	}
	_iter_end_1c60666a9:;;
	(*(_35219_a))._field_nd+=_35313_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_35313_delta;
	_24a22114c_trim(_35219_a);
}



inline jule::Bool _24a221e2d_shouldRoundUp(_24a21e964_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _24a22354a_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _24a223e96_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _24a22476b_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _24a2238d0_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _24a223e96_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _24a22476b_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _24a223b77_Itoa(jule::I64 _809_i) {
	return _24a2238d0_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _24a223e96_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _24a22423d_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _24a22476b_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1c51dace6:;
		}
		_iter_end_1c51dace6:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_24a22423d_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_24a1b8bc7_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1c51e356d:;
		}
		_iter_end_1c51e356d:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1c51e5d01:;
		}
		_iter_end_1c51e5d01:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _24a225a47_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c520b212:;
			{
				return _24a225096_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c520b278:;
			{
				return _24a225360_SysUint;;
			}
		}
		else {
			_case_begin_1c520caa4:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1c520a398:;
	};
}



inline jule::I64 _24a225cde_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1c520da3e:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1c520db71:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1c520dbd7:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1c520dc4d:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c520dcb4:;
			{
				return _24a224d76_BitSize;;
			}
		}
		else {
			_case_begin_1c520d698:;
			{
				return -1LL;;
			}
		}
		_match_end_1c520dac7:;
	};
}



inline jule::Str _24a22610d_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c52105ce:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c5210eb4:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c521102a:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c5211091:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1c5210a52:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c520de07:;
	};
}



inline jule::Str _24a2263a5_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c52119a9:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c52121a2:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c5212218:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c521227e:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1c52115ad:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c5211558:;
	};
}



inline jule::Str _24a22664c_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1c5212b97:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c5213390:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1c521279b:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c5212746:;
	};
}



inline jule::Bool _24a2271ec_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _24a219552_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _24a227494_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1c52182c9:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c5216629:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c52176a2:;
	};
}



inline jule::I64 _24a22773b_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1c5218ede:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1c5218d8a:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1c5218e12:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c5218472:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c52188b2:;
	};
}



inline jule::I64 _24a2279d3_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1c521a96e:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1c521a82b:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1c521a892:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c5219b38:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c521a452:;
	};
}



inline void _24a227b48_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _23ab0ccac_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1c521b6ea:;
				{
					_24a224d76_BitSize=64LLU;
					_24a225096_SysInt=jule::Str("i64", 3);
					_24a225360_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1c521b761:;
				{
					_24a224d76_BitSize=32LLU;
					_24a225096_SysInt=jule::Str("i32", 3);
					_24a225360_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1c521b277:;
		};
	};
}



inline void _24a227cad_init(void) {
	_24a227b48_UpdateTarget();
}



inline jule::I64 _24a22ba4d_MinI(jule::Str _6113_k) {
	_6113_k=_24a225a47_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c521ab4a:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c521d961:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c521d9c7:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c521da3d:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1c521bb5c:;
			{
				return 0LL;;
			}
		}
		_match_end_1c521b92b:;
	};
}



inline jule::I64 _24a22bd39_MaxI(jule::Str _7913_k) {
	_7913_k=_24a225a47_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c521dbc5:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c521eed4:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c522004a:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c52200b1:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1c521ec1a:;
			{
				return 0LL;;
			}
		}
		_match_end_1c521e92e:;
	};
}



inline jule::U64 _24a22c0d1_MaxU(jule::Str _9713_k) {
	_9713_k=_24a225a47_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c5220237:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c5221546:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c52215ac:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c5221623:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1c522127c:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c5220e91:;
	};
}



inline jule::F64 _24a22c2e0_Min(jule::Str _11512_k) {
	_11512_k=_24a225a47_RealKindOf(_11512_k);
	jule::I64 _1179_i = _24a22ba4d_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c5223a10:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c522358c:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1c522301a:;
			{
				return 0LL;;
			}
		}
		_match_end_1c5223658:;
	};
}



inline jule::F64 _24a22c587_Max(jule::Str _13312_k) {
	_13312_k=_24a225a47_RealKindOf(_13312_k);
	jule::I64 _1359_i = _24a22bd39_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _24a22c0d1_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c5225ced:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c522587a:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1c5225308:;
			{
				return 0LL;;
			}
		}
		_match_end_1c5225946:;
	};
}



inline jule::Bool _24a22c9d8_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _24a22ccc4_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _24a22d06b_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _24a22d38a_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _24a22d632_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _24a22d8c9_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _24a22db71_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _24a22dee5_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _24a22e28c_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _24a22e534_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _24a22e875_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c522b8b4:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c522ac26:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c522b3ec:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c522b463:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c522b4c9:;
			{
				return _24a22c9d8_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c522b540:;
			{
				return _24a22ccc4_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c522b92a:;
			{
				return _24a22d06b_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c522b991:;
			{
				return _24a22d38a_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c522ba07:;
			{
				return _24a22d632_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c522ba6d:;
			{
				return _24a22d8c9_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c522bae5:;
			{
				return _24a22db71_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c522bb6c:;
			{
				return _24a22dee5_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c522bbe4:;
			{
				return _24a22e28c_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c522bc6b:;
			{
				return _24a22e534_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1c522bce3:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1c522bd6a:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1c522b287:;
			{
				return false;;
			}
		}
		_match_end_1c52261c7:;
	};
}



inline jule::Bool _24a22eb1c_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _24a22edb4_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _24a23015b_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _24a230403_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _24a230854_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _24a230aeb_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _24a230d93_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _24a23113a_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _24a23147b_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c5234526:;
			{
				return _24a2324b0_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c522d542:;
			{
				return _24a23279b_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c5234416:;
			{
				return _24a23279b_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c523401a:;
			{
				return _24a22eb1c_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c5234081:;
			{
				return _24a22edb4_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c52340e7:;
			{
				return _24a23015b_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c523416e:;
			{
				return _24a230403_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c523458c:;
			{
				return _24a230854_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c5234614:;
			{
				return _24a230aeb_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c523468b:;
			{
				return _24a230d93_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c5234713:;
			{
				return _24a23113a_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c523478a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c5233de9:;
			{
				return false;;
			}
		}
		_match_end_1c5233bb8:;
	};
}



inline jule::Bool _24a2324b0_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _24a23279b_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _24a232a43_IsInt(jule::Str _4610_k) {
	return (_24a2324b0_IsSigInt(_4610_k) || _24a23279b_IsUnsigInt(_4610_k));;
}



inline jule::Bool _24a232d62_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _24a233109_IsNum(jule::Str _5610_k) {
	return (_24a232a43_IsInt(_5610_k) || _24a232d62_IsFloat(_5610_k));;
}



inline jule::Bool _24a2333a1_IsSigNum(jule::Str _6113_k) {
	return (_24a2324b0_IsSigInt(_6113_k) || _24a232d62_IsFloat(_6113_k));;
}



inline void _24a23bc6c_lshiftUnsig(_24a233549_Const* _59021_c, _24a233549_Const* _59032_x) {
	jule::U64 _5919_l = _24a235cbb_AsU64(_59021_c);;
	jule::U64 _5929_r = _24a235cbb_AsU64(_59032_x);;
	_24a23652a_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _24a23c069_rshiftUnsig(_24a233549_Const* _59621_c, _24a233549_Const* _59632_x) {
	jule::U64 _5979_l = _24a235cbb_AsU64(_59621_c);;
	jule::U64 _5989_r = _24a235cbb_AsU64(_59632_x);;
	_24a23652a_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1dce24396_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1dce244c8_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1dce3ba2e_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1dce3b15a_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1dce3b479_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				(_4713_s).append(_1dce3bd70_strEsqSeq(_4210_bytes, &(_4813_i)));;
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_23a950c76_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1c52db15a:;
	}
	_iter_end_1c52db15a:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1dce3b721_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1c52e03b2:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c52e0428:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c52e048e:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1c52e0505:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1c52e057c:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c52e0604:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1c52e067b:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1c52e0703:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1c52e077a:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1c52e0802:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1c52e0208:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1dce3ba2e_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1dce3b721_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1c52e4c79:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _24a212a67_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c52e550a:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _24a212a67_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c52e4e00:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _24a212a67_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1c52e3cab:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _24a212a67_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1c52e4086:;
	};
}



inline jule::Slice<jule::U8> _1dce3bd70_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _1dce3ba2e_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I64 _1dd03bd82_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I64* _1038_start) {
	jule::I64 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1c61ec774:;
	}
	_iter_end_1c61ec774:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1dd042937_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _289_start = (*(_2724_i));;
	jule::I64 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94e912_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1c6200139:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1c62001a0:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1c61eed2b:;
			};
		}
	_iter_next_1c61ee402:;
	}
	_iter_end_1c61ee402:;;
	return nullptr;;
}



inline void _1dd042be0_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1c6201c84:;
			{
				(*(_4722_buf))+=_24a20d117_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type133))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c62004be:;
			{
				(*(_4722_buf))+=_24a20d117_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1c6201646:;
			{
				(*(_4722_buf))+=_24a2238d0_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type134)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1c62016ac:;
			{
				(*(_4722_buf))+=_24a2238d0_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type135)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c6201723:;
			{
				(*(_4722_buf))+=_24a2238d0_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c6201789:;
			{
				(*(_4722_buf))+=_24a2238d0_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1c6201cea:;
			{
				(*(_4722_buf))+=_24a22354a_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type132)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1c6201d61:;
			{
				(*(_4722_buf))+=_24a22354a_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type136)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1c6201dc7:;
			{
				(*(_4722_buf))+=_24a22354a_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type137)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c6201e3d:;
			{
				(*(_4722_buf))+=_24a22354a_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c6201ea4:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c620201a:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_1c6201129:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1c6200e92:;
	};
}



inline void _1dd0430b9_applyFmtByDefault(jule::Str* _8627_buf, jule::I64* _8642_j, jule::Slice<jule::Any> _8650_args) {
	jule::Any _879_arg = _8650_args[(*(_8642_j))];;
	((*(_8642_j)))++;
	_1dd042be0_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _1dd0434b5_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I64* _9451_j, jule::Slice<jule::Any> _9459_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1dd0430b9_applyFmtByDefault(_9436_buf, _9451_j, _9459_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_2398a35c0_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _1dd0437c3_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _2398a2e1b_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _1dd03bd82_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_1dd03bd82_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_2398a35c0_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _1dd042937_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1c620c047;
			};
			_1dd0434b5_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), _11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_2398a35c0_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1c620c047;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1c620c047:;
	}
	_iter_end_1c620c047:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_2398a35c0_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1dd0454a6_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1dd0437c3_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1dcd7675a_parameterUsesGenerics(jule::Ptr<_1dcd73779_ParamIns>* _38131_p, jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>>* _38146_generics) {
	if (_1dcd70743_IsSelf((*(_38131_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1dce9b7e7_kindUsesGenerics(&((*(_38131_p)).get()._field_Kind), _38146_generics);;
}



inline jule::Ptr<_1dce892da_TypeSymbol> _1dcd78c35_buildType(jule::Ptr<_1dcd3bd80_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1dce55d45_Value> _1dcd79021_buildExpr(jule::Ptr<_1dcd4100a_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1dce816de_TypeAlias> _1dcd792b8_buildTypeAlias(jule::Ptr<_1dcd52cec_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1dce816de_TypeAlias>(_1dce816de_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_Binded=_11223_decl.get()._field_Binded, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1dcd78c35_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1dcd58a6c_Field> _1dcd795d7_buildField(jule::Ptr<_1dcd562c8_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1dcd58a6c_Field>(_1dcd58a6c_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1dcd78c35_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1dcd58a6c_Field>> _1dcd7987e_buildFields(jule::Slice<jule::Ptr<_1dcd562c8_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1dcd58a6c_Field>> _13513_fields = jule::Slice<jule::Ptr<_1dcd58a6c_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64ddbca:;
		if (it != expr_end) {
			jule::Ptr<_1dcd562c8_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd58a6c_Field>> &__jule_push_dest = _13513_fields; __jule_push_dest.push(_1dcd795d7_buildField(_13617_decl)); };
			}
			_iter_next_1c64ddbca:;
			++it;
			goto _iter_begin_1c64ddbca;
		}
		_iter_end_1c64ddbca:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1dcd5b641_Struct> _1dcd79b26_buildStruct(jule::Ptr<_1dcd56b25_StructDecl> _14220_decl) {
	return jule::new_ptr<_1dcd5b641_Struct>(_1dcd5b641_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1dcd7987e_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_Binded=_14220_decl.get()._field_Binded, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1dcd7015a_Param> _1dcd79dbd_buildParam(jule::Ptr<_1dcd4c18c_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1dcd7015a_Param>(_1dcd7015a_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1dcd78c35_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1dcd7015a_Param>> _1dcd7a242_buildParams(jule::Slice<jule::Ptr<_1dcd4c18c_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1dcd7015a_Param>> _16613_params = jule::Slice<jule::Ptr<_1dcd7015a_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64e1a8a:;
		if (it != expr_end) {
			jule::Ptr<_1dcd4c18c_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd7015a_Param>> &__jule_push_dest = _16613_params; __jule_push_dest.push(_1dcd79dbd_buildParam(_16717_decl)); };
			}
			_iter_next_1c64e1a8a:;
			++it;
			goto _iter_begin_1c64e1a8a;
		}
		_iter_end_1c64e1a8a:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1dcd6e951_RetType> _1dcd7a4d9_buildRetType(jule::Ptr<_1dcd3eaec_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1dcd6e951_RetType>(_1dcd6e951_RetType{._field_Kind=_1dcd78c35_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1dcd71997_Fn> _1dcd7a781_buildFn(jule::Ptr<_1dcd4d4ac_FnDecl> _18316_decl) {
	return jule::new_ptr<_1dcd71997_Fn>(_1dcd71997_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_Binded=_18316_decl.get()._field_Binded, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1dcd7a4d9_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1dcd7a242_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1dcd71997_Fn>> _1dcd7aa28_buildMethods(jule::Slice<jule::Ptr<_1dcd4d4ac_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1dcd71997_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1dcd71997_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64e5264:;
		if (it != expr_end) {
			jule::Ptr<_1dcd4d4ac_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd71997_Fn>> &__jule_push_dest = _20213_methods; __jule_push_dest.push(_1dcd7a781_buildFn(_20317_decl)); };
			}
			_iter_next_1c64e5264:;
			++it;
			goto _iter_begin_1c64e5264;
		}
		_iter_end_1c64e5264:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_1dce892da_TypeSymbol>> _1dcd7acc0_buildTraitInherits(jule::Slice<jule::Ptr<_1dcd3bd80_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1dce892da_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_1dce892da_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64e5a8e:;
		if (it != expr_end) {
			jule::Ptr<_1dcd3bd80_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1dce892da_TypeSymbol>> &__jule_push_dest = _21013_symbols; __jule_push_dest.push(_1dcd78c35_buildType(_21117_it)); };
			}
			_iter_next_1c64e5a8e:;
			++it;
			goto _iter_begin_1c64e5a8e;
		}
		_iter_end_1c64e5a8e:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_1dcd83bb8_Trait> _1dcd7b067_buildTrait(jule::Ptr<_1dcd572eb_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1dcd83bb8_Trait>(_1dcd83bb8_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_1dcd7acc0_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_1dcd7aa28_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1dcd85956_EnumItem> _1dcd7b30e_buildEnumItem(jule::Ptr<_1dcd5465b_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1dcd85956_EnumItem>(_1dcd85956_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_1dcd79021_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1dcd85956_EnumItem>> _1dcd7b5a6_buildEnumItems(jule::Slice<jule::Ptr<_1dcd5465b_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1dcd85956_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_1dcd85956_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64e86da:;
		if (it != expr_end) {
			jule::Ptr<_1dcd5465b_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd85956_EnumItem>> &__jule_push_dest = _23613_items; __jule_push_dest.push(_1dcd7b30e_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1c64e86da:;
			++it;
			goto _iter_begin_1c64e86da;
		}
		_iter_end_1c64e86da:;
	};
	return _23613_items;;
}



inline jule::Ptr<_1dcd8644b_Enum> _1dcd7ba07_buildEnum(jule::Ptr<_1dcd55184_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1dcd8644b_Enum>(_1dcd8644b_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_1dcd78c35_buildType(_24318_decl.get()._field_Kind), ._field_Items=_1dcd7b5a6_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_1dcd874b3_TypeEnumItem> _1dcd7bc9e_buildTypeEnumItem(jule::Ptr<_1dcd55959_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1dcd874b3_TypeEnumItem>(_1dcd874b3_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_1dcd78c35_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1dcd874b3_TypeEnumItem>> _1dcd7c046_buildTypeEnumItems(jule::Slice<jule::Ptr<_1dcd55959_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1dcd874b3_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_1dcd874b3_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64eb05b:;
		if (it != expr_end) {
			jule::Ptr<_1dcd55959_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1dcd874b3_TypeEnumItem>> &__jule_push_dest = _26213_items; __jule_push_dest.push(_1dcd7bc9e_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1c64eb05b:;
			++it;
			goto _iter_begin_1c64eb05b;
		}
		_iter_end_1c64eb05b:;
	};
	return _26213_items;;
}



inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcd7c2dd_buildTypeEnum(jule::Ptr<_1dcd56064_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1dcd87a46_TypeEnum>(_1dcd87a46_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_1dcd7c046_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_1dce05cb2_Var> _1dcd7c585_buildVar(jule::Ptr<_1dcd4e48b_VarDecl> _27817_decl) {
	return jule::new_ptr<_1dce05cb2_Var>(_1dce05cb2_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_Binded=_27817_decl.get()._field_Binded, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_1dcd78c35_buildType(_27817_decl.get()._field_Kind), ._field_Value=_1dcd79021_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__1dcd777b1_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1dce05cb2_Var>> _1dcd7c82c_buildVars(jule::Slice<jule::Ptr<_1dcd4e48b_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1dce05cb2_Var>> _29613_vars = jule::Slice<jule::Ptr<_1dce05cb2_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64ee0e7:;
		if (it != expr_end) {
			jule::Ptr<_1dcd4e48b_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = _29613_vars; __jule_push_dest.push(_1dcd7c585_buildVar(_29717_decl)); };
			}
			_iter_next_1c64ee0e7:;
			++it;
			goto _iter_begin_1c64ee0e7;
		}
		_iter_end_1c64ee0e7:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_1dcda8c10_Impl> _1dcd7cac4_buildImpl(jule::Ptr<_1dcd57906_Impl> _30318_decl) {
	return jule::new_ptr<_1dcda8c10_Impl>(_1dcda8c10_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_1dcd7aa28_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_1dcd7c82c_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda4a41_buildAsComptimeMethodData(jule::Ptr<_1dcd74648_FnIns>* _139635_f) {
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>((*(_139635_f)), 1)}), });;
}



inline jule::Ptr<_1dcdcc6d4_ImportInfo> _1dcda4c2d_findComptimePackage(jule::Ptr<_1dcdd59a6_Sema>* _140429_s) {
	return _1dcdd5e29_SelectPackage((*(_140429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1dcdcc6d4_ImportInfo>)>([=](jule::Ptr<_1dcdcc6d4_ImportInfo> _140528_pkg) mutable -> jule::Bool {
		return _140528_pkg.get()._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda5091_buildComptimeTypeInfoData(jule::Ptr<_1dcdd59a6_Sema>* _141035_s, jule::Ptr<_1dce82437_TypeKind>* _141050_t) {
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_1dcdd53ce_pushComptimeTypeInfo((*(_141035_s)).get()._field_meta.ptr(), _141050_t), 15)}), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dcda53c1_buildComptimeValue(jule::Ptr<_1dce54cbc_Data>* _141828_d) {
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd9e442_comptimeValue>(_1dcd9e442_comptimeValue{._field_data=(*(_141828_d))}), 16)}), });;
}



inline jule::Bool _1dcda813d_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1dce82437_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1c657b00e:;
			{
				jule::Ptr<_1dce89b8c_Prim> _14513_prim = _1dce84b54_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _24a2333a1_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1c6581c7e:;
			{
				jule::Ptr<_1dce89b8c_Prim> _15113_prim = _1dce84b54_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _24a23279b_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1c6581ce5:;
			{
				jule::Ptr<_1dce89b8c_Prim> _15713_prim = _1dce84b54_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _24a232d62_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1c6580c39:;
			{
				jule::Ptr<_1dce89b8c_Prim> _16313_prim = _1dce84b54_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _24a233109_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1c6580ca0:;
			{
				return _1dce83bca_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1c6580d16:;
			{
				return (!(_1dce83bca_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1c6580d7c:;
			{
				return _1dce83966_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1c6581e49:;
			{
				return _1dce83e3e_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1c6581a81:;
			{
				return false;;
			}
		}
		_match_end_1c6581421:;
	};
}



inline jule::Bool _1dcda8429_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1dcda659d_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6586844:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1c6586844:;
			++it;
			goto _iter_begin_1c6586844;
		}
		_iter_end_1c6586844:;
	};
	return false;;
}



inline jule::Ptr<_1dcdb5898_scopeChecker> _1dcdaac9a_newScopeCheckerBase(jule::Ptr<_1dcdd59a6_Sema>* _5829_s, jule::Ptr<_1dcd74648_FnIns> _5843_owner) {
	return jule::new_ptr<_1dcdb5898_scopeChecker>(_1dcdb5898_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1dce502b2_SymbolTable>(), });;
}



inline jule::Ptr<_1dcdb5898_scopeChecker> _1dcdab130_newScopeChecker(jule::Ptr<_1dcdd59a6_Sema>* _6625_s, jule::Ptr<_1dcd74648_FnIns> _6639_owner) {
	jule::Ptr<_1dcdb5898_scopeChecker> _6713_base = _1dcdaac9a_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1dcdb4611_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1dcdb4a84_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1dcdb4611_scopeLabel> _1dcdab471_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1dcdb5898_scopeChecker> _7636_scope) {
	jule::Ptr<_1dcdb4611_scopeLabel> _7713_label = _1dcdb9050_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1dcdb9050_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1c6593642:;
	}
	_iter_end_1c6593642:;;
	return _7713_label;;
}



inline jule::Bool _1dcdab806_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1dcdadc6a_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c659504a:;
			{
				jule::Ptr<_1dcd6568e_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1dcd6568e_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c65950c2:;
			{
				jule::Ptr<_1dce54cbc_Data> _9813_d = _9021_Model.cast_ptr<_1dce54cbc_Data>(&__jule_any_type24);;
				return _1dcdab806_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1c6594ea1:;
	};
	return false;;
}



inline jule::Bool _1dcdabb47_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1dcdadc6a_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c6597239:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1dcdadc6a_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c65972a0:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1dcdaeab2_InfIter>(&__jule_any_type37).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c6597316:;
			{
				jule::Ptr<_1dcdb091a_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1dcdb091a_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1dcdab806_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c65954bd:;
			{
				jule::Ptr<_1dcdb0035_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1dcdb0035_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1dcdab806_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1dcdab806_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c6595534:;
			{
				jule::Ptr<_1dcdb2a82_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1dcdb2a82_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c659a737:;
					if (it != expr_end) {
						jule::Ptr<_1dcdb35cc_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c659b44c:;
								if (it != expr_end) {
									jule::Ptr<_1dce54cbc_Data> *_12420_expr = it;
									{
										if (_1dcdab806_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1c659b44c:;
									++it;
									goto _iter_begin_1c659b44c;
								}
								_iter_end_1c659b44c:;
							};
						}
						_iter_next_1c659a737:;
						++it;
						goto _iter_begin_1c659a737;
					}
					_iter_end_1c659a737:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c659559a:;
			{
				jule::Ptr<_1dcdae7c6_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1dcdae7c6_Conditional>(&__jule_any_type36);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c659c9ae:;
					if (it != expr_end) {
						jule::Ptr<_1dcdae166_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1dcdab806_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1c659c9ae:;
						++it;
						goto _iter_begin_1c659c9ae;
					}
					_iter_end_1c659c9ae:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c6595611:;
			{
				jule::Ptr<_1dce54cbc_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1dce54cbc_Data>(&__jule_any_type24);;
				return _1dcdab806_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1c6595457:;
			{
				return false;;
			}
		}
		_match_end_1c6595402:;
	};
}



inline jule::I64 _1dcdabe88_countMatchType(jule::Ptr<_1dcdb2a82_Match>* _14720_m, jule::Ptr<_1dce82437_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1dce827de_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c65a0693:;
		if (it != expr_end) {
			jule::Ptr<_1dcdb35cc_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1c65a0693;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c65a1430:;
					if (it != expr_end) {
						jule::Ptr<_1dce54cbc_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1c65a0693;
							};
							if ((_1499_kind == _1dce827de_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1dce82437_TypeKind>(&__jule_any_type89).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1c65a1430:;
						++it;
						goto _iter_begin_1c65a1430;
					}
					_iter_end_1c65a1430:;
				};
			}
			_iter_next_1c65a0693:;
			++it;
			goto _iter_begin_1c65a0693;
		}
		_iter_end_1c65a0693:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1dce54cbc_Data>> _1dcdac230_getDatasFromTupleData(jule::Ptr<_1dce54cbc_Data>* _17131_d) {
	if ((_1dce867e3_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type87) {
				_case_begin_1c65a4eb1:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1dcd693b8_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1c65a2b4b:;
				{
					jule::Ptr<_1dce8e950_Tuple> _17721_t = _1dce867e3_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1dce54cbc_Data>> _17821_r = jule::Slice<jule::Ptr<_1dce54cbc_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c65a3e5a:;
						if (it != expr_end) {
							jule::Ptr<_1dce82437_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1dce54cbc_Data>> &__jule_push_dest = _17821_r; __jule_push_dest.push(jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1c65a3e5a:;
							++it;
							goto _iter_begin_1c65a3e5a;
						}
						_iter_end_1c65a3e5a:;
					};
					return _17821_r;;
				}
			}
			_match_end_1c65a29c5:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1dce54cbc_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1dcdaca6b_checkMut(jule::Ptr<_1dcdd59a6_Sema>* _20618_s, jule::Ptr<_1dce54cbc_Data>* _20629_left, jule::Ptr<_1dce54cbc_Data> _20646_right, jule::Ptr<_23ae26b42_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1c65a79a8:;
			{
				_1dcdd8338_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1dce83bca_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1c65a7a1e:;
			{
				if (((!_20660_op.get()._field_Kind.equal("=", 1)) && (_1dce860a6_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1dcdd8338_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c65a7942:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c65a7139:;
	};
}



inline jule::Bool _1dcdad000_checkAssign(jule::Ptr<_1dcdd59a6_Sema>* _22521_s, jule::Ptr<_1dce54cbc_Data>* _22536_left, jule::Ptr<_1dce54cbc_Data> _22553_right, jule::Ptr<_23ae26b42_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dcd74648_FnIns> _2269_f = _1dce85d42_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1dcdd8338_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1dce5563b_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1c65abe41:;
			{
				_1dcdd8338_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1dcdd8657_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1c65abea7:;
			{
				_1dcdd8338_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1dcdaca6b_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1c65ac01d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c65abdca:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c65aaa55:;
	};
}



inline jule::Bool _1dcdad297_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1c65add11:;
			{
				return (!((*(_24731_n)).cast_ptr<_1dcd4a4ba_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1c65a7ac9:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c65ac2a4:;
			{
				return false;;
			}
		}
		_match_end_1c65ada9c:;
	};
}



inline jule::Bool _1dcdad53e_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_1c65adb79:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c65aee11:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1dce54cbc_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1c65b094a:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c65b0cd0:;
						{
							return false;;
						}
					}
					_match_end_1c65b0a38:;
				};
			}
		}
		else {
			_case_begin_1c65ae916:;
			{
				return false;;
			}
		}
		_match_end_1c65ae493:;
	};
}



inline jule::Bool _1dcdad7d6_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c65b196d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c65b021e:;
			{
				return false;;
			}
		}
		_match_end_1c65b0d9b:;
	};
}



inline jule::Ptr<_1dce05cb2_Var> _1dcdc9deb_findVarInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6178bb7:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1dce05cb2_Var> _4817_v = _1dce50b31_FindVar(_4717_f.ptr(), _4649_ident, _4661_binded);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1c6178bb7:;
			++it;
			goto _iter_begin_1c6178bb7;
		}
		_iter_end_1c6178bb7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dce816de_TypeAlias> _1dcdca32a_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c617a119:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1dce816de_TypeAlias> _6017_ta = _1dce50ed8_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_binded);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1c617a119:;
			++it;
			goto _iter_begin_1c617a119;
		}
		_iter_end_1c617a119:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd5b641_Struct> _1dcdca715_findStructInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c617b5b0:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1dcd5b641_Struct> _7217_s = _1dce51390_FindStruct(_7117_f.ptr(), _7052_ident, _7064_binded);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1c617b5b0:;
			++it;
			goto _iter_begin_1c617b5b0;
		}
		_iter_end_1c617b5b0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd71997_Fn> _1dcdcab77_findFnInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c617ca56:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1dcd71997_Fn> _8417_f = _1dce51747_FindFn(_8317_file.ptr(), _8248_ident, _8260_binded);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1c617ca56:;
			++it;
			goto _iter_begin_1c617ca56;
		}
		_iter_end_1c617ca56:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd83bb8_Trait> _1dcdcae85_findTraitInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c617dcdd:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1dcd83bb8_Trait> _9617_t = _1dce51a55_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1c617dcdd:;
			++it;
			goto _iter_begin_1c617dcdd;
		}
		_iter_end_1c617dcdd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd8644b_Enum> _1dcdcb2c6_findEnumInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6180053:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1dcd8644b_Enum> _10817_e = _1dce51d63_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1c6180053:;
			++it;
			goto _iter_begin_1c6180053;
		}
		_iter_end_1c6180053:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dcd87a46_TypeEnum> _1dcdcb617_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c618130c:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1dcd87a46_TypeEnum> _12017_e = _1dce52171_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1c618130c:;
			++it;
			goto _iter_begin_1c618130c;
		}
		_iter_end_1c618130c:;
	};
	return nullptr;;
}



inline jule::Any _1dcdcbb12_defByIdentPackage(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6182819:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1dce53040_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_binded);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1c6182819:;
			++it;
			goto _iter_begin_1c6182819;
		}
		_iter_end_1c6182819:;
	};
	return nullptr;;
}



inline jule::Bool _1dcdd25c9_isStdPackage(jule::Str _35517_f, jule::Str _35525_p) {
	return _23a986ae2_HasPrefix(_35517_f, _23a991866_Join(jule::Slice<jule::Str>::make({_23ab0be43_PathStdlib,_35525_p})));;
}



inline jule::Bool _1dcdd3333_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c6192692:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c6192d57:;
			{
				jule::Ptr<_1dcd68010_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1dcdd3333_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1c6192dbd:;
			{
				jule::Ptr<_1dcd67729_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_1dcd67729_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1dcdd3333_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c6192e34:;
			{
				jule::Ptr<_1dcd63bcb_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_1dcd63bcb_UnaryExprModel>(&__jule_any_type74);;
				if ((!_2317_unary.get()._field_Op.get()._field_Kind.equal("*", 1))) {
					return false;;
				};
				if ((_1dce8512c_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1dce84db8_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1dcdd3333_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1c619242d:;
			{
				return false;;
			}
		}
		_match_end_1c61923c8:;
	};
}



inline _23aa28854_Log _1dcdd37c8_compilerErr(jule::Ptr<_23ae26b42_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_23aa28854_Log _4213_log = _23aa28854_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_23aa28c94_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_23ae2cde0_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1dcdd3b19_impIsLookupable(jule::Ptr<_1dcdcc6d4_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_Binded) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _1dcdcec8b_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _1dcdd3e16_appendRetVars(jule::Slice<jule::Ptr<_1dce05cb2_Var>>* _6723_dest, jule::Ptr<_1dcd74648_FnIns>* _6742_f) {
	if ((_1dcd71e09_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1dce82437_TypeKind>> _7213_types = _1dcd7576a_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c619ad4e:;
		if (it != expr_end) {
			jule::I64 _7310_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _7317_ident = *it;
			{
				if ((_23ae293d6_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _23ae2967d_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1c619ad4e;
				};
				{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = (*(_6723_dest)); __jule_push_dest.push(jule::new_ptr<_1dce05cb2_Var>(_1dce05cb2_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()}), ._field_RetOrder=_7310_i, })); };
			}
			_iter_next_1c619ad4e:;
			++it;
			_7310_i++;
			goto _iter_begin_1c619ad4e;
		}
		_iter_end_1c619ad4e:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1dcdd41be_appendParamVars(jule::Slice<jule::Ptr<_1dce05cb2_Var>>* _9725_dest, jule::Ptr<_1dcd74648_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c619e528:;
		if (it != expr_end) {
			jule::Ptr<_1dcd73779_ParamIns> _10217_p = *it;
			{
				if ((_23ae293d6_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _23ae2967d_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1c619e528;
				};
				jule::Ptr<_1dce05cb2_Var> _10717_v = jule::new_ptr<_1dce05cb2_Var>(_1dce05cb2_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(), ._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()}), });;
				{
					
					if (_1dcd70743_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1c61a1e10:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1dce81ec5_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1dcd709a7_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1dcd709a7_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dce8d3dd_Sptr>(_1dce8d3dd_Sptr{._field_Elem=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_BindIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 21);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1c61a1b46:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dce8dd4a_Slc>(_1dce8dd4a_Slc{._field_Elem=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_BindIdent=_10217_p.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1c619ec65:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1c61a1a25:;
				};
				{ jule::Slice<jule::Ptr<_1dce05cb2_Var>> &__jule_push_dest = (*(_9725_dest)); __jule_push_dest.push(_10717_v); };
			}
			_iter_next_1c619e528:;
			++it;
			goto _iter_begin_1c619e528;
		}
		_iter_end_1c619e528:;
	};
}



inline void _1dcdd4499_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1dce816de_TypeAlias>>* _15734_dest, jule::Ptr<_1dcd74648_FnIns>* _15759_f) {
	jule::I64 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61a6ed1:;
		if (it != expr_end) {
			jule::I64 _16710_i = it - expr->begin();
			jule::Ptr<_1dce80ba5_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1dcd48d26_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				{ jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> &__jule_push_dest = (*(_15734_dest)); __jule_push_dest.push(jule::new_ptr<_1dce816de_TypeAlias>(_1dce816de_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), })); };
			}
			_iter_next_1c61a6ed1:;
			++it;
			_16710_i++;
			goto _iter_begin_1c61a6ed1;
		}
		_iter_end_1c61a6ed1:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1dcd5e457_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c61a9302:;
			if (it != expr_end) {
				jule::I64 _18114_i = it - expr->begin();
				jule::Ptr<_1dce80ba5_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1dcd48d26_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					{ jule::Slice<jule::Ptr<_1dce816de_TypeAlias>> &__jule_push_dest = (*(_15734_dest)); __jule_push_dest.push(jule::new_ptr<_1dce816de_TypeAlias>(_1dce816de_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), })); };
				}
				_iter_next_1c61a9302:;
				++it;
				_18114_i++;
				goto _iter_begin_1c61a9302;
			}
			_iter_end_1c61a9302:;
		};
	};
}



inline jule::Ptr<_1dce502b2_SymbolTable> _1dcdd47eb_findFile(jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>* _19518_files, jule::Ptr<_23ae2becc_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61a9ac7:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1c61a9ac7:;
			++it;
			goto _iter_begin_1c61a9ac7;
		}
		_iter_end_1c61a9ac7:;
	};
	return nullptr;;
}



inline void _1dcdd4c5d_pushSuggestion(_23aa28854_Log* _20430_log, jule::Str _20441_fmt, jule::Slice<jule::Any> _20454_args) {
	_20430_log->_field_Suggestion=_23aa28c94_Logf(_20441_fmt, _20454_args);
}



inline void _1dce04299_pushImplemented(jule::Ptr<_1dcd83bb8_Trait> _283424_t, jule::Ptr<_1dcd5b641_Struct>* _283440_d) {
	_julec_label_push:;
	{
		
		if ((_283424_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_1c61ace3d:;
			{
				{
					auto expr = &(_283424_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c61ada10:;
					if (it != expr_end) {
						jule::Ptr<_1dcd5b641_Struct> _283816_s = *it;
						{
							if ((_283816_s == (*(_283440_d)))) {
								goto _match_end_1c61aca31;
							};
						}
						_iter_next_1c61ada10:;
						++it;
						goto _iter_begin_1c61ada10;
					}
					_iter_end_1c61ada10:;
				};
				goto _case_begin_1c61aca97;
			}
		}
		else {
			_case_begin_1c61aca97:;
			{
				{ jule::Slice<jule::Ptr<_1dcd5b641_Struct>> &__jule_push_dest = _283424_t.get()._field_Implemented; __jule_push_dest.push((*(_283440_d))); };
			}
		}
		_match_end_1c61aca31:;
	};
	{
		auto expr = &(_283424_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61ae2d5:;
		if (it != expr_end) {
			jule::Ptr<_1dce892da_TypeSymbol> _284717_i = *it;
			{
				_1dce04299_pushImplemented(_1dce8631a_Trait(_284717_i.get()._field_Kind.ptr()), _283440_d);
			}
			_iter_next_1c61ae2d5:;
			++it;
			goto _iter_begin_1c61ae2d5;
		}
		_iter_end_1c61ae2d5:;
	};
}



inline void _1dce04552_pushImplements(jule::Ptr<_1dcd5b641_Struct>* _285224_s, jule::Ptr<_1dcd83bb8_Trait> _285240_t) {
	_julec_label_push:;
	{
		
		if (((*(_285224_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_1c61b065a:;
			{
				{
					auto expr = &((*(_285224_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c61b122c:;
					if (it != expr_end) {
						jule::Ptr<_1dcd83bb8_Trait> _285616_b = *it;
						{
							if ((_285616_b == _285240_t)) {
								goto _match_end_1c61b024d;
							};
						}
						_iter_next_1c61b122c:;
						++it;
						goto _iter_begin_1c61b122c;
					}
					_iter_end_1c61b122c:;
				};
				goto _case_begin_1c61b02b4;
			}
		}
		else {
			_case_begin_1c61b02b4:;
			{
				{ jule::Slice<jule::Ptr<_1dcd83bb8_Trait>> &__jule_push_dest = (*(_285224_s)).get()._field_Implements; __jule_push_dest.push(_285240_t); };
			}
		}
		_match_end_1c61b024d:;
	};
	{
		auto expr = &(_285240_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61b1a02:;
		if (it != expr_end) {
			jule::Ptr<_1dce892da_TypeSymbol> _286517_i = *it;
			{
				_1dce04552_pushImplements(_285224_s, _1dce8631a_Trait(_286517_i.get()._field_Kind.ptr()));
			}
			_iter_next_1c61b1a02:;
			++it;
			goto _iter_begin_1c61b1a02;
		}
		_iter_end_1c61b1a02:;
	};
}



inline jule::Bool _1dce3c4be_traitHasReferenceReceiver(jule::Ptr<_1dcd83bb8_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62872e2:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_1c62872e2;
				};
				jule::Ptr<_1dcd7015a_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_1dcd709a7_IsRef(_3313_p.ptr()) && _1dcd70743_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1c62872e2:;
			++it;
			goto _iter_begin_1c62872e2;
		}
		_iter_end_1c62872e2:;
	};
	return false;;
}



inline jule::Bool _1dce3c766_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1dce54cbc_Data>* _4132_d) {
	jule::Str _429_value = _24a20d117_FmtFloat(static_cast<jule::F64>(_24a236030_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _24a2271ec_CheckBitFloat(_429_value, static_cast<jule::I64>(_24a225cde_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1dce3caa7_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1dce54cbc_Data>* _4630_d) {
	jule::F64 _479_min = _24a22c2e0_Min(_4618_kind);;
	jule::F64 _489_max = _24a22c587_Max(_4618_kind);;
	{
		
		if (_24a237b8b_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1c628ce63:;
			{
				jule::F64 _5113_x = _24a2357e3_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _24a1d3c9c_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_24a23744e_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1c628d837:;
			{
				jule::F64 _5813_x = _24a236030_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_24a2371da_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1c628d8ae:;
			{
				jule::F64 _6313_x = _24a236030_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1c628d716:;
	};
	return false;;
}



inline jule::Bool _1dce3ce3c_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1dce54cbc_Data>* _6932_d) {
	jule::F64 _709_max = _24a22c587_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _1dce24396_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_24a234d42_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_24a237b8b_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1c6292b38:;
			{
				jule::F64 _7713_x = _24a2357e3_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _24a1d3c9c_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_24a23744e_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1c6293298:;
			{
				jule::F64 _8713_x = _24a236030_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_24a2371da_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1c629330e:;
			{
				jule::F64 _9213_x = _24a236030_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1c6292bd2:;
	};
	return false;;
}



inline jule::Bool _1dce3d27d_intAssignable(jule::Str _9818_kind, jule::Ptr<_1dce54cbc_Data>* _9830_d) {
	{
		
		if (_24a2324b0_IsSigInt(_9818_kind)) {
			_case_begin_1c6297115:;
			{
				return _1dce3caa7_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_24a23279b_IsUnsigInt(_9818_kind)) {
			_case_begin_1c629717b:;
			{
				return _1dce3ce3c_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_1c6293919:;
			{
				return false;;
			}
		}
		_match_end_1c6296d4b:;
	};
}



inline jule::Ptr<_1dce82437_TypeKind> _1dce4e1a1_lenKind(void) {
	return _1dd0474ca_primInt;;
}



inline jule::Bool _1dce4e448_isGoodValueToInfer(jule::Ptr<_1dce54cbc_Data>* _138224_d) {
	return (!(_1dce55163_IsNil((*(_138224_d)).ptr())));;
}



inline jule::Ptr<_1dcd09369_Directive> _1dce7b497_findDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>* _425423_directives, jule::Str _425454_d) {
	{
		auto expr = _425423_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c47772b7:;
		if (it != expr_end) {
			jule::Ptr<_1dcd09369_Directive> _425517_dr = *it;
			{
				if ((_425517_dr.get()._field_Tag.get()._field_Kind == _425454_d)) {
					return _425517_dr;;
				};
			}
			_iter_next_1c47772b7:;
			++it;
			goto _iter_begin_1c47772b7;
		}
		_iter_end_1c47772b7:;
	};
	return nullptr;;
}



inline jule::Any _1dce7b82c_findBuiltinsImport(jule::Str _426323_ident, jule::Ptr<_1dcdcc6d4_ImportInfo> _426335_imp) {
	return _1dd04a962_findPackageBuiltinDef(_426335_imp.get()._field_LinkPath, _426323_ident);;
}



inline void _1dce7ba3b_fitBitsize(jule::Ptr<_1dce54cbc_Data>* _427020_d) {
	jule::Ptr<_1dce89b8c_Prim> _427113_prim = _1dce84b54_Prim((*(_427020_d)).get()._field_Kind.ptr());;
	jule::I64 _42729_z = _24a225cde_BitsizeOf(_1dce89ebc_Str(_427113_prim.ptr()));;
	if ((_42729_z == 64LLU)) {
		return;;
	};
	jule::I64 _427713_k = 0LL;;
	{
		
		if (_24a2371da_IsI64((*(_427020_d)).get()._field_Constant.ptr())) {
			_case_begin_1c4779c26:;
			{
				_427713_k=static_cast<jule::I64>(_24a22773b_BitsizeOfInt(static_cast<jule::I64>(_24a234d42_ReadI64((*(_427020_d)).get()._field_Constant.ptr()))));
				if ((_427713_k > _42729_z)) {
					(*(_427020_d)).get()._field_Constant.get()._field_Kind=_24a22610d_IntFromBits(_427713_k);
					(*(_427020_d)).get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias((*(_427020_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_24a23744e_IsU64((*(_427020_d)).get()._field_Constant.ptr())) {
			_case_begin_1c4779c9d:;
			{
				_427713_k=static_cast<jule::I64>(_24a2279d3_BitsizeOfUint(static_cast<jule::U64>(_24a2350a6_ReadU64((*(_427020_d)).get()._field_Constant.ptr()))));
				if ((_427713_k > _42729_z)) {
					(*(_427020_d)).get()._field_Constant.get()._field_Kind=_24a2263a5_UintFromBits(_427713_k);
					(*(_427020_d)).get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias((*(_427020_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_24a237b8b_IsF64((*(_427020_d)).get()._field_Constant.ptr())) {
			_case_begin_1c4779d25:;
			{
				_427713_k=static_cast<jule::I64>(_24a227494_BitsizeOfFloat(static_cast<jule::F64>(_24a2357e3_ReadF64((*(_427020_d)).get()._field_Constant.ptr()))));
				if ((_427713_k > _42729_z)) {
					(*(_427020_d)).get()._field_Constant.get()._field_Kind=_24a22664c_FloatFromBits(_427713_k);
					(*(_427020_d)).get()._field_Kind=_1dd0497b8_findBuiltinTypeAlias((*(_427020_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		_match_end_1c4779b5a:;
	};
}



inline void _1dce7bd38_makeStructLitAlloc(jule::Ptr<_1dce54cbc_Data>* _430028_d, jule::Ptr<_1dcd6447e_StructLitExprModel>* _430043_lit) {
	(*(_430028_d)).get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dce8d3dd_Sptr>(_1dce8d3dd_Sptr{._field_Elem=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>((*(_430043_lit)).get()._field_Strct, 0)})}), 21)});
	(*(_430028_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6478c_AllocStructLitExprModel>(_1dcd6478c_AllocStructLitExprModel{._field_Lit=(*(_430043_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1dce05cb2_Var> _1dce7c179_buildErrorVar(jule::Ptr<_1dcdadc6a_Scope>* _431123_s, jule::Ptr<_1dcd44e21_FnCallExpr>* _431139_fc) {
	return jule::new_ptr<_1dce05cb2_Var>(_1dce05cb2_Var{._field_Scope=(*(_431123_s)), ._field_Token=(*(_431139_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=_1dd0497b8_findBuiltinTypeAlias(jule::Str("any", 3)).get()._field_Kind, ._field_Value=jule::new_ptr<_1dce55d45_Value>(_1dce55d45_Value{._field_Data=jule::new_ptr<_1dce54cbc_Data>()}), });;
}



inline jule::Any _1dce7c4ba_findBuiltinsSema(jule::Str _432621_ident, jule::Ptr<_1dcdd59a6_Sema> _432637_s) {
	{
		auto expr = &(_432637_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c4780ba5:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _432717_imp = *it;
			{
				if ((_432717_imp.get()._field_ImportAll || _1dcdcec8b_existIdent(_432717_imp.ptr(), _432621_ident))) {
					jule::Any _432921_def = _1dce7b82c_findBuiltinsImport(_432621_ident, _432717_imp);;
					if ((_432921_def != nullptr)) {
						return _432921_def;;
					};
				};
			}
			_iter_next_1c4780ba5:;
			++it;
			goto _iter_begin_1c4780ba5;
		}
		_iter_end_1c4780ba5:;
	};
	jule::Str _433713_ppath = _23ae2c609_Dir(_432637_s.get()._field_file.get()._field_File.ptr());;
	if (_23a986ae2_HasPrefix(_433713_ppath, _23ab0be43_PathStdlib)) {
		(_433713_ppath).mut_slice(_23ab0be43_PathStdlib.len());;
		_433713_ppath=(jule::Str("std", 3) + _23a98cad7_Replace(_433713_ppath, jule::Str("/", 1), jule::Str("::", 2), -1LL));
		return _1dd04a962_findPackageBuiltinDef(_433713_ppath, _432621_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1dce7c762_isOkForShifting(jule::Ptr<_1dce54cbc_Data>* _435125_d) {
	if (_1dce5563b_IsConst((*(_435125_d)).ptr())) {
		{
			
			if (_24a2371da_IsI64((*(_435125_d)).get()._field_Constant.ptr())) {
				_case_begin_1c4784a55:;
				{
					return (_24a234d42_ReadI64((*(_435125_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_24a23744e_IsU64((*(_435125_d)).get()._field_Constant.ptr())) {
				_case_begin_1c4784acc:;
				{
					return true;;
				}
			}
			else if (_24a237b8b_IsF64((*(_435125_d)).get()._field_Constant.ptr())) {
				_case_begin_1c4784b54:;
				{
					return (_24a2357e3_ReadF64((*(_435125_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1c47849de:;
				{
					return false;;
				}
			}
			_match_end_1c4784923:;
		};
	};
	jule::Ptr<_1dce89b8c_Prim> _43649_prim = _1dce84b54_Prim((*(_435125_d)).get()._field_Kind.ptr());;
	return ((_43649_prim != nullptr) && _24a232a43_IsInt(_1dce89ebc_Str(_43649_prim.ptr())));;
}



inline jule::Bool _1dce7cb19_isInstancedStruct(jule::Ptr<_1dcd5e457_StructIns> _436822_s) {
	return (_436822_s.get()._field_Decl.get()._field_Generics.len() == _436822_s.get()._field_Generics.len());;
}



inline jule::Bool _1dce7ce7c_isPtrArithmeticCompatible(jule::Ptr<_1dce54cbc_Data>* _437235_l, jule::Ptr<_1dce54cbc_Data>* _437250_r) {
	jule::Ptr<_1dce91952_Ptr> _43739_ptr = _1dce8512c_Ptr((*(_437250_r)).get()._field_Kind.ptr());;
	if ((_43739_ptr != nullptr)) {
		return _1dce82aec_Equal(_1dce8512c_Ptr((*(_437235_l)).get()._field_Kind.ptr()).get()._field_Elem, _43739_ptr.get()._field_Elem);;
	};
	if (_1dce5563b_IsConst((*(_437250_r)).ptr())) {
		return _1dce3d27d_intAssignable(jule::Str("int", 3), _437250_r);;
	};
	_1dce3d734_typeCompatibilityChecker _438013_tcc = _1dce3d734_typeCompatibilityChecker{._field_dest=_1dd0474ca_primInt, ._field_src=(*(_437250_r)).get()._field_Kind, };;
	return _1dce3ecc9_check(&_438013_tcc);;
}



inline void _1dce7d1be_applyCastKindModel(jule::Ptr<_1dce54cbc_Data>* _438728_d, jule::Ptr<_1dce82437_TypeKind>* _438743_t) {
	(*(_438728_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd64cdc_CastingExprModel>(_1dcd64cdc_CastingExprModel{._field_Expr=(*(_438728_d)).get()._field_Model, ._field_Kind=(*(_438743_t)), ._field_ExprKind=(*(_438728_d)).get()._field_Kind}), &__jule_any_type98);
}



inline void _1dce7d477_applyCastKind(jule::Ptr<_1dce54cbc_Data>* _439523_d, jule::Ptr<_1dce82437_TypeKind>* _439538_t) {
	_1dce7d1be_applyCastKindModel(_439523_d, _439538_t);
	(*(_439523_d)).get()._field_Kind=(*(_439538_t));
}



inline jule::Ptr<_1dce54cbc_Data> _1dce7d675_buildVoidData(void) {
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046298_primVoid, });;
}



inline jule::Str _1dce7d93e_checkDataForIntegerIndexing(jule::Ptr<_1dce54cbc_Data>* _440637_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_440637_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1dce84b54_Prim((*(_440637_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1c478b84d:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_24a232a43_IsInt(_1dce89ebc_Str(_1dce84b54_Prim((*(_440637_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1c478b8b4:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1dce5563b_IsConst((*(_440637_d)).ptr())) {
			_case_begin_1c478b92a:;
			{
				if ((_24a236030_AsF64((*(_440637_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1dce84b54_Prim((*(_440637_d)).get()._field_Kind.ptr()) == nullptr) || _1dce5563b_IsConst((*(_440637_d)).ptr()) || (_24a225a47_RealKindOf(_1dce89ebc_Str(_1dce84b54_Prim((*(_440637_d)).get()._field_Kind.ptr()).ptr())) != _24a225a47_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1c478b9a2:;
			{
				_1dce7d477_applyCastKind(_440637_d, &(_1dd0474ca_primInt));
			}
		}
		_match_end_1c478b463:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1dce7dc08_applyCastModelByEnum(jule::Ptr<_1dce54cbc_Data>* _443130_d, jule::Ptr<_1dcd8644b_Enum> _443144_e) {
	if ((_443144_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1dce89b8c_Prim> _44359_p = _1dce84b54_Prim(_443144_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1dce8cd8d_IsStr(_44359_p.ptr())) {
		return;;
	};
	_1dce7d1be_applyCastKindModel(_443130_d, &(_443144_e.get()._field_Kind.get()._field_Kind));
}



inline void _1dce7deb1_castConstByType(jule::Str* _444221_t, jule::Ptr<_1dce54cbc_Data>* _444234_d) {
	{
		
		if (_24a2324b0_IsSigInt((*(_444221_t)))) {
			_case_begin_1c4790ed4:;
			{
				{
					auto _match_expr{ _24a225cde_BitsizeOf(_24a225a47_RealKindOf((*(_444221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c4791b2d:;
						{
							_24a2362a5_SetI64((*(_444234_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_24a235a57_AsI64((*(_444234_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c4791ba5:;
						{
							_24a2362a5_SetI64((*(_444234_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_24a235a57_AsI64((*(_444234_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c4791c1b:;
						{
							_24a2362a5_SetI64((*(_444234_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_24a235a57_AsI64((*(_444234_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c4791c82:;
						{
							_24a2362a5_SetI64((*(_444234_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_24a235a57_AsI64((*(_444234_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c479126a:;
				};
			}
		}
		else if (_24a23279b_IsUnsigInt((*(_444221_t)))) {
			_case_begin_1c479105b:;
			{
				{
					auto _match_expr{ _24a225cde_BitsizeOf(_24a225a47_RealKindOf((*(_444221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c4794988:;
						{
							_24a23652a_SetU64((*(_444234_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_24a235cbb_AsU64((*(_444234_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c4794a21:;
						{
							_24a23652a_SetU64((*(_444234_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_24a235cbb_AsU64((*(_444234_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c4794a87:;
						{
							_24a23652a_SetU64((*(_444234_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_24a235cbb_AsU64((*(_444234_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c4794aed:;
						{
							_24a23652a_SetU64((*(_444234_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_24a235cbb_AsU64((*(_444234_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c4791457:;
				};
			}
		}
		else if (_24a232d62_IsFloat((*(_444221_t)))) {
			_case_begin_1c47910d3:;
			{
				{
					auto _match_expr{ _24a225cde_BitsizeOf(_24a225a47_RealKindOf((*(_444221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c47977c1:;
						{
							_24a236c9a_SetF64((*(_444234_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_24a236030_AsF64((*(_444234_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c479787b:;
						{
							_24a236c9a_SetF64((*(_444234_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_24a236030_AsF64((*(_444234_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c4791578:;
				};
			}
		}
		_match_end_1c4790db3:;
	};
}



inline void _1dce7e4bc_updateModelToGenericIns(jule::Any* _447633_m, jule::Ptr<_1dcd74648_FnIns>* _447652_f) {
	{
		auto &_match_expr{ (*(_447633_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c4797a68:;
			{
				(*(_447633_m))=jule::Any((*(_447652_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c4797ace:;
			{
				(*(_447633_m)).cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_447652_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c4797b45:;
			{
				(*(_447633_m)).cast_ptr<_1dcd683a6_StructStaticIdentExprModel>(&__jule_any_type101).get()._field_Method=(*(_447652_f));
			}
		}
		_match_end_1c4796ccb:;
	};
}



inline jule::Bool _1dce7e70e_pushSubIdentFromExpr(jule::Any _448729_expr, jule::Ptr<_1dcd3c732_SubIdentTypeDecl>* _448750_t) {
	{
		auto &_match_expr{ _448729_expr };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c4799ac0:;
			{
				jule::Ptr<_1dcd42b00_IdentExpr> _449017_e = _448729_expr.cast_ptr<_1dcd42b00_IdentExpr>(&__jule_any_type85);;
				{ jule::Slice<jule::Ptr<_1dcd3c446_IdentTypeDecl>> &__jule_push_dest = (*(_448750_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_1dcd3c446_IdentTypeDecl>(_1dcd3c446_IdentTypeDecl{._field_Token=_449017_e.get()._field_Token, ._field_Ident=_449017_e.get()._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c479aab0:;
			{
				jule::Ptr<_1dcd44393_SubIdentExpr> _449617_e = _448729_expr.cast_ptr<_1dcd44393_SubIdentExpr>(&__jule_any_type91);;
				if ((!(_1dce7e70e_pushSubIdentFromExpr(_449617_e.get()._field_Expr.get()._field_Kind, _448750_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1dcd3c446_IdentTypeDecl>> &__jule_push_dest = (*(_448750_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_1dcd3c446_IdentTypeDecl>(_1dcd3c446_IdentTypeDecl{._field_Token=_449617_e.get()._field_Ident, ._field_Ident=_449617_e.get()._field_Ident.get()._field_Kind, })); };
			}
		}
		else {
			_case_begin_1c479a582:;
			{
				return false;;
			}
		}
		_match_end_1c479a52c:;
	};
	return true;;
}



inline jule::Str _1dce7e9a6_constoa(jule::Ptr<_24a233549_Const>* _451013_c) {
	{
		
		if (_24a2371da_IsI64((*(_451013_c)).ptr())) {
			_case_begin_1c479d9b4:;
			{
				return _24a2238d0_FmtInt(static_cast<jule::I64>(_24a234d42_ReadI64((*(_451013_c)).ptr())), 10LL);;
			}
		}
		else if (_24a23744e_IsU64((*(_451013_c)).ptr())) {
			_case_begin_1c479cd48:;
			{
				return _24a22354a_FmtUint(static_cast<jule::U64>(_24a2350a6_ReadU64((*(_451013_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1c479a7e6:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c479ae23:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dce7ece7_evalEnumStatic(jule::Ptr<_1dcd8644b_Enum>* _452124_enm, jule::Ptr<_1dcd85956_EnumItem>* _452141_item) {
	jule::Ptr<_1dce54cbc_Data> _452213_d = jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>((*(_452124_enm)), 3)}), });;
	if (((*(_452141_item)) != nullptr)) {
		_452213_d.get()._field_Constant=jule::new_ptr<_24a233549_Const>((*((*(_452141_item)).get()._field_Value.get()._field_Data.get()._field_Constant)));
		_452213_d.get()._field_Model=jule::Any(_452213_d.get()._field_Constant, &__jule_any_type19);
		_1dce7dc08_applyCastModelByEnum(&(_452213_d), (*(_452124_enm)));
	};
	return _452213_d;;
}



inline jule::Bool _1dce9b7e7_kindUsesGenerics(jule::Ptr<_1dce82437_TypeKind>* _173326_k, jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>>* _173341_generics) {
	{
		auto expr = _173341_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a766a2:;
		if (it != expr_end) {
			jule::Ptr<_1dcd48d26_GenericDecl> *_173412_g = it;
			{
				if (static__1dce9b3eb_exist(&((*(_173412_g)).get()._field_Ident), _173326_k)) {
					return true;;
				};
			}
			_iter_next_1c6a766a2:;
			++it;
			goto _iter_begin_1c6a766a2;
		}
		_iter_end_1c6a766a2:;
	};
	return false;;
}



inline jule::Bool _1dce9bb7c_hasDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>* _174322_directives, jule::Str _174353_tag) {
	{
		auto expr = _174322_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a76bbe:;
		if (it != expr_end) {
			jule::Ptr<_1dcd09369_Directive> _174417_dr = *it;
			{
				if ((_174417_dr.get()._field_Tag.get()._field_Kind == _174353_tag)) {
					return true;;
				};
			}
			_iter_next_1c6a76bbe:;
			++it;
			goto _iter_begin_1c6a76bbe;
		}
		_iter_end_1c6a76bbe:;
	};
	return false;;
}



inline jule::Bool _1dce9be24_canGetPtr(jule::Ptr<_1dce54cbc_Data>* _175219_d) {
	if (((!((*(_175219_d)).get()._field_Lvalue)) || _1dce5563b_IsConst((*(_175219_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_1dce85d42_Fn((*(_175219_d)).get()._field_Kind.ptr()) != nullptr) || (_1dce85391_Enum((*(_175219_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1c6a78a06:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c6a78990:;
			{
				return true;;
			}
		}
		_match_end_1c6a7795b:;
	};
}



inline jule::Bool _1dce9c243_isValidForSptrType(jule::Ptr<_1dce82437_TypeKind>* _176528_t) {
	jule::Ptr<_1dcd5e457_StructIns> _176613_s = _1dce860a6_Struct((*(_176528_t)).ptr());;
	if ((((_176613_s != nullptr) && (_176613_s.get()._field_Decl != nullptr)) && _176613_s.get()._field_Decl.get()._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1dce9c4da_isValidForRef(jule::Ptr<_1dce82437_TypeKind>* _177423_t) {
	return (_1dce85d42_Fn((*(_177423_t)).ptr()) == nullptr);;
}



inline jule::Bool _1dce9c7a4_isBuiltinStrConvertable(jule::Ptr<_1dce82437_TypeKind>* _177733_t) {
	return ((((!(_1dce83702_Void((*(_177733_t)).ptr()))) && (_1dce85d42_Fn((*(_177733_t)).ptr()) == nullptr)) && (_1dce867e3_Tup((*(_177733_t)).ptr()) == nullptr)) && (!(_1dce86a57_comptime((*(_177733_t)).ptr()))));;
}



inline jule::Str _1dce9ca29_buildLinkPathByTokens(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _178127_tokens) {
	jule::Str _178213_s = (*(_178127_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_178127_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c6a7caa4:;
		if (it != expr_end) {
			jule::Ptr<_23ae26b42_Token> *_178312_token = it;
			{
				(_178213_s).append("::", 2);
				_178213_s+=(*(_178312_token)).get()._field_Kind;
			}
			_iter_next_1c6a7caa4:;
			++it;
			goto _iter_begin_1c6a7caa4;
		}
		_iter_end_1c6a7caa4:;
	};
	return _178213_s;;
}



inline jule::Ptr<_1dce89b8c_Prim> _1dce9cdd1_buildPrimType(jule::Str _179018_kind) {
	return jule::new_ptr<_1dce89b8c_Prim>(_1dce89b8c_Prim{._field_Kind=_179018_kind});;
}



inline jule::Ptr<_1dcd5b641_Struct> _1dce9d178_getStructFromKind(jule::Ptr<_1dce82437_TypeKind> _179626_k) {
	{
		
		if ((_179626_k == nullptr)) {
			_case_begin_1c6a7db93:;
			{
				return nullptr;;
			}
		}
		else if ((_1dce860a6_Struct(_179626_k.ptr()) != nullptr)) {
			_case_begin_1c6a7dc09:;
			{
				return _1dce860a6_Struct(_179626_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1dce84db8_Sptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1c6a7dc70:;
			{
				return _1dce9d178_getStructFromKind(_1dce84db8_Sptr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1dce85acd_Slc(_179626_k.ptr()) != nullptr)) {
			_case_begin_1c6a7dcd6:;
			{
				return _1dce9d178_getStructFromKind(_1dce85acd_Slc(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1dce85869_Arr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1c6a7e05b:;
			{
				return _1dce9d178_getStructFromKind(_1dce85869_Arr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1dce8512c_Ptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1c6a7e0c2:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1c6a7d2be:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6a7d203:;
	};
}



inline void _1dce9d431_applyImplicitCast(jule::Ptr<_1dce82437_TypeKind>* _181827_dest, jule::Ptr<_1dce54cbc_Data>* _181849_d) {
	if (_1dce8348d_IsNil((*(_181849_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1dce89b8c_Prim> _18229_destPrim = _1dce84b54_Prim((*(_181827_dest)).ptr());;
	jule::Ptr<_1dce89b8c_Prim> _18239_prim = _1dce84b54_Prim((*(_181849_d)).get()._field_Kind.ptr());;
	if ((_18229_destPrim != nullptr)) {
		if (_1dce8d102_IsAny(_18229_destPrim.ptr())) {
			if (((_18239_prim == nullptr) || (!(_1dce8d102_IsAny(_18239_prim.ptr()))))) {
				_1dce7d477_applyCastKind(_181849_d, _181827_dest);
			};
			return;;
		};
		if (((((((!(_1dce83229_Binded((*(_181849_d)).get()._field_Kind.ptr()))) && (!((*(_181849_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_181849_d)).get()._field_Lvalue))) && (!(_1dce5563b_IsConst((*(_181849_d)).ptr())))) && (_18239_prim != nullptr)) && _24a233109_IsNum(_18239_prim.get()._field_Kind))) {
			_1dce7d477_applyCastKind(_181849_d, _181827_dest);
		};
		return;;
	};
	jule::Ptr<_1dcd83bb8_Trait> _18429_dt = _1dce8631a_Trait((*(_181827_dest)).ptr());;
	if ((_18429_dt != nullptr)) {
		jule::Ptr<_1dcd83bb8_Trait> _184413_bt = _1dce8631a_Trait((*(_181849_d)).get()._field_Kind.ptr());;
		if (((_184413_bt == nullptr) || (_184413_bt != _18429_dt))) {
			_1dce7d1be_applyCastKindModel(_181849_d, _181827_dest);
			return;;
		};
	};
	if (((_1dce85605_TypeEnum((*(_181827_dest)).ptr()) != nullptr) && (_1dce85605_TypeEnum((*(_181849_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1dce7d1be_applyCastKindModel(_181849_d, _181827_dest);
		return;;
	};
}



inline jule::Bool _1dce9d6c8_validTypeForXof(jule::Ptr<_1dce82437_TypeKind>* _185725_t) {
	return ((!(_1dce83702_Void((*(_185725_t)).ptr()))) && (_1dce85d42_Fn((*(_185725_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1dce502b2_SymbolTable__jule_tuple_s_23aa28854_Log _1dcea1478_buildSymbols(jule::Ptr<_1dcd080d2_Ast>* _1622_ast, jule::Trait<_1dcdc9a33_Importer>* _1638_importer, jule::Ptr<_1dcd7d124_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1dce502b2_SymbolTable__jule_tuple_s_23aa28854_Log __jule_func_result;
	jule::Ptr<_1dcd7d124_symbolBuilder> _1713_sb = jule::new_ptr<_1dcd7d124_symbolBuilder>(_1dcd7d124_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1dcd83080_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1dcdd031e_Package__jule_tuple_s_23aa28854_Log _1dcea18a7_analyzePackage(jule::Slice<jule::Ptr<_1dcd080d2_Ast>>* _3024_files, jule::Trait<_1dcdc9a33_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1dcdd031e_Package__jule_tuple_s_23aa28854_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e475cd:;
		if (it != expr_end) {
			jule::Ptr<_1dcd080d2_Ast> _3317_f = *it;
			{
				jule::Ptr<_1dce502b2_SymbolTable> _3418_table;;
				jule::Slice<_23aa28854_Log> _3429_errors;;
				({
					__jule_tuple_x_1dce502b2_SymbolTable__jule_tuple_s_23aa28854_Log __jule_assign_result = _1dcea1478_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1dce502b2_SymbolTable>> &__jule_push_dest = _3213_tables; __jule_push_dest.push(_3418_table); };
			}
			_iter_next_1c6e475cd:;
			++it;
			goto _iter_begin_1c6e475cd;
		}
		_iter_end_1c6e475cd:;
	};
	jule::Ptr<_1dcdd59a6_Sema> _4113_sema = jule::new_ptr<_1dcdd59a6_Sema>(_1dcdd59a6_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1dcdd4e8e_commonSemaMeta>()});;
	_1dce02660_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1dcdd031e_Package> _5013_pkg = jule::new_ptr<_1dcdd031e_Package>(_1dcdd031e_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1dcdd031e_Package__jule_tuple_s_23aa28854_Log _1dcea1c92_AnalyzePackage(jule::Slice<jule::Ptr<_1dcd080d2_Ast>> _7423_files, jule::Trait<_1dcdc9a33_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1dcdd031e_Package__jule_tuple_s_23aa28854_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1dcdd031e_Package> _7814_package;;
	jule::Slice<_23aa28854_Log> _7827_logs;;
	({
		__jule_tuple_x_1dcdd031e_Package__jule_tuple_s_23aa28854_Log __jule_assign_result = _1dcea18a7_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1dcd74648_FnIns> _1dd045c6a_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1c6e5140b:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _2620_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd04bd81_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1c6e50262:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _2920_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd04c26b_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1c6e514c7:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _3220_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd04c887_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1c6e5153d:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _3520_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd04cc72_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1c6e51010:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _3820_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd04d15c_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1c6e51087:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _4120_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd04d547_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1c6e5110e:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _4420_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd04e34a_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c6e51186:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _4720_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd05088a_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1c6e515b5:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _5020_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd051407_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1c6e5163c:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _5320_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd051da8_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1c6e516b4:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _5620_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd052293_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1c6e5173b:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _5920_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd05267d_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1c6e50e11:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6e50cce:;
	};
}



inline jule::Ptr<_1dce816de_TypeAlias> _1dd045e9b_primTypeAlias(jule::Ptr<_1dce82437_TypeKind>* _6623_k) {
	return jule::new_ptr<_1dce816de_TypeAlias>(_1dce816de_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1dce892da_TypeSymbol>(_1dce892da_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1dce816de_TypeAlias> _1dd0497b8_findBuiltinTypeAlias(jule::Str _9325_ident) {
	{
		auto &_match_expr{ _9325_ident };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c6e57764:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _9620_t = _1dd045e9b_primTypeAlias(&(_1dd0465a6_primAny));;
				return _9620_t;;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1c6e58b0b:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _9920_t = _1dd045e9b_primTypeAlias(&(_1dd046870_primStr));;
				return _9920_t;;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1c6e58b72:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _10220_t = _1dd045e9b_primTypeAlias(&(_1dd046b7d_primBool));;
				return _10220_t;;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c6e586bb:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _10520_t = _1dd045e9b_primTypeAlias(&(_1dd046e47_primUintptr));;
				return _10520_t;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c6e58732:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _10820_t = _1dd045e9b_primTypeAlias(&(_1dd047211_primUint));;
				return _10820_t;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c6e58798:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _11120_t = _1dd045e9b_primTypeAlias(&(_1dd0474ca_primInt));;
				return _11120_t;;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c6e5880e:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _11420_t = _1dd045e9b_primTypeAlias(&(_1dd0478a4_primI8));;
				return _11420_t;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c6e58bd8:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _11720_t = _1dd045e9b_primTypeAlias(&(_1dd047b6d_primI16));;
				return _11720_t;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c6e58c4e:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _12020_t = _1dd045e9b_primTypeAlias(&(_1dd048201_primI64));;
				return _12020_t;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c6e58cb5:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _12320_t = _1dd045e9b_primTypeAlias(&(_1dd048784_primU16));;
				return _12320_t;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c6e58d3c:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _12620_t = _1dd045e9b_primTypeAlias(&(_1dd048a4d_primU32));;
				return _12620_t;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c6e58db4:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _12920_t = _1dd045e9b_primTypeAlias(&(_1dd048d17_primU64));;
				return _12920_t;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c6e58e3b:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _13220_t = _1dd045e9b_primTypeAlias(&(_1dd04928a_primF32));;
				return _13220_t;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c6e58eb3:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _13520_t = _1dd045e9b_primTypeAlias(&(_1dd049554_primF64));;
				return _13520_t;;
			}
		}
		else if (_match_expr == jule::Str("byte", 4) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1c6e5903a:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _13820_t = _1dd045e9b_primTypeAlias(&(_1dd0484ba_primU8));;
				return _13820_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4) || _match_expr == jule::Str("i32", 3)) {
			_case_begin_1c6e590b2:;
			{
				static jule::Ptr<_1dce816de_TypeAlias> _14120_t = _1dd045e9b_primTypeAlias(&(_1dd047e37_primI32));;
				return _14120_t;;
			}
		}
		else {
			_case_begin_1c6e57eb2:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6e580a0:;
	};
}



inline jule::Any _1dd0499c7_findBuiltinDef(jule::Str _14819_ident) {
	jule::Ptr<_1dcd74648_FnIns> _14913_f = _1dd045c6a_findBuiltinFn(_14819_ident);;
	if ((_14913_f != nullptr)) {
		return jule::Any(_14913_f, &__jule_any_type7);;
	};
	jule::Ptr<_1dce816de_TypeAlias> _15313_ta = _1dd0497b8_findBuiltinTypeAlias(_14819_ident);;
	if ((_15313_ta != nullptr)) {
		return jule::Any(_15313_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1dd049c6e_findBuiltinDefStdDebug(jule::Str _16027_ident) {
	{
		auto &_match_expr{ _16027_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1c6e6341d:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _16320_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd055dbd_builtinCallerStdDebugOut), });;
				return jule::Any(_16320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1c6e63484:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _16620_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd0562a8_builtinCallerStdDebugOutln), });;
				return jule::Any(_16620_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c6e62a8d:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6e629a0:;
	};
}



inline jule::Any _1dd04a016_findBuiltinDefStdMem(jule::Str _17325_ident) {
	{
		auto &_match_expr{ _17325_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1c6e64b5b:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _17620_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd0547e5_builtinCallerStdMemSizeOf), });;
				return jule::Any(_17620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1c6e64bc2:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _17920_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd054c13_builtinCallerStdMemAlignOf), });;
				return jule::Any(_17920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1c6e64980:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _18220_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd055131_builtinCallerStdMemFree), });;
				return jule::Any(_18220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c6e64760:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6e63550:;
	};
}



inline jule::Any _1dd04a2d0_findBuiltinDefStdComptime(jule::Str _18930_ident) {
	{
		auto &_match_expr{ _18930_ident };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_1c6e66c3a:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _19220_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd052a8a_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_19220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_1c6e66a5e:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _19520_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd052ea8_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_19520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_1c6e66ac5:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _19820_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd05366d_builtinCallerStdComptimeRange), });;
				return jule::Any(_19820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Line", 4)) {
			_case_begin_1c6e66b3b:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _20120_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd053a8b_builtinCallerStdComptimeLine), });;
				return jule::Any(_20120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("File", 4)) {
			_case_begin_1c6e62e34:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _20420_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd053ea9_builtinCallerStdComptimeFile), });;
				return jule::Any(_20420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Files", 5)) {
			_case_begin_1c6e62e9a:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _20720_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd0543c7_builtinCallerStdComptimeFiles), });;
				return jule::Any(_20720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c6e6683e:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6e64c8d:;
	};
}



inline jule::Any _1dd04a687_findBuiltinDefStdJuleIntegrated(jule::Str _21436_ident) {
	{
		auto &_match_expr{ _21436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1c6e6a8dc:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _21720_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd055560_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_21720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1c6e6a953:;
			{
				static jule::Ptr<_1dcd74648_FnIns> _22020_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_Decl=jule::new_ptr<_1dcd71997_Fn>(_1dcd71997_Fn{._field_Generics=jule::Slice<jule::Ptr<_1dcd48d26_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd05597d_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_22020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1c6e6a348:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6e6a502:;
	};
}



inline jule::Any _1dd04a962_findPackageBuiltinDef(jule::Str _23226_link_path, jule::Str _23242_ident) {
	{
		auto &_match_expr{ _23226_link_path };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_1c6e6c713:;
			{
				return _1dd04a2d0_findBuiltinDefStdComptime(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1c6e6c779:;
			{
				return _1dd049c6e_findBuiltinDefStdDebug(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1c6e6c537:;
			{
				return _1dd04a016_findBuiltinDefStdMem(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1c6e6c59d:;
			{
				return _1dd04a687_findBuiltinDefStdJuleIntegrated(_23242_ident);;
			}
		}
		else {
			_case_begin_1c6e66d17:;
			{
				return nullptr;;
			}
		}
		_match_end_1c6e6a9b9:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04ad6e_builtinCallerCommonPlain(jule::Ptr<_1dce5683a_Eval>* _24734_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _24749_fc, jule::Ptr<_1dce54cbc_Data>* _24771_d) {
	jule::Ptr<_1dcd74648_FnIns> _24813_f = _1dce85d42_Fn((*(_24771_d)).get()._field_Kind.ptr());;
	_1dce4673c_fnCallArgChecker _25013_fcac = _1dce4673c_fnCallArgChecker{._field_e=(*(_24734_e)), ._field_args=(*(_24749_fc)).get()._field_Args, ._field_errorToken=(*(_24749_fc)).get()._field_Token, ._field_f=_24813_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1dce48ac4_check(&_25013_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1dcd6568e_FnCallExprModel> _26113_model = jule::new_ptr<_1dcd6568e_FnCallExprModel>(_1dcd6568e_FnCallExprModel{._field_Token=(*(_24749_fc)).get()._field_Token, ._field_Func=_24813_f, ._field_Expr=(*(_24771_d)).get()._field_Model, ._field_Args=_25013_fcac._field_argModels, });;
	if ((_24813_f.get()._field_Result == nullptr)) {
		(*(_24771_d))=_1dce7d675_buildVoidData();
	} else {
		(*(_24771_d))=jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_24813_f.get()._field_Result, });
	};
	(*(_24771_d)).get()._field_Model=jule::Any(_26113_model, &__jule_any_type35);
	return (*(_24771_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04b26a_builtinCallerCommon(jule::Ptr<_1dce5683a_Eval>* _28029_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _28044_fc, jule::Ptr<_1dce54cbc_Data>* _28066_d) {
	return _1dd04ad6e_builtinCallerCommonPlain(_28029_e, _28044_fc, _28066_d);;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04b655_builtinCallerCommonMut(jule::Ptr<_1dce5683a_Eval>* _28432_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _28447_fc, jule::Ptr<_1dce54cbc_Data>* _28469_d) {
	if ((!((*(_28469_d)).get()._field_Mutable))) {
		_1dce56d46_pushErr((*(_28432_e)).ptr(), (*(_28447_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1dd04b26a_builtinCallerCommon(_28432_e, _28447_fc, _28469_d);;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04b996_builtinCallerError(jule::Ptr<_1dce5683a_Eval>* _29128_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _29143_fc) {
	if (((*(_29143_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_29143_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _29913_expr = _1dce73307_evalExpr((*(_29128_e)), (*(_29143_fc)).get()._field_Args[0LL]);;
	if ((_29913_expr == nullptr)) {
		return nullptr;;
	};
	if (_1dce55163_IsNil(_29913_expr.ptr())) {
		_1dce56d46_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dce54cbc_Data> _30813_d = _1dce7d675_buildVoidData();;
	_30813_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd6cb08_BuiltinErrorCallExprModel>(_1dcd6cb08_BuiltinErrorCallExprModel{._field_Err=_29913_expr}), &__jule_any_type23);
	return _30813_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04bd81_builtinCallerOut(jule::Ptr<_1dce5683a_Eval>* _31326_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _31341_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_31341_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_31341_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _32213_expr = _1dce73307_evalExpr((*(_31326_e)), (*(_31341_fc)).get()._field_Args[0LL]);;
	if ((_32213_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1dce9c7a4_isBuiltinStrConvertable(&(_32213_expr.get()._field_Kind))))) {
		_1dce56d46_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dce54cbc_Data> _33213_d = _1dce7d675_buildVoidData();;
	_33213_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd69792_BuiltinOutCallExprModel>(_1dcd69792_BuiltinOutCallExprModel{._field_Expr=_32213_expr.get()._field_Model, }), &__jule_any_type28);
	return _33213_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04c26b_builtinCallerOutln(jule::Ptr<_1dce5683a_Eval>* _33728_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _33743_fc, jule::Ptr<_1dce54cbc_Data>* _33765_d) {
	(*(_33765_d))=_1dd04bd81_builtinCallerOut(_33728_e, _33743_fc, _33765_d);
	if (((*(_33765_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_33765_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd69b7c_BuiltinOutlnCallExprModel>(_1dcd69b7c_BuiltinOutlnCallExprModel{._field_Expr=(*(_33765_d)).get()._field_Model.cast_ptr<_1dcd69792_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return (*(_33765_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04c887_builtinCallerNew(jule::Ptr<_1dce5683a_Eval>* _34926_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _34941_fc, jule::Ptr<_1dce54cbc_Data>* _34963_d) {
	if (((*(_34941_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_34941_fc)).get()._field_Args.len() > 2LL)) {
		_1dce56d46_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _35813_t = _1dce725c0_evalExprKind((*(_34926_e)), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_35813_t.get()._field_Decl))) {
		_1dce56d46_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1dce9c243_isValidForSptrType(&(_35813_t.get()._field_Kind))))) {
		jule::Ptr<_1dcd5e457_StructIns> _36917_s = _1dce860a6_Struct(_35813_t.get()._field_Kind.ptr());;
		if ((((_36917_s != nullptr) && (_36917_s.get()._field_Decl != nullptr)) && _36917_s.get()._field_Decl.get()._field_Binded)) {
			_1dce56d46_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_34963_d)).get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dce8d3dd_Sptr>(_1dce8d3dd_Sptr{._field_Elem=_35813_t.get()._field_Kind}), 21)});
	if (((*(_34941_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1dce82437_TypeKind> _38317_old = (*(_34926_e)).get()._field_prefix;;
		(*(_34926_e)).get()._field_prefix=_35813_t.get()._field_Kind;
		jule::Ptr<_1dce54cbc_Data> _38617_init = _1dce73307_evalExpr((*(_34926_e)), (*(_34941_fc)).get()._field_Args[1LL]);;
		(*(_34926_e)).get()._field_prefix=_38317_old;
		if ((_38617_init != nullptr)) {
			jule::Ptr<_23ae26b42_Token> _39121_token = (*(_34941_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1dcde34db_checkValidityForInitExpr((*(_34926_e)).get()._field_s, (!((*(_34926_e)).get()._field_immutable)), false, &(_35813_t.get()._field_Kind), &(_38617_init), &(_39121_token));
			_1dcde05c6_checkAssignType((*(_34926_e)).get()._field_s, false, &(_35813_t.get()._field_Kind), &(_38617_init), _39121_token);
			(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6a386_BuiltinNewCallExprModel>(_1dcd6a386_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Init=_38617_init.get()._field_Model}), &__jule_any_type116);
		};
	} else {
		(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6a386_BuiltinNewCallExprModel>(_1dcd6a386_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, }), &__jule_any_type116);
	};
	return (*(_34963_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04cc72_builtinCallerPanic(jule::Ptr<_1dce5683a_Eval>* _41128_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _41143_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_41143_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_41143_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _42013_expr = _1dce73307_evalExpr((*(_41128_e)), (*(_41143_fc)).get()._field_Args[0LL]);;
	if ((_42013_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1dce84b54_Prim(_42013_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1dce8cd8d_IsStr(_1dce84b54_Prim(_42013_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1dce56d46_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dce54cbc_Data> _42913_d = _1dce7d675_buildVoidData();;
	_42913_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd6a771_BuiltinPanicCallExprModel>(_1dcd6a771_BuiltinPanicCallExprModel{._field_Token=(*(_41143_fc)).get()._field_Token, ._field_Expr=_42013_expr.get()._field_Model}), &__jule_any_type30);
	return _42913_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04d15c_builtinCallerMake(jule::Ptr<_1dce5683a_Eval>* _43727_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _43742_fc, jule::Ptr<_1dce54cbc_Data>* _43764_d) {
	if (((*(_43742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_43742_fc)).get()._field_Args.len() == 1LL)) {
			_1dce56d46_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1dce56d46_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dce54cbc_Data> _44713_t = _1dce725c0_evalExprKind((*(_43727_e)), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_44713_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_44713_t.get()._field_Decl))) {
		_1dce56d46_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_43742_fc)).get()._field_Args.len() > 3LL)) {
		_1dce56d46_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_43764_d)).get()._field_Kind=_44713_t.get()._field_Kind;
	jule::Ptr<_1dce54cbc_Data> _46313_lenExpr = _1dce73307_evalExpr(_1dcddecbd_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[1LL]);;
	if ((_46313_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1dce60437_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_46313_lenExpr), (*(_43742_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1dcd6b1cd_BuiltinMakeCallExprModel> _47013_model = jule::new_ptr<_1dcd6b1cd_BuiltinMakeCallExprModel>(_1dcd6b1cd_BuiltinMakeCallExprModel{._field_Kind=_44713_t.get()._field_Kind, ._field_Len=_46313_lenExpr.get()._field_Model, });;
	(*(_43764_d)).get()._field_Model=jule::Any(_47013_model, &__jule_any_type117);
	if (((*(_43742_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1dce54cbc_Data> _47617_capExpr = _1dce73307_evalExpr(_1dcddecbd_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[2LL]);;
		if ((_47617_capExpr == nullptr)) {
			return (*(_43764_d));;
		};
		_1dce60437_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_47617_capExpr), (*(_43742_fc)).get()._field_Args[2LL].get()._field_Token);
		_47013_model.get()._field_Cap=_47617_capExpr.get()._field_Model;
	};
	return (*(_43764_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04d547_builtinCallerAppend(jule::Ptr<_1dce5683a_Eval>* _48629_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _48644_fc, jule::Ptr<_1dce54cbc_Data>* _48666_d) {
	if (((*(_48644_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_48644_fc)).get()._field_Args.len() == 1LL)) {
			_1dce56d46_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1dce56d46_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dce54cbc_Data> _49613_t = _1dce73307_evalExpr((*(_48629_e)), (*(_48644_fc)).get()._field_Args[0LL]);;
	if ((_49613_t == nullptr)) {
		return nullptr;;
	};
	if ((_1dce85acd_Slc(_49613_t.get()._field_Kind.ptr()) == nullptr)) {
		_1dce56d46_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dcd74648_FnIns> _50613_f = jule::new_ptr<_1dcd74648_FnIns>(_1dcd74648_FnIns{._field_Params=jule::Slice<jule::Ptr<_1dcd73779_ParamIns>>::make({jule::new_ptr<_1dcd73779_ParamIns>(_1dcd73779_ParamIns{._field_Decl=jule::new_ptr<_1dcd7015a_Param>(_1dcd7015a_Param{._field_Mutable=true, }), ._field_Kind=_49613_t.get()._field_Kind}),jule::new_ptr<_1dcd73779_ParamIns>(_1dcd73779_ParamIns{._field_Decl=jule::new_ptr<_1dcd7015a_Param>(_1dcd7015a_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1dce85acd_Slc(_49613_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_49613_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1dce54cbc_Data>(jule::Ptr<_1dce5683a_Eval>*,jule::Ptr<_1dcd44e21_FnCallExpr>*,jule::Ptr<_1dce54cbc_Data>*)>(_1dd04ad6e_builtinCallerCommonPlain), });;
	(*(_48666_d)).get()._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(_50613_f, 1)});
	(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd68a5a_CommonIdentExprModel>(_1dcd68a5a_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_48666_d))=_1dd04ad6e_builtinCallerCommonPlain(_48629_e, _48644_fc, _48666_d);
	if (((*(_48666_d)) != nullptr)) {
		jule::Ptr<_1dcd6568e_FnCallExprModel> _53417_model = (*(_48666_d)).get()._field_Model.cast_ptr<_1dcd6568e_FnCallExprModel>(&__jule_any_type35);;
		(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6b5b8_BuiltinAppendCallExprModel>(_1dcd6b5b8_BuiltinAppendCallExprModel{._field_Dest=_53417_model.get()._field_Args[0LL], ._field_Elements=_53417_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_48666_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04d9cb_callerCopySlice(jule::Ptr<_1dce54cbc_Data>* _54325_dest, jule::Ptr<_1dce5683a_Eval>* _54343_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _54358_fc, jule::Ptr<_1dce54cbc_Data>* _54380_d) {
	if ((!((*(_54325_dest)).get()._field_Mutable))) {
		_1dce56d46_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dce54cbc_Data> _54813_src = _1dce73307_evalExpr((*(_54343_e)), (*(_54358_fc)).get()._field_Args[1LL]);;
	if ((_54813_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1dce8dd4a_Slc> _55213_slc = _1dce85acd_Slc(_54813_src.get()._field_Kind.ptr());;
	if ((_55213_slc != nullptr)) {
		if (((!(_54813_src.get()._field_Mutable)) && _1dce83bca_Mutable(_55213_slc.get()._field_Elem.ptr()))) {
			_1dce56d46_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1dce82aec_Equal((*(_54325_dest)).get()._field_Kind, _54813_src.get()._field_Kind)))) {
			_1dce56d46_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1dce89b8c_Prim> _56213_destPrim = _1dce84b54_Prim(_1dce85acd_Slc((*(_54325_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1dce89b8c_Prim> _56313_prim = _1dce84b54_Prim(_54813_src.get()._field_Kind.ptr());;
		if (((((_56213_destPrim == nullptr) || (_56313_prim == nullptr)) || (!(_1dce8cd8d_IsStr(_56313_prim.ptr())))) || (!(_1dce8b463_IsU8(_56213_destPrim.ptr()))))) {
			_1dce56d46_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_54380_d)).get()._field_Kind=_1dce4e1a1_lenKind();
	(*(_54380_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6c71d_BuiltinCopyCallExprModel>(_1dcd6c71d_BuiltinCopyCallExprModel{._field_Dest=(*(_54325_dest)), ._field_Src=_54813_src}), &__jule_any_type32);
	return (*(_54380_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04de60_callerCopyStr(jule::Ptr<_1dce54cbc_Data>* _57723_dest, jule::Ptr<_1dce5683a_Eval>* _57741_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _57756_fc, jule::Ptr<_1dce54cbc_Data>* _57778_d) {
	if ((!((*(_57723_dest)).get()._field_Mutable))) {
		_1dce56d46_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dce54cbc_Data> _58213_src = _1dce73307_evalExpr((*(_57741_e)), (*(_57756_fc)).get()._field_Args[1LL]);;
	if ((_58213_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1dce84b54_Prim(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ea6d02:;
			{
				if (_1dce8cd8d_IsStr(_1dce84b54_Prim(_58213_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1dce85acd_Slc(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ea6d68:;
			{
				jule::Ptr<_1dce8dd4a_Slc> _59217_slc = _1dce85acd_Slc(_58213_src.get()._field_Kind.ptr());;
				if (((_1dce84b54_Prim(_59217_slc.get()._field_Elem.ptr()) != nullptr) && _1dce8b463_IsU8(_1dce84b54_Prim(_59217_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1c6ea7088:;
	};
	_1dce56d46_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str((*(_57723_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1dce827de_Str(_58213_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_57778_d)).get()._field_Kind=_1dce4e1a1_lenKind();
	(*(_57778_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6c71d_BuiltinCopyCallExprModel>(_1dcd6c71d_BuiltinCopyCallExprModel{._field_Dest=(*(_57723_dest)), ._field_Src=_58213_src}), &__jule_any_type32);
	return (*(_57778_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04e34a_builtinCallerCopy(jule::Ptr<_1dce5683a_Eval>* _60727_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _60742_fc, jule::Ptr<_1dce54cbc_Data>* _60764_d) {
	if (((*(_60742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_60742_fc)).get()._field_Args.len() == 1LL)) {
			_1dce56d46_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1dce56d46_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_60742_fc)).get()._field_Args.len() > 2LL)) {
		_1dce56d46_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _62013_dest = _1dce73307_evalExpr((*(_60727_e)), (*(_60742_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_62013_dest == nullptr)) {
			_case_begin_1c6eb0624:;
			{
				return nullptr;;
			}
		}
		else if ((_1dce85acd_Slc(_62013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6eb10b4:;
			{
				return _1dd04d9cb_callerCopySlice(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else if (((_1dce84b54_Prim(_62013_dest.get()._field_Kind.ptr()) != nullptr) && _1dce8cd8d_IsStr(_1dce84b54_Prim(_62013_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c6eb112a:;
			{
				return _1dd04de60_callerCopyStr(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else {
			_case_begin_1c6eb02d3:;
			{
				_1dce56d46_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c6eadd1a:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04e68b_callerLenSlice(jule::Ptr<_1dce54cbc_Data>* _63424_expr, jule::Ptr<_1dce54cbc_Data>* _63442_d) {
	(*(_63442_d)).get()._field_Kind=_1dce4e1a1_lenKind();
	(*(_63442_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6b8d7_BuiltinLenCallExprModel>(_1dcd6b8d7_BuiltinLenCallExprModel{._field_Expr=(*(_63424_expr))}), &__jule_any_type118);
	return (*(_63442_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04e9cc_callerLenMap(jule::Ptr<_1dce54cbc_Data>* _64222_expr, jule::Ptr<_1dce54cbc_Data>* _64240_d) {
	(*(_64240_d)).get()._field_Kind=_1dce4e1a1_lenKind();
	(*(_64240_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6b8d7_BuiltinLenCallExprModel>(_1dcd6b8d7_BuiltinLenCallExprModel{._field_Expr=(*(_64222_expr))}), &__jule_any_type118);
	return (*(_64240_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd04ed1d_callerLenArr(jule::Ptr<_1dce54cbc_Data>* _65022_expr, jule::Ptr<_1dce54cbc_Data>* _65040_d) {
	(*(_65040_d)).get()._field_Kind=_1dce4e1a1_lenKind();
	(*(_65040_d)).get()._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1dce85869_Arr((*(_65022_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_65040_d)).get()._field_Model=jule::Any((*(_65040_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_65040_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd05015e_callerLenStr(jule::Ptr<_1dce54cbc_Data>* _65722_expr, jule::Ptr<_1dce54cbc_Data>* _65740_d) {
	(*(_65740_d)).get()._field_Kind=_1dce4e1a1_lenKind();
	if (_1dce5563b_IsConst((*(_65722_expr)).ptr())) {
		(*(_65740_d)).get()._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24a23557e_ReadStr((*(_65722_expr)).get()._field_Constant.ptr()).len())));
		(*(_65740_d)).get()._field_Model=jule::Any((*(_65740_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_65740_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6b8d7_BuiltinLenCallExprModel>(_1dcd6b8d7_BuiltinLenCallExprModel{._field_Expr=(*(_65722_expr))}), &__jule_any_type118);
	};
	return (*(_65740_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd0504a0_callerLenComptime(jule::Ptr<_1dce54cbc_Data>* _67027_d, jule::I64 _67037_n) {
	(*(_67027_d)).get()._field_Kind=_1dce4e1a1_lenKind();
	(*(_67027_d)).get()._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67037_n)));
	(*(_67027_d)).get()._field_Model=jule::Any((*(_67027_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_67027_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd05088a_builtinCallerLen(jule::Ptr<_1dce5683a_Eval>* _67726_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _67741_fc, jule::Ptr<_1dce54cbc_Data>* _67763_d) {
	if (((*(_67741_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_67741_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _68513_dest = _1dce72ee9_evalExpr1((*(_67726_e)), (*(_67741_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_68513_dest == nullptr)) {
			_case_begin_1c6eba84e:;
			{
				return nullptr;;
			}
		}
		else if ((_1dce85acd_Slc(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ebb2de:;
			{
				return _1dd04e68b_callerLenSlice(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_1dce85869_Arr(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ebb355:;
			{
				return _1dd04ed1d_callerLenArr(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_1dce8657e_Map(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ebb179:;
			{
				return _1dd04e9cc_callerLenMap(&(_68513_dest), _67763_d);;
			}
		}
		else if (((_1dce84b54_Prim(_68513_dest.get()._field_Kind.ptr()) != nullptr) && _1dce8cd8d_IsStr(_1dce84b54_Prim(_68513_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c6ebb1e0:;
			{
				return _1dd05015e_callerLenStr(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_1dce86cbb_comptimeStructFields(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6eba574:;
			{
				return _1dd0504a0_callerLenComptime(_67763_d, static_cast<jule::I64>(_1dce86cbb_comptimeStructFields(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1dce87294_comptimeEnumFields(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6eba5da:;
			{
				return _1dd0504a0_callerLenComptime(_67763_d, static_cast<jule::I64>(_1dce87294_comptimeEnumFields(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1dce87ea9_comptimeTypeInfos(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6eba651:;
			{
				return _1dd0504a0_callerLenComptime(_67763_d, static_cast<jule::I64>(_1dce87ea9_comptimeTypeInfos(_68513_dest.get()._field_Kind.ptr()).get()._field_types.len()));;
			}
		}
		else if ((_1dce8776c_comptimeParams(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6eba6b7:;
			{
				return _1dd0504a0_callerLenComptime(_67763_d, static_cast<jule::I64>(_1dce8776c_comptimeParams(_68513_dest.get()._field_Kind.ptr()).get()._field_params.len()));;
			}
		}
		else if ((_1dce88482_comptimeStatics(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ebb3bb:;
			{
				return _1dd0504a0_callerLenComptime(_67763_d, static_cast<jule::I64>(_1dce88482_comptimeStatics(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1dce88e33_comptimeFiles(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ebb432:;
			{
				return _1dd0504a0_callerLenComptime(_67763_d, static_cast<jule::I64>(_1dce88e33_comptimeFiles(_68513_dest.get()._field_Kind.ptr()).get()._field_files.len()));;
			}
		}
		else {
			_case_begin_1c6eba50d:;
			{
				_1dce56d46_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c6eb84a6:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dd050bcb_callerCapSlice(jule::Ptr<_1dce54cbc_Data>* _71524_expr, jule::Ptr<_1dce54cbc_Data>* _71542_d) {
	(*(_71542_d)).get()._field_Kind=_1dce4e1a1_lenKind();
	(*(_71542_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6bc06_BuiltinCapCallExprModel>(_1dcd6bc06_BuiltinCapCallExprModel{._field_Expr=(*(_71524_expr))}), &__jule_any_type119);
	return (*(_71542_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd05101c_callerCapStr(jule::Ptr<_1dce54cbc_Data>* _72322_expr, jule::Ptr<_1dce54cbc_Data>* _72340_d) {
	(*(_72340_d)).get()._field_Kind=_1dce4e1a1_lenKind();
	if (_1dce5563b_IsConst((*(_72322_expr)).ptr())) {
		(*(_72340_d)).get()._field_Constant=static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24a23557e_ReadStr((*(_72322_expr)).get()._field_Constant.ptr()).cap())));
		(*(_72340_d)).get()._field_Model=jule::Any((*(_72340_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_72340_d)).get()._field_Model=jule::Any(jule::new_ptr<_1dcd6bc06_BuiltinCapCallExprModel>(_1dcd6bc06_BuiltinCapCallExprModel{._field_Expr=(*(_72322_expr))}), &__jule_any_type119);
	};
	return (*(_72340_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd051407_builtinCallerCap(jule::Ptr<_1dce5683a_Eval>* _73626_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _73641_fc, jule::Ptr<_1dce54cbc_Data>* _73663_d) {
	if (((*(_73641_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_73641_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _74413_dest = _1dce73307_evalExpr((*(_73626_e)), (*(_73641_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_74413_dest == nullptr)) {
			_case_begin_1c6ec8670:;
			{
				return nullptr;;
			}
		}
		else if (_74413_dest.get()._field_Decl) {
			_case_begin_1c6ec9110:;
			{
				_1dce56d46_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1dce85acd_Slc(_74413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ec9176:;
			{
				return _1dd050bcb_callerCapSlice(&(_74413_dest), _73663_d);;
			}
		}
		else if (((_1dce84b54_Prim(_74413_dest.get()._field_Kind.ptr()) != nullptr) && _1dce8cd8d_IsStr(_1dce84b54_Prim(_74413_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c6ec8e9a:;
			{
				return _1dd05101c_callerCapStr(&(_74413_dest), _73663_d);;
			}
		}
		else {
			_case_begin_1c6ec832e:;
			{
				_1dce56d46_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c6ec62c7:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dd0519bd_callerDeleteMap(jule::Ptr<_1dce5683a_Eval>* _76125_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _76140_fc, jule::Ptr<_1dce54cbc_Data>* _76162_expr, jule::Ptr<_1dce54cbc_Data>* _76180_d) {
	if ((!((*(_76162_expr)).get()._field_Mutable))) {
		_1dce56d46_pushErr((*(_76125_e)).ptr(), (*(_76140_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_76180_d))=_1dce7d675_buildVoidData();
	jule::Ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel> _76613_model = jule::new_ptr<_1dcd6c3aa_BuiltinDeleteCallExprModel>(_1dcd6c3aa_BuiltinDeleteCallExprModel{._field_Dest=(*(_76162_expr)), });;
	if (((*(_76140_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1dce54cbc_Data> _77017_key = _1dce73307_evalExpr((*(_76125_e)), (*(_76140_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_77017_key == nullptr)) {
				_case_begin_1c6eceec3:;
				{
					return nullptr;;
				}
			}
			else if (_77017_key.get()._field_Decl) {
				_case_begin_1c6ecd8c8:;
				{
					_1dce56d46_pushErr((*(_76125_e)).ptr(), (*(_76140_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1c6ecd862:;
				{
					;
					jule::Ptr<_1dce82437_TypeKind> _77921_keyType = _1dce8657e_Map((*(_76162_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1dcde05c6_checkAssignType((*(_76125_e)).get()._field_s, false, &(_77921_keyType), &(_77017_key), (*(_76140_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1c6ecd7eb:;
		};
		_76613_model.get()._field_Key=_77017_key;
	};
	(*(_76180_d)).get()._field_Model=jule::Any(_76613_model, &__jule_any_type33);
	return (*(_76180_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd051da8_builtinCallerDelete(jule::Ptr<_1dce5683a_Eval>* _79029_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _79044_fc, jule::Ptr<_1dce54cbc_Data>* _79066_d) {
	if (((*(_79044_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_79044_fc)).get()._field_Args.len() > 2LL)) {
		_1dce56d46_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _79813_dest = _1dce73307_evalExpr((*(_79029_e)), (*(_79044_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_79813_dest == nullptr)) {
			_case_begin_1c6ed40d7:;
			{
				return nullptr;;
			}
		}
		else if (_79813_dest.get()._field_Decl) {
			_case_begin_1c6ed4a77:;
			{
				_1dce56d46_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1dce8657e_Map(_79813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c6ed4add:;
			{
				return _1dd0519bd_callerDeleteMap(_79029_e, _79044_fc, &(_79813_dest), _79066_d);;
			}
		}
		else {
			_case_begin_1c6ed3c96:;
			{
				_1dce56d46_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c6ed1c3e:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dd052293_builtinCallerClone(jule::Ptr<_1dce5683a_Eval>* _81328_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _81343_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_81343_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_81343_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _82213_d = _1dce73307_evalExpr((*(_81328_e)), (*(_81343_fc)).get()._field_Args[0LL]);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1dce8467b_SupportsCloning(_82213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1dce85acd_Slc(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_1dce8657e_Map(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_1dce85869_Arr(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_1dce84db8_Sptr(_82213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1c6ed940b:;
				{
					{
						_1dce56d46_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1dce860a6_Struct(_82213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1c6ed8c68:;
				{
					{
						_1dce56d46_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			else {
				_case_begin_1c6ed8c02:;
				{
					{
						_1dce56d46_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			_match_end_1c6ed8b58:;
		};
	};
	_82213_d.get()._field_Mutable=true;
	_82213_d.get()._field_Model=jule::Any(jule::new_ptr<_1dcd69e9b_BuiltinCloneCallExprModel>(_1dcd69e9b_BuiltinCloneCallExprModel{._field_Expr=_82213_d.get()._field_Model}), &__jule_any_type27);
	return _82213_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd05267d_builtinCallerAssert(jule::Ptr<_1dce5683a_Eval>* _85529_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _85544_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_85544_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_85544_fc)).get()._field_Args.len() > 2LL)) {
		_1dce56d46_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _86413_expr = _1dce73307_evalExpr((*(_85529_e)), (*(_85544_fc)).get()._field_Args[0LL]);;
	if ((_86413_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1dce84b54_Prim(_86413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1dce8cb29_IsBool(_1dce84b54_Prim(_86413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1dce56d46_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dcd6ac27_BuiltinAssertCallExprModel> _87313_model = jule::new_ptr<_1dcd6ac27_BuiltinAssertCallExprModel>(_1dcd6ac27_BuiltinAssertCallExprModel{._field_Token=(*(_85544_fc)).get()._field_Token, ._field_Expr=_86413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_85544_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1dce54cbc_Data> _88117_log = _1dce73307_evalExpr((*(_85529_e)), (*(_85544_fc)).get()._field_Args[1LL]);;
		if ((_88117_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1dce5563b_IsConst(_88117_log.ptr()))) || (_1dce84b54_Prim(_88117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1dce8cd8d_IsStr(_1dce84b54_Prim(_88117_log.get()._field_Kind.ptr()).ptr()))))) {
			_1dce56d46_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1dce827de_Str(_88117_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_87313_model.get()._field_Log=_24a23557e_ReadStr(_88117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1dce54cbc_Data> _89413_d = _1dce7d675_buildVoidData();;
	_89413_d.get()._field_Model=jule::Any(_87313_model, &__jule_any_type31);
	return _89413_d;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd052a8a_builtinCallerStdComptimeTypeOf(jule::Ptr<_1dce5683a_Eval>* _89940_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _89955_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_89955_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89955_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _90813_d = _1dce725c0_evalExprKind((*(_89940_e)), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_90813_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1dcd74648_FnIns> _9129_f = _1dce85d42_Fn(_90813_d.get()._field_Kind.ptr());;
	if ((_9129_f != nullptr)) {
		if (_1dcd759ce_IsBuiltin(_9129_f.ptr())) {
			_1dce56d46_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type5)}));
			return nullptr;;
		};
		if ((_9129_f.get()._field_Generics.len() != _9129_f.get()._field_Decl.get()._field_Generics.len())) {
			_1dce56d46_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1dcd5e457_StructIns> _9239_s = _1dce860a6_Struct(_90813_d.get()._field_Kind.ptr());;
	if (((_9239_s != nullptr) && (_9239_s.get()._field_Generics.len() != _9239_s.get()._field_Decl.get()._field_Generics.len()))) {
		_1dce56d46_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1dce86a57_comptime(_90813_d.get()._field_Kind.ptr())) {
		_1dce56d46_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_90813_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1dcda5091_buildComptimeTypeInfoData(&((*(_89940_e)).get()._field_s), &(_90813_d.get()._field_Kind));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd052ea8_builtinCallerStdComptimeValueOf(jule::Ptr<_1dce5683a_Eval>* _93541_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _93556_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_93556_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_93556_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _94313_d = _1dce73307_evalExpr((*(_93541_e)), (*(_93556_fc)).get()._field_Args[0LL]);;
	if ((_94313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1dce4e448_isGoodValueToInfer(&(_94313_d))))) {
		_1dce56d46_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_94313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1dcda53c1_buildComptimeValue(&(_94313_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd053261_rangeData(jule::Trait<_1dcd899c1_comptimeRangeKind> _95518_kind) {
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcd89b9c_comptimeRange>(_1dcd89b9c_comptimeRange{._field_kind=_95518_kind}), 5)}), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd05366d_builtinCallerStdComptimeRange(jule::Ptr<_1dce5683a_Eval>* _96539_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _96554_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_96554_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_96554_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _97413_d = _1dce725c0_evalExprKind((*(_96539_e)), (*(_96554_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_97413_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1dce86cbb_comptimeStructFields(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c700712c:;
			{
				return _1dd053261_rangeData(jule::Trait<_1dcd899c1_comptimeRangeKind>(_1dce86cbb_comptimeStructFields(_97413_d.get()._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1dce87294_comptimeEnumFields(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7007193:;
			{
				return _1dd053261_rangeData(jule::Trait<_1dcd899c1_comptimeRangeKind>(_1dce87294_comptimeEnumFields(_97413_d.get()._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1dce87ea9_comptimeTypeInfos(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7006ea6:;
			{
				return _1dd053261_rangeData(jule::Trait<_1dcd899c1_comptimeRangeKind>(_1dce87ea9_comptimeTypeInfos(_97413_d.get()._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1dce8776c_comptimeParams(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c700701c:;
			{
				return _1dd053261_rangeData(jule::Trait<_1dcd899c1_comptimeRangeKind>(_1dce8776c_comptimeParams(_97413_d.get()._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1dce88482_comptimeStatics(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c70060a4:;
			{
				return _1dd053261_rangeData(jule::Trait<_1dcd899c1_comptimeRangeKind>(_1dce88482_comptimeStatics(_97413_d.get()._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1dce88e33_comptimeFiles(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c700611a:;
			{
				return _1dd053261_rangeData(jule::Trait<_1dcd899c1_comptimeRangeKind>(_1dce88e33_comptimeFiles(_97413_d.get()._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1c7006307:;
			{
				_1dce56d46_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_97413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1c7005e0b:;
	};
}



inline jule::Ptr<_1dce54cbc_Data> _1dd053a8b_builtinCallerStdComptimeLine(jule::Ptr<_1dce5683a_Eval>* _99738_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _99753_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_99753_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_99738_e)).ptr(), (*(_99753_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Line", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_24a233549_Const> _100113_constant = static__24a233978_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_99753_fc)).get()._field_Token.get()._field_Row)));;
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd0474ca_primInt, ._field_Model=jule::Any(_100113_constant, &__jule_any_type19), ._field_Constant=_100113_constant});;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd053ea9_builtinCallerStdComptimeFile(jule::Ptr<_1dce5683a_Eval>* _100938_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _100953_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_100953_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_100938_e)).ptr(), (*(_100953_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("File", 4), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcda3006_comptimeFile>(_1dcda3006_comptimeFile{._field_file=(*(_100938_e)).get()._field_s.get()._field_file}), 18)}), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd0543c7_builtinCallerStdComptimeFiles(jule::Ptr<_1dce5683a_Eval>* _102239_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _102254_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_102254_fc)).get()._field_Args.len() > 0LL)) {
		_1dce56d46_pushErr((*(_102239_e)).ptr(), (*(_102254_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Files", 5), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=jule::new_ptr<_1dce82437_TypeKind>(_1dce82437_TypeKind{._field_Kind=jule::Trait<_1dce81ec5_Kind>(jule::new_ptr<_1dcda1a3d_comptimeFiles>(_1dcda1a3d_comptimeFiles{._field_files=(*(_102239_e)).get()._field_s.get()._field_files}), 17)}), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd0547e5_builtinCallerStdMemSizeOf(jule::Ptr<_1dce5683a_Eval>* _103535_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _103550_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	jule::Ptr<_1dce54cbc_Data> _103613_result = jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd047211_primUint, });;
	if (((*(_103550_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _103613_result;;
	};
	if (((*(_103550_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _104813_d = _1dce725c0_evalExprKind((*(_103535_e)), (*(_103550_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_104813_d == nullptr)) {
		return _103613_result;;
	};
	if ((!(_1dce9d6c8_validTypeForXof(&(_104813_d.get()._field_Kind))))) {
		_1dce56d46_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_104813_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	_103613_result.get()._field_Model=jule::Any(jule::new_ptr<_1dcd6ce05_SizeofExprModel>(_1dcd6ce05_SizeofExprModel{._field_Expr=_104813_d.get()._field_Model}), &__jule_any_type120);
	return _103613_result;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd054c13_builtinCallerStdMemAlignOf(jule::Ptr<_1dce5683a_Eval>* _106036_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _106051_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	jule::Ptr<_1dce54cbc_Data> _106113_result = jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd047211_primUint, });;
	if (((*(_106051_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _106113_result;;
	};
	if (((*(_106051_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _107313_d = _1dce725c0_evalExprKind((*(_106036_e)), (*(_106051_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_107313_d == nullptr)) {
		return _106113_result;;
	};
	if ((!(_1dce9d6c8_validTypeForXof(&(_107313_d.get()._field_Kind))))) {
		_1dce56d46_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1dce827de_Str(_107313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	_106113_result.get()._field_Model=jule::Any(jule::new_ptr<_1dcd6d1e1_AlignofExprModel>(_1dcd6d1e1_AlignofExprModel{._field_Expr=_107313_d.get()._field_Model}), &__jule_any_type121);
	return _106113_result;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd055131_builtinCallerStdMemFree(jule::Ptr<_1dce5683a_Eval>* _108533_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _108548_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_108548_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_108548_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _109413_d = _1dce73307_evalExpr((*(_108533_e)), (*(_108548_fc)).get()._field_Args[0LL]);;
	if ((_109413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1dce84417_PerformsRC(_109413_d.get()._field_Kind.ptr())))) {
		_1dce56d46_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dce54cbc_Data> _110313_result = _1dce7d675_buildVoidData();;
	_110313_result.get()._field_Model=jule::Any(jule::new_ptr<_1dcd6de8e_FreeExprModel>(_1dcd6de8e_FreeExprModel{._field_Expr=_109413_d.get()._field_Model}), &__jule_any_type34);
	return _110313_result;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd055560_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1dce5683a_Eval>* _110845_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _110860_fc, jule::Ptr<_1dce54cbc_Data>* ) {
	if (((*(_110860_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_110860_fc)).get()._field_Args.len() > 1LL)) {
		_1dce56d46_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1dce54cbc_Data> _111713_d = _1dce73307_evalExpr((*(_110845_e)), (*(_110860_fc)).get()._field_Args[0LL]);;
	if ((_111713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1dce9c7a4_isBuiltinStrConvertable(&(_111713_d.get()._field_Kind))))) {
		_1dce56d46_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1dce54cbc_Data>(_1dce54cbc_Data{._field_Kind=_1dd046870_primStr, ._field_Model=jule::Any(jule::new_ptr<_1dcd6d7da_IntegratedToStrExprModel>(_1dcd6d7da_IntegratedToStrExprModel{._field_Expr=_111713_d.get()._field_Model}), &__jule_any_type122), });;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd05597d_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1dce5683a_Eval>* _113544_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _113559_fc, jule::Ptr<_1dce54cbc_Data>* _113581_d) {
	if ((!(_1dce57781_isUnsafe((*(_113544_e)).ptr())))) {
		_1dce56d46_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_113559_fc)).get()._field_Args.len() < 1LL)) {
		_1dce56d46_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1dce54cbc_Data> _114513_argd = _1dce73307_evalExpr((*(_113544_e)), (*(_113559_fc)).get()._field_Args[0LL]);;
	if ((_114513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1dce84b54_Prim(_114513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1dce8cd8d_IsStr(_1dce84b54_Prim(_114513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1dce56d46_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1dce827de_Str(_114513_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1dce5563b_IsConst(_114513_argd.ptr()))) || (!(_24a237927_IsStr(_114513_argd.get()._field_Constant.ptr()))))) {
		_1dce56d46_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dce54cbc_Data> _116013_r = _1dce7d675_buildVoidData();;
	jule::Ptr<_1dcd74648_FnIns> _116213_f = _1dce85d42_Fn((*(_113581_d)).get()._field_Kind.ptr());;
	if ((_116213_f.get()._field_Generics.len() > 0LL)) {
		_116013_r.get()._field_Kind=_116213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1dcd6dba3_BackendEmitExprModel> _116713_model = jule::new_ptr<_1dcd6dba3_BackendEmitExprModel>(_1dcd6dba3_BackendEmitExprModel{._field_Code=_24a23557e_ReadStr(_114513_argd.get()._field_Constant.ptr()), });;
	if (((*(_113559_fc)).get()._field_Args.len() > 1LL)) {
		_116713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_113559_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_113559_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1c702a491:;
			if (it != expr_end) {
				jule::Ptr<_1dcd4100a_Expr> _117321_arg = *it;
				{
					_114513_argd=_1dce728cd_eval1((*(_113544_e)), _117321_arg);
					if ((_114513_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _116713_model.get()._field_Exprs; __jule_push_dest.push(_114513_argd.get()._field_Model); };
				}
				_iter_next_1c702a491:;
				++it;
				goto _iter_begin_1c702a491;
			}
			_iter_end_1c702a491:;
		};
	};
	_116013_r.get()._field_Model=jule::Any(_116713_model, &__jule_any_type25);
	return _116013_r;;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd055dbd_builtinCallerStdDebugOut(jule::Ptr<_1dce5683a_Eval>* _118634_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _118649_fc, jule::Ptr<_1dce54cbc_Data>* _118671_d) {
	(*(_118671_d))=_1dd04bd81_builtinCallerOut(_118634_e, _118649_fc, _118671_d);
	if (((*(_118671_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_118671_d)).get()._field_Model.cast_ptr<_1dcd69792_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_118671_d));;
}



inline jule::Ptr<_1dce54cbc_Data> _1dd0562a8_builtinCallerStdDebugOutln(jule::Ptr<_1dce5683a_Eval>* _119536_e, jule::Ptr<_1dcd44e21_FnCallExpr>* _119551_fc, jule::Ptr<_1dce54cbc_Data>* _119573_d) {
	(*(_119573_d))=_1dd04c26b_builtinCallerOutln(_119536_e, _119551_fc, _119573_d);
	if (((*(_119573_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_119573_d)).get()._field_Model.cast_ptr<_1dcd69b7c_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return (*(_119573_d));;
}



inline jule::Bool _20719a1a2_FindModuleFile(jule::Slice<jule::Ptr<_239897053_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c70302ba:;
		if (it != expr_end) {
			jule::Ptr<_239897053_DirEntry> *_1312_d = it;
			{
				if (((!(_2398a70da_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1c70302ba:;
			++it;
			goto _iter_begin_1c70302ba;
		}
		_iter_end_1c70302ba:;
	};
	return false;;
}



inline jule::Str _20719a2d4_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_239897053_DirEntry>> _2617_dirents = ({
				auto except = static__23a994616_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1c70304c9;
				} jule::Slice<jule::Ptr<_239897053_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _20719a1a2_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_23a9924c1_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1c70304c9;
			};
		}
	_iter_next_1c70304c9:;
	}
	_iter_end_1c70304c9:;;
	return jule::Str();;
}



inline jule::Slice<_23aa28854_Log> _20719a4d2_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__2398a5083_Read(_23a991866_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_23aa28854_Log>::make({_23aa28854_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _23a98e5cd_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_23aa28854_Log>::make({_23aa28854_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1de3bc310_FileInfo> _1de4127c8_ParseFile(jule::Ptr<_23ae2becc_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1de3bc310_FileInfo> _2713_finf = jule::new_ptr<_1de3bc310_FileInfo>();;
	({
		__jule_tuple_x_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log __jule_assign_result = _1de412d5b_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log _1de412d5b_parseFileset(jule::Ptr<_23ae2becc_File> _5521_f) {
	__jule_tuple_x_1dcd080d2_Ast__jule_tuple_s_23aa28854_Log __jule_func_result;
	jule::Ptr<_1de4318c4_parser> _5613_p = jule::new_ptr<_1de4318c4_parser>();;
	_1de441263_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1dcd4b9b6_ScopeTree> _1de413785_newScope(void) {
	return jule::new_ptr<_1dcd4b9b6_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1de413a71_isSt(jule::Ptr<_23ae26b42_Token> _499_current, jule::Ptr<_23ae26b42_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(4LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(4LLU));
	return __jule_func_result;;
}



inline jule::Bool _1de413db2_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U64>(21LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_23ae26b42_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(19LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(6LLU)) && _23ae27637_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1de414247_nextStPos(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_23ae26b42_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(2LLU)) {
					_case_begin_1c70b353a:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1c70b51a7:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1de413db2_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1de413a71_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1c70b3d21:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1de413a71_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1c70b3b56:;
						};
						goto _iter_next_1c70b1deb;
					}
				}
				_match_end_1c70b34c4:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1c70b1deb;
			};
			if ((_7213_i > _7033_start)) {
				if (_1de413db2_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_1c70b1deb;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1de413a71_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1de413a71_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1c70b1deb;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1c70b1deb:;
	}
	_iter_end_1c70b1deb:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_23ae26b42_Token__jule_tuple_bool _1de414588_skipSt(jule::I64* _13216_i, jule::Slice<jule::Ptr<_23ae26b42_Token>> _13228_tokens) {
	__jule_tuple_sx_23ae26b42_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1de414247_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_23ae26b42_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_23ae26b42_Token__jule_tuple_bool __jule_assign_result = _1de414588_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1de414885_stmt>> _1de414c2b_splitStmts(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_1de414885_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1de414885_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_23ae26b42_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_23ae26b42_Token__jule_tuple_bool __jule_assign_result = _1de414588_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1de414885_stmt>> &__jule_push_dest = _15513_stmts; __jule_push_dest.push(jule::new_ptr<_1de414885_stmt>(_1de414885_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated})); };
		}
	_iter_next_1c70bcd4c:;
	}
	_iter_end_1c70bcd4c:;;
	return _15513_stmts;;
}



inline jule::Bool _1de42b418_isTypeOp(jule::Str* _89014_kind) {
	return (((*(_89014_kind)).equal("&", 1) || (*(_89014_kind)).equal("&&", 2)) || (*(_89014_kind)).equal("*", 1));;
}



inline jule::Bool _1de42b704_isTypeRange(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _89721_tokens) {
	jule::Bool _89813_op = false;;
	{
		auto expr = _89721_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7252e38:;
		if (it != expr_end) {
			jule::I64 _8999_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _89912_token = *it;
			{
				if ((_89912_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					if (_89912_token.get()._field_Kind.equal("[", 1)) {
						if (_89813_op) {
							return true;;
						};
						jule::I64 _90525_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_23ae26b42_Token>> _90625_lTokens = (*(_89721_tokens)).slice(_8999_i);;
						{
							auto expr = &(_90625_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c72541d1:;
							if (it != expr_end) {
								jule::Ptr<_23ae26b42_Token> _90724_lToken = *it;
								{
									{
										auto &_match_expr{ _90724_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(2LLU)) {
											_case_begin_1c72557ba:;
											{
												{
													auto &_match_expr{ _90724_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1c7256106:;
														{
															(_90525_rangeN)++;
															goto _iter_next_1c72541d1;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1c725617d:;
														{
															(_90525_rangeN)--;
															goto _iter_next_1c72541d1;
														}
													}
													_match_end_1c7255e3b:;
												};
											}
										}
										_match_end_1c7255578:;
									};
									if ((_90525_rangeN == 0LL)) {
										return _1de42b418_isTypeOp(&(_90724_lToken.get()._field_Kind));;
									};
								}
								_iter_next_1c72541d1:;
								++it;
								goto _iter_begin_1c72541d1;
							}
							_iter_end_1c72541d1:;
						};
						return true;;
					};
				};
				if ((!(_1de42b418_isTypeOp(&(_89912_token.get()._field_Kind))))) {
					return false;;
				};
				_89813_op=true;
			}
			_iter_next_1c7252e38:;
			++it;
			_8999_i++;
			goto _iter_begin_1c7252e38;
		}
		_iter_end_1c7252e38:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_23ae26b42_Token>> _1de42b99b_getBlockExpr(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _93522_tokens) {
	jule::I64 _93613_braceN = 0LL;;
	jule::I64 _93713_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c725769b:;
		if (it != expr_end) {
			jule::I64 _9389_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _93812_tok = *it;
			{
				{
					auto &_match_expr{ _93812_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU) || _match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
						_case_begin_1c725838e:;
						{
							(_93713_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(2LLU)) {
						_case_begin_1c7258416:;
						{
							{
								auto &_match_expr{ _93812_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1c72591a3:;
									{
										if (((_93613_braceN > 0LL) || (_93713_skipToNextBraceClose > 0LL))) {
											if ((_93713_skipToNextBraceClose > 0LL)) {
												(_93713_skipToNextBraceClose)--;
											};
											(_93613_braceN)++;
											goto _match_end_1c72592d5;
										};
										return (*(_93522_tokens)).slice(0LL, _9389_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1c7259802:;
									{
										(_93613_braceN)++;
									}
								}
								else {
									_case_begin_1c725934b:;
									{
										(_93613_braceN)--;
									}
								}
								_match_end_1c72592d5:;
							};
						}
					}
					_match_end_1c72582e5:;
				};
			}
			_iter_next_1c725769b:;
			++it;
			_9389_i++;
			goto _iter_begin_1c725769b;
		}
		_iter_end_1c725769b:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token _1de42bd31_splitDelim(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _96620_tokens, jule::U64 _96638_delim) {
	__jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token __jule_func_result;
	jule::I64 _96713_rangeN = 0LL;;
	{
		auto expr = _96620_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7259acc:;
		if (it != expr_end) {
			jule::I64 _9689_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _96812_token = *it;
			{
				{
					auto &_match_expr{ _96812_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(2LLU)) {
						_case_begin_1c725b738:;
						{
							{
								auto &_match_expr{ _96812_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1c725bd98:;
									{
										(_96713_rangeN)++;
										goto _iter_next_1c7259acc;
									}
								}
								else {
									_case_begin_1c725c12e:;
									{
										(_96713_rangeN)--;
									}
								}
								_match_end_1c725be64:;
							};
						}
					}
					else if (_match_expr == _96638_delim) {
						_case_begin_1c725b7b0:;
						{
							if ((_96713_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_23ae26b42_Token>> _98225_l = (*(_96620_tokens)).slice(0LL, _9689_i);;
								jule::Slice<jule::Ptr<_23ae26b42_Token>> _98325_r = (*(_96620_tokens)).slice((_9689_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98225_l;
								__jule_func_result.__jule_result_arg1 = _98325_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1c725b518:;
				};
			}
			_iter_next_1c7259acc:;
			++it;
			_9689_i++;
			goto _iter_begin_1c7259acc;
		}
		_iter_end_1c7259acc:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1de42c0c8_findLowestPrecOp(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _99322_tokens) {
	jule::U8 _99813_prec = 255LLU;;
	jule::I64 _99913_precPos = -1LL;;
	jule::I64 _100113_braceN = 0LL;;
	jule::Bool _100213_skipToNextBraceOpen = false;;
	{
		auto expr = _99322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c725eb37:;
		if (it != expr_end) {
			jule::I64 _10039_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> *_100312_token = it;
			{
				{
					
					if (((*(_100312_token)).get()._field_Id == static_cast<jule::U64>(2LLU))) {
						_case_begin_1c72606e8:;
						{
							{
								auto &_match_expr{ (*(_100312_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1c7261298:;
									{
										_100213_skipToNextBraceOpen=false;
										goto _case_begin_1c7261991;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1c7261991:;
									{
										(_100113_braceN)++;
									}
								}
								else {
									_case_begin_1c726152e:;
									{
										(_100113_braceN)--;
									}
								}
								_match_end_1c7261364:;
							};
							goto _iter_next_1c725eb37;
						}
					}
					else if (_100213_skipToNextBraceOpen) {
						_case_begin_1c7260770:;
						{
							goto _iter_next_1c725eb37;
						}
					}
					else if (((*(_100312_token)).get()._field_Id == static_cast<jule::U64>(15LLU))) {
						_case_begin_1c72607e7:;
						{
							_100213_skipToNextBraceOpen=true;
							goto _iter_next_1c725eb37;
						}
					}
					else if ((_10039_i == 0LL)) {
						_case_begin_1c726086e:;
						{
							goto _iter_next_1c725eb37;
						}
					}
					else if (((*(_100312_token)).get()._field_Id != static_cast<jule::U64>(6LLU))) {
						_case_begin_1c72608e6:;
						{
							goto _iter_next_1c725eb37;
						}
					}
					else if ((_100113_braceN > 0LL)) {
						_case_begin_1c726096d:;
						{
							goto _iter_next_1c725eb37;
						}
					}
					_match_end_1c7260594:;
				};
				jule::Ptr<_23ae26b42_Token> _103013_left = (*(_99322_tokens))[(_10039_i - 1LL)];;
				if (((_103013_left.get()._field_Id == static_cast<jule::U64>(6LLU)) || (_103013_left.get()._field_Id == static_cast<jule::U64>(10LLU)))) {
					goto _iter_next_1c725eb37;
				};
				if ((((_10039_i > 1LL) && (_103013_left.get()._field_Id == static_cast<jule::U64>(2LLU))) && _103013_left.get()._field_Kind.equal("]", 1))) {
					jule::Ptr<_23ae26b42_Token> _103817_lleft = (*(_99322_tokens))[(_10039_i - 2LL)];;
					if (((_103817_lleft.get()._field_Id == static_cast<jule::U64>(2LLU)) && _103817_lleft.get()._field_Kind.equal("[", 1))) {
						if (((*(_100312_token)).get()._field_Kind.equal("&", 1) || (*(_100312_token)).get()._field_Kind.equal("*", 1))) {
							goto _iter_next_1c725eb37;
						};
					};
				};
				jule::U8 _104713_p = _23ae26ea5_Prec((*(_100312_token)).ptr());;
				if (((_104713_p != 0LLU) && (_104713_p <= _99813_prec))) {
					_99813_prec=_104713_p;
					_99913_precPos=_10039_i;
				};
			}
			_iter_next_1c725eb37:;
			++it;
			_10039_i++;
			goto _iter_begin_1c725eb37;
		}
		_iter_end_1c725eb37:;
	};
	return _99913_precPos;;
}



inline jule::Ptr<_1dcd42b00_IdentExpr> _1de42c370_buildIdentExpr(jule::Ptr<_23ae26b42_Token>* _105624_token) {
	return jule::new_ptr<_1dcd42b00_IdentExpr>(_1dcd42b00_IdentExpr{._field_Token=(*(_105624_token)), ._field_Ident=(*(_105624_token)).get()._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_23ae26b42_Token__jule_tuple_int _1de42c617_getRangeExprTokens(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _106428_tokens) {
	__jule_tuple_sx_23ae26b42_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106513_rangeN = 0LL;;
	jule::I64 _106613_i = ((*(_106428_tokens)).len() - 1LL);;
	for (; (_106613_i >= 0LL); (_106613_i)--) {
		{
			jule::Ptr<_23ae26b42_Token> _106813_tok = (*(_106428_tokens))[_106613_i];;
			if ((_106813_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _106813_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1c72683b0:;
						{
							(_106513_rangeN)++;
						}
					}
					else {
						_case_begin_1c7268c62:;
						{
							(_106513_rangeN)--;
						}
					}
					_match_end_1c7268a53:;
				};
			};
			if ((_106513_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106428_tokens)).slice(0LL, _106613_i);
				__jule_func_result.__jule_result_arg1 = _106513_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1c7267986:;
	}
	_iter_end_1c7267986:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106513_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1de42d371_checkAssignTokens(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_23ae2b1da_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72eda0b:;
		if (it != expr_end) {
			jule::Ptr<_23ae26b42_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c72ee5ab:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1c72ee886:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1c72ee677:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1c72eda0b;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(6LLU)) && _23ae2b729_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1c72eda0b:;
			++it;
			goto _iter_begin_1c72eda0b;
		}
		_iter_end_1c72eda0b:;
	};
	return false;;
}



inline _23aa28854_Log _1de42e592_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_23ae2becc_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _23aa28854_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_23aa28c94_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_23ae26b42_Token>> _1de42ea6a_range(jule::I64* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_23ae26b42_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_23ae26b42_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_23ae26b42_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1c730524e:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1c73052c6:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1c730502e:;
				};
			};
		}
	_iter_next_1c730425e:;
	}
	_iter_end_1c730425e:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token _1de42ed12_rangeLast(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _10319_tokens) {
	__jule_tuple_sx_23ae26b42_Token__jule_tuple_sx_23ae26b42_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_23ae26b42_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1c73082da:;
						{
							(_10913_braceN)++;
							goto _iter_next_1c7306096;
						}
					}
					else {
						_case_begin_1c7308bc0:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1c73089b1:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1c7306096:;
	}
	_iter_end_1c7306096:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log _1de4301ec_partsKind(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _13713_parts = nullptr;;
	jule::Slice<_23aa28854_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c730bad5:;
		if (it != expr_end) {
			jule::I64 _1429_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c730c9a4:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1c730bad5;
							}
						}
						else {
							_case_begin_1c730cc7e:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1c730ca70:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1c730bad5;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_23aa28854_Log _16121_err = _1de42e592_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_23aa28854_Log> &__jule_push_dest = _13813_errors; __jule_push_dest.push(_16121_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> &__jule_push_dest = _13713_parts; __jule_push_dest.push((*(_13219_tokens)).slice(_14113_last, _1429_i)); };
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1c730bad5:;
			++it;
			_1429_i++;
			goto _iter_begin_1c730bad5;
		}
		_iter_end_1c730bad5:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> &__jule_push_dest = _13713_parts; __jule_push_dest.push((*(_13219_tokens)).slice(_14113_last)); };
	} else if ((!(_13254_expr_must))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> &__jule_push_dest = _13713_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_23ae26b42_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log _1de4305d7_parts(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_23ae26b42_Token__jule_tuple_s_23aa28854_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> _18913_parts = nullptr;;
	jule::Slice<_23aa28854_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7312d50:;
		if (it != expr_end) {
			jule::I64 _1949_i = it - expr->begin();
			jule::Ptr<_23ae26b42_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1c7313c1e:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1c7312d50;
							}
						}
						else {
							_case_begin_1c7313ee9:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1c7313cda:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1c7312d50;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_23aa28854_Log _21321_err = _1de42e592_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_23aa28854_Log> &__jule_push_dest = _19013_errors; __jule_push_dest.push(_21321_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> &__jule_push_dest = _18913_parts; __jule_push_dest.push((*(_18415_tokens)).slice(_19313_last, _1949_i)); };
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1c7312d50:;
			++it;
			_1949_i++;
			goto _iter_begin_1c7312d50;
		}
		_iter_end_1c7312d50:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> &__jule_push_dest = _18913_parts; __jule_push_dest.push((*(_18415_tokens)).slice(_19313_last)); };
	} else if ((!(_18446_expr_must))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_23ae26b42_Token>>> &__jule_push_dest = _18913_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_23ae26b42_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1de43087e_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1c73169ad:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1c731754c:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1c73175b3:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1c7314e0c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c7314da7:;
	};
}



inline _23aa28854_Log _1de430c69_compilerErr(jule::Ptr<_23ae26b42_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _23aa28854_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_23aa28c94_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_23ae2cde0_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _1de431198_pushSuggestion(_23aa28854_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_23aa28c94_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _1de431440_tokstoa(jule::Slice<jule::Ptr<_23ae26b42_Token>>* _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c731a2ca:;
		if (it != expr_end) {
			jule::Ptr<_23ae26b42_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_1c731a2ca:;
			++it;
			goto _iter_begin_1c731a2ca;
		}
		_iter_end_1c731a2ca:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c731a8a2:;
		if (it != expr_end) {
			jule::Ptr<_23ae26b42_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_1c731a8a2:;
			++it;
			goto _iter_begin_1c731a8a2;
		}
		_iter_end_1c731a8a2:;
	};
	return _26313_s;;
}



inline jule::Bool _1de441582_isPub(jule::Str* _203711_ident) {
	jule::I32 _203810_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _23a94ec31_DecodeRuneStr((*(_203711_ident)));
		_203810_r = __jule_assign_result.__jule_result_arg0;
	});
	return _23a86c764_IsUpper(_203810_r);;
}



inline jule::Ptr<_1dcd3bd80_TypeDecl> _1de441e23_buildVoidType(void) {
	return jule::new_ptr<_1dcd3bd80_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _20716de56_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1c71e6cbc:;
			{
				__jule_func_result.__jule_result_arg0=_23aa2bb65_IsWindows(_23ab0c9e3_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1c71e66b2:;
			{
				__jule_func_result.__jule_result_arg0=_23aa2be1d_IsDarwin(_23ab0c9e3_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1c71e6728:;
			{
				__jule_func_result.__jule_result_arg0=_23aa2c1b5_IsLinux(_23ab0c9e3_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1c71e678e:;
			{
				__jule_func_result.__jule_result_arg0=_23aa2ccba_IsUnix(_23ab0c9e3_Os);
			}
		}
		else {
			_case_begin_1c71e60b8:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c71e63c6:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _207187bb7_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1c71e88d4:;
			{
				__jule_func_result.__jule_result_arg0=_23aa2c4d4_IsI386(_23ab0ccac_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1c71e894a:;
			{
				__jule_func_result.__jule_result_arg0=_23aa2c77b_IsAmd64(_23ab0ccac_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1c71e89b1:;
			{
				__jule_func_result.__jule_result_arg0=_23aa2ca23_IsArm64(_23ab0ccac_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1c71e8a27:;
			{
				__jule_func_result.__jule_result_arg0=_23aa2d3d6_Is64Bit(_23ab0ccac_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1c71e8a8d:;
			{
				__jule_func_result.__jule_result_arg0=_23aa2d13e_Is32Bit(_23ab0ccac_Arch);
			}
		}
		else {
			_case_begin_1c71e82eb:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c71e8609:;
	};
	return __jule_func_result;;
}



inline jule::Bool _207187d93_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_23a99214c_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _23a991b0d_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _23a989ead_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20716de56_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _207187bb7_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_23a989ead_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20716de56_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _207187bb7_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _207187bb7_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20716de56_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _20716de56_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _207189081_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_23ab0c9e3_Os); };
	if (_23aa2ccba_IsUnix(_23ab0c9e3_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str("unix", 4)); };
	};
}



inline void _2071892d4_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_23ab0ccac_Arch); };
	if (_23aa2d3d6_Is64Bit(_23ab0ccac_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x64", 3)); };
	};
	if (_23aa2d13e_Is32Bit(_23ab0ccac_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x32", 3)); };
	};
}



inline void _20718958c_initVars(jule::Slice<jule::Str>* _5518_vars, _207188c73_CompileInfo* _5532_info) {
	_207189081_setOsVars(_5518_vars);
	_2071892d4_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c72045d2:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c7204648:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("gcc", 3)); };
			}
		}
		_match_end_1c720456b:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c7204d52:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c7204e73:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c7204ed9:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp20", 5)); };
			}
		}
		_match_end_1c7204cec:;
	};
}



inline jule::Slice<jule::U8> _1de445da0_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__2398a5083_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_23ab0b959_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _23aa28854_Log _1de446158_flatCompilerErr(jule::Str _4120_text) {
	return _23aa28854_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1de44a569_pushPasses(jule::Ptr<_1dcdd031e_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73bea77:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c73c04e5:;
					if (it != expr_end) {
						_1dcd788d3_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1c73c04e5;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c73c0e0d:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1c73c04e5;
										};
									}
									_iter_next_1c73c0e0d:;
									++it;
									goto _iter_begin_1c73c0e0d;
								}
								_iter_end_1c73c0e0d:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1c73c04e5:;
						++it;
						goto _iter_begin_1c73c04e5;
					}
					_iter_end_1c73c04e5:;
				};
			}
			_iter_next_1c73bea77:;
			++it;
			goto _iter_begin_1c73bea77;
		}
		_iter_end_1c73bea77:;
	};
}



inline jule::Slice<jule::Str> _1de44a8ee_getAllUniquePasses(jule::Ptr<_1dcdd031e_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1dcdcc6d4_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1de44a569_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c73c2904:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_Binded))) {
					_1de44a569_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1c73c2904:;
			++it;
			goto _iter_begin_1c73c2904;
		}
		_iter_end_1c73c2904:;
	};
	return _12913_passes;;
}



inline _207188c73_CompileInfo _1de44aaec_buildCompileInfo(void) {
	_207188c73_CompileInfo _14213_info = _207188c73_CompileInfo{._field_Prod=_2388e9cbb_Production, ._field_Test=_2388e935e_Test, };;
	{
		auto &_match_expr{ _2388e75d2_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1c73c3ad1:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1c73c3b58:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1c73c3a6a:;
	};
	{
		auto &_match_expr{ _2388e8a78_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1c73c277d:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1c73c3eee:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1c73c4065:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1c73c440b:;
	};
	return _14213_info;;
}



inline void _1de581826_EliminateDefines(jule::Ptr<_1de448d4d_IR>* _29026_ir) {
	jule::Ptr<_1de54c36e_ObjectDeadCode> _29113_ocd = static__1de54c803_new(_29026_ir);;
	_1de581518_elimanate(_29113_ocd);
}



inline jule::Ptr<_1dcd09369_Directive> _1de581bab_findDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c740d06b:;
		if (it != expr_end) {
			jule::Ptr<_1dcd09369_Directive> _29717_dr = *it;
			{
				if ((_29717_dr.get()._field_Tag.get()._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1c740d06b:;
			++it;
			goto _iter_begin_1c740d06b;
		}
		_iter_end_1c740d06b:;
	};
	return nullptr;;
}



inline jule::Bool _1de581eec_hasDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1de581bab_findDirective(_30618_directives, _30649_tag) != nullptr);;
}



inline jule::Bool _1de582382_isTraitMethod(jule::Ptr<_1dcd5e457_StructIns>* _31123_owner, jule::Ptr<_1dcd74648_FnIns>* _31143_f) {
	{
		auto expr = &((*(_31123_owner)).get()._field_Decl.get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c740e6ee:;
		if (it != expr_end) {
			jule::Ptr<_1dcd83bb8_Trait> _31217_t = *it;
			{
				if ((_1dcd84a65_FindMethod(_31217_t.ptr(), (*(_31143_f)).get()._field_Decl.get()._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1c740e6ee:;
			++it;
			goto _iter_begin_1c740e6ee;
		}
		_iter_end_1c740e6ee:;
	};
	return false;;
}



inline void _1de585e8a_eliminateDeadCodeOfScope(jule::Ptr<_1dcdadc6a_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1dcdb14a9_Label>> _2429_labels = jule::Slice<jule::Ptr<_1dcdb14a9_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1dcdb1795_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1dcdb1795_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1de583086_scopeDeadCode> _24413_sdc = jule::new_ptr<_1de583086_scopeDeadCode>(_1de583086_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1dcdb14a9_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1dcdb1795_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1de585b5a_optimizeStmts(_24413_sdc);
	};
}



inline void _1de586221_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1dcd71997_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c744c5d8:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c744cb8d:;
					if (it != expr_end) {
						jule::Ptr<_1dcd74648_FnIns> _25621_ins = *it;
						{
							_1de585e8a_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1c744cb8d:;
						++it;
						goto _iter_begin_1c744cb8d;
					}
					_iter_end_1c744cb8d:;
				};
			}
			_iter_next_1c744c5d8:;
			++it;
			goto _iter_begin_1c744c5d8;
		}
		_iter_end_1c744c5d8:;
	};
}



inline void _1de586463_eliminateFunctionsScopePackage(jule::Ptr<_1dcdd031e_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c744d122:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _26317_f = *it;
			{
				_1de586221_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1c744d122:;
			++it;
			goto _iter_begin_1c744d122;
		}
		_iter_end_1c744d122:;
	};
}



inline void _1de58670a_eliminateScopePackage(jule::Ptr<_1dcdd031e_Package>* _26831_pkg) {
	_1de586463_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1de586919_EliminateScopes(jule::Ptr<_1de448d4d_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1dcdcc6d4_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_Binded))) {
				_1de58670a_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1c744e585:;
	}
	_iter_end_1c744e585:;;
	_1de58670a_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _1dd05d546_isStdPackage(jule::Str _44417_f, jule::Str _44425_p) {
	return _23a986ae2_HasPrefix(_44417_f, _23a991866_Join(jule::Slice<jule::Str>::make({_23ab0be43_PathStdlib,_44425_p})));;
}



inline jule::Bool _1dd05d854_isConstantValidConditionalCase(jule::Ptr<_1dcdae166_If>* _44836_i) {
	{
		auto &_match_expr{ (*(_44836_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c7556516:;
			{
				jule::Ptr<_24a233549_Const> _45113_c = (*(_44836_i)).get()._field_Expr.cast_ptr<_24a233549_Const>(&__jule_any_type19);;
				return (_24a2376b3_IsBool(_45113_c.ptr()) && _24a23531a_ReadBool(_45113_c.ptr()));;
			}
		}
		_match_end_1c75563a1:;
	};
	return false;;
}



inline jule::Bool _1dd05db0c_isUnreachableExpr(jule::Any* _45723_expr) {
	{
		auto &_match_expr{ (*(_45723_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c7556e2e:;
			{
				jule::Ptr<_24a233549_Const> _46013_c = (*(_45723_expr)).cast_ptr<_24a233549_Const>(&__jule_any_type19);;
				return (_24a2376b3_IsBool(_46013_c.ptr()) && (!(_24a23531a_ReadBool(_46013_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c7556ea6:;
			{
				jule::Ptr<_1dcd63824_BinopExprModel> _46313_m = (*(_45723_expr)).cast_ptr<_1dcd63824_BinopExprModel>(&__jule_any_type114);;
				if (_46313_m.get()._field_Op.get()._field_Kind.equal("&&", 2)) {
					return (_1dd05db0c_isUnreachableExpr(&(_46313_m.get()._field_Left.get()._field_Model)) || _1dd05db0c_isUnreachableExpr(&(_46313_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1c75565d2:;
	};
	return false;;
}



inline jule::Bool _1dd05de4d_isConstantValidMatchCase(jule::Ptr<_1dcdb35cc_Case>* _47230_case) {
	{
		auto expr = &((*(_47230_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7558260:;
		if (it != expr_end) {
			jule::Ptr<_1dce54cbc_Data> *_47312_expr = it;
			{
				if (((_1dce5563b_IsConst((*(_47312_expr)).ptr()) && _24a2376b3_IsBool((*(_47312_expr)).get()._field_Constant.ptr())) && _24a23531a_ReadBool((*(_47312_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1c7558260:;
			++it;
			goto _iter_begin_1c7558260;
		}
		_iter_end_1c7558260:;
	};
	return false;;
}



inline jule::Bool _1dd05e1e5_isUnreachableConditionalCase(jule::Ptr<_1dcdae166_If>* _48134_i) {
	return _1dd05db0c_isUnreachableExpr(&((*(_48134_i)).get()._field_Expr));;
}



inline jule::Bool _1dd05e49d_isUnreachableMatchCase(jule::Ptr<_1dcdb35cc_Case>* _48528_case) {
	{
		auto expr = &((*(_48528_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c755bb15:;
		if (it != expr_end) {
			jule::Ptr<_1dce54cbc_Data> *_48612_expr = it;
			{
				if ((!(_1dd05db0c_isUnreachableExpr(&((*(_48612_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1c755bb15:;
			++it;
			goto _iter_begin_1c755bb15;
		}
		_iter_end_1c755bb15:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1dd0671ed_checkForBitShiftOpt(jule::Ptr<_1dcd6335c_OperandExprModel>* _47825_l, jule::Ptr<_1dcd6335c_OperandExprModel>* _47848_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_24a232a43_IsInt(_1dce827de_Str((*(_47825_l)).get()._field_Kind.ptr())))) || (!(_24a232a43_IsInt(_1dce827de_Str((*(_47848_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_47848_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c75967dc:;
			{
				goto _match_end_1c7597216;
			}
		}
		else {
			_case_begin_1c7597359:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1c7597216:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_24a235cbb_AsU64((*(_47848_r)).get()._field_Model.cast_ptr<_24a233549_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4929_j = _24a1d4561_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4939_z = static_cast<jule::U64>(_4929_j);;
	if ((static_cast<jule::F64>(_4939_z) != _4929_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4939_z;
	return __jule_func_result;;
}



inline jule::Bool _1dd067583_areSameLvalueExprModel(jule::Any* _50128_l, jule::Any* _50143_r) {
	{
		auto &_match_expr{ (*(_50128_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c759a390:;
			{
				return ((*(_50143_r)) == (*(_50128_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c759a417:;
			{
				{
					auto &_match_expr{ (*(_50143_r)) };
					
					if (_match_expr.type == &__jule_any_type71) {
						_case_begin_1c759ac97:;
						{
							goto _match_end_1c759ad30;
						}
					}
					else {
						_case_begin_1c759ad85:;
						{
							return false;;
						}
					}
					_match_end_1c759ad30:;
				};
				jule::Ptr<_1dcd68010_StructSubIdentExprModel> _51413_lsi = (*(_50128_l)).cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71);;
				jule::Ptr<_1dcd68010_StructSubIdentExprModel> _51513_rsi = (*(_50143_r)).cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_51413_lsi.get()._field_Field != _51513_rsi.get()._field_Field)) {
					return false;;
				};
				return _1dd067583_areSameLvalueExprModel(&(_51413_lsi.get()._field_Expr.get()._field_Model), &(_51513_rsi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c759a4b1:;
			{
				{
					auto &_match_expr{ (*(_50143_r)) };
					
					if (_match_expr.type == &__jule_any_type74) {
						_case_begin_1c759cd65:;
						{
							jule::Ptr<_1dcd63bcb_UnaryExprModel> _52717_ul = (*(_50128_l)).cast_ptr<_1dcd63bcb_UnaryExprModel>(&__jule_any_type74);;
							jule::Ptr<_1dcd63bcb_UnaryExprModel> _52817_ur = (*(_50143_r)).cast_ptr<_1dcd63bcb_UnaryExprModel>(&__jule_any_type74);;
							if (((_52717_ul.get()._field_Op.get()._field_Id != _52817_ur.get()._field_Op.get()._field_Id) || (_52717_ul.get()._field_Op.get()._field_Kind != _52817_ur.get()._field_Op.get()._field_Kind))) {
								return false;;
							};
							return _1dd067583_areSameLvalueExprModel(&(_52717_ul.get()._field_Expr.get()._field_Model), &(_52817_ur.get()._field_Expr.get()._field_Model));;
						}
					}
					_match_end_1c759c606:;
				};
			}
		}
		_match_end_1c759a26e:;
	};
	return false;;
}



inline void _1dd067c8c_doInternalNosafeStobs(_1dd06026d_exprOptimizer* _727_op, _1de44cdb8_stdCacheData* _747_data, jule::Ptr<_1dcd6568e_FnCallExprModel>* _772_m) {
	jule::Any _813_model = jule::Any(jule::new_ptr<_1dd0586ea_InlineStdInternalNosafeStobs>(_1dd0586ea_InlineStdInternalNosafeStobs{._field_Str=(*(_772_m)).get()._field_Args[0LL]}), &__jule_any_type131);;
	{
		(*((*(_727_op))._field_model))=(*(((jule::Any*)((&(_813_model))))));
	};
}



inline void _1de44d54a_buildCache(jule::Ptr<_1de448d4d_IR>* _2720_ir) {
	_1de44d78c_buildStdInternalNosafeCache(_2720_ir);
}



inline void _1de44d78c_buildStdInternalNosafeCache(jule::Ptr<_1de448d4d_IR>* _3137_ir) {
	jule::Ptr<_1dcdd031e_Package> _3213_p = _1de44e2c6_getPackage(_3137_ir, &(_1de44c9bc_stdPackageInternalNosafe));;
	if ((_3213_p == nullptr)) {
		return;;
	};
	_1de44db00_pushCache(&(_3213_p), jule::Str("Stobs", 5), jule::Fn<void(_1dd06026d_exprOptimizer*,_1de44cdb8_stdCacheData*,jule::Ptr<_1dcd6568e_FnCallExprModel>*)>(_1dd067c8c_doInternalNosafeStobs));
}



inline void _1de44db00_pushCache(jule::Ptr<_1dcdd031e_Package>* _4119_p, jule::Str _4132_ident, jule::Fn<void(_1dd06026d_exprOptimizer*,_1de44cdb8_stdCacheData*,jule::Ptr<_1dcd6568e_FnCallExprModel>*)> _4144_do) {
	jule::Ptr<_1dcd74648_FnIns> _4213_f = _1de44de85_getFunc(_4119_p, &(_4132_ident));;
	_1de44d2e7_stdCache[static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_4213_f))]=_1de44cdb8_stdCacheData{._field_f=_4213_f, ._field_do=_4144_do};
}



inline jule::Ptr<_1dcd74648_FnIns> _1de44de85_getFunc(jule::Ptr<_1dcdd031e_Package>* _5017_p, jule::Str* _5031_ident) {
	;
	jule::Ptr<_1dcd71997_Fn> _5213_f = _1dcdd1760_FindFn((*(_5017_p)).ptr(), (*(_5031_ident)), false);;
	if ((_5213_f == nullptr)) {
		return nullptr;;
	};
	return _5213_f.get()._field_Instances[0LL];;
}



inline jule::Ptr<_1dcdd031e_Package> _1de44e2c6_getPackage(jule::Ptr<_1de448d4d_IR>* _5920_ir, jule::Str* _5930_path) {
	{
		auto expr = &((*(_5920_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c75e5e13:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> _6017_u = *it;
			{
				if ((_6017_u.get()._field_Std && (_6017_u.get()._field_LinkPath == (*(_5930_path))))) {
					return _6017_u.get()._field_Package;;
				};
			}
			_iter_next_1c75e5e13:;
			++it;
			goto _iter_begin_1c75e5e13;
		}
		_iter_end_1c75e5e13:;
	};
	return nullptr;;
}



inline void _1de451916_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _339_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	jule::Bool _349_l2 = (_3217_level >= static_cast<jule::I64>(2LL));;
	_1de44ea9b_Copy=_339_l1;
	_1de44eda9_Deadcode=_339_l1;
	_1de450173_Append=_339_l1;
	_1de450481_Math=_339_l1;
	_1de45074a_Access=_339_l1;
	_1de450a14_Inline=_339_l1;
	_1de450ccd_Ptr=_339_l1;
	_1de4511a7_Cond=_339_l1;
	_1de451471_Str=_339_l1;
	_1de45173a_StdInternalNosafe=_349_l2;
}



inline void _1de590b87_detectEnabled(void) {
	_1de58d899_exprEnabled=((((_1de450ccd_Ptr || _1de450481_Math) || _1de45074a_Access) || _1de4511a7_Cond) || _1de45173a_StdInternalNosafe);
	_1de58dab9_scopeEnabled=(((_1de4511a7_Cond || _1de450173_Append) || _1de44ea9b_Copy) || _1de451471_Str);
	_1de58dd2d_stdEnabled=_1de45173a_StdInternalNosafe;
}



inline void _1de5b3ec9_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_23ab0b959_Exit(1LL);
}



inline jule::U64 _1c4484a96_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _23b439396_isCopyOptimizable(jule::Ptr<_1dce54cbc_Data>* _81623_expr) {
	if ((!((*(_81623_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81623_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1d439b2b6:;
			{
				return false;;
			}
		}
		_match_end_1d439b261:;
	};
	return true;;
}



inline jule::Bool _23b43972b_isIterCopyOptimizable(jule::Ptr<_1dce54cbc_Data>* _82727_expr, jule::Ptr<_1dce05cb2_Var>* _82741_v) {
	if (((!((*(_82727_expr)).get()._field_Lvalue)) && (!(_1dce83bca_Mutable((*(_82727_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82741_v)).get()._field_Mutable)) && (!((*(_82727_expr)).get()._field_Mutable)));;
}



inline jule::Str _23b44954e_decomposeCommonEsq(jule::U8 _154723_b) {
	{
		auto &_match_expr{ _154723_b };
		
		if (_match_expr == '\\') {
			_case_begin_1c7465205:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c745e056:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c74650c3:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1c7464bb6:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1c7464c2c:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1c7464c93:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1c7464d09:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1c746526b:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1c74652d2:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1c7465348:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1c7464ab7:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c7464985:;
	};
}



inline jule::Str _23b44983a_sbtoa(jule::U8 _157410_b) {
	if ((_157410_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_157410_b < 128LLU)) {
		jule::Str _157913_seq = _23b44954e_decomposeCommonEsq(_157410_b);;
		if ((!(_157913_seq.empty()))) {
			return _157913_seq;;
		};
		if (((32LL <= _157410_b) && (_157410_b <= 126LLU))) {
			return jule::Str::from_byte(_157410_b);;
		};
	};
	jule::Str _15879_seq = _24a22354a_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_157410_b)), 8LL);;
	if ((_15879_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15879_seq);;
	};
	return (jule::Str("\\", 1) + _15879_seq);;
}



inline jule::Str _23b449ad2_cstrBytes(jule::Slice<jule::U8> _159414_bytes) {
	jule::Str _159513_lit = jule::Str::alloc(0LL, _159414_bytes.len());;
	{
		auto expr = &(_159414_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7469ea7:;
		if (it != expr_end) {
			jule::U8 *_159612_b = it;
			{
				_159513_lit+=_23b44983a_sbtoa((*(_159612_b)));
			}
			_iter_next_1c7469ea7:;
			++it;
			goto _iter_begin_1c7469ea7;
		}
		_iter_end_1c7469ea7:;
	};
	return _159513_lit;;
}



inline jule::Str _23b449e01_cstrLit(jule::Slice<jule::U8> _160212_bytes) {
	return ((jule::Str("\"", 1) + _23b449ad2_cstrBytes(_160212_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _23b44a20e_ftoa(jule::F64 _16069_f, jule::I64 _160617_bitsize) {
	if ((_160617_bitsize != 32LL)) {
		if ((_16069_f == static_cast<jule::F64>(static_cast<jule::I64>(_16069_f)))) {
			return _23b44a4a6_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_16069_f)));;
		};
		if ((_16069_f == static_cast<jule::F64>(static_cast<jule::U64>(_16069_f)))) {
			return _23b44a74d_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_16069_f)));;
		};
	};
	jule::Str _161513_m = _24a20d117_FmtFloat(_16069_f, 'f', -1LL, _160617_bitsize);;
	if ((!(_23a98b83e_Contains(_161513_m, jule::Str(".", 1))))) {
		(_161513_m).append(".0", 2);
	};
	return _161513_m;;
}



inline jule::Str _23b44a4a6_itoa(jule::I64 _16229_x) {
	{
		
		if ((_16229_x == jule::MAX_I64)) {
			_case_begin_1c746d42d:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_16229_x == jule::MIN_I64)) {
			_case_begin_1c746d50a:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1c746d31d:;
	};
	jule::Str _16309_fmt = _24a2238d0_FmtInt(_16229_x, 10LL);;
	if (_23aa2d3d6_Is64Bit(jule::Str("amd64", 5))) {
		return (_16309_fmt + jule::Str("LL", 2));;
	};
	return (_16309_fmt + jule::Str("L", 1));;
}



inline jule::Str _23b44a74d_utoa(jule::U64 _16379_x) {
	{
		
		if ((_16379_x == jule::MAX_U64)) {
			_case_begin_1c746ed03:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1c746e6c6:;
	};
	jule::Str _16439_fmt = _24a22354a_FmtUint(_16379_x, 10LL);;
	if (_23aa2d3d6_Is64Bit(jule::Str("amd64", 5))) {
		return (_16439_fmt + jule::Str("LLU", 3));;
	};
	return (_16439_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _23b44ab05_isForwarded(jule::Ptr<_1dcdadc6a_Scope>* _165017_s) {
	jule::Any _16519_last = (*(_165017_s)).get()._field_Stmts[((*(_165017_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16519_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c7470b17:;
			{
				{
					auto &_match_expr{ _16519_last.cast_ptr<_1dce54cbc_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1c7471d7c:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c74727a6:;
						{
							return false;;
						}
					}
					_match_end_1c74724dc:;
				};
			}
		}
		else {
			_case_begin_1c7471b07:;
			{
				return true;;
			}
		}
		_match_end_1c7471a2a:;
	};
}



inline jule::Bool _23b44adbe_isBuiltinCallHasDebuginf(jule::Ptr<_1dcd6568e_FnCallExprModel>* _166530_m) {
	if ((!(_1dcd759ce_IsBuiltin((*(_166530_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_166530_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1c74729e8:;
			{
				jule::Ptr<_1dcd690bb_CommonSubIdentExprModel> _167113_csie = (*(_166530_m)).get()._field_Expr.cast_ptr<_1dcd690bb_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _167113_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_1c7473422:;
			{
				return false;;
			}
		}
		_match_end_1c74731d0:;
	};
}



inline jule::Bool _23b44b100_isExprComesFromBind(jule::Ptr<_1dce54cbc_Data>* _167825_d) {
	{
		auto &_match_expr{ (*(_167825_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c7473884:;
			{
				return (*(_167825_d)).get()._field_Model.cast_ptr<_1dce05cb2_Var>(&__jule_any_type8).get()._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c7474a72:;
			{
				return (*(_167825_d)).get()._field_Model.cast_ptr<_1dcd68010_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_Binded;;
			}
		}
		else {
			_case_begin_1c7473686:;
			{
				return false;;
			}
		}
		_match_end_1c7473ee4:;
	};
}



inline jule::Bool _23b44b397_isAny(jule::Ptr<_1dce82437_TypeKind>* _169015_t) {
	if ((_1dce85605_TypeEnum((*(_169015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1dce89b8c_Prim> _16949_prim = _1dce84b54_Prim((*(_169015_t)).ptr());;
	return ((_16949_prim != nullptr) && _1dce8d102_IsAny(_16949_prim.ptr()));;
}



inline void _1c4498527_iterFiles(jule::Ptr<_1dcdd031e_Package>* _138519_pkg, jule::Fn<void(jule::Ptr<_1dce502b2_SymbolTable>*)> _138534_f) {
	{
		auto expr = &((*(_138519_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6dbeb1b:;
		if (it != expr_end) {
			jule::Ptr<_1dce502b2_SymbolTable> _138617_file = *it;
			{
				_138534_f(&(_138617_file));
			}
			_iter_next_1c6dbeb1b:;
			++it;
			goto _iter_begin_1c6dbeb1b;
		}
		_iter_end_1c6dbeb1b:;
	};
}



inline jule::Str _1c4498813_concatAllParts(jule::Slice<jule::Ptr<_23ae26b42_Token>> _139219_parts) {
	jule::I64 _139313_n = 0LL;;
	{
		auto expr = &(_139219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6dc0c0a:;
		if (it != expr_end) {
			jule::Ptr<_23ae26b42_Token> *_139412_part = it;
			{
				_139313_n+=(*(_139412_part)).get()._field_Kind.len();
			}
			_iter_next_1c6dc0c0a:;
			++it;
			goto _iter_begin_1c6dc0c0a;
		}
		_iter_end_1c6dc0c0a:;
	};
	if ((_139313_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _140013_s = jule::Str::alloc(0LL, _139313_n);;
	{
		auto expr = &(_139219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6dc05ab:;
		if (it != expr_end) {
			jule::Ptr<_23ae26b42_Token> *_140112_p = it;
			{
				_140013_s+=(*(_140112_p)).get()._field_Kind;
			}
			_iter_next_1c6dc05ab:;
			++it;
			goto _iter_begin_1c6dc05ab;
		}
		_iter_end_1c6dc05ab:;
	};
	return _140013_s;;
}



inline jule::Bool _1c4498b54_containsTraitMethod(jule::Ptr<_1dcd83bb8_Trait>* _140829_t, jule::Str* _140841_ident) {
	{
		auto expr = &((*(_140829_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6dc2657:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _140912_m = *it;
			{
				if ((_140912_m.get()._field_Ident == (*(_140841_ident)))) {
					return true;;
				};
			}
			_iter_next_1c6dc2657:;
			++it;
			goto _iter_begin_1c6dc2657;
		}
		_iter_end_1c6dc2657:;
	};
	return false;;
}



inline void _1c4498e51_pushMethodsFromInherit(jule::Ptr<_1dcd83bb8_Trait>* _142032_dest, jule::Ptr<_1dcd83bb8_Trait>* _142051_src) {
	_1c449922b_pushMethodsFromInherits(_142032_dest, _142051_src);
	{
		auto expr = &((*(_142051_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6dc3812:;
		if (it != expr_end) {
			jule::Ptr<_1dcd71997_Fn> _142217_m = *it;
			{
				if ((!(_1c4498b54_containsTraitMethod(_142032_dest, &(_142217_m.get()._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1dcd71997_Fn>> &__jule_push_dest = (*(_142032_dest)).get()._field_Methods; __jule_push_dest.push(_142217_m); };
				};
			}
			_iter_next_1c6dc3812:;
			++it;
			goto _iter_begin_1c6dc3812;
		}
		_iter_end_1c6dc3812:;
	};
}



inline void _1c449922b_pushMethodsFromInherits(jule::Ptr<_1dcd83bb8_Trait>* _143133_dest, jule::Ptr<_1dcd83bb8_Trait>* _143152_src) {
	{
		auto expr = &((*(_143152_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6dc3b31:;
		if (it != expr_end) {
			jule::Ptr<_1dce892da_TypeSymbol> _143217_inh = *it;
			{
				jule::Ptr<_1dcd83bb8_Trait> _143317_t2 = _1dce8631a_Trait(_143217_inh.get()._field_Kind.ptr());;
				_1c4498e51_pushMethodsFromInherit(_143133_dest, &(_143317_t2));
			}
			_iter_next_1c6dc3b31:;
			++it;
			goto _iter_begin_1c6dc3b31;
		}
		_iter_end_1c6dc3b31:;
	};
}



inline jule::Bool _1c44994d4_isOpMethod(jule::Ptr<_1dcd71997_Fn>* _143916_m) {
	if ((((*(_143916_m)).get()._field_Generics.len() > 0LL) || ((*(_143916_m)).get()._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1dcd74648_FnIns> _14439_mi = (*(_143916_m)).get()._field_Instances[0LL];;
	;
	;
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1c449977b_isHeadDecl(jule::Ptr<_1dcd71997_Fn>* _145520_m) {
	if ((((*(_145520_m)).get()._field_Generics.len() > 0LL) || ((*(_145520_m)).get()._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1c44994d4_isOpMethod(_145520_m)) {
		return true;;
	};
	jule::Ptr<_1dcd74648_FnIns> _146213_mi = (*(_145520_m)).get()._field_Instances[0LL];;
	;
	return static__1dce0718c_Dispose(_1dcd60403_FindMethod(_146213_mi.get()._field_Owner.ptr(), jule::Str("Dispose", 7), false));;
}



inline jule::Ptr<_1dcd09369_Directive> _1c44a7a20_findDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>* _46623_directives, jule::Str _46654_tag) {
	{
		auto expr = _46623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4635e02:;
		if (it != expr_end) {
			jule::Ptr<_1dcd09369_Directive> _46717_dr = *it;
			{
				if ((_46717_dr.get()._field_Tag.get()._field_Kind == _46654_tag)) {
					return _46717_dr;;
				};
			}
			_iter_next_1d4635e02:;
			++it;
			goto _iter_begin_1d4635e02;
		}
		_iter_end_1d4635e02:;
	};
	return nullptr;;
}



inline jule::Bool _1c44a7da5_hasDirective(jule::Slice<jule::Ptr<_1dcd09369_Directive>>* _47618_directives, jule::Str _47649_tag) {
	return (_1c44a7a20_findDirective(_47618_directives, _47649_tag) != nullptr);;
}



inline jule::Bool _1c44a814c_shouldInitialized(jule::Ptr<_1dce82437_TypeKind>* _48327_t) {
	jule::Ptr<_1dce89b8c_Prim> _4849_prim = _1dce84b54_Prim((*(_48327_t)).ptr());;
	if ((_4849_prim != nullptr)) {
		return ((!(_1dce8d102_IsAny(_4849_prim.ptr()))) && (!(_1dce8cd8d_IsStr(_4849_prim.ptr()))));;
	};
	{
		
		if ((_1dce84db8_Sptr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1d4638b19:;
			{
				return false;;
			}
		}
		else if ((_1dce8657e_Map((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1d463870c:;
			{
				return false;;
			}
		}
		else if ((_1dce85acd_Slc((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1d4638784:;
			{
				return false;;
			}
		}
		else if ((_1dce8631a_Trait((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1d4638894:;
			{
				return false;;
			}
		}
		else if ((_1dce85d42_Fn((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1d463890a:;
			{
				return false;;
			}
		}
		else if ((_1dce85869_Arr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1d4638971:;
			{
				jule::Ptr<_1dce90ee5_Arr> _50017_arr = _1dce85869_Arr((*(_48327_t)).ptr());;
				return _1c44a814c_shouldInitialized(&(_50017_arr.get()._field_Elem));;
			}
		}
		else if ((_1dce860a6_Struct((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1d46389d7:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1d4636452:;
			{
				return true;;
			}
		}
		_match_end_1d4637eae:;
	};
}



inline void _23ab10cd2_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _23ab11035_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_23ab10cd2_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _23ab10b06_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_23ab10b06_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4440965:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1d4440965:;
			++it;
			goto _iter_begin_1d4440965;
		}
		_iter_end_1d4440965:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_23ab10b06_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4442093:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_23a986372_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_1d4442093:;
			++it;
			_519_i++;
			goto _iter_begin_1d4442093;
		}
		_iter_end_1d4442093:;
	};
	jule::outln(_4913_s);
}



inline void _23ab11244_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_23ab10cd2_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.15 @master", 18));
}



inline void _23ab11431_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _23ab11596_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _23ab117a5_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_23ab10cd2_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1d4713e58:;
			{
				_23ab11431_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1d4713bd3:;
			{
				_23ab11596_toolDistarch();
			}
		}
		else {
			_case_begin_1d44464a4:;
			{
				_23ab10cd2_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1d4713760:;
	};
}



inline void _23ab119b4_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_23ab10cd2_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _2388e75d2_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _2388e8a78_CppStd));
}



inline void _23ab11ca0_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_23ab10cd2_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1d4717148:;
			{
				({
					auto except = static__2398a53d5_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_23ab10cd2_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1d4716ab5:;
			{
				_23ab10cd2_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1d4716c5d:;
	};
}



inline jule::Bool _23ab12047_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1d47171e2:;
			{
				_23ab11035_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1d4718688:;
			{
				_23ab11244_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1d47186ee:;
			{
				_23ab117a5_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1d4717e5c:;
			{
				_23ab119b4_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1d4717ec3:;
			{
				_23ab11ca0_mod(_15320_args);
			}
		}
		else {
			_case_begin_1d4717de6:;
			{
				return false;;
			}
		}
		_match_end_1d47178b8:;
	};
	return true;;
}



inline void _23ab121ac_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _2399552cb_Args();;
	if ((_18913_args.len() < 2LL)) {
		_23ab121ac_showInfo();
		return;;
	};
	if (_23ab12047_processCommand(&(_18913_args))) {
		return;;
	};
	_1c4518168_compileCommand(&(_18913_args));
}



inline void _1c45151ba_init(void) {
	_2388e75d2_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_2398a4626_File> _1c4515473_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _23a9924c1_Dir((*(_4316_path)));;
	({
		auto except = static__2398979e3_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__23a994814_Create(_449_dir);
				if (!except.ok()) {
					_1de5b3ec9_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__2398a4cdb_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1de5b3ec9_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1c45155d8_clearObjects(void) {
	({
		auto except = static__239896250_Remove(_1c45166e9_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__23a994a23_Remove(_1c45149b1_OutDir);
}



inline void _1c45158d5_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_23aab5aab_Cmd> _7313_cmd = static__23aab5eb8_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_23a98b4ed_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _23aab6194_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1d471de41:;
					{
						static__1de591429_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1d471e1a5:;
					{
						static__1de591429_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1d471e073:;
					{
						static__1de591429_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1d471dec9:;
			};
			_1de5b3ec9_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _23aab65d4_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _2388e75d2_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1de591429_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1de5b3ec9_Throw(jule::Str());
	};
	_1c45155d8_clearObjects();
}



inline jule::Bool _1c4515b7c_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _23a989ead_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _23aa1b380_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1c4515d8b_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _2388e8a78_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1d47227b3:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1d4722b9d:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d4722c14:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_1d47229a0:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_2388e9cbb_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _1c451609a_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _2388e8a78_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1d472472c:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1d4724a4b:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d4724ab2:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_1d472484d:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_2388e9cbb_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1c45164eb_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1de448d4d_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_2388e8858_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _2388e75d2_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1d4726c07:;
			{
				_1c451609a_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1d4726c6d:;
			{
				_1c4515d8b_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1d472708c:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4727a0a:;
		if (it != expr_end) {
			jule::Ptr<_1dcdcc6d4_ImportInfo> *_17112_u = it;
			{
				if (((*(_17112_u)).get()._field_Binded && _1c4515b7c_isCppSourceFile((*(_17112_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17112_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_1d4727a0a:;
			++it;
			goto _iter_begin_1d4727a0a;
		}
		_iter_end_1d4727a0a:;
	};
	if ((!(_1c4515011_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_1c4515011_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4727e8e:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				(_16113_cmd).append(" ", 1);
				_16113_cmd+=(*(_18612_pass));
			}
			_iter_next_1d4727e8e:;
			++it;
			goto _iter_begin_1d4727e8e;
		}
		_iter_end_1d4727e8e:;
	};
	if (_23ab0c9e3_Os.equal("windows", 7)) {
		(_16113_cmd).append(" -lshell32", 10);
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1c45166e9_getCompilePath(void) {
	return _23a991866_Join(jule::Slice<jule::Str>::make({_1c45149b1_OutDir,_1c4514c47_OutName}));;
}



inline void _1c451693b_applyTargetIndependentOptimizations(jule::Ptr<_1de448d4d_IR>* _20545_ir) {
	jule::Ptr<_1de58e0a3_Optimizer> _20613_opt = static__1de58e4d2_New(_20545_ir);;
	_1de590923_Optimize(_20613_opt.ptr());
}



inline void _1c4516aa1_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _2388e75d2_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1d472ae1a:;
			{
				_1de5b3ec9_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1d472aaeb:;
			{
				if (_2388e8858_CompilerPath.empty()) {
					_2388e8858_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1d472ab62:;
			{
				if (_2388e8858_CompilerPath.empty()) {
					_2388e8858_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1d472aa85:;
			{
				_1de5b3ec9_Throw((jule::Str("invalid option value for --compiler: ", 37) + _2388e75d2_Compiler));
			}
		}
		_match_end_1d472a8cb:;
	};
}



inline void _1c4516c6b_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1de5b3ec9_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1c4516e7a_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1de5b3ec9_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1c4517189_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_1de5b3ec9_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _23a98b4ed_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_1de5b3ec9_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_1c4516e7a_checkTargetOs(_25310_os);
		_23ab0c9e3_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_1c4516c6b_checkTargetArch(_25314_arch);
		_23ab0ccac_Arch=_25314_arch;
	};
	_24a227b48_UpdateTarget();
}



inline void _1c4517398_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_1de5b3ec9_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1d4732064:;
			{
				goto _match_end_1d4732152;
			}
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1d4732509:;
			{
				_1de451916_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else if (_match_expr == jule::Str("L2", 2)) {
			_case_begin_1d4732570:;
			{
				_1de451916_PushOptLevel(static_cast<jule::I64>(2LL));
			}
		}
		else {
			_case_begin_1d4731dbb:;
			{
				_1de5b3ec9_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1d4732152:;
	};
}



inline void _1c451771c_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _2388e8a78_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d47325d6:;
			{
				goto _match_end_1d47337a2;
			}
		}
		else {
			_case_begin_1d47335e8:;
			{
				_1de5b3ec9_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _2388e8a78_CppStd));
			}
		}
		_match_end_1d47337a2:;
	};
}



inline jule::Slice<jule::Str> _1c45179a3_checkFlags(jule::Slice<jule::Str>* _29416_args) {
	jule::Str _29513_opt = jule::Str("L0", 2);;
	jule::Str _29613_target = jule::Str("native-native", 13);;
	jule::Ptr<_1c451002d_FlagSet> _29813_fs = static__1c4510319_New();;
	_1d47354da_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29513_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1d47354da_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29613_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1d47354da_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1c4515011_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2388e8d20_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2388e9095_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1d47354da_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2388e75d2_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1d47354da_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2388e8858_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2388e9cbb_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2388e9628_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2388e9a02_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1d47354da_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2388e8a78_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1de44ea9b_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1de44eda9_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1de450173_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1de450481_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1de45074a_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1de450a14_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1de450ccd_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1de4511a7_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1de451471_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	_1d473d38e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1de45173a_StdInternalNosafe)))), jule::Str("opt-internal-nosafe", 19), 0LL, jule::Str("Special optimizations for std::internal::nosafe", 47));
	jule::Slice<jule::Str> _32213_content = ({
		auto except = _1c45110d9_Parse(_29813_fs.ptr(), (*(_29416_args)));
		(except.ok()) ? (except.result) : ({
			_1de5b3ec9_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1c4516aa1_checkCompilerFlag();
	_1c451771c_checkCppStdFlag();
	_1c4517189_checkTargetFlag(&(_29613_target));
	_1c4517398_checkOptFlag(&(_29513_opt));
	return _32213_content;;
}



inline void _1c4517bb2_setupSemaFlags(jule::I64* _33524_flags) {
	if (_2388e8d20_Shadowing) {
		(*(_33524_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1de448d4d_IR> _1c4517e59_buildIr(jule::Slice<jule::Str>* _34113_args) {
	jule::Slice<jule::Str> _3429_content = _1c45179a3_checkFlags(_34113_args);;
	jule::I64 _34413_semaFlags = static_cast<jule::I64>(0LL);;
	_1c4517bb2_setupSemaFlags(&(_34413_semaFlags));
	if ((_3429_content.len() == 0LL)) {
		_1de5b3ec9_Throw(_23aa28c94_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3429_content.len() > 1LL)) {
		_1de5b3ec9_Throw((jule::Str("undefined content: ", 19) + _3429_content[1LL]));
	};
	jule::Str _35214_path;;
	jule::Bool _35220_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _23a991da5_Abs(_3429_content[0LL]);
		_35214_path = __jule_assign_result.__jule_result_arg0;
		_35220_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35220_ok))) {
		_1de5b3ec9_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_2398a6c22_Status> _3589_inf = ({
		auto except = static__2398979e3_Of(_23ab0be43_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1de5b3ec9_Throw(_23aa28c94_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_2398a6c22_Status>(nullptr);});
	});;
	if ((!(_2398a70da_IsDir(_3589_inf.ptr())))) {
		_1de5b3ec9_Throw(_23aa28c94_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1de448d4d_IR> _36614_ir;;
	jule::Slice<_23aa28854_Log> _36618_logs;;
	({
		__jule_tuple_x_1de448d4d_IR__jule_tuple_s_23aa28854_Log __jule_assign_result = static__1de44928d_Build(_35214_path, _34413_semaFlags);
		_36614_ir = __jule_assign_result.__jule_result_arg0;
		_36618_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36614_ir == nullptr) && (_36618_logs == nullptr))) {
		_1de5b3ec9_Throw(_23aa28c94_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_35214_path, &__jule_any_type5)})));
	};
	if ((_36618_logs != nullptr)) {
		static__1de5b355b_PrintLogs(&(_36618_logs));
		_1de5b3ec9_Throw(jule::Str());
	};
	return _36614_ir;;
}



inline void _1c4518168_compileCommand(jule::Slice<jule::Str>* _38124_args) {
	(*(_38124_args))=(*(_38124_args)).slice(1LL);
	if ((*(_38124_args))[0LL].equal("test", 4)) {
		_2388e935e_Test=true;
		(*(_38124_args))=(*(_38124_args)).slice(1LL);
	};
	jule::Ptr<_1de448d4d_IR> _38713_ir = _1c4517e59_buildIr(_38124_args);;
	;
	if ((!(_2388e935e_Test))) {
		jule::Ptr<_1dcd71997_Fn> _39217_main = _1dcdd1760_FindFn(_38713_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_39217_main == nullptr)) {
			_1de5b3ec9_Throw(_23aa28c94_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1c451693b_applyTargetIndependentOptimizations(&(_38713_ir));
	_1de44a206_Order(_38713_ir.ptr());
	jule::Str _40310_compiler;;
	jule::Str _40320_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1c45164eb_genCompileCmd(_1c45166e9_getCompilePath(), &(_38713_ir));
		_40310_compiler = __jule_assign_result.__jule_result_arg0;
		_40320_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1c448bb8b_ObjectCoder> _40513_oc = static__1c448c065_New(&(_38713_ir), _1c448a2e9_SerializationInfo{._field_Compiler=_40310_compiler, ._field_CompilerCommand=_40320_compilerCmd});;
	if (_2388e935e_Test) {
		jule::Ptr<_23b44d377_TestCoder> _41017_tc = static__23b44d7a6_New(&(_40513_oc));;
		_23b44e9d8_Serialize(_41017_tc);
	} else {
		_1c4498170_Serialize(_40513_oc);
	};
	jule::Str _4169_path = _1c45166e9_getCompilePath();;
	jule::Ptr<_2398a4626_File> _41713_file = _1c4515473_openOutput(&(_4169_path));;
	({
		auto except = _2398a6051_WriteStr(_41713_file.ptr(), &(_40513_oc.get()._field_Obj));
		if (!except.ok()) {
			_1de5b3ec9_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _2398a622c_Close(_41713_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:421:5"));
	});
	if ((!(_2388e9095_Transpilation))) {
		_1c45158d5_compileIr(_40310_compiler, _40320_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_23ab0cdde_init();
	_24a227cad_init();
	_1c45151ba_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}